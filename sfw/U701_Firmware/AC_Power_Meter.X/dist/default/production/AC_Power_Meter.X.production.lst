

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 05 23:42:00 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   148                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   149  0000                     
   150                           ; Version 1.45 (B)
   151                           ; Generated 30/01/2018 GMT
   152                           ; 
   153                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC18LF67K40 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     
   185                           	psect	idataBANK0
   186  01816E                     __pidataBANK0:
   187                           	opt stack 0
   188                           
   189                           ;initializer for _dimming_period
   190  01816E  7FEE               	dw	32750
   191                           
   192                           ;initializer for _TRIAC_Firing_Angle
   193                           ;main.c: 71: volatile double FVR_ADC_Result;
   194                           ;main.c: 72: volatile double AVSS_ADC_Result;
   195                           ;main.c: 73: volatile double ADC_Result_Scaling;
   196                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   197                           ;main.c: 75: volatile double POS12_ADC_Result;
   198                           ;main.c: 76: volatile double Temp_ADC_Result;
   199                           ;main.c: 77: volatile double Temp_ADC_Offset = -267.409;
   200                           ;main.c: 78: double Vpk_const = 169.7056274847714;
   201                           ;main.c: 79: volatile double Vpk;
   202                           ;main.c: 80: volatile double Ipk;
   203                           ;main.c: 81: volatile double Imeas;
   204                           ;main.c: 82: double Irms_offset = -0.113;
   205  018170  0000               	dw	0
   206  018172  42B4               	dw	17076
   207                           
   208                           	psect	idataBANK2
   209  017F6C                     __pidataBANK2:
   210                           	opt stack 0
   211                           
   212                           ;initializer for getCauseOfResetString@strings
   213  017F6C  1E                 	db	low STR_123
   214  017F6D  FE                 	db	high STR_123
   215  017F6E  8E                 	db	low STR_124
   216  017F6F  FE                 	db	high STR_124
   217  017F70  2E                 	db	low STR_125
   218  017F71  FE                 	db	high STR_125
   219  017F72  C6                 	db	low STR_126
   220  017F73  FD                 	db	high STR_126
   221  017F74  A0                 	db	low (STR_128+9)
   222  017F75  FA                 	db	high (STR_128+9)
   223  017F76  97                 	db	low STR_128
   224  017F77  FA                 	db	high STR_128
   225  017F78  B0                 	db	low STR_129
   226  017F79  FC                 	db	high STR_129
   227  017F7A  72                 	db	low STR_130
   228  017F7B  FD                 	db	high STR_130
   229  017F7C  46                 	db	low STR_131
   230  017F7D  FD                 	db	high STR_131
   231                           
   232                           ;initializer for getDeviceIDString@F17550
   233  017F7E  44                 	db	low STR_120
   234  017F7F  FF                 	db	high STR_120
   235  017F80  10                 	db	low STR_121
   236  017F81  FF                 	db	high STR_121
   237  017F82  7C                 	db	low STR_68
   238  017F83  FF                 	db	high STR_68
   239                           
   240                           ;initializer for _Irms_offset
   241  017F84  6C8B               	dw	27787
   242  017F86  BDE7               	dw	48615
   243                           
   244                           ;initializer for _Vpk_const
   245                           ;main.c: 71: volatile double FVR_ADC_Result;
   246                           ;main.c: 72: volatile double AVSS_ADC_Result;
   247                           ;main.c: 73: volatile double ADC_Result_Scaling;
   248                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   249                           ;main.c: 75: volatile double POS12_ADC_Result;
   250                           ;main.c: 76: volatile double Temp_ADC_Result;
   251                           ;main.c: 77: volatile double Temp_ADC_Offset = -267.409;
   252  017F88  B4A4               	dw	46244
   253  017F8A  4329               	dw	17193
   254                           
   255                           ;initializer for _Temp_ADC_Offset
   256  017F8C  B45A               	dw	46170
   257  017F8E  C385               	dw	50053
   258                           
   259                           	psect	mediumconst
   260  00EBBC                     __pmediumconst:
   261                           	opt stack 0
   262  00EBBC  00                 	db	0
   263  00EBBD                     __powers_:
   264                           	opt stack 0
   265  00EBBD  0000               	dw	0
   266  00EBBF  3F80               	dw	16256
   267  00EBC1  0000               	dw	0
   268  00EBC3  4120               	dw	16672
   269  00EBC5  0000               	dw	0
   270  00EBC7  42C8               	dw	17096
   271  00EBC9  0000               	dw	0
   272  00EBCB  447A               	dw	17530
   273  00EBCD  4000               	dw	16384
   274  00EBCF  461C               	dw	17948
   275  00EBD1  5000               	dw	20480
   276  00EBD3  47C3               	dw	18371
   277  00EBD5  2400               	dw	9216
   278  00EBD7  4974               	dw	18804
   279  00EBD9  9680               	dw	38528
   280  00EBDB  4B18               	dw	19224
   281  00EBDD  BC20               	dw	48160
   282  00EBDF  4CBE               	dw	19646
   283  00EBE1  6B28               	dw	27432
   284  00EBE3  4E6E               	dw	20078
   285  00EBE5  02F9               	dw	761
   286  00EBE7  5015               	dw	20501
   287  00EBE9  78EC               	dw	30956
   288  00EBEB  60AD               	dw	24749
   289  00EBED  F2CA               	dw	62154
   290  00EBEF  7149               	dw	29001
   291  00EBF1                     __end_of__powers_:
   292                           	opt stack 0
   293  00EBF1                     __npowers_:
   294                           	opt stack 0
   295  00EBF1  0000               	dw	0
   296  00EBF3  3F80               	dw	16256
   297  00EBF5  CCCD               	dw	52429
   298  00EBF7  3DCC               	dw	15820
   299  00EBF9  D70A               	dw	55050
   300  00EBFB  3C23               	dw	15395
   301  00EBFD  126F               	dw	4719
   302  00EBFF  3A83               	dw	14979
   303  00EC01  B717               	dw	46871
   304  00EC03  38D1               	dw	14545
   305  00EC05  C5AC               	dw	50604
   306  00EC07  3727               	dw	14119
   307  00EC09  37BD               	dw	14269
   308  00EC0B  3586               	dw	13702
   309  00EC0D  BF95               	dw	49045
   310  00EC0F  33D6               	dw	13270
   311  00EC11  CC77               	dw	52343
   312  00EC13  322B               	dw	12843
   313  00EC15  705F               	dw	28767
   314  00EC17  3089               	dw	12425
   315  00EC19  E6FF               	dw	59135
   316  00EC1B  2EDB               	dw	11995
   317  00EC1D  E508               	dw	58632
   318  00EC1F  1E3C               	dw	7740
   319  00EC21  4260               	dw	16992
   320  00EC23  0DA2               	dw	3490
   321  00EC25                     __end_of__npowers_:
   322                           	opt stack 0
   323  00EC25                     _dpowers:
   324                           	opt stack 0
   325  00EC25  0001               	dw	1
   326  00EC27  0000               	dw	0
   327  00EC29  000A               	dw	10
   328  00EC2B  0000               	dw	0
   329  00EC2D  0064               	dw	100
   330  00EC2F  0000               	dw	0
   331  00EC31  03E8               	dw	1000
   332  00EC33  0000               	dw	0
   333  00EC35  2710               	dw	10000
   334  00EC37  0000               	dw	0
   335  00EC39  86A0               	dw	34464
   336  00EC3B  0001               	dw	1
   337  00EC3D  4240               	dw	16960
   338  00EC3F  000F               	dw	15
   339  00EC41  9680               	dw	38528
   340  00EC43  0098               	dw	152
   341  00EC45  E100               	dw	57600
   342  00EC47  05F5               	dw	1525
   343  00EC49  CA00               	dw	51712
   344  00EC4B  3B9A               	dw	15258
   345  00EC4D                     __end_of_dpowers:
   346                           	opt stack 0
   347  00EC4D                     _hexpowers:
   348                           	opt stack 0
   349  00EC4D  0001               	dw	1
   350  00EC4F  0000               	dw	0
   351  00EC51  0010               	dw	16
   352  00EC53  0000               	dw	0
   353  00EC55  0100               	dw	256
   354  00EC57  0000               	dw	0
   355  00EC59  1000               	dw	4096
   356  00EC5B  0000               	dw	0
   357  00EC5D  0000               	dw	0
   358  00EC5F  0001               	dw	1
   359  00EC61  0000               	dw	0
   360  00EC63  0010               	dw	16
   361  00EC65  0000               	dw	0
   362  00EC67  0100               	dw	256
   363  00EC69  0000               	dw	0
   364  00EC6B  1000               	dw	4096
   365  00EC6D                     __end_of_hexpowers:
   366                           	opt stack 0
   367  00EC6D                     atan@coeff_a:
   368                           	opt stack 0
   369  00EC6D  3C06               	dw	15366
   370  00EC6F  4204               	dw	16900
   371  00EC71  9F7D               	dw	40829
   372  00EC73  426A               	dw	17002
   373  00EC75  905C               	dw	36956
   374  00EC77  4201               	dw	16897
   375  00EC79  4D60               	dw	19808
   376  00EC7B  40BB               	dw	16571
   377  00EC7D  EC51               	dw	60497
   378  00EC7F  3E47               	dw	15943
   379  00EC81  8DDE               	dw	36318
   380  00EC83  BB1F               	dw	47903
   381  00EC85                     __end_ofatan@coeff_a:
   382                           	opt stack 0
   383  00EC85                     sin@coeff_a:
   384                           	opt stack 0
   385  00EC85  F3EC               	dw	62444
   386  00EC87  484A               	dw	18506
   387  00EC89  9535               	dw	38197
   388  00EC8B  C795               	dw	51093
   389  00EC8D  C117               	dw	49431
   390  00EC8F  45DC               	dw	17884
   391  00EC91  DBFD               	dw	56317
   392  00EC93  C36D               	dw	50029
   393  00EC95  B372               	dw	45938
   394  00EC97  4033               	dw	16435
   395  00EC99                     __end_ofsin@coeff_a:
   396                           	opt stack 0
   397  00EC99                     atan@coeff_b:
   398                           	opt stack 0
   399  00EC99  3C06               	dw	15366
   400  00EC9B  4204               	dw	16900
   401  00EC9D  59C0               	dw	22976
   402  00EC9F  428B               	dw	17035
   403  00ECA1  0474               	dw	1140
   404  00ECA3  4244               	dw	16964
   405  00ECA5  9BF9               	dw	39929
   406  00ECA7  414F               	dw	16719
   407  00ECA9  0000               	dw	0
   408  00ECAB  3F80               	dw	16256
   409  00ECAD                     __end_ofatan@coeff_b:
   410                           	opt stack 0
   411  00ECAD                     sin@coeff_b:
   412                           	opt stack 0
   413  00ECAD  342B               	dw	13355
   414  00ECAF  4801               	dw	18433
   415  00ECB1  9D7F               	dw	40319
   416  00ECB3  45B0               	dw	17840
   417  00ECB5  FFE7               	dw	65511
   418  00ECB7  42D9               	dw	17113
   419  00ECB9  0000               	dw	0
   420  00ECBB  3F80               	dw	16256
   421  00ECBD                     __end_ofsin@coeff_b:
   422                           	opt stack 0
   423  00ECBD                     STR_114:
   424  00ECBD  4C                 	db	76	;'L'
   425  00ECBE  69                 	db	105	;'i'
   426  00ECBF  73                 	db	115	;'s'
   427  00ECC0  74                 	db	116	;'t'
   428  00ECC1  20                 	db	32
   429  00ECC2  6F                 	db	111	;'o'
   430  00ECC3  66                 	db	102	;'f'
   431  00ECC4  20                 	db	32
   432  00ECC5  73                 	db	115	;'s'
   433  00ECC6  75                 	db	117	;'u'
   434  00ECC7  70                 	db	112	;'p'
   435  00ECC8  70                 	db	112	;'p'
   436  00ECC9  6F                 	db	111	;'o'
   437  00ECCA  72                 	db	114	;'r'
   438  00ECCB  74                 	db	116	;'t'
   439  00ECCC  65                 	db	101	;'e'
   440  00ECCD  64                 	db	100	;'d'
   441  00ECCE  20                 	db	32
   442  00ECCF  63                 	db	99	;'c'
   443  00ECD0  6F                 	db	111	;'o'
   444  00ECD1  6D                 	db	109	;'m'
   445  00ECD2  6D                 	db	109	;'m'
   446  00ECD3  61                 	db	97	;'a'
   447  00ECD4  6E                 	db	110	;'n'
   448  00ECD5  64                 	db	100	;'d'
   449  00ECD6  73                 	db	115	;'s'
   450  00ECD7  3A                 	db	58	;':'
   451  00ECD8  0A                 	db	10
   452  00ECD9  0D                 	db	13
   453  00ECDA  44                 	db	68	;'D'
   454  00ECDB  65                 	db	101	;'e'
   455  00ECDC  76                 	db	118	;'v'
   456  00ECDD  69                 	db	105	;'i'
   457  00ECDE  63                 	db	99	;'c'
   458  00ECDF  65                 	db	101	;'e'
   459  00ECE0  20                 	db	32
   460  00ECE1  43                 	db	67	;'C'
   461  00ECE2  6F                 	db	111	;'o'
   462  00ECE3  6D                 	db	109	;'m'
   463  00ECE4  6D                 	db	109	;'m'
   464  00ECE5  61                 	db	97	;'a'
   465  00ECE6  6E                 	db	110	;'n'
   466  00ECE7  64                 	db	100	;'d'
   467  00ECE8  73                 	db	115	;'s'
   468  00ECE9  3A                 	db	58	;':'
   469  00ECEA  0A                 	db	10
   470  00ECEB  0D                 	db	13
   471  00ECEC  20                 	db	32
   472  00ECED  20                 	db	32
   473  00ECEE  20                 	db	32
   474  00ECEF  52                 	db	82	;'R'
   475  00ECF0  65                 	db	101	;'e'
   476  00ECF1  73                 	db	115	;'s'
   477  00ECF2  65                 	db	101	;'e'
   478  00ECF3  74                 	db	116	;'t'
   479  00ECF4  3A                 	db	58	;':'
   480  00ECF5  20                 	db	32
   481  00ECF6  43                 	db	67	;'C'
   482  00ECF7  6C                 	db	108	;'l'
   483  00ECF8  65                 	db	101	;'e'
   484  00ECF9  61                 	db	97	;'a'
   485  00ECFA  72                 	db	114	;'r'
   486  00ECFB  73                 	db	115	;'s'
   487  00ECFC  20                 	db	32
   488  00ECFD  74                 	db	116	;'t'
   489  00ECFE  68                 	db	104	;'h'
   490  00ECFF  65                 	db	101	;'e'
   491  00ED00  20                 	db	32
   492  00ED01  74                 	db	116	;'t'
   493  00ED02  65                 	db	101	;'e'
   494  00ED03  72                 	db	114	;'r'
   495  00ED04  6D                 	db	109	;'m'
   496  00ED05  69                 	db	105	;'i'
   497  00ED06  6E                 	db	110	;'n'
   498  00ED07  61                 	db	97	;'a'
   499  00ED08  6C                 	db	108	;'l'
   500  00ED09  20                 	db	32
   501  00ED0A  61                 	db	97	;'a'
   502  00ED0B  6E                 	db	110	;'n'
   503  00ED0C  64                 	db	100	;'d'
   504  00ED0D  20                 	db	32
   505  00ED0E  72                 	db	114	;'r'
   506  00ED0F  65                 	db	101	;'e'
   507  00ED10  73                 	db	115	;'s'
   508  00ED11  65                 	db	101	;'e'
   509  00ED12  74                 	db	116	;'t'
   510  00ED13  73                 	db	115	;'s'
   511  00ED14  20                 	db	32
   512  00ED15  74                 	db	116	;'t'
   513  00ED16  68                 	db	104	;'h'
   514  00ED17  65                 	db	101	;'e'
   515  00ED18  20                 	db	32
   516  00ED19  6D                 	db	109	;'m'
   517  00ED1A  69                 	db	105	;'i'
   518  00ED1B  63                 	db	99	;'c'
   519  00ED1C  72                 	db	114	;'r'
   520  00ED1D  6F                 	db	111	;'o'
   521  00ED1E  0A                 	db	10
   522  00ED1F  0D                 	db	13
   523  00ED20  20                 	db	32
   524  00ED21  20                 	db	32
   525  00ED22  20                 	db	32
   526  00ED23  43                 	db	67	;'C'
   527  00ED24  6C                 	db	108	;'l'
   528  00ED25  65                 	db	101	;'e'
   529  00ED26  61                 	db	97	;'a'
   530  00ED27  72                 	db	114	;'r'
   531  00ED28  3A                 	db	58	;':'
   532  00ED29  20                 	db	32
   533  00ED2A  43                 	db	67	;'C'
   534  00ED2B  6C                 	db	108	;'l'
   535  00ED2C  65                 	db	101	;'e'
   536  00ED2D  61                 	db	97	;'a'
   537  00ED2E  72                 	db	114	;'r'
   538  00ED2F  73                 	db	115	;'s'
   539  00ED30  20                 	db	32
   540  00ED31  74                 	db	116	;'t'
   541  00ED32  68                 	db	104	;'h'
   542  00ED33  65                 	db	101	;'e'
   543  00ED34  20                 	db	32
   544  00ED35  74                 	db	116	;'t'
   545  00ED36  65                 	db	101	;'e'
   546  00ED37  72                 	db	114	;'r'
   547  00ED38  6D                 	db	109	;'m'
   548  00ED39  69                 	db	105	;'i'
   549  00ED3A  6E                 	db	110	;'n'
   550  00ED3B  61                 	db	97	;'a'
   551  00ED3C  6C                 	db	108	;'l'
   552  00ED3D  20                 	db	32
   553  00ED3E  62                 	db	98	;'b'
   554  00ED3F  75                 	db	117	;'u'
   555  00ED40  74                 	db	116	;'t'
   556  00ED41  20                 	db	32
   557  00ED42  64                 	db	100	;'d'
   558  00ED43  6F                 	db	111	;'o'
   559  00ED44  65                 	db	101	;'e'
   560  00ED45  73                 	db	115	;'s'
   561  00ED46  6E                 	db	110	;'n'
   562  00ED47  27                 	db	39
   563  00ED48  74                 	db	116	;'t'
   564  00ED49  20                 	db	32
   565  00ED4A  72                 	db	114	;'r'
   566  00ED4B  65                 	db	101	;'e'
   567  00ED4C  73                 	db	115	;'s'
   568  00ED4D  65                 	db	101	;'e'
   569  00ED4E  74                 	db	116	;'t'
   570  00ED4F  20                 	db	32
   571  00ED50  74                 	db	116	;'t'
   572  00ED51  68                 	db	104	;'h'
   573  00ED52  65                 	db	101	;'e'
   574  00ED53  20                 	db	32
   575  00ED54  6D                 	db	109	;'m'
   576  00ED55  69                 	db	105	;'i'
   577  00ED56  63                 	db	99	;'c'
   578  00ED57  72                 	db	114	;'r'
   579  00ED58  6F                 	db	111	;'o'
   580  00ED59  0A                 	db	10
   581  00ED5A  0D                 	db	13
   582  00ED5B  20                 	db	32
   583  00ED5C  20                 	db	32
   584  00ED5D  20                 	db	32
   585  00ED5E  43                 	db	67	;'C'
   586  00ED5F  61                 	db	97	;'a'
   587  00ED60  75                 	db	117	;'u'
   588  00ED61  73                 	db	115	;'s'
   589  00ED62  65                 	db	101	;'e'
   590  00ED63  20                 	db	32
   591  00ED64  6F                 	db	111	;'o'
   592  00ED65  66                 	db	102	;'f'
   593  00ED66  20                 	db	32
   594  00ED67  52                 	db	82	;'R'
   595  00ED68  65                 	db	101	;'e'
   596  00ED69  73                 	db	115	;'s'
   597  00ED6A  65                 	db	101	;'e'
   598  00ED6B  74                 	db	116	;'t'
   599  00ED6C  3F                 	db	63	;'?'
   600  00ED6D  3A                 	db	58	;':'
   601  00ED6E  20                 	db	32
   602  00ED6F  52                 	db	82	;'R'
   603  00ED70  65                 	db	101	;'e'
   604  00ED71  74                 	db	116	;'t'
   605  00ED72  75                 	db	117	;'u'
   606  00ED73  72                 	db	114	;'r'
   607  00ED74  6E                 	db	110	;'n'
   608  00ED75  73                 	db	115	;'s'
   609  00ED76  20                 	db	32
   610  00ED77  74                 	db	116	;'t'
   611  00ED78  68                 	db	104	;'h'
   612  00ED79  65                 	db	101	;'e'
   613  00ED7A  20                 	db	32
   614  00ED7B  63                 	db	99	;'c'
   615  00ED7C  61                 	db	97	;'a'
   616  00ED7D  75                 	db	117	;'u'
   617  00ED7E  73                 	db	115	;'s'
   618  00ED7F  65                 	db	101	;'e'
   619  00ED80  20                 	db	32
   620  00ED81  6F                 	db	111	;'o'
   621  00ED82  66                 	db	102	;'f'
   622  00ED83  20                 	db	32
   623  00ED84  74                 	db	116	;'t'
   624  00ED85  68                 	db	104	;'h'
   625  00ED86  65                 	db	101	;'e'
   626  00ED87  20                 	db	32
   627  00ED88  6D                 	db	109	;'m'
   628  00ED89  6F                 	db	111	;'o'
   629  00ED8A  73                 	db	115	;'s'
   630  00ED8B  74                 	db	116	;'t'
   631  00ED8C  20                 	db	32
   632  00ED8D  72                 	db	114	;'r'
   633  00ED8E  65                 	db	101	;'e'
   634  00ED8F  63                 	db	99	;'c'
   635  00ED90  65                 	db	101	;'e'
   636  00ED91  6E                 	db	110	;'n'
   637  00ED92  74                 	db	116	;'t'
   638  00ED93  20                 	db	32
   639  00ED94  64                 	db	100	;'d'
   640  00ED95  65                 	db	101	;'e'
   641  00ED96  76                 	db	118	;'v'
   642  00ED97  69                 	db	105	;'i'
   643  00ED98  63                 	db	99	;'c'
   644  00ED99  65                 	db	101	;'e'
   645  00ED9A  20                 	db	32
   646  00ED9B  72                 	db	114	;'r'
   647  00ED9C  65                 	db	101	;'e'
   648  00ED9D  73                 	db	115	;'s'
   649  00ED9E  65                 	db	101	;'e'
   650  00ED9F  74                 	db	116	;'t'
   651  00EDA0  0A                 	db	10
   652  00EDA1  0D                 	db	13
   653  00EDA2  20                 	db	32
   654  00EDA3  20                 	db	32
   655  00EDA4  20                 	db	32
   656  00EDA5  2A                 	db	42
   657  00EDA6  49                 	db	73	;'I'
   658  00EDA7  44                 	db	68	;'D'
   659  00EDA8  4E                 	db	78	;'N'
   660  00EDA9  3F                 	db	63	;'?'
   661  00EDAA  3A                 	db	58	;':'
   662  00EDAB  20                 	db	32
   663  00EDAC  52                 	db	82	;'R'
   664  00EDAD  65                 	db	101	;'e'
   665  00EDAE  74                 	db	116	;'t'
   666  00EDAF  75                 	db	117	;'u'
   667  00EDB0  72                 	db	114	;'r'
   668  00EDB1  6E                 	db	110	;'n'
   669  00EDB2  73                 	db	115	;'s'
   670  00EDB3  20                 	db	32
   671  00EDB4  64                 	db	100	;'d'
   672  00EDB5  65                 	db	101	;'e'
   673  00EDB6  76                 	db	118	;'v'
   674  00EDB7  69                 	db	105	;'i'
   675  00EDB8  63                 	db	99	;'c'
   676  00EDB9  65                 	db	101	;'e'
   677  00EDBA  20                 	db	32
   678  00EDBB  69                 	db	105	;'i'
   679  00EDBC  64                 	db	100	;'d'
   680  00EDBD  65                 	db	101	;'e'
   681  00EDBE  6E                 	db	110	;'n'
   682  00EDBF  74                 	db	116	;'t'
   683  00EDC0  69                 	db	105	;'i'
   684  00EDC1  66                 	db	102	;'f'
   685  00EDC2  69                 	db	105	;'i'
   686  00EDC3  63                 	db	99	;'c'
   687  00EDC4  61                 	db	97	;'a'
   688  00EDC5  74                 	db	116	;'t'
   689  00EDC6  69                 	db	105	;'i'
   690  00EDC7  6F                 	db	111	;'o'
   691  00EDC8  6E                 	db	110	;'n'
   692  00EDC9  20                 	db	32
   693  00EDCA  73                 	db	115	;'s'
   694  00EDCB  74                 	db	116	;'t'
   695  00EDCC  72                 	db	114	;'r'
   696  00EDCD  69                 	db	105	;'i'
   697  00EDCE  6E                 	db	110	;'n'
   698  00EDCF  67                 	db	103	;'g'
   699  00EDD0  0A                 	db	10
   700  00EDD1  0D                 	db	13
   701  00EDD2  20                 	db	32
   702  00EDD3  20                 	db	32
   703  00EDD4  20                 	db	32
   704  00EDD5  44                 	db	68	;'D'
   705  00EDD6  65                 	db	101	;'e'
   706  00EDD7  76                 	db	118	;'v'
   707  00EDD8  69                 	db	105	;'i'
   708  00EDD9  63                 	db	99	;'c'
   709  00EDDA  65                 	db	101	;'e'
   710  00EDDB  20                 	db	32
   711  00EDDC  4F                 	db	79	;'O'
   712  00EDDD  6E                 	db	110	;'n'
   713  00EDDE  20                 	db	32
   714  00EDDF  54                 	db	84	;'T'
   715  00EDE0  69                 	db	105	;'i'
   716  00EDE1  6D                 	db	109	;'m'
   717  00EDE2  65                 	db	101	;'e'
   718  00EDE3  3F                 	db	63	;'?'
   719  00EDE4  3A                 	db	58	;':'
   720  00EDE5  20                 	db	32
   721  00EDE6  52                 	db	82	;'R'
   722  00EDE7  65                 	db	101	;'e'
   723  00EDE8  74                 	db	116	;'t'
   724  00EDE9  75                 	db	117	;'u'
   725  00EDEA  72                 	db	114	;'r'
   726  00EDEB  6E                 	db	110	;'n'
   727  00EDEC  73                 	db	115	;'s'
   728  00EDED  20                 	db	32
   729  00EDEE  64                 	db	100	;'d'
   730  00EDEF  65                 	db	101	;'e'
   731  00EDF0  76                 	db	118	;'v'
   732  00EDF1  69                 	db	105	;'i'
   733  00EDF2  63                 	db	99	;'c'
   734  00EDF3  65                 	db	101	;'e'
   735  00EDF4  20                 	db	32
   736  00EDF5  6F                 	db	111	;'o'
   737  00EDF6  6E                 	db	110	;'n'
   738  00EDF7  20                 	db	32
   739  00EDF8  74                 	db	116	;'t'
   740  00EDF9  69                 	db	105	;'i'
   741  00EDFA  6D                 	db	109	;'m'
   742  00EDFB  65                 	db	101	;'e'
   743  00EDFC  20                 	db	32
   744  00EDFD  73                 	db	115	;'s'
   745  00EDFE  69                 	db	105	;'i'
   746  00EDFF  6E                 	db	110	;'n'
   747  00EE00  63                 	db	99	;'c'
   748  00EE01  65                 	db	101	;'e'
   749  00EE02  20                 	db	32
   750  00EE03  6C                 	db	108	;'l'
   751  00EE04  61                 	db	97	;'a'
   752  00EE05  73                 	db	115	;'s'
   753  00EE06  74                 	db	116	;'t'
   754  00EE07  20                 	db	32
   755  00EE08  64                 	db	100	;'d'
   756  00EE09  65                 	db	101	;'e'
   757  00EE0A  76                 	db	118	;'v'
   758  00EE0B  69                 	db	105	;'i'
   759  00EE0C  63                 	db	99	;'c'
   760  00EE0D  65                 	db	101	;'e'
   761  00EE0E  20                 	db	32
   762  00EE0F  72                 	db	114	;'r'
   763  00EE10  65                 	db	101	;'e'
   764  00EE11  73                 	db	115	;'s'
   765  00EE12  65                 	db	101	;'e'
   766  00EE13  74                 	db	116	;'t'
   767  00EE14  0A                 	db	10
   768  00EE15  0D                 	db	13
   769  00EE16  20                 	db	32
   770  00EE17  20                 	db	32
   771  00EE18  20                 	db	32
   772  00EE19  44                 	db	68	;'D'
   773  00EE1A  65                 	db	101	;'e'
   774  00EE1B  76                 	db	118	;'v'
   775  00EE1C  69                 	db	105	;'i'
   776  00EE1D  63                 	db	99	;'c'
   777  00EE1E  65                 	db	101	;'e'
   778  00EE1F  20                 	db	32
   779  00EE20  49                 	db	73	;'I'
   780  00EE21  44                 	db	68	;'D'
   781  00EE22  3F                 	db	63	;'?'
   782  00EE23  3A                 	db	58	;':'
   783  00EE24  20                 	db	32
   784  00EE25  52                 	db	82	;'R'
   785  00EE26  65                 	db	101	;'e'
   786  00EE27  74                 	db	116	;'t'
   787  00EE28  75                 	db	117	;'u'
   788  00EE29  72                 	db	114	;'r'
   789  00EE2A  6E                 	db	110	;'n'
   790  00EE2B  73                 	db	115	;'s'
   791  00EE2C  20                 	db	32
   792  00EE2D  64                 	db	100	;'d'
   793  00EE2E  65                 	db	101	;'e'
   794  00EE2F  76                 	db	118	;'v'
   795  00EE30  69                 	db	105	;'i'
   796  00EE31  63                 	db	99	;'c'
   797  00EE32  65                 	db	101	;'e'
   798  00EE33  20                 	db	32
   799  00EE34  49                 	db	73	;'I'
   800  00EE35  44                 	db	68	;'D'
   801  00EE36  20                 	db	32
   802  00EE37  61                 	db	97	;'a'
   803  00EE38  73                 	db	115	;'s'
   804  00EE39  20                 	db	32
   805  00EE3A  70                 	db	112	;'p'
   806  00EE3B  72                 	db	114	;'r'
   807  00EE3C  65                 	db	101	;'e'
   808  00EE3D  2D                 	db	45
   809  00EE3E  70                 	db	112	;'p'
   810  00EE3F  72                 	db	114	;'r'
   811  00EE40  6F                 	db	111	;'o'
   812  00EE41  67                 	db	103	;'g'
   813  00EE42  72                 	db	114	;'r'
   814  00EE43  61                 	db	97	;'a'
   815  00EE44  6D                 	db	109	;'m'
   816  00EE45  6D                 	db	109	;'m'
   817  00EE46  65                 	db	101	;'e'
   818  00EE47  64                 	db	100	;'d'
   819  00EE48  20                 	db	32
   820  00EE49  69                 	db	105	;'i'
   821  00EE4A  6E                 	db	110	;'n'
   822  00EE4B  20                 	db	32
   823  00EE4C  66                 	db	102	;'f'
   824  00EE4D  6C                 	db	108	;'l'
   825  00EE4E  61                 	db	97	;'a'
   826  00EE4F  73                 	db	115	;'s'
   827  00EE50  68                 	db	104	;'h'
   828  00EE51  20                 	db	32
   829  00EE52  6D                 	db	109	;'m'
   830  00EE53  65                 	db	101	;'e'
   831  00EE54  6D                 	db	109	;'m'
   832  00EE55  6F                 	db	111	;'o'
   833  00EE56  72                 	db	114	;'r'
   834  00EE57  79                 	db	121	;'y'
   835  00EE58  0A                 	db	10
   836  00EE59  0D                 	db	13
   837  00EE5A  20                 	db	32
   838  00EE5B  20                 	db	32
   839  00EE5C  20                 	db	32
   840  00EE5D  52                 	db	82	;'R'
   841  00EE5E  65                 	db	101	;'e'
   842  00EE5F  76                 	db	118	;'v'
   843  00EE60  69                 	db	105	;'i'
   844  00EE61  73                 	db	115	;'s'
   845  00EE62  69                 	db	105	;'i'
   846  00EE63  6F                 	db	111	;'o'
   847  00EE64  6E                 	db	110	;'n'
   848  00EE65  20                 	db	32
   849  00EE66  49                 	db	73	;'I'
   850  00EE67  44                 	db	68	;'D'
   851  00EE68  3F                 	db	63	;'?'
   852  00EE69  3A                 	db	58	;':'
   853  00EE6A  20                 	db	32
   854  00EE6B  52                 	db	82	;'R'
   855  00EE6C  65                 	db	101	;'e'
   856  00EE6D  74                 	db	116	;'t'
   857  00EE6E  75                 	db	117	;'u'
   858  00EE6F  72                 	db	114	;'r'
   859  00EE70  6E                 	db	110	;'n'
   860  00EE71  73                 	db	115	;'s'
   861  00EE72  20                 	db	32
   862  00EE73  64                 	db	100	;'d'
   863  00EE74  65                 	db	101	;'e'
   864  00EE75  76                 	db	118	;'v'
   865  00EE76  69                 	db	105	;'i'
   866  00EE77  63                 	db	99	;'c'
   867  00EE78  65                 	db	101	;'e'
   868  00EE79  20                 	db	32
   869  00EE7A  73                 	db	115	;'s'
   870  00EE7B  69                 	db	105	;'i'
   871  00EE7C  6C                 	db	108	;'l'
   872  00EE7D  69                 	db	105	;'i'
   873  00EE7E  63                 	db	99	;'c'
   874  00EE7F  6F                 	db	111	;'o'
   875  00EE80  6E                 	db	110	;'n'
   876  00EE81  20                 	db	32
   877  00EE82  72                 	db	114	;'r'
   878  00EE83  65                 	db	101	;'e'
   879  00EE84  76                 	db	118	;'v'
   880  00EE85  69                 	db	105	;'i'
   881  00EE86  73                 	db	115	;'s'
   882  00EE87  69                 	db	105	;'i'
   883  00EE88  6F                 	db	111	;'o'
   884  00EE89  6E                 	db	110	;'n'
   885  00EE8A  20                 	db	32
   886  00EE8B  49                 	db	73	;'I'
   887  00EE8C  44                 	db	68	;'D'
   888  00EE8D  20                 	db	32
   889  00EE8E  61                 	db	97	;'a'
   890  00EE8F  73                 	db	115	;'s'
   891  00EE90  20                 	db	32
   892  00EE91  70                 	db	112	;'p'
   893  00EE92  72                 	db	114	;'r'
   894  00EE93  65                 	db	101	;'e'
   895  00EE94  2D                 	db	45
   896  00EE95  70                 	db	112	;'p'
   897  00EE96  72                 	db	114	;'r'
   898  00EE97  6F                 	db	111	;'o'
   899  00EE98  67                 	db	103	;'g'
   900  00EE99  72                 	db	114	;'r'
   901  00EE9A  61                 	db	97	;'a'
   902  00EE9B  6D                 	db	109	;'m'
   903  00EE9C  6D                 	db	109	;'m'
   904  00EE9D  65                 	db	101	;'e'
   905  00EE9E  64                 	db	100	;'d'
   906  00EE9F  20                 	db	32
   907  00EEA0  69                 	db	105	;'i'
   908  00EEA1  6E                 	db	110	;'n'
   909  00EEA2  20                 	db	32
   910  00EEA3  66                 	db	102	;'f'
   911  00EEA4  6C                 	db	108	;'l'
   912  00EEA5  61                 	db	97	;'a'
   913  00EEA6  73                 	db	115	;'s'
   914  00EEA7  68                 	db	104	;'h'
   915  00EEA8  20                 	db	32
   916  00EEA9  6D                 	db	109	;'m'
   917  00EEAA  65                 	db	101	;'e'
   918  00EEAB  6D                 	db	109	;'m'
   919  00EEAC  6F                 	db	111	;'o'
   920  00EEAD  72                 	db	114	;'r'
   921  00EEAE  79                 	db	121	;'y'
   922  00EEAF  0A                 	db	10
   923  00EEB0  0D                 	db	13
   924  00EEB1  20                 	db	32
   925  00EEB2  20                 	db	32
   926  00EEB3  20                 	db	32
   927  00EEB4  55                 	db	85	;'U'
   928  00EEB5  73                 	db	115	;'s'
   929  00EEB6  65                 	db	101	;'e'
   930  00EEB7  72                 	db	114	;'r'
   931  00EEB8  20                 	db	32
   932  00EEB9  49                 	db	73	;'I'
   933  00EEBA  44                 	db	68	;'D'
   934  00EEBB  73                 	db	115	;'s'
   935  00EEBC  3F                 	db	63	;'?'
   936  00EEBD  3A                 	db	58	;':'
   937  00EEBE  20                 	db	32
   938  00EEBF  52                 	db	82	;'R'
   939  00EEC0  65                 	db	101	;'e'
   940  00EEC1  74                 	db	116	;'t'
   941  00EEC2  75                 	db	117	;'u'
   942  00EEC3  72                 	db	114	;'r'
   943  00EEC4  6E                 	db	110	;'n'
   944  00EEC5  73                 	db	115	;'s'
   945  00EEC6  20                 	db	32
   946  00EEC7  61                 	db	97	;'a'
   947  00EEC8  20                 	db	32
   948  00EEC9  6C                 	db	108	;'l'
   949  00EECA  69                 	db	105	;'i'
   950  00EECB  73                 	db	115	;'s'
   951  00EECC  74                 	db	116	;'t'
   952  00EECD  20                 	db	32
   953  00EECE  6F                 	db	111	;'o'
   954  00EECF  66                 	db	102	;'f'
   955  00EED0  20                 	db	32
   956  00EED1  75                 	db	117	;'u'
   957  00EED2  73                 	db	115	;'s'
   958  00EED3  65                 	db	101	;'e'
   959  00EED4  72                 	db	114	;'r'
   960  00EED5  20                 	db	32
   961  00EED6  49                 	db	73	;'I'
   962  00EED7  44                 	db	68	;'D'
   963  00EED8  73                 	db	115	;'s'
   964  00EED9  20                 	db	32
   965  00EEDA  28                 	db	40
   966  00EEDB  64                 	db	100	;'d'
   967  00EEDC  69                 	db	105	;'i'
   968  00EEDD  73                 	db	115	;'s'
   969  00EEDE  70                 	db	112	;'p'
   970  00EEDF  6C                 	db	108	;'l'
   971  00EEE0  61                 	db	97	;'a'
   972  00EEE1  79                 	db	121	;'y'
   973  00EEE2  65                 	db	101	;'e'
   974  00EEE3  64                 	db	100	;'d'
   975  00EEE4  20                 	db	32
   976  00EEE5  69                 	db	105	;'i'
   977  00EEE6  6E                 	db	110	;'n'
   978  00EEE7  20                 	db	32
   979  00EEE8  68                 	db	104	;'h'
   980  00EEE9  65                 	db	101	;'e'
   981  00EEEA  78                 	db	120	;'x'
   982  00EEEB  29                 	db	41
   983  00EEEC  20                 	db	32
   984  00EEED  61                 	db	97	;'a'
   985  00EEEE  73                 	db	115	;'s'
   986  00EEEF  20                 	db	32
   987  00EEF0  73                 	db	115	;'s'
   988  00EEF1  74                 	db	116	;'t'
   989  00EEF2  6F                 	db	111	;'o'
   990  00EEF3  72                 	db	114	;'r'
   991  00EEF4  65                 	db	101	;'e'
   992  00EEF5  64                 	db	100	;'d'
   993  00EEF6  20                 	db	32
   994  00EEF7  69                 	db	105	;'i'
   995  00EEF8  6E                 	db	110	;'n'
   996  00EEF9  20                 	db	32
   997  00EEFA  66                 	db	102	;'f'
   998  00EEFB  6C                 	db	108	;'l'
   999  00EEFC  61                 	db	97	;'a'
  1000  00EEFD  73                 	db	115	;'s'
  1001  00EEFE  68                 	db	104	;'h'
  1002  00EEFF  20                 	db	32
  1003  00EF00  6D                 	db	109	;'m'
  1004  00EF01  65                 	db	101	;'e'
  1005  00EF02  6D                 	db	109	;'m'
  1006  00EF03  6F                 	db	111	;'o'
  1007  00EF04  72                 	db	114	;'r'
  1008  00EF05  79                 	db	121	;'y'
  1009  00EF06  0A                 	db	10
  1010  00EF07  0D                 	db	13
  1011  00EF08  20                 	db	32
  1012  00EF09  20                 	db	32
  1013  00EF0A  20                 	db	32
  1014  00EF0B  41                 	db	65	;'A'
  1015  00EF0C  44                 	db	68	;'D'
  1016  00EF0D  43                 	db	67	;'C'
  1017  00EF0E  20                 	db	32
  1018  00EF0F  45                 	db	69	;'E'
  1019  00EF10  72                 	db	114	;'r'
  1020  00EF11  72                 	db	114	;'r'
  1021  00EF12  6F                 	db	111	;'o'
  1022  00EF13  72                 	db	114	;'r'
  1023  00EF14  3F                 	db	63	;'?'
  1024  00EF15  3A                 	db	58	;':'
  1025  00EF16  20                 	db	32
  1026  00EF17  52                 	db	82	;'R'
  1027  00EF18  65                 	db	101	;'e'
  1028  00EF19  74                 	db	116	;'t'
  1029  00EF1A  75                 	db	117	;'u'
  1030  00EF1B  72                 	db	114	;'r'
  1031  00EF1C  6E                 	db	110	;'n'
  1032  00EF1D  73                 	db	115	;'s'
  1033  00EF1E  20                 	db	32
  1034  00EF1F  74                 	db	116	;'t'
  1035  00EF20  68                 	db	104	;'h'
  1036  00EF21  65                 	db	101	;'e'
  1037  00EF22  20                 	db	32
  1038  00EF23  63                 	db	99	;'c'
  1039  00EF24  61                 	db	97	;'a'
  1040  00EF25  75                 	db	117	;'u'
  1041  00EF26  73                 	db	115	;'s'
  1042  00EF27  65                 	db	101	;'e'
  1043  00EF28  20                 	db	32
  1044  00EF29  6F                 	db	111	;'o'
  1045  00EF2A  66                 	db	102	;'f'
  1046  00EF2B  20                 	db	32
  1047  00EF2C  61                 	db	97	;'a'
  1048  00EF2D  6E                 	db	110	;'n'
  1049  00EF2E  20                 	db	32
  1050  00EF2F  41                 	db	65	;'A'
  1051  00EF30  44                 	db	68	;'D'
  1052  00EF31  43                 	db	67	;'C'
  1053  00EF32  20                 	db	32
  1054  00EF33  65                 	db	101	;'e'
  1055  00EF34  72                 	db	114	;'r'
  1056  00EF35  72                 	db	114	;'r'
  1057  00EF36  6F                 	db	111	;'o'
  1058  00EF37  72                 	db	114	;'r'
  1059  00EF38  20                 	db	32
  1060  00EF39  69                 	db	105	;'i'
  1061  00EF3A  66                 	db	102	;'f'
  1062  00EF3B  20                 	db	32
  1063  00EF3C  61                 	db	97	;'a'
  1064  00EF3D  6E                 	db	110	;'n'
  1065  00EF3E  20                 	db	32
  1066  00EF3F  65                 	db	101	;'e'
  1067  00EF40  72                 	db	114	;'r'
  1068  00EF41  72                 	db	114	;'r'
  1069  00EF42  6F                 	db	111	;'o'
  1070  00EF43  72                 	db	114	;'r'
  1071  00EF44  20                 	db	32
  1072  00EF45  6F                 	db	111	;'o'
  1073  00EF46  63                 	db	99	;'c'
  1074  00EF47  63                 	db	99	;'c'
  1075  00EF48  75                 	db	117	;'u'
  1076  00EF49  72                 	db	114	;'r'
  1077  00EF4A  72                 	db	114	;'r'
  1078  00EF4B  65                 	db	101	;'e'
  1079  00EF4C  64                 	db	100	;'d'
  1080  00EF4D  0A                 	db	10
  1081  00EF4E  0D                 	db	13
  1082  00EF4F  20                 	db	32
  1083  00EF50  20                 	db	32
  1084  00EF51  20                 	db	32
  1085  00EF52  43                 	db	67	;'C'
  1086  00EF53  6C                 	db	108	;'l'
  1087  00EF54  65                 	db	101	;'e'
  1088  00EF55  61                 	db	97	;'a'
  1089  00EF56  72                 	db	114	;'r'
  1090  00EF57  20                 	db	32
  1091  00EF58  41                 	db	65	;'A'
  1092  00EF59  44                 	db	68	;'D'
  1093  00EF5A  43                 	db	67	;'C'
  1094  00EF5B  20                 	db	32
  1095  00EF5C  45                 	db	69	;'E'
  1096  00EF5D  72                 	db	114	;'r'
  1097  00EF5E  72                 	db	114	;'r'
  1098  00EF5F  6F                 	db	111	;'o'
  1099  00EF60  72                 	db	114	;'r'
  1100  00EF61  3A                 	db	58	;':'
  1101  00EF62  20                 	db	32
  1102  00EF63  43                 	db	67	;'C'
  1103  00EF64  6C                 	db	108	;'l'
  1104  00EF65  65                 	db	101	;'e'
  1105  00EF66  61                 	db	97	;'a'
  1106  00EF67  72                 	db	114	;'r'
  1107  00EF68  73                 	db	115	;'s'
  1108  00EF69  20                 	db	32
  1109  00EF6A  74                 	db	116	;'t'
  1110  00EF6B  68                 	db	104	;'h'
  1111  00EF6C  65                 	db	101	;'e'
  1112  00EF6D  20                 	db	32
  1113  00EF6E  41                 	db	65	;'A'
  1114  00EF6F  44                 	db	68	;'D'
  1115  00EF70  43                 	db	67	;'C'
  1116  00EF71  20                 	db	32
  1117  00EF72  65                 	db	101	;'e'
  1118  00EF73  72                 	db	114	;'r'
  1119  00EF74  72                 	db	114	;'r'
  1120  00EF75  6F                 	db	111	;'o'
  1121  00EF76  72                 	db	114	;'r'
  1122  00EF77  20                 	db	32
  1123  00EF78  61                 	db	97	;'a'
  1124  00EF79  6E                 	db	110	;'n'
  1125  00EF7A  64                 	db	100	;'d'
  1126  00EF7B  20                 	db	32
  1127  00EF7C  72                 	db	114	;'r'
  1128  00EF7D  65                 	db	101	;'e'
  1129  00EF7E  73                 	db	115	;'s'
  1130  00EF7F  75                 	db	117	;'u'
  1131  00EF80  6D                 	db	109	;'m'
  1132  00EF81  65                 	db	101	;'e'
  1133  00EF82  73                 	db	115	;'s'
  1134  00EF83  20                 	db	32
  1135  00EF84  41                 	db	65	;'A'
  1136  00EF85  44                 	db	68	;'D'
  1137  00EF86  43                 	db	67	;'C'
  1138  00EF87  20                 	db	32
  1139  00EF88  63                 	db	99	;'c'
  1140  00EF89  6F                 	db	111	;'o'
  1141  00EF8A  6E                 	db	110	;'n'
  1142  00EF8B  76                 	db	118	;'v'
  1143  00EF8C  65                 	db	101	;'e'
  1144  00EF8D  72                 	db	114	;'r'
  1145  00EF8E  73                 	db	115	;'s'
  1146  00EF8F  69                 	db	105	;'i'
  1147  00EF90  6F                 	db	111	;'o'
  1148  00EF91  6E                 	db	110	;'n'
  1149  00EF92  73                 	db	115	;'s'
  1150  00EF93  0A                 	db	10
  1151  00EF94  0D                 	db	13
  1152  00EF95  20                 	db	32
  1153  00EF96  20                 	db	32
  1154  00EF97  20                 	db	32
  1155  00EF98  56                 	db	86	;'V'
  1156  00EF99  43                 	db	67	;'C'
  1157  00EF9A  43                 	db	67	;'C'
  1158  00EF9B  20                 	db	32
  1159  00EF9C  4F                 	db	79	;'O'
  1160  00EF9D  76                 	db	118	;'v'
  1161  00EF9E  65                 	db	101	;'e'
  1162  00EF9F  72                 	db	114	;'r'
  1163  00EFA0  76                 	db	118	;'v'
  1164  00EFA1  6F                 	db	111	;'o'
  1165  00EFA2  6C                 	db	108	;'l'
  1166  00EFA3  74                 	db	116	;'t'
  1167  00EFA4  61                 	db	97	;'a'
  1168  00EFA5  67                 	db	103	;'g'
  1169  00EFA6  65                 	db	101	;'e'
  1170  00EFA7  3F                 	db	63	;'?'
  1171  00EFA8  3A                 	db	58	;':'
  1172  00EFA9  20                 	db	32
  1173  00EFAA  53                 	db	83	;'S'
  1174  00EFAB  74                 	db	116	;'t'
  1175  00EFAC  61                 	db	97	;'a'
  1176  00EFAD  74                 	db	116	;'t'
  1177  00EFAE  65                 	db	101	;'e'
  1178  00EFAF  73                 	db	115	;'s'
  1179  00EFB0  20                 	db	32
  1180  00EFB1  69                 	db	105	;'i'
  1181  00EFB2  66                 	db	102	;'f'
  1182  00EFB3  20                 	db	32
  1183  00EFB4  61                 	db	97	;'a'
  1184  00EFB5  20                 	db	32
  1185  00EFB6  56                 	db	86	;'V'
  1186  00EFB7  43                 	db	67	;'C'
  1187  00EFB8  43                 	db	67	;'C'
  1188  00EFB9  20                 	db	32
  1189  00EFBA  6F                 	db	111	;'o'
  1190  00EFBB  76                 	db	118	;'v'
  1191  00EFBC  65                 	db	101	;'e'
  1192  00EFBD  72                 	db	114	;'r'
  1193  00EFBE  76                 	db	118	;'v'
  1194  00EFBF  6F                 	db	111	;'o'
  1195  00EFC0  6C                 	db	108	;'l'
  1196  00EFC1  74                 	db	116	;'t'
  1197  00EFC2  61                 	db	97	;'a'
  1198  00EFC3  67                 	db	103	;'g'
  1199  00EFC4  65                 	db	101	;'e'
  1200  00EFC5  20                 	db	32
  1201  00EFC6  63                 	db	99	;'c'
  1202  00EFC7  6F                 	db	111	;'o'
  1203  00EFC8  6E                 	db	110	;'n'
  1204  00EFC9  64                 	db	100	;'d'
  1205  00EFCA  69                 	db	105	;'i'
  1206  00EFCB  74                 	db	116	;'t'
  1207  00EFCC  69                 	db	105	;'i'
  1208  00EFCD  6F                 	db	111	;'o'
  1209  00EFCE  6E                 	db	110	;'n'
  1210  00EFCF  20                 	db	32
  1211  00EFD0  68                 	db	104	;'h'
  1212  00EFD1  61                 	db	97	;'a'
  1213  00EFD2  73                 	db	115	;'s'
  1214  00EFD3  20                 	db	32
  1215  00EFD4  6F                 	db	111	;'o'
  1216  00EFD5  63                 	db	99	;'c'
  1217  00EFD6  63                 	db	99	;'c'
  1218  00EFD7  75                 	db	117	;'u'
  1219  00EFD8  72                 	db	114	;'r'
  1220  00EFD9  72                 	db	114	;'r'
  1221  00EFDA  65                 	db	101	;'e'
  1222  00EFDB  64                 	db	100	;'d'
  1223  00EFDC  20                 	db	32
  1224  00EFDD  6F                 	db	111	;'o'
  1225  00EFDE  72                 	db	114	;'r'
  1226  00EFDF  20                 	db	32
  1227  00EFE0  6E                 	db	110	;'n'
  1228  00EFE1  6F                 	db	111	;'o'
  1229  00EFE2  74                 	db	116	;'t'
  1230  00EFE3  0A                 	db	10
  1231  00EFE4  0D                 	db	13
  1232  00EFE5  20                 	db	32
  1233  00EFE6  20                 	db	32
  1234  00EFE7  20                 	db	32
  1235  00EFE8  48                 	db	72	;'H'
  1236  00EFE9  65                 	db	101	;'e'
  1237  00EFEA  6C                 	db	108	;'l'
  1238  00EFEB  70                 	db	112	;'p'
  1239  00EFEC  3A                 	db	58	;':'
  1240  00EFED  20                 	db	32
  1241  00EFEE  54                 	db	84	;'T'
  1242  00EFEF  68                 	db	104	;'h'
  1243  00EFF0  69                 	db	105	;'i'
  1244  00EFF1  73                 	db	115	;'s'
  1245  00EFF2  20                 	db	32
  1246  00EFF3  6D                 	db	109	;'m'
  1247  00EFF4  65                 	db	101	;'e'
  1248  00EFF5  73                 	db	115	;'s'
  1249  00EFF6  73                 	db	115	;'s'
  1250  00EFF7  61                 	db	97	;'a'
  1251  00EFF8  67                 	db	103	;'g'
  1252  00EFF9  65                 	db	101	;'e'
  1253  00EFFA  2C                 	db	44
  1254  00EFFB  20                 	db	32
  1255  00EFFC  6C                 	db	108	;'l'
  1256  00EFFD  69                 	db	105	;'i'
  1257  00EFFE  73                 	db	115	;'s'
  1258  00EFFF  74                 	db	116	;'t'
  1259  00F000  73                 	db	115	;'s'
  1260  00F001  20                 	db	32
  1261  00F002  73                 	db	115	;'s'
  1262  00F003  75                 	db	117	;'u'
  1263  00F004  70                 	db	112	;'p'
  1264  00F005  70                 	db	112	;'p'
  1265  00F006  6F                 	db	111	;'o'
  1266  00F007  72                 	db	114	;'r'
  1267  00F008  74                 	db	116	;'t'
  1268  00F009  65                 	db	101	;'e'
  1269  00F00A  64                 	db	100	;'d'
  1270  00F00B  20                 	db	32
  1271  00F00C  63                 	db	99	;'c'
  1272  00F00D  6F                 	db	111	;'o'
  1273  00F00E  6D                 	db	109	;'m'
  1274  00F00F  6D                 	db	109	;'m'
  1275  00F010  61                 	db	97	;'a'
  1276  00F011  6E                 	db	110	;'n'
  1277  00F012  64                 	db	100	;'d'
  1278  00F013  73                 	db	115	;'s'
  1279  00F014  0A                 	db	10
  1280  00F015  0D                 	db	13
  1281  00F016  44                 	db	68	;'D'
  1282  00F017  65                 	db	101	;'e'
  1283  00F018  76                 	db	118	;'v'
  1284  00F019  69                 	db	105	;'i'
  1285  00F01A  63                 	db	99	;'c'
  1286  00F01B  65                 	db	101	;'e'
  1287  00F01C  20                 	db	32
  1288  00F01D  4D                 	db	77	;'M'
  1289  00F01E  65                 	db	101	;'e'
  1290  00F01F  61                 	db	97	;'a'
  1291  00F020  73                 	db	115	;'s'
  1292  00F021  75                 	db	117	;'u'
  1293  00F022  72                 	db	114	;'r'
  1294  00F023  65                 	db	101	;'e'
  1295  00F024  6D                 	db	109	;'m'
  1296  00F025  65                 	db	101	;'e'
  1297  00F026  6E                 	db	110	;'n'
  1298  00F027  74                 	db	116	;'t'
  1299  00F028  20                 	db	32
  1300  00F029  43                 	db	67	;'C'
  1301  00F02A  6F                 	db	111	;'o'
  1302  00F02B  6D                 	db	109	;'m'
  1303  00F02C  6D                 	db	109	;'m'
  1304  00F02D  61                 	db	97	;'a'
  1305  00F02E  6E                 	db	110	;'n'
  1306  00F02F  64                 	db	100	;'d'
  1307  00F030  73                 	db	115	;'s'
  1308  00F031  3A                 	db	58	;':'
  1309  00F032  0A                 	db	10
  1310  00F033  0D                 	db	13
  1311  00F034  20                 	db	32
  1312  00F035  20                 	db	32
  1313  00F036  20                 	db	32
  1314  00F037  4D                 	db	77	;'M'
  1315  00F038  65                 	db	101	;'e'
  1316  00F039  61                 	db	97	;'a'
  1317  00F03A  73                 	db	115	;'s'
  1318  00F03B  75                 	db	117	;'u'
  1319  00F03C  72                 	db	114	;'r'
  1320  00F03D  65                 	db	101	;'e'
  1321  00F03E  20                 	db	32
  1322  00F03F  50                 	db	80	;'P'
  1323  00F040  4F                 	db	79	;'O'
  1324  00F041  53                 	db	83	;'S'
  1325  00F042  33                 	db	51	;'3'
  1326  00F043  50                 	db	80	;'P'
  1327  00F044  33                 	db	51	;'3'
  1328  00F045  3F                 	db	63	;'?'
  1329  00F046  3A                 	db	58	;':'
  1330  00F047  20                 	db	32
  1331  00F048  52                 	db	82	;'R'
  1332  00F049  65                 	db	101	;'e'
  1333  00F04A  74                 	db	116	;'t'
  1334  00F04B  75                 	db	117	;'u'
  1335  00F04C  72                 	db	114	;'r'
  1336  00F04D  6E                 	db	110	;'n'
  1337  00F04E  73                 	db	115	;'s'
  1338  00F04F  20                 	db	32
  1339  00F050  2B                 	db	43
  1340  00F051  33                 	db	51	;'3'
  1341  00F052  2E                 	db	46
  1342  00F053  33                 	db	51	;'3'
  1343  00F054  56                 	db	86	;'V'
  1344  00F055  20                 	db	32
  1345  00F056  41                 	db	65	;'A'
  1346  00F057  44                 	db	68	;'D'
  1347  00F058  43                 	db	67	;'C'
  1348  00F059  20                 	db	32
  1349  00F05A  43                 	db	67	;'C'
  1350  00F05B  6F                 	db	111	;'o'
  1351  00F05C  6E                 	db	110	;'n'
  1352  00F05D  76                 	db	118	;'v'
  1353  00F05E  65                 	db	101	;'e'
  1354  00F05F  72                 	db	114	;'r'
  1355  00F060  73                 	db	115	;'s'
  1356  00F061  69                 	db	105	;'i'
  1357  00F062  6F                 	db	111	;'o'
  1358  00F063  6E                 	db	110	;'n'
  1359  00F064  20                 	db	32
  1360  00F065  69                 	db	105	;'i'
  1361  00F066  6E                 	db	110	;'n'
  1362  00F067  20                 	db	32
  1363  00F068  76                 	db	118	;'v'
  1364  00F069  6F                 	db	111	;'o'
  1365  00F06A  6C                 	db	108	;'l'
  1366  00F06B  74                 	db	116	;'t'
  1367  00F06C  73                 	db	115	;'s'
  1368  00F06D  0A                 	db	10
  1369  00F06E  0D                 	db	13
  1370  00F06F  20                 	db	32
  1371  00F070  20                 	db	32
  1372  00F071  20                 	db	32
  1373  00F072  4D                 	db	77	;'M'
  1374  00F073  65                 	db	101	;'e'
  1375  00F074  61                 	db	97	;'a'
  1376  00F075  73                 	db	115	;'s'
  1377  00F076  75                 	db	117	;'u'
  1378  00F077  72                 	db	114	;'r'
  1379  00F078  65                 	db	101	;'e'
  1380  00F079  20                 	db	32
  1381  00F07A  50                 	db	80	;'P'
  1382  00F07B  4F                 	db	79	;'O'
  1383  00F07C  53                 	db	83	;'S'
  1384  00F07D  31                 	db	49	;'1'
  1385  00F07E  32                 	db	50	;'2'
  1386  00F07F  3F                 	db	63	;'?'
  1387  00F080  3A                 	db	58	;':'
  1388  00F081  20                 	db	32
  1389  00F082  52                 	db	82	;'R'
  1390  00F083  65                 	db	101	;'e'
  1391  00F084  74                 	db	116	;'t'
  1392  00F085  75                 	db	117	;'u'
  1393  00F086  72                 	db	114	;'r'
  1394  00F087  6E                 	db	110	;'n'
  1395  00F088  73                 	db	115	;'s'
  1396  00F089  20                 	db	32
  1397  00F08A  2B                 	db	43
  1398  00F08B  31                 	db	49	;'1'
  1399  00F08C  32                 	db	50	;'2'
  1400  00F08D  56                 	db	86	;'V'
  1401  00F08E  20                 	db	32
  1402  00F08F  41                 	db	65	;'A'
  1403  00F090  44                 	db	68	;'D'
  1404  00F091  43                 	db	67	;'C'
  1405  00F092  20                 	db	32
  1406  00F093  43                 	db	67	;'C'
  1407  00F094  6F                 	db	111	;'o'
  1408  00F095  6E                 	db	110	;'n'
  1409  00F096  76                 	db	118	;'v'
  1410  00F097  65                 	db	101	;'e'
  1411  00F098  72                 	db	114	;'r'
  1412  00F099  73                 	db	115	;'s'
  1413  00F09A  69                 	db	105	;'i'
  1414  00F09B  6F                 	db	111	;'o'
  1415  00F09C  6E                 	db	110	;'n'
  1416  00F09D  20                 	db	32
  1417  00F09E  69                 	db	105	;'i'
  1418  00F09F  6E                 	db	110	;'n'
  1419  00F0A0  20                 	db	32
  1420  00F0A1  76                 	db	118	;'v'
  1421  00F0A2  6F                 	db	111	;'o'
  1422  00F0A3  6C                 	db	108	;'l'
  1423  00F0A4  74                 	db	116	;'t'
  1424  00F0A5  73                 	db	115	;'s'
  1425  00F0A6  0A                 	db	10
  1426  00F0A7  0D                 	db	13
  1427  00F0A8  20                 	db	32
  1428  00F0A9  20                 	db	32
  1429  00F0AA  20                 	db	32
  1430  00F0AB  4D                 	db	77	;'M'
  1431  00F0AC  65                 	db	101	;'e'
  1432  00F0AD  61                 	db	97	;'a'
  1433  00F0AE  73                 	db	115	;'s'
  1434  00F0AF  75                 	db	117	;'u'
  1435  00F0B0  72                 	db	114	;'r'
  1436  00F0B1  65                 	db	101	;'e'
  1437  00F0B2  20                 	db	32
  1438  00F0B3  44                 	db	68	;'D'
  1439  00F0B4  69                 	db	105	;'i'
  1440  00F0B5  65                 	db	101	;'e'
  1441  00F0B6  20                 	db	32
  1442  00F0B7  54                 	db	84	;'T'
  1443  00F0B8  65                 	db	101	;'e'
  1444  00F0B9  6D                 	db	109	;'m'
  1445  00F0BA  70                 	db	112	;'p'
  1446  00F0BB  3F                 	db	63	;'?'
  1447  00F0BC  3A                 	db	58	;':'
  1448  00F0BD  20                 	db	32
  1449  00F0BE  52                 	db	82	;'R'
  1450  00F0BF  65                 	db	101	;'e'
  1451  00F0C0  74                 	db	116	;'t'
  1452  00F0C1  75                 	db	117	;'u'
  1453  00F0C2  72                 	db	114	;'r'
  1454  00F0C3  6E                 	db	110	;'n'
  1455  00F0C4  73                 	db	115	;'s'
  1456  00F0C5  20                 	db	32
  1457  00F0C6  74                 	db	116	;'t'
  1458  00F0C7  68                 	db	104	;'h'
  1459  00F0C8  65                 	db	101	;'e'
  1460  00F0C9  20                 	db	32
  1461  00F0CA  6D                 	db	109	;'m'
  1462  00F0CB  69                 	db	105	;'i'
  1463  00F0CC  63                 	db	99	;'c'
  1464  00F0CD  72                 	db	114	;'r'
  1465  00F0CE  6F                 	db	111	;'o'
  1466  00F0CF  63                 	db	99	;'c'
  1467  00F0D0  6F                 	db	111	;'o'
  1468  00F0D1  6E                 	db	110	;'n'
  1469  00F0D2  74                 	db	116	;'t'
  1470  00F0D3  72                 	db	114	;'r'
  1471  00F0D4  6F                 	db	111	;'o'
  1472  00F0D5  6C                 	db	108	;'l'
  1473  00F0D6  6C                 	db	108	;'l'
  1474  00F0D7  65                 	db	101	;'e'
  1475  00F0D8  72                 	db	114	;'r'
  1476  00F0D9  20                 	db	32
  1477  00F0DA  64                 	db	100	;'d'
  1478  00F0DB  69                 	db	105	;'i'
  1479  00F0DC  65                 	db	101	;'e'
  1480  00F0DD  20                 	db	32
  1481  00F0DE  74                 	db	116	;'t'
  1482  00F0DF  65                 	db	101	;'e'
  1483  00F0E0  6D                 	db	109	;'m'
  1484  00F0E1  70                 	db	112	;'p'
  1485  00F0E2  65                 	db	101	;'e'
  1486  00F0E3  72                 	db	114	;'r'
  1487  00F0E4  61                 	db	97	;'a'
  1488  00F0E5  74                 	db	116	;'t'
  1489  00F0E6  75                 	db	117	;'u'
  1490  00F0E7  72                 	db	114	;'r'
  1491  00F0E8  65                 	db	101	;'e'
  1492  00F0E9  20                 	db	32
  1493  00F0EA  69                 	db	105	;'i'
  1494  00F0EB  6E                 	db	110	;'n'
  1495  00F0EC  20                 	db	32
  1496  00F0ED  64                 	db	100	;'d'
  1497  00F0EE  65                 	db	101	;'e'
  1498  00F0EF  67                 	db	103	;'g'
  1499  00F0F0  72                 	db	114	;'r'
  1500  00F0F1  65                 	db	101	;'e'
  1501  00F0F2  65                 	db	101	;'e'
  1502  00F0F3  73                 	db	115	;'s'
  1503  00F0F4  20                 	db	32
  1504  00F0F5  43                 	db	67	;'C'
  1505  00F0F6  0A                 	db	10
  1506  00F0F7  0D                 	db	13
  1507  00F0F8  20                 	db	32
  1508  00F0F9  20                 	db	32
  1509  00F0FA  20                 	db	32
  1510  00F0FB  4D                 	db	77	;'M'
  1511  00F0FC  65                 	db	101	;'e'
  1512  00F0FD  61                 	db	97	;'a'
  1513  00F0FE  73                 	db	115	;'s'
  1514  00F0FF  75                 	db	117	;'u'
  1515  00F100  72                 	db	114	;'r'
  1516  00F101  65                 	db	101	;'e'
  1517  00F102  20                 	db	32
  1518  00F103  46                 	db	70	;'F'
  1519  00F104  56                 	db	86	;'V'
  1520  00F105  52                 	db	82	;'R'
  1521  00F106  3F                 	db	63	;'?'
  1522  00F107  3A                 	db	58	;':'
  1523  00F108  20                 	db	32
  1524  00F109  52                 	db	82	;'R'
  1525  00F10A  65                 	db	101	;'e'
  1526  00F10B  74                 	db	116	;'t'
  1527  00F10C  75                 	db	117	;'u'
  1528  00F10D  72                 	db	114	;'r'
  1529  00F10E  6E                 	db	110	;'n'
  1530  00F10F  73                 	db	115	;'s'
  1531  00F110  20                 	db	32
  1532  00F111  74                 	db	116	;'t'
  1533  00F112  68                 	db	104	;'h'
  1534  00F113  65                 	db	101	;'e'
  1535  00F114  20                 	db	32
  1536  00F115  69                 	db	105	;'i'
  1537  00F116  6E                 	db	110	;'n'
  1538  00F117  74                 	db	116	;'t'
  1539  00F118  65                 	db	101	;'e'
  1540  00F119  72                 	db	114	;'r'
  1541  00F11A  6E                 	db	110	;'n'
  1542  00F11B  61                 	db	97	;'a'
  1543  00F11C  6C                 	db	108	;'l'
  1544  00F11D  20                 	db	32
  1545  00F11E  66                 	db	102	;'f'
  1546  00F11F  69                 	db	105	;'i'
  1547  00F120  78                 	db	120	;'x'
  1548  00F121  65                 	db	101	;'e'
  1549  00F122  64                 	db	100	;'d'
  1550  00F123  20                 	db	32
  1551  00F124  76                 	db	118	;'v'
  1552  00F125  6F                 	db	111	;'o'
  1553  00F126  6C                 	db	108	;'l'
  1554  00F127  74                 	db	116	;'t'
  1555  00F128  61                 	db	97	;'a'
  1556  00F129  67                 	db	103	;'g'
  1557  00F12A  65                 	db	101	;'e'
  1558  00F12B  20                 	db	32
  1559  00F12C  72                 	db	114	;'r'
  1560  00F12D  65                 	db	101	;'e'
  1561  00F12E  66                 	db	102	;'f'
  1562  00F12F  65                 	db	101	;'e'
  1563  00F130  72                 	db	114	;'r'
  1564  00F131  65                 	db	101	;'e'
  1565  00F132  6E                 	db	110	;'n'
  1566  00F133  63                 	db	99	;'c'
  1567  00F134  65                 	db	101	;'e'
  1568  00F135  20                 	db	32
  1569  00F136  62                 	db	98	;'b'
  1570  00F137  75                 	db	117	;'u'
  1571  00F138  66                 	db	102	;'f'
  1572  00F139  66                 	db	102	;'f'
  1573  00F13A  65                 	db	101	;'e'
  1574  00F13B  72                 	db	114	;'r'
  1575  00F13C  20                 	db	32
  1576  00F13D  31                 	db	49	;'1'
  1577  00F13E  20                 	db	32
  1578  00F13F  6F                 	db	111	;'o'
  1579  00F140  75                 	db	117	;'u'
  1580  00F141  74                 	db	116	;'t'
  1581  00F142  70                 	db	112	;'p'
  1582  00F143  75                 	db	117	;'u'
  1583  00F144  74                 	db	116	;'t'
  1584  00F145  20                 	db	32
  1585  00F146  69                 	db	105	;'i'
  1586  00F147  6E                 	db	110	;'n'
  1587  00F148  20                 	db	32
  1588  00F149  76                 	db	118	;'v'
  1589  00F14A  6F                 	db	111	;'o'
  1590  00F14B  6C                 	db	108	;'l'
  1591  00F14C  74                 	db	116	;'t'
  1592  00F14D  73                 	db	115	;'s'
  1593  00F14E  0A                 	db	10
  1594  00F14F  0D                 	db	13
  1595  00F150  20                 	db	32
  1596  00F151  20                 	db	32
  1597  00F152  20                 	db	32
  1598  00F153  4D                 	db	77	;'M'
  1599  00F154  65                 	db	101	;'e'
  1600  00F155  61                 	db	97	;'a'
  1601  00F156  73                 	db	115	;'s'
  1602  00F157  75                 	db	117	;'u'
  1603  00F158  72                 	db	114	;'r'
  1604  00F159  65                 	db	101	;'e'
  1605  00F15A  20                 	db	32
  1606  00F15B  41                 	db	65	;'A'
  1607  00F15C  56                 	db	86	;'V'
  1608  00F15D  53                 	db	83	;'S'
  1609  00F15E  53                 	db	83	;'S'
  1610  00F15F  3F                 	db	63	;'?'
  1611  00F160  3A                 	db	58	;':'
  1612  00F161  20                 	db	32
  1613  00F162  52                 	db	82	;'R'
  1614  00F163  65                 	db	101	;'e'
  1615  00F164  74                 	db	116	;'t'
  1616  00F165  75                 	db	117	;'u'
  1617  00F166  72                 	db	114	;'r'
  1618  00F167  6E                 	db	110	;'n'
  1619  00F168  73                 	db	115	;'s'
  1620  00F169  20                 	db	32
  1621  00F16A  74                 	db	116	;'t'
  1622  00F16B  68                 	db	104	;'h'
  1623  00F16C  65                 	db	101	;'e'
  1624  00F16D  20                 	db	32
  1625  00F16E  6D                 	db	109	;'m'
  1626  00F16F  65                 	db	101	;'e'
  1627  00F170  61                 	db	97	;'a'
  1628  00F171  73                 	db	115	;'s'
  1629  00F172  75                 	db	117	;'u'
  1630  00F173  72                 	db	114	;'r'
  1631  00F174  65                 	db	101	;'e'
  1632  00F175  64                 	db	100	;'d'
  1633  00F176  20                 	db	32
  1634  00F177  76                 	db	118	;'v'
  1635  00F178  61                 	db	97	;'a'
  1636  00F179  6C                 	db	108	;'l'
  1637  00F17A  75                 	db	117	;'u'
  1638  00F17B  65                 	db	101	;'e'
  1639  00F17C  20                 	db	32
  1640  00F17D  6F                 	db	111	;'o'
  1641  00F17E  66                 	db	102	;'f'
  1642  00F17F  20                 	db	32
  1643  00F180  41                 	db	65	;'A'
  1644  00F181  6E                 	db	110	;'n'
  1645  00F182  61                 	db	97	;'a'
  1646  00F183  6C                 	db	108	;'l'
  1647  00F184  6F                 	db	111	;'o'
  1648  00F185  67                 	db	103	;'g'
  1649  00F186  20                 	db	32
  1650  00F187  56                 	db	86	;'V'
  1651  00F188  53                 	db	83	;'S'
  1652  00F189  53                 	db	83	;'S'
  1653  00F18A  20                 	db	32
  1654  00F18B  69                 	db	105	;'i'
  1655  00F18C  6E                 	db	110	;'n'
  1656  00F18D  20                 	db	32
  1657  00F18E  76                 	db	118	;'v'
  1658  00F18F  6F                 	db	111	;'o'
  1659  00F190  6C                 	db	108	;'l'
  1660  00F191  74                 	db	116	;'t'
  1661  00F192  73                 	db	115	;'s'
  1662  00F193  0A                 	db	10
  1663  00F194  0D                 	db	13
  1664  00F195  50                 	db	80	;'P'
  1665  00F196  72                 	db	114	;'r'
  1666  00F197  69                 	db	105	;'i'
  1667  00F198  6D                 	db	109	;'m'
  1668  00F199  61                 	db	97	;'a'
  1669  00F19A  72                 	db	114	;'r'
  1670  00F19B  79                 	db	121	;'y'
  1671  00F19C  20                 	db	32
  1672  00F19D  4D                 	db	77	;'M'
  1673  00F19E  65                 	db	101	;'e'
  1674  00F19F  61                 	db	97	;'a'
  1675  00F1A0  73                 	db	115	;'s'
  1676  00F1A1  75                 	db	117	;'u'
  1677  00F1A2  72                 	db	114	;'r'
  1678  00F1A3  65                 	db	101	;'e'
  1679  00F1A4  6D                 	db	109	;'m'
  1680  00F1A5  65                 	db	101	;'e'
  1681  00F1A6  6E                 	db	110	;'n'
  1682  00F1A7  74                 	db	116	;'t'
  1683  00F1A8  20                 	db	32
  1684  00F1A9  43                 	db	67	;'C'
  1685  00F1AA  6F                 	db	111	;'o'
  1686  00F1AB  6D                 	db	109	;'m'
  1687  00F1AC  6D                 	db	109	;'m'
  1688  00F1AD  61                 	db	97	;'a'
  1689  00F1AE  6E                 	db	110	;'n'
  1690  00F1AF  64                 	db	100	;'d'
  1691  00F1B0  73                 	db	115	;'s'
  1692  00F1B1  3A                 	db	58	;':'
  1693  00F1B2  0A                 	db	10
  1694  00F1B3  0D                 	db	13
  1695  00F1B4  20                 	db	32
  1696  00F1B5  20                 	db	32
  1697  00F1B6  20                 	db	32
  1698  00F1B7  4D                 	db	77	;'M'
  1699  00F1B8  65                 	db	101	;'e'
  1700  00F1B9  61                 	db	97	;'a'
  1701  00F1BA  73                 	db	115	;'s'
  1702  00F1BB  75                 	db	117	;'u'
  1703  00F1BC  72                 	db	114	;'r'
  1704  00F1BD  65                 	db	101	;'e'
  1705  00F1BE  20                 	db	32
  1706  00F1BF  44                 	db	68	;'D'
  1707  00F1C0  65                 	db	101	;'e'
  1708  00F1C1  74                 	db	116	;'t'
  1709  00F1C2  65                 	db	101	;'e'
  1710  00F1C3  63                 	db	99	;'c'
  1711  00F1C4  74                 	db	116	;'t'
  1712  00F1C5  65                 	db	101	;'e'
  1713  00F1C6  64                 	db	100	;'d'
  1714  00F1C7  20                 	db	32
  1715  00F1C8  43                 	db	67	;'C'
  1716  00F1C9  75                 	db	117	;'u'
  1717  00F1CA  72                 	db	114	;'r'
  1718  00F1CB  72                 	db	114	;'r'
  1719  00F1CC  65                 	db	101	;'e'
  1720  00F1CD  6E                 	db	110	;'n'
  1721  00F1CE  74                 	db	116	;'t'
  1722  00F1CF  3F                 	db	63	;'?'
  1723  00F1D0  3A                 	db	58	;':'
  1724  00F1D1  20                 	db	32
  1725  00F1D2  52                 	db	82	;'R'
  1726  00F1D3  65                 	db	101	;'e'
  1727  00F1D4  74                 	db	116	;'t'
  1728  00F1D5  75                 	db	117	;'u'
  1729  00F1D6  72                 	db	114	;'r'
  1730  00F1D7  6E                 	db	110	;'n'
  1731  00F1D8  73                 	db	115	;'s'
  1732  00F1D9  20                 	db	32
  1733  00F1DA  6D                 	db	109	;'m'
  1734  00F1DB  65                 	db	101	;'e'
  1735  00F1DC  61                 	db	97	;'a'
  1736  00F1DD  73                 	db	115	;'s'
  1737  00F1DE  75                 	db	117	;'u'
  1738  00F1DF  72                 	db	114	;'r'
  1739  00F1E0  65                 	db	101	;'e'
  1740  00F1E1  64                 	db	100	;'d'
  1741  00F1E2  20                 	db	32
  1742  00F1E3  6F                 	db	111	;'o'
  1743  00F1E4  75                 	db	117	;'u'
  1744  00F1E5  74                 	db	116	;'t'
  1745  00F1E6  70                 	db	112	;'p'
  1746  00F1E7  75                 	db	117	;'u'
  1747  00F1E8  74                 	db	116	;'t'
  1748  00F1E9  20                 	db	32
  1749  00F1EA  63                 	db	99	;'c'
  1750  00F1EB  75                 	db	117	;'u'
  1751  00F1EC  72                 	db	114	;'r'
  1752  00F1ED  72                 	db	114	;'r'
  1753  00F1EE  65                 	db	101	;'e'
  1754  00F1EF  6E                 	db	110	;'n'
  1755  00F1F0  74                 	db	116	;'t'
  1756  00F1F1  20                 	db	32
  1757  00F1F2  69                 	db	105	;'i'
  1758  00F1F3  6E                 	db	110	;'n'
  1759  00F1F4  20                 	db	32
  1760  00F1F5  61                 	db	97	;'a'
  1761  00F1F6  6D                 	db	109	;'m'
  1762  00F1F7  70                 	db	112	;'p'
  1763  00F1F8  73                 	db	115	;'s'
  1764  00F1F9  20                 	db	32
  1765  00F1FA  61                 	db	97	;'a'
  1766  00F1FB  73                 	db	115	;'s'
  1767  00F1FC  20                 	db	32
  1768  00F1FD  73                 	db	115	;'s'
  1769  00F1FE  65                 	db	101	;'e'
  1770  00F1FF  65                 	db	101	;'e'
  1771  00F200  6E                 	db	110	;'n'
  1772  00F201  20                 	db	32
  1773  00F202  62                 	db	98	;'b'
  1774  00F203  79                 	db	121	;'y'
  1775  00F204  20                 	db	32
  1776  00F205  41                 	db	65	;'A'
  1777  00F206  44                 	db	68	;'D'
  1778  00F207  43                 	db	67	;'C'
  1779  00F208  0A                 	db	10
  1780  00F209  0D                 	db	13
  1781  00F20A  20                 	db	32
  1782  00F20B  20                 	db	32
  1783  00F20C  20                 	db	32
  1784  00F20D  4D                 	db	77	;'M'
  1785  00F20E  65                 	db	101	;'e'
  1786  00F20F  61                 	db	97	;'a'
  1787  00F210  73                 	db	115	;'s'
  1788  00F211  75                 	db	117	;'u'
  1789  00F212  72                 	db	114	;'r'
  1790  00F213  65                 	db	101	;'e'
  1791  00F214  20                 	db	32
  1792  00F215  52                 	db	82	;'R'
  1793  00F216  4D                 	db	77	;'M'
  1794  00F217  53                 	db	83	;'S'
  1795  00F218  20                 	db	32
  1796  00F219  43                 	db	67	;'C'
  1797  00F21A  75                 	db	117	;'u'
  1798  00F21B  72                 	db	114	;'r'
  1799  00F21C  72                 	db	114	;'r'
  1800  00F21D  65                 	db	101	;'e'
  1801  00F21E  6E                 	db	110	;'n'
  1802  00F21F  74                 	db	116	;'t'
  1803  00F220  3F                 	db	63	;'?'
  1804  00F221  3A                 	db	58	;':'
  1805  00F222  20                 	db	32
  1806  00F223  52                 	db	82	;'R'
  1807  00F224  65                 	db	101	;'e'
  1808  00F225  74                 	db	116	;'t'
  1809  00F226  75                 	db	117	;'u'
  1810  00F227  72                 	db	114	;'r'
  1811  00F228  6E                 	db	110	;'n'
  1812  00F229  73                 	db	115	;'s'
  1813  00F22A  20                 	db	32
  1814  00F22B  74                 	db	116	;'t'
  1815  00F22C  68                 	db	104	;'h'
  1816  00F22D  65                 	db	101	;'e'
  1817  00F22E  20                 	db	32
  1818  00F22F  63                 	db	99	;'c'
  1819  00F230  61                 	db	97	;'a'
  1820  00F231  6C                 	db	108	;'l'
  1821  00F232  63                 	db	99	;'c'
  1822  00F233  75                 	db	117	;'u'
  1823  00F234  6C                 	db	108	;'l'
  1824  00F235  61                 	db	97	;'a'
  1825  00F236  74                 	db	116	;'t'
  1826  00F237  65                 	db	101	;'e'
  1827  00F238  64                 	db	100	;'d'
  1828  00F239  20                 	db	32
  1829  00F23A  52                 	db	82	;'R'
  1830  00F23B  4D                 	db	77	;'M'
  1831  00F23C  53                 	db	83	;'S'
  1832  00F23D  20                 	db	32
  1833  00F23E  6F                 	db	111	;'o'
  1834  00F23F  75                 	db	117	;'u'
  1835  00F240  74                 	db	116	;'t'
  1836  00F241  70                 	db	112	;'p'
  1837  00F242  75                 	db	117	;'u'
  1838  00F243  74                 	db	116	;'t'
  1839  00F244  20                 	db	32
  1840  00F245  63                 	db	99	;'c'
  1841  00F246  75                 	db	117	;'u'
  1842  00F247  72                 	db	114	;'r'
  1843  00F248  72                 	db	114	;'r'
  1844  00F249  65                 	db	101	;'e'
  1845  00F24A  6E                 	db	110	;'n'
  1846  00F24B  74                 	db	116	;'t'
  1847  00F24C  20                 	db	32
  1848  00F24D  66                 	db	102	;'f'
  1849  00F24E  72                 	db	114	;'r'
  1850  00F24F  6F                 	db	111	;'o'
  1851  00F250  6D                 	db	109	;'m'
  1852  00F251  20                 	db	32
  1853  00F252  6D                 	db	109	;'m'
  1854  00F253  65                 	db	101	;'e'
  1855  00F254  61                 	db	97	;'a'
  1856  00F255  73                 	db	115	;'s'
  1857  00F256  75                 	db	117	;'u'
  1858  00F257  72                 	db	114	;'r'
  1859  00F258  65                 	db	101	;'e'
  1860  00F259  6D                 	db	109	;'m'
  1861  00F25A  65                 	db	101	;'e'
  1862  00F25B  6E                 	db	110	;'n'
  1863  00F25C  74                 	db	116	;'t'
  1864  00F25D  73                 	db	115	;'s'
  1865  00F25E  20                 	db	32
  1866  00F25F  61                 	db	97	;'a'
  1867  00F260  6E                 	db	110	;'n'
  1868  00F261  64                 	db	100	;'d'
  1869  00F262  20                 	db	32
  1870  00F263  54                 	db	84	;'T'
  1871  00F264  52                 	db	82	;'R'
  1872  00F265  49                 	db	73	;'I'
  1873  00F266  41                 	db	65	;'A'
  1874  00F267  43                 	db	67	;'C'
  1875  00F268  20                 	db	32
  1876  00F269  66                 	db	102	;'f'
  1877  00F26A  69                 	db	105	;'i'
  1878  00F26B  72                 	db	114	;'r'
  1879  00F26C  69                 	db	105	;'i'
  1880  00F26D  6E                 	db	110	;'n'
  1881  00F26E  67                 	db	103	;'g'
  1882  00F26F  20                 	db	32
  1883  00F270  61                 	db	97	;'a'
  1884  00F271  6E                 	db	110	;'n'
  1885  00F272  67                 	db	103	;'g'
  1886  00F273  6C                 	db	108	;'l'
  1887  00F274  65                 	db	101	;'e'
  1888  00F275  0A                 	db	10
  1889  00F276  0D                 	db	13
  1890  00F277  20                 	db	32
  1891  00F278  20                 	db	32
  1892  00F279  20                 	db	32
  1893  00F27A  4D                 	db	77	;'M'
  1894  00F27B  65                 	db	101	;'e'
  1895  00F27C  61                 	db	97	;'a'
  1896  00F27D  73                 	db	115	;'s'
  1897  00F27E  75                 	db	117	;'u'
  1898  00F27F  72                 	db	114	;'r'
  1899  00F280  65                 	db	101	;'e'
  1900  00F281  20                 	db	32
  1901  00F282  52                 	db	82	;'R'
  1902  00F283  4D                 	db	77	;'M'
  1903  00F284  53                 	db	83	;'S'
  1904  00F285  20                 	db	32
  1905  00F286  56                 	db	86	;'V'
  1906  00F287  6F                 	db	111	;'o'
  1907  00F288  6C                 	db	108	;'l'
  1908  00F289  74                 	db	116	;'t'
  1909  00F28A  61                 	db	97	;'a'
  1910  00F28B  67                 	db	103	;'g'
  1911  00F28C  65                 	db	101	;'e'
  1912  00F28D  3F                 	db	63	;'?'
  1913  00F28E  3A                 	db	58	;':'
  1914  00F28F  20                 	db	32
  1915  00F290  52                 	db	82	;'R'
  1916  00F291  65                 	db	101	;'e'
  1917  00F292  74                 	db	116	;'t'
  1918  00F293  75                 	db	117	;'u'
  1919  00F294  72                 	db	114	;'r'
  1920  00F295  6E                 	db	110	;'n'
  1921  00F296  73                 	db	115	;'s'
  1922  00F297  20                 	db	32
  1923  00F298  74                 	db	116	;'t'
  1924  00F299  68                 	db	104	;'h'
  1925  00F29A  65                 	db	101	;'e'
  1926  00F29B  20                 	db	32
  1927  00F29C  63                 	db	99	;'c'
  1928  00F29D  61                 	db	97	;'a'
  1929  00F29E  6C                 	db	108	;'l'
  1930  00F29F  63                 	db	99	;'c'
  1931  00F2A0  75                 	db	117	;'u'
  1932  00F2A1  6C                 	db	108	;'l'
  1933  00F2A2  61                 	db	97	;'a'
  1934  00F2A3  74                 	db	116	;'t'
  1935  00F2A4  65                 	db	101	;'e'
  1936  00F2A5  64                 	db	100	;'d'
  1937  00F2A6  20                 	db	32
  1938  00F2A7  52                 	db	82	;'R'
  1939  00F2A8  4D                 	db	77	;'M'
  1940  00F2A9  53                 	db	83	;'S'
  1941  00F2AA  20                 	db	32
  1942  00F2AB  6F                 	db	111	;'o'
  1943  00F2AC  75                 	db	117	;'u'
  1944  00F2AD  74                 	db	116	;'t'
  1945  00F2AE  70                 	db	112	;'p'
  1946  00F2AF  75                 	db	117	;'u'
  1947  00F2B0  74                 	db	116	;'t'
  1948  00F2B1  20                 	db	32
  1949  00F2B2  76                 	db	118	;'v'
  1950  00F2B3  6F                 	db	111	;'o'
  1951  00F2B4  6C                 	db	108	;'l'
  1952  00F2B5  74                 	db	116	;'t'
  1953  00F2B6  61                 	db	97	;'a'
  1954  00F2B7  67                 	db	103	;'g'
  1955  00F2B8  65                 	db	101	;'e'
  1956  00F2B9  20                 	db	32
  1957  00F2BA  66                 	db	102	;'f'
  1958  00F2BB  72                 	db	114	;'r'
  1959  00F2BC  6F                 	db	111	;'o'
  1960  00F2BD  6D                 	db	109	;'m'
  1961  00F2BE  20                 	db	32
  1962  00F2BF  54                 	db	84	;'T'
  1963  00F2C0  52                 	db	82	;'R'
  1964  00F2C1  49                 	db	73	;'I'
  1965  00F2C2  41                 	db	65	;'A'
  1966  00F2C3  43                 	db	67	;'C'
  1967  00F2C4  20                 	db	32
  1968  00F2C5  66                 	db	102	;'f'
  1969  00F2C6  69                 	db	105	;'i'
  1970  00F2C7  72                 	db	114	;'r'
  1971  00F2C8  69                 	db	105	;'i'
  1972  00F2C9  6E                 	db	110	;'n'
  1973  00F2CA  67                 	db	103	;'g'
  1974  00F2CB  20                 	db	32
  1975  00F2CC  61                 	db	97	;'a'
  1976  00F2CD  6E                 	db	110	;'n'
  1977  00F2CE  67                 	db	103	;'g'
  1978  00F2CF  6C                 	db	108	;'l'
  1979  00F2D0  65                 	db	101	;'e'
  1980  00F2D1  0A                 	db	10
  1981  00F2D2  0D                 	db	13
  1982  00F2D3  20                 	db	32
  1983  00F2D4  20                 	db	32
  1984  00F2D5  20                 	db	32
  1985  00F2D6  4D                 	db	77	;'M'
  1986  00F2D7  65                 	db	101	;'e'
  1987  00F2D8  61                 	db	97	;'a'
  1988  00F2D9  73                 	db	115	;'s'
  1989  00F2DA  75                 	db	117	;'u'
  1990  00F2DB  72                 	db	114	;'r'
  1991  00F2DC  65                 	db	101	;'e'
  1992  00F2DD  20                 	db	32
  1993  00F2DE  50                 	db	80	;'P'
  1994  00F2DF  6F                 	db	111	;'o'
  1995  00F2E0  77                 	db	119	;'w'
  1996  00F2E1  65                 	db	101	;'e'
  1997  00F2E2  72                 	db	114	;'r'
  1998  00F2E3  3F                 	db	63	;'?'
  1999  00F2E4  3A                 	db	58	;':'
  2000  00F2E5  20                 	db	32
  2001  00F2E6  52                 	db	82	;'R'
  2002  00F2E7  65                 	db	101	;'e'
  2003  00F2E8  74                 	db	116	;'t'
  2004  00F2E9  75                 	db	117	;'u'
  2005  00F2EA  72                 	db	114	;'r'
  2006  00F2EB  6E                 	db	110	;'n'
  2007  00F2EC  73                 	db	115	;'s'
  2008  00F2ED  20                 	db	32
  2009  00F2EE  74                 	db	116	;'t'
  2010  00F2EF  68                 	db	104	;'h'
  2011  00F2F0  65                 	db	101	;'e'
  2012  00F2F1  20                 	db	32
  2013  00F2F2  63                 	db	99	;'c'
  2014  00F2F3  61                 	db	97	;'a'
  2015  00F2F4  6C                 	db	108	;'l'
  2016  00F2F5  63                 	db	99	;'c'
  2017  00F2F6  75                 	db	117	;'u'
  2018  00F2F7  6C                 	db	108	;'l'
  2019  00F2F8  61                 	db	97	;'a'
  2020  00F2F9  74                 	db	116	;'t'
  2021  00F2FA  65                 	db	101	;'e'
  2022  00F2FB  64                 	db	100	;'d'
  2023  00F2FC  20                 	db	32
  2024  00F2FD  6F                 	db	111	;'o'
  2025  00F2FE  75                 	db	117	;'u'
  2026  00F2FF  74                 	db	116	;'t'
  2027  00F300  70                 	db	112	;'p'
  2028  00F301  75                 	db	117	;'u'
  2029  00F302  74                 	db	116	;'t'
  2030  00F303  20                 	db	32
  2031  00F304  70                 	db	112	;'p'
  2032  00F305  6F                 	db	111	;'o'
  2033  00F306  77                 	db	119	;'w'
  2034  00F307  65                 	db	101	;'e'
  2035  00F308  72                 	db	114	;'r'
  2036  00F309  20                 	db	32
  2037  00F30A  69                 	db	105	;'i'
  2038  00F30B  6E                 	db	110	;'n'
  2039  00F30C  20                 	db	32
  2040  00F30D  57                 	db	87	;'W'
  2041  00F30E  61                 	db	97	;'a'
  2042  00F30F  74                 	db	116	;'t'
  2043  00F310  74                 	db	116	;'t'
  2044  00F311  73                 	db	115	;'s'
  2045  00F312  0A                 	db	10
  2046  00F313  0D                 	db	13
  2047  00F314  20                 	db	32
  2048  00F315  20                 	db	32
  2049  00F316  20                 	db	32
  2050  00F317  4C                 	db	76	;'L'
  2051  00F318  6F                 	db	111	;'o'
  2052  00F319  61                 	db	97	;'a'
  2053  00F31A  64                 	db	100	;'d'
  2054  00F31B  20                 	db	32
  2055  00F31C  4F                 	db	79	;'O'
  2056  00F31D  6E                 	db	110	;'n'
  2057  00F31E  20                 	db	32
  2058  00F31F  54                 	db	84	;'T'
  2059  00F320  69                 	db	105	;'i'
  2060  00F321  6D                 	db	109	;'m'
  2061  00F322  65                 	db	101	;'e'
  2062  00F323  3F                 	db	63	;'?'
  2063  00F324  3A                 	db	58	;':'
  2064  00F325  20                 	db	32
  2065  00F326  52                 	db	82	;'R'
  2066  00F327  65                 	db	101	;'e'
  2067  00F328  74                 	db	116	;'t'
  2068  00F329  75                 	db	117	;'u'
  2069  00F32A  72                 	db	114	;'r'
  2070  00F32B  6E                 	db	110	;'n'
  2071  00F32C  73                 	db	115	;'s'
  2072  00F32D  20                 	db	32
  2073  00F32E  6C                 	db	108	;'l'
  2074  00F32F  6F                 	db	111	;'o'
  2075  00F330  61                 	db	97	;'a'
  2076  00F331  64                 	db	100	;'d'
  2077  00F332  20                 	db	32
  2078  00F333  6F                 	db	111	;'o'
  2079  00F334  6E                 	db	110	;'n'
  2080  00F335  20                 	db	32
  2081  00F336  74                 	db	116	;'t'
  2082  00F337  69                 	db	105	;'i'
  2083  00F338  6D                 	db	109	;'m'
  2084  00F339  65                 	db	101	;'e'
  2085  00F33A  20                 	db	32
  2086  00F33B  73                 	db	115	;'s'
  2087  00F33C  69                 	db	105	;'i'
  2088  00F33D  6E                 	db	110	;'n'
  2089  00F33E  63                 	db	99	;'c'
  2090  00F33F  65                 	db	101	;'e'
  2091  00F340  20                 	db	32
  2092  00F341  6C                 	db	108	;'l'
  2093  00F342  61                 	db	97	;'a'
  2094  00F343  73                 	db	115	;'s'
  2095  00F344  74                 	db	116	;'t'
  2096  00F345  20                 	db	32
  2097  00F346  64                 	db	100	;'d'
  2098  00F347  65                 	db	101	;'e'
  2099  00F348  76                 	db	118	;'v'
  2100  00F349  69                 	db	105	;'i'
  2101  00F34A  63                 	db	99	;'c'
  2102  00F34B  65                 	db	101	;'e'
  2103  00F34C  20                 	db	32
  2104  00F34D  72                 	db	114	;'r'
  2105  00F34E  65                 	db	101	;'e'
  2106  00F34F  73                 	db	115	;'s'
  2107  00F350  65                 	db	101	;'e'
  2108  00F351  74                 	db	116	;'t'
  2109  00F352  20                 	db	32
  2110  00F353  69                 	db	105	;'i'
  2111  00F354  6E                 	db	110	;'n'
  2112  00F355  20                 	db	32
  2113  00F356  73                 	db	115	;'s'
  2114  00F357  65                 	db	101	;'e'
  2115  00F358  63                 	db	99	;'c'
  2116  00F359  6F                 	db	111	;'o'
  2117  00F35A  6E                 	db	110	;'n'
  2118  00F35B  64                 	db	100	;'d'
  2119  00F35C  73                 	db	115	;'s'
  2120  00F35D  0A                 	db	10
  2121  00F35E  0D                 	db	13
  2122  00F35F  4F                 	db	79	;'O'
  2123  00F360  75                 	db	117	;'u'
  2124  00F361  74                 	db	116	;'t'
  2125  00F362  70                 	db	112	;'p'
  2126  00F363  75                 	db	117	;'u'
  2127  00F364  74                 	db	116	;'t'
  2128  00F365  20                 	db	32
  2129  00F366  43                 	db	67	;'C'
  2130  00F367  6F                 	db	111	;'o'
  2131  00F368  6E                 	db	110	;'n'
  2132  00F369  74                 	db	116	;'t'
  2133  00F36A  72                 	db	114	;'r'
  2134  00F36B  6F                 	db	111	;'o'
  2135  00F36C  6C                 	db	108	;'l'
  2136  00F36D  20                 	db	32
  2137  00F36E  43                 	db	67	;'C'
  2138  00F36F  6F                 	db	111	;'o'
  2139  00F370  6D                 	db	109	;'m'
  2140  00F371  6D                 	db	109	;'m'
  2141  00F372  61                 	db	97	;'a'
  2142  00F373  6E                 	db	110	;'n'
  2143  00F374  64                 	db	100	;'d'
  2144  00F375  73                 	db	115	;'s'
  2145  00F376  3A                 	db	58	;':'
  2146  00F377  0A                 	db	10
  2147  00F378  0D                 	db	13
  2148  00F379  20                 	db	32
  2149  00F37A  20                 	db	32
  2150  00F37B  20                 	db	32
  2151  00F37C  45                 	db	69	;'E'
  2152  00F37D  6E                 	db	110	;'n'
  2153  00F37E  61                 	db	97	;'a'
  2154  00F37F  62                 	db	98	;'b'
  2155  00F380  6C                 	db	108	;'l'
  2156  00F381  65                 	db	101	;'e'
  2157  00F382  20                 	db	32
  2158  00F383  44                 	db	68	;'D'
  2159  00F384  69                 	db	105	;'i'
  2160  00F385  6D                 	db	109	;'m'
  2161  00F386  6D                 	db	109	;'m'
  2162  00F387  69                 	db	105	;'i'
  2163  00F388  6E                 	db	110	;'n'
  2164  00F389  67                 	db	103	;'g'
  2165  00F38A  3A                 	db	58	;':'
  2166  00F38B  20                 	db	32
  2167  00F38C  45                 	db	69	;'E'
  2168  00F38D  6E                 	db	110	;'n'
  2169  00F38E  61                 	db	97	;'a'
  2170  00F38F  62                 	db	98	;'b'
  2171  00F390  6C                 	db	108	;'l'
  2172  00F391  65                 	db	101	;'e'
  2173  00F392  20                 	db	32
  2174  00F393  54                 	db	84	;'T'
  2175  00F394  52                 	db	82	;'R'
  2176  00F395  49                 	db	73	;'I'
  2177  00F396  41                 	db	65	;'A'
  2178  00F397  43                 	db	67	;'C'
  2179  00F398  20                 	db	32
  2180  00F399  6F                 	db	111	;'o'
  2181  00F39A  75                 	db	117	;'u'
  2182  00F39B  74                 	db	116	;'t'
  2183  00F39C  70                 	db	112	;'p'
  2184  00F39D  75                 	db	117	;'u'
  2185  00F39E  74                 	db	116	;'t'
  2186  00F39F  20                 	db	32
  2187  00F3A0  64                 	db	100	;'d'
  2188  00F3A1  69                 	db	105	;'i'
  2189  00F3A2  6D                 	db	109	;'m'
  2190  00F3A3  6D                 	db	109	;'m'
  2191  00F3A4  69                 	db	105	;'i'
  2192  00F3A5  6E                 	db	110	;'n'
  2193  00F3A6  67                 	db	103	;'g'
  2194  00F3A7  0A                 	db	10
  2195  00F3A8  0D                 	db	13
  2196  00F3A9  20                 	db	32
  2197  00F3AA  20                 	db	32
  2198  00F3AB  20                 	db	32
  2199  00F3AC  44                 	db	68	;'D'
  2200  00F3AD  69                 	db	105	;'i'
  2201  00F3AE  73                 	db	115	;'s'
  2202  00F3AF  61                 	db	97	;'a'
  2203  00F3B0  62                 	db	98	;'b'
  2204  00F3B1  6C                 	db	108	;'l'
  2205  00F3B2  65                 	db	101	;'e'
  2206  00F3B3  20                 	db	32
  2207  00F3B4  44                 	db	68	;'D'
  2208  00F3B5  69                 	db	105	;'i'
  2209  00F3B6  6D                 	db	109	;'m'
  2210  00F3B7  6D                 	db	109	;'m'
  2211  00F3B8  69                 	db	105	;'i'
  2212  00F3B9  6E                 	db	110	;'n'
  2213  00F3BA  67                 	db	103	;'g'
  2214  00F3BB  3A                 	db	58	;':'
  2215  00F3BC  20                 	db	32
  2216  00F3BD  44                 	db	68	;'D'
  2217  00F3BE  69                 	db	105	;'i'
  2218  00F3BF  73                 	db	115	;'s'
  2219  00F3C0  61                 	db	97	;'a'
  2220  00F3C1  62                 	db	98	;'b'
  2221  00F3C2  6C                 	db	108	;'l'
  2222  00F3C3  65                 	db	101	;'e'
  2223  00F3C4  20                 	db	32
  2224  00F3C5  54                 	db	84	;'T'
  2225  00F3C6  52                 	db	82	;'R'
  2226  00F3C7  49                 	db	73	;'I'
  2227  00F3C8  41                 	db	65	;'A'
  2228  00F3C9  43                 	db	67	;'C'
  2229  00F3CA  20                 	db	32
  2230  00F3CB  6F                 	db	111	;'o'
  2231  00F3CC  75                 	db	117	;'u'
  2232  00F3CD  74                 	db	116	;'t'
  2233  00F3CE  70                 	db	112	;'p'
  2234  00F3CF  75                 	db	117	;'u'
  2235  00F3D0  74                 	db	116	;'t'
  2236  00F3D1  20                 	db	32
  2237  00F3D2  64                 	db	100	;'d'
  2238  00F3D3  69                 	db	105	;'i'
  2239  00F3D4  6D                 	db	109	;'m'
  2240  00F3D5  6D                 	db	109	;'m'
  2241  00F3D6  69                 	db	105	;'i'
  2242  00F3D7  6E                 	db	110	;'n'
  2243  00F3D8  67                 	db	103	;'g'
  2244  00F3D9  0A                 	db	10
  2245  00F3DA  0D                 	db	13
  2246  00F3DB  20                 	db	32
  2247  00F3DC  20                 	db	32
  2248  00F3DD  20                 	db	32
  2249  00F3DE  45                 	db	69	;'E'
  2250  00F3DF  6E                 	db	110	;'n'
  2251  00F3E0  61                 	db	97	;'a'
  2252  00F3E1  62                 	db	98	;'b'
  2253  00F3E2  6C                 	db	108	;'l'
  2254  00F3E3  65                 	db	101	;'e'
  2255  00F3E4  20                 	db	32
  2256  00F3E5  4C                 	db	76	;'L'
  2257  00F3E6  6F                 	db	111	;'o'
  2258  00F3E7  61                 	db	97	;'a'
  2259  00F3E8  64                 	db	100	;'d'
  2260  00F3E9  3A                 	db	58	;':'
  2261  00F3EA  20                 	db	32
  2262  00F3EB  45                 	db	69	;'E'
  2263  00F3EC  6E                 	db	110	;'n'
  2264  00F3ED  61                 	db	97	;'a'
  2265  00F3EE  62                 	db	98	;'b'
  2266  00F3EF  6C                 	db	108	;'l'
  2267  00F3F0  65                 	db	101	;'e'
  2268  00F3F1  73                 	db	115	;'s'
  2269  00F3F2  20                 	db	32
  2270  00F3F3  74                 	db	116	;'t'
  2271  00F3F4  68                 	db	104	;'h'
  2272  00F3F5  65                 	db	101	;'e'
  2273  00F3F6  20                 	db	32
  2274  00F3F7  6F                 	db	111	;'o'
  2275  00F3F8  75                 	db	117	;'u'
  2276  00F3F9  74                 	db	116	;'t'
  2277  00F3FA  70                 	db	112	;'p'
  2278  00F3FB  75                 	db	117	;'u'
  2279  00F3FC  74                 	db	116	;'t'
  2280  00F3FD  20                 	db	32
  2281  00F3FE  54                 	db	84	;'T'
  2282  00F3FF  52                 	db	82	;'R'
  2283  00F400  49                 	db	73	;'I'
  2284  00F401  41                 	db	65	;'A'
  2285  00F402  43                 	db	67	;'C'
  2286  00F403  20                 	db	32
  2287  00F404  77                 	db	119	;'w'
  2288  00F405  69                 	db	105	;'i'
  2289  00F406  74                 	db	116	;'t'
  2290  00F407  68                 	db	104	;'h'
  2291  00F408  20                 	db	32
  2292  00F409  64                 	db	100	;'d'
  2293  00F40A  69                 	db	105	;'i'
  2294  00F40B  6D                 	db	109	;'m'
  2295  00F40C  6D                 	db	109	;'m'
  2296  00F40D  69                 	db	105	;'i'
  2297  00F40E  6E                 	db	110	;'n'
  2298  00F40F  67                 	db	103	;'g'
  2299  00F410  20                 	db	32
  2300  00F411  64                 	db	100	;'d'
  2301  00F412  69                 	db	105	;'i'
  2302  00F413  73                 	db	115	;'s'
  2303  00F414  61                 	db	97	;'a'
  2304  00F415  62                 	db	98	;'b'
  2305  00F416  6C                 	db	108	;'l'
  2306  00F417  65                 	db	101	;'e'
  2307  00F418  64                 	db	100	;'d'
  2308  00F419  0A                 	db	10
  2309  00F41A  0D                 	db	13
  2310  00F41B  20                 	db	32
  2311  00F41C  20                 	db	32
  2312  00F41D  20                 	db	32
  2313  00F41E  44                 	db	68	;'D'
  2314  00F41F  69                 	db	105	;'i'
  2315  00F420  73                 	db	115	;'s'
  2316  00F421  61                 	db	97	;'a'
  2317  00F422  62                 	db	98	;'b'
  2318  00F423  6C                 	db	108	;'l'
  2319  00F424  65                 	db	101	;'e'
  2320  00F425  20                 	db	32
  2321  00F426  4C                 	db	76	;'L'
  2322  00F427  6F                 	db	111	;'o'
  2323  00F428  61                 	db	97	;'a'
  2324  00F429  64                 	db	100	;'d'
  2325  00F42A  3A                 	db	58	;':'
  2326  00F42B  20                 	db	32
  2327  00F42C  44                 	db	68	;'D'
  2328  00F42D  69                 	db	105	;'i'
  2329  00F42E  73                 	db	115	;'s'
  2330  00F42F  61                 	db	97	;'a'
  2331  00F430  62                 	db	98	;'b'
  2332  00F431  6C                 	db	108	;'l'
  2333  00F432  65                 	db	101	;'e'
  2334  00F433  73                 	db	115	;'s'
  2335  00F434  20                 	db	32
  2336  00F435  74                 	db	116	;'t'
  2337  00F436  68                 	db	104	;'h'
  2338  00F437  65                 	db	101	;'e'
  2339  00F438  20                 	db	32
  2340  00F439  6F                 	db	111	;'o'
  2341  00F43A  75                 	db	117	;'u'
  2342  00F43B  74                 	db	116	;'t'
  2343  00F43C  70                 	db	112	;'p'
  2344  00F43D  75                 	db	117	;'u'
  2345  00F43E  74                 	db	116	;'t'
  2346  00F43F  20                 	db	32
  2347  00F440  54                 	db	84	;'T'
  2348  00F441  52                 	db	82	;'R'
  2349  00F442  49                 	db	73	;'I'
  2350  00F443  41                 	db	65	;'A'
  2351  00F444  43                 	db	67	;'C'
  2352  00F445  20                 	db	32
  2353  00F446  63                 	db	99	;'c'
  2354  00F447  6F                 	db	111	;'o'
  2355  00F448  6D                 	db	109	;'m'
  2356  00F449  70                 	db	112	;'p'
  2357  00F44A  6C                 	db	108	;'l'
  2358  00F44B  65                 	db	101	;'e'
  2359  00F44C  74                 	db	116	;'t'
  2360  00F44D  65                 	db	101	;'e'
  2361  00F44E  6C                 	db	108	;'l'
  2362  00F44F  79                 	db	121	;'y'
  2363  00F450  0A                 	db	10
  2364  00F451  0D                 	db	13
  2365  00F452  20                 	db	32
  2366  00F453  20                 	db	32
  2367  00F454  20                 	db	32
  2368  00F455  53                 	db	83	;'S'
  2369  00F456  65                 	db	101	;'e'
  2370  00F457  74                 	db	116	;'t'
  2371  00F458  20                 	db	32
  2372  00F459  44                 	db	68	;'D'
  2373  00F45A  69                 	db	105	;'i'
  2374  00F45B  6D                 	db	109	;'m'
  2375  00F45C  6D                 	db	109	;'m'
  2376  00F45D  69                 	db	105	;'i'
  2377  00F45E  6E                 	db	110	;'n'
  2378  00F45F  67                 	db	103	;'g'
  2379  00F460  20                 	db	32
  2380  00F461  50                 	db	80	;'P'
  2381  00F462  65                 	db	101	;'e'
  2382  00F463  72                 	db	114	;'r'
  2383  00F464  63                 	db	99	;'c'
  2384  00F465  65                 	db	101	;'e'
  2385  00F466  6E                 	db	110	;'n'
  2386  00F467  74                 	db	116	;'t'
  2387  00F468  61                 	db	97	;'a'
  2388  00F469  67                 	db	103	;'g'
  2389  00F46A  65                 	db	101	;'e'
  2390  00F46B  3A                 	db	58	;':'
  2391  00F46C  20                 	db	32
  2392  00F46D  3C                 	db	60	;'<'
  2393  00F46E  78                 	db	120	;'x'
  2394  00F46F  3E                 	db	62	;'>'
  2395  00F470  3A                 	db	58	;':'
  2396  00F471  20                 	db	32
  2397  00F472  53                 	db	83	;'S'
  2398  00F473  65                 	db	101	;'e'
  2399  00F474  74                 	db	116	;'t'
  2400  00F475  73                 	db	115	;'s'
  2401  00F476  20                 	db	32
  2402  00F477  74                 	db	116	;'t'
  2403  00F478  68                 	db	104	;'h'
  2404  00F479  65                 	db	101	;'e'
  2405  00F47A  20                 	db	32
  2406  00F47B  6F                 	db	111	;'o'
  2407  00F47C  75                 	db	117	;'u'
  2408  00F47D  74                 	db	116	;'t'
  2409  00F47E  70                 	db	112	;'p'
  2410  00F47F  75                 	db	117	;'u'
  2411  00F480  74                 	db	116	;'t'
  2412  00F481  20                 	db	32
  2413  00F482  64                 	db	100	;'d'
  2414  00F483  69                 	db	105	;'i'
  2415  00F484  6D                 	db	109	;'m'
  2416  00F485  6D                 	db	109	;'m'
  2417  00F486  69                 	db	105	;'i'
  2418  00F487  6E                 	db	110	;'n'
  2419  00F488  67                 	db	103	;'g'
  2420  00F489  20                 	db	32
  2421  00F48A  70                 	db	112	;'p'
  2422  00F48B  65                 	db	101	;'e'
  2423  00F48C  72                 	db	114	;'r'
  2424  00F48D  63                 	db	99	;'c'
  2425  00F48E  65                 	db	101	;'e'
  2426  00F48F  6E                 	db	110	;'n'
  2427  00F490  74                 	db	116	;'t'
  2428  00F491  61                 	db	97	;'a'
  2429  00F492  67                 	db	103	;'g'
  2430  00F493  65                 	db	101	;'e'
  2431  00F494  20                 	db	32
  2432  00F495  61                 	db	97	;'a'
  2433  00F496  73                 	db	115	;'s'
  2434  00F497  20                 	db	32
  2435  00F498  78                 	db	120	;'x'
  2436  00F499  20                 	db	32
  2437  00F49A  70                 	db	112	;'p'
  2438  00F49B  65                 	db	101	;'e'
  2439  00F49C  72                 	db	114	;'r'
  2440  00F49D  63                 	db	99	;'c'
  2441  00F49E  65                 	db	101	;'e'
  2442  00F49F  6E                 	db	110	;'n'
  2443  00F4A0  74                 	db	116	;'t'
  2444  00F4A1  0A                 	db	10
  2445  00F4A2  0D                 	db	13
  2446  00F4A3  00                 	db	0
  2447  00F4A4  20                 	db	32
  2448  00F4A5  20                 	db	32
  2449  00F4A6  20                 	db	32
  2450  00F4A7  20                 	db	32
  2451  00F4A8  42                 	db	66	;'B'
  2452  00F4A9  6F                 	db	111	;'o'
  2453  00F4AA  6F                 	db	111	;'o'
  2454  00F4AB  74                 	db	116	;'t'
  2455  00F4AC  20                 	db	32
  2456  00F4AD  63                 	db	99	;'c'
  2457  00F4AE  6F                 	db	111	;'o'
  2458  00F4AF  6D                 	db	109	;'m'
  2459  00F4B0  70                 	db	112	;'p'
  2460  00F4B1  6C                 	db	108	;'l'
  2461  00F4B2  65                 	db	101	;'e'
  2462  00F4B3  74                 	db	116	;'t'
  2463  00F4B4  65                 	db	101	;'e'
  2464  00F4B5  0A                 	db	10
  2465  00F4B6  0D                 	db	13
  2466  00F4B7  20                 	db	32
  2467  00F4B8  20                 	db	32
  2468  00F4B9  20                 	db	32
  2469  00F4BA  20                 	db	32
  2470  00F4BB  50                 	db	80	;'P'
  2471  00F4BC  49                 	db	73	;'I'
  2472  00F4BD  43                 	db	67	;'C'
  2473  00F4BE  31                 	db	49	;'1'
  2474  00F4BF  38                 	db	56	;'8'
  2475  00F4C0  46                 	db	70	;'F'
  2476  00F4C1  36                 	db	54	;'6'
  2477  00F4C2  37                 	db	55	;'7'
  2478  00F4C3  4B                 	db	75	;'K'
  2479  00F4C4  34                 	db	52	;'4'
  2480  00F4C5  30                 	db	48	;'0'
  2481  00F4C6  20                 	db	32
  2482  00F4C7  6D                 	db	109	;'m'
  2483  00F4C8  54                 	db	84	;'T'
  2484  00F4C9  6F                 	db	111	;'o'
  2485  00F4CA  75                 	db	117	;'u'
  2486  00F4CB  63                 	db	99	;'c'
  2487  00F4CC  68                 	db	104	;'h'
  2488  00F4CD  20                 	db	32
  2489  00F4CE  54                 	db	84	;'T'
  2490  00F4CF  65                 	db	101	;'e'
  2491  00F4D0  73                 	db	115	;'s'
  2492  00F4D1  74                 	db	116	;'t'
  2493  00F4D2  20                 	db	32
  2494  00F4D3  42                 	db	66	;'B'
  2495  00F4D4  6F                 	db	111	;'o'
  2496  00F4D5  61                 	db	97	;'a'
  2497  00F4D6  72                 	db	114	;'r'
  2498  00F4D7  64                 	db	100	;'d'
  2499  00F4D8  0A                 	db	10
  2500  00F4D9  0D                 	db	13
  2501  00F4DA  20                 	db	32
  2502  00F4DB  20                 	db	32
  2503  00F4DC  20                 	db	32
  2504  00F4DD  20                 	db	32
  2505  00F4DE  45                 	db	69	;'E'
  2506  00F4DF  76                 	db	118	;'v'
  2507  00F4E0  61                 	db	97	;'a'
  2508  00F4E1  6C                 	db	108	;'l'
  2509  00F4E2  75                 	db	117	;'u'
  2510  00F4E3  61                 	db	97	;'a'
  2511  00F4E4  74                 	db	116	;'t'
  2512  00F4E5  65                 	db	101	;'e'
  2513  00F4E6  73                 	db	115	;'s'
  2514  00F4E7  20                 	db	32
  2515  00F4E8  74                 	db	116	;'t'
  2516  00F4E9  68                 	db	104	;'h'
  2517  00F4EA  65                 	db	101	;'e'
  2518  00F4EB  20                 	db	32
  2519  00F4EC  6D                 	db	109	;'m'
  2520  00F4ED  54                 	db	84	;'T'
  2521  00F4EE  6F                 	db	111	;'o'
  2522  00F4EF  75                 	db	117	;'u'
  2523  00F4F0  63                 	db	99	;'c'
  2524  00F4F1  68                 	db	104	;'h'
  2525  00F4F2  20                 	db	32
  2526  00F4F3  63                 	db	99	;'c'
  2527  00F4F4  61                 	db	97	;'a'
  2528  00F4F5  70                 	db	112	;'p'
  2529  00F4F6  61                 	db	97	;'a'
  2530  00F4F7  63                 	db	99	;'c'
  2531  00F4F8  69                 	db	105	;'i'
  2532  00F4F9  74                 	db	116	;'t'
  2533  00F4FA  69                 	db	105	;'i'
  2534  00F4FB  76                 	db	118	;'v'
  2535  00F4FC  65                 	db	101	;'e'
  2536  00F4FD  20                 	db	32
  2537  00F4FE  74                 	db	116	;'t'
  2538  00F4FF  6F                 	db	111	;'o'
  2539  00F500  75                 	db	117	;'u'
  2540  00F501  63                 	db	99	;'c'
  2541  00F502  68                 	db	104	;'h'
  2542  00F503  20                 	db	32
  2543  00F504  6C                 	db	108	;'l'
  2544  00F505  69                 	db	105	;'i'
  2545  00F506  62                 	db	98	;'b'
  2546  00F507  72                 	db	114	;'r'
  2547  00F508  61                 	db	97	;'a'
  2548  00F509  72                 	db	114	;'r'
  2549  00F50A  79                 	db	121	;'y'
  2550  00F50B  20                 	db	32
  2551  00F50C  64                 	db	100	;'d'
  2552  00F50D  69                 	db	105	;'i'
  2553  00F50E  73                 	db	115	;'s'
  2554  00F50F  74                 	db	116	;'t'
  2555  00F510  72                 	db	114	;'r'
  2556  00F511  69                 	db	105	;'i'
  2557  00F512  62                 	db	98	;'b'
  2558  00F513  75                 	db	117	;'u'
  2559  00F514  74                 	db	116	;'t'
  2560  00F515  65                 	db	101	;'e'
  2561  00F516  64                 	db	100	;'d'
  2562  00F517  20                 	db	32
  2563  00F518  62                 	db	98	;'b'
  2564  00F519  79                 	db	121	;'y'
  2565  00F51A  20                 	db	32
  2566  00F51B  4D                 	db	77	;'M'
  2567  00F51C  69                 	db	105	;'i'
  2568  00F51D  63                 	db	99	;'c'
  2569  00F51E  72                 	db	114	;'r'
  2570  00F51F  6F                 	db	111	;'o'
  2571  00F520  63                 	db	99	;'c'
  2572  00F521  68                 	db	104	;'h'
  2573  00F522  69                 	db	105	;'i'
  2574  00F523  70                 	db	112	;'p'
  2575  00F524  0A                 	db	10
  2576  00F525  0D                 	db	13
  2577  00F526  20                 	db	32
  2578  00F527  20                 	db	32
  2579  00F528  20                 	db	32
  2580  00F529  20                 	db	32
  2581  00F52A  53                 	db	83	;'S'
  2582  00F52B  65                 	db	101	;'e'
  2583  00F52C  74                 	db	116	;'t'
  2584  00F52D  73                 	db	115	;'s'
  2585  00F52E  20                 	db	32
  2586  00F52F  74                 	db	116	;'t'
  2587  00F530  68                 	db	104	;'h'
  2588  00F531  65                 	db	101	;'e'
  2589  00F532  20                 	db	32
  2590  00F533  73                 	db	115	;'s'
  2591  00F534  74                 	db	116	;'t'
  2592  00F535  61                 	db	97	;'a'
  2593  00F536  74                 	db	116	;'t'
  2594  00F537  65                 	db	101	;'e'
  2595  00F538  20                 	db	32
  2596  00F539  6F                 	db	111	;'o'
  2597  00F53A  66                 	db	102	;'f'
  2598  00F53B  20                 	db	32
  2599  00F53C  66                 	db	102	;'f'
  2600  00F53D  69                 	db	105	;'i'
  2601  00F53E  76                 	db	118	;'v'
  2602  00F53F  65                 	db	101	;'e'
  2603  00F540  20                 	db	32
  2604  00F541  4C                 	db	76	;'L'
  2605  00F542  45                 	db	69	;'E'
  2606  00F543  44                 	db	68	;'D'
  2607  00F544  73                 	db	115	;'s'
  2608  00F545  20                 	db	32
  2609  00F546  62                 	db	98	;'b'
  2610  00F547  61                 	db	97	;'a'
  2611  00F548  73                 	db	115	;'s'
  2612  00F549  65                 	db	101	;'e'
  2613  00F54A  64                 	db	100	;'d'
  2614  00F54B  20                 	db	32
  2615  00F54C  6F                 	db	111	;'o'
  2616  00F54D  6E                 	db	110	;'n'
  2617  00F54E  20                 	db	32
  2618  00F54F  6D                 	db	109	;'m'
  2619  00F550  54                 	db	84	;'T'
  2620  00F551  6F                 	db	111	;'o'
  2621  00F552  75                 	db	117	;'u'
  2622  00F553  63                 	db	99	;'c'
  2623  00F554  68                 	db	104	;'h'
  2624  00F555  20                 	db	32
  2625  00F556  63                 	db	99	;'c'
  2626  00F557  61                 	db	97	;'a'
  2627  00F558  70                 	db	112	;'p'
  2628  00F559  61                 	db	97	;'a'
  2629  00F55A  63                 	db	99	;'c'
  2630  00F55B  69                 	db	105	;'i'
  2631  00F55C  74                 	db	116	;'t'
  2632  00F55D  69                 	db	105	;'i'
  2633  00F55E  76                 	db	118	;'v'
  2634  00F55F  65                 	db	101	;'e'
  2635  00F560  20                 	db	32
  2636  00F561  70                 	db	112	;'p'
  2637  00F562  75                 	db	117	;'u'
  2638  00F563  73                 	db	115	;'s'
  2639  00F564  68                 	db	104	;'h'
  2640  00F565  62                 	db	98	;'b'
  2641  00F566  75                 	db	117	;'u'
  2642  00F567  74                 	db	116	;'t'
  2643  00F568  74                 	db	116	;'t'
  2644  00F569  6F                 	db	111	;'o'
  2645  00F56A  6E                 	db	110	;'n'
  2646  00F56B  73                 	db	115	;'s'
  2647  00F56C  0A                 	db	10
  2648  00F56D  0D                 	db	13
  2649  00F56E  20                 	db	32
  2650  00F56F  20                 	db	32
  2651  00F570  20                 	db	32
  2652  00F571  20                 	db	32
  2653  00F572  42                 	db	66	;'B'
  2654  00F573  61                 	db	97	;'a'
  2655  00F574  75                 	db	117	;'u'
  2656  00F575  64                 	db	100	;'d'
  2657  00F576  20                 	db	32
  2658  00F577  72                 	db	114	;'r'
  2659  00F578  61                 	db	97	;'a'
  2660  00F579  74                 	db	116	;'t'
  2661  00F57A  65                 	db	101	;'e'
  2662  00F57B  3A                 	db	58	;':'
  2663  00F57C  20                 	db	32
  2664  00F57D  31                 	db	49	;'1'
  2665  00F57E  31                 	db	49	;'1'
  2666  00F57F  35                 	db	53	;'5'
  2667  00F580  32                 	db	50	;'2'
  2668  00F581  30                 	db	48	;'0'
  2669  00F582  30                 	db	48	;'0'
  2670  00F583  20                 	db	32
  2671  00F584  62                 	db	98	;'b'
  2672  00F585  70                 	db	112	;'p'
  2673  00F586  73                 	db	115	;'s'
  2674  00F587  0A                 	db	10
  2675  00F588  0D                 	db	13
  2676  00F589  20                 	db	32
  2677  00F58A  20                 	db	32
  2678  00F58B  20                 	db	32
  2679  00F58C  20                 	db	32
  2680  00F58D  4E                 	db	78	;'N'
  2681  00F58E  6F                 	db	111	;'o'
  2682  00F58F  20                 	db	32
  2683  00F590  70                 	db	112	;'p'
  2684  00F591  61                 	db	97	;'a'
  2685  00F592  72                 	db	114	;'r'
  2686  00F593  69                 	db	105	;'i'
  2687  00F594  74                 	db	116	;'t'
  2688  00F595  79                 	db	121	;'y'
  2689  00F596  2C                 	db	44
  2690  00F597  20                 	db	32
  2691  00F598  38                 	db	56	;'8'
  2692  00F599  20                 	db	32
  2693  00F59A  62                 	db	98	;'b'
  2694  00F59B  69                 	db	105	;'i'
  2695  00F59C  74                 	db	116	;'t'
  2696  00F59D  73                 	db	115	;'s'
  2697  00F59E  2C                 	db	44
  2698  00F59F  20                 	db	32
  2699  00F5A0  6E                 	db	110	;'n'
  2700  00F5A1  6F                 	db	111	;'o'
  2701  00F5A2  20                 	db	32
  2702  00F5A3  66                 	db	102	;'f'
  2703  00F5A4  6C                 	db	108	;'l'
  2704  00F5A5  6F                 	db	111	;'o'
  2705  00F5A6  77                 	db	119	;'w'
  2706  00F5A7  20                 	db	32
  2707  00F5A8  63                 	db	99	;'c'
  2708  00F5A9  6F                 	db	111	;'o'
  2709  00F5AA  6E                 	db	110	;'n'
  2710  00F5AB  74                 	db	116	;'t'
  2711  00F5AC  72                 	db	114	;'r'
  2712  00F5AD  6F                 	db	111	;'o'
  2713  00F5AE  6C                 	db	108	;'l'
  2714  00F5AF  2C                 	db	44
  2715  00F5B0  20                 	db	32
  2716  00F5B1  31                 	db	49	;'1'
  2717  00F5B2  20                 	db	32
  2718  00F5B3  73                 	db	115	;'s'
  2719  00F5B4  74                 	db	116	;'t'
  2720  00F5B5  6F                 	db	111	;'o'
  2721  00F5B6  70                 	db	112	;'p'
  2722  00F5B7  20                 	db	32
  2723  00F5B8  62                 	db	98	;'b'
  2724  00F5B9  69                 	db	105	;'i'
  2725  00F5BA  74                 	db	116	;'t'
  2726  00F5BB  0A                 	db	10
  2727  00F5BC  0D                 	db	13
  2728  00F5BD  20                 	db	32
  2729  00F5BE  20                 	db	32
  2730  00F5BF  20                 	db	32
  2731  00F5C0  20                 	db	32
  2732  00F5C1  43                 	db	67	;'C'
  2733  00F5C2  6F                 	db	111	;'o'
  2734  00F5C3  6D                 	db	109	;'m'
  2735  00F5C4  6D                 	db	109	;'m'
  2736  00F5C5  61                 	db	97	;'a'
  2737  00F5C6  6E                 	db	110	;'n'
  2738  00F5C7  64                 	db	100	;'d'
  2739  00F5C8  73                 	db	115	;'s'
  2740  00F5C9  20                 	db	32
  2741  00F5CA  61                 	db	97	;'a'
  2742  00F5CB  72                 	db	114	;'r'
  2743  00F5CC  65                 	db	101	;'e'
  2744  00F5CD  20                 	db	32
  2745  00F5CE  63                 	db	99	;'c'
  2746  00F5CF  61                 	db	97	;'a'
  2747  00F5D0  73                 	db	115	;'s'
  2748  00F5D1  65                 	db	101	;'e'
  2749  00F5D2  20                 	db	32
  2750  00F5D3  73                 	db	115	;'s'
  2751  00F5D4  65                 	db	101	;'e'
  2752  00F5D5  6E                 	db	110	;'n'
  2753  00F5D6  73                 	db	115	;'s'
  2754  00F5D7  69                 	db	105	;'i'
  2755  00F5D8  74                 	db	116	;'t'
  2756  00F5D9  69                 	db	105	;'i'
  2757  00F5DA  76                 	db	118	;'v'
  2758  00F5DB  65                 	db	101	;'e'
  2759  00F5DC  0A                 	db	10
  2760  00F5DD  0D                 	db	13
  2761  00F5DE  20                 	db	32
  2762  00F5DF  20                 	db	32
  2763  00F5E0  20                 	db	32
  2764  00F5E1  20                 	db	32
  2765  00F5E2  45                 	db	69	;'E'
  2766  00F5E3  6E                 	db	110	;'n'
  2767  00F5E4  74                 	db	116	;'t'
  2768  00F5E5  65                 	db	101	;'e'
  2769  00F5E6  72                 	db	114	;'r'
  2770  00F5E7  20                 	db	32
  2771  00F5E8  61                 	db	97	;'a'
  2772  00F5E9  20                 	db	32
  2773  00F5EA  63                 	db	99	;'c'
  2774  00F5EB  6F                 	db	111	;'o'
  2775  00F5EC  6D                 	db	109	;'m'
  2776  00F5ED  6D                 	db	109	;'m'
  2777  00F5EE  61                 	db	97	;'a'
  2778  00F5EF  6E                 	db	110	;'n'
  2779  00F5F0  64                 	db	100	;'d'
  2780  00F5F1  2C                 	db	44
  2781  00F5F2  20                 	db	32
  2782  00F5F3  6F                 	db	111	;'o'
  2783  00F5F4  72                 	db	114	;'r'
  2784  00F5F5  20                 	db	32
  2785  00F5F6  65                 	db	101	;'e'
  2786  00F5F7  6E                 	db	110	;'n'
  2787  00F5F8  74                 	db	116	;'t'
  2788  00F5F9  65                 	db	101	;'e'
  2789  00F5FA  72                 	db	114	;'r'
  2790  00F5FB  20                 	db	32
  2791  00F5FC  48                 	db	72	;'H'
  2792  00F5FD  65                 	db	101	;'e'
  2793  00F5FE  6C                 	db	108	;'l'
  2794  00F5FF  70                 	db	112	;'p'
  2795  00F600  20                 	db	32
  2796  00F601  66                 	db	102	;'f'
  2797  00F602  6F                 	db	111	;'o'
  2798  00F603  72                 	db	114	;'r'
  2799  00F604  20                 	db	32
  2800  00F605  6C                 	db	108	;'l'
  2801  00F606  69                 	db	105	;'i'
  2802  00F607  73                 	db	115	;'s'
  2803  00F608  74                 	db	116	;'t'
  2804  00F609  20                 	db	32
  2805  00F60A  6F                 	db	111	;'o'
  2806  00F60B  66                 	db	102	;'f'
  2807  00F60C  20                 	db	32
  2808  00F60D  63                 	db	99	;'c'
  2809  00F60E  6F                 	db	111	;'o'
  2810  00F60F  6D                 	db	109	;'m'
  2811  00F610  6D                 	db	109	;'m'
  2812  00F611  61                 	db	97	;'a'
  2813  00F612  6E                 	db	110	;'n'
  2814  00F613  64                 	db	100	;'d'
  2815  00F614  73                 	db	115	;'s'
  2816  00F615  0A                 	db	10
  2817  00F616  0D                 	db	13
  2818  00F617  00                 	db	0
  2819  00F618                     STR_104:
  2820  00F618  49                 	db	73	;'I'
  2821  00F619  66                 	db	102	;'f'
  2822  00F61A  20                 	db	32
  2823  00F61B  79                 	db	121	;'y'
  2824  00F61C  6F                 	db	111	;'o'
  2825  00F61D  75                 	db	117	;'u'
  2826  00F61E  27                 	db	39
  2827  00F61F  64                 	db	100	;'d'
  2828  00F620  20                 	db	32
  2829  00F621  6C                 	db	108	;'l'
  2830  00F622  69                 	db	105	;'i'
  2831  00F623  6B                 	db	107	;'k'
  2832  00F624  65                 	db	101	;'e'
  2833  00F625  20                 	db	32
  2834  00F626  74                 	db	116	;'t'
  2835  00F627  6F                 	db	111	;'o'
  2836  00F628  20                 	db	32
  2837  00F629  63                 	db	99	;'c'
  2838  00F62A  6F                 	db	111	;'o'
  2839  00F62B  6D                 	db	109	;'m'
  2840  00F62C  70                 	db	112	;'p'
  2841  00F62D  6C                 	db	108	;'l'
  2842  00F62E  65                 	db	101	;'e'
  2843  00F62F  74                 	db	116	;'t'
  2844  00F630  65                 	db	101	;'e'
  2845  00F631  6C                 	db	108	;'l'
  2846  00F632  79                 	db	121	;'y'
  2847  00F633  20                 	db	32
  2848  00F634  65                 	db	101	;'e'
  2849  00F635  6E                 	db	110	;'n'
  2850  00F636  61                 	db	97	;'a'
  2851  00F637  62                 	db	98	;'b'
  2852  00F638  6C                 	db	108	;'l'
  2853  00F639  65                 	db	101	;'e'
  2854  00F63A  20                 	db	32
  2855  00F63B  6F                 	db	111	;'o'
  2856  00F63C  72                 	db	114	;'r'
  2857  00F63D  20                 	db	32
  2858  00F63E  64                 	db	100	;'d'
  2859  00F63F  69                 	db	105	;'i'
  2860  00F640  73                 	db	115	;'s'
  2861  00F641  61                 	db	97	;'a'
  2862  00F642  62                 	db	98	;'b'
  2863  00F643  6C                 	db	108	;'l'
  2864  00F644  65                 	db	101	;'e'
  2865  00F645  20                 	db	32
  2866  00F646  74                 	db	116	;'t'
  2867  00F647  68                 	db	104	;'h'
  2868  00F648  65                 	db	101	;'e'
  2869  00F649  20                 	db	32
  2870  00F64A  6C                 	db	108	;'l'
  2871  00F64B  6F                 	db	111	;'o'
  2872  00F64C  61                 	db	97	;'a'
  2873  00F64D  64                 	db	100	;'d'
  2874  00F64E  2C                 	db	44
  2875  00F64F  20                 	db	32
  2876  00F650  64                 	db	100	;'d'
  2877  00F651  69                 	db	105	;'i'
  2878  00F652  73                 	db	115	;'s'
  2879  00F653  61                 	db	97	;'a'
  2880  00F654  62                 	db	98	;'b'
  2881  00F655  6C                 	db	108	;'l'
  2882  00F656  65                 	db	101	;'e'
  2883  00F657  20                 	db	32
  2884  00F658  64                 	db	100	;'d'
  2885  00F659  69                 	db	105	;'i'
  2886  00F65A  6D                 	db	109	;'m'
  2887  00F65B  6D                 	db	109	;'m'
  2888  00F65C  69                 	db	105	;'i'
  2889  00F65D  6E                 	db	110	;'n'
  2890  00F65E  67                 	db	103	;'g'
  2891  00F65F  20                 	db	32
  2892  00F660  61                 	db	97	;'a'
  2893  00F661  6E                 	db	110	;'n'
  2894  00F662  64                 	db	100	;'d'
  2895  00F663  20                 	db	32
  2896  00F664  75                 	db	117	;'u'
  2897  00F665  73                 	db	115	;'s'
  2898  00F666  65                 	db	101	;'e'
  2899  00F667  20                 	db	32
  2900  00F668  72                 	db	114	;'r'
  2901  00F669  65                 	db	101	;'e'
  2902  00F66A  73                 	db	115	;'s'
  2903  00F66B  70                 	db	112	;'p'
  2904  00F66C  65                 	db	101	;'e'
  2905  00F66D  63                 	db	99	;'c'
  2906  00F66E  74                 	db	116	;'t'
  2907  00F66F  69                 	db	105	;'i'
  2908  00F670  76                 	db	118	;'v'
  2909  00F671  65                 	db	101	;'e'
  2910  00F672  20                 	db	32
  2911  00F673  63                 	db	99	;'c'
  2912  00F674  6F                 	db	111	;'o'
  2913  00F675  6D                 	db	109	;'m'
  2914  00F676  6D                 	db	109	;'m'
  2915  00F677  61                 	db	97	;'a'
  2916  00F678  6E                 	db	110	;'n'
  2917  00F679  64                 	db	100	;'d'
  2918  00F67A  73                 	db	115	;'s'
  2919  00F67B  0A                 	db	10
  2920  00F67C  0D                 	db	13
  2921  00F67D  00                 	db	0
  2922  00F67E                     STR_103:
  2923  00F67E  45                 	db	69	;'E'
  2924  00F67F  52                 	db	82	;'R'
  2925  00F680  52                 	db	82	;'R'
  2926  00F681  4F                 	db	79	;'O'
  2927  00F682  52                 	db	82	;'R'
  2928  00F683  3A                 	db	58	;':'
  2929  00F684  20                 	db	32
  2930  00F685  50                 	db	80	;'P'
  2931  00F686  6C                 	db	108	;'l'
  2932  00F687  65                 	db	101	;'e'
  2933  00F688  61                 	db	97	;'a'
  2934  00F689  73                 	db	115	;'s'
  2935  00F68A  65                 	db	101	;'e'
  2936  00F68B  20                 	db	32
  2937  00F68C  73                 	db	115	;'s'
  2938  00F68D  65                 	db	101	;'e'
  2939  00F68E  74                 	db	116	;'t'
  2940  00F68F  20                 	db	32
  2941  00F690  64                 	db	100	;'d'
  2942  00F691  69                 	db	105	;'i'
  2943  00F692  6D                 	db	109	;'m'
  2944  00F693  6D                 	db	109	;'m'
  2945  00F694  69                 	db	105	;'i'
  2946  00F695  6E                 	db	110	;'n'
  2947  00F696  67                 	db	103	;'g'
  2948  00F697  20                 	db	32
  2949  00F698  70                 	db	112	;'p'
  2950  00F699  65                 	db	101	;'e'
  2951  00F69A  72                 	db	114	;'r'
  2952  00F69B  63                 	db	99	;'c'
  2953  00F69C  65                 	db	101	;'e'
  2954  00F69D  6E                 	db	110	;'n'
  2955  00F69E  74                 	db	116	;'t'
  2956  00F69F  61                 	db	97	;'a'
  2957  00F6A0  67                 	db	103	;'g'
  2958  00F6A1  65                 	db	101	;'e'
  2959  00F6A2  20                 	db	32
  2960  00F6A3  74                 	db	116	;'t'
  2961  00F6A4  6F                 	db	111	;'o'
  2962  00F6A5  20                 	db	32
  2963  00F6A6  61                 	db	97	;'a'
  2964  00F6A7  6E                 	db	110	;'n'
  2965  00F6A8  20                 	db	32
  2966  00F6A9  69                 	db	105	;'i'
  2967  00F6AA  6E                 	db	110	;'n'
  2968  00F6AB  74                 	db	116	;'t'
  2969  00F6AC  65                 	db	101	;'e'
  2970  00F6AD  67                 	db	103	;'g'
  2971  00F6AE  65                 	db	101	;'e'
  2972  00F6AF  72                 	db	114	;'r'
  2973  00F6B0  20                 	db	32
  2974  00F6B1  67                 	db	103	;'g'
  2975  00F6B2  72                 	db	114	;'r'
  2976  00F6B3  65                 	db	101	;'e'
  2977  00F6B4  61                 	db	97	;'a'
  2978  00F6B5  74                 	db	116	;'t'
  2979  00F6B6  65                 	db	101	;'e'
  2980  00F6B7  72                 	db	114	;'r'
  2981  00F6B8  20                 	db	32
  2982  00F6B9  74                 	db	116	;'t'
  2983  00F6BA  68                 	db	104	;'h'
  2984  00F6BB  61                 	db	97	;'a'
  2985  00F6BC  6E                 	db	110	;'n'
  2986  00F6BD  20                 	db	32
  2987  00F6BE  30                 	db	48	;'0'
  2988  00F6BF  20                 	db	32
  2989  00F6C0  61                 	db	97	;'a'
  2990  00F6C1  6E                 	db	110	;'n'
  2991  00F6C2  64                 	db	100	;'d'
  2992  00F6C3  20                 	db	32
  2993  00F6C4  6C                 	db	108	;'l'
  2994  00F6C5  65                 	db	101	;'e'
  2995  00F6C6  73                 	db	115	;'s'
  2996  00F6C7  73                 	db	115	;'s'
  2997  00F6C8  20                 	db	32
  2998  00F6C9  74                 	db	116	;'t'
  2999  00F6CA  68                 	db	104	;'h'
  3000  00F6CB  61                 	db	97	;'a'
  3001  00F6CC  6E                 	db	110	;'n'
  3002  00F6CD  20                 	db	32
  3003  00F6CE  31                 	db	49	;'1'
  3004  00F6CF  30                 	db	48	;'0'
  3005  00F6D0  30                 	db	48	;'0'
  3006  00F6D1  0A                 	db	10
  3007  00F6D2  0D                 	db	13
  3008  00F6D3  00                 	db	0
  3009  00F6D4                     STR_54:
  3010  00F6D4  44                 	db	68	;'D'
  3011  00F6D5  65                 	db	101	;'e'
  3012  00F6D6  76                 	db	118	;'v'
  3013  00F6D7  69                 	db	105	;'i'
  3014  00F6D8  63                 	db	99	;'c'
  3015  00F6D9  65                 	db	101	;'e'
  3016  00F6DA  20                 	db	32
  3017  00F6DB  49                 	db	73	;'I'
  3018  00F6DC  44                 	db	68	;'D'
  3019  00F6DD  20                 	db	32
  3020  00F6DE  73                 	db	115	;'s'
  3021  00F6DF  74                 	db	116	;'t'
  3022  00F6E0  6F                 	db	111	;'o'
  3023  00F6E1  72                 	db	114	;'r'
  3024  00F6E2  65                 	db	101	;'e'
  3025  00F6E3  64                 	db	100	;'d'
  3026  00F6E4  20                 	db	32
  3027  00F6E5  69                 	db	105	;'i'
  3028  00F6E6  6E                 	db	110	;'n'
  3029  00F6E7  20                 	db	32
  3030  00F6E8  46                 	db	70	;'F'
  3031  00F6E9  6C                 	db	108	;'l'
  3032  00F6EA  61                 	db	97	;'a'
  3033  00F6EB  73                 	db	115	;'s'
  3034  00F6EC  68                 	db	104	;'h'
  3035  00F6ED  20                 	db	32
  3036  00F6EE  69                 	db	105	;'i'
  3037  00F6EF  73                 	db	115	;'s'
  3038  00F6F0  3A                 	db	58	;':'
  3039  00F6F1  20                 	db	32
  3040  00F6F2  30                 	db	48	;'0'
  3041  00F6F3  78                 	db	120	;'x'
  3042  00F6F4  25                 	db	37
  3043  00F6F5  58                 	db	88	;'X'
  3044  00F6F6  2E                 	db	46
  3045  00F6F7  20                 	db	32
  3046  00F6F8  54                 	db	84	;'T'
  3047  00F6F9  68                 	db	104	;'h'
  3048  00F6FA  69                 	db	105	;'i'
  3049  00F6FB  73                 	db	115	;'s'
  3050  00F6FC  20                 	db	32
  3051  00F6FD  63                 	db	99	;'c'
  3052  00F6FE  6F                 	db	111	;'o'
  3053  00F6FF  72                 	db	114	;'r'
  3054  00F700  72                 	db	114	;'r'
  3055  00F701  65                 	db	101	;'e'
  3056  00F702  73                 	db	115	;'s'
  3057  00F703  70                 	db	112	;'p'
  3058  00F704  6F                 	db	111	;'o'
  3059  00F705  6E                 	db	110	;'n'
  3060  00F706  64                 	db	100	;'d'
  3061  00F707  73                 	db	115	;'s'
  3062  00F708  20                 	db	32
  3063  00F709  74                 	db	116	;'t'
  3064  00F70A  6F                 	db	111	;'o'
  3065  00F70B  20                 	db	32
  3066  00F70C  61                 	db	97	;'a'
  3067  00F70D  20                 	db	32
  3068  00F70E  64                 	db	100	;'d'
  3069  00F70F  65                 	db	101	;'e'
  3070  00F710  76                 	db	118	;'v'
  3071  00F711  69                 	db	105	;'i'
  3072  00F712  63                 	db	99	;'c'
  3073  00F713  65                 	db	101	;'e'
  3074  00F714  20                 	db	32
  3075  00F715  70                 	db	112	;'p'
  3076  00F716  61                 	db	97	;'a'
  3077  00F717  72                 	db	114	;'r'
  3078  00F718  74                 	db	116	;'t'
  3079  00F719  20                 	db	32
  3080  00F71A  6E                 	db	110	;'n'
  3081  00F71B  75                 	db	117	;'u'
  3082  00F71C  6D                 	db	109	;'m'
  3083  00F71D  62                 	db	98	;'b'
  3084  00F71E  65                 	db	101	;'e'
  3085  00F71F  72                 	db	114	;'r'
  3086  00F720  20                 	db	32
  3087  00F721  6F                 	db	111	;'o'
  3088  00F722  66                 	db	102	;'f'
  3089  00F723  20                 	db	32
  3090  00F724  25                 	db	37
  3091  00F725  73                 	db	115	;'s'
  3092  00F726  0A                 	db	10
  3093  00F727  0D                 	db	13
  3094  00F728  00                 	db	0
  3095  00F729                     STR_108:
  3096  00F729  54                 	db	84	;'T'
  3097  00F72A  68                 	db	104	;'h'
  3098  00F72B  69                 	db	105	;'i'
  3099  00F72C  73                 	db	115	;'s'
  3100  00F72D  20                 	db	32
  3101  00F72E  63                 	db	99	;'c'
  3102  00F72F  6F                 	db	111	;'o'
  3103  00F730  72                 	db	114	;'r'
  3104  00F731  72                 	db	114	;'r'
  3105  00F732  65                 	db	101	;'e'
  3106  00F733  73                 	db	115	;'s'
  3107  00F734  70                 	db	112	;'p'
  3108  00F735  6F                 	db	111	;'o'
  3109  00F736  6E                 	db	110	;'n'
  3110  00F737  64                 	db	100	;'d'
  3111  00F738  73                 	db	115	;'s'
  3112  00F739  20                 	db	32
  3113  00F73A  74                 	db	116	;'t'
  3114  00F73B  6F                 	db	111	;'o'
  3115  00F73C  20                 	db	32
  3116  00F73D  61                 	db	97	;'a'
  3117  00F73E  20                 	db	32
  3118  00F73F  31                 	db	49	;'1'
  3119  00F740  36                 	db	54	;'6'
  3120  00F741  20                 	db	32
  3121  00F742  62                 	db	98	;'b'
  3122  00F743  69                 	db	105	;'i'
  3123  00F744  74                 	db	116	;'t'
  3124  00F745  20                 	db	32
  3125  00F746  74                 	db	116	;'t'
  3126  00F747  69                 	db	105	;'i'
  3127  00F748  6D                 	db	109	;'m'
  3128  00F749  65                 	db	101	;'e'
  3129  00F74A  72                 	db	114	;'r'
  3130  00F74B  20                 	db	32
  3131  00F74C  70                 	db	112	;'p'
  3132  00F74D  72                 	db	114	;'r'
  3133  00F74E  65                 	db	101	;'e'
  3134  00F74F  2D                 	db	45
  3135  00F750  6C                 	db	108	;'l'
  3136  00F751  6F                 	db	111	;'o'
  3137  00F752  61                 	db	97	;'a'
  3138  00F753  64                 	db	100	;'d'
  3139  00F754  20                 	db	32
  3140  00F755  76                 	db	118	;'v'
  3141  00F756  61                 	db	97	;'a'
  3142  00F757  6C                 	db	108	;'l'
  3143  00F758  75                 	db	117	;'u'
  3144  00F759  65                 	db	101	;'e'
  3145  00F75A  20                 	db	32
  3146  00F75B  6F                 	db	111	;'o'
  3147  00F75C  66                 	db	102	;'f'
  3148  00F75D  20                 	db	32
  3149  00F75E  30                 	db	48	;'0'
  3150  00F75F  78                 	db	120	;'x'
  3151  00F760  25                 	db	37
  3152  00F761  58                 	db	88	;'X'
  3153  00F762  20                 	db	32
  3154  00F763  28                 	db	40
  3155  00F764  25                 	db	37
  3156  00F765  75                 	db	117	;'u'
  3157  00F766  20                 	db	32
  3158  00F767  4C                 	db	76	;'L'
  3159  00F768  53                 	db	83	;'S'
  3160  00F769  42                 	db	66	;'B'
  3161  00F76A  73                 	db	115	;'s'
  3162  00F76B  29                 	db	41
  3163  00F76C  20                 	db	32
  3164  00F76D  0A                 	db	10
  3165  00F76E  0D                 	db	13
  3166  00F76F  00                 	db	0
  3167  00F770                     STR_74:
  3168  00F770  56                 	db	86	;'V'
  3169  00F771  43                 	db	67	;'C'
  3170  00F772  43                 	db	67	;'C'
  3171  00F773  20                 	db	32
  3172  00F774  4F                 	db	79	;'O'
  3173  00F775  76                 	db	118	;'v'
  3174  00F776  65                 	db	101	;'e'
  3175  00F777  72                 	db	114	;'r'
  3176  00F778  76                 	db	118	;'v'
  3177  00F779  6F                 	db	111	;'o'
  3178  00F77A  6C                 	db	108	;'l'
  3179  00F77B  74                 	db	116	;'t'
  3180  00F77C  61                 	db	97	;'a'
  3181  00F77D  67                 	db	103	;'g'
  3182  00F77E  65                 	db	101	;'e'
  3183  00F77F  20                 	db	32
  3184  00F780  63                 	db	99	;'c'
  3185  00F781  6F                 	db	111	;'o'
  3186  00F782  6E                 	db	110	;'n'
  3187  00F783  64                 	db	100	;'d'
  3188  00F784  69                 	db	105	;'i'
  3189  00F785  74                 	db	116	;'t'
  3190  00F786  69                 	db	105	;'i'
  3191  00F787  6F                 	db	111	;'o'
  3192  00F788  6E                 	db	110	;'n'
  3193  00F789  20                 	db	32
  3194  00F78A  68                 	db	104	;'h'
  3195  00F78B  61                 	db	97	;'a'
  3196  00F78C  73                 	db	115	;'s'
  3197  00F78D  20                 	db	32
  3198  00F78E  6F                 	db	111	;'o'
  3199  00F78F  63                 	db	99	;'c'
  3200  00F790  63                 	db	99	;'c'
  3201  00F791  75                 	db	117	;'u'
  3202  00F792  72                 	db	114	;'r'
  3203  00F793  72                 	db	114	;'r'
  3204  00F794  65                 	db	101	;'e'
  3205  00F795  64                 	db	100	;'d'
  3206  00F796  20                 	db	32
  3207  00F797  28                 	db	40
  3208  00F798  56                 	db	86	;'V'
  3209  00F799  43                 	db	67	;'C'
  3210  00F79A  43                 	db	67	;'C'
  3211  00F79B  20                 	db	32
  3212  00F79C  68                 	db	104	;'h'
  3213  00F79D  61                 	db	97	;'a'
  3214  00F79E  73                 	db	115	;'s'
  3215  00F79F  20                 	db	32
  3216  00F7A0  65                 	db	101	;'e'
  3217  00F7A1  78                 	db	120	;'x'
  3218  00F7A2  63                 	db	99	;'c'
  3219  00F7A3  65                 	db	101	;'e'
  3220  00F7A4  65                 	db	101	;'e'
  3221  00F7A5  64                 	db	100	;'d'
  3222  00F7A6  65                 	db	101	;'e'
  3223  00F7A7  64                 	db	100	;'d'
  3224  00F7A8  20                 	db	32
  3225  00F7A9  33                 	db	51	;'3'
  3226  00F7AA  2E                 	db	46
  3227  00F7AB  36                 	db	54	;'6'
  3228  00F7AC  30                 	db	48	;'0'
  3229  00F7AD  56                 	db	86	;'V'
  3230  00F7AE  29                 	db	41
  3231  00F7AF  0A                 	db	10
  3232  00F7B0  0D                 	db	13
  3233  00F7B1  00                 	db	0
  3234  00F7B2                     STR_58:
  3235  00F7B2  54                 	db	84	;'T'
  3236  00F7B3  68                 	db	104	;'h'
  3237  00F7B4  65                 	db	101	;'e'
  3238  00F7B5  20                 	db	32
  3239  00F7B6  66                 	db	102	;'f'
  3240  00F7B7  6F                 	db	111	;'o'
  3241  00F7B8  6C                 	db	108	;'l'
  3242  00F7B9  6C                 	db	108	;'l'
  3243  00F7BA  6F                 	db	111	;'o'
  3244  00F7BB  77                 	db	119	;'w'
  3245  00F7BC  69                 	db	105	;'i'
  3246  00F7BD  6E                 	db	110	;'n'
  3247  00F7BE  67                 	db	103	;'g'
  3248  00F7BF  20                 	db	32
  3249  00F7C0  55                 	db	85	;'U'
  3250  00F7C1  73                 	db	115	;'s'
  3251  00F7C2  65                 	db	101	;'e'
  3252  00F7C3  72                 	db	114	;'r'
  3253  00F7C4  20                 	db	32
  3254  00F7C5  49                 	db	73	;'I'
  3255  00F7C6  44                 	db	68	;'D'
  3256  00F7C7  73                 	db	115	;'s'
  3257  00F7C8  20                 	db	32
  3258  00F7C9  68                 	db	104	;'h'
  3259  00F7CA  61                 	db	97	;'a'
  3260  00F7CB  76                 	db	118	;'v'
  3261  00F7CC  65                 	db	101	;'e'
  3262  00F7CD  20                 	db	32
  3263  00F7CE  62                 	db	98	;'b'
  3264  00F7CF  65                 	db	101	;'e'
  3265  00F7D0  65                 	db	101	;'e'
  3266  00F7D1  6E                 	db	110	;'n'
  3267  00F7D2  20                 	db	32
  3268  00F7D3  72                 	db	114	;'r'
  3269  00F7D4  65                 	db	101	;'e'
  3270  00F7D5  74                 	db	116	;'t'
  3271  00F7D6  72                 	db	114	;'r'
  3272  00F7D7  69                 	db	105	;'i'
  3273  00F7D8  65                 	db	101	;'e'
  3274  00F7D9  76                 	db	118	;'v'
  3275  00F7DA  65                 	db	101	;'e'
  3276  00F7DB  64                 	db	100	;'d'
  3277  00F7DC  20                 	db	32
  3278  00F7DD  66                 	db	102	;'f'
  3279  00F7DE  72                 	db	114	;'r'
  3280  00F7DF  6F                 	db	111	;'o'
  3281  00F7E0  6D                 	db	109	;'m'
  3282  00F7E1  20                 	db	32
  3283  00F7E2  66                 	db	102	;'f'
  3284  00F7E3  6C                 	db	108	;'l'
  3285  00F7E4  61                 	db	97	;'a'
  3286  00F7E5  73                 	db	115	;'s'
  3287  00F7E6  68                 	db	104	;'h'
  3288  00F7E7  20                 	db	32
  3289  00F7E8  6D                 	db	109	;'m'
  3290  00F7E9  65                 	db	101	;'e'
  3291  00F7EA  6D                 	db	109	;'m'
  3292  00F7EB  6F                 	db	111	;'o'
  3293  00F7EC  72                 	db	114	;'r'
  3294  00F7ED  79                 	db	121	;'y'
  3295  00F7EE  3A                 	db	58	;':'
  3296  00F7EF  0A                 	db	10
  3297  00F7F0  0D                 	db	13
  3298  00F7F1  00                 	db	0
  3299  00F7F2                     STR_107:
  3300  00F7F2  43                 	db	67	;'C'
  3301  00F7F3  61                 	db	97	;'a'
  3302  00F7F4  6C                 	db	108	;'l'
  3303  00F7F5  63                 	db	99	;'c'
  3304  00F7F6  75                 	db	117	;'u'
  3305  00F7F7  6C                 	db	108	;'l'
  3306  00F7F8  61                 	db	97	;'a'
  3307  00F7F9  74                 	db	116	;'t'
  3308  00F7FA  65                 	db	101	;'e'
  3309  00F7FB  64                 	db	100	;'d'
  3310  00F7FC  20                 	db	32
  3311  00F7FD  54                 	db	84	;'T'
  3312  00F7FE  52                 	db	82	;'R'
  3313  00F7FF  49                 	db	73	;'I'
  3314  00F800  41                 	db	65	;'A'
  3315  00F801  43                 	db	67	;'C'
  3316  00F802  20                 	db	32
  3317  00F803  66                 	db	102	;'f'
  3318  00F804  69                 	db	105	;'i'
  3319  00F805  72                 	db	114	;'r'
  3320  00F806  69                 	db	105	;'i'
  3321  00F807  6E                 	db	110	;'n'
  3322  00F808  67                 	db	103	;'g'
  3323  00F809  20                 	db	32
  3324  00F80A  61                 	db	97	;'a'
  3325  00F80B  6E                 	db	110	;'n'
  3326  00F80C  67                 	db	103	;'g'
  3327  00F80D  6C                 	db	108	;'l'
  3328  00F80E  65                 	db	101	;'e'
  3329  00F80F  20                 	db	32
  3330  00F810  69                 	db	105	;'i'
  3331  00F811  73                 	db	115	;'s'
  3332  00F812  20                 	db	32
  3333  00F813  25                 	db	37
  3334  00F814  2E                 	db	46
  3335  00F815  33                 	db	51	;'3'
  3336  00F816  66                 	db	102	;'f'
  3337  00F817  20                 	db	32
  3338  00F818  72                 	db	114	;'r'
  3339  00F819  61                 	db	97	;'a'
  3340  00F81A  64                 	db	100	;'d'
  3341  00F81B  69                 	db	105	;'i'
  3342  00F81C  61                 	db	97	;'a'
  3343  00F81D  6E                 	db	110	;'n'
  3344  00F81E  73                 	db	115	;'s'
  3345  00F81F  20                 	db	32
  3346  00F820  28                 	db	40
  3347  00F821  25                 	db	37
  3348  00F822  2E                 	db	46
  3349  00F823  33                 	db	51	;'3'
  3350  00F824  66                 	db	102	;'f'
  3351  00F825  20                 	db	32
  3352  00F826  64                 	db	100	;'d'
  3353  00F827  65                 	db	101	;'e'
  3354  00F828  67                 	db	103	;'g'
  3355  00F829  72                 	db	114	;'r'
  3356  00F82A  65                 	db	101	;'e'
  3357  00F82B  65                 	db	101	;'e'
  3358  00F82C  73                 	db	115	;'s'
  3359  00F82D  29                 	db	41
  3360  00F82E  0A                 	db	10
  3361  00F82F  0D                 	db	13
  3362  00F830  00                 	db	0
  3363  00F831                     STR_110:
  3364  00F831  44                 	db	68	;'D'
  3365  00F832  65                 	db	101	;'e'
  3366  00F833  76                 	db	118	;'v'
  3367  00F834  69                 	db	105	;'i'
  3368  00F835  63                 	db	99	;'c'
  3369  00F836  65                 	db	101	;'e'
  3370  00F837  20                 	db	32
  3371  00F838  6F                 	db	111	;'o'
  3372  00F839  6E                 	db	110	;'n'
  3373  00F83A  20                 	db	32
  3374  00F83B  74                 	db	116	;'t'
  3375  00F83C  69                 	db	105	;'i'
  3376  00F83D  6D                 	db	109	;'m'
  3377  00F83E  65                 	db	101	;'e'
  3378  00F83F  20                 	db	32
  3379  00F840  73                 	db	115	;'s'
  3380  00F841  69                 	db	105	;'i'
  3381  00F842  6E                 	db	110	;'n'
  3382  00F843  63                 	db	99	;'c'
  3383  00F844  65                 	db	101	;'e'
  3384  00F845  20                 	db	32
  3385  00F846  6C                 	db	108	;'l'
  3386  00F847  61                 	db	97	;'a'
  3387  00F848  73                 	db	115	;'s'
  3388  00F849  74                 	db	116	;'t'
  3389  00F84A  20                 	db	32
  3390  00F84B  72                 	db	114	;'r'
  3391  00F84C  65                 	db	101	;'e'
  3392  00F84D  73                 	db	115	;'s'
  3393  00F84E  65                 	db	101	;'e'
  3394  00F84F  74                 	db	116	;'t'
  3395  00F850  20                 	db	32
  3396  00F851  63                 	db	99	;'c'
  3397  00F852  6F                 	db	111	;'o'
  3398  00F853  6E                 	db	110	;'n'
  3399  00F854  64                 	db	100	;'d'
  3400  00F855  69                 	db	105	;'i'
  3401  00F856  74                 	db	116	;'t'
  3402  00F857  69                 	db	105	;'i'
  3403  00F858  6F                 	db	111	;'o'
  3404  00F859  6E                 	db	110	;'n'
  3405  00F85A  20                 	db	32
  3406  00F85B  69                 	db	105	;'i'
  3407  00F85C  73                 	db	115	;'s'
  3408  00F85D  20                 	db	32
  3409  00F85E  25                 	db	37
  3410  00F85F  64                 	db	100	;'d'
  3411  00F860  20                 	db	32
  3412  00F861  73                 	db	115	;'s'
  3413  00F862  65                 	db	101	;'e'
  3414  00F863  63                 	db	99	;'c'
  3415  00F864  6F                 	db	111	;'o'
  3416  00F865  6E                 	db	110	;'n'
  3417  00F866  64                 	db	100	;'d'
  3418  00F867  73                 	db	115	;'s'
  3419  00F868  0A                 	db	10
  3420  00F869  0D                 	db	13
  3421  00F86A  00                 	db	0
  3422  00F86B                     STR_56:
  3423  00F86B  44                 	db	68	;'D'
  3424  00F86C  65                 	db	101	;'e'
  3425  00F86D  76                 	db	118	;'v'
  3426  00F86E  69                 	db	105	;'i'
  3427  00F86F  63                 	db	99	;'c'
  3428  00F870  65                 	db	101	;'e'
  3429  00F871  20                 	db	32
  3430  00F872  73                 	db	115	;'s'
  3431  00F873  69                 	db	105	;'i'
  3432  00F874  6C                 	db	108	;'l'
  3433  00F875  69                 	db	105	;'i'
  3434  00F876  63                 	db	99	;'c'
  3435  00F877  6F                 	db	111	;'o'
  3436  00F878  6E                 	db	110	;'n'
  3437  00F879  20                 	db	32
  3438  00F87A  72                 	db	114	;'r'
  3439  00F87B  65                 	db	101	;'e'
  3440  00F87C  76                 	db	118	;'v'
  3441  00F87D  69                 	db	105	;'i'
  3442  00F87E  73                 	db	115	;'s'
  3443  00F87F  69                 	db	105	;'i'
  3444  00F880  6F                 	db	111	;'o'
  3445  00F881  6E                 	db	110	;'n'
  3446  00F882  20                 	db	32
  3447  00F883  49                 	db	73	;'I'
  3448  00F884  44                 	db	68	;'D'
  3449  00F885  20                 	db	32
  3450  00F886  61                 	db	97	;'a'
  3451  00F887  73                 	db	115	;'s'
  3452  00F888  20                 	db	32
  3453  00F889  73                 	db	115	;'s'
  3454  00F88A  74                 	db	116	;'t'
  3455  00F88B  6F                 	db	111	;'o'
  3456  00F88C  72                 	db	114	;'r'
  3457  00F88D  65                 	db	101	;'e'
  3458  00F88E  64                 	db	100	;'d'
  3459  00F88F  20                 	db	32
  3460  00F890  69                 	db	105	;'i'
  3461  00F891  6E                 	db	110	;'n'
  3462  00F892  20                 	db	32
  3463  00F893  46                 	db	70	;'F'
  3464  00F894  6C                 	db	108	;'l'
  3465  00F895  61                 	db	97	;'a'
  3466  00F896  73                 	db	115	;'s'
  3467  00F897  68                 	db	104	;'h'
  3468  00F898  20                 	db	32
  3469  00F899  69                 	db	105	;'i'
  3470  00F89A  73                 	db	115	;'s'
  3471  00F89B  3A                 	db	58	;':'
  3472  00F89C  20                 	db	32
  3473  00F89D  25                 	db	37
  3474  00F89E  63                 	db	99	;'c'
  3475  00F89F  25                 	db	37
  3476  00F8A0  64                 	db	100	;'d'
  3477  00F8A1  0A                 	db	10
  3478  00F8A2  0D                 	db	13
  3479  00F8A3  00                 	db	0
  3480  00F8A4                     STR_93:
  3481  00F8A4  4F                 	db	79	;'O'
  3482  00F8A5  75                 	db	117	;'u'
  3483  00F8A6  74                 	db	116	;'t'
  3484  00F8A7  70                 	db	112	;'p'
  3485  00F8A8  75                 	db	117	;'u'
  3486  00F8A9  74                 	db	116	;'t'
  3487  00F8AA  20                 	db	32
  3488  00F8AB  70                 	db	112	;'p'
  3489  00F8AC  6F                 	db	111	;'o'
  3490  00F8AD  77                 	db	119	;'w'
  3491  00F8AE  65                 	db	101	;'e'
  3492  00F8AF  72                 	db	114	;'r'
  3493  00F8B0  20                 	db	32
  3494  00F8B1  63                 	db	99	;'c'
  3495  00F8B2  61                 	db	97	;'a'
  3496  00F8B3  6C                 	db	108	;'l'
  3497  00F8B4  63                 	db	99	;'c'
  3498  00F8B5  75                 	db	117	;'u'
  3499  00F8B6  6C                 	db	108	;'l'
  3500  00F8B7  61                 	db	97	;'a'
  3501  00F8B8  74                 	db	116	;'t'
  3502  00F8B9  65                 	db	101	;'e'
  3503  00F8BA  64                 	db	100	;'d'
  3504  00F8BB  20                 	db	32
  3505  00F8BC  61                 	db	97	;'a'
  3506  00F8BD  73                 	db	115	;'s'
  3507  00F8BE  20                 	db	32
  3508  00F8BF  25                 	db	37
  3509  00F8C0  2E                 	db	46
  3510  00F8C1  33                 	db	51	;'3'
  3511  00F8C2  66                 	db	102	;'f'
  3512  00F8C3  20                 	db	32
  3513  00F8C4  57                 	db	87	;'W'
  3514  00F8C5  61                 	db	97	;'a'
  3515  00F8C6  74                 	db	116	;'t'
  3516  00F8C7  74                 	db	116	;'t'
  3517  00F8C8  73                 	db	115	;'s'
  3518  00F8C9  20                 	db	32
  3519  00F8CA  66                 	db	102	;'f'
  3520  00F8CB  72                 	db	114	;'r'
  3521  00F8CC  6F                 	db	111	;'o'
  3522  00F8CD  6D                 	db	109	;'m'
  3523  00F8CE  20                 	db	32
  3524  00F8CF  52                 	db	82	;'R'
  3525  00F8D0  4D                 	db	77	;'M'
  3526  00F8D1  53                 	db	83	;'S'
  3527  00F8D2  20                 	db	32
  3528  00F8D3  76                 	db	118	;'v'
  3529  00F8D4  61                 	db	97	;'a'
  3530  00F8D5  6C                 	db	108	;'l'
  3531  00F8D6  75                 	db	117	;'u'
  3532  00F8D7  65                 	db	101	;'e'
  3533  00F8D8  73                 	db	115	;'s'
  3534  00F8D9  0A                 	db	10
  3535  00F8DA  0D                 	db	13
  3536  00F8DB  00                 	db	0
  3537  00F8DC                     STR_83:
  3538  00F8DC  46                 	db	70	;'F'
  3539  00F8DD  69                 	db	105	;'i'
  3540  00F8DE  78                 	db	120	;'x'
  3541  00F8DF  65                 	db	101	;'e'
  3542  00F8E0  64                 	db	100	;'d'
  3543  00F8E1  20                 	db	32
  3544  00F8E2  56                 	db	86	;'V'
  3545  00F8E3  6F                 	db	111	;'o'
  3546  00F8E4  6C                 	db	108	;'l'
  3547  00F8E5  74                 	db	116	;'t'
  3548  00F8E6  61                 	db	97	;'a'
  3549  00F8E7  67                 	db	103	;'g'
  3550  00F8E8  65                 	db	101	;'e'
  3551  00F8E9  20                 	db	32
  3552  00F8EA  52                 	db	82	;'R'
  3553  00F8EB  65                 	db	101	;'e'
  3554  00F8EC  66                 	db	102	;'f'
  3555  00F8ED  65                 	db	101	;'e'
  3556  00F8EE  72                 	db	114	;'r'
  3557  00F8EF  65                 	db	101	;'e'
  3558  00F8F0  6E                 	db	110	;'n'
  3559  00F8F1  63                 	db	99	;'c'
  3560  00F8F2  65                 	db	101	;'e'
  3561  00F8F3  20                 	db	32
  3562  00F8F4  42                 	db	66	;'B'
  3563  00F8F5  75                 	db	117	;'u'
  3564  00F8F6  66                 	db	102	;'f'
  3565  00F8F7  66                 	db	102	;'f'
  3566  00F8F8  65                 	db	101	;'e'
  3567  00F8F9  72                 	db	114	;'r'
  3568  00F8FA  20                 	db	32
  3569  00F8FB  31                 	db	49	;'1'
  3570  00F8FC  20                 	db	32
  3571  00F8FD  6D                 	db	109	;'m'
  3572  00F8FE  65                 	db	101	;'e'
  3573  00F8FF  61                 	db	97	;'a'
  3574  00F900  73                 	db	115	;'s'
  3575  00F901  75                 	db	117	;'u'
  3576  00F902  72                 	db	114	;'r'
  3577  00F903  65                 	db	101	;'e'
  3578  00F904  64                 	db	100	;'d'
  3579  00F905  20                 	db	32
  3580  00F906  61                 	db	97	;'a'
  3581  00F907  73                 	db	115	;'s'
  3582  00F908  20                 	db	32
  3583  00F909  25                 	db	37
  3584  00F90A  66                 	db	102	;'f'
  3585  00F90B  20                 	db	32
  3586  00F90C  56                 	db	86	;'V'
  3587  00F90D  6F                 	db	111	;'o'
  3588  00F90E  6C                 	db	108	;'l'
  3589  00F90F  74                 	db	116	;'t'
  3590  00F910  73                 	db	115	;'s'
  3591  00F911  0A                 	db	10
  3592  00F912  0D                 	db	13
  3593  00F913  00                 	db	0
  3594  00F914                     STR_59:
  3595  00F914  20                 	db	32
  3596  00F915  20                 	db	32
  3597  00F916  20                 	db	32
  3598  00F917  20                 	db	32
  3599  00F918  55                 	db	85	;'U'
  3600  00F919  73                 	db	115	;'s'
  3601  00F91A  65                 	db	101	;'e'
  3602  00F91B  72                 	db	114	;'r'
  3603  00F91C  20                 	db	32
  3604  00F91D  49                 	db	73	;'I'
  3605  00F91E  44                 	db	68	;'D'
  3606  00F91F  20                 	db	32
  3607  00F920  57                 	db	87	;'W'
  3608  00F921  6F                 	db	111	;'o'
  3609  00F922  72                 	db	114	;'r'
  3610  00F923  64                 	db	100	;'d'
  3611  00F924  20                 	db	32
  3612  00F925  25                 	db	37
  3613  00F926  64                 	db	100	;'d'
  3614  00F927  20                 	db	32
  3615  00F928  28                 	db	40
  3616  00F929  46                 	db	70	;'F'
  3617  00F92A  6C                 	db	108	;'l'
  3618  00F92B  61                 	db	97	;'a'
  3619  00F92C  73                 	db	115	;'s'
  3620  00F92D  68                 	db	104	;'h'
  3621  00F92E  20                 	db	32
  3622  00F92F  61                 	db	97	;'a'
  3623  00F930  64                 	db	100	;'d'
  3624  00F931  64                 	db	100	;'d'
  3625  00F932  72                 	db	114	;'r'
  3626  00F933  65                 	db	101	;'e'
  3627  00F934  73                 	db	115	;'s'
  3628  00F935  73                 	db	115	;'s'
  3629  00F936  20                 	db	32
  3630  00F937  30                 	db	48	;'0'
  3631  00F938  78                 	db	120	;'x'
  3632  00F939  32                 	db	50	;'2'
  3633  00F93A  30                 	db	48	;'0'
  3634  00F93B  30                 	db	48	;'0'
  3635  00F93C  30                 	db	48	;'0'
  3636  00F93D  30                 	db	48	;'0'
  3637  00F93E  25                 	db	37
  3638  00F93F  58                 	db	88	;'X'
  3639  00F940  29                 	db	41
  3640  00F941  3A                 	db	58	;':'
  3641  00F942  20                 	db	32
  3642  00F943  30                 	db	48	;'0'
  3643  00F944  78                 	db	120	;'x'
  3644  00F945  25                 	db	37
  3645  00F946  58                 	db	88	;'X'
  3646  00F947  0A                 	db	10
  3647  00F948  0D                 	db	13
  3648  00F949  00                 	db	0
  3649  00F94A                     STR_112:
  3650  00F94A  4C                 	db	76	;'L'
  3651  00F94B  6F                 	db	111	;'o'
  3652  00F94C  61                 	db	97	;'a'
  3653  00F94D  64                 	db	100	;'d'
  3654  00F94E  20                 	db	32
  3655  00F94F  6F                 	db	111	;'o'
  3656  00F950  6E                 	db	110	;'n'
  3657  00F951  20                 	db	32
  3658  00F952  74                 	db	116	;'t'
  3659  00F953  69                 	db	105	;'i'
  3660  00F954  6D                 	db	109	;'m'
  3661  00F955  65                 	db	101	;'e'
  3662  00F956  20                 	db	32
  3663  00F957  73                 	db	115	;'s'
  3664  00F958  69                 	db	105	;'i'
  3665  00F959  6E                 	db	110	;'n'
  3666  00F95A  63                 	db	99	;'c'
  3667  00F95B  65                 	db	101	;'e'
  3668  00F95C  20                 	db	32
  3669  00F95D  6C                 	db	108	;'l'
  3670  00F95E  61                 	db	97	;'a'
  3671  00F95F  73                 	db	115	;'s'
  3672  00F960  74                 	db	116	;'t'
  3673  00F961  20                 	db	32
  3674  00F962  64                 	db	100	;'d'
  3675  00F963  65                 	db	101	;'e'
  3676  00F964  76                 	db	118	;'v'
  3677  00F965  69                 	db	105	;'i'
  3678  00F966  63                 	db	99	;'c'
  3679  00F967  65                 	db	101	;'e'
  3680  00F968  20                 	db	32
  3681  00F969  72                 	db	114	;'r'
  3682  00F96A  65                 	db	101	;'e'
  3683  00F96B  73                 	db	115	;'s'
  3684  00F96C  65                 	db	101	;'e'
  3685  00F96D  74                 	db	116	;'t'
  3686  00F96E  20                 	db	32
  3687  00F96F  69                 	db	105	;'i'
  3688  00F970  73                 	db	115	;'s'
  3689  00F971  20                 	db	32
  3690  00F972  25                 	db	37
  3691  00F973  64                 	db	100	;'d'
  3692  00F974  20                 	db	32
  3693  00F975  73                 	db	115	;'s'
  3694  00F976  65                 	db	101	;'e'
  3695  00F977  63                 	db	99	;'c'
  3696  00F978  6F                 	db	111	;'o'
  3697  00F979  6E                 	db	110	;'n'
  3698  00F97A  64                 	db	100	;'d'
  3699  00F97B  73                 	db	115	;'s'
  3700  00F97C  0A                 	db	10
  3701  00F97D  0D                 	db	13
  3702  00F97E  00                 	db	0
  3703  00F97F                     STR_48:
  3704  00F97F  54                 	db	84	;'T'
  3705  00F980  68                 	db	104	;'h'
  3706  00F981  65                 	db	101	;'e'
  3707  00F982  20                 	db	32
  3708  00F983  63                 	db	99	;'c'
  3709  00F984  61                 	db	97	;'a'
  3710  00F985  75                 	db	117	;'u'
  3711  00F986  73                 	db	115	;'s'
  3712  00F987  65                 	db	101	;'e'
  3713  00F988  20                 	db	32
  3714  00F989  6F                 	db	111	;'o'
  3715  00F98A  66                 	db	102	;'f'
  3716  00F98B  20                 	db	32
  3717  00F98C  74                 	db	116	;'t'
  3718  00F98D  68                 	db	104	;'h'
  3719  00F98E  65                 	db	101	;'e'
  3720  00F98F  20                 	db	32
  3721  00F990  6D                 	db	109	;'m'
  3722  00F991  6F                 	db	111	;'o'
  3723  00F992  73                 	db	115	;'s'
  3724  00F993  74                 	db	116	;'t'
  3725  00F994  20                 	db	32
  3726  00F995  72                 	db	114	;'r'
  3727  00F996  65                 	db	101	;'e'
  3728  00F997  63                 	db	99	;'c'
  3729  00F998  65                 	db	101	;'e'
  3730  00F999  6E                 	db	110	;'n'
  3731  00F99A  74                 	db	116	;'t'
  3732  00F99B  20                 	db	32
  3733  00F99C  64                 	db	100	;'d'
  3734  00F99D  65                 	db	101	;'e'
  3735  00F99E  76                 	db	118	;'v'
  3736  00F99F  69                 	db	105	;'i'
  3737  00F9A0  63                 	db	99	;'c'
  3738  00F9A1  65                 	db	101	;'e'
  3739  00F9A2  20                 	db	32
  3740  00F9A3  72                 	db	114	;'r'
  3741  00F9A4  65                 	db	101	;'e'
  3742  00F9A5  73                 	db	115	;'s'
  3743  00F9A6  65                 	db	101	;'e'
  3744  00F9A7  74                 	db	116	;'t'
  3745  00F9A8  20                 	db	32
  3746  00F9A9  77                 	db	119	;'w'
  3747  00F9AA  61                 	db	97	;'a'
  3748  00F9AB  73                 	db	115	;'s'
  3749  00F9AC  3A                 	db	58	;':'
  3750  00F9AD  20                 	db	32
  3751  00F9AE  25                 	db	37
  3752  00F9AF  73                 	db	115	;'s'
  3753  00F9B0  0A                 	db	10
  3754  00F9B1  0D                 	db	13
  3755  00F9B2  00                 	db	0
  3756  00F9B3                     STR_69:
  3757  00F9B3  54                 	db	84	;'T'
  3758  00F9B4  68                 	db	104	;'h'
  3759  00F9B5  65                 	db	101	;'e'
  3760  00F9B6  20                 	db	32
  3761  00F9B7  66                 	db	102	;'f'
  3762  00F9B8  6F                 	db	111	;'o'
  3763  00F9B9  6C                 	db	108	;'l'
  3764  00F9BA  6C                 	db	108	;'l'
  3765  00F9BB  6F                 	db	111	;'o'
  3766  00F9BC  77                 	db	119	;'w'
  3767  00F9BD  69                 	db	105	;'i'
  3768  00F9BE  6E                 	db	110	;'n'
  3769  00F9BF  67                 	db	103	;'g'
  3770  00F9C0  20                 	db	32
  3771  00F9C1  63                 	db	99	;'c'
  3772  00F9C2  68                 	db	104	;'h'
  3773  00F9C3  61                 	db	97	;'a'
  3774  00F9C4  6E                 	db	110	;'n'
  3775  00F9C5  6E                 	db	110	;'n'
  3776  00F9C6  65                 	db	101	;'e'
  3777  00F9C7  6C                 	db	108	;'l'
  3778  00F9C8  20                 	db	32
  3779  00F9C9  63                 	db	99	;'c'
  3780  00F9CA  61                 	db	97	;'a'
  3781  00F9CB  75                 	db	117	;'u'
  3782  00F9CC  73                 	db	115	;'s'
  3783  00F9CD  65                 	db	101	;'e'
  3784  00F9CE  64                 	db	100	;'d'
  3785  00F9CF  20                 	db	32
  3786  00F9D0  61                 	db	97	;'a'
  3787  00F9D1  6E                 	db	110	;'n'
  3788  00F9D2  20                 	db	32
  3789  00F9D3  41                 	db	65	;'A'
  3790  00F9D4  44                 	db	68	;'D'
  3791  00F9D5  43                 	db	67	;'C'
  3792  00F9D6  20                 	db	32
  3793  00F9D7  65                 	db	101	;'e'
  3794  00F9D8  72                 	db	114	;'r'
  3795  00F9D9  72                 	db	114	;'r'
  3796  00F9DA  6F                 	db	111	;'o'
  3797  00F9DB  72                 	db	114	;'r'
  3798  00F9DC  3A                 	db	58	;':'
  3799  00F9DD  20                 	db	32
  3800  00F9DE  25                 	db	37
  3801  00F9DF  73                 	db	115	;'s'
  3802  00F9E0  0A                 	db	10
  3803  00F9E1  0D                 	db	13
  3804  00F9E2  00                 	db	0
  3805  00F9E3                     STR_52:
  3806  00F9E3  4D                 	db	77	;'M'
  3807  00F9E4  61                 	db	97	;'a'
  3808  00F9E5  72                 	db	114	;'r'
  3809  00F9E6  71                 	db	113	;'q'
  3810  00F9E7  75                 	db	117	;'u'
  3811  00F9E8  65                 	db	101	;'e'
  3812  00F9E9  74                 	db	116	;'t'
  3813  00F9EA  74                 	db	116	;'t'
  3814  00F9EB  65                 	db	101	;'e'
  3815  00F9EC  20                 	db	32
  3816  00F9ED  55                 	db	85	;'U'
  3817  00F9EE  6E                 	db	110	;'n'
  3818  00F9EF  69                 	db	105	;'i'
  3819  00F9F0  76                 	db	118	;'v'
  3820  00F9F1  65                 	db	101	;'e'
  3821  00F9F2  72                 	db	114	;'r'
  3822  00F9F3  73                 	db	115	;'s'
  3823  00F9F4  69                 	db	105	;'i'
  3824  00F9F5  74                 	db	116	;'t'
  3825  00F9F6  79                 	db	121	;'y'
  3826  00F9F7  20                 	db	32
  3827  00F9F8  45                 	db	69	;'E'
  3828  00F9F9  4C                 	db	76	;'L'
  3829  00F9FA  45                 	db	69	;'E'
  3830  00F9FB  4E                 	db	78	;'N'
  3831  00F9FC  20                 	db	32
  3832  00F9FD  33                 	db	51	;'3'
  3833  00F9FE  30                 	db	48	;'0'
  3834  00F9FF  33                 	db	51	;'3'
  3835  00FA00  35                 	db	53	;'5'
  3836  00FA01  20                 	db	32
  3837  00FA02  46                 	db	70	;'F'
  3838  00FA03  69                 	db	105	;'i'
  3839  00FA04  6E                 	db	110	;'n'
  3840  00FA05  61                 	db	97	;'a'
  3841  00FA06  6C                 	db	108	;'l'
  3842  00FA07  20                 	db	32
  3843  00FA08  50                 	db	80	;'P'
  3844  00FA09  72                 	db	114	;'r'
  3845  00FA0A  6F                 	db	111	;'o'
  3846  00FA0B  6A                 	db	106	;'j'
  3847  00FA0C  65                 	db	101	;'e'
  3848  00FA0D  63                 	db	99	;'c'
  3849  00FA0E  74                 	db	116	;'t'
  3850  00FA0F  0A                 	db	10
  3851  00FA10  0D                 	db	13
  3852  00FA11  00                 	db	0
  3853  00FA12                     STR_105:
  3854  00FA12  45                 	db	69	;'E'
  3855  00FA13  6E                 	db	110	;'n'
  3856  00FA14  74                 	db	116	;'t'
  3857  00FA15  65                 	db	101	;'e'
  3858  00FA16  72                 	db	114	;'r'
  3859  00FA17  20                 	db	32
  3860  00FA18  27                 	db	39
  3861  00FA19  48                 	db	72	;'H'
  3862  00FA1A  65                 	db	101	;'e'
  3863  00FA1B  6C                 	db	108	;'l'
  3864  00FA1C  70                 	db	112	;'p'
  3865  00FA1D  27                 	db	39
  3866  00FA1E  20                 	db	32
  3867  00FA1F  66                 	db	102	;'f'
  3868  00FA20  6F                 	db	111	;'o'
  3869  00FA21  72                 	db	114	;'r'
  3870  00FA22  20                 	db	32
  3871  00FA23  6C                 	db	108	;'l'
  3872  00FA24  69                 	db	105	;'i'
  3873  00FA25  73                 	db	115	;'s'
  3874  00FA26  74                 	db	116	;'t'
  3875  00FA27  20                 	db	32
  3876  00FA28  6F                 	db	111	;'o'
  3877  00FA29  66                 	db	102	;'f'
  3878  00FA2A  20                 	db	32
  3879  00FA2B  61                 	db	97	;'a'
  3880  00FA2C  76                 	db	118	;'v'
  3881  00FA2D  61                 	db	97	;'a'
  3882  00FA2E  69                 	db	105	;'i'
  3883  00FA2F  6C                 	db	108	;'l'
  3884  00FA30  61                 	db	97	;'a'
  3885  00FA31  62                 	db	98	;'b'
  3886  00FA32  6C                 	db	108	;'l'
  3887  00FA33  65                 	db	101	;'e'
  3888  00FA34  20                 	db	32
  3889  00FA35  63                 	db	99	;'c'
  3890  00FA36  6F                 	db	111	;'o'
  3891  00FA37  6D                 	db	109	;'m'
  3892  00FA38  6D                 	db	109	;'m'
  3893  00FA39  61                 	db	97	;'a'
  3894  00FA3A  6E                 	db	110	;'n'
  3895  00FA3B  64                 	db	100	;'d'
  3896  00FA3C  73                 	db	115	;'s'
  3897  00FA3D  0A                 	db	10
  3898  00FA3E  0D                 	db	13
  3899  00FA3F  00                 	db	0
  3900  00FA40                     STR_75:
  3901  00FA40  56                 	db	86	;'V'
  3902  00FA41  43                 	db	67	;'C'
  3903  00FA42  43                 	db	67	;'C'
  3904  00FA43  20                 	db	32
  3905  00FA44  4F                 	db	79	;'O'
  3906  00FA45  76                 	db	118	;'v'
  3907  00FA46  65                 	db	101	;'e'
  3908  00FA47  72                 	db	114	;'r'
  3909  00FA48  76                 	db	118	;'v'
  3910  00FA49  6F                 	db	111	;'o'
  3911  00FA4A  6C                 	db	108	;'l'
  3912  00FA4B  74                 	db	116	;'t'
  3913  00FA4C  61                 	db	97	;'a'
  3914  00FA4D  67                 	db	103	;'g'
  3915  00FA4E  65                 	db	101	;'e'
  3916  00FA4F  20                 	db	32
  3917  00FA50  63                 	db	99	;'c'
  3918  00FA51  6F                 	db	111	;'o'
  3919  00FA52  6E                 	db	110	;'n'
  3920  00FA53  64                 	db	100	;'d'
  3921  00FA54  69                 	db	105	;'i'
  3922  00FA55  74                 	db	116	;'t'
  3923  00FA56  69                 	db	105	;'i'
  3924  00FA57  6F                 	db	111	;'o'
  3925  00FA58  6E                 	db	110	;'n'
  3926  00FA59  20                 	db	32
  3927  00FA5A  68                 	db	104	;'h'
  3928  00FA5B  61                 	db	97	;'a'
  3929  00FA5C  73                 	db	115	;'s'
  3930  00FA5D  20                 	db	32
  3931  00FA5E  6E                 	db	110	;'n'
  3932  00FA5F  6F                 	db	111	;'o'
  3933  00FA60  74                 	db	116	;'t'
  3934  00FA61  20                 	db	32
  3935  00FA62  6F                 	db	111	;'o'
  3936  00FA63  63                 	db	99	;'c'
  3937  00FA64  63                 	db	99	;'c'
  3938  00FA65  75                 	db	117	;'u'
  3939  00FA66  72                 	db	114	;'r'
  3940  00FA67  72                 	db	114	;'r'
  3941  00FA68  65                 	db	101	;'e'
  3942  00FA69  64                 	db	100	;'d'
  3943  00FA6A  0A                 	db	10
  3944  00FA6B  0D                 	db	13
  3945  00FA6C  00                 	db	0
  3946  00FA6D                     STR_99:
  3947  00FA6D  4C                 	db	76	;'L'
  3948  00FA6E  6F                 	db	111	;'o'
  3949  00FA6F  61                 	db	97	;'a'
  3950  00FA70  64                 	db	100	;'d'
  3951  00FA71  20                 	db	32
  3952  00FA72  68                 	db	104	;'h'
  3953  00FA73  61                 	db	97	;'a'
  3954  00FA74  73                 	db	115	;'s'
  3955  00FA75  20                 	db	32
  3956  00FA76  62                 	db	98	;'b'
  3957  00FA77  65                 	db	101	;'e'
  3958  00FA78  65                 	db	101	;'e'
  3959  00FA79  6E                 	db	110	;'n'
  3960  00FA7A  20                 	db	32
  3961  00FA7B  65                 	db	101	;'e'
  3962  00FA7C  6E                 	db	110	;'n'
  3963  00FA7D  61                 	db	97	;'a'
  3964  00FA7E  62                 	db	98	;'b'
  3965  00FA7F  6C                 	db	108	;'l'
  3966  00FA80  65                 	db	101	;'e'
  3967  00FA81  64                 	db	100	;'d'
  3968  00FA82  2C                 	db	44
  3969  00FA83  20                 	db	32
  3970  00FA84  64                 	db	100	;'d'
  3971  00FA85  69                 	db	105	;'i'
  3972  00FA86  6D                 	db	109	;'m'
  3973  00FA87  6D                 	db	109	;'m'
  3974  00FA88  69                 	db	105	;'i'
  3975  00FA89  6E                 	db	110	;'n'
  3976  00FA8A  67                 	db	103	;'g'
  3977  00FA8B  20                 	db	32
  3978  00FA8C  64                 	db	100	;'d'
  3979  00FA8D  69                 	db	105	;'i'
  3980  00FA8E  73                 	db	115	;'s'
  3981  00FA8F  61                 	db	97	;'a'
  3982  00FA90  62                 	db	98	;'b'
  3983  00FA91  6C                 	db	108	;'l'
  3984  00FA92  65                 	db	101	;'e'
  3985  00FA93  64                 	db	100	;'d'
  3986  00FA94  0A                 	db	10
  3987  00FA95  0D                 	db	13
  3988  00FA96  00                 	db	0
  3989  00FA97                     STR_128:
  3990  00FA97  57                 	db	87	;'W'
  3991  00FA98  69                 	db	105	;'i'
  3992  00FA99  6E                 	db	110	;'n'
  3993  00FA9A  64                 	db	100	;'d'
  3994  00FA9B  6F                 	db	111	;'o'
  3995  00FA9C  77                 	db	119	;'w'
  3996  00FA9D  65                 	db	101	;'e'
  3997  00FA9E  64                 	db	100	;'d'
  3998  00FA9F  20                 	db	32
  3999  00FAA0  57                 	db	87	;'W'
  4000  00FAA1  61                 	db	97	;'a'
  4001  00FAA2  74                 	db	116	;'t'
  4002  00FAA3  63                 	db	99	;'c'
  4003  00FAA4  68                 	db	104	;'h'
  4004  00FAA5  20                 	db	32
  4005  00FAA6  44                 	db	68	;'D'
  4006  00FAA7  6F                 	db	111	;'o'
  4007  00FAA8  67                 	db	103	;'g'
  4008  00FAA9  20                 	db	32
  4009  00FAAA  54                 	db	84	;'T'
  4010  00FAAB  69                 	db	105	;'i'
  4011  00FAAC  6D                 	db	109	;'m'
  4012  00FAAD  65                 	db	101	;'e'
  4013  00FAAE  72                 	db	114	;'r'
  4014  00FAAF  20                 	db	32
  4015  00FAB0  56                 	db	86	;'V'
  4016  00FAB1  69                 	db	105	;'i'
  4017  00FAB2  6F                 	db	111	;'o'
  4018  00FAB3  6C                 	db	108	;'l'
  4019  00FAB4  61                 	db	97	;'a'
  4020  00FAB5  74                 	db	116	;'t'
  4021  00FAB6  69                 	db	105	;'i'
  4022  00FAB7  6F                 	db	111	;'o'
  4023  00FAB8  6E                 	db	110	;'n'
  4024  00FAB9  20                 	db	32
  4025  00FABA  52                 	db	82	;'R'
  4026  00FABB  65                 	db	101	;'e'
  4027  00FABC  73                 	db	115	;'s'
  4028  00FABD  65                 	db	101	;'e'
  4029  00FABE  74                 	db	116	;'t'
  4030  00FABF  00                 	db	0
  4031  00FAC0                     STR_97:
  4032  00FAC0  54                 	db	84	;'T'
  4033  00FAC1  52                 	db	82	;'R'
  4034  00FAC2  49                 	db	73	;'I'
  4035  00FAC3  41                 	db	65	;'A'
  4036  00FAC4  43                 	db	67	;'C'
  4037  00FAC5  20                 	db	32
  4038  00FAC6  6F                 	db	111	;'o'
  4039  00FAC7  75                 	db	117	;'u'
  4040  00FAC8  74                 	db	116	;'t'
  4041  00FAC9  70                 	db	112	;'p'
  4042  00FACA  75                 	db	117	;'u'
  4043  00FACB  74                 	db	116	;'t'
  4044  00FACC  20                 	db	32
  4045  00FACD  64                 	db	100	;'d'
  4046  00FACE  69                 	db	105	;'i'
  4047  00FACF  6D                 	db	109	;'m'
  4048  00FAD0  6D                 	db	109	;'m'
  4049  00FAD1  69                 	db	105	;'i'
  4050  00FAD2  6E                 	db	110	;'n'
  4051  00FAD3  67                 	db	103	;'g'
  4052  00FAD4  20                 	db	32
  4053  00FAD5  68                 	db	104	;'h'
  4054  00FAD6  61                 	db	97	;'a'
  4055  00FAD7  73                 	db	115	;'s'
  4056  00FAD8  20                 	db	32
  4057  00FAD9  62                 	db	98	;'b'
  4058  00FADA  65                 	db	101	;'e'
  4059  00FADB  65                 	db	101	;'e'
  4060  00FADC  6E                 	db	110	;'n'
  4061  00FADD  20                 	db	32
  4062  00FADE  64                 	db	100	;'d'
  4063  00FADF  69                 	db	105	;'i'
  4064  00FAE0  73                 	db	115	;'s'
  4065  00FAE1  61                 	db	97	;'a'
  4066  00FAE2  62                 	db	98	;'b'
  4067  00FAE3  6C                 	db	108	;'l'
  4068  00FAE4  65                 	db	101	;'e'
  4069  00FAE5  64                 	db	100	;'d'
  4070  00FAE6  0A                 	db	10
  4071  00FAE7  0D                 	db	13
  4072  00FAE8  00                 	db	0
  4073  00FAE9                     STR_95:
  4074  00FAE9  54                 	db	84	;'T'
  4075  00FAEA  52                 	db	82	;'R'
  4076  00FAEB  49                 	db	73	;'I'
  4077  00FAEC  41                 	db	65	;'A'
  4078  00FAED  43                 	db	67	;'C'
  4079  00FAEE  20                 	db	32
  4080  00FAEF  6F                 	db	111	;'o'
  4081  00FAF0  75                 	db	117	;'u'
  4082  00FAF1  74                 	db	116	;'t'
  4083  00FAF2  70                 	db	112	;'p'
  4084  00FAF3  75                 	db	117	;'u'
  4085  00FAF4  74                 	db	116	;'t'
  4086  00FAF5  20                 	db	32
  4087  00FAF6  64                 	db	100	;'d'
  4088  00FAF7  69                 	db	105	;'i'
  4089  00FAF8  6D                 	db	109	;'m'
  4090  00FAF9  6D                 	db	109	;'m'
  4091  00FAFA  69                 	db	105	;'i'
  4092  00FAFB  6E                 	db	110	;'n'
  4093  00FAFC  67                 	db	103	;'g'
  4094  00FAFD  20                 	db	32
  4095  00FAFE  68                 	db	104	;'h'
  4096  00FAFF  61                 	db	97	;'a'
  4097  00FB00  73                 	db	115	;'s'
  4098  00FB01  20                 	db	32
  4099  00FB02  62                 	db	98	;'b'
  4100  00FB03  65                 	db	101	;'e'
  4101  00FB04  65                 	db	101	;'e'
  4102  00FB05  6E                 	db	110	;'n'
  4103  00FB06  20                 	db	32
  4104  00FB07  65                 	db	101	;'e'
  4105  00FB08  6E                 	db	110	;'n'
  4106  00FB09  61                 	db	97	;'a'
  4107  00FB0A  62                 	db	98	;'b'
  4108  00FB0B  6C                 	db	108	;'l'
  4109  00FB0C  65                 	db	101	;'e'
  4110  00FB0D  64                 	db	100	;'d'
  4111  00FB0E  0A                 	db	10
  4112  00FB0F  0D                 	db	13
  4113  00FB10  00                 	db	0
  4114  00FB11                     STR_117:
  4115  00FB11  4D                 	db	77	;'M'
  4116  00FB12  65                 	db	101	;'e'
  4117  00FB13  61                 	db	97	;'a'
  4118  00FB14  73                 	db	115	;'s'
  4119  00FB15  75                 	db	117	;'u'
  4120  00FB16  72                 	db	114	;'r'
  4121  00FB17  65                 	db	101	;'e'
  4122  00FB18  6D                 	db	109	;'m'
  4123  00FB19  65                 	db	101	;'e'
  4124  00FB1A  6E                 	db	110	;'n'
  4125  00FB1B  74                 	db	116	;'t'
  4126  00FB1C  20                 	db	32
  4127  00FB1D  72                 	db	114	;'r'
  4128  00FB1E  65                 	db	101	;'e'
  4129  00FB1F  73                 	db	115	;'s'
  4130  00FB20  70                 	db	112	;'p'
  4131  00FB21  6F                 	db	111	;'o'
  4132  00FB22  6E                 	db	110	;'n'
  4133  00FB23  73                 	db	115	;'s'
  4134  00FB24  65                 	db	101	;'e'
  4135  00FB25  73                 	db	115	;'s'
  4136  00FB26  20                 	db	32
  4137  00FB27  61                 	db	97	;'a'
  4138  00FB28  70                 	db	112	;'p'
  4139  00FB29  70                 	db	112	;'p'
  4140  00FB2A  65                 	db	101	;'e'
  4141  00FB2B  61                 	db	97	;'a'
  4142  00FB2C  72                 	db	114	;'r'
  4143  00FB2D  20                 	db	32
  4144  00FB2E  69                 	db	105	;'i'
  4145  00FB2F  6E                 	db	110	;'n'
  4146  00FB30  20                 	db	32
  4147  00FB31  63                 	db	99	;'c'
  4148  00FB32  79                 	db	121	;'y'
  4149  00FB33  61                 	db	97	;'a'
  4150  00FB34  6E                 	db	110	;'n'
  4151  00FB35  0A                 	db	10
  4152  00FB36  0D                 	db	13
  4153  00FB37  00                 	db	0
  4154  00FB38                     STR_85:
  4155  00FB38  41                 	db	65	;'A'
  4156  00FB39  56                 	db	86	;'V'
  4157  00FB3A  53                 	db	83	;'S'
  4158  00FB3B  53                 	db	83	;'S'
  4159  00FB3C  20                 	db	32
  4160  00FB3D  6D                 	db	109	;'m'
  4161  00FB3E  65                 	db	101	;'e'
  4162  00FB3F  61                 	db	97	;'a'
  4163  00FB40  73                 	db	115	;'s'
  4164  00FB41  75                 	db	117	;'u'
  4165  00FB42  72                 	db	114	;'r'
  4166  00FB43  65                 	db	101	;'e'
  4167  00FB44  64                 	db	100	;'d'
  4168  00FB45  20                 	db	32
  4169  00FB46  61                 	db	97	;'a'
  4170  00FB47  73                 	db	115	;'s'
  4171  00FB48  20                 	db	32
  4172  00FB49  25                 	db	37
  4173  00FB4A  2E                 	db	46
  4174  00FB4B  33                 	db	51	;'3'
  4175  00FB4C  66                 	db	102	;'f'
  4176  00FB4D  20                 	db	32
  4177  00FB4E  56                 	db	86	;'V'
  4178  00FB4F  6F                 	db	111	;'o'
  4179  00FB50  6C                 	db	108	;'l'
  4180  00FB51  74                 	db	116	;'t'
  4181  00FB52  73                 	db	115	;'s'
  4182  00FB53  20                 	db	32
  4183  00FB54  62                 	db	98	;'b'
  4184  00FB55  79                 	db	121	;'y'
  4185  00FB56  20                 	db	32
  4186  00FB57  41                 	db	65	;'A'
  4187  00FB58  44                 	db	68	;'D'
  4188  00FB59  43                 	db	67	;'C'
  4189  00FB5A  0A                 	db	10
  4190  00FB5B  0D                 	db	13
  4191  00FB5C  00                 	db	0
  4192  00FB5D                     STR_106:
  4193  00FB5D  44                 	db	68	;'D'
  4194  00FB5E  69                 	db	105	;'i'
  4195  00FB5F  6D                 	db	109	;'m'
  4196  00FB60  6D                 	db	109	;'m'
  4197  00FB61  69                 	db	105	;'i'
  4198  00FB62  6E                 	db	110	;'n'
  4199  00FB63  67                 	db	103	;'g'
  4200  00FB64  20                 	db	32
  4201  00FB65  68                 	db	104	;'h'
  4202  00FB66  61                 	db	97	;'a'
  4203  00FB67  73                 	db	115	;'s'
  4204  00FB68  20                 	db	32
  4205  00FB69  62                 	db	98	;'b'
  4206  00FB6A  65                 	db	101	;'e'
  4207  00FB6B  65                 	db	101	;'e'
  4208  00FB6C  6E                 	db	110	;'n'
  4209  00FB6D  20                 	db	32
  4210  00FB6E  73                 	db	115	;'s'
  4211  00FB6F  65                 	db	101	;'e'
  4212  00FB70  74                 	db	116	;'t'
  4213  00FB71  20                 	db	32
  4214  00FB72  74                 	db	116	;'t'
  4215  00FB73  6F                 	db	111	;'o'
  4216  00FB74  20                 	db	32
  4217  00FB75  25                 	db	37
  4218  00FB76  64                 	db	100	;'d'
  4219  00FB77  20                 	db	32
  4220  00FB78  70                 	db	112	;'p'
  4221  00FB79  65                 	db	101	;'e'
  4222  00FB7A  72                 	db	114	;'r'
  4223  00FB7B  63                 	db	99	;'c'
  4224  00FB7C  65                 	db	101	;'e'
  4225  00FB7D  6E                 	db	110	;'n'
  4226  00FB7E  74                 	db	116	;'t'
  4227  00FB7F  0A                 	db	10
  4228  00FB80  0D                 	db	13
  4229  00FB81  00                 	db	0
  4230  00FB82                     STR_116:
  4231  00FB82  53                 	db	83	;'S'
  4232  00FB83  79                 	db	121	;'y'
  4233  00FB84  73                 	db	115	;'s'
  4234  00FB85  74                 	db	116	;'t'
  4235  00FB86  65                 	db	101	;'e'
  4236  00FB87  6D                 	db	109	;'m'
  4237  00FB88  20                 	db	32
  4238  00FB89  70                 	db	112	;'p'
  4239  00FB8A  61                 	db	97	;'a'
  4240  00FB8B  72                 	db	114	;'r'
  4241  00FB8C  61                 	db	97	;'a'
  4242  00FB8D  6D                 	db	109	;'m'
  4243  00FB8E  65                 	db	101	;'e'
  4244  00FB8F  74                 	db	116	;'t'
  4245  00FB90  65                 	db	101	;'e'
  4246  00FB91  72                 	db	114	;'r'
  4247  00FB92  73                 	db	115	;'s'
  4248  00FB93  20                 	db	32
  4249  00FB94  61                 	db	97	;'a'
  4250  00FB95  70                 	db	112	;'p'
  4251  00FB96  70                 	db	112	;'p'
  4252  00FB97  65                 	db	101	;'e'
  4253  00FB98  61                 	db	97	;'a'
  4254  00FB99  72                 	db	114	;'r'
  4255  00FB9A  20                 	db	32
  4256  00FB9B  69                 	db	105	;'i'
  4257  00FB9C  6E                 	db	110	;'n'
  4258  00FB9D  20                 	db	32
  4259  00FB9E  67                 	db	103	;'g'
  4260  00FB9F  72                 	db	114	;'r'
  4261  00FBA0  65                 	db	101	;'e'
  4262  00FBA1  65                 	db	101	;'e'
  4263  00FBA2  6E                 	db	110	;'n'
  4264  00FBA3  0A                 	db	10
  4265  00FBA4  0D                 	db	13
  4266  00FBA5  00                 	db	0
  4267  00FBA6                     STR_77:
  4268  00FBA6  2B                 	db	43
  4269  00FBA7  33                 	db	51	;'3'
  4270  00FBA8  2E                 	db	46
  4271  00FBA9  33                 	db	51	;'3'
  4272  00FBAA  56                 	db	86	;'V'
  4273  00FBAB  20                 	db	32
  4274  00FBAC  72                 	db	114	;'r'
  4275  00FBAD  61                 	db	97	;'a'
  4276  00FBAE  69                 	db	105	;'i'
  4277  00FBAF  6C                 	db	108	;'l'
  4278  00FBB0  20                 	db	32
  4279  00FBB1  6D                 	db	109	;'m'
  4280  00FBB2  65                 	db	101	;'e'
  4281  00FBB3  61                 	db	97	;'a'
  4282  00FBB4  73                 	db	115	;'s'
  4283  00FBB5  75                 	db	117	;'u'
  4284  00FBB6  72                 	db	114	;'r'
  4285  00FBB7  65                 	db	101	;'e'
  4286  00FBB8  64                 	db	100	;'d'
  4287  00FBB9  20                 	db	32
  4288  00FBBA  61                 	db	97	;'a'
  4289  00FBBB  73                 	db	115	;'s'
  4290  00FBBC  20                 	db	32
  4291  00FBBD  2B                 	db	43
  4292  00FBBE  25                 	db	37
  4293  00FBBF  66                 	db	102	;'f'
  4294  00FBC0  20                 	db	32
  4295  00FBC1  56                 	db	86	;'V'
  4296  00FBC2  6F                 	db	111	;'o'
  4297  00FBC3  6C                 	db	108	;'l'
  4298  00FBC4  74                 	db	116	;'t'
  4299  00FBC5  73                 	db	115	;'s'
  4300  00FBC6  0A                 	db	10
  4301  00FBC7  0D                 	db	13
  4302  00FBC8  00                 	db	0
  4303  00FBC9                     STR_81:
  4304  00FBC9  44                 	db	68	;'D'
  4305  00FBCA  69                 	db	105	;'i'
  4306  00FBCB  65                 	db	101	;'e'
  4307  00FBCC  20                 	db	32
  4308  00FBCD  54                 	db	84	;'T'
  4309  00FBCE  65                 	db	101	;'e'
  4310  00FBCF  6D                 	db	109	;'m'
  4311  00FBD0  70                 	db	112	;'p'
  4312  00FBD1  65                 	db	101	;'e'
  4313  00FBD2  72                 	db	114	;'r'
  4314  00FBD3  61                 	db	97	;'a'
  4315  00FBD4  74                 	db	116	;'t'
  4316  00FBD5  75                 	db	117	;'u'
  4317  00FBD6  72                 	db	114	;'r'
  4318  00FBD7  65                 	db	101	;'e'
  4319  00FBD8  20                 	db	32
  4320  00FBD9  6D                 	db	109	;'m'
  4321  00FBDA  65                 	db	101	;'e'
  4322  00FBDB  61                 	db	97	;'a'
  4323  00FBDC  73                 	db	115	;'s'
  4324  00FBDD  75                 	db	117	;'u'
  4325  00FBDE  72                 	db	114	;'r'
  4326  00FBDF  65                 	db	101	;'e'
  4327  00FBE0  64                 	db	100	;'d'
  4328  00FBE1  20                 	db	32
  4329  00FBE2  61                 	db	97	;'a'
  4330  00FBE3  73                 	db	115	;'s'
  4331  00FBE4  20                 	db	32
  4332  00FBE5  25                 	db	37
  4333  00FBE6  66                 	db	102	;'f'
  4334  00FBE7  43                 	db	67	;'C'
  4335  00FBE8  0A                 	db	10
  4336  00FBE9  0D                 	db	13
  4337  00FBEA  00                 	db	0
  4338  00FBEB                     STR_89:
  4339  00FBEB  52                 	db	82	;'R'
  4340  00FBEC  4D                 	db	77	;'M'
  4341  00FBED  53                 	db	83	;'S'
  4342  00FBEE  20                 	db	32
  4343  00FBEF  4F                 	db	79	;'O'
  4344  00FBF0  75                 	db	117	;'u'
  4345  00FBF1  74                 	db	116	;'t'
  4346  00FBF2  70                 	db	112	;'p'
  4347  00FBF3  75                 	db	117	;'u'
  4348  00FBF4  74                 	db	116	;'t'
  4349  00FBF5  20                 	db	32
  4350  00FBF6  43                 	db	67	;'C'
  4351  00FBF7  75                 	db	117	;'u'
  4352  00FBF8  72                 	db	114	;'r'
  4353  00FBF9  72                 	db	114	;'r'
  4354  00FBFA  65                 	db	101	;'e'
  4355  00FBFB  6E                 	db	110	;'n'
  4356  00FBFC  74                 	db	116	;'t'
  4357  00FBFD  20                 	db	32
  4358  00FBFE  69                 	db	105	;'i'
  4359  00FBFF  73                 	db	115	;'s'
  4360  00FC00  20                 	db	32
  4361  00FC01  25                 	db	37
  4362  00FC02  2E                 	db	46
  4363  00FC03  33                 	db	51	;'3'
  4364  00FC04  66                 	db	102	;'f'
  4365  00FC05  20                 	db	32
  4366  00FC06  41                 	db	65	;'A'
  4367  00FC07  72                 	db	114	;'r'
  4368  00FC08  6D                 	db	109	;'m'
  4369  00FC09  73                 	db	115	;'s'
  4370  00FC0A  0A                 	db	10
  4371  00FC0B  0D                 	db	13
  4372  00FC0C  00                 	db	0
  4373  00FC0D                     STR_91:
  4374  00FC0D  52                 	db	82	;'R'
  4375  00FC0E  4D                 	db	77	;'M'
  4376  00FC0F  53                 	db	83	;'S'
  4377  00FC10  20                 	db	32
  4378  00FC11  4F                 	db	79	;'O'
  4379  00FC12  75                 	db	117	;'u'
  4380  00FC13  74                 	db	116	;'t'
  4381  00FC14  70                 	db	112	;'p'
  4382  00FC15  75                 	db	117	;'u'
  4383  00FC16  74                 	db	116	;'t'
  4384  00FC17  20                 	db	32
  4385  00FC18  56                 	db	86	;'V'
  4386  00FC19  6F                 	db	111	;'o'
  4387  00FC1A  6C                 	db	108	;'l'
  4388  00FC1B  74                 	db	116	;'t'
  4389  00FC1C  61                 	db	97	;'a'
  4390  00FC1D  67                 	db	103	;'g'
  4391  00FC1E  65                 	db	101	;'e'
  4392  00FC1F  20                 	db	32
  4393  00FC20  69                 	db	105	;'i'
  4394  00FC21  73                 	db	115	;'s'
  4395  00FC22  20                 	db	32
  4396  00FC23  25                 	db	37
  4397  00FC24  2E                 	db	46
  4398  00FC25  33                 	db	51	;'3'
  4399  00FC26  66                 	db	102	;'f'
  4400  00FC27  20                 	db	32
  4401  00FC28  56                 	db	86	;'V'
  4402  00FC29  72                 	db	114	;'r'
  4403  00FC2A  6D                 	db	109	;'m'
  4404  00FC2B  73                 	db	115	;'s'
  4405  00FC2C  0A                 	db	10
  4406  00FC2D  0D                 	db	13
  4407  00FC2E  00                 	db	0
  4408  00FC2F                     STR_79:
  4409  00FC2F  2B                 	db	43
  4410  00FC30  31                 	db	49	;'1'
  4411  00FC31  32                 	db	50	;'2'
  4412  00FC32  56                 	db	86	;'V'
  4413  00FC33  20                 	db	32
  4414  00FC34  72                 	db	114	;'r'
  4415  00FC35  61                 	db	97	;'a'
  4416  00FC36  69                 	db	105	;'i'
  4417  00FC37  6C                 	db	108	;'l'
  4418  00FC38  20                 	db	32
  4419  00FC39  6D                 	db	109	;'m'
  4420  00FC3A  65                 	db	101	;'e'
  4421  00FC3B  61                 	db	97	;'a'
  4422  00FC3C  73                 	db	115	;'s'
  4423  00FC3D  75                 	db	117	;'u'
  4424  00FC3E  72                 	db	114	;'r'
  4425  00FC3F  65                 	db	101	;'e'
  4426  00FC40  64                 	db	100	;'d'
  4427  00FC41  20                 	db	32
  4428  00FC42  61                 	db	97	;'a'
  4429  00FC43  73                 	db	115	;'s'
  4430  00FC44  20                 	db	32
  4431  00FC45  2B                 	db	43
  4432  00FC46  25                 	db	37
  4433  00FC47  66                 	db	102	;'f'
  4434  00FC48  20                 	db	32
  4435  00FC49  56                 	db	86	;'V'
  4436  00FC4A  6F                 	db	111	;'o'
  4437  00FC4B  6C                 	db	108	;'l'
  4438  00FC4C  74                 	db	116	;'t'
  4439  00FC4D  73                 	db	115	;'s'
  4440  00FC4E  0A                 	db	10
  4441  00FC4F  0D                 	db	13
  4442  00FC50  00                 	db	0
  4443  00FC51                     STR_115:
  4444  00FC51  48                 	db	72	;'H'
  4445  00FC52  65                 	db	101	;'e'
  4446  00FC53  6C                 	db	108	;'l'
  4447  00FC54  70                 	db	112	;'p'
  4448  00FC55  20                 	db	32
  4449  00FC56  6D                 	db	109	;'m'
  4450  00FC57  65                 	db	101	;'e'
  4451  00FC58  73                 	db	115	;'s'
  4452  00FC59  73                 	db	115	;'s'
  4453  00FC5A  61                 	db	97	;'a'
  4454  00FC5B  67                 	db	103	;'g'
  4455  00FC5C  65                 	db	101	;'e'
  4456  00FC5D  73                 	db	115	;'s'
  4457  00FC5E  20                 	db	32
  4458  00FC5F  61                 	db	97	;'a'
  4459  00FC60  70                 	db	112	;'p'
  4460  00FC61  70                 	db	112	;'p'
  4461  00FC62  65                 	db	101	;'e'
  4462  00FC63  61                 	db	97	;'a'
  4463  00FC64  72                 	db	114	;'r'
  4464  00FC65  20                 	db	32
  4465  00FC66  69                 	db	105	;'i'
  4466  00FC67  6E                 	db	110	;'n'
  4467  00FC68  20                 	db	32
  4468  00FC69  79                 	db	121	;'y'
  4469  00FC6A  65                 	db	101	;'e'
  4470  00FC6B  6C                 	db	108	;'l'
  4471  00FC6C  6C                 	db	108	;'l'
  4472  00FC6D  6F                 	db	111	;'o'
  4473  00FC6E  77                 	db	119	;'w'
  4474  00FC6F  0A                 	db	10
  4475  00FC70  0D                 	db	13
  4476  00FC71  00                 	db	0
  4477  00FC72                     STR_87:
  4478  00FC72  4D                 	db	77	;'M'
  4479  00FC73  65                 	db	101	;'e'
  4480  00FC74  61                 	db	97	;'a'
  4481  00FC75  73                 	db	115	;'s'
  4482  00FC76  75                 	db	117	;'u'
  4483  00FC77  72                 	db	114	;'r'
  4484  00FC78  65                 	db	101	;'e'
  4485  00FC79  64                 	db	100	;'d'
  4486  00FC7A  20                 	db	32
  4487  00FC7B  43                 	db	67	;'C'
  4488  00FC7C  75                 	db	117	;'u'
  4489  00FC7D  72                 	db	114	;'r'
  4490  00FC7E  72                 	db	114	;'r'
  4491  00FC7F  65                 	db	101	;'e'
  4492  00FC80  6E                 	db	110	;'n'
  4493  00FC81  74                 	db	116	;'t'
  4494  00FC82  20                 	db	32
  4495  00FC83  69                 	db	105	;'i'
  4496  00FC84  73                 	db	115	;'s'
  4497  00FC85  20                 	db	32
  4498  00FC86  25                 	db	37
  4499  00FC87  2E                 	db	46
  4500  00FC88  33                 	db	51	;'3'
  4501  00FC89  66                 	db	102	;'f'
  4502  00FC8A  20                 	db	32
  4503  00FC8B  41                 	db	65	;'A'
  4504  00FC8C  6D                 	db	109	;'m'
  4505  00FC8D  70                 	db	112	;'p'
  4506  00FC8E  73                 	db	115	;'s'
  4507  00FC8F  0A                 	db	10
  4508  00FC90  0D                 	db	13
  4509  00FC91  00                 	db	0
  4510  00FC92                     STR_119:
  4511  00FC92  55                 	db	85	;'U'
  4512  00FC93  73                 	db	115	;'s'
  4513  00FC94  65                 	db	101	;'e'
  4514  00FC95  72                 	db	114	;'r'
  4515  00FC96  20                 	db	32
  4516  00FC97  69                 	db	105	;'i'
  4517  00FC98  6E                 	db	110	;'n'
  4518  00FC99  70                 	db	112	;'p'
  4519  00FC9A  75                 	db	117	;'u'
  4520  00FC9B  74                 	db	116	;'t'
  4521  00FC9C  20                 	db	32
  4522  00FC9D  61                 	db	97	;'a'
  4523  00FC9E  70                 	db	112	;'p'
  4524  00FC9F  70                 	db	112	;'p'
  4525  00FCA0  65                 	db	101	;'e'
  4526  00FCA1  61                 	db	97	;'a'
  4527  00FCA2  72                 	db	114	;'r'
  4528  00FCA3  73                 	db	115	;'s'
  4529  00FCA4  20                 	db	32
  4530  00FCA5  69                 	db	105	;'i'
  4531  00FCA6  6E                 	db	110	;'n'
  4532  00FCA7  20                 	db	32
  4533  00FCA8  77                 	db	119	;'w'
  4534  00FCA9  68                 	db	104	;'h'
  4535  00FCAA  69                 	db	105	;'i'
  4536  00FCAB  74                 	db	116	;'t'
  4537  00FCAC  65                 	db	101	;'e'
  4538  00FCAD  0A                 	db	10
  4539  00FCAE  0D                 	db	13
  4540  00FCAF  00                 	db	0
  4541  00FCB0                     STR_129:
  4542  00FCB0  52                 	db	82	;'R'
  4543  00FCB1  45                 	db	69	;'E'
  4544  00FCB2  53                 	db	83	;'S'
  4545  00FCB3  45                 	db	69	;'E'
  4546  00FCB4  54                 	db	84	;'T'
  4547  00FCB5  20                 	db	32
  4548  00FCB6  49                 	db	73	;'I'
  4549  00FCB7  6E                 	db	110	;'n'
  4550  00FCB8  73                 	db	115	;'s'
  4551  00FCB9  74                 	db	116	;'t'
  4552  00FCBA  72                 	db	114	;'r'
  4553  00FCBB  75                 	db	117	;'u'
  4554  00FCBC  63                 	db	99	;'c'
  4555  00FCBD  74                 	db	116	;'t'
  4556  00FCBE  69                 	db	105	;'i'
  4557  00FCBF  6F                 	db	111	;'o'
  4558  00FCC0  6E                 	db	110	;'n'
  4559  00FCC1  20                 	db	32
  4560  00FCC2  45                 	db	69	;'E'
  4561  00FCC3  78                 	db	120	;'x'
  4562  00FCC4  65                 	db	101	;'e'
  4563  00FCC5  63                 	db	99	;'c'
  4564  00FCC6  75                 	db	117	;'u'
  4565  00FCC7  74                 	db	116	;'t'
  4566  00FCC8  65                 	db	101	;'e'
  4567  00FCC9  64                 	db	100	;'d'
  4568  00FCCA  00                 	db	0
  4569  00FCCB                     STR_86:
  4570  00FCCB  4D                 	db	77	;'M'
  4571  00FCCC  65                 	db	101	;'e'
  4572  00FCCD  61                 	db	97	;'a'
  4573  00FCCE  73                 	db	115	;'s'
  4574  00FCCF  75                 	db	117	;'u'
  4575  00FCD0  72                 	db	114	;'r'
  4576  00FCD1  65                 	db	101	;'e'
  4577  00FCD2  20                 	db	32
  4578  00FCD3  44                 	db	68	;'D'
  4579  00FCD4  65                 	db	101	;'e'
  4580  00FCD5  74                 	db	116	;'t'
  4581  00FCD6  65                 	db	101	;'e'
  4582  00FCD7  63                 	db	99	;'c'
  4583  00FCD8  74                 	db	116	;'t'
  4584  00FCD9  65                 	db	101	;'e'
  4585  00FCDA  64                 	db	100	;'d'
  4586  00FCDB  20                 	db	32
  4587  00FCDC  43                 	db	67	;'C'
  4588  00FCDD  75                 	db	117	;'u'
  4589  00FCDE  72                 	db	114	;'r'
  4590  00FCDF  72                 	db	114	;'r'
  4591  00FCE0  65                 	db	101	;'e'
  4592  00FCE1  6E                 	db	110	;'n'
  4593  00FCE2  74                 	db	116	;'t'
  4594  00FCE3  3F                 	db	63	;'?'
  4595  00FCE4  00                 	db	0
  4596  00FCE5                     STR_101:
  4597  00FCE5  4C                 	db	76	;'L'
  4598  00FCE6  6F                 	db	111	;'o'
  4599  00FCE7  61                 	db	97	;'a'
  4600  00FCE8  64                 	db	100	;'d'
  4601  00FCE9  20                 	db	32
  4602  00FCEA  68                 	db	104	;'h'
  4603  00FCEB  61                 	db	97	;'a'
  4604  00FCEC  73                 	db	115	;'s'
  4605  00FCED  20                 	db	32
  4606  00FCEE  62                 	db	98	;'b'
  4607  00FCEF  65                 	db	101	;'e'
  4608  00FCF0  65                 	db	101	;'e'
  4609  00FCF1  6E                 	db	110	;'n'
  4610  00FCF2  20                 	db	32
  4611  00FCF3  64                 	db	100	;'d'
  4612  00FCF4  69                 	db	105	;'i'
  4613  00FCF5  73                 	db	115	;'s'
  4614  00FCF6  61                 	db	97	;'a'
  4615  00FCF7  62                 	db	98	;'b'
  4616  00FCF8  6C                 	db	108	;'l'
  4617  00FCF9  65                 	db	101	;'e'
  4618  00FCFA  64                 	db	100	;'d'
  4619  00FCFB  0A                 	db	10
  4620  00FCFC  0D                 	db	13
  4621  00FCFD  00                 	db	0
  4622  00FCFE                     STR_102:
  4623  00FCFE  53                 	db	83	;'S'
  4624  00FCFF  65                 	db	101	;'e'
  4625  00FD00  74                 	db	116	;'t'
  4626  00FD01  20                 	db	32
  4627  00FD02  44                 	db	68	;'D'
  4628  00FD03  69                 	db	105	;'i'
  4629  00FD04  6D                 	db	109	;'m'
  4630  00FD05  6D                 	db	109	;'m'
  4631  00FD06  69                 	db	105	;'i'
  4632  00FD07  6E                 	db	110	;'n'
  4633  00FD08  67                 	db	103	;'g'
  4634  00FD09  20                 	db	32
  4635  00FD0A  50                 	db	80	;'P'
  4636  00FD0B  65                 	db	101	;'e'
  4637  00FD0C  72                 	db	114	;'r'
  4638  00FD0D  63                 	db	99	;'c'
  4639  00FD0E  65                 	db	101	;'e'
  4640  00FD0F  6E                 	db	110	;'n'
  4641  00FD10  74                 	db	116	;'t'
  4642  00FD11  61                 	db	97	;'a'
  4643  00FD12  67                 	db	103	;'g'
  4644  00FD13  65                 	db	101	;'e'
  4645  00FD14  3A                 	db	58	;':'
  4646  00FD15  20                 	db	32
  4647  00FD16  00                 	db	0
  4648  00FD17                     STR_70:
  4649  00FD17  4E                 	db	78	;'N'
  4650  00FD18  6F                 	db	111	;'o'
  4651  00FD19  20                 	db	32
  4652  00FD1A  41                 	db	65	;'A'
  4653  00FD1B  44                 	db	68	;'D'
  4654  00FD1C  43                 	db	67	;'C'
  4655  00FD1D  20                 	db	32
  4656  00FD1E  45                 	db	69	;'E'
  4657  00FD1F  72                 	db	114	;'r'
  4658  00FD20  72                 	db	114	;'r'
  4659  00FD21  6F                 	db	111	;'o'
  4660  00FD22  72                 	db	114	;'r'
  4661  00FD23  20                 	db	32
  4662  00FD24  64                 	db	100	;'d'
  4663  00FD25  65                 	db	101	;'e'
  4664  00FD26  74                 	db	116	;'t'
  4665  00FD27  65                 	db	101	;'e'
  4666  00FD28  63                 	db	99	;'c'
  4667  00FD29  74                 	db	116	;'t'
  4668  00FD2A  65                 	db	101	;'e'
  4669  00FD2B  64                 	db	100	;'d'
  4670  00FD2C  0A                 	db	10
  4671  00FD2D  0D                 	db	13
  4672  00FD2E  00                 	db	0
  4673  00FD2F                     STR_118:
  4674  00FD2F  45                 	db	69	;'E'
  4675  00FD30  72                 	db	114	;'r'
  4676  00FD31  72                 	db	114	;'r'
  4677  00FD32  6F                 	db	111	;'o'
  4678  00FD33  72                 	db	114	;'r'
  4679  00FD34  73                 	db	115	;'s'
  4680  00FD35  20                 	db	32
  4681  00FD36  61                 	db	97	;'a'
  4682  00FD37  70                 	db	112	;'p'
  4683  00FD38  70                 	db	112	;'p'
  4684  00FD39  65                 	db	101	;'e'
  4685  00FD3A  61                 	db	97	;'a'
  4686  00FD3B  72                 	db	114	;'r'
  4687  00FD3C  20                 	db	32
  4688  00FD3D  69                 	db	105	;'i'
  4689  00FD3E  6E                 	db	110	;'n'
  4690  00FD3F  20                 	db	32
  4691  00FD40  72                 	db	114	;'r'
  4692  00FD41  65                 	db	101	;'e'
  4693  00FD42  64                 	db	100	;'d'
  4694  00FD43  0A                 	db	10
  4695  00FD44  0D                 	db	13
  4696  00FD45  00                 	db	0
  4697  00FD46                     STR_131:
  4698  00FD46  53                 	db	83	;'S'
  4699  00FD47  74                 	db	116	;'t'
  4700  00FD48  61                 	db	97	;'a'
  4701  00FD49  63                 	db	99	;'c'
  4702  00FD4A  6B                 	db	107	;'k'
  4703  00FD4B  20                 	db	32
  4704  00FD4C  55                 	db	85	;'U'
  4705  00FD4D  6E                 	db	110	;'n'
  4706  00FD4E  64                 	db	100	;'d'
  4707  00FD4F  65                 	db	101	;'e'
  4708  00FD50  72                 	db	114	;'r'
  4709  00FD51  66                 	db	102	;'f'
  4710  00FD52  6C                 	db	108	;'l'
  4711  00FD53  6F                 	db	111	;'o'
  4712  00FD54  77                 	db	119	;'w'
  4713  00FD55  20                 	db	32
  4714  00FD56  52                 	db	82	;'R'
  4715  00FD57  65                 	db	101	;'e'
  4716  00FD58  73                 	db	115	;'s'
  4717  00FD59  65                 	db	101	;'e'
  4718  00FD5A  74                 	db	116	;'t'
  4719  00FD5B  00                 	db	0
  4720  00FD5C                     STR_67:
  4721  00FD5C  49                 	db	73	;'I'
  4722  00FD5D  6E                 	db	110	;'n'
  4723  00FD5E  74                 	db	116	;'t'
  4724  00FD5F  65                 	db	101	;'e'
  4725  00FD60  72                 	db	114	;'r'
  4726  00FD61  6E                 	db	110	;'n'
  4727  00FD62  61                 	db	97	;'a'
  4728  00FD63  6C                 	db	108	;'l'
  4729  00FD64  20                 	db	32
  4730  00FD65  46                 	db	70	;'F'
  4731  00FD66  56                 	db	86	;'V'
  4732  00FD67  52                 	db	82	;'R'
  4733  00FD68  20                 	db	32
  4734  00FD69  42                 	db	66	;'B'
  4735  00FD6A  75                 	db	117	;'u'
  4736  00FD6B  66                 	db	102	;'f'
  4737  00FD6C  66                 	db	102	;'f'
  4738  00FD6D  65                 	db	101	;'e'
  4739  00FD6E  72                 	db	114	;'r'
  4740  00FD6F  20                 	db	32
  4741  00FD70  31                 	db	49	;'1'
  4742  00FD71  00                 	db	0
  4743  00FD72                     STR_130:
  4744  00FD72  53                 	db	83	;'S'
  4745  00FD73  74                 	db	116	;'t'
  4746  00FD74  61                 	db	97	;'a'
  4747  00FD75  63                 	db	99	;'c'
  4748  00FD76  6B                 	db	107	;'k'
  4749  00FD77  20                 	db	32
  4750  00FD78  4F                 	db	79	;'O'
  4751  00FD79  76                 	db	118	;'v'
  4752  00FD7A  65                 	db	101	;'e'
  4753  00FD7B  72                 	db	114	;'r'
  4754  00FD7C  66                 	db	102	;'f'
  4755  00FD7D  6C                 	db	108	;'l'
  4756  00FD7E  6F                 	db	111	;'o'
  4757  00FD7F  77                 	db	119	;'w'
  4758  00FD80  20                 	db	32
  4759  00FD81  52                 	db	82	;'R'
  4760  00FD82  65                 	db	101	;'e'
  4761  00FD83  73                 	db	115	;'s'
  4762  00FD84  65                 	db	101	;'e'
  4763  00FD85  74                 	db	116	;'t'
  4764  00FD86  00                 	db	0
  4765  00FD87                     STR_72:
  4766  00FD87  43                 	db	67	;'C'
  4767  00FD88  6C                 	db	108	;'l'
  4768  00FD89  65                 	db	101	;'e'
  4769  00FD8A  61                 	db	97	;'a'
  4770  00FD8B  72                 	db	114	;'r'
  4771  00FD8C  69                 	db	105	;'i'
  4772  00FD8D  6E                 	db	110	;'n'
  4773  00FD8E  67                 	db	103	;'g'
  4774  00FD8F  20                 	db	32
  4775  00FD90  41                 	db	65	;'A'
  4776  00FD91  44                 	db	68	;'D'
  4777  00FD92  43                 	db	67	;'C'
  4778  00FD93  20                 	db	32
  4779  00FD94  45                 	db	69	;'E'
  4780  00FD95  72                 	db	114	;'r'
  4781  00FD96  72                 	db	114	;'r'
  4782  00FD97  6F                 	db	111	;'o'
  4783  00FD98  72                 	db	114	;'r'
  4784  00FD99  0A                 	db	10
  4785  00FD9A  0D                 	db	13
  4786  00FD9B  00                 	db	0
  4787  00FD9C                     STR_90:
  4788  00FD9C  4D                 	db	77	;'M'
  4789  00FD9D  65                 	db	101	;'e'
  4790  00FD9E  61                 	db	97	;'a'
  4791  00FD9F  73                 	db	115	;'s'
  4792  00FDA0  75                 	db	117	;'u'
  4793  00FDA1  72                 	db	114	;'r'
  4794  00FDA2  65                 	db	101	;'e'
  4795  00FDA3  20                 	db	32
  4796  00FDA4  52                 	db	82	;'R'
  4797  00FDA5  4D                 	db	77	;'M'
  4798  00FDA6  53                 	db	83	;'S'
  4799  00FDA7  20                 	db	32
  4800  00FDA8  56                 	db	86	;'V'
  4801  00FDA9  6F                 	db	111	;'o'
  4802  00FDAA  6C                 	db	108	;'l'
  4803  00FDAB  74                 	db	116	;'t'
  4804  00FDAC  61                 	db	97	;'a'
  4805  00FDAD  67                 	db	103	;'g'
  4806  00FDAE  65                 	db	101	;'e'
  4807  00FDAF  3F                 	db	63	;'?'
  4808  00FDB0  00                 	db	0
  4809  00FDB1                     STR_88:
  4810  00FDB1  4D                 	db	77	;'M'
  4811  00FDB2  65                 	db	101	;'e'
  4812  00FDB3  61                 	db	97	;'a'
  4813  00FDB4  73                 	db	115	;'s'
  4814  00FDB5  75                 	db	117	;'u'
  4815  00FDB6  72                 	db	114	;'r'
  4816  00FDB7  65                 	db	101	;'e'
  4817  00FDB8  20                 	db	32
  4818  00FDB9  52                 	db	82	;'R'
  4819  00FDBA  4D                 	db	77	;'M'
  4820  00FDBB  53                 	db	83	;'S'
  4821  00FDBC  20                 	db	32
  4822  00FDBD  43                 	db	67	;'C'
  4823  00FDBE  75                 	db	117	;'u'
  4824  00FDBF  72                 	db	114	;'r'
  4825  00FDC0  72                 	db	114	;'r'
  4826  00FDC1  65                 	db	101	;'e'
  4827  00FDC2  6E                 	db	110	;'n'
  4828  00FDC3  74                 	db	116	;'t'
  4829  00FDC4  3F                 	db	63	;'?'
  4830  00FDC5  00                 	db	0
  4831  00FDC6                     STR_126:
  4832  00FDC6  4D                 	db	77	;'M'
  4833  00FDC7  61                 	db	97	;'a'
  4834  00FDC8  73                 	db	115	;'s'
  4835  00FDC9  74                 	db	116	;'t'
  4836  00FDCA  65                 	db	101	;'e'
  4837  00FDCB  72                 	db	114	;'r'
  4838  00FDCC  20                 	db	32
  4839  00FDCD  43                 	db	67	;'C'
  4840  00FDCE  6C                 	db	108	;'l'
  4841  00FDCF  65                 	db	101	;'e'
  4842  00FDD0  61                 	db	97	;'a'
  4843  00FDD1  72                 	db	114	;'r'
  4844  00FDD2  20                 	db	32
  4845  00FDD3  52                 	db	82	;'R'
  4846  00FDD4  65                 	db	101	;'e'
  4847  00FDD5  73                 	db	115	;'s'
  4848  00FDD6  65                 	db	101	;'e'
  4849  00FDD7  74                 	db	116	;'t'
  4850  00FDD8  00                 	db	0
  4851  00FDD9                     STR_80:
  4852  00FDD9  4D                 	db	77	;'M'
  4853  00FDDA  65                 	db	101	;'e'
  4854  00FDDB  61                 	db	97	;'a'
  4855  00FDDC  73                 	db	115	;'s'
  4856  00FDDD  75                 	db	117	;'u'
  4857  00FDDE  72                 	db	114	;'r'
  4858  00FDDF  65                 	db	101	;'e'
  4859  00FDE0  20                 	db	32
  4860  00FDE1  44                 	db	68	;'D'
  4861  00FDE2  69                 	db	105	;'i'
  4862  00FDE3  65                 	db	101	;'e'
  4863  00FDE4  20                 	db	32
  4864  00FDE5  54                 	db	84	;'T'
  4865  00FDE6  65                 	db	101	;'e'
  4866  00FDE7  6D                 	db	109	;'m'
  4867  00FDE8  70                 	db	112	;'p'
  4868  00FDE9  3F                 	db	63	;'?'
  4869  00FDEA  00                 	db	0
  4870  00FDEB                     STR_134:
  4871  00FDEB  30                 	db	48	;'0'
  4872  00FDEC  31                 	db	49	;'1'
  4873  00FDED  32                 	db	50	;'2'
  4874  00FDEE  33                 	db	51	;'3'
  4875  00FDEF  34                 	db	52	;'4'
  4876  00FDF0  35                 	db	53	;'5'
  4877  00FDF1  36                 	db	54	;'6'
  4878  00FDF2  37                 	db	55	;'7'
  4879  00FDF3  38                 	db	56	;'8'
  4880  00FDF4  39                 	db	57	;'9'
  4881  00FDF5  41                 	db	65	;'A'
  4882  00FDF6  42                 	db	66	;'B'
  4883  00FDF7  43                 	db	67	;'C'
  4884  00FDF8  44                 	db	68	;'D'
  4885  00FDF9  45                 	db	69	;'E'
  4886  00FDFA  46                 	db	70	;'F'
  4887  00FDFB  00                 	db	0
  4888  00FDFC                     STR_51:
  4889  00FDFC  41                 	db	65	;'A'
  4890  00FDFD  43                 	db	67	;'C'
  4891  00FDFE  20                 	db	32
  4892  00FDFF  50                 	db	80	;'P'
  4893  00FE00  6F                 	db	111	;'o'
  4894  00FE01  77                 	db	119	;'w'
  4895  00FE02  65                 	db	101	;'e'
  4896  00FE03  72                 	db	114	;'r'
  4897  00FE04  20                 	db	32
  4898  00FE05  4D                 	db	77	;'M'
  4899  00FE06  65                 	db	101	;'e'
  4900  00FE07  74                 	db	116	;'t'
  4901  00FE08  65                 	db	101	;'e'
  4902  00FE09  72                 	db	114	;'r'
  4903  00FE0A  0A                 	db	10
  4904  00FE0B  0D                 	db	13
  4905  00FE0C  00                 	db	0
  4906  00FE0D                     STR_73:
  4907  00FE0D  56                 	db	86	;'V'
  4908  00FE0E  43                 	db	67	;'C'
  4909  00FE0F  43                 	db	67	;'C'
  4910  00FE10  20                 	db	32
  4911  00FE11  4F                 	db	79	;'O'
  4912  00FE12  76                 	db	118	;'v'
  4913  00FE13  65                 	db	101	;'e'
  4914  00FE14  72                 	db	114	;'r'
  4915  00FE15  76                 	db	118	;'v'
  4916  00FE16  6F                 	db	111	;'o'
  4917  00FE17  6C                 	db	108	;'l'
  4918  00FE18  74                 	db	116	;'t'
  4919  00FE19  61                 	db	97	;'a'
  4920  00FE1A  67                 	db	103	;'g'
  4921  00FE1B  65                 	db	101	;'e'
  4922  00FE1C  3F                 	db	63	;'?'
  4923  00FE1D  00                 	db	0
  4924  00FE1E                     STR_123:
  4925  00FE1E  55                 	db	85	;'U'
  4926  00FE1F  6E                 	db	110	;'n'
  4927  00FE20  64                 	db	100	;'d'
  4928  00FE21  65                 	db	101	;'e'
  4929  00FE22  66                 	db	102	;'f'
  4930  00FE23  69                 	db	105	;'i'
  4931  00FE24  6E                 	db	110	;'n'
  4932  00FE25  65                 	db	101	;'e'
  4933  00FE26  64                 	db	100	;'d'
  4934  00FE27  20                 	db	32
  4935  00FE28  52                 	db	82	;'R'
  4936  00FE29  65                 	db	101	;'e'
  4937  00FE2A  73                 	db	115	;'s'
  4938  00FE2B  65                 	db	101	;'e'
  4939  00FE2C  74                 	db	116	;'t'
  4940  00FE2D  00                 	db	0
  4941  00FE2E                     STR_125:
  4942  00FE2E  42                 	db	66	;'B'
  4943  00FE2F  72                 	db	114	;'r'
  4944  00FE30  6F                 	db	111	;'o'
  4945  00FE31  77                 	db	119	;'w'
  4946  00FE32  6E                 	db	110	;'n'
  4947  00FE33  20                 	db	32
  4948  00FE34  4F                 	db	79	;'O'
  4949  00FE35  75                 	db	117	;'u'
  4950  00FE36  74                 	db	116	;'t'
  4951  00FE37  20                 	db	32
  4952  00FE38  52                 	db	82	;'R'
  4953  00FE39  65                 	db	101	;'e'
  4954  00FE3A  73                 	db	115	;'s'
  4955  00FE3B  65                 	db	101	;'e'
  4956  00FE3C  74                 	db	116	;'t'
  4957  00FE3D  00                 	db	0
  4958  00FE3E                     STR_76:
  4959  00FE3E  4D                 	db	77	;'M'
  4960  00FE3F  65                 	db	101	;'e'
  4961  00FE40  61                 	db	97	;'a'
  4962  00FE41  73                 	db	115	;'s'
  4963  00FE42  75                 	db	117	;'u'
  4964  00FE43  72                 	db	114	;'r'
  4965  00FE44  65                 	db	101	;'e'
  4966  00FE45  20                 	db	32
  4967  00FE46  50                 	db	80	;'P'
  4968  00FE47  4F                 	db	79	;'O'
  4969  00FE48  53                 	db	83	;'S'
  4970  00FE49  33                 	db	51	;'3'
  4971  00FE4A  50                 	db	80	;'P'
  4972  00FE4B  33                 	db	51	;'3'
  4973  00FE4C  3F                 	db	63	;'?'
  4974  00FE4D  00                 	db	0
  4975  00FE4E                     STR_109:
  4976  00FE4E  44                 	db	68	;'D'
  4977  00FE4F  65                 	db	101	;'e'
  4978  00FE50  76                 	db	118	;'v'
  4979  00FE51  69                 	db	105	;'i'
  4980  00FE52  63                 	db	99	;'c'
  4981  00FE53  65                 	db	101	;'e'
  4982  00FE54  20                 	db	32
  4983  00FE55  4F                 	db	79	;'O'
  4984  00FE56  6E                 	db	110	;'n'
  4985  00FE57  20                 	db	32
  4986  00FE58  54                 	db	84	;'T'
  4987  00FE59  69                 	db	105	;'i'
  4988  00FE5A  6D                 	db	109	;'m'
  4989  00FE5B  65                 	db	101	;'e'
  4990  00FE5C  3F                 	db	63	;'?'
  4991  00FE5D  00                 	db	0
  4992  00FE5E                     STR_47:
  4993  00FE5E  43                 	db	67	;'C'
  4994  00FE5F  61                 	db	97	;'a'
  4995  00FE60  75                 	db	117	;'u'
  4996  00FE61  73                 	db	115	;'s'
  4997  00FE62  65                 	db	101	;'e'
  4998  00FE63  20                 	db	32
  4999  00FE64  6F                 	db	111	;'o'
  5000  00FE65  66                 	db	102	;'f'
  5001  00FE66  20                 	db	32
  5002  00FE67  52                 	db	82	;'R'
  5003  00FE68  65                 	db	101	;'e'
  5004  00FE69  73                 	db	115	;'s'
  5005  00FE6A  65                 	db	101	;'e'
  5006  00FE6B  74                 	db	116	;'t'
  5007  00FE6C  3F                 	db	63	;'?'
  5008  00FE6D  00                 	db	0
  5009  00FE6E                     STR_96:
  5010  00FE6E  44                 	db	68	;'D'
  5011  00FE6F  69                 	db	105	;'i'
  5012  00FE70  73                 	db	115	;'s'
  5013  00FE71  61                 	db	97	;'a'
  5014  00FE72  62                 	db	98	;'b'
  5015  00FE73  6C                 	db	108	;'l'
  5016  00FE74  65                 	db	101	;'e'
  5017  00FE75  20                 	db	32
  5018  00FE76  44                 	db	68	;'D'
  5019  00FE77  69                 	db	105	;'i'
  5020  00FE78  6D                 	db	109	;'m'
  5021  00FE79  6D                 	db	109	;'m'
  5022  00FE7A  69                 	db	105	;'i'
  5023  00FE7B  6E                 	db	110	;'n'
  5024  00FE7C  67                 	db	103	;'g'
  5025  00FE7D  00                 	db	0
  5026  00FE7E                     STR_71:
  5027  00FE7E  43                 	db	67	;'C'
  5028  00FE7F  6C                 	db	108	;'l'
  5029  00FE80  65                 	db	101	;'e'
  5030  00FE81  61                 	db	97	;'a'
  5031  00FE82  72                 	db	114	;'r'
  5032  00FE83  20                 	db	32
  5033  00FE84  41                 	db	65	;'A'
  5034  00FE85  44                 	db	68	;'D'
  5035  00FE86  43                 	db	67	;'C'
  5036  00FE87  20                 	db	32
  5037  00FE88  45                 	db	69	;'E'
  5038  00FE89  72                 	db	114	;'r'
  5039  00FE8A  72                 	db	114	;'r'
  5040  00FE8B  6F                 	db	111	;'o'
  5041  00FE8C  72                 	db	114	;'r'
  5042  00FE8D  00                 	db	0
  5043  00FE8E                     STR_124:
  5044  00FE8E  50                 	db	80	;'P'
  5045  00FE8F  6F                 	db	111	;'o'
  5046  00FE90  77                 	db	119	;'w'
  5047  00FE91  65                 	db	101	;'e'
  5048  00FE92  72                 	db	114	;'r'
  5049  00FE93  20                 	db	32
  5050  00FE94  4F                 	db	79	;'O'
  5051  00FE95  6E                 	db	110	;'n'
  5052  00FE96  20                 	db	32
  5053  00FE97  52                 	db	82	;'R'
  5054  00FE98  65                 	db	101	;'e'
  5055  00FE99  73                 	db	115	;'s'
  5056  00FE9A  65                 	db	101	;'e'
  5057  00FE9B  74                 	db	116	;'t'
  5058  00FE9C  00                 	db	0
  5059  00FE9D                     STR_78:
  5060  00FE9D  4D                 	db	77	;'M'
  5061  00FE9E  65                 	db	101	;'e'
  5062  00FE9F  61                 	db	97	;'a'
  5063  00FEA0  73                 	db	115	;'s'
  5064  00FEA1  75                 	db	117	;'u'
  5065  00FEA2  72                 	db	114	;'r'
  5066  00FEA3  65                 	db	101	;'e'
  5067  00FEA4  20                 	db	32
  5068  00FEA5  50                 	db	80	;'P'
  5069  00FEA6  4F                 	db	79	;'O'
  5070  00FEA7  53                 	db	83	;'S'
  5071  00FEA8  31                 	db	49	;'1'
  5072  00FEA9  32                 	db	50	;'2'
  5073  00FEAA  3F                 	db	63	;'?'
  5074  00FEAB  00                 	db	0
  5075  00FEAC                     STR_92:
  5076  00FEAC  4D                 	db	77	;'M'
  5077  00FEAD  65                 	db	101	;'e'
  5078  00FEAE  61                 	db	97	;'a'
  5079  00FEAF  73                 	db	115	;'s'
  5080  00FEB0  75                 	db	117	;'u'
  5081  00FEB1  72                 	db	114	;'r'
  5082  00FEB2  65                 	db	101	;'e'
  5083  00FEB3  20                 	db	32
  5084  00FEB4  50                 	db	80	;'P'
  5085  00FEB5  6F                 	db	111	;'o'
  5086  00FEB6  77                 	db	119	;'w'
  5087  00FEB7  65                 	db	101	;'e'
  5088  00FEB8  72                 	db	114	;'r'
  5089  00FEB9  3F                 	db	63	;'?'
  5090  00FEBA  00                 	db	0
  5091  00FEBB                     STR_94:
  5092  00FEBB  45                 	db	69	;'E'
  5093  00FEBC  6E                 	db	110	;'n'
  5094  00FEBD  61                 	db	97	;'a'
  5095  00FEBE  62                 	db	98	;'b'
  5096  00FEBF  6C                 	db	108	;'l'
  5097  00FEC0  65                 	db	101	;'e'
  5098  00FEC1  20                 	db	32
  5099  00FEC2  44                 	db	68	;'D'
  5100  00FEC3  69                 	db	105	;'i'
  5101  00FEC4  6D                 	db	109	;'m'
  5102  00FEC5  6D                 	db	109	;'m'
  5103  00FEC6  69                 	db	105	;'i'
  5104  00FEC7  6E                 	db	110	;'n'
  5105  00FEC8  67                 	db	103	;'g'
  5106  00FEC9  00                 	db	0
  5107  00FECA                     STR_66:
  5108  00FECA  49                 	db	73	;'I'
  5109  00FECB  6E                 	db	110	;'n'
  5110  00FECC  74                 	db	116	;'t'
  5111  00FECD  65                 	db	101	;'e'
  5112  00FECE  72                 	db	114	;'r'
  5113  00FECF  6E                 	db	110	;'n'
  5114  00FED0  61                 	db	97	;'a'
  5115  00FED1  6C                 	db	108	;'l'
  5116  00FED2  20                 	db	32
  5117  00FED3  44                 	db	68	;'D'
  5118  00FED4  41                 	db	65	;'A'
  5119  00FED5  43                 	db	67	;'C'
  5120  00FED6  31                 	db	49	;'1'
  5121  00FED7  00                 	db	0
  5122  00FED8                     STR_84:
  5123  00FED8  4D                 	db	77	;'M'
  5124  00FED9  65                 	db	101	;'e'
  5125  00FEDA  61                 	db	97	;'a'
  5126  00FEDB  73                 	db	115	;'s'
  5127  00FEDC  75                 	db	117	;'u'
  5128  00FEDD  72                 	db	114	;'r'
  5129  00FEDE  65                 	db	101	;'e'
  5130  00FEDF  20                 	db	32
  5131  00FEE0  41                 	db	65	;'A'
  5132  00FEE1  56                 	db	86	;'V'
  5133  00FEE2  53                 	db	83	;'S'
  5134  00FEE3  53                 	db	83	;'S'
  5135  00FEE4  3F                 	db	63	;'?'
  5136  00FEE5  00                 	db	0
  5137  00FEE6                     STR_111:
  5138  00FEE6  4C                 	db	76	;'L'
  5139  00FEE7  6F                 	db	111	;'o'
  5140  00FEE8  61                 	db	97	;'a'
  5141  00FEE9  64                 	db	100	;'d'
  5142  00FEEA  20                 	db	32
  5143  00FEEB  4F                 	db	79	;'O'
  5144  00FEEC  6E                 	db	110	;'n'
  5145  00FEED  20                 	db	32
  5146  00FEEE  54                 	db	84	;'T'
  5147  00FEEF  69                 	db	105	;'i'
  5148  00FEF0  6D                 	db	109	;'m'
  5149  00FEF1  65                 	db	101	;'e'
  5150  00FEF2  3F                 	db	63	;'?'
  5151  00FEF3  00                 	db	0
  5152  00FEF4                     STR_64:
  5153  00FEF4  49                 	db	73	;'I'
  5154  00FEF5  6E                 	db	110	;'n'
  5155  00FEF6  74                 	db	116	;'t'
  5156  00FEF7  65                 	db	101	;'e'
  5157  00FEF8  72                 	db	114	;'r'
  5158  00FEF9  6E                 	db	110	;'n'
  5159  00FEFA  61                 	db	97	;'a'
  5160  00FEFB  6C                 	db	108	;'l'
  5161  00FEFC  20                 	db	32
  5162  00FEFD  41                 	db	65	;'A'
  5163  00FEFE  56                 	db	86	;'V'
  5164  00FEFF  53                 	db	83	;'S'
  5165  00FF00  53                 	db	83	;'S'
  5166  00FF01  00                 	db	0
  5167  00FF02                     STR_65:
  5168  00FF02  49                 	db	73	;'I'
  5169  00FF03  6E                 	db	110	;'n'
  5170  00FF04  74                 	db	116	;'t'
  5171  00FF05  65                 	db	101	;'e'
  5172  00FF06  72                 	db	114	;'r'
  5173  00FF07  6E                 	db	110	;'n'
  5174  00FF08  61                 	db	97	;'a'
  5175  00FF09  6C                 	db	108	;'l'
  5176  00FF0A  20                 	db	32
  5177  00FF0B  54                 	db	84	;'T'
  5178  00FF0C  65                 	db	101	;'e'
  5179  00FF0D  6D                 	db	109	;'m'
  5180  00FF0E  70                 	db	112	;'p'
  5181  00FF0F  00                 	db	0
  5182  00FF10                     STR_121:
  5183  00FF10  50                 	db	80	;'P'
  5184  00FF11  49                 	db	73	;'I'
  5185  00FF12  43                 	db	67	;'C'
  5186  00FF13  31                 	db	49	;'1'
  5187  00FF14  38                 	db	56	;'8'
  5188  00FF15  4C                 	db	76	;'L'
  5189  00FF16  46                 	db	70	;'F'
  5190  00FF17  36                 	db	54	;'6'
  5191  00FF18  37                 	db	55	;'7'
  5192  00FF19  4B                 	db	75	;'K'
  5193  00FF1A  34                 	db	52	;'4'
  5194  00FF1B  30                 	db	48	;'0'
  5195  00FF1C  00                 	db	0
  5196  00FF1D                     STR_55:
  5197  00FF1D  52                 	db	82	;'R'
  5198  00FF1E  65                 	db	101	;'e'
  5199  00FF1F  76                 	db	118	;'v'
  5200  00FF20  69                 	db	105	;'i'
  5201  00FF21  73                 	db	115	;'s'
  5202  00FF22  69                 	db	105	;'i'
  5203  00FF23  6F                 	db	111	;'o'
  5204  00FF24  6E                 	db	110	;'n'
  5205  00FF25  20                 	db	32
  5206  00FF26  49                 	db	73	;'I'
  5207  00FF27  44                 	db	68	;'D'
  5208  00FF28  3F                 	db	63	;'?'
  5209  00FF29  00                 	db	0
  5210  00FF2A                     STR_82:
  5211  00FF2A  4D                 	db	77	;'M'
  5212  00FF2B  65                 	db	101	;'e'
  5213  00FF2C  61                 	db	97	;'a'
  5214  00FF2D  73                 	db	115	;'s'
  5215  00FF2E  75                 	db	117	;'u'
  5216  00FF2F  72                 	db	114	;'r'
  5217  00FF30  65                 	db	101	;'e'
  5218  00FF31  20                 	db	32
  5219  00FF32  46                 	db	70	;'F'
  5220  00FF33  56                 	db	86	;'V'
  5221  00FF34  52                 	db	82	;'R'
  5222  00FF35  3F                 	db	63	;'?'
  5223  00FF36  00                 	db	0
  5224  00FF37                     STR_100:
  5225  00FF37  44                 	db	68	;'D'
  5226  00FF38  69                 	db	105	;'i'
  5227  00FF39  73                 	db	115	;'s'
  5228  00FF3A  61                 	db	97	;'a'
  5229  00FF3B  62                 	db	98	;'b'
  5230  00FF3C  6C                 	db	108	;'l'
  5231  00FF3D  65                 	db	101	;'e'
  5232  00FF3E  20                 	db	32
  5233  00FF3F  4C                 	db	76	;'L'
  5234  00FF40  6F                 	db	111	;'o'
  5235  00FF41  61                 	db	97	;'a'
  5236  00FF42  64                 	db	100	;'d'
  5237  00FF43  00                 	db	0
  5238  00FF44                     STR_120:
  5239  00FF44  50                 	db	80	;'P'
  5240  00FF45  49                 	db	73	;'I'
  5241  00FF46  43                 	db	67	;'C'
  5242  00FF47  31                 	db	49	;'1'
  5243  00FF48  38                 	db	56	;'8'
  5244  00FF49  46                 	db	70	;'F'
  5245  00FF4A  36                 	db	54	;'6'
  5246  00FF4B  37                 	db	55	;'7'
  5247  00FF4C  4B                 	db	75	;'K'
  5248  00FF4D  34                 	db	52	;'4'
  5249  00FF4E  30                 	db	48	;'0'
  5250  00FF4F  00                 	db	0
  5251  00FF50                     STR_98:
  5252  00FF50  45                 	db	69	;'E'
  5253  00FF51  6E                 	db	110	;'n'
  5254  00FF52  61                 	db	97	;'a'
  5255  00FF53  62                 	db	98	;'b'
  5256  00FF54  6C                 	db	108	;'l'
  5257  00FF55  65                 	db	101	;'e'
  5258  00FF56  20                 	db	32
  5259  00FF57  4C                 	db	76	;'L'
  5260  00FF58  6F                 	db	111	;'o'
  5261  00FF59  61                 	db	97	;'a'
  5262  00FF5A  64                 	db	100	;'d'
  5263  00FF5B  00                 	db	0
  5264  00FF5C                     STR_53:
  5265  00FF5C  44                 	db	68	;'D'
  5266  00FF5D  65                 	db	101	;'e'
  5267  00FF5E  76                 	db	118	;'v'
  5268  00FF5F  69                 	db	105	;'i'
  5269  00FF60  63                 	db	99	;'c'
  5270  00FF61  65                 	db	101	;'e'
  5271  00FF62  20                 	db	32
  5272  00FF63  49                 	db	73	;'I'
  5273  00FF64  44                 	db	68	;'D'
  5274  00FF65  3F                 	db	63	;'?'
  5275  00FF66  00                 	db	0
  5276  00FF67                     STR_60:
  5277  00FF67  41                 	db	65	;'A'
  5278  00FF68  44                 	db	68	;'D'
  5279  00FF69  43                 	db	67	;'C'
  5280  00FF6A  20                 	db	32
  5281  00FF6B  45                 	db	69	;'E'
  5282  00FF6C  72                 	db	114	;'r'
  5283  00FF6D  72                 	db	114	;'r'
  5284  00FF6E  6F                 	db	111	;'o'
  5285  00FF6F  72                 	db	114	;'r'
  5286  00FF70  3F                 	db	63	;'?'
  5287  00FF71  00                 	db	0
  5288  00FF72                     STR_57:
  5289  00FF72  55                 	db	85	;'U'
  5290  00FF73  73                 	db	115	;'s'
  5291  00FF74  65                 	db	101	;'e'
  5292  00FF75  72                 	db	114	;'r'
  5293  00FF76  20                 	db	32
  5294  00FF77  49                 	db	73	;'I'
  5295  00FF78  44                 	db	68	;'D'
  5296  00FF79  73                 	db	115	;'s'
  5297  00FF7A  3F                 	db	63	;'?'
  5298  00FF7B  00                 	db	0
  5299  00FF7C                     STR_68:
  5300  00FF7C  55                 	db	85	;'U'
  5301  00FF7D  6E                 	db	110	;'n'
  5302  00FF7E  64                 	db	100	;'d'
  5303  00FF7F  65                 	db	101	;'e'
  5304  00FF80  66                 	db	102	;'f'
  5305  00FF81  69                 	db	105	;'i'
  5306  00FF82  6E                 	db	110	;'n'
  5307  00FF83  65                 	db	101	;'e'
  5308  00FF84  64                 	db	100	;'d'
  5309  00FF85  00                 	db	0
  5310  00FF86                     STR_133:
  5311  00FF86  28                 	db	40
  5312  00FF87  6E                 	db	110	;'n'
  5313  00FF88  75                 	db	117	;'u'
  5314  00FF89  6C                 	db	108	;'l'
  5315  00FF8A  6C                 	db	108	;'l'
  5316  00FF8B  29                 	db	41
  5317  00FF8C  00                 	db	0
  5318  00FF8D                     STR_63:
  5319  00FF8D  50                 	db	80	;'P'
  5320  00FF8E  4F                 	db	79	;'O'
  5321  00FF8F  53                 	db	83	;'S'
  5322  00FF90  33                 	db	51	;'3'
  5323  00FF91  50                 	db	80	;'P'
  5324  00FF92  33                 	db	51	;'3'
  5325  00FF93  00                 	db	0
  5326  00FF94                     STR_62:
  5327  00FF94  50                 	db	80	;'P'
  5328  00FF95  4F                 	db	79	;'O'
  5329  00FF96  53                 	db	83	;'S'
  5330  00FF97  31                 	db	49	;'1'
  5331  00FF98  32                 	db	50	;'2'
  5332  00FF99  00                 	db	0
  5333  00FF9A                     STR_49:
  5334  00FF9A  2A                 	db	42
  5335  00FF9B  49                 	db	73	;'I'
  5336  00FF9C  44                 	db	68	;'D'
  5337  00FF9D  4E                 	db	78	;'N'
  5338  00FF9E  3F                 	db	63	;'?'
  5339  00FF9F  00                 	db	0
  5340  00FFA0                     STR_44:
  5341  00FFA0  43                 	db	67	;'C'
  5342  00FFA1  6C                 	db	108	;'l'
  5343  00FFA2  65                 	db	101	;'e'
  5344  00FFA3  61                 	db	97	;'a'
  5345  00FFA4  72                 	db	114	;'r'
  5346  00FFA5  00                 	db	0
  5347  00FFA6                     STR_61:
  5348  00FFA6  49                 	db	73	;'I'
  5349  00FFA7  53                 	db	83	;'S'
  5350  00FFA8  4E                 	db	78	;'N'
  5351  00FFA9  53                 	db	83	;'S'
  5352  00FFAA  00                 	db	0
  5353  00FFAB                     STR_113:
  5354  00FFAB  48                 	db	72	;'H'
  5355  00FFAC  65                 	db	101	;'e'
  5356  00FFAD  6C                 	db	108	;'l'
  5357  00FFAE  70                 	db	112	;'p'
  5358  00FFAF  00                 	db	0
  5359  00FFB0                     STR_2:
  5360  00FFB0  1B                 	db	27
  5361  00FFB1  5B                 	db	91	;'['
  5362  00FFB2  32                 	db	50	;'2'
  5363  00FFB3  4A                 	db	74	;'J'
  5364  00FFB4  00                 	db	0
  5365  00FFB5                     STR_50:
  5366  00FFB5  49                 	db	73	;'I'
  5367  00FFB6  44                 	db	68	;'D'
  5368  00FFB7  4E                 	db	78	;'N'
  5369  00FFB8  00                 	db	0
  5370  00FFB9                     STR_3:
  5371  00FFB9  1B                 	db	27
  5372  00FFBA  5B                 	db	91	;'['
  5373  00FFBB  48                 	db	72	;'H'
  5374  00FFBC  00                 	db	0
  5375  00FFBD  1B                 	db	27
  5376  00FFBE  5B                 	db	91	;'['
  5377  00FFBF  73                 	db	115	;'s'
  5378  00FFC0  00                 	db	0
  5379  00FFC1  1B                 	db	27
  5380  00FFC2  5B                 	db	91	;'['
  5381  00FFC3  75                 	db	117	;'u'
  5382  00FFC4  00                 	db	0
  5383  00FFC5                     STR_1:
  5384  00FFC5  1B                 	db	27
  5385  00FFC6  5B                 	db	91	;'['
  5386  00FFC7  4B                 	db	75	;'K'
  5387  00FFC8  00                 	db	0
  5388  00FFC9                     STR_20:
  5389  00FFC9  33                 	db	51	;'3'
  5390  00FFCA  30                 	db	48	;'0'
  5391  00FFCB  00                 	db	0
  5392  00FFCC                     STR_21:
  5393  00FFCC  33                 	db	51	;'3'
  5394  00FFCD  31                 	db	49	;'1'
  5395  00FFCE  00                 	db	0
  5396  00FFCF                     STR_31:
  5397  00FFCF  34                 	db	52	;'4'
  5398  00FFD0  31                 	db	49	;'1'
  5399  00FFD1  00                 	db	0
  5400  00FFD2                     STR_22:
  5401  00FFD2  33                 	db	51	;'3'
  5402  00FFD3  32                 	db	50	;'2'
  5403  00FFD4  00                 	db	0
  5404  00FFD5                     STR_32:
  5405  00FFD5  34                 	db	52	;'4'
  5406  00FFD6  32                 	db	50	;'2'
  5407  00FFD7  00                 	db	0
  5408  00FFD8                     STR_23:
  5409  00FFD8  33                 	db	51	;'3'
  5410  00FFD9  33                 	db	51	;'3'
  5411  00FFDA  00                 	db	0
  5412  00FFDB                     STR_33:
  5413  00FFDB  34                 	db	52	;'4'
  5414  00FFDC  33                 	db	51	;'3'
  5415  00FFDD  00                 	db	0
  5416  00FFDE                     STR_24:
  5417  00FFDE  33                 	db	51	;'3'
  5418  00FFDF  34                 	db	52	;'4'
  5419  00FFE0  00                 	db	0
  5420  00FFE1                     STR_34:
  5421  00FFE1  34                 	db	52	;'4'
  5422  00FFE2  34                 	db	52	;'4'
  5423  00FFE3  00                 	db	0
  5424  00FFE4                     STR_25:
  5425  00FFE4  33                 	db	51	;'3'
  5426  00FFE5  35                 	db	53	;'5'
  5427  00FFE6  00                 	db	0
  5428  00FFE7                     STR_35:
  5429  00FFE7  34                 	db	52	;'4'
  5430  00FFE8  35                 	db	53	;'5'
  5431  00FFE9  00                 	db	0
  5432  00FFEA                     STR_26:
  5433  00FFEA  33                 	db	51	;'3'
  5434  00FFEB  36                 	db	54	;'6'
  5435  00FFEC  00                 	db	0
  5436  00FFED                     STR_36:
  5437  00FFED  34                 	db	52	;'4'
  5438  00FFEE  36                 	db	54	;'6'
  5439  00FFEF  00                 	db	0
  5440  00FFF0                     STR_27:
  5441  00FFF0  33                 	db	51	;'3'
  5442  00FFF1  37                 	db	55	;'7'
  5443  00FFF2  00                 	db	0
  5444  00FFF3                     STR_37:
  5445  00FFF3  34                 	db	52	;'4'
  5446  00FFF4  37                 	db	55	;'7'
  5447  00FFF5  00                 	db	0
  5448  00FFF6                     STR_11:
  5449  00FFF6  1B                 	db	27
  5450  00FFF7  5B                 	db	91	;'['
  5451  00FFF8  00                 	db	0
  5452  00FFF9                     STR_17:
  5453  00FFF9  38                 	db	56	;'8'
  5454  00FFFA  00                 	db	0
  5455  00FFFB                     STR_19:
  5456  00FFFB  3B                 	db	59	;';'
  5457  00FFFC  00                 	db	0
  5458  00FFFD                     STR_39:
  5459  00FFFD  6D                 	db	109	;'m'
  5460  00FFFE  00                 	db	0
  5461  0000                     
  5462                           ; #config settings
  5463  00FFFF  00                 	db	0	; dummy byte at the end
  5464  0000                     
  5465                           	psect	nvBANK2
  5466  0002DD                     __pnvBANK2:
  5467                           	opt stack 0
  5468  0002DD                     _reset_cause:
  5469                           	opt stack 0
  5470  0002DD                     	ds	1
  5471  0000                     _HLVDCON0bits	set	3778
  5472  0000                     _HLVDCON0	set	3778
  5473  0000                     _HLVDCON1	set	3779
  5474  0000                     _PIR8bits	set	3643
  5475  0000                     _FVRCONbits	set	3780
  5476  0000                     _FVRCON	set	3780
  5477  0000                     _RC2REG	set	3825
  5478  0000                     _RC2STAbits	set	3829
  5479  0000                     _TX2REG	set	3826
  5480  0000                     _TX2STAbits	set	3830
  5481  0000                     _SP2BRGH	set	3828
  5482  0000                     _SP2BRGL	set	3827
  5483  0000                     _TX2STA	set	3830
  5484  0000                     _RC2STA	set	3829
  5485  0000                     _BAUD2CON	set	3831
  5486  0000                     _PIR2bits	set	3637
  5487  0000                     _PIE2bits	set	3627
  5488  0000                     _PIR1bits	set	3636
  5489  0000                     _PIE1bits	set	3626
  5490  0000                     _PIR5bits	set	3640
  5491  0000                     _PIE5bits	set	3630
  5492  0000                     _PIR3bits	set	3638
  5493  0000                     _PIE3bits	set	3628
  5494  0000                     _IPR2bits	set	3617
  5495  0000                     _IPR1bits	set	3616
  5496  0000                     _IPR5bits	set	3620
  5497  0000                     _IPR3bits	set	3618
  5498  0000                     _RX2PPS	set	3601
  5499  0000                     _RG7PPS	set	3721
  5500  0000                     _SLRCONH	set	3774
  5501  0000                     _SLRCONG	set	3769
  5502  0000                     _SLRCONF	set	3761
  5503  0000                     _SLRCONE	set	3756
  5504  0000                     _SLRCOND	set	3748
  5505  0000                     _SLRCONC	set	3743
  5506  0000                     _SLRCONB	set	3735
  5507  0000                     _SLRCONA	set	3727
  5508  0000                     _ODCOND	set	3749
  5509  0000                     _ODCONC	set	3744
  5510  0000                     _ODCONH	set	3775
  5511  0000                     _ODCONB	set	3736
  5512  0000                     _ODCONG	set	3770
  5513  0000                     _ODCONA	set	3728
  5514  0000                     _ODCONF	set	3762
  5515  0000                     _ODCONE	set	3757
  5516  0000                     _WPUH	set	3776
  5517  0000                     _WPUC	set	3745
  5518  0000                     _WPUA	set	3729
  5519  0000                     _WPUG	set	3771
  5520  0000                     _WPUB	set	3737
  5521  0000                     _WPUE	set	3758
  5522  0000                     _WPUF	set	3763
  5523  0000                     _WPUD	set	3750
  5524  0000                     _ANSELA	set	3730
  5525  0000                     _ANSELF	set	3764
  5526  0000                     _ANSELG	set	3772
  5527  0000                     _ANSELE	set	3759
  5528  0000                     _ANSELB	set	3738
  5529  0000                     _ANSELD	set	3751
  5530  0000                     _PMD5	set	3665
  5531  0000                     _PMD4	set	3664
  5532  0000                     _PMD3	set	3663
  5533  0000                     _PMD2	set	3662
  5534  0000                     _PMD1	set	3661
  5535  0000                     _PMD0	set	3660
  5536  0000                     _OSCTUNE	set	3656
  5537  0000                     _OSCFRQ	set	3657
  5538  0000                     _OSCEN	set	3655
  5539  0000                     _OSCCON3	set	3653
  5540  0000                     _OSCCON1	set	3651
  5541  0000                     _PLLR	set	29232
  5542  0000                     _T7GCONbits	set	3889
  5543  0000                     _T7CONbits	set	3888
  5544  0000                     _T7CON	set	3888
  5545  0000                     _TMR7L	set	3886
  5546  0000                     _TMR7H	set	3887
  5547  0000                     _T7CLK	set	3891
  5548  0000                     _T7GATE	set	3890
  5549  0000                     _T7GCON	set	3889
  5550  0000                     _ADCON1bits	set	3929
  5551  0000                     _ADCON2bits	set	3930
  5552  0000                     _ADPRE	set	3934
  5553  0000                     _ADCON3bits	set	3931
  5554  0000                     _ADACQ	set	3932
  5555  0000                     _ADCLK	set	3927
  5556  0000                     _ADACT	set	3926
  5557  0000                     _ADREF	set	3928
  5558  0000                     _ADCON3	set	3931
  5559  0000                     _ADCON2	set	3930
  5560  0000                     _ADCON1	set	3929
  5561  0000                     _ADCAP	set	3933
  5562  0000                     _ADPCH	set	3935
  5563  0000                     _PCON0bits	set	4055
  5564  0000                     _LATGbits	set	3967
  5565  0000                     _NVMDAT	set	3958
  5566  0000                     _NVMADRL	set	3956
  5567  0000                     _NVMADRH	set	3957
  5568  0000                     _NVMCON2	set	3960
  5569  0000                     _TABLAT	set	4085
  5570  0000                     _TBLPTRL	set	4086
  5571  0000                     _TBLPTRH	set	4087
  5572  0000                     _TBLPTRU	set	4088
  5573  0000                     _NVMCON1bits	set	3959
  5574  0000                     _T5GCONbits	set	4036
  5575  0000                     _T5CONbits	set	4035
  5576  0000                     _T5CON	set	4035
  5577  0000                     _TMR5L	set	4033
  5578  0000                     _TMR5H	set	4034
  5579  0000                     _T5CLK	set	4038
  5580  0000                     _T5GATE	set	4037
  5581  0000                     _T5GCON	set	4036
  5582  0000                     _ADERRL	set	3950
  5583  0000                     _ADERRH	set	3951
  5584  0000                     _ADPREVL	set	3937
  5585  0000                     _ADPREVH	set	3938
  5586  0000                     _ADFLTRL	set	3954
  5587  0000                     _ADFLTRH	set	3955
  5588  0000                     _ADSTATbits	set	3941
  5589  0000                     _ADACCL	set	3952
  5590  0000                     _ADACCH	set	3953
  5591  0000                     _ADCNT	set	3943
  5592  0000                     _ADRESL	set	3939
  5593  0000                     _ADRESH	set	3940
  5594  0000                     _ADCON0bits	set	3936
  5595  0000                     _ADCON0	set	3936
  5596  0000                     _ADSTAT	set	3941
  5597  0000                     _ADRPT	set	3942
  5598  0000                     _ADSTPTH	set	3945
  5599  0000                     _ADSTPTL	set	3944
  5600  0000                     _ADUTHH	set	3949
  5601  0000                     _ADUTHL	set	3948
  5602  0000                     _ADLTHH	set	3947
  5603  0000                     _ADLTHL	set	3946
  5604  0000                     _LATFbits	set	3966
  5605  0000                     _PR6	set	4016
  5606  0000                     _TMR6	set	4015
  5607  0000                     _T6CONbits	set	4017
  5608  0000                     _T6RSTbits	set	4020
  5609  0000                     _T6HLTbits	set	4018
  5610  0000                     _T6CON	set	4017
  5611  0000                     _T6TMR	set	4015
  5612  0000                     _T6PR	set	4016
  5613  0000                     _T6RST	set	4020
  5614  0000                     _T6HLT	set	4018
  5615  0000                     _T6CLKCON	set	4019
  5616  0000                     _INTCONbits	set	4082
  5617  0000                     _TRISD	set	3972
  5618  0000                     _TRISC	set	3971
  5619  0000                     _TRISH	set	3976
  5620  0000                     _TRISB	set	3970
  5621  0000                     _TRISG	set	3975
  5622  0000                     _TRISA	set	3969
  5623  0000                     _TRISF	set	3974
  5624  0000                     _TRISE	set	3973
  5625  0000                     _LATH	set	3968
  5626  0000                     _LATC	set	3963
  5627  0000                     _LATG	set	3967
  5628  0000                     _LATB	set	3962
  5629  0000                     _LATF	set	3966
  5630  0000                     _LATA	set	3961
  5631  0000                     _LATD	set	3964
  5632  0000                     _LATE	set	3965
  5633                           
  5634                           	psect	cinit
  5635  01724E                     __pcinit:
  5636                           	opt stack 0
  5637  01724E                     start_initialization:
  5638                           	opt stack 0
  5639  01724E                     __initialization:
  5640                           	opt stack 0
  5641                           
  5642                           ; Initialize objects allocated to BANK2 (36 bytes)
  5643                           ; load TBLPTR registers with __pidataBANK2
  5644  01724E  0E6C               	movlw	low __pidataBANK2
  5645  017250  6EF6               	movwf	tblptrl,c
  5646  017252  0E7F               	movlw	high __pidataBANK2
  5647  017254  6EF7               	movwf	tblptrh,c
  5648  017256  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  5649  017258  6EF8               	movwf	tblptru,c
  5650  01725A  EE02  F0B9         	lfsr	0,__pdataBANK2
  5651  01725E  EE10 F024          	lfsr	1,36
  5652  017262                     copy_data0:
  5653  017262  0009               	tblrd		*+
  5654  017264  CFF5 FFEE          	movff	tablat,postinc0
  5655  017268  50E5               	movf	postdec1,w,c
  5656  01726A  50E1               	movf	fsr1l,w,c
  5657  01726C  E1FA               	bnz	copy_data0
  5658                           
  5659                           ; Initialize objects allocated to BANK0 (6 bytes)
  5660                           ; load TBLPTR registers with __pidataBANK0
  5661  01726E  0E6E               	movlw	low __pidataBANK0
  5662  017270  6EF6               	movwf	tblptrl,c
  5663  017272  0E81               	movlw	high __pidataBANK0
  5664  017274  6EF7               	movwf	tblptrh,c
  5665  017276  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  5666  017278  6EF8               	movwf	tblptru,c
  5667  01727A  EE00  F0F9         	lfsr	0,__pdataBANK0
  5668  01727E  EE10 F006          	lfsr	1,6
  5669  017282                     copy_data1:
  5670  017282  0009               	tblrd		*+
  5671  017284  CFF5 FFEE          	movff	tablat,postinc0
  5672  017288  50E5               	movf	postdec1,w,c
  5673  01728A  50E1               	movf	fsr1l,w,c
  5674  01728C  E1FA               	bnz	copy_data1
  5675                           
  5676                           ; Clear objects allocated to BANK3 (128 bytes)
  5677  01728E  EE03  F000         	lfsr	0,__pbssBANK3
  5678  017292  0E80               	movlw	128
  5679  017294                     clear_0:
  5680  017294  6AEE               	clrf	postinc0,c
  5681  017296  06E8               	decf	wreg,f,c
  5682  017298  E1FD               	bnz	clear_0
  5683                           
  5684                           ; Clear objects allocated to BANK2 (185 bytes)
  5685  01729A  EE02  F000         	lfsr	0,__pbssBANK2
  5686  01729E  0EB9               	movlw	185
  5687  0172A0                     clear_1:
  5688  0172A0  6AEE               	clrf	postinc0,c
  5689  0172A2  06E8               	decf	wreg,f,c
  5690  0172A4  E1FD               	bnz	clear_1
  5691                           
  5692                           ; Clear objects allocated to BANK1 (24 bytes)
  5693  0172A6  EE01  F0CB         	lfsr	0,__pbssBANK1
  5694  0172AA  0E18               	movlw	24
  5695  0172AC                     clear_2:
  5696  0172AC  6AEE               	clrf	postinc0,c
  5697  0172AE  06E8               	decf	wreg,f,c
  5698  0172B0  E1FD               	bnz	clear_2
  5699                           
  5700                           ; Clear objects allocated to BITBANK0 (1 bytes)
  5701  0172B2  0100               	movlb	0
  5702  0172B4  6BFF               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  5703                           
  5704                           ; Clear objects allocated to BANK0 (9 bytes)
  5705  0172B6  EE00  F0F0         	lfsr	0,__pbssBANK0
  5706  0172BA  0E09               	movlw	9
  5707  0172BC                     clear_3:
  5708  0172BC  6AEE               	clrf	postinc0,c
  5709  0172BE  06E8               	decf	wreg,f,c
  5710  0172C0  E1FD               	bnz	clear_3
  5711                           
  5712                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  5713  0172C2  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  5714  0172C4                     end_of_initialization:
  5715                           	opt stack 0
  5716  0172C4                     __end_of__initialization:
  5717                           	opt stack 0
  5718  0172C4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5719  0172C6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5720  0172C8  0100               	movlb	0
  5721  0172CA  EF67  F0B9         	goto	_main	;jump to C main() function
  5722                           tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           postinc0	equ	0xFEE
  5727                           wreg	equ	0xFE8
  5728                           postdec1	equ	0xFE5
  5729                           fsr1l	equ	0xFE1
  5730                           
  5731                           	psect	bitbssCOMRAM
  5732  0002F0                     __pbitbssCOMRAM:
  5733                           	opt stack 0
  5734  0002F0                     _adc_error_flag:
  5735                           	opt stack 0
  5736  0002F0                     	ds	1
  5737  0002F1                     _load_enable:
  5738                           	opt stack 0
  5739  0002F1                     	ds	1
  5740  0002F2                     _VCC_overvoltage_flag:
  5741                           	opt stack 0
  5742  0002F2                     	ds	1
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           postinc0	equ	0xFEE
  5748                           wreg	equ	0xFE8
  5749                           postdec1	equ	0xFE5
  5750                           fsr1l	equ	0xFE1
  5751                           
  5752                           	psect	bitbssBANK0
  5753  0007F8                     __pbitbssBANK0:
  5754                           	opt stack 0
  5755  0007F8                     _eusart2RxStringReady:
  5756                           	opt stack 0
  5757  0007F8                     	ds	1
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           postinc0	equ	0xFEE
  5763                           wreg	equ	0xFE8
  5764                           postdec1	equ	0xFE5
  5765                           fsr1l	equ	0xFE1
  5766                           
  5767                           	psect	bssBANK0
  5768  0000F0                     __pbssBANK0:
  5769                           	opt stack 0
  5770  0000F0                     _POS3P3_ADC_Result:
  5771                           	opt stack 0
  5772  0000F0                     	ds	4
  5773  0000F4                     _eusart2RxHead:
  5774                           	opt stack 0
  5775  0000F4                     	ds	1
  5776  0000F5                     _FVR_ADC_Result:
  5777                           	opt stack 0
  5778  0000F5                     	ds	4
  5779                           tblptru	equ	0xFF8
  5780                           tblptrh	equ	0xFF7
  5781                           tblptrl	equ	0xFF6
  5782                           tablat	equ	0xFF5
  5783                           postinc0	equ	0xFEE
  5784                           wreg	equ	0xFE8
  5785                           postdec1	equ	0xFE5
  5786                           fsr1l	equ	0xFE1
  5787                           
  5788                           	psect	dataBANK0
  5789  0000F9                     __pdataBANK0:
  5790                           	opt stack 0
  5791  0000F9                     _dimming_period:
  5792                           	opt stack 0
  5793  0000F9                     	ds	2
  5794  0000FB                     _TRIAC_Firing_Angle:
  5795                           	opt stack 0
  5796  0000FB                     	ds	4
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           postinc0	equ	0xFEE
  5802                           wreg	equ	0xFE8
  5803                           postdec1	equ	0xFE5
  5804                           fsr1l	equ	0xFE1
  5805                           
  5806                           	psect	bssBANK1
  5807  0001CB                     __pbssBANK1:
  5808                           	opt stack 0
  5809  0001CB                     _Vrms:
  5810                           	opt stack 0
  5811  0001CB                     	ds	4
  5812  0001CF                     _Irms:
  5813                           	opt stack 0
  5814  0001CF                     	ds	4
  5815  0001D3                     _Imeas:
  5816                           	opt stack 0
  5817  0001D3                     	ds	4
  5818  0001D7                     _AVSS_ADC_Result:
  5819                           	opt stack 0
  5820  0001D7                     	ds	4
  5821  0001DB                     _timer7ReloadVal:
  5822                           	opt stack 0
  5823  0001DB                     	ds	2
  5824  0001DD                     _current_adc_channel:
  5825                           	opt stack 0
  5826  0001DD                     	ds	1
  5827  0001DE                     _eusart2RxCount:
  5828                           	opt stack 0
  5829  0001DE                     	ds	1
  5830  0001DF                     _eusart2RxTail:
  5831                           	opt stack 0
  5832  0001DF                     	ds	1
  5833  0001E0                     _eusart2TxBufferRemaining:
  5834                           	opt stack 0
  5835  0001E0                     	ds	1
  5836  0001E1                     _eusart2TxTail:
  5837                           	opt stack 0
  5838  0001E1                     	ds	1
  5839  0001E2                     _eusart2TxHead:
  5840                           	opt stack 0
  5841  0001E2                     	ds	1
  5842                           tblptru	equ	0xFF8
  5843                           tblptrh	equ	0xFF7
  5844                           tblptrl	equ	0xFF6
  5845                           tablat	equ	0xFF5
  5846                           postinc0	equ	0xFEE
  5847                           wreg	equ	0xFE8
  5848                           postdec1	equ	0xFE5
  5849                           fsr1l	equ	0xFE1
  5850                           
  5851                           	psect	bssBANK2
  5852  000200                     __pbssBANK2:
  5853                           	opt stack 0
  5854  000200                     _eusart2RxBuffer:
  5855                           	opt stack 0
  5856  000200                     	ds	64
  5857  000240                     _load_on_time:
  5858                           	opt stack 0
  5859  000240                     	ds	4
  5860  000244                     _dev_on_time:
  5861                           	opt stack 0
  5862  000244                     	ds	4
  5863  000248                     _Avg_Power:
  5864                           	opt stack 0
  5865  000248                     	ds	4
  5866  00024C                     _Ipk:
  5867                           	opt stack 0
  5868  00024C                     	ds	4
  5869  000250                     _Vpk:
  5870                           	opt stack 0
  5871  000250                     	ds	4
  5872  000254                     _Temp_ADC_Result:
  5873                           	opt stack 0
  5874  000254                     	ds	4
  5875  000258                     _POS12_ADC_Result:
  5876                           	opt stack 0
  5877  000258                     	ds	4
  5878  00025C                     _ADC_Result_Scaling:
  5879                           	opt stack 0
  5880  00025C                     	ds	4
  5881  000260                     _TMR5_InterruptHandler:
  5882                           	opt stack 0
  5883  000260                     	ds	3
  5884  000263                     _TMR7_InterruptHandler:
  5885                           	opt stack 0
  5886  000263                     	ds	3
  5887  000266                     _ADCC_ADI_InterruptHandler:
  5888                           	opt stack 0
  5889  000266                     	ds	3
  5890  000269                     _TMR6_InterruptHandler:
  5891                           	opt stack 0
  5892  000269                     	ds	3
  5893  00026C                     _EUSART2_RxDefaultInterruptHandler:
  5894                           	opt stack 0
  5895  00026C                     	ds	3
  5896  00026F                     _EUSART2_TxDefaultInterruptHandler:
  5897                           	opt stack 0
  5898  00026F                     	ds	3
  5899  000272                     _errno:
  5900                           	opt stack 0
  5901  000272                     	ds	2
  5902  000274                     _timer5ReloadVal:
  5903                           	opt stack 0
  5904  000274                     	ds	2
  5905  000276                     _background_color:
  5906                           	opt stack 0
  5907  000276                     	ds	1
  5908  000277                     _foreground_color:
  5909                           	opt stack 0
  5910  000277                     	ds	1
  5911  000278                     _attribute:
  5912                           	opt stack 0
  5913  000278                     	ds	1
  5914  000279                     _line:
  5915                           	opt stack 0
  5916  000279                     	ds	64
  5917                           tblptru	equ	0xFF8
  5918                           tblptrh	equ	0xFF7
  5919                           tblptrl	equ	0xFF6
  5920                           tablat	equ	0xFF5
  5921                           postinc0	equ	0xFEE
  5922                           wreg	equ	0xFE8
  5923                           postdec1	equ	0xFE5
  5924                           fsr1l	equ	0xFE1
  5925                           
  5926                           	psect	dataBANK2
  5927  0002B9                     __pdataBANK2:
  5928                           	opt stack 0
  5929  0002B9                     getCauseOfResetString@strings:
  5930                           	opt stack 0
  5931  0002B9                     	ds	18
  5932  0002CB                     getDeviceIDString@F17550:
  5933                           	opt stack 0
  5934  0002CB                     	ds	6
  5935  0002D1                     _Irms_offset:
  5936                           	opt stack 0
  5937  0002D1                     	ds	4
  5938  0002D5                     _Vpk_const:
  5939                           	opt stack 0
  5940  0002D5                     	ds	4
  5941  0002D9                     _Temp_ADC_Offset:
  5942                           	opt stack 0
  5943  0002D9                     	ds	4
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           postinc0	equ	0xFEE
  5949                           wreg	equ	0xFE8
  5950                           postdec1	equ	0xFE5
  5951                           fsr1l	equ	0xFE1
  5952                           
  5953                           	psect	bssBANK3
  5954  000300                     __pbssBANK3:
  5955                           	opt stack 0
  5956  000300                     _eusart2TxBuffer:
  5957                           	opt stack 0
  5958  000300                     	ds	128
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           postinc0	equ	0xFEE
  5964                           wreg	equ	0xFE8
  5965                           postdec1	equ	0xFE5
  5966                           fsr1l	equ	0xFE1
  5967                           
  5968                           	psect	cstackBANK3
  5969  000380                     __pcstackBANK3:
  5970                           	opt stack 0
  5971  000380                     ringBufferLUT@channel_name:
  5972                           	opt stack 0
  5973                           
  5974                           ; 22 bytes @ 0x0
  5975  000380                     	ds	22
  5976  000396                     ringBufferLUT@angle_degrees:
  5977                           	opt stack 0
  5978                           
  5979                           ; 4 bytes @ 0x16
  5980  000396                     	ds	4
  5981  00039A                     ringBufferLUT@arg_buff:
  5982                           	opt stack 0
  5983                           
  5984                           ; 3 bytes @ 0x1A
  5985  00039A                     	ds	3
  5986  00039D                     ringBufferLUT@index:
  5987                           	opt stack 0
  5988                           
  5989                           ; 2 bytes @ 0x1D
  5990  00039D                     	ds	2
  5991  00039F                     ringBufferLUT@percentage:
  5992                           	opt stack 0
  5993                           
  5994                           ; 2 bytes @ 0x1F
  5995  00039F                     	ds	2
  5996  0003A1                     ringBufferLUT@userID:
  5997                           	opt stack 0
  5998                           
  5999                           ; 2 bytes @ 0x21
  6000  0003A1                     	ds	2
  6001                           tblptru	equ	0xFF8
  6002                           tblptrh	equ	0xFF7
  6003                           tblptrl	equ	0xFF6
  6004                           tablat	equ	0xFF5
  6005                           postinc0	equ	0xFEE
  6006                           wreg	equ	0xFE8
  6007                           postdec1	equ	0xFE5
  6008                           fsr1l	equ	0xFE1
  6009                           
  6010                           	psect	cstackBANK1
  6011  000100                     __pcstackBANK1:
  6012                           	opt stack 0
  6013  000100                     ??_heartbeatTimerCallback:
  6014  000100                     ADCC_StartConversion@channel:
  6015                           	opt stack 0
  6016  000100                     TMR7_WriteTimer@timerVal:
  6017                           	opt stack 0
  6018                           
  6019                           ; 2 bytes @ 0x0
  6020  000100                     	ds	1
  6021  000101                     
  6022                           ; 1 bytes @ 0x1
  6023  000101                     	ds	1
  6024  000102                     ??_INTERRUPT_InterruptManagerLow:
  6025  000102                     
  6026                           ; 1 bytes @ 0x2
  6027  000102                     	ds	21
  6028  000117                     ??_isdigit:
  6029  000117                     ?_strlen:
  6030                           	opt stack 0
  6031  000117                     ?_strcmp:
  6032                           	opt stack 0
  6033  000117                     ?_getCauseOfResetString:
  6034                           	opt stack 0
  6035  000117                     ?_strchr:
  6036                           	opt stack 0
  6037  000117                     ?___wmul:
  6038                           	opt stack 0
  6039  000117                     ?___awmod:
  6040                           	opt stack 0
  6041  000117                     ?__tdiv_to_l_:
  6042                           	opt stack 0
  6043  000117                     ?__div_to_l_:
  6044                           	opt stack 0
  6045  000117                     ?___lldiv:
  6046                           	opt stack 0
  6047  000117                     ?___xxtofl:
  6048                           	opt stack 0
  6049  000117                     EUSART2_Read@readValue:
  6050                           	opt stack 0
  6051  000117                     EUSART2_Write@txData:
  6052                           	opt stack 0
  6053  000117                     getCauseOfReset@return_reset_cause:
  6054                           	opt stack 0
  6055  000117                     ___wmul@multiplier:
  6056                           	opt stack 0
  6057  000117                     ___awmod@dividend:
  6058                           	opt stack 0
  6059  000117                     strcat@to:
  6060                           	opt stack 0
  6061  000117                     strcmp@s1:
  6062                           	opt stack 0
  6063  000117                     strcpy@to:
  6064                           	opt stack 0
  6065  000117                     strlen@s:
  6066                           	opt stack 0
  6067  000117                     strncpy@to:
  6068                           	opt stack 0
  6069  000117                     strchr@ptr:
  6070                           	opt stack 0
  6071  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  6072                           	opt stack 0
  6073  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  6074                           	opt stack 0
  6075  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  6076                           	opt stack 0
  6077  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  6078                           	opt stack 0
  6079  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  6080                           	opt stack 0
  6081  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  6082                           	opt stack 0
  6083  000117                     __tdiv_to_l_@f1:
  6084                           	opt stack 0
  6085  000117                     FLASH_ReadByte@flashAddr:
  6086                           	opt stack 0
  6087  000117                     __div_to_l_@f1:
  6088                           	opt stack 0
  6089  000117                     ___flge@ff1:
  6090                           	opt stack 0
  6091  000117                     ___lldiv@dividend:
  6092                           	opt stack 0
  6093  000117                     ___xxtofl@val:
  6094                           	opt stack 0
  6095                           
  6096                           ; 4 bytes @ 0x17
  6097  000117                     	ds	1
  6098  000118                     putch@txData:
  6099                           	opt stack 0
  6100  000118                     _isdigit$3141:
  6101                           	opt stack 0
  6102                           
  6103                           ; 1 bytes @ 0x18
  6104  000118                     	ds	1
  6105  000119                     ??_strlen:
  6106  000119                     getCauseOfResetString@r:
  6107                           	opt stack 0
  6108  000119                     isdigit@c:
  6109                           	opt stack 0
  6110  000119                     ___wmul@multiplicand:
  6111                           	opt stack 0
  6112  000119                     ___awmod@divisor:
  6113                           	opt stack 0
  6114  000119                     strcat@from:
  6115                           	opt stack 0
  6116  000119                     strcmp@s2:
  6117                           	opt stack 0
  6118  000119                     strcpy@from:
  6119                           	opt stack 0
  6120  000119                     strncpy@from:
  6121                           	opt stack 0
  6122  000119                     strchr@chr:
  6123                           	opt stack 0
  6124                           
  6125                           ; 2 bytes @ 0x19
  6126  000119                     	ds	1
  6127  00011A                     ??_TMR7_Initialize:
  6128  00011A                     ??_TMR5_Initialize:
  6129  00011A                     __tdiv_to_l_@f2:
  6130                           	opt stack 0
  6131                           
  6132                           ; 3 bytes @ 0x1A
  6133  00011A                     	ds	1
  6134  00011B                     ??_strcmp:
  6135  00011B                     ??___xxtofl:
  6136  00011B                     ?_FLASH_ReadWord:
  6137                           	opt stack 0
  6138  00011B                     ___awmod@counter:
  6139                           	opt stack 0
  6140  00011B                     ___wmul@product:
  6141                           	opt stack 0
  6142  00011B                     strcat@cp:
  6143                           	opt stack 0
  6144  00011B                     strcpy@cp:
  6145                           	opt stack 0
  6146  00011B                     strlen@cp:
  6147                           	opt stack 0
  6148  00011B                     strncpy@size:
  6149                           	opt stack 0
  6150  00011B                     FLASH_ReadWord@flashAddr:
  6151                           	opt stack 0
  6152  00011B                     __div_to_l_@f2:
  6153                           	opt stack 0
  6154  00011B                     ___flge@ff2:
  6155                           	opt stack 0
  6156  00011B                     ___lldiv@divisor:
  6157                           	opt stack 0
  6158                           
  6159                           ; 4 bytes @ 0x1B
  6160  00011B                     	ds	1
  6161  00011C                     ___awmod@sign:
  6162                           	opt stack 0
  6163  00011C                     strcmp@r:
  6164                           	opt stack 0
  6165                           
  6166                           ; 1 bytes @ 0x1C
  6167  00011C                     	ds	1
  6168  00011D                     ??__tdiv_to_l_:
  6169  00011D                     ?_atoi:
  6170                           	opt stack 0
  6171  00011D                     ?_strncmp:
  6172                           	opt stack 0
  6173  00011D                     ?___awdiv:
  6174                           	opt stack 0
  6175  00011D                     atoi@s:
  6176                           	opt stack 0
  6177  00011D                     ___awdiv@dividend:
  6178                           	opt stack 0
  6179  00011D                     strncpy@cp:
  6180                           	opt stack 0
  6181  00011D                     strncmp@s1:
  6182                           	opt stack 0
  6183                           
  6184                           ; 2 bytes @ 0x1D
  6185  00011D                     	ds	2
  6186  00011F                     ??_atoi:
  6187  00011F                     ??_FLASH_ReadWord:
  6188  00011F                     ??___flge:
  6189  00011F                     ___xxtofl@sign:
  6190                           	opt stack 0
  6191  00011F                     ___awdiv@divisor:
  6192                           	opt stack 0
  6193  00011F                     strncmp@s2:
  6194                           	opt stack 0
  6195  00011F                     __div_to_l_@quot:
  6196                           	opt stack 0
  6197  00011F                     ___lldiv@quotient:
  6198                           	opt stack 0
  6199                           
  6200                           ; 4 bytes @ 0x1F
  6201  00011F                     	ds	1
  6202  000120                     ___xxtofl@exp:
  6203                           	opt stack 0
  6204  000120                     __tdiv_to_l_@quot:
  6205                           	opt stack 0
  6206                           
  6207                           ; 4 bytes @ 0x20
  6208  000120                     	ds	1
  6209  000121                     atoi@sign:
  6210                           	opt stack 0
  6211  000121                     ___awdiv@counter:
  6212                           	opt stack 0
  6213  000121                     strncmp@len:
  6214                           	opt stack 0
  6215  000121                     ___xxtofl@arg:
  6216                           	opt stack 0
  6217                           
  6218                           ; 4 bytes @ 0x21
  6219  000121                     	ds	1
  6220  000122                     ??_getMajorRevisionID:
  6221  000122                     ?_getDeviceID:
  6222                           	opt stack 0
  6223  000122                     ?_getUserID:
  6224                           	opt stack 0
  6225  000122                     ___awdiv@sign:
  6226                           	opt stack 0
  6227  000122                     getMinorRevisionID@REVID_RAW:
  6228                           	opt stack 0
  6229  000122                     atoi@a:
  6230                           	opt stack 0
  6231                           
  6232                           ; 2 bytes @ 0x22
  6233  000122                     	ds	1
  6234  000123                     ??_strncmp:
  6235  000123                     __div_to_l_@cntr:
  6236                           	opt stack 0
  6237  000123                     ___lldiv@counter:
  6238                           	opt stack 0
  6239  000123                     ___awdiv@quotient:
  6240                           	opt stack 0
  6241                           
  6242                           ; 2 bytes @ 0x23
  6243  000123                     	ds	1
  6244  000124                     ?_getDeviceIDString:
  6245                           	opt stack 0
  6246  000124                     ?___llmod:
  6247                           	opt stack 0
  6248  000124                     __div_to_l_@exp1:
  6249                           	opt stack 0
  6250  000124                     __tdiv_to_l_@cntr:
  6251                           	opt stack 0
  6252  000124                     getDeviceIDString@inputDevID:
  6253                           	opt stack 0
  6254  000124                     getUserID@initialOffset:
  6255                           	opt stack 0
  6256  000124                     ___llmod@dividend:
  6257                           	opt stack 0
  6258                           
  6259                           ; 4 bytes @ 0x24
  6260  000124                     	ds	1
  6261  000125                     ?___flneg:
  6262                           	opt stack 0
  6263  000125                     __tdiv_to_l_@exp1:
  6264                           	opt stack 0
  6265  000125                     getMajorRevisionID@REVID_RAW:
  6266                           	opt stack 0
  6267  000125                     ___flneg@f1:
  6268                           	opt stack 0
  6269                           
  6270                           ; 4 bytes @ 0x25
  6271  000125                     	ds	1
  6272  000126                     ??_getDeviceIDString:
  6273  000126                     ?_strstr:
  6274                           	opt stack 0
  6275  000126                     strstr@s1:
  6276                           	opt stack 0
  6277                           
  6278                           ; 2 bytes @ 0x26
  6279  000126                     	ds	2
  6280  000128                     getUserID@inputUserID:
  6281                           	opt stack 0
  6282  000128                     strstr@s2:
  6283                           	opt stack 0
  6284  000128                     ___llmod@divisor:
  6285                           	opt stack 0
  6286  000128                     getDeviceIDString@strings:
  6287                           	opt stack 0
  6288                           
  6289                           ; 6 bytes @ 0x28
  6290  000128                     	ds	1
  6291  000129                     ?___fladd:
  6292                           	opt stack 0
  6293  000129                     getUserID@IDOffset:
  6294                           	opt stack 0
  6295  000129                     ___fladd@b:
  6296                           	opt stack 0
  6297                           
  6298                           ; 4 bytes @ 0x29
  6299  000129                     	ds	1
  6300  00012A                     
  6301                           ; 1 bytes @ 0x2A
  6302  00012A                     	ds	2
  6303  00012C                     ___llmod@counter:
  6304                           	opt stack 0
  6305                           
  6306                           ; 1 bytes @ 0x2C
  6307  00012C                     	ds	1
  6308  00012D                     ___fladd@a:
  6309                           	opt stack 0
  6310                           
  6311                           ; 4 bytes @ 0x2D
  6312  00012D                     	ds	4
  6313  000131                     ??___fladd:
  6314                           
  6315                           ; 1 bytes @ 0x31
  6316  000131                     	ds	8
  6317  000139                     ___fladd@signs:
  6318                           	opt stack 0
  6319                           
  6320                           ; 1 bytes @ 0x39
  6321  000139                     	ds	1
  6322  00013A                     ___fladd@aexp:
  6323                           	opt stack 0
  6324                           
  6325                           ; 1 bytes @ 0x3A
  6326  00013A                     	ds	1
  6327  00013B                     ___fladd@bexp:
  6328                           	opt stack 0
  6329                           
  6330                           ; 1 bytes @ 0x3B
  6331  00013B                     	ds	1
  6332  00013C                     ___fladd@grs:
  6333                           	opt stack 0
  6334                           
  6335                           ; 1 bytes @ 0x3C
  6336  00013C                     	ds	1
  6337  00013D                     ?___fldiv:
  6338                           	opt stack 0
  6339  00013D                     ?___flsub:
  6340                           	opt stack 0
  6341  00013D                     ___flsub@b:
  6342                           	opt stack 0
  6343  00013D                     ___fldiv@b:
  6344                           	opt stack 0
  6345                           
  6346                           ; 4 bytes @ 0x3D
  6347  00013D                     	ds	4
  6348  000141                     ___flsub@a:
  6349                           	opt stack 0
  6350  000141                     ___fldiv@a:
  6351                           	opt stack 0
  6352                           
  6353                           ; 4 bytes @ 0x41
  6354  000141                     	ds	4
  6355  000145                     ??___fldiv:
  6356  000145                     
  6357                           ; 1 bytes @ 0x45
  6358  000145                     	ds	4
  6359  000149                     ___fldiv@sign:
  6360                           	opt stack 0
  6361                           
  6362                           ; 1 bytes @ 0x49
  6363  000149                     	ds	1
  6364  00014A                     ___fldiv@rem:
  6365                           	opt stack 0
  6366                           
  6367                           ; 4 bytes @ 0x4A
  6368  00014A                     	ds	4
  6369  00014E                     ___fldiv@new_exp:
  6370                           	opt stack 0
  6371                           
  6372                           ; 2 bytes @ 0x4E
  6373  00014E                     	ds	2
  6374  000150                     ___fldiv@grs:
  6375                           	opt stack 0
  6376                           
  6377                           ; 4 bytes @ 0x50
  6378  000150                     	ds	4
  6379  000154                     ___fldiv@bexp:
  6380                           	opt stack 0
  6381                           
  6382                           ; 1 bytes @ 0x54
  6383  000154                     	ds	1
  6384  000155                     ___fldiv@aexp:
  6385                           	opt stack 0
  6386                           
  6387                           ; 1 bytes @ 0x55
  6388  000155                     	ds	1
  6389  000156                     ?___flmul:
  6390                           	opt stack 0
  6391  000156                     ___flmul@b:
  6392                           	opt stack 0
  6393                           
  6394                           ; 4 bytes @ 0x56
  6395  000156                     	ds	4
  6396  00015A                     ___flmul@a:
  6397                           	opt stack 0
  6398                           
  6399                           ; 4 bytes @ 0x5A
  6400  00015A                     	ds	4
  6401  00015E                     ??___flmul:
  6402                           
  6403                           ; 1 bytes @ 0x5E
  6404  00015E                     	ds	4
  6405  000162                     ___flmul@sign:
  6406                           	opt stack 0
  6407                           
  6408                           ; 1 bytes @ 0x62
  6409  000162                     	ds	1
  6410  000163                     ___flmul@aexp:
  6411                           	opt stack 0
  6412                           
  6413                           ; 1 bytes @ 0x63
  6414  000163                     	ds	1
  6415  000164                     ___flmul@grs:
  6416                           	opt stack 0
  6417                           
  6418                           ; 4 bytes @ 0x64
  6419  000164                     	ds	4
  6420  000168                     ___flmul@bexp:
  6421                           	opt stack 0
  6422                           
  6423                           ; 1 bytes @ 0x68
  6424  000168                     	ds	1
  6425  000169                     ___flmul@prod:
  6426                           	opt stack 0
  6427                           
  6428                           ; 4 bytes @ 0x69
  6429  000169                     	ds	4
  6430  00016D                     ___flmul@temp:
  6431                           	opt stack 0
  6432                           
  6433                           ; 2 bytes @ 0x6D
  6434  00016D                     	ds	2
  6435  00016F                     ?_fround:
  6436                           	opt stack 0
  6437  00016F                     ?_scale:
  6438                           	opt stack 0
  6439  00016F                     ?___fltol:
  6440                           	opt stack 0
  6441  00016F                     ___fltol@f1:
  6442                           	opt stack 0
  6443                           
  6444                           ; 4 bytes @ 0x6F
  6445  00016F                     	ds	4
  6446  000173                     ??___fltol:
  6447  000173                     _fround$3859:
  6448                           	opt stack 0
  6449  000173                     _scale$3860:
  6450                           	opt stack 0
  6451                           
  6452                           ; 4 bytes @ 0x73
  6453  000173                     	ds	4
  6454  000177                     scale@scl:
  6455                           	opt stack 0
  6456  000177                     ___fltol@sign1:
  6457                           	opt stack 0
  6458  000177                     _fround$3858:
  6459                           	opt stack 0
  6460                           
  6461                           ; 4 bytes @ 0x77
  6462  000177                     	ds	1
  6463  000178                     ___fltol@exp1:
  6464                           	opt stack 0
  6465                           
  6466                           ; 1 bytes @ 0x78
  6467  000178                     	ds	3
  6468  00017B                     fround@prec:
  6469                           	opt stack 0
  6470                           
  6471                           ; 1 bytes @ 0x7B
  6472  00017B                     	ds	1
  6473  00017C                     ?_printf:
  6474                           	opt stack 0
  6475  00017C                     printf@f:
  6476                           	opt stack 0
  6477                           
  6478                           ; 2 bytes @ 0x7C
  6479  00017C                     	ds	10
  6480  000186                     ??_printf:
  6481                           
  6482                           ; 1 bytes @ 0x86
  6483  000186                     	ds	6
  6484  00018C                     _printf$3861:
  6485                           	opt stack 0
  6486                           
  6487                           ; 4 bytes @ 0x8C
  6488  00018C                     	ds	4
  6489  000190                     printf@idx:
  6490                           	opt stack 0
  6491                           
  6492                           ; 1 bytes @ 0x90
  6493  000190                     	ds	1
  6494  000191                     printf@len:
  6495                           	opt stack 0
  6496                           
  6497                           ; 2 bytes @ 0x91
  6498  000191                     	ds	2
  6499  000193                     printf@cp:
  6500                           	opt stack 0
  6501                           
  6502                           ; 2 bytes @ 0x93
  6503  000193                     	ds	2
  6504  000195                     printf@ap:
  6505                           	opt stack 0
  6506                           
  6507                           ; 2 bytes @ 0x95
  6508  000195                     	ds	2
  6509  000197                     printf@flag:
  6510                           	opt stack 0
  6511                           
  6512                           ; 2 bytes @ 0x97
  6513  000197                     	ds	2
  6514  000199                     printf@exp:
  6515                           	opt stack 0
  6516                           
  6517                           ; 2 bytes @ 0x99
  6518  000199                     	ds	2
  6519  00019B                     printf@tmpval:
  6520                           	opt stack 0
  6521                           
  6522                           ; 4 bytes @ 0x9B
  6523  00019B                     	ds	4
  6524  00019F                     printf@val:
  6525                           	opt stack 0
  6526                           
  6527                           ; 4 bytes @ 0x9F
  6528  00019F                     	ds	4
  6529  0001A3                     printf@fval:
  6530                           	opt stack 0
  6531                           
  6532                           ; 4 bytes @ 0xA3
  6533  0001A3                     	ds	4
  6534  0001A7                     printf@prec:
  6535                           	opt stack 0
  6536                           
  6537                           ; 2 bytes @ 0xA7
  6538  0001A7                     	ds	2
  6539  0001A9                     printf@c:
  6540                           	opt stack 0
  6541                           
  6542                           ; 1 bytes @ 0xA9
  6543  0001A9                     	ds	1
  6544  0001AA                     terminal_textAttributes@background_color:
  6545                           	opt stack 0
  6546                           
  6547                           ; 1 bytes @ 0xAA
  6548  0001AA                     	ds	1
  6549  0001AB                     terminal_textAttributes@input_attribute:
  6550                           	opt stack 0
  6551                           
  6552                           ; 1 bytes @ 0xAB
  6553  0001AB                     	ds	1
  6554  0001AC                     terminal_textAttributes@foreground_color:
  6555                           	opt stack 0
  6556                           
  6557                           ; 1 bytes @ 0xAC
  6558  0001AC                     	ds	1
  6559  0001AD                     terminal_textAttributes@output_buff:
  6560                           	opt stack 0
  6561                           
  6562                           ; 15 bytes @ 0xAD
  6563  0001AD                     	ds	15
  6564  0001BC                     ringBufferLUT@line:
  6565                           	opt stack 0
  6566                           
  6567                           ; 2 bytes @ 0xBC
  6568  0001BC                     	ds	2
  6569  0001BE                     ??_ringBufferLUT:
  6570                           
  6571                           ; 1 bytes @ 0xBE
  6572  0001BE                     	ds	2
  6573  0001C0                     ??_terminal_ringBufferPull:
  6574                           
  6575                           ; 1 bytes @ 0xC0
  6576  0001C0                     	ds	3
  6577  0001C3                     terminal_ringBufferPull@charNumber:
  6578                           	opt stack 0
  6579                           
  6580                           ; 2 bytes @ 0xC3
  6581  0001C3                     	ds	2
  6582  0001C5                     terminal_ringBufferPull@index_2365:
  6583                           	opt stack 0
  6584                           
  6585                           ; 2 bytes @ 0xC5
  6586  0001C5                     	ds	2
  6587  0001C7                     terminal_ringBufferPull@index:
  6588                           	opt stack 0
  6589                           
  6590                           ; 2 bytes @ 0xC7
  6591  0001C7                     	ds	2
  6592  0001C9                     ??_main:
  6593                           
  6594                           ; 1 bytes @ 0xC9
  6595  0001C9                     	ds	2
  6596                           tblptru	equ	0xFF8
  6597                           tblptrh	equ	0xFF7
  6598                           tblptrl	equ	0xFF6
  6599                           tablat	equ	0xFF5
  6600                           postinc0	equ	0xFEE
  6601                           wreg	equ	0xFE8
  6602                           postdec1	equ	0xFE5
  6603                           fsr1l	equ	0xFE1
  6604                           
  6605                           	psect	cstackBANK0
  6606  000060                     __pcstackBANK0:
  6607                           	opt stack 0
  6608  000060                     ??i2___fladd:
  6609                           
  6610                           ; 1 bytes @ 0x0
  6611  000060                     	ds	8
  6612  000068                     i2___fladd@signs:
  6613                           	opt stack 0
  6614                           
  6615                           ; 1 bytes @ 0x8
  6616  000068                     	ds	1
  6617  000069                     i2___fladd@aexp:
  6618                           	opt stack 0
  6619                           
  6620                           ; 1 bytes @ 0x9
  6621  000069                     	ds	1
  6622  00006A                     i2___fladd@bexp:
  6623                           	opt stack 0
  6624                           
  6625                           ; 1 bytes @ 0xA
  6626  00006A                     	ds	1
  6627  00006B                     i2___fladd@grs:
  6628                           	opt stack 0
  6629                           
  6630                           ; 1 bytes @ 0xB
  6631  00006B                     	ds	1
  6632  00006C                     ?_sqrt:
  6633                           	opt stack 0
  6634  00006C                     ?_eval_poly:
  6635                           	opt stack 0
  6636  00006C                     ?_floor:
  6637                           	opt stack 0
  6638  00006C                     eval_poly@x:
  6639                           	opt stack 0
  6640  00006C                     sqrt@a:
  6641                           	opt stack 0
  6642  00006C                     floor@x:
  6643                           	opt stack 0
  6644                           
  6645                           ; 4 bytes @ 0xC
  6646  00006C                     	ds	4
  6647  000070                     ??_sqrt:
  6648  000070                     eval_poly@d:
  6649                           	opt stack 0
  6650  000070                     floor@i:
  6651                           	opt stack 0
  6652                           
  6653                           ; 4 bytes @ 0x10
  6654  000070                     	ds	2
  6655  000072                     eval_poly@n:
  6656                           	opt stack 0
  6657                           
  6658                           ; 2 bytes @ 0x12
  6659  000072                     	ds	2
  6660  000074                     ??_eval_poly:
  6661  000074                     sqrt@sign:
  6662                           	opt stack 0
  6663  000074                     floor@expon:
  6664                           	opt stack 0
  6665                           
  6666                           ; 2 bytes @ 0x14
  6667  000074                     	ds	1
  6668  000075                     sqrt@i:
  6669                           	opt stack 0
  6670                           
  6671                           ; 1 bytes @ 0x15
  6672  000075                     	ds	1
  6673  000076                     ?i2___flsub:
  6674                           	opt stack 0
  6675  000076                     sqrt@tfrac:
  6676                           	opt stack 0
  6677  000076                     i2___flsub@b:
  6678                           	opt stack 0
  6679                           
  6680                           ; 4 bytes @ 0x16
  6681  000076                     	ds	2
  6682  000078                     eval_poly@res:
  6683                           	opt stack 0
  6684                           
  6685                           ; 4 bytes @ 0x18
  6686  000078                     	ds	2
  6687  00007A                     sqrt@p:
  6688                           	opt stack 0
  6689  00007A                     i2___flsub@a:
  6690                           	opt stack 0
  6691                           
  6692                           ; 4 bytes @ 0x1A
  6693  00007A                     	ds	1
  6694  00007B                     sqrt@grs:
  6695                           	opt stack 0
  6696                           
  6697                           ; 4 bytes @ 0x1B
  6698  00007B                     	ds	1
  6699  00007C                     ?_atan:
  6700                           	opt stack 0
  6701  00007C                     atan@f:
  6702                           	opt stack 0
  6703                           
  6704                           ; 4 bytes @ 0x1C
  6705  00007C                     	ds	2
  6706  00007E                     ?i2_printf:
  6707                           	opt stack 0
  6708  00007E                     ?_sin:
  6709                           	opt stack 0
  6710  00007E                     i2printf@f:
  6711                           	opt stack 0
  6712  00007E                     sin@f:
  6713                           	opt stack 0
  6714                           
  6715                           ; 4 bytes @ 0x1E
  6716  00007E                     	ds	1
  6717  00007F                     sqrt@exp:
  6718                           	opt stack 0
  6719                           
  6720                           ; 2 bytes @ 0x1F
  6721  00007F                     	ds	1
  6722  000080                     ??i2_printf:
  6723  000080                     atan@y:
  6724                           	opt stack 0
  6725                           
  6726                           ; 4 bytes @ 0x20
  6727  000080                     	ds	1
  6728  000081                     sqrt@root:
  6729                           	opt stack 0
  6730                           
  6731                           ; 4 bytes @ 0x21
  6732  000081                     	ds	1
  6733  000082                     sin@y:
  6734                           	opt stack 0
  6735                           
  6736                           ; 4 bytes @ 0x22
  6737  000082                     	ds	2
  6738  000084                     atan@x:
  6739                           	opt stack 0
  6740                           
  6741                           ; 4 bytes @ 0x24
  6742  000084                     	ds	1
  6743  000085                     sqrt@frac:
  6744                           	opt stack 0
  6745                           
  6746                           ; 4 bytes @ 0x25
  6747  000085                     	ds	1
  6748  000086                     _sin$4060:
  6749                           	opt stack 0
  6750  000086                     i2_printf$4064:
  6751                           	opt stack 0
  6752                           
  6753                           ; 4 bytes @ 0x26
  6754  000086                     	ds	2
  6755  000088                     atan@recip:
  6756                           	opt stack 0
  6757                           
  6758                           ; 1 bytes @ 0x28
  6759  000088                     	ds	1
  6760  000089                     atan@val_squared:
  6761                           	opt stack 0
  6762                           
  6763                           ; 4 bytes @ 0x29
  6764  000089                     	ds	1
  6765  00008A                     i2printf@idx:
  6766                           	opt stack 0
  6767  00008A                     sin@x2:
  6768                           	opt stack 0
  6769                           
  6770                           ; 4 bytes @ 0x2A
  6771  00008A                     	ds	1
  6772  00008B                     i2printf@len:
  6773                           	opt stack 0
  6774                           
  6775                           ; 2 bytes @ 0x2B
  6776  00008B                     	ds	2
  6777  00008D                     i2printf@cp:
  6778                           	opt stack 0
  6779  00008D                     atan@val:
  6780                           	opt stack 0
  6781                           
  6782                           ; 4 bytes @ 0x2D
  6783  00008D                     	ds	1
  6784  00008E                     sin@sgn:
  6785                           	opt stack 0
  6786                           
  6787                           ; 1 bytes @ 0x2E
  6788  00008E                     	ds	1
  6789  00008F                     ?_currentMeasuredToPeak:
  6790                           	opt stack 0
  6791  00008F                     i2printf@ap:
  6792                           	opt stack 0
  6793  00008F                     currentMeasuredToPeak@Measured:
  6794                           	opt stack 0
  6795                           
  6796                           ; 4 bytes @ 0x2F
  6797  00008F                     	ds	2
  6798  000091                     ?_asin:
  6799                           	opt stack 0
  6800  000091                     i2printf@flag:
  6801                           	opt stack 0
  6802  000091                     asin@x:
  6803                           	opt stack 0
  6804                           
  6805                           ; 4 bytes @ 0x31
  6806  000091                     	ds	2
  6807  000093                     i2printf@exp:
  6808                           	opt stack 0
  6809  000093                     currentMeasuredToPeak@Angle:
  6810                           	opt stack 0
  6811                           
  6812                           ; 4 bytes @ 0x33
  6813  000093                     	ds	2
  6814  000095                     asin@sgn:
  6815                           	opt stack 0
  6816  000095                     i2printf@tmpval:
  6817                           	opt stack 0
  6818                           
  6819                           ; 4 bytes @ 0x35
  6820  000095                     	ds	2
  6821  000097                     currentMeasuredToPeak@Peak:
  6822                           	opt stack 0
  6823                           
  6824                           ; 4 bytes @ 0x37
  6825  000097                     	ds	2
  6826  000099                     i2printf@val:
  6827                           	opt stack 0
  6828  000099                     _asin$4059:
  6829                           	opt stack 0
  6830                           
  6831                           ; 4 bytes @ 0x39
  6832  000099                     	ds	4
  6833  00009D                     i2printf@fval:
  6834                           	opt stack 0
  6835  00009D                     _asin$4058:
  6836                           	opt stack 0
  6837                           
  6838                           ; 4 bytes @ 0x3D
  6839  00009D                     	ds	4
  6840  0000A1                     i2printf@prec:
  6841                           	opt stack 0
  6842  0000A1                     asin@y:
  6843                           	opt stack 0
  6844                           
  6845                           ; 4 bytes @ 0x41
  6846  0000A1                     	ds	2
  6847  0000A3                     i2printf@c:
  6848                           	opt stack 0
  6849                           
  6850                           ; 1 bytes @ 0x43
  6851  0000A3                     	ds	2
  6852  0000A5                     _asin$4057:
  6853                           	opt stack 0
  6854                           
  6855                           ; 4 bytes @ 0x45
  6856  0000A5                     	ds	4
  6857  0000A9                     ?_acos:
  6858                           	opt stack 0
  6859  0000A9                     acos@x:
  6860                           	opt stack 0
  6861                           
  6862                           ; 4 bytes @ 0x49
  6863  0000A9                     	ds	4
  6864  0000AD                     _acos$4056:
  6865                           	opt stack 0
  6866                           
  6867                           ; 4 bytes @ 0x4D
  6868  0000AD                     	ds	4
  6869  0000B1                     ?_peakToRMS:
  6870                           	opt stack 0
  6871  0000B1                     peakToRMS@Peak:
  6872                           	opt stack 0
  6873                           
  6874                           ; 4 bytes @ 0x51
  6875  0000B1                     	ds	4
  6876  0000B5                     peakToRMS@Angle:
  6877                           	opt stack 0
  6878                           
  6879                           ; 4 bytes @ 0x55
  6880  0000B5                     	ds	4
  6881  0000B9                     _peakToRMS$4049:
  6882                           	opt stack 0
  6883                           
  6884                           ; 4 bytes @ 0x59
  6885  0000B9                     	ds	4
  6886  0000BD                     _peakToRMS$4050:
  6887                           	opt stack 0
  6888                           
  6889                           ; 4 bytes @ 0x5D
  6890  0000BD                     	ds	4
  6891  0000C1                     _peakToRMS$4048:
  6892                           	opt stack 0
  6893                           
  6894                           ; 4 bytes @ 0x61
  6895  0000C1                     	ds	4
  6896  0000C5                     peakToRMS@RMS:
  6897                           	opt stack 0
  6898                           
  6899                           ; 4 bytes @ 0x65
  6900  0000C5                     	ds	4
  6901  0000C9                     _ADCPostProcessingCallback$4053:
  6902                           	opt stack 0
  6903                           
  6904                           ; 4 bytes @ 0x69
  6905  0000C9                     	ds	4
  6906  0000CD                     _ADCPostProcessingCallback$4054:
  6907                           	opt stack 0
  6908                           
  6909                           ; 4 bytes @ 0x6D
  6910  0000CD                     	ds	4
  6911  0000D1                     _ADCPostProcessingCallback$4055:
  6912                           	opt stack 0
  6913                           
  6914                           ; 4 bytes @ 0x71
  6915  0000D1                     	ds	4
  6916  0000D5                     ADCPostProcessingCallback@current_adc_channel:
  6917                           	opt stack 0
  6918                           
  6919                           ; 1 bytes @ 0x75
  6920  0000D5                     	ds	1
  6921  0000D6                     _ADCPostProcessingCallback$4052:
  6922                           	opt stack 0
  6923                           
  6924                           ; 4 bytes @ 0x76
  6925  0000D6                     	ds	4
  6926  0000DA                     _ADCPostProcessingCallback$4051:
  6927                           	opt stack 0
  6928                           
  6929                           ; 4 bytes @ 0x7A
  6930  0000DA                     	ds	4
  6931  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
  6932                           
  6933                           ; 1 bytes @ 0x7E
  6934  0000DE                     	ds	18
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           postinc0	equ	0xFEE
  6940                           wreg	equ	0xFE8
  6941                           postdec1	equ	0xFE5
  6942                           fsr1l	equ	0xFE1
  6943                           
  6944                           	psect	cstackCOMRAM
  6945  000001                     __pcstackCOMRAM:
  6946                           	opt stack 0
  6947  000001                     ??i2_isdigit:
  6948  000001                     ?_ADCC_GetConversionResult:
  6949                           	opt stack 0
  6950  000001                     ?i2___wmul:
  6951                           	opt stack 0
  6952  000001                     ?i2___awmod:
  6953                           	opt stack 0
  6954  000001                     ?i2__div_to_l_:
  6955                           	opt stack 0
  6956  000001                     ?i2__tdiv_to_l_:
  6957                           	opt stack 0
  6958  000001                     ?i2___lldiv:
  6959                           	opt stack 0
  6960  000001                     i2EUSART2_Write@txData:
  6961                           	opt stack 0
  6962  000001                     TMR5_WriteTimer@timerVal:
  6963                           	opt stack 0
  6964  000001                     i2___wmul@multiplier:
  6965                           	opt stack 0
  6966  000001                     i2___awmod@dividend:
  6967                           	opt stack 0
  6968  000001                     i2__tdiv_to_l_@f1:
  6969                           	opt stack 0
  6970  000001                     frexp@value:
  6971                           	opt stack 0
  6972  000001                     i2__div_to_l_@f1:
  6973                           	opt stack 0
  6974  000001                     i2___lldiv@dividend:
  6975                           	opt stack 0
  6976                           
  6977                           ; 4 bytes @ 0x0
  6978  000001                     	ds	1
  6979  000002                     i2putch@txData:
  6980                           	opt stack 0
  6981  000002                     i2_isdigit$3141:
  6982                           	opt stack 0
  6983                           
  6984                           ; 1 bytes @ 0x1
  6985  000002                     	ds	1
  6986  000003                     ??_ADCC_GetConversionResult:
  6987  000003                     i2isdigit@c:
  6988                           	opt stack 0
  6989  000003                     i2___wmul@multiplicand:
  6990                           	opt stack 0
  6991  000003                     i2___awmod@divisor:
  6992                           	opt stack 0
  6993                           
  6994                           ; 2 bytes @ 0x2
  6995  000003                     	ds	1
  6996  000004                     i2__tdiv_to_l_@f2:
  6997                           	opt stack 0
  6998                           
  6999                           ; 3 bytes @ 0x3
  7000  000004                     	ds	1
  7001  000005                     ?i2___xxtofl:
  7002                           	opt stack 0
  7003  000005                     i2___awmod@counter:
  7004                           	opt stack 0
  7005  000005                     frexp@eptr:
  7006                           	opt stack 0
  7007  000005                     i2___wmul@product:
  7008                           	opt stack 0
  7009  000005                     i2__div_to_l_@f2:
  7010                           	opt stack 0
  7011  000005                     i2___lldiv@divisor:
  7012                           	opt stack 0
  7013  000005                     i2___xxtofl@val:
  7014                           	opt stack 0
  7015                           
  7016                           ; 4 bytes @ 0x4
  7017  000005                     	ds	1
  7018  000006                     i2___awmod@sign:
  7019                           	opt stack 0
  7020                           
  7021                           ; 1 bytes @ 0x5
  7022  000006                     	ds	1
  7023  000007                     ??_frexp:
  7024  000007                     ??i2__tdiv_to_l_:
  7025  000007                     ?i2___awdiv:
  7026                           	opt stack 0
  7027  000007                     i2___awdiv@dividend:
  7028                           	opt stack 0
  7029                           
  7030                           ; 2 bytes @ 0x6
  7031  000007                     	ds	2
  7032  000009                     ??i2___xxtofl:
  7033  000009                     i2___awdiv@divisor:
  7034                           	opt stack 0
  7035  000009                     i2__div_to_l_@quot:
  7036                           	opt stack 0
  7037  000009                     i2___lldiv@quotient:
  7038                           	opt stack 0
  7039                           
  7040                           ; 4 bytes @ 0x8
  7041  000009                     	ds	1
  7042  00000A                     i2__tdiv_to_l_@quot:
  7043                           	opt stack 0
  7044                           
  7045                           ; 4 bytes @ 0x9
  7046  00000A                     	ds	1
  7047  00000B                     i2___awdiv@counter:
  7048                           	opt stack 0
  7049                           
  7050                           ; 1 bytes @ 0xA
  7051  00000B                     	ds	1
  7052  00000C                     i2___awdiv@sign:
  7053                           	opt stack 0
  7054                           
  7055                           ; 1 bytes @ 0xB
  7056  00000C                     	ds	1
  7057  00000D                     i2__div_to_l_@cntr:
  7058                           	opt stack 0
  7059  00000D                     i2___lldiv@counter:
  7060                           	opt stack 0
  7061  00000D                     i2___xxtofl@sign:
  7062                           	opt stack 0
  7063  00000D                     i2___awdiv@quotient:
  7064                           	opt stack 0
  7065                           
  7066                           ; 2 bytes @ 0xC
  7067  00000D                     	ds	1
  7068  00000E                     ?i2___llmod:
  7069                           	opt stack 0
  7070  00000E                     i2__div_to_l_@exp1:
  7071                           	opt stack 0
  7072  00000E                     i2__tdiv_to_l_@cntr:
  7073                           	opt stack 0
  7074  00000E                     i2___xxtofl@exp:
  7075                           	opt stack 0
  7076  00000E                     i2___llmod@dividend:
  7077                           	opt stack 0
  7078                           
  7079                           ; 4 bytes @ 0xD
  7080  00000E                     	ds	1
  7081  00000F                     i2__tdiv_to_l_@exp1:
  7082                           	opt stack 0
  7083  00000F                     i2___xxtofl@arg:
  7084                           	opt stack 0
  7085                           
  7086                           ; 4 bytes @ 0xE
  7087  00000F                     	ds	3
  7088  000012                     i2___llmod@divisor:
  7089                           	opt stack 0
  7090                           
  7091                           ; 4 bytes @ 0x11
  7092  000012                     	ds	1
  7093  000013                     ?i2___fldiv:
  7094                           	opt stack 0
  7095  000013                     i2___fldiv@b:
  7096                           	opt stack 0
  7097                           
  7098                           ; 4 bytes @ 0x12
  7099  000013                     	ds	3
  7100  000016                     i2___llmod@counter:
  7101                           	opt stack 0
  7102                           
  7103                           ; 1 bytes @ 0x15
  7104  000016                     	ds	1
  7105  000017                     i2___fldiv@a:
  7106                           	opt stack 0
  7107                           
  7108                           ; 4 bytes @ 0x16
  7109  000017                     	ds	4
  7110  00001B                     ??i2___fldiv:
  7111                           
  7112                           ; 1 bytes @ 0x1A
  7113  00001B                     	ds	4
  7114  00001F                     i2___fldiv@sign:
  7115                           	opt stack 0
  7116                           
  7117                           ; 1 bytes @ 0x1E
  7118  00001F                     	ds	1
  7119  000020                     i2___fldiv@rem:
  7120                           	opt stack 0
  7121                           
  7122                           ; 4 bytes @ 0x1F
  7123  000020                     	ds	4
  7124  000024                     i2___fldiv@new_exp:
  7125                           	opt stack 0
  7126                           
  7127                           ; 2 bytes @ 0x23
  7128  000024                     	ds	2
  7129  000026                     i2___fldiv@grs:
  7130                           	opt stack 0
  7131                           
  7132                           ; 4 bytes @ 0x25
  7133  000026                     	ds	4
  7134  00002A                     i2___fldiv@bexp:
  7135                           	opt stack 0
  7136                           
  7137                           ; 1 bytes @ 0x29
  7138  00002A                     	ds	1
  7139  00002B                     i2___fldiv@aexp:
  7140                           	opt stack 0
  7141                           
  7142                           ; 1 bytes @ 0x2A
  7143  00002B                     	ds	1
  7144  00002C                     ?i2___flneg:
  7145                           	opt stack 0
  7146  00002C                     i2___flneg@f1:
  7147                           	opt stack 0
  7148                           
  7149                           ; 4 bytes @ 0x2B
  7150  00002C                     	ds	4
  7151  000030                     ?_fabs:
  7152                           	opt stack 0
  7153  000030                     ?i2___flmul:
  7154                           	opt stack 0
  7155  000030                     fabs@d:
  7156                           	opt stack 0
  7157  000030                     i2___flmul@b:
  7158                           	opt stack 0
  7159                           
  7160                           ; 4 bytes @ 0x2F
  7161  000030                     	ds	4
  7162  000034                     i2___flge@ff1:
  7163                           	opt stack 0
  7164  000034                     i2___flmul@a:
  7165                           	opt stack 0
  7166                           
  7167                           ; 4 bytes @ 0x33
  7168  000034                     	ds	4
  7169  000038                     ??i2___flmul:
  7170  000038                     i2___flge@ff2:
  7171                           	opt stack 0
  7172                           
  7173                           ; 4 bytes @ 0x37
  7174  000038                     	ds	4
  7175  00003C                     ??i2___flge:
  7176  00003C                     i2___flmul@sign:
  7177                           	opt stack 0
  7178                           
  7179                           ; 1 bytes @ 0x3B
  7180  00003C                     	ds	1
  7181  00003D                     i2___flmul@aexp:
  7182                           	opt stack 0
  7183                           
  7184                           ; 1 bytes @ 0x3C
  7185  00003D                     	ds	1
  7186  00003E                     i2___flmul@grs:
  7187                           	opt stack 0
  7188                           
  7189                           ; 4 bytes @ 0x3D
  7190  00003E                     	ds	4
  7191  000042                     i2___flmul@bexp:
  7192                           	opt stack 0
  7193                           
  7194                           ; 1 bytes @ 0x41
  7195  000042                     	ds	1
  7196  000043                     i2___flmul@prod:
  7197                           	opt stack 0
  7198                           
  7199                           ; 4 bytes @ 0x42
  7200  000043                     	ds	4
  7201  000047                     i2___flmul@temp:
  7202                           	opt stack 0
  7203                           
  7204                           ; 2 bytes @ 0x46
  7205  000047                     	ds	2
  7206  000049                     ?i2_fround:
  7207                           	opt stack 0
  7208  000049                     ?i2_scale:
  7209                           	opt stack 0
  7210  000049                     ?i2___fltol:
  7211                           	opt stack 0
  7212  000049                     i2___fltol@f1:
  7213                           	opt stack 0
  7214                           
  7215                           ; 4 bytes @ 0x48
  7216  000049                     	ds	4
  7217  00004D                     ??i2___fltol:
  7218  00004D                     i2_fround$4062:
  7219                           	opt stack 0
  7220  00004D                     i2_scale$4063:
  7221                           	opt stack 0
  7222                           
  7223                           ; 4 bytes @ 0x4C
  7224  00004D                     	ds	4
  7225  000051                     i2scale@scl:
  7226                           	opt stack 0
  7227  000051                     i2___fltol@sign1:
  7228                           	opt stack 0
  7229  000051                     i2_fround$4061:
  7230                           	opt stack 0
  7231                           
  7232                           ; 4 bytes @ 0x50
  7233  000051                     	ds	1
  7234  000052                     i2___fltol@exp1:
  7235                           	opt stack 0
  7236                           
  7237                           ; 1 bytes @ 0x51
  7238  000052                     	ds	3
  7239  000055                     i2fround@prec:
  7240                           	opt stack 0
  7241                           
  7242                           ; 1 bytes @ 0x54
  7243  000055                     	ds	1
  7244  000056                     ?i2___fladd:
  7245                           	opt stack 0
  7246  000056                     i2___fladd@b:
  7247                           	opt stack 0
  7248                           
  7249                           ; 4 bytes @ 0x55
  7250  000056                     	ds	4
  7251  00005A                     i2___fladd@a:
  7252                           	opt stack 0
  7253                           
  7254                           ; 4 bytes @ 0x59
  7255  00005A                     	ds	4
  7256  00005E                     tblptru	equ	0xFF8
  7257                           tblptrh	equ	0xFF7
  7258                           tblptrl	equ	0xFF6
  7259                           tablat	equ	0xFF5
  7260                           postinc0	equ	0xFEE
  7261                           wreg	equ	0xFE8
  7262                           postdec1	equ	0xFE5
  7263                           fsr1l	equ	0xFE1
  7264                           
  7265                           ; 1 bytes @ 0x5D
  7266 ;;
  7267 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7268 ;;
  7269 ;; *************** function _main *****************
  7270 ;; Defined at:
  7271 ;;		line 453 in file "main.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7287 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7289 ;;Total ram usage:        2 bytes
  7290 ;; Hardware stack levels required when called:   20
  7291 ;; This function calls:
  7292 ;;		_ADCC_SetADIInterruptHandler
  7293 ;;		_SYSTEM_Initialize
  7294 ;;		_TMR6_SetInterruptHandler
  7295 ;;		_TMR7_SetInterruptHandler
  7296 ;;		_getCauseOfReset
  7297 ;;		_terminal_clearTerminal
  7298 ;;		_terminal_ringBufferPull
  7299 ;;		_terminal_setCursorHome
  7300 ;;		_terminal_textAttributesReset
  7301 ;; This function is called by:
  7302 ;;		Startup code after reset
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text0
  7307  0172CE                     __ptext0:
  7308                           	opt stack 0
  7309  0172CE                     _main:
  7310                           	opt stack 11
  7311                           
  7312                           ;main.c: 457: reset_cause = getCauseOfReset();
  7313                           
  7314                           ;incstack = 0
  7315  0172CE  EC28  F0BC         	call	_getCauseOfReset	;wreg free
  7316  0172D2  0102               	movlb	2	; () banked
  7317  0172D4  6FDD               	movwf	_reset_cause& (0+255),b
  7318                           
  7319                           ; BSR set to: 2
  7320                           ;main.c: 461: _delay((unsigned long)((250)*(64000000/4000.0)));
  7321  0172D6  0E15               	movlw	21
  7322  0172D8  0101               	movlb	1	; () banked
  7323  0172DA  6FCA               	movwf	(??_main+1)& (0+255),b
  7324  0172DC  0E4B               	movlw	75
  7325  0172DE  6FC9               	movwf	??_main& (0+255),b
  7326  0172E0  0EBE               	movlw	190
  7327  0172E2                     u17737:
  7328  0172E2  2EE8               	decfsz	wreg,f,c
  7329  0172E4  D7FE               	bra	u17737
  7330  0172E6  2FC9               	decfsz	??_main& (0+255),f,b
  7331  0172E8  D7FC               	bra	u17737
  7332  0172EA  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  7333  0172EC  D7FA               	bra	u17737
  7334  0172EE  F000               	nop	
  7335                           
  7336                           ;main.c: 464: SYSTEM_Initialize();
  7337  0172F0  EC13  F0BF         	call	_SYSTEM_Initialize	;wreg free
  7338                           
  7339                           ;main.c: 467: LATGbits.LATG0 = 0;
  7340  0172F4  907F               	bcf	3967,0,c	;volatile
  7341                           
  7342                           ;main.c: 468: LATGbits.LATG1 = 0;
  7343  0172F6  927F               	bcf	3967,1,c	;volatile
  7344                           
  7345                           ;main.c: 469: load_enable = 0;
  7346  0172F8  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7347                           
  7348                           ;main.c: 472: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  7349  0172FA  0ED0               	movlw	low _heartbeatTimerCallback
  7350  0172FC  0101               	movlb	1	; () banked
  7351  0172FE  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7352  017300  0E7B               	movlw	high _heartbeatTimerCallback
  7353  017302  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7354  017304  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  7355  017306  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7356  017308  EC7A  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
  7357                           
  7358                           ;main.c: 475: ADCC_SetADIInterruptHandler(ADCPostProcessingCallback);
  7359  01730C  0EEA               	movlw	low _ADCPostProcessingCallback
  7360  01730E  0101               	movlb	1	; () banked
  7361  017310  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  7362  017312  0E22               	movlw	high _ADCPostProcessingCallback
  7363  017314  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  7364  017316  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  7365  017318  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  7366  01731A  EC96  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7367                           
  7368                           ;main.c: 478: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  7369  01731E  0E10               	movlw	low _acquisitionTimerCallback
  7370  017320  0101               	movlb	1	; () banked
  7371  017322  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  7372  017324  0E6D               	movlw	high _acquisitionTimerCallback
  7373  017326  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7374  017328  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  7375  01732A  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7376  01732C  EC73  F0C0         	call	_TMR7_SetInterruptHandler	;wreg free
  7377                           
  7378                           ;main.c: 481: (INTCONbits.GIEH = 1);
  7379  017330  8EF2               	bsf	intcon,7,c	;volatile
  7380                           
  7381                           ;main.c: 484: (INTCONbits.GIEL = 1);
  7382  017332  8CF2               	bsf	intcon,6,c	;volatile
  7383                           
  7384                           ;main.c: 487: VCC_overvoltage_flag = 0;
  7385  017334  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  7386                           
  7387                           ;main.c: 490: terminal_clearTerminal();
  7388  017336  EC5C  F0C0         	call	_terminal_clearTerminal	;wreg free
  7389                           
  7390                           ;main.c: 491: terminal_setCursorHome();
  7391  01733A  EC4C  F0C0         	call	_terminal_setCursorHome	;wreg free
  7392                           
  7393                           ;main.c: 492: terminal_textAttributesReset();
  7394  01733E  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  7395  017342                     
  7396                           ;main.c: 496: {
  7397                           ;main.c: 499: if (eusart2RxStringReady) {
  7398  017342  0100               	movlb	0	; () banked
  7399  017344  A1FF               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7400  017346  D7FD               	goto	l996
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;main.c: 501: terminal_ringBufferPull();
  7404  017348  EC42  F0B3         	call	_terminal_ringBufferPull	;wreg free
  7405  01734C  D7FA               	goto	l996
  7406  01734E                     __end_of_main:
  7407                           	opt stack 0
  7408                           tblptru	equ	0xFF8
  7409                           tblptrh	equ	0xFF7
  7410                           tblptrl	equ	0xFF6
  7411                           tablat	equ	0xFF5
  7412                           intcon	equ	0xFF2
  7413                           postinc0	equ	0xFEE
  7414                           wreg	equ	0xFE8
  7415                           postdec1	equ	0xFE5
  7416                           fsr1l	equ	0xFE1
  7417                           
  7418 ;; *************** function _terminal_setCursorHome *****************
  7419 ;; Defined at:
  7420 ;;		line 85 in file "ring_buffer_interface.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;Total ram usage:        0 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:   16
  7441 ;; This function calls:
  7442 ;;		_printf
  7443 ;; This function is called by:
  7444 ;;		_main
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text1
  7449  018098                     __ptext1:
  7450                           	opt stack 0
  7451  018098                     _terminal_setCursorHome:
  7452                           	opt stack 14
  7453                           
  7454                           ;ring_buffer_interface.c: 86: printf("\033[H");
  7455                           
  7456                           ;incstack = 0
  7457  018098  0EB9               	movlw	low STR_3
  7458  01809A  0101               	movlb	1	; () banked
  7459  01809C  6F7C               	movwf	printf@f& (0+255),b
  7460  01809E  0EFF               	movlw	high STR_3
  7461  0180A0  6F7D               	movwf	(printf@f+1)& (0+255),b
  7462  0180A2  EC52  F086         	call	_printf	;wreg free
  7463  0180A6  0012               	return		;funcret
  7464  0180A8                     __end_of_terminal_setCursorHome:
  7465                           	opt stack 0
  7466                           tblptru	equ	0xFF8
  7467                           tblptrh	equ	0xFF7
  7468                           tblptrl	equ	0xFF6
  7469                           tablat	equ	0xFF5
  7470                           intcon	equ	0xFF2
  7471                           postinc0	equ	0xFEE
  7472                           wreg	equ	0xFE8
  7473                           postdec1	equ	0xFE5
  7474                           fsr1l	equ	0xFE1
  7475                           
  7476 ;; *************** function _terminal_ringBufferPull *****************
  7477 ;; Defined at:
  7478 ;;		line 12 in file "ring_buffer_interface.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;		None
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  index           2  197[BANK1 ] int 
  7483 ;;  index           2  199[BANK1 ] int 
  7484 ;;  charNumber      2  195[BANK1 ] int 
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  1    wreg      void 
  7487 ;; Registers used:
  7488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7495 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7496 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7497 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7498 ;;Total ram usage:        9 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:   19
  7501 ;; This function calls:
  7502 ;;		_EUSART2_Read
  7503 ;;		_ringBufferLUT
  7504 ;;		_strlen
  7505 ;; This function is called by:
  7506 ;;		_main
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text2
  7511  016684                     __ptext2:
  7512                           	opt stack 0
  7513  016684                     _terminal_ringBufferPull:
  7514                           	opt stack 11
  7515                           
  7516                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  7517                           
  7518                           ;incstack = 0
  7519  016684  C1DE  F1C3         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  7520  016688  0101               	movlb	1	; () banked
  7521  01668A  6BC4               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  7522                           
  7523                           ; BSR set to: 1
  7524                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  7525  01668C  0E00               	movlw	0
  7526  01668E  6FC8               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  7527  016690  0E00               	movlw	0
  7528  016692  6FC7               	movwf	terminal_ringBufferPull@index& (0+255),b
  7529  016694                     l13818:
  7530                           
  7531                           ; BSR set to: 1
  7532  016694  BFC8               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  7533  016696  D006               	goto	l1035
  7534  016698  51C8               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7535  01669A  E10F               	bnz	l13828
  7536  01669C  0E40               	movlw	64
  7537  01669E  5DC7               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  7538  0166A0  B0D8               	btfsc	status,0,c
  7539  0166A2  D00B               	goto	u16780
  7540  0166A4                     l1035:
  7541                           
  7542                           ; BSR set to: 1
  7543                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  7544                           
  7545                           ; BSR set to: 1
  7546  0166A4  0E79               	movlw	low _line
  7547  0166A6  25C7               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  7548  0166A8  6ED9               	movwf	fsr2l,c
  7549  0166AA  0E02               	movlw	high _line
  7550  0166AC  21C8               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7551  0166AE  6EDA               	movwf	fsr2h,c
  7552  0166B0  0E00               	movlw	0
  7553  0166B2  6EDF               	movwf	indf2,c
  7554                           
  7555                           ; BSR set to: 1
  7556  0166B4  4BC7               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  7557  0166B6  2BC8               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  7558  0166B8  D7ED               	goto	l13818
  7559  0166BA                     u16780:
  7560  0166BA                     l13828:
  7561                           
  7562                           ; BSR set to: 1
  7563                           ;ring_buffer_interface.c: 21: }
  7564                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  7565  0166BA  0E00               	movlw	0
  7566  0166BC  6FC6               	movwf	(terminal_ringBufferPull@index_2365+1)& (0+255),b
  7567  0166BE  0E00               	movlw	0
  7568  0166C0  6FC5               	movwf	terminal_ringBufferPull@index_2365& (0+255),b
  7569  0166C2  D00E               	goto	l1037
  7570  0166C4                     
  7571                           ; BSR set to: 1
  7572                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  7573                           
  7574                           ; BSR set to: 1
  7575  0166C4  EC39  F0BD         	call	_EUSART2_Read	;wreg free
  7576  0166C8  0101               	movlb	1	; () banked
  7577  0166CA  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7578  0166CC  0E79               	movlw	low _line
  7579  0166CE  25C5               	addwf	terminal_ringBufferPull@index_2365& (0+255),w,b
  7580  0166D0  6ED9               	movwf	fsr2l,c
  7581  0166D2  0E02               	movlw	high _line
  7582  0166D4  21C6               	addwfc	(terminal_ringBufferPull@index_2365+1)& (0+255),w,b
  7583  0166D6  6EDA               	movwf	fsr2h,c
  7584  0166D8  C1C0  FFDF         	movff	??_terminal_ringBufferPull,indf2
  7585                           
  7586                           ; BSR set to: 1
  7587  0166DC  4BC5               	infsnz	terminal_ringBufferPull@index_2365& (0+255),f,b
  7588  0166DE  2BC6               	incf	(terminal_ringBufferPull@index_2365+1)& (0+255),f,b
  7589  0166E0                     l1037:
  7590                           
  7591                           ; BSR set to: 1
  7592                           
  7593                           ; BSR set to: 1
  7594  0166E0  51C3               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  7595  0166E2  5DC5               	subwf	terminal_ringBufferPull@index_2365& (0+255),w,b
  7596  0166E4  51C6               	movf	(terminal_ringBufferPull@index_2365+1)& (0+255),w,b
  7597  0166E6  0A80               	xorlw	128
  7598  0166E8  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7599  0166EA  51C4               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  7600  0166EC  0A80               	xorlw	128
  7601  0166EE  59C0               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  7602  0166F0  A0D8               	btfss	status,0,c
  7603  0166F2  D7E8               	goto	l1038
  7604                           
  7605                           ; BSR set to: 1
  7606                           ;ring_buffer_interface.c: 28: }
  7607                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  7608  0166F4  C0F4  F1DF         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  7609                           
  7610                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  7611                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  7612  0166F8  D017               	goto	l1040
  7613  0166FA                     
  7614                           ; BSR set to: 1
  7615                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  7616                           
  7617                           ; BSR set to: 1
  7618  0166FA  0EFF               	movlw	255
  7619  0166FC  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7620  0166FE  0EFF               	movlw	255
  7621  016700  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7622  016702  0E79               	movlw	low _line
  7623  016704  6F17               	movwf	strlen@s& (0+255),b
  7624  016706  0E02               	movlw	high _line
  7625  016708  6F18               	movwf	(strlen@s+1)& (0+255),b
  7626  01670A  ECFC  F0BB         	call	_strlen	;wreg free
  7627  01670E  0101               	movlb	1	; () banked
  7628  016710  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7629  016712  2717               	addwf	?_strlen& (0+255),f,b
  7630  016714  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7631  016716  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7632  016718  0E79               	movlw	low _line
  7633  01671A  2517               	addwf	?_strlen& (0+255),w,b
  7634  01671C  6ED9               	movwf	fsr2l,c
  7635  01671E  0E02               	movlw	high _line
  7636  016720  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7637  016722  6EDA               	movwf	fsr2h,c
  7638  016724  0E00               	movlw	0
  7639  016726  6EDF               	movwf	indf2,c
  7640  016728                     l1040:
  7641                           
  7642                           ; BSR set to: 1
  7643  016728  0EFF               	movlw	255
  7644  01672A  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7645  01672C  0EFF               	movlw	255
  7646  01672E  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7647  016730  0E79               	movlw	low _line
  7648  016732  6F17               	movwf	strlen@s& (0+255),b
  7649  016734  0E02               	movlw	high _line
  7650  016736  6F18               	movwf	(strlen@s+1)& (0+255),b
  7651  016738  ECFC  F0BB         	call	_strlen	;wreg free
  7652  01673C  0101               	movlb	1	; () banked
  7653  01673E  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7654  016740  2717               	addwf	?_strlen& (0+255),f,b
  7655  016742  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7656  016744  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7657  016746  0E79               	movlw	low _line
  7658  016748  2517               	addwf	?_strlen& (0+255),w,b
  7659  01674A  6ED9               	movwf	fsr2l,c
  7660  01674C  0E02               	movlw	high _line
  7661  01674E  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7662  016750  6EDA               	movwf	fsr2h,c
  7663  016752  0E0A               	movlw	10
  7664  016754  18DE               	xorwf	postinc2,w,c
  7665  016756  B4D8               	btfsc	status,2,c
  7666  016758  D7D0               	goto	l1041
  7667                           
  7668                           ; BSR set to: 1
  7669  01675A  0EFF               	movlw	255
  7670  01675C  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  7671  01675E  0EFF               	movlw	255
  7672  016760  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7673  016762  0E79               	movlw	low _line
  7674  016764  6F17               	movwf	strlen@s& (0+255),b
  7675  016766  0E02               	movlw	high _line
  7676  016768  6F18               	movwf	(strlen@s+1)& (0+255),b
  7677  01676A  ECFC  F0BB         	call	_strlen	;wreg free
  7678  01676E  0101               	movlb	1	; () banked
  7679  016770  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7680  016772  2717               	addwf	?_strlen& (0+255),f,b
  7681  016774  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7682  016776  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7683  016778  0E79               	movlw	low _line
  7684  01677A  2517               	addwf	?_strlen& (0+255),w,b
  7685  01677C  6ED9               	movwf	fsr2l,c
  7686  01677E  0E02               	movlw	high _line
  7687  016780  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7688  016782  6EDA               	movwf	fsr2h,c
  7689  016784  0E0D               	movlw	13
  7690  016786  18DE               	xorwf	postinc2,w,c
  7691  016788  B4D8               	btfsc	status,2,c
  7692  01678A  D7B7               	goto	l1041
  7693                           
  7694                           ; BSR set to: 1
  7695                           ;ring_buffer_interface.c: 40: }
  7696                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  7697  01678C  0100               	movlb	0	; () banked
  7698  01678E  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  7702  016790  0E79               	movlw	low _line
  7703  016792  0101               	movlb	1	; () banked
  7704  016794  6FBC               	movwf	ringBufferLUT@line& (0+255),b
  7705  016796  0E02               	movlw	high _line
  7706  016798  6FBD               	movwf	(ringBufferLUT@line+1)& (0+255),b
  7707  01679A  EC00  F080         	call	_ringBufferLUT	;wreg free
  7708  01679E  0012               	return		;funcret
  7709  0167A0                     __end_of_terminal_ringBufferPull:
  7710                           	opt stack 0
  7711                           tblptru	equ	0xFF8
  7712                           tblptrh	equ	0xFF7
  7713                           tblptrl	equ	0xFF6
  7714                           tablat	equ	0xFF5
  7715                           intcon	equ	0xFF2
  7716                           postinc0	equ	0xFEE
  7717                           wreg	equ	0xFE8
  7718                           postdec1	equ	0xFE5
  7719                           fsr1l	equ	0xFE1
  7720                           indf2	equ	0xFDF
  7721                           postinc2	equ	0xFDE
  7722                           fsr2h	equ	0xFDA
  7723                           fsr2l	equ	0xFD9
  7724                           status	equ	0xFD8
  7725                           
  7726 ;; *************** function _ringBufferLUT *****************
  7727 ;; Defined at:
  7728 ;;		line 43 in file "ring_buffer_LUT.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  line            2  188[BANK1 ] PTR unsigned char 
  7731 ;;		 -> line(64), 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  angle_degree    4   22[BANK3 ] PTR unsigned char 
  7734 ;;  index           2   29[BANK3 ] int 
  7735 ;;  channel_name   22    0[BANK3 ] unsigned char [22]
  7736 ;;  userID          2   33[BANK3 ] int 
  7737 ;;  arg_buff        3   26[BANK3 ] unsigned char [3]
  7738 ;;  percentage      2   31[BANK3 ] int 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7748 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7749 ;;      Locals:         0       0       0       0      35       0       0       0       0       0       0       0       
      +0       0       0
  7750 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7751 ;;      Totals:         0       0       4       0      35       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;Total ram usage:       39 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:   18
  7755 ;; This function calls:
  7756 ;;		_TMR7_StartTimer
  7757 ;;		___fladd
  7758 ;;		___fldiv
  7759 ;;		___flmul
  7760 ;;		___flneg
  7761 ;;		___wmul
  7762 ;;		___xxtofl
  7763 ;;		_atoi
  7764 ;;		_getCauseOfResetString
  7765 ;;		_getDeviceID
  7766 ;;		_getDeviceIDString
  7767 ;;		_getMajorRevisionID
  7768 ;;		_getMinorRevisionID
  7769 ;;		_getUserID
  7770 ;;		_printf
  7771 ;;		_strcmp
  7772 ;;		_strcpy
  7773 ;;		_strstr
  7774 ;;		_terminal_printNewline
  7775 ;;		_terminal_textAttributes
  7776 ;;		_terminal_textAttributesReset
  7777 ;; This function is called by:
  7778 ;;		_terminal_ringBufferPull
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text3
  7783  010000                     __ptext3:
  7784                           	opt stack 0
  7785  010000                     _ringBufferLUT:
  7786                           	opt stack 11
  7787                           
  7788                           ;ring_buffer_LUT.c: 49: if((0 == strcmp(line, "Reset"))) {
  7789                           
  7790                           ;incstack = 0
  7791  010000  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7792  010004  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7793  010008  0E28               	movlw	low (STR_123+10)
  7794  01000A  0101               	movlb	1	; () banked
  7795  01000C  6F19               	movwf	strcmp@s2& (0+255),b
  7796  01000E  0EFE               	movlw	high (STR_123+10)
  7797  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7798  010012  EC51  F0BC         	call	_strcmp	;wreg free
  7799  010016  0101               	movlb	1	; () banked
  7800  010018  5117               	movf	?_strcmp& (0+255),w,b
  7801  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7802  01001C  A4D8               	btfss	status,2,c
  7803  01001E  D00F               	goto	l1184
  7804                           
  7805                           ; BSR set to: 1
  7806                           ;ring_buffer_LUT.c: 52: printf("\033[2J");
  7807  010020  0EB0               	movlw	low STR_2
  7808  010022  6F7C               	movwf	printf@f& (0+255),b
  7809  010024  0EFF               	movlw	high STR_2
  7810  010026  6F7D               	movwf	(printf@f+1)& (0+255),b
  7811  010028  EC52  F086         	call	_printf	;wreg free
  7812                           
  7813                           ;ring_buffer_LUT.c: 55: printf("\033[H");
  7814  01002C  0EB9               	movlw	low STR_3
  7815  01002E  0101               	movlb	1	; () banked
  7816  010030  6F7C               	movwf	printf@f& (0+255),b
  7817  010032  0EFF               	movlw	high STR_3
  7818  010034  6F7D               	movwf	(printf@f+1)& (0+255),b
  7819  010036  EC52  F086         	call	_printf	;wreg free
  7820  01003A  00FF               	reset		;# 
  7821                           
  7822                           ;ring_buffer_LUT.c: 60: }
  7823  01003C  0012               	return	
  7824  01003E                     l1184:
  7825                           
  7826                           ;ring_buffer_LUT.c: 63: else if((0 == strcmp(line, "Clear"))) {
  7827  01003E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7828  010042  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7829  010046  0EA0               	movlw	low STR_44
  7830  010048  0101               	movlb	1	; () banked
  7831  01004A  6F19               	movwf	strcmp@s2& (0+255),b
  7832  01004C  0EFF               	movlw	high STR_44
  7833  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7834  010050  EC51  F0BC         	call	_strcmp	;wreg free
  7835  010054  0101               	movlb	1	; () banked
  7836  010056  5117               	movf	?_strcmp& (0+255),w,b
  7837  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7838  01005A  A4D8               	btfss	status,2,c
  7839  01005C  D00E               	goto	l1186
  7840                           
  7841                           ; BSR set to: 1
  7842                           ;ring_buffer_LUT.c: 66: printf("\033[2J");
  7843  01005E  0EB0               	movlw	low STR_2
  7844  010060  6F7C               	movwf	printf@f& (0+255),b
  7845  010062  0EFF               	movlw	high STR_2
  7846  010064  6F7D               	movwf	(printf@f+1)& (0+255),b
  7847  010066  EC52  F086         	call	_printf	;wreg free
  7848                           
  7849                           ;ring_buffer_LUT.c: 69: printf("\033[H");
  7850  01006A  0EB9               	movlw	low STR_3
  7851  01006C  0101               	movlb	1	; () banked
  7852  01006E  6F7C               	movwf	printf@f& (0+255),b
  7853  010070  0EFF               	movlw	high STR_3
  7854  010072  6F7D               	movwf	(printf@f+1)& (0+255),b
  7855  010074  EC52  F086         	call	_printf	;wreg free
  7856                           
  7857                           ;ring_buffer_LUT.c: 71: }
  7858  010078  0012               	return	
  7859  01007A                     l1186:
  7860                           
  7861                           ;ring_buffer_LUT.c: 74: else if((0 == strcmp(line, "Cause of Reset?"))) {
  7862  01007A  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7863  01007E  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7864  010082  0E5E               	movlw	low STR_47
  7865  010084  0101               	movlb	1	; () banked
  7866  010086  6F19               	movwf	strcmp@s2& (0+255),b
  7867  010088  0EFE               	movlw	high STR_47
  7868  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7869  01008C  EC51  F0BC         	call	_strcmp	;wreg free
  7870  010090  0101               	movlb	1	; () banked
  7871  010092  5117               	movf	?_strcmp& (0+255),w,b
  7872  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7873  010096  A4D8               	btfss	status,2,c
  7874  010098  D019               	goto	l1188
  7875                           
  7876                           ; BSR set to: 1
  7877                           ;ring_buffer_LUT.c: 79: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7878  01009A  0E00               	movlw	0
  7879  01009C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  7880  01009E  0E00               	movlw	0
  7881  0100A0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7882  0100A2  0E02               	movlw	2
  7883  0100A4  EC1E  F09A         	call	_terminal_textAttributes
  7884                           
  7885                           ;ring_buffer_LUT.c: 82: printf("The cause of the most recent device reset was: %s\n\r",
  7886                           ;ring_buffer_LUT.c: 83: getCauseOfResetString(reset_cause));
  7887  0100A8  0E7F               	movlw	low STR_48
  7888  0100AA  0101               	movlb	1	; () banked
  7889  0100AC  6F7C               	movwf	printf@f& (0+255),b
  7890  0100AE  0EF9               	movlw	high STR_48
  7891  0100B0  6F7D               	movwf	(printf@f+1)& (0+255),b
  7892  0100B2  0102               	movlb	2	; () banked
  7893  0100B4  51DD               	movf	_reset_cause& (0+255),w,b
  7894  0100B6  ECE3  F0BE         	call	_getCauseOfResetString
  7895  0100BA  C117  F17E         	movff	?_getCauseOfResetString,?_printf+2
  7896  0100BE  C118  F17F         	movff	?_getCauseOfResetString+1,?_printf+3
  7897  0100C2  EC52  F086         	call	_printf	;wreg free
  7898                           
  7899                           ;ring_buffer_LUT.c: 86: terminal_textAttributesReset();
  7900  0100C6  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  7901                           
  7902                           ;ring_buffer_LUT.c: 90: }
  7903  0100CA  0012               	return	
  7904  0100CC                     l1188:
  7905                           
  7906                           ;ring_buffer_LUT.c: 93: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  7907  0100CC  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7908  0100D0  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7909  0100D4  0E9A               	movlw	low STR_49
  7910  0100D6  0101               	movlb	1	; () banked
  7911  0100D8  6F19               	movwf	strcmp@s2& (0+255),b
  7912  0100DA  0EFF               	movlw	high STR_49
  7913  0100DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7914  0100DE  EC51  F0BC         	call	_strcmp	;wreg free
  7915  0100E2  0101               	movlb	1	; () banked
  7916  0100E4  5117               	movf	?_strcmp& (0+255),w,b
  7917  0100E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7918  0100E8  B4D8               	btfsc	status,2,c
  7919  0100EA  D00F               	goto	u15710
  7920                           
  7921                           ; BSR set to: 1
  7922  0100EC  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7923  0100F0  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7924  0100F4  0EB5               	movlw	low STR_50
  7925  0100F6  6F19               	movwf	strcmp@s2& (0+255),b
  7926  0100F8  0EFF               	movlw	high STR_50
  7927  0100FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7928  0100FC  EC51  F0BC         	call	_strcmp	;wreg free
  7929  010100  0101               	movlb	1	; () banked
  7930  010102  5117               	movf	?_strcmp& (0+255),w,b
  7931  010104  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7932  010106  A4D8               	btfss	status,2,c
  7933  010108  D018               	goto	l1190
  7934  01010A                     u15710:
  7935                           
  7936                           ; BSR set to: 1
  7937                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7938                           
  7939                           ; BSR set to: 1
  7940  01010A  0E00               	movlw	0
  7941  01010C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  7942  01010E  0E00               	movlw	0
  7943  010110  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7944  010112  0E02               	movlw	2
  7945  010114  EC1E  F09A         	call	_terminal_textAttributes
  7946                           
  7947                           ;ring_buffer_LUT.c: 100: printf("AC Power Meter\n\r");
  7948  010118  0EFC               	movlw	low STR_51
  7949  01011A  0101               	movlb	1	; () banked
  7950  01011C  6F7C               	movwf	printf@f& (0+255),b
  7951  01011E  0EFD               	movlw	high STR_51
  7952  010120  6F7D               	movwf	(printf@f+1)& (0+255),b
  7953  010122  EC52  F086         	call	_printf	;wreg free
  7954                           
  7955                           ;ring_buffer_LUT.c: 101: printf("Marquette University ELEN 3035 Final Project\n\r");
  7956  010126  0EE3               	movlw	low STR_52
  7957  010128  0101               	movlb	1	; () banked
  7958  01012A  6F7C               	movwf	printf@f& (0+255),b
  7959  01012C  0EF9               	movlw	high STR_52
  7960  01012E  6F7D               	movwf	(printf@f+1)& (0+255),b
  7961  010130  EC52  F086         	call	_printf	;wreg free
  7962                           
  7963                           ;ring_buffer_LUT.c: 103: terminal_textAttributesReset();
  7964  010134  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  7965                           
  7966                           ;ring_buffer_LUT.c: 107: }
  7967  010138  0012               	return	
  7968  01013A                     l1190:
  7969                           
  7970                           ;ring_buffer_LUT.c: 110: else if((0 == strcmp(line, "Device ID?"))) {
  7971  01013A  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  7972  01013E  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7973  010142  0E5C               	movlw	low STR_53
  7974  010144  0101               	movlb	1	; () banked
  7975  010146  6F19               	movwf	strcmp@s2& (0+255),b
  7976  010148  0EFF               	movlw	high STR_53
  7977  01014A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7978  01014C  EC51  F0BC         	call	_strcmp	;wreg free
  7979  010150  0101               	movlb	1	; () banked
  7980  010152  5117               	movf	?_strcmp& (0+255),w,b
  7981  010154  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7982  010156  A4D8               	btfss	status,2,c
  7983  010158  D023               	goto	l1194
  7984                           
  7985                           ; BSR set to: 1
  7986                           ;ring_buffer_LUT.c: 115: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7987  01015A  0E00               	movlw	0
  7988  01015C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  7989  01015E  0E00               	movlw	0
  7990  010160  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7991  010162  0E02               	movlw	2
  7992  010164  EC1E  F09A         	call	_terminal_textAttributes
  7993                           
  7994                           ;ring_buffer_LUT.c: 118: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
  7995                           ;ring_buffer_LUT.c: 119: "part number of %s\n\r",
  7996                           ;ring_buffer_LUT.c: 120: getDeviceID(),
  7997                           ;ring_buffer_LUT.c: 121: getDeviceIDString(getDeviceID()));
  7998  010168  0ED4               	movlw	low STR_54
  7999  01016A  0101               	movlb	1	; () banked
  8000  01016C  6F7C               	movwf	printf@f& (0+255),b
  8001  01016E  0EF6               	movlw	high STR_54
  8002  010170  6F7D               	movwf	(printf@f+1)& (0+255),b
  8003  010172  ECD9  F0BF         	call	_getDeviceID	;wreg free
  8004  010176  C122  F17E         	movff	?_getDeviceID,?_printf+2
  8005  01017A  C123  F17F         	movff	?_getDeviceID+1,?_printf+3
  8006  01017E  ECD9  F0BF         	call	_getDeviceID	;wreg free
  8007  010182  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
  8008  010186  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
  8009  01018A  ECCC  F0BB         	call	_getDeviceIDString	;wreg free
  8010  01018E  C124  F180         	movff	?_getDeviceIDString,?_printf+4
  8011  010192  C125  F181         	movff	?_getDeviceIDString+1,?_printf+5
  8012  010196  EC52  F086         	call	_printf	;wreg free
  8013                           
  8014                           ;ring_buffer_LUT.c: 124: terminal_textAttributesReset();
  8015  01019A  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8016                           
  8017                           ;ring_buffer_LUT.c: 128: }
  8018  01019E  0012               	return	
  8019  0101A0                     l1194:
  8020                           
  8021                           ;ring_buffer_LUT.c: 131: else if((0 == strcmp(line, "Revision ID?"))) {
  8022  0101A0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8023  0101A4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8024  0101A8  0E1D               	movlw	low STR_55
  8025  0101AA  0101               	movlb	1	; () banked
  8026  0101AC  6F19               	movwf	strcmp@s2& (0+255),b
  8027  0101AE  0EFF               	movlw	high STR_55
  8028  0101B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8029  0101B2  EC51  F0BC         	call	_strcmp	;wreg free
  8030  0101B6  0101               	movlb	1	; () banked
  8031  0101B8  5117               	movf	?_strcmp& (0+255),w,b
  8032  0101BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8033  0101BC  A4D8               	btfss	status,2,c
  8034  0101BE  D022               	goto	l1196
  8035                           
  8036                           ; BSR set to: 1
  8037                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8038  0101C0  0E00               	movlw	0
  8039  0101C2  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8040  0101C4  0E00               	movlw	0
  8041  0101C6  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8042  0101C8  0E02               	movlw	2
  8043  0101CA  EC1E  F09A         	call	_terminal_textAttributes
  8044                           
  8045                           ;ring_buffer_LUT.c: 139: printf("Device silicon revision ID as stored in Flash is: %c%d\
      +                          n\r",
  8046                           ;ring_buffer_LUT.c: 140: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
  8047  0101CE  0E6B               	movlw	low STR_56
  8048  0101D0  0101               	movlb	1	; () banked
  8049  0101D2  6F7C               	movwf	printf@f& (0+255),b
  8050  0101D4  0EF8               	movlw	high STR_56
  8051  0101D6  6F7D               	movwf	(printf@f+1)& (0+255),b
  8052  0101D8  EC08  F0BE         	call	_getMajorRevisionID	;wreg free
  8053  0101DC  0101               	movlb	1	; () banked
  8054  0101DE  6FBE               	movwf	??_ringBufferLUT& (0+255),b
  8055  0101E0  0E41               	movlw	65
  8056  0101E2  25BE               	addwf	??_ringBufferLUT& (0+255),w,b
  8057  0101E4  6F7E               	movwf	(?_printf+2)& (0+255),b
  8058  0101E6  6B7F               	clrf	(?_printf+3)& (0+255),b
  8059  0101E8  0E00               	movlw	0
  8060  0101EA  237F               	addwfc	(?_printf+3)& (0+255),f,b
  8061  0101EC  EC7D  F0BF         	call	_getMinorRevisionID	;wreg free
  8062  0101F0  0101               	movlb	1	; () banked
  8063  0101F2  6FBF               	movwf	(??_ringBufferLUT+1)& (0+255),b
  8064  0101F4  51BF               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  8065  0101F6  6F80               	movwf	(?_printf+4)& (0+255),b
  8066  0101F8  6B81               	clrf	(?_printf+5)& (0+255),b
  8067  0101FA  EC52  F086         	call	_printf	;wreg free
  8068                           
  8069                           ;ring_buffer_LUT.c: 143: terminal_textAttributesReset();
  8070  0101FE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8071                           
  8072                           ;ring_buffer_LUT.c: 147: }
  8073  010202  0012               	return	
  8074  010204                     l1196:
  8075                           
  8076                           ;ring_buffer_LUT.c: 150: else if((0 == strcmp(line, "User IDs?"))) {
  8077  010204  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8078  010208  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8079  01020C  0E72               	movlw	low STR_57
  8080  01020E  0101               	movlb	1	; () banked
  8081  010210  6F19               	movwf	strcmp@s2& (0+255),b
  8082  010212  0EFF               	movlw	high STR_57
  8083  010214  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8084  010216  EC51  F0BC         	call	_strcmp	;wreg free
  8085  01021A  0101               	movlb	1	; () banked
  8086  01021C  5117               	movf	?_strcmp& (0+255),w,b
  8087  01021E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8088  010220  A4D8               	btfss	status,2,c
  8089  010222  D03E               	goto	l1198
  8090                           
  8091                           ; BSR set to: 1
  8092                           ;ring_buffer_LUT.c: 155: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8093  010224  0E00               	movlw	0
  8094  010226  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8095  010228  0E00               	movlw	0
  8096  01022A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8097  01022C  0E02               	movlw	2
  8098  01022E  EC1E  F09A         	call	_terminal_textAttributes
  8099                           
  8100                           ;ring_buffer_LUT.c: 157: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  8101  010232  0EB2               	movlw	low STR_58
  8102  010234  0101               	movlb	1	; () banked
  8103  010236  6F7C               	movwf	printf@f& (0+255),b
  8104  010238  0EF7               	movlw	high STR_58
  8105  01023A  6F7D               	movwf	(printf@f+1)& (0+255),b
  8106  01023C  EC52  F086         	call	_printf	;wreg free
  8107                           
  8108                           ;ring_buffer_LUT.c: 160: for (int userID = 0; userID <= 7; userID++) {
  8109  010240  0E00               	movlw	0
  8110  010242  0103               	movlb	3	; () banked
  8111  010244  6FA2               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  8112  010246  0E00               	movlw	0
  8113  010248  6FA1               	movwf	ringBufferLUT@userID& (0+255),b
  8114  01024A                     l13228:
  8115                           
  8116                           ; BSR set to: 3
  8117  01024A  BFA2               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  8118  01024C  D006               	goto	l1199
  8119  01024E  51A2               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  8120  010250  E124               	bnz	l13238
  8121  010252  0E08               	movlw	8
  8122  010254  5DA1               	subwf	ringBufferLUT@userID& (0+255),w,b
  8123  010256  B0D8               	btfsc	status,0,c
  8124  010258  D020               	goto	u15760
  8125  01025A                     l1199:
  8126                           
  8127                           ; BSR set to: 3
  8128                           ;ring_buffer_LUT.c: 162: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
  8129                           ;ring_buffer_LUT.c: 163: userID,
  8130                           ;ring_buffer_LUT.c: 164: (2 * userID),
  8131                           ;ring_buffer_LUT.c: 165: getUserID(userID));
  8132                           
  8133                           ; BSR set to: 3
  8134  01025A  0E14               	movlw	low STR_59
  8135  01025C  0101               	movlb	1	; () banked
  8136  01025E  6F7C               	movwf	printf@f& (0+255),b
  8137  010260  0EF9               	movlw	high STR_59
  8138  010262  6F7D               	movwf	(printf@f+1)& (0+255),b
  8139  010264  C3A1  F17E         	movff	ringBufferLUT@userID,?_printf+2
  8140  010268  C3A2  F17F         	movff	ringBufferLUT@userID+1,?_printf+3
  8141  01026C  90D8               	bcf	status,0,c
  8142  01026E  0103               	movlb	3	; () banked
  8143  010270  35A1               	rlcf	ringBufferLUT@userID& (0+255),w,b
  8144  010272  0101               	movlb	1	; () banked
  8145  010274  6F80               	movwf	(?_printf+4)& (0+255),b
  8146  010276  0103               	movlb	3	; () banked
  8147  010278  35A2               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  8148  01027A  0101               	movlb	1	; () banked
  8149  01027C  6F81               	movwf	(?_printf+5)& (0+255),b
  8150  01027E  0103               	movlb	3	; () banked
  8151  010280  51A1               	movf	ringBufferLUT@userID& (0+255),w,b
  8152  010282  ECA5  F0BD         	call	_getUserID
  8153  010286  C122  F182         	movff	?_getUserID,?_printf+6
  8154  01028A  C123  F183         	movff	?_getUserID+1,?_printf+7
  8155  01028E  EC52  F086         	call	_printf	;wreg free
  8156  010292  0103               	movlb	3	; () banked
  8157  010294  4BA1               	infsnz	ringBufferLUT@userID& (0+255),f,b
  8158  010296  2BA2               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  8159  010298  D7D8               	goto	l13228
  8160  01029A                     u15760:
  8161  01029A                     l13238:
  8162                           
  8163                           ; BSR set to: 3
  8164                           ;ring_buffer_LUT.c: 167: }
  8165                           ;ring_buffer_LUT.c: 170: terminal_textAttributesReset();
  8166  01029A  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8167                           
  8168                           ;ring_buffer_LUT.c: 174: }
  8169  01029E  0012               	return	
  8170  0102A0                     l1198:
  8171                           
  8172                           ;ring_buffer_LUT.c: 177: else if((0 == strcmp(line, "ADC Error?"))) {
  8173  0102A0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8174  0102A4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8175  0102A8  0E67               	movlw	low STR_60
  8176  0102AA  0101               	movlb	1	; () banked
  8177  0102AC  6F19               	movwf	strcmp@s2& (0+255),b
  8178  0102AE  0EFF               	movlw	high STR_60
  8179  0102B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8180  0102B2  EC51  F0BC         	call	_strcmp	;wreg free
  8181  0102B6  0101               	movlb	1	; () banked
  8182  0102B8  5117               	movf	?_strcmp& (0+255),w,b
  8183  0102BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8184  0102BC  A4D8               	btfss	status,2,c
  8185  0102BE  D0A4               	goto	l1202
  8186                           
  8187                           ; BSR set to: 1
  8188                           ;ring_buffer_LUT.c: 179: if (adc_error_flag) {
  8189  0102C0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8190  0102C2  D090               	goto	l1203
  8191                           
  8192                           ; BSR set to: 1
  8193                           ;ring_buffer_LUT.c: 184: terminal_textAttributes(RED, BLACK, NORMAL);
  8194  0102C4  0E00               	movlw	0
  8195  0102C6  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8196  0102C8  0E00               	movlw	0
  8197  0102CA  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8198  0102CC  0E01               	movlw	1
  8199  0102CE  EC1E  F09A         	call	_terminal_textAttributes
  8200                           
  8201                           ;ring_buffer_LUT.c: 187: current_adc_channel = ADPCH;
  8202  0102D2  CF5F F1DD          	movff	3935,_current_adc_channel	;volatile
  8203                           
  8204                           ;ring_buffer_LUT.c: 190: char channel_name[22];
  8205                           ;ring_buffer_LUT.c: 192: switch (current_adc_channel) {
  8206  0102D6  D060               	goto	l1204
  8207  0102D8                     
  8208                           ;ring_buffer_LUT.c: 195: strcpy(channel_name, "ISNS");
  8209  0102D8  0E80               	movlw	low ringBufferLUT@channel_name
  8210  0102DA  0101               	movlb	1	; () banked
  8211  0102DC  6F17               	movwf	strcpy@to& (0+255),b
  8212  0102DE  0E03               	movlw	high ringBufferLUT@channel_name
  8213  0102E0  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8214  0102E2  0EA6               	movlw	low STR_61
  8215  0102E4  6F19               	movwf	strcpy@from& (0+255),b
  8216  0102E6  0EFF               	movlw	high STR_61
  8217  0102E8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8218  0102EA  EC60  F0BE         	call	_strcpy	;wreg free
  8219                           
  8220                           ;ring_buffer_LUT.c: 196: break;
  8221  0102EE  D06C               	goto	l1206
  8222  0102F0                     
  8223                           ;ring_buffer_LUT.c: 199: strcpy(channel_name, "POS12");
  8224  0102F0  0E80               	movlw	low ringBufferLUT@channel_name
  8225  0102F2  0101               	movlb	1	; () banked
  8226  0102F4  6F17               	movwf	strcpy@to& (0+255),b
  8227  0102F6  0E03               	movlw	high ringBufferLUT@channel_name
  8228  0102F8  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8229  0102FA  0E94               	movlw	low STR_62
  8230  0102FC  6F19               	movwf	strcpy@from& (0+255),b
  8231  0102FE  0EFF               	movlw	high STR_62
  8232  010300  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8233  010302  EC60  F0BE         	call	_strcpy	;wreg free
  8234                           
  8235                           ;ring_buffer_LUT.c: 200: break;
  8236  010306  D060               	goto	l1206
  8237  010308                     
  8238                           ;ring_buffer_LUT.c: 203: strcpy(channel_name, "POS3P3");
  8239  010308  0E80               	movlw	low ringBufferLUT@channel_name
  8240  01030A  0101               	movlb	1	; () banked
  8241  01030C  6F17               	movwf	strcpy@to& (0+255),b
  8242  01030E  0E03               	movlw	high ringBufferLUT@channel_name
  8243  010310  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8244  010312  0E8D               	movlw	low STR_63
  8245  010314  6F19               	movwf	strcpy@from& (0+255),b
  8246  010316  0EFF               	movlw	high STR_63
  8247  010318  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8248  01031A  EC60  F0BE         	call	_strcpy	;wreg free
  8249                           
  8250                           ;ring_buffer_LUT.c: 204: break;
  8251  01031E  D054               	goto	l1206
  8252  010320                     
  8253                           ;ring_buffer_LUT.c: 207: strcpy(channel_name, "Internal AVSS");
  8254  010320  0E80               	movlw	low ringBufferLUT@channel_name
  8255  010322  0101               	movlb	1	; () banked
  8256  010324  6F17               	movwf	strcpy@to& (0+255),b
  8257  010326  0E03               	movlw	high ringBufferLUT@channel_name
  8258  010328  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8259  01032A  0EF4               	movlw	low STR_64
  8260  01032C  6F19               	movwf	strcpy@from& (0+255),b
  8261  01032E  0EFE               	movlw	high STR_64
  8262  010330  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8263  010332  EC60  F0BE         	call	_strcpy	;wreg free
  8264                           
  8265                           ;ring_buffer_LUT.c: 208: break;
  8266  010336  D048               	goto	l1206
  8267  010338                     
  8268                           ;ring_buffer_LUT.c: 211: strcpy(channel_name, "Internal Temp");
  8269  010338  0E80               	movlw	low ringBufferLUT@channel_name
  8270  01033A  0101               	movlb	1	; () banked
  8271  01033C  6F17               	movwf	strcpy@to& (0+255),b
  8272  01033E  0E03               	movlw	high ringBufferLUT@channel_name
  8273  010340  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8274  010342  0E02               	movlw	low STR_65
  8275  010344  6F19               	movwf	strcpy@from& (0+255),b
  8276  010346  0EFF               	movlw	high STR_65
  8277  010348  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8278  01034A  EC60  F0BE         	call	_strcpy	;wreg free
  8279                           
  8280                           ;ring_buffer_LUT.c: 212: break;
  8281  01034E  D03C               	goto	l1206
  8282  010350                     
  8283                           ;ring_buffer_LUT.c: 215: strcpy(channel_name, "Internal DAC1");
  8284  010350  0E80               	movlw	low ringBufferLUT@channel_name
  8285  010352  0101               	movlb	1	; () banked
  8286  010354  6F17               	movwf	strcpy@to& (0+255),b
  8287  010356  0E03               	movlw	high ringBufferLUT@channel_name
  8288  010358  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8289  01035A  0ECA               	movlw	low STR_66
  8290  01035C  6F19               	movwf	strcpy@from& (0+255),b
  8291  01035E  0EFE               	movlw	high STR_66
  8292  010360  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8293  010362  EC60  F0BE         	call	_strcpy	;wreg free
  8294                           
  8295                           ;ring_buffer_LUT.c: 216: break;
  8296  010366  D030               	goto	l1206
  8297  010368                     
  8298                           ;ring_buffer_LUT.c: 219: strcpy(channel_name, "Internal FVR Buffer 1");
  8299  010368  0E80               	movlw	low ringBufferLUT@channel_name
  8300  01036A  0101               	movlb	1	; () banked
  8301  01036C  6F17               	movwf	strcpy@to& (0+255),b
  8302  01036E  0E03               	movlw	high ringBufferLUT@channel_name
  8303  010370  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8304  010372  0E5C               	movlw	low STR_67
  8305  010374  6F19               	movwf	strcpy@from& (0+255),b
  8306  010376  0EFD               	movlw	high STR_67
  8307  010378  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8308  01037A  EC60  F0BE         	call	_strcpy	;wreg free
  8309                           
  8310                           ;ring_buffer_LUT.c: 220: break;
  8311  01037E  D024               	goto	l1206
  8312  010380                     
  8313                           ;ring_buffer_LUT.c: 223: strcpy(channel_name, "Undefined");
  8314  010380  0E80               	movlw	low ringBufferLUT@channel_name
  8315  010382  0101               	movlb	1	; () banked
  8316  010384  6F17               	movwf	strcpy@to& (0+255),b
  8317  010386  0E03               	movlw	high ringBufferLUT@channel_name
  8318  010388  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8319  01038A  0E7C               	movlw	low STR_68
  8320  01038C  6F19               	movwf	strcpy@from& (0+255),b
  8321  01038E  0EFF               	movlw	high STR_68
  8322  010390  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8323  010392  EC60  F0BE         	call	_strcpy	;wreg free
  8324                           
  8325                           ;ring_buffer_LUT.c: 226: }
  8326                           
  8327                           ;ring_buffer_LUT.c: 224: break;
  8328  010396  D018               	goto	l1206
  8329  010398                     l1204:
  8330  010398  0101               	movlb	1	; () banked
  8331  01039A  51DD               	movf	_current_adc_channel& (0+255),w,b
  8332                           
  8333                           ; Switch size 1, requested type "space"
  8334                           ; Number of cases is 7, Range of values is 0 to 63
  8335                           ; switch strategies available:
  8336                           ; Name         Instructions Cycles
  8337                           ; simple_byte           22    12 (average)
  8338                           ;	Chosen strategy is simple_byte
  8339  01039C  0A00               	xorlw	0	; case 0
  8340  01039E  B4D8               	btfsc	status,2,c
  8341  0103A0  D79B               	goto	l1205
  8342  0103A2  0A04               	xorlw	4	; case 4
  8343  0103A4  B4D8               	btfsc	status,2,c
  8344  0103A6  D7A4               	goto	l1207
  8345  0103A8  0A26               	xorlw	38	; case 34
  8346  0103AA  B4D8               	btfsc	status,2,c
  8347  0103AC  D7AD               	goto	l1208
  8348  0103AE  0A1E               	xorlw	30	; case 60
  8349  0103B0  B4D8               	btfsc	status,2,c
  8350  0103B2  D7B6               	goto	l1209
  8351  0103B4  0A01               	xorlw	1	; case 61
  8352  0103B6  B4D8               	btfsc	status,2,c
  8353  0103B8  D7BF               	goto	l1210
  8354  0103BA  0A03               	xorlw	3	; case 62
  8355  0103BC  B4D8               	btfsc	status,2,c
  8356  0103BE  D7C8               	goto	l1211
  8357  0103C0  0A01               	xorlw	1	; case 63
  8358  0103C2  B4D8               	btfsc	status,2,c
  8359  0103C4  D7D1               	goto	l1212
  8360  0103C6  D7DC               	goto	l1213
  8361  0103C8                     l1206:
  8362                           
  8363                           ;ring_buffer_LUT.c: 229: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  8364                           
  8365                           ; BSR set to: 1
  8366  0103C8  0EB3               	movlw	low STR_69
  8367  0103CA  0101               	movlb	1	; () banked
  8368  0103CC  6F7C               	movwf	printf@f& (0+255),b
  8369  0103CE  0EF9               	movlw	high STR_69
  8370  0103D0  6F7D               	movwf	(printf@f+1)& (0+255),b
  8371  0103D2  0E80               	movlw	low ringBufferLUT@channel_name
  8372  0103D4  6F7E               	movwf	(?_printf+2)& (0+255),b
  8373  0103D6  0E03               	movlw	high ringBufferLUT@channel_name
  8374  0103D8  6F7F               	movwf	(?_printf+3)& (0+255),b
  8375  0103DA  EC52  F086         	call	_printf	;wreg free
  8376                           
  8377                           ;ring_buffer_LUT.c: 231: terminal_textAttributesReset();
  8378  0103DE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8379                           
  8380                           ;ring_buffer_LUT.c: 235: }
  8381  0103E2  0012               	return	
  8382  0103E4                     l1203:
  8383                           
  8384                           ;ring_buffer_LUT.c: 237: else {
  8385                           ;ring_buffer_LUT.c: 242: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8386  0103E4  0E00               	movlw	0
  8387  0103E6  0101               	movlb	1	; () banked
  8388  0103E8  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8389  0103EA  0E00               	movlw	0
  8390  0103EC  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8391  0103EE  0E02               	movlw	2
  8392  0103F0  EC1E  F09A         	call	_terminal_textAttributes
  8393                           
  8394                           ;ring_buffer_LUT.c: 243: printf("No ADC Error detected\n\r");
  8395  0103F4  0E17               	movlw	low STR_70
  8396  0103F6  0101               	movlb	1	; () banked
  8397  0103F8  6F7C               	movwf	printf@f& (0+255),b
  8398  0103FA  0EFD               	movlw	high STR_70
  8399  0103FC  6F7D               	movwf	(printf@f+1)& (0+255),b
  8400  0103FE  EC52  F086         	call	_printf	;wreg free
  8401                           
  8402                           ;ring_buffer_LUT.c: 245: terminal_textAttributesReset();
  8403  010402  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8404                           
  8405                           ;ring_buffer_LUT.c: 249: }
  8406                           ;ring_buffer_LUT.c: 251: }
  8407  010406  0012               	return	
  8408  010408                     l1202:
  8409                           
  8410                           ;ring_buffer_LUT.c: 254: else if((0 == strcmp(line, "Clear ADC Error"))) {
  8411  010408  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8412  01040C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8413  010410  0E7E               	movlw	low STR_71
  8414  010412  0101               	movlb	1	; () banked
  8415  010414  6F19               	movwf	strcmp@s2& (0+255),b
  8416  010416  0EFE               	movlw	high STR_71
  8417  010418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8418  01041A  EC51  F0BC         	call	_strcmp	;wreg free
  8419  01041E  0101               	movlb	1	; () banked
  8420  010420  5117               	movf	?_strcmp& (0+255),w,b
  8421  010422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8422  010424  A4D8               	btfss	status,2,c
  8423  010426  D018               	goto	l1216
  8424                           
  8425                           ; BSR set to: 1
  8426                           ;ring_buffer_LUT.c: 256: LATFbits.LATF3 = 0;
  8427  010428  967E               	bcf	3966,3,c	;volatile
  8428                           
  8429                           ;ring_buffer_LUT.c: 257: adc_error_flag = 0;
  8430  01042A  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;ring_buffer_LUT.c: 259: PIE5bits.TMR7IE == 1;
  8434  01042C  010E               	movlb	14	; () banked
  8435  01042E  512E               	movf	46,w,b	;volatile
  8436                           
  8437                           ; BSR set to: 14
  8438                           ;ring_buffer_LUT.c: 260: TMR7_StartTimer();
  8439  010430  ECBA  F0C0         	call	_TMR7_StartTimer	;wreg free
  8440                           
  8441                           ;ring_buffer_LUT.c: 265: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8442  010434  0E00               	movlw	0
  8443  010436  0101               	movlb	1	; () banked
  8444  010438  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8445  01043A  0E00               	movlw	0
  8446  01043C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8447  01043E  0E02               	movlw	2
  8448  010440  EC1E  F09A         	call	_terminal_textAttributes
  8449                           
  8450                           ;ring_buffer_LUT.c: 266: printf("Clearing ADC Error\n\r");
  8451  010444  0E87               	movlw	low STR_72
  8452  010446  0101               	movlb	1	; () banked
  8453  010448  6F7C               	movwf	printf@f& (0+255),b
  8454  01044A  0EFD               	movlw	high STR_72
  8455  01044C  6F7D               	movwf	(printf@f+1)& (0+255),b
  8456  01044E  EC52  F086         	call	_printf	;wreg free
  8457                           
  8458                           ;ring_buffer_LUT.c: 268: terminal_textAttributesReset();
  8459  010452  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8460                           
  8461                           ;ring_buffer_LUT.c: 273: }
  8462  010456  0012               	return	
  8463  010458                     l1216:
  8464                           
  8465                           ;ring_buffer_LUT.c: 276: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
  8466  010458  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8467  01045C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8468  010460  0E0D               	movlw	low STR_73
  8469  010462  0101               	movlb	1	; () banked
  8470  010464  6F19               	movwf	strcmp@s2& (0+255),b
  8471  010466  0EFE               	movlw	high STR_73
  8472  010468  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8473  01046A  EC51  F0BC         	call	_strcmp	;wreg free
  8474  01046E  0101               	movlb	1	; () banked
  8475  010470  5117               	movf	?_strcmp& (0+255),w,b
  8476  010472  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8477  010474  A4D8               	btfss	status,2,c
  8478  010476  D026               	goto	l1218
  8479                           
  8480                           ; BSR set to: 1
  8481                           ;ring_buffer_LUT.c: 279: if (VCC_overvoltage_flag == 1) {
  8482  010478  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8483  01047A  D012               	goto	l1219
  8484                           
  8485                           ; BSR set to: 1
  8486                           ;ring_buffer_LUT.c: 284: terminal_textAttributes(RED, BLACK, NORMAL);
  8487  01047C  0E00               	movlw	0
  8488  01047E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8489  010480  0E00               	movlw	0
  8490  010482  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8491  010484  0E01               	movlw	1
  8492  010486  EC1E  F09A         	call	_terminal_textAttributes
  8493                           
  8494                           ;ring_buffer_LUT.c: 285: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
  8495  01048A  0E70               	movlw	low STR_74
  8496  01048C  0101               	movlb	1	; () banked
  8497  01048E  6F7C               	movwf	printf@f& (0+255),b
  8498  010490  0EF7               	movlw	high STR_74
  8499  010492  6F7D               	movwf	(printf@f+1)& (0+255),b
  8500  010494  EC52  F086         	call	_printf	;wreg free
  8501                           
  8502                           ;ring_buffer_LUT.c: 287: terminal_textAttributesReset();
  8503  010498  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8504                           
  8505                           ;ring_buffer_LUT.c: 292: VCC_overvoltage_flag = 0;
  8506  01049C  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8507                           
  8508                           ;ring_buffer_LUT.c: 294: }
  8509  01049E  0012               	return	
  8510  0104A0                     l1219:
  8511                           
  8512                           ;ring_buffer_LUT.c: 296: else {
  8513                           ;ring_buffer_LUT.c: 301: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8514  0104A0  0E00               	movlw	0
  8515  0104A2  0101               	movlb	1	; () banked
  8516  0104A4  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8517  0104A6  0E00               	movlw	0
  8518  0104A8  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8519  0104AA  0E02               	movlw	2
  8520  0104AC  EC1E  F09A         	call	_terminal_textAttributes
  8521                           
  8522                           ;ring_buffer_LUT.c: 302: printf("VCC Overvoltage condition has not occurred\n\r");
  8523  0104B0  0E40               	movlw	low STR_75
  8524  0104B2  0101               	movlb	1	; () banked
  8525  0104B4  6F7C               	movwf	printf@f& (0+255),b
  8526  0104B6  0EFA               	movlw	high STR_75
  8527  0104B8  6F7D               	movwf	(printf@f+1)& (0+255),b
  8528  0104BA  EC52  F086         	call	_printf	;wreg free
  8529                           
  8530                           ;ring_buffer_LUT.c: 304: terminal_textAttributesReset();
  8531  0104BE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8532                           
  8533                           ;ring_buffer_LUT.c: 308: }
  8534                           ;ring_buffer_LUT.c: 310: }
  8535  0104C2  0012               	return	
  8536  0104C4                     l1218:
  8537                           
  8538                           ;ring_buffer_LUT.c: 313: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  8539  0104C4  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8540  0104C8  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8541  0104CC  0E3E               	movlw	low STR_76
  8542  0104CE  0101               	movlb	1	; () banked
  8543  0104D0  6F19               	movwf	strcmp@s2& (0+255),b
  8544  0104D2  0EFE               	movlw	high STR_76
  8545  0104D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8546  0104D6  EC51  F0BC         	call	_strcmp	;wreg free
  8547  0104DA  0101               	movlb	1	; () banked
  8548  0104DC  5117               	movf	?_strcmp& (0+255),w,b
  8549  0104DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8550  0104E0  A4D8               	btfss	status,2,c
  8551  0104E2  D019               	goto	l1222
  8552                           
  8553                           ; BSR set to: 1
  8554                           ;ring_buffer_LUT.c: 318: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8555  0104E4  0E00               	movlw	0
  8556  0104E6  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8557  0104E8  0E00               	movlw	0
  8558  0104EA  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8559  0104EC  0E06               	movlw	6
  8560  0104EE  EC1E  F09A         	call	_terminal_textAttributes
  8561                           
  8562                           ;ring_buffer_LUT.c: 319: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Resul
      +                          t);
  8563  0104F2  0EA6               	movlw	low STR_77
  8564  0104F4  0101               	movlb	1	; () banked
  8565  0104F6  6F7C               	movwf	printf@f& (0+255),b
  8566  0104F8  0EFB               	movlw	high STR_77
  8567  0104FA  6F7D               	movwf	(printf@f+1)& (0+255),b
  8568  0104FC  C0F0  F17E         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  8569  010500  C0F1  F17F         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  8570  010504  C0F2  F180         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  8571  010508  C0F3  F181         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
  8572  01050C  EC52  F086         	call	_printf	;wreg free
  8573                           
  8574                           ;ring_buffer_LUT.c: 321: terminal_textAttributesReset();
  8575  010510  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8576                           
  8577                           ;ring_buffer_LUT.c: 326: }
  8578  010514  0012               	return	
  8579  010516                     l1222:
  8580                           
  8581                           ;ring_buffer_LUT.c: 329: else if((0 == strcmp(line, "Measure POS12?"))) {
  8582  010516  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8583  01051A  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8584  01051E  0E9D               	movlw	low STR_78
  8585  010520  0101               	movlb	1	; () banked
  8586  010522  6F19               	movwf	strcmp@s2& (0+255),b
  8587  010524  0EFE               	movlw	high STR_78
  8588  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8589  010528  EC51  F0BC         	call	_strcmp	;wreg free
  8590  01052C  0101               	movlb	1	; () banked
  8591  01052E  5117               	movf	?_strcmp& (0+255),w,b
  8592  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8593  010532  A4D8               	btfss	status,2,c
  8594  010534  D019               	goto	l1224
  8595                           
  8596                           ; BSR set to: 1
  8597                           ;ring_buffer_LUT.c: 334: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8598  010536  0E00               	movlw	0
  8599  010538  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8600  01053A  0E00               	movlw	0
  8601  01053C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8602  01053E  0E06               	movlw	6
  8603  010540  EC1E  F09A         	call	_terminal_textAttributes
  8604                           
  8605                           ;ring_buffer_LUT.c: 335: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  8606  010544  0E2F               	movlw	low STR_79
  8607  010546  0101               	movlb	1	; () banked
  8608  010548  6F7C               	movwf	printf@f& (0+255),b
  8609  01054A  0EFC               	movlw	high STR_79
  8610  01054C  6F7D               	movwf	(printf@f+1)& (0+255),b
  8611  01054E  C258  F17E         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  8612  010552  C259  F17F         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  8613  010556  C25A  F180         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  8614  01055A  C25B  F181         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
  8615  01055E  EC52  F086         	call	_printf	;wreg free
  8616                           
  8617                           ;ring_buffer_LUT.c: 337: terminal_textAttributesReset();
  8618  010562  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8619                           
  8620                           ;ring_buffer_LUT.c: 342: }
  8621  010566  0012               	return	
  8622  010568                     l1224:
  8623                           
  8624                           ;ring_buffer_LUT.c: 345: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  8625  010568  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8626  01056C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8627  010570  0ED9               	movlw	low STR_80
  8628  010572  0101               	movlb	1	; () banked
  8629  010574  6F19               	movwf	strcmp@s2& (0+255),b
  8630  010576  0EFD               	movlw	high STR_80
  8631  010578  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8632  01057A  EC51  F0BC         	call	_strcmp	;wreg free
  8633  01057E  0101               	movlb	1	; () banked
  8634  010580  5117               	movf	?_strcmp& (0+255),w,b
  8635  010582  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8636  010584  A4D8               	btfss	status,2,c
  8637  010586  D019               	goto	l1226
  8638                           
  8639                           ; BSR set to: 1
  8640                           ;ring_buffer_LUT.c: 350: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8641  010588  0E00               	movlw	0
  8642  01058A  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8643  01058C  0E00               	movlw	0
  8644  01058E  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8645  010590  0E06               	movlw	6
  8646  010592  EC1E  F09A         	call	_terminal_textAttributes
  8647                           
  8648                           ;ring_buffer_LUT.c: 351: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  8649  010596  0EC9               	movlw	low STR_81
  8650  010598  0101               	movlb	1	; () banked
  8651  01059A  6F7C               	movwf	printf@f& (0+255),b
  8652  01059C  0EFB               	movlw	high STR_81
  8653  01059E  6F7D               	movwf	(printf@f+1)& (0+255),b
  8654  0105A0  C254  F17E         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  8655  0105A4  C255  F17F         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  8656  0105A8  C256  F180         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  8657  0105AC  C257  F181         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
  8658  0105B0  EC52  F086         	call	_printf	;wreg free
  8659                           
  8660                           ;ring_buffer_LUT.c: 353: terminal_textAttributesReset();
  8661  0105B4  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8662                           
  8663                           ;ring_buffer_LUT.c: 358: }
  8664  0105B8  0012               	return	
  8665  0105BA                     l1226:
  8666                           
  8667                           ;ring_buffer_LUT.c: 361: else if((0 == strcmp(line, "Measure FVR?"))) {
  8668  0105BA  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8669  0105BE  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8670  0105C2  0E2A               	movlw	low STR_82
  8671  0105C4  0101               	movlb	1	; () banked
  8672  0105C6  6F19               	movwf	strcmp@s2& (0+255),b
  8673  0105C8  0EFF               	movlw	high STR_82
  8674  0105CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8675  0105CC  EC51  F0BC         	call	_strcmp	;wreg free
  8676  0105D0  0101               	movlb	1	; () banked
  8677  0105D2  5117               	movf	?_strcmp& (0+255),w,b
  8678  0105D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8679  0105D6  A4D8               	btfss	status,2,c
  8680  0105D8  D019               	goto	l1228
  8681                           
  8682                           ; BSR set to: 1
  8683                           ;ring_buffer_LUT.c: 366: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8684  0105DA  0E00               	movlw	0
  8685  0105DC  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8686  0105DE  0E00               	movlw	0
  8687  0105E0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8688  0105E2  0E06               	movlw	6
  8689  0105E4  EC1E  F09A         	call	_terminal_textAttributes
  8690                           
  8691                           ;ring_buffer_LUT.c: 367: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  8692  0105E8  0EDC               	movlw	low STR_83
  8693  0105EA  0101               	movlb	1	; () banked
  8694  0105EC  6F7C               	movwf	printf@f& (0+255),b
  8695  0105EE  0EF8               	movlw	high STR_83
  8696  0105F0  6F7D               	movwf	(printf@f+1)& (0+255),b
  8697  0105F2  C0F5  F17E         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  8698  0105F6  C0F6  F17F         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  8699  0105FA  C0F7  F180         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  8700  0105FE  C0F8  F181         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
  8701  010602  EC52  F086         	call	_printf	;wreg free
  8702                           
  8703                           ;ring_buffer_LUT.c: 369: terminal_textAttributesReset();
  8704  010606  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8705                           
  8706                           ;ring_buffer_LUT.c: 374: }
  8707  01060A  0012               	return	
  8708  01060C                     l1228:
  8709                           
  8710                           ;ring_buffer_LUT.c: 377: else if((0 == strcmp(line, "Measure AVSS?"))) {
  8711  01060C  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8712  010610  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8713  010614  0ED8               	movlw	low STR_84
  8714  010616  0101               	movlb	1	; () banked
  8715  010618  6F19               	movwf	strcmp@s2& (0+255),b
  8716  01061A  0EFE               	movlw	high STR_84
  8717  01061C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8718  01061E  EC51  F0BC         	call	_strcmp	;wreg free
  8719  010622  0101               	movlb	1	; () banked
  8720  010624  5117               	movf	?_strcmp& (0+255),w,b
  8721  010626  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8722  010628  A4D8               	btfss	status,2,c
  8723  01062A  D019               	goto	l1230
  8724                           
  8725                           ; BSR set to: 1
  8726                           ;ring_buffer_LUT.c: 382: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8727  01062C  0E00               	movlw	0
  8728  01062E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8729  010630  0E00               	movlw	0
  8730  010632  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8731  010634  0E06               	movlw	6
  8732  010636  EC1E  F09A         	call	_terminal_textAttributes
  8733                           
  8734                           ;ring_buffer_LUT.c: 383: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  8735  01063A  0E38               	movlw	low STR_85
  8736  01063C  0101               	movlb	1	; () banked
  8737  01063E  6F7C               	movwf	printf@f& (0+255),b
  8738  010640  0EFB               	movlw	high STR_85
  8739  010642  6F7D               	movwf	(printf@f+1)& (0+255),b
  8740  010644  C1D7  F17E         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  8741  010648  C1D8  F17F         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  8742  01064C  C1D9  F180         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  8743  010650  C1DA  F181         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
  8744  010654  EC52  F086         	call	_printf	;wreg free
  8745                           
  8746                           ;ring_buffer_LUT.c: 385: terminal_textAttributesReset();
  8747  010658  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8748                           
  8749                           ;ring_buffer_LUT.c: 390: }
  8750  01065C  0012               	return	
  8751  01065E                     l1230:
  8752                           
  8753                           ;ring_buffer_LUT.c: 393: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  8754  01065E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8755  010662  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8756  010666  0ECB               	movlw	low STR_86
  8757  010668  0101               	movlb	1	; () banked
  8758  01066A  6F19               	movwf	strcmp@s2& (0+255),b
  8759  01066C  0EFC               	movlw	high STR_86
  8760  01066E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8761  010670  EC51  F0BC         	call	_strcmp	;wreg free
  8762  010674  0101               	movlb	1	; () banked
  8763  010676  5117               	movf	?_strcmp& (0+255),w,b
  8764  010678  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8765  01067A  A4D8               	btfss	status,2,c
  8766  01067C  D019               	goto	l1232
  8767                           
  8768                           ; BSR set to: 1
  8769                           ;ring_buffer_LUT.c: 398: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8770  01067E  0E00               	movlw	0
  8771  010680  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8772  010682  0E00               	movlw	0
  8773  010684  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8774  010686  0E06               	movlw	6
  8775  010688  EC1E  F09A         	call	_terminal_textAttributes
  8776                           
  8777                           ;ring_buffer_LUT.c: 399: printf("Measured Current is %.3f Amps\n\r", Imeas);
  8778  01068C  0E72               	movlw	low STR_87
  8779  01068E  0101               	movlb	1	; () banked
  8780  010690  6F7C               	movwf	printf@f& (0+255),b
  8781  010692  0EFC               	movlw	high STR_87
  8782  010694  6F7D               	movwf	(printf@f+1)& (0+255),b
  8783  010696  C1D3  F17E         	movff	_Imeas,?_printf+2	;volatile
  8784  01069A  C1D4  F17F         	movff	_Imeas+1,?_printf+3	;volatile
  8785  01069E  C1D5  F180         	movff	_Imeas+2,?_printf+4	;volatile
  8786  0106A2  C1D6  F181         	movff	_Imeas+3,?_printf+5	;volatile
  8787  0106A6  EC52  F086         	call	_printf	;wreg free
  8788                           
  8789                           ;ring_buffer_LUT.c: 401: terminal_textAttributesReset();
  8790  0106AA  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8791                           
  8792                           ;ring_buffer_LUT.c: 405: }
  8793  0106AE  0012               	return	
  8794  0106B0                     l1232:
  8795                           
  8796                           ;ring_buffer_LUT.c: 408: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  8797  0106B0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8798  0106B4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8799  0106B8  0EB1               	movlw	low STR_88
  8800  0106BA  0101               	movlb	1	; () banked
  8801  0106BC  6F19               	movwf	strcmp@s2& (0+255),b
  8802  0106BE  0EFD               	movlw	high STR_88
  8803  0106C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8804  0106C2  EC51  F0BC         	call	_strcmp	;wreg free
  8805  0106C6  0101               	movlb	1	; () banked
  8806  0106C8  5117               	movf	?_strcmp& (0+255),w,b
  8807  0106CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8808  0106CC  A4D8               	btfss	status,2,c
  8809  0106CE  D019               	goto	l1234
  8810                           
  8811                           ; BSR set to: 1
  8812                           ;ring_buffer_LUT.c: 413: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8813  0106D0  0E00               	movlw	0
  8814  0106D2  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8815  0106D4  0E00               	movlw	0
  8816  0106D6  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8817  0106D8  0E06               	movlw	6
  8818  0106DA  EC1E  F09A         	call	_terminal_textAttributes
  8819                           
  8820                           ;ring_buffer_LUT.c: 414: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  8821  0106DE  0EEB               	movlw	low STR_89
  8822  0106E0  0101               	movlb	1	; () banked
  8823  0106E2  6F7C               	movwf	printf@f& (0+255),b
  8824  0106E4  0EFB               	movlw	high STR_89
  8825  0106E6  6F7D               	movwf	(printf@f+1)& (0+255),b
  8826  0106E8  C1CF  F17E         	movff	_Irms,?_printf+2	;volatile
  8827  0106EC  C1D0  F17F         	movff	_Irms+1,?_printf+3	;volatile
  8828  0106F0  C1D1  F180         	movff	_Irms+2,?_printf+4	;volatile
  8829  0106F4  C1D2  F181         	movff	_Irms+3,?_printf+5	;volatile
  8830  0106F8  EC52  F086         	call	_printf	;wreg free
  8831                           
  8832                           ;ring_buffer_LUT.c: 416: terminal_textAttributesReset();
  8833  0106FC  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8834                           
  8835                           ;ring_buffer_LUT.c: 420: }
  8836  010700  0012               	return	
  8837  010702                     l1234:
  8838                           
  8839                           ;ring_buffer_LUT.c: 423: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  8840  010702  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8841  010706  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8842  01070A  0E9C               	movlw	low STR_90
  8843  01070C  0101               	movlb	1	; () banked
  8844  01070E  6F19               	movwf	strcmp@s2& (0+255),b
  8845  010710  0EFD               	movlw	high STR_90
  8846  010712  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8847  010714  EC51  F0BC         	call	_strcmp	;wreg free
  8848  010718  0101               	movlb	1	; () banked
  8849  01071A  5117               	movf	?_strcmp& (0+255),w,b
  8850  01071C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8851  01071E  A4D8               	btfss	status,2,c
  8852  010720  D019               	goto	l1236
  8853                           
  8854                           ; BSR set to: 1
  8855                           ;ring_buffer_LUT.c: 428: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8856  010722  0E00               	movlw	0
  8857  010724  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8858  010726  0E00               	movlw	0
  8859  010728  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8860  01072A  0E06               	movlw	6
  8861  01072C  EC1E  F09A         	call	_terminal_textAttributes
  8862                           
  8863                           ;ring_buffer_LUT.c: 429: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  8864  010730  0E0D               	movlw	low STR_91
  8865  010732  0101               	movlb	1	; () banked
  8866  010734  6F7C               	movwf	printf@f& (0+255),b
  8867  010736  0EFC               	movlw	high STR_91
  8868  010738  6F7D               	movwf	(printf@f+1)& (0+255),b
  8869  01073A  C1CB  F17E         	movff	_Vrms,?_printf+2	;volatile
  8870  01073E  C1CC  F17F         	movff	_Vrms+1,?_printf+3	;volatile
  8871  010742  C1CD  F180         	movff	_Vrms+2,?_printf+4	;volatile
  8872  010746  C1CE  F181         	movff	_Vrms+3,?_printf+5	;volatile
  8873  01074A  EC52  F086         	call	_printf	;wreg free
  8874                           
  8875                           ;ring_buffer_LUT.c: 431: terminal_textAttributesReset();
  8876  01074E  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8877                           
  8878                           ;ring_buffer_LUT.c: 435: }
  8879  010752  0012               	return	
  8880  010754                     l1236:
  8881                           
  8882                           ;ring_buffer_LUT.c: 438: else if ((0 == strcmp(line, "Measure Power?"))) {
  8883  010754  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8884  010758  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8885  01075C  0EAC               	movlw	low STR_92
  8886  01075E  0101               	movlb	1	; () banked
  8887  010760  6F19               	movwf	strcmp@s2& (0+255),b
  8888  010762  0EFE               	movlw	high STR_92
  8889  010764  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8890  010766  EC51  F0BC         	call	_strcmp	;wreg free
  8891  01076A  0101               	movlb	1	; () banked
  8892  01076C  5117               	movf	?_strcmp& (0+255),w,b
  8893  01076E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8894  010770  A4D8               	btfss	status,2,c
  8895  010772  D019               	goto	l1238
  8896                           
  8897                           ; BSR set to: 1
  8898                           ;ring_buffer_LUT.c: 443: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8899  010774  0E00               	movlw	0
  8900  010776  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8901  010778  0E00               	movlw	0
  8902  01077A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8903  01077C  0E06               	movlw	6
  8904  01077E  EC1E  F09A         	call	_terminal_textAttributes
  8905                           
  8906                           ;ring_buffer_LUT.c: 444: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  8907  010782  0EA4               	movlw	low STR_93
  8908  010784  0101               	movlb	1	; () banked
  8909  010786  6F7C               	movwf	printf@f& (0+255),b
  8910  010788  0EF8               	movlw	high STR_93
  8911  01078A  6F7D               	movwf	(printf@f+1)& (0+255),b
  8912  01078C  C248  F17E         	movff	_Avg_Power,?_printf+2	;volatile
  8913  010790  C249  F17F         	movff	_Avg_Power+1,?_printf+3	;volatile
  8914  010794  C24A  F180         	movff	_Avg_Power+2,?_printf+4	;volatile
  8915  010798  C24B  F181         	movff	_Avg_Power+3,?_printf+5	;volatile
  8916  01079C  EC52  F086         	call	_printf	;wreg free
  8917                           
  8918                           ;ring_buffer_LUT.c: 446: terminal_textAttributesReset();
  8919  0107A0  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8920                           
  8921                           ;ring_buffer_LUT.c: 450: }
  8922  0107A4  0012               	return	
  8923  0107A6                     l1238:
  8924                           
  8925                           ;ring_buffer_LUT.c: 453: else if ((0 == strcmp(line, "Enable Dimming"))) {
  8926  0107A6  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8927  0107AA  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8928  0107AE  0EBB               	movlw	low STR_94
  8929  0107B0  0101               	movlb	1	; () banked
  8930  0107B2  6F19               	movwf	strcmp@s2& (0+255),b
  8931  0107B4  0EFE               	movlw	high STR_94
  8932  0107B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8933  0107B8  EC51  F0BC         	call	_strcmp	;wreg free
  8934  0107BC  0101               	movlb	1	; () banked
  8935  0107BE  5117               	movf	?_strcmp& (0+255),w,b
  8936  0107C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8937  0107C2  A4D8               	btfss	status,2,c
  8938  0107C4  D012               	goto	l1240
  8939                           
  8940                           ; BSR set to: 1
  8941                           ;ring_buffer_LUT.c: 456: LATGbits.LATG0 = 0;
  8942  0107C6  907F               	bcf	3967,0,c	;volatile
  8943                           
  8944                           ; BSR set to: 1
  8945                           ;ring_buffer_LUT.c: 461: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8946  0107C8  0E00               	movlw	0
  8947  0107CA  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8948  0107CC  0E00               	movlw	0
  8949  0107CE  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8950  0107D0  0E06               	movlw	6
  8951  0107D2  EC1E  F09A         	call	_terminal_textAttributes
  8952                           
  8953                           ;ring_buffer_LUT.c: 462: printf("TRIAC output dimming has been enabled\n\r");
  8954  0107D6  0EE9               	movlw	low STR_95
  8955  0107D8  0101               	movlb	1	; () banked
  8956  0107DA  6F7C               	movwf	printf@f& (0+255),b
  8957  0107DC  0EFA               	movlw	high STR_95
  8958  0107DE  6F7D               	movwf	(printf@f+1)& (0+255),b
  8959  0107E0  EC52  F086         	call	_printf	;wreg free
  8960                           
  8961                           ;ring_buffer_LUT.c: 464: terminal_textAttributesReset();
  8962  0107E4  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  8963                           
  8964                           ;ring_buffer_LUT.c: 468: }
  8965  0107E8  0012               	return	
  8966  0107EA                     l1240:
  8967                           
  8968                           ;ring_buffer_LUT.c: 471: else if ((0 == strcmp(line, "Disable Dimming"))) {
  8969  0107EA  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8970  0107EE  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8971  0107F2  0E6E               	movlw	low STR_96
  8972  0107F4  0101               	movlb	1	; () banked
  8973  0107F6  6F19               	movwf	strcmp@s2& (0+255),b
  8974  0107F8  0EFE               	movlw	high STR_96
  8975  0107FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8976  0107FC  EC51  F0BC         	call	_strcmp	;wreg free
  8977  010800  0101               	movlb	1	; () banked
  8978  010802  5117               	movf	?_strcmp& (0+255),w,b
  8979  010804  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8980  010806  A4D8               	btfss	status,2,c
  8981  010808  D012               	goto	l1242
  8982                           
  8983                           ; BSR set to: 1
  8984                           ;ring_buffer_LUT.c: 474: LATGbits.LATG0 = 1;
  8985  01080A  807F               	bsf	3967,0,c	;volatile
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;ring_buffer_LUT.c: 479: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8989  01080C  0E00               	movlw	0
  8990  01080E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8991  010810  0E00               	movlw	0
  8992  010812  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8993  010814  0E06               	movlw	6
  8994  010816  EC1E  F09A         	call	_terminal_textAttributes
  8995                           
  8996                           ;ring_buffer_LUT.c: 480: printf("TRIAC output dimming has been disabled\n\r");
  8997  01081A  0EC0               	movlw	low STR_97
  8998  01081C  0101               	movlb	1	; () banked
  8999  01081E  6F7C               	movwf	printf@f& (0+255),b
  9000  010820  0EFA               	movlw	high STR_97
  9001  010822  6F7D               	movwf	(printf@f+1)& (0+255),b
  9002  010824  EC52  F086         	call	_printf	;wreg free
  9003                           
  9004                           ;ring_buffer_LUT.c: 482: terminal_textAttributesReset();
  9005  010828  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9006                           
  9007                           ;ring_buffer_LUT.c: 486: }
  9008  01082C  0012               	return	
  9009  01082E                     l1242:
  9010                           
  9011                           ;ring_buffer_LUT.c: 489: else if ((0 == strcmp(line, "Enable Load"))) {
  9012  01082E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9013  010832  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9014  010836  0E50               	movlw	low STR_98
  9015  010838  0101               	movlb	1	; () banked
  9016  01083A  6F19               	movwf	strcmp@s2& (0+255),b
  9017  01083C  0EFF               	movlw	high STR_98
  9018  01083E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9019  010840  EC51  F0BC         	call	_strcmp	;wreg free
  9020  010844  0101               	movlb	1	; () banked
  9021  010846  5117               	movf	?_strcmp& (0+255),w,b
  9022  010848  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9023  01084A  A4D8               	btfss	status,2,c
  9024  01084C  D014               	goto	l1244
  9025                           
  9026                           ; BSR set to: 1
  9027                           ;ring_buffer_LUT.c: 491: LATGbits.LATG0 = 1;
  9028  01084E  807F               	bsf	3967,0,c	;volatile
  9029                           
  9030                           ;ring_buffer_LUT.c: 492: LATGbits.LATG1 = 0;
  9031  010850  927F               	bcf	3967,1,c	;volatile
  9032                           
  9033                           ;ring_buffer_LUT.c: 493: load_enable = 1;
  9034  010852  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9035                           
  9036                           ; BSR set to: 1
  9037                           ;ring_buffer_LUT.c: 498: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9038  010854  0E00               	movlw	0
  9039  010856  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9040  010858  0E00               	movlw	0
  9041  01085A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9042  01085C  0E06               	movlw	6
  9043  01085E  EC1E  F09A         	call	_terminal_textAttributes
  9044                           
  9045                           ;ring_buffer_LUT.c: 499: printf("Load has been enabled, dimming disabled\n\r");
  9046  010862  0E6D               	movlw	low STR_99
  9047  010864  0101               	movlb	1	; () banked
  9048  010866  6F7C               	movwf	printf@f& (0+255),b
  9049  010868  0EFA               	movlw	high STR_99
  9050  01086A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9051  01086C  EC52  F086         	call	_printf	;wreg free
  9052                           
  9053                           ;ring_buffer_LUT.c: 501: terminal_textAttributesReset();
  9054  010870  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9055                           
  9056                           ;ring_buffer_LUT.c: 505: }
  9057  010874  0012               	return	
  9058  010876                     l1244:
  9059                           
  9060                           ;ring_buffer_LUT.c: 508: else if ((0 == strcmp(line, "Disable Load"))) {
  9061  010876  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9062  01087A  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9063  01087E  0E37               	movlw	low STR_100
  9064  010880  0101               	movlb	1	; () banked
  9065  010882  6F19               	movwf	strcmp@s2& (0+255),b
  9066  010884  0EFF               	movlw	high STR_100
  9067  010886  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9068  010888  EC51  F0BC         	call	_strcmp	;wreg free
  9069  01088C  0101               	movlb	1	; () banked
  9070  01088E  5117               	movf	?_strcmp& (0+255),w,b
  9071  010890  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9072  010892  A4D8               	btfss	status,2,c
  9073  010894  D014               	goto	l1246
  9074                           
  9075                           ; BSR set to: 1
  9076                           ;ring_buffer_LUT.c: 510: LATGbits.LATG1 = 0;
  9077  010896  927F               	bcf	3967,1,c	;volatile
  9078                           
  9079                           ;ring_buffer_LUT.c: 511: LATGbits.LATG0 = 0;
  9080  010898  907F               	bcf	3967,0,c	;volatile
  9081                           
  9082                           ;ring_buffer_LUT.c: 512: load_enable = 0;
  9083  01089A  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9084                           
  9085                           ; BSR set to: 1
  9086                           ;ring_buffer_LUT.c: 517: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9087  01089C  0E00               	movlw	0
  9088  01089E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9089  0108A0  0E00               	movlw	0
  9090  0108A2  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9091  0108A4  0E06               	movlw	6
  9092  0108A6  EC1E  F09A         	call	_terminal_textAttributes
  9093                           
  9094                           ;ring_buffer_LUT.c: 518: printf("Load has been disabled\n\r");
  9095  0108AA  0EE5               	movlw	low STR_101
  9096  0108AC  0101               	movlb	1	; () banked
  9097  0108AE  6F7C               	movwf	printf@f& (0+255),b
  9098  0108B0  0EFC               	movlw	high STR_101
  9099  0108B2  6F7D               	movwf	(printf@f+1)& (0+255),b
  9100  0108B4  EC52  F086         	call	_printf	;wreg free
  9101                           
  9102                           ;ring_buffer_LUT.c: 520: terminal_textAttributesReset();
  9103  0108B8  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9104                           
  9105                           ;ring_buffer_LUT.c: 524: }
  9106  0108BC  0012               	return	
  9107  0108BE                     l1246:
  9108                           
  9109                           ;ring_buffer_LUT.c: 527: else if ((strstr(line, "Set Dimming Percentage: "))) {
  9110  0108BE  C1BC  F126         	movff	ringBufferLUT@line,strstr@s1
  9111  0108C2  C1BD  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  9112  0108C6  0EFE               	movlw	low STR_102
  9113  0108C8  0101               	movlb	1	; () banked
  9114  0108CA  6F28               	movwf	strstr@s2& (0+255),b
  9115  0108CC  0EFC               	movlw	high STR_102
  9116  0108CE  6F29               	movwf	(strstr@s2+1)& (0+255),b
  9117  0108D0  ECD9  F0B7         	call	_strstr	;wreg free
  9118  0108D4  0101               	movlb	1	; () banked
  9119  0108D6  5126               	movf	?_strstr& (0+255),w,b
  9120  0108D8  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  9121  0108DA  B4D8               	btfsc	status,2,c
  9122  0108DC  D131               	goto	l1248
  9123                           
  9124                           ; BSR set to: 1
  9125                           ;ring_buffer_LUT.c: 530: char arg_buff[3];
  9126                           ;ring_buffer_LUT.c: 533: for (int index = 0; index < 3; index++) {
  9127  0108DE  0E00               	movlw	0
  9128  0108E0  0103               	movlb	3	; () banked
  9129  0108E2  6F9E               	movwf	(ringBufferLUT@index+1)& (0+255),b
  9130  0108E4  0E00               	movlw	0
  9131  0108E6  6F9D               	movwf	ringBufferLUT@index& (0+255),b
  9132  0108E8                     l13360:
  9133                           
  9134                           ; BSR set to: 3
  9135  0108E8  BF9E               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  9136  0108EA  D006               	goto	l1249
  9137  0108EC  519E               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  9138  0108EE  E11F               	bnz	l13370
  9139  0108F0  0E03               	movlw	3
  9140  0108F2  5D9D               	subwf	ringBufferLUT@index& (0+255),w,b
  9141  0108F4  B0D8               	btfsc	status,0,c
  9142  0108F6  D01B               	goto	u15970
  9143  0108F8                     l1249:
  9144                           
  9145                           ; BSR set to: 3
  9146                           ;ring_buffer_LUT.c: 535: arg_buff[index] = line[index + 24];
  9147                           
  9148                           ; BSR set to: 3
  9149  0108F8  0E18               	movlw	24
  9150  0108FA  259D               	addwf	ringBufferLUT@index& (0+255),w,b
  9151  0108FC  0101               	movlb	1	; () banked
  9152  0108FE  6FBE               	movwf	??_ringBufferLUT& (0+255),b
  9153  010900  0E00               	movlw	0
  9154  010902  0103               	movlb	3	; () banked
  9155  010904  219E               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9156  010906  0101               	movlb	1	; () banked
  9157  010908  6FBF               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9158  01090A  51BE               	movf	??_ringBufferLUT& (0+255),w,b
  9159  01090C  25BC               	addwf	ringBufferLUT@line& (0+255),w,b
  9160  01090E  6ED9               	movwf	fsr2l,c
  9161  010910  51BF               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9162  010912  21BD               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  9163  010914  6EDA               	movwf	fsr2h,c
  9164  010916  0E9A               	movlw	low ringBufferLUT@arg_buff
  9165  010918  0103               	movlb	3	; () banked
  9166  01091A  259D               	addwf	ringBufferLUT@index& (0+255),w,b
  9167  01091C  6EE1               	movwf	fsr1l,c
  9168  01091E  0E03               	movlw	high ringBufferLUT@arg_buff
  9169  010920  219E               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9170  010922  6EE2               	movwf	fsr1h,c
  9171  010924  CFDF FFE7          	movff	indf2,indf1
  9172                           
  9173                           ; BSR set to: 3
  9174  010928  4B9D               	infsnz	ringBufferLUT@index& (0+255),f,b
  9175  01092A  2B9E               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  9176  01092C  D7DD               	goto	l13360
  9177  01092E                     u15970:
  9178  01092E                     l13370:
  9179                           
  9180                           ; BSR set to: 3
  9181                           ;ring_buffer_LUT.c: 537: }
  9182                           ;ring_buffer_LUT.c: 539: int percentage = atoi(arg_buff);
  9183  01092E  0E9A               	movlw	low ringBufferLUT@arg_buff
  9184  010930  0101               	movlb	1	; () banked
  9185  010932  6F1D               	movwf	atoi@s& (0+255),b
  9186  010934  0E03               	movlw	high ringBufferLUT@arg_buff
  9187  010936  6F1E               	movwf	(atoi@s+1)& (0+255),b
  9188  010938  ECB6  F0B5         	call	_atoi	;wreg free
  9189  01093C  C11D  F39F         	movff	?_atoi,ringBufferLUT@percentage
  9190  010940  C11E  F3A0         	movff	?_atoi+1,ringBufferLUT@percentage+1
  9191                           
  9192                           ;ring_buffer_LUT.c: 542: if ( (percentage >= 100) ||
  9193                           ;ring_buffer_LUT.c: 543: (percentage <= 0)) {
  9194  010944  0103               	movlb	3	; () banked
  9195  010946  BFA0               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9196  010948  D006               	goto	u15980
  9197  01094A  51A0               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9198  01094C  E10B               	bnz	l13376
  9199  01094E  0E64               	movlw	100
  9200  010950  5D9F               	subwf	ringBufferLUT@percentage& (0+255),w,b
  9201  010952  B0D8               	btfsc	status,0,c
  9202  010954  D007               	goto	u15990
  9203  010956                     u15980:
  9204                           
  9205                           ; BSR set to: 3
  9206  010956  BFA0               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9207  010958  D005               	goto	u15990
  9208  01095A  51A0               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9209  01095C  E12B               	bnz	l13378
  9210  01095E  059F               	decf	ringBufferLUT@percentage& (0+255),w,b
  9211  010960  B0D8               	btfsc	status,0,c
  9212  010962  D028               	goto	l1251
  9213  010964                     u15990:
  9214  010964                     l13376:
  9215                           
  9216                           ; BSR set to: 3
  9217                           ;ring_buffer_LUT.c: 548: terminal_textAttributes(RED, BLACK, NORMAL);
  9218  010964  0E00               	movlw	0
  9219  010966  0101               	movlb	1	; () banked
  9220  010968  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9221  01096A  0E00               	movlw	0
  9222  01096C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9223  01096E  0E01               	movlw	1
  9224  010970  EC1E  F09A         	call	_terminal_textAttributes
  9225                           
  9226                           ;ring_buffer_LUT.c: 549: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  9227  010974  0E7E               	movlw	low STR_103
  9228  010976  0101               	movlb	1	; () banked
  9229  010978  6F7C               	movwf	printf@f& (0+255),b
  9230  01097A  0EF6               	movlw	high STR_103
  9231  01097C  6F7D               	movwf	(printf@f+1)& (0+255),b
  9232  01097E  EC52  F086         	call	_printf	;wreg free
  9233                           
  9234                           ;ring_buffer_LUT.c: 551: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9235  010982  0E00               	movlw	0
  9236  010984  0101               	movlb	1	; () banked
  9237  010986  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9238  010988  0E00               	movlw	0
  9239  01098A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9240  01098C  0E03               	movlw	3
  9241  01098E  EC1E  F09A         	call	_terminal_textAttributes
  9242                           
  9243                           ;ring_buffer_LUT.c: 552: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  9244  010992  0E18               	movlw	low STR_104
  9245  010994  0101               	movlb	1	; () banked
  9246  010996  6F7C               	movwf	printf@f& (0+255),b
  9247  010998  0EF6               	movlw	high STR_104
  9248  01099A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9249  01099C  EC52  F086         	call	_printf	;wreg free
  9250                           
  9251                           ;ring_buffer_LUT.c: 553: printf("Enter 'Help' for list of available commands\n\r");
  9252  0109A0  0E12               	movlw	low STR_105
  9253  0109A2  0101               	movlb	1	; () banked
  9254  0109A4  6F7C               	movwf	printf@f& (0+255),b
  9255  0109A6  0EFA               	movlw	high STR_105
  9256  0109A8  6F7D               	movwf	(printf@f+1)& (0+255),b
  9257  0109AA  EC52  F086         	call	_printf	;wreg free
  9258                           
  9259                           ;ring_buffer_LUT.c: 555: terminal_textAttributesReset();
  9260  0109AE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9261                           
  9262                           ;ring_buffer_LUT.c: 559: }
  9263  0109B2  0012               	return	
  9264  0109B4                     l1251:
  9265  0109B4                     l13378:
  9266                           
  9267                           ;ring_buffer_LUT.c: 562: else {
  9268                           ;ring_buffer_LUT.c: 565: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  9269  0109B4  0E00               	movlw	0
  9270  0109B6  0101               	movlb	1	; () banked
  9271  0109B8  6F41               	movwf	___fldiv@a& (0+255),b
  9272  0109BA  0E00               	movlw	0
  9273  0109BC  6F42               	movwf	(___fldiv@a+1)& (0+255),b
  9274  0109BE  0EC8               	movlw	200
  9275  0109C0  6F43               	movwf	(___fldiv@a+2)& (0+255),b
  9276  0109C2  0E42               	movlw	66
  9277  0109C4  6F44               	movwf	(___fldiv@a+3)& (0+255),b
  9278  0109C6  0E00               	movlw	0
  9279  0109C8  6F2D               	movwf	___fladd@a& (0+255),b
  9280  0109CA  0E00               	movlw	0
  9281  0109CC  6F2E               	movwf	(___fladd@a+1)& (0+255),b
  9282  0109CE  0EC8               	movlw	200
  9283  0109D0  6F2F               	movwf	(___fladd@a+2)& (0+255),b
  9284  0109D2  0E42               	movlw	66
  9285  0109D4  6F30               	movwf	(___fladd@a+3)& (0+255),b
  9286  0109D6  C39F  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
  9287  0109DA  C3A0  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
  9288  0109DE  0E00               	movlw	0
  9289  0109E0  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9290  0109E2  0EFF               	movlw	-1
  9291  0109E4  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
  9292  0109E6  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
  9293  0109E8  0E01               	movlw	1
  9294  0109EA  EC73  F0AE         	call	___xxtofl
  9295  0109EE  C117  F125         	movff	?___xxtofl,___flneg@f1
  9296  0109F2  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
  9297  0109F6  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
  9298  0109FA  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
  9299  0109FE  ECFB  F0BE         	call	___flneg	;wreg free
  9300  010A02  C125  F129         	movff	?___flneg,___fladd@b
  9301  010A06  C126  F12A         	movff	?___flneg+1,___fladd@b+1
  9302  010A0A  C127  F12B         	movff	?___flneg+2,___fladd@b+2
  9303  010A0E  C128  F12C         	movff	?___flneg+3,___fladd@b+3
  9304  010A12  EC23  F09F         	call	___fladd	;wreg free
  9305  010A16  C129  F13D         	movff	?___fladd,___fldiv@b
  9306  010A1A  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
  9307  010A1E  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
  9308  010A22  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
  9309  010A26  EC27  F0A8         	call	___fldiv	;wreg free
  9310  010A2A  C13D  F156         	movff	?___fldiv,___flmul@b
  9311  010A2E  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
  9312  010A32  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
  9313  010A36  C140  F159         	movff	?___fldiv+3,___flmul@b+3
  9314  010A3A  0EDB               	movlw	219
  9315  010A3C  0101               	movlb	1	; () banked
  9316  010A3E  6F5A               	movwf	___flmul@a& (0+255),b
  9317  010A40  0E0F               	movlw	15
  9318  010A42  6F5B               	movwf	(___flmul@a+1)& (0+255),b
  9319  010A44  0E49               	movlw	73
  9320  010A46  6F5C               	movwf	(___flmul@a+2)& (0+255),b
  9321  010A48  0E40               	movlw	64
  9322  010A4A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
  9323  010A4C  ECD2  F09B         	call	___flmul	;wreg free
  9324  010A50  C156  F0FB         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
  9325  010A54  C157  F0FC         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
  9326  010A58  C158  F0FD         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
  9327  010A5C  C159  F0FE         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
  9328                           
  9329                           ;ring_buffer_LUT.c: 566: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  9330  010A60  C0FB  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
  9331  010A64  C0FC  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
  9332  010A68  C0FD  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
  9333  010A6C  C0FE  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
  9334  010A70  0EE1               	movlw	225
  9335  010A72  0101               	movlb	1	; () banked
  9336  010A74  6F5A               	movwf	___flmul@a& (0+255),b
  9337  010A76  0E2E               	movlw	46
  9338  010A78  6F5B               	movwf	(___flmul@a+1)& (0+255),b
  9339  010A7A  0E65               	movlw	101
  9340  010A7C  6F5C               	movwf	(___flmul@a+2)& (0+255),b
  9341  010A7E  0E42               	movlw	66
  9342  010A80  6F5D               	movwf	(___flmul@a+3)& (0+255),b
  9343  010A82  ECD2  F09B         	call	___flmul	;wreg free
  9344  010A86  C156  F396         	movff	?___flmul,ringBufferLUT@angle_degrees
  9345  010A8A  C157  F397         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
  9346  010A8E  C158  F398         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
  9347  010A92  C159  F399         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
  9348                           
  9349                           ;ring_buffer_LUT.c: 567: dimming_period = (100 - percentage) * (0xFFFF / 100);
  9350  010A96  C39F  F1BE         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  9351  010A9A  C3A0  F1BF         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  9352  010A9E  0101               	movlb	1	; () banked
  9353  010AA0  1FBE               	comf	??_ringBufferLUT& (0+255),f,b
  9354  010AA2  1FBF               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  9355  010AA4  4BBE               	infsnz	??_ringBufferLUT& (0+255),f,b
  9356  010AA6  2BBF               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  9357  010AA8  0E64               	movlw	100
  9358  010AAA  25BE               	addwf	??_ringBufferLUT& (0+255),w,b
  9359  010AAC  6F17               	movwf	___wmul@multiplier& (0+255),b
  9360  010AAE  0E00               	movlw	0
  9361  010AB0  21BF               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  9362  010AB2  6F18               	movwf	(___wmul@multiplier+1)& (0+255),b
  9363  010AB4  0E02               	movlw	2
  9364  010AB6  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9365  010AB8  0E8F               	movlw	143
  9366  010ABA  6F19               	movwf	___wmul@multiplicand& (0+255),b
  9367  010ABC  EC41  F0BF         	call	___wmul	;wreg free
  9368  010AC0  C117  F0F9         	movff	?___wmul,_dimming_period	;volatile
  9369  010AC4  C118  F0FA         	movff	?___wmul+1,_dimming_period+1	;volatile
  9370                           
  9371                           ;ring_buffer_LUT.c: 572: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9372  010AC8  0E00               	movlw	0
  9373  010ACA  0101               	movlb	1	; () banked
  9374  010ACC  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9375  010ACE  0E00               	movlw	0
  9376  010AD0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9377  010AD2  0E02               	movlw	2
  9378  010AD4  EC1E  F09A         	call	_terminal_textAttributes
  9379                           
  9380                           ;ring_buffer_LUT.c: 573: printf("Dimming has been set to %d percent\n\r", percentage);
  9381  010AD8  0E5D               	movlw	low STR_106
  9382  010ADA  0101               	movlb	1	; () banked
  9383  010ADC  6F7C               	movwf	printf@f& (0+255),b
  9384  010ADE  0EFB               	movlw	high STR_106
  9385  010AE0  6F7D               	movwf	(printf@f+1)& (0+255),b
  9386  010AE2  C39F  F17E         	movff	ringBufferLUT@percentage,?_printf+2
  9387  010AE6  C3A0  F17F         	movff	ringBufferLUT@percentage+1,?_printf+3
  9388  010AEA  EC52  F086         	call	_printf	;wreg free
  9389                           
  9390                           ;ring_buffer_LUT.c: 574: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  9391  010AEE  0EF2               	movlw	low STR_107
  9392  010AF0  0101               	movlb	1	; () banked
  9393  010AF2  6F7C               	movwf	printf@f& (0+255),b
  9394  010AF4  0EF7               	movlw	high STR_107
  9395  010AF6  6F7D               	movwf	(printf@f+1)& (0+255),b
  9396  010AF8  C0FB  F17E         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  9397  010AFC  C0FC  F17F         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  9398  010B00  C0FD  F180         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  9399  010B04  C0FE  F181         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
  9400  010B08  C396  F182         	movff	ringBufferLUT@angle_degrees,?_printf+6
  9401  010B0C  C397  F183         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
  9402  010B10  C398  F184         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
  9403  010B14  C399  F185         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
  9404  010B18  EC52  F086         	call	_printf	;wreg free
  9405                           
  9406                           ;ring_buffer_LUT.c: 575: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  9407  010B1C  0E29               	movlw	low STR_108
  9408  010B1E  0101               	movlb	1	; () banked
  9409  010B20  6F7C               	movwf	printf@f& (0+255),b
  9410  010B22  0EF7               	movlw	high STR_108
  9411  010B24  6F7D               	movwf	(printf@f+1)& (0+255),b
  9412  010B26  C0F9  F17E         	movff	_dimming_period,?_printf+2	;volatile
  9413  010B2A  C0FA  F17F         	movff	_dimming_period+1,?_printf+3	;volatile
  9414  010B2E  C0F9  F180         	movff	_dimming_period,?_printf+4	;volatile
  9415  010B32  C0FA  F181         	movff	_dimming_period+1,?_printf+5	;volatile
  9416  010B36  EC52  F086         	call	_printf	;wreg free
  9417                           
  9418                           ;ring_buffer_LUT.c: 577: terminal_textAttributesReset();
  9419  010B3A  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9420                           
  9421                           ;ring_buffer_LUT.c: 581: }
  9422                           ;ring_buffer_LUT.c: 583: }
  9423  010B3E  0012               	return	
  9424  010B40                     l1248:
  9425                           
  9426                           ;ring_buffer_LUT.c: 586: else if((0 == strcmp(line, "Device On Time?"))) {
  9427  010B40  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9428  010B44  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9429  010B48  0E4E               	movlw	low STR_109
  9430  010B4A  0101               	movlb	1	; () banked
  9431  010B4C  6F19               	movwf	strcmp@s2& (0+255),b
  9432  010B4E  0EFE               	movlw	high STR_109
  9433  010B50  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9434  010B52  EC51  F0BC         	call	_strcmp	;wreg free
  9435  010B56  0101               	movlb	1	; () banked
  9436  010B58  5117               	movf	?_strcmp& (0+255),w,b
  9437  010B5A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9438  010B5C  A4D8               	btfss	status,2,c
  9439  010B5E  D019               	goto	l1256
  9440                           
  9441                           ; BSR set to: 1
  9442                           ;ring_buffer_LUT.c: 591: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9443  010B60  0E00               	movlw	0
  9444  010B62  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9445  010B64  0E00               	movlw	0
  9446  010B66  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9447  010B68  0E02               	movlw	2
  9448  010B6A  EC1E  F09A         	call	_terminal_textAttributes
  9449                           
  9450                           ;ring_buffer_LUT.c: 592: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
  9451  010B6E  0E31               	movlw	low STR_110
  9452  010B70  0101               	movlb	1	; () banked
  9453  010B72  6F7C               	movwf	printf@f& (0+255),b
  9454  010B74  0EF8               	movlw	high STR_110
  9455  010B76  6F7D               	movwf	(printf@f+1)& (0+255),b
  9456  010B78  C244  F17E         	movff	_dev_on_time,?_printf+2	;volatile
  9457  010B7C  C245  F17F         	movff	_dev_on_time+1,?_printf+3	;volatile
  9458  010B80  C246  F180         	movff	_dev_on_time+2,?_printf+4	;volatile
  9459  010B84  C247  F181         	movff	_dev_on_time+3,?_printf+5	;volatile
  9460  010B88  EC52  F086         	call	_printf	;wreg free
  9461                           
  9462                           ;ring_buffer_LUT.c: 594: terminal_textAttributesReset();
  9463  010B8C  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9464                           
  9465                           ;ring_buffer_LUT.c: 598: }
  9466  010B90  0012               	return	
  9467  010B92                     l1256:
  9468                           
  9469                           ;ring_buffer_LUT.c: 601: else if((0 == strcmp(line, "Load On Time?"))) {
  9470  010B92  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9471  010B96  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9472  010B9A  0EE6               	movlw	low STR_111
  9473  010B9C  0101               	movlb	1	; () banked
  9474  010B9E  6F19               	movwf	strcmp@s2& (0+255),b
  9475  010BA0  0EFE               	movlw	high STR_111
  9476  010BA2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9477  010BA4  EC51  F0BC         	call	_strcmp	;wreg free
  9478  010BA8  0101               	movlb	1	; () banked
  9479  010BAA  5117               	movf	?_strcmp& (0+255),w,b
  9480  010BAC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9481  010BAE  A4D8               	btfss	status,2,c
  9482  010BB0  D019               	goto	l1258
  9483                           
  9484                           ; BSR set to: 1
  9485                           ;ring_buffer_LUT.c: 606: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9486  010BB2  0E00               	movlw	0
  9487  010BB4  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9488  010BB6  0E00               	movlw	0
  9489  010BB8  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9490  010BBA  0E06               	movlw	6
  9491  010BBC  EC1E  F09A         	call	_terminal_textAttributes
  9492                           
  9493                           ;ring_buffer_LUT.c: 607: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
  9494  010BC0  0E4A               	movlw	low STR_112
  9495  010BC2  0101               	movlb	1	; () banked
  9496  010BC4  6F7C               	movwf	printf@f& (0+255),b
  9497  010BC6  0EF9               	movlw	high STR_112
  9498  010BC8  6F7D               	movwf	(printf@f+1)& (0+255),b
  9499  010BCA  C240  F17E         	movff	_load_on_time,?_printf+2	;volatile
  9500  010BCE  C241  F17F         	movff	_load_on_time+1,?_printf+3	;volatile
  9501  010BD2  C242  F180         	movff	_load_on_time+2,?_printf+4	;volatile
  9502  010BD6  C243  F181         	movff	_load_on_time+3,?_printf+5	;volatile
  9503  010BDA  EC52  F086         	call	_printf	;wreg free
  9504                           
  9505                           ;ring_buffer_LUT.c: 609: terminal_textAttributesReset();
  9506  010BDE  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9507                           
  9508                           ;ring_buffer_LUT.c: 613: }
  9509  010BE2  0012               	return	
  9510  010BE4                     l1258:
  9511                           
  9512                           ;ring_buffer_LUT.c: 618: else if((0 == strcmp(line, "Help"))) {
  9513  010BE4  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9514  010BE8  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9515  010BEC  0EAB               	movlw	low STR_113
  9516  010BEE  0101               	movlb	1	; () banked
  9517  010BF0  6F19               	movwf	strcmp@s2& (0+255),b
  9518  010BF2  0EFF               	movlw	high STR_113
  9519  010BF4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9520  010BF6  EC51  F0BC         	call	_strcmp	;wreg free
  9521  010BFA  0101               	movlb	1	; () banked
  9522  010BFC  5117               	movf	?_strcmp& (0+255),w,b
  9523  010BFE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9524  010C00  A4D8               	btfss	status,2,c
  9525  010C02  0012               	return	
  9526                           
  9527                           ; BSR set to: 1
  9528                           ;ring_buffer_LUT.c: 623: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9529  010C04  0E00               	movlw	0
  9530  010C06  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9531  010C08  0E00               	movlw	0
  9532  010C0A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9533  010C0C  0E03               	movlw	3
  9534  010C0E  EC1E  F09A         	call	_terminal_textAttributes
  9535                           
  9536                           ;ring_buffer_LUT.c: 624: printf("List of supported commands:\n\r"
  9537                           ;ring_buffer_LUT.c: 626: "Device Commands:\n\r"
  9538                           ;ring_buffer_LUT.c: 627: "   Reset: Clears the terminal and resets the micro\n\r"
  9539                           ;ring_buffer_LUT.c: 628: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  9540                           ;ring_buffer_LUT.c: 629: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
  9541                           ;ring_buffer_LUT.c: 630: "   *IDN?: Returns device identification string\n\r"
  9542                           ;ring_buffer_LUT.c: 631: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
  9543  010C12  0EBD               	movlw	low STR_114
  9544  010C14  0101               	movlb	1	; () banked
  9545  010C16  6F7C               	movwf	printf@f& (0+255),b
  9546  010C18  0EEC               	movlw	high STR_114
  9547  010C1A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9548  010C1C  EC52  F086         	call	_printf	;wreg free
  9549                           
  9550                           ;ring_buffer_LUT.c: 663: terminal_printNewline();
  9551  010C20  EC54  F0C0         	call	_terminal_printNewline	;wreg free
  9552                           
  9553                           ;ring_buffer_LUT.c: 664: printf("Help messages appear in yellow\n\r");
  9554  010C24  0E51               	movlw	low STR_115
  9555  010C26  0101               	movlb	1	; () banked
  9556  010C28  6F7C               	movwf	printf@f& (0+255),b
  9557  010C2A  0EFC               	movlw	high STR_115
  9558  010C2C  6F7D               	movwf	(printf@f+1)& (0+255),b
  9559  010C2E  EC52  F086         	call	_printf	;wreg free
  9560                           
  9561                           ;ring_buffer_LUT.c: 666: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9562  010C32  0E00               	movlw	0
  9563  010C34  0101               	movlb	1	; () banked
  9564  010C36  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9565  010C38  0E00               	movlw	0
  9566  010C3A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9567  010C3C  0E02               	movlw	2
  9568  010C3E  EC1E  F09A         	call	_terminal_textAttributes
  9569                           
  9570                           ;ring_buffer_LUT.c: 667: printf("System parameters appear in green\n\r");
  9571  010C42  0E82               	movlw	low STR_116
  9572  010C44  0101               	movlb	1	; () banked
  9573  010C46  6F7C               	movwf	printf@f& (0+255),b
  9574  010C48  0EFB               	movlw	high STR_116
  9575  010C4A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9576  010C4C  EC52  F086         	call	_printf	;wreg free
  9577                           
  9578                           ;ring_buffer_LUT.c: 668: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9579  010C50  0E00               	movlw	0
  9580  010C52  0101               	movlb	1	; () banked
  9581  010C54  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9582  010C56  0E00               	movlw	0
  9583  010C58  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9584  010C5A  0E06               	movlw	6
  9585  010C5C  EC1E  F09A         	call	_terminal_textAttributes
  9586                           
  9587                           ;ring_buffer_LUT.c: 669: printf("Measurement responses appear in cyan\n\r");
  9588  010C60  0E11               	movlw	low STR_117
  9589  010C62  0101               	movlb	1	; () banked
  9590  010C64  6F7C               	movwf	printf@f& (0+255),b
  9591  010C66  0EFB               	movlw	high STR_117
  9592  010C68  6F7D               	movwf	(printf@f+1)& (0+255),b
  9593  010C6A  EC52  F086         	call	_printf	;wreg free
  9594                           
  9595                           ;ring_buffer_LUT.c: 670: terminal_textAttributes(RED, BLACK, NORMAL);
  9596  010C6E  0E00               	movlw	0
  9597  010C70  0101               	movlb	1	; () banked
  9598  010C72  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9599  010C74  0E00               	movlw	0
  9600  010C76  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9601  010C78  0E01               	movlw	1
  9602  010C7A  EC1E  F09A         	call	_terminal_textAttributes
  9603                           
  9604                           ;ring_buffer_LUT.c: 671: printf("Errors appear in red\n\r");
  9605  010C7E  0E2F               	movlw	low STR_118
  9606  010C80  0101               	movlb	1	; () banked
  9607  010C82  6F7C               	movwf	printf@f& (0+255),b
  9608  010C84  0EFD               	movlw	high STR_118
  9609  010C86  6F7D               	movwf	(printf@f+1)& (0+255),b
  9610  010C88  EC52  F086         	call	_printf	;wreg free
  9611                           
  9612                           ;ring_buffer_LUT.c: 672: terminal_textAttributesReset();
  9613  010C8C  EC43  F0C0         	call	_terminal_textAttributesReset	;wreg free
  9614                           
  9615                           ;ring_buffer_LUT.c: 673: printf("User input appears in white\n\r");
  9616  010C90  0E92               	movlw	low STR_119
  9617  010C92  0101               	movlb	1	; () banked
  9618  010C94  6F7C               	movwf	printf@f& (0+255),b
  9619  010C96  0EFC               	movlw	high STR_119
  9620  010C98  6F7D               	movwf	(printf@f+1)& (0+255),b
  9621  010C9A  EC52  F086         	call	_printf	;wreg free
  9622                           
  9623                           ;ring_buffer_LUT.c: 676: terminal_printNewline();
  9624  010C9E  EC54  F0C0         	call	_terminal_printNewline	;wreg free
  9625  010CA2  0012               	return	
  9626  010CA4                     __end_of_ringBufferLUT:
  9627                           	opt stack 0
  9628                           tblptru	equ	0xFF8
  9629                           tblptrh	equ	0xFF7
  9630                           tblptrl	equ	0xFF6
  9631                           tablat	equ	0xFF5
  9632                           intcon	equ	0xFF2
  9633                           postinc0	equ	0xFEE
  9634                           wreg	equ	0xFE8
  9635                           indf1	equ	0xFE7
  9636                           postdec1	equ	0xFE5
  9637                           fsr1h	equ	0xFE2
  9638                           fsr1l	equ	0xFE1
  9639                           indf2	equ	0xFDF
  9640                           postinc2	equ	0xFDE
  9641                           fsr2h	equ	0xFDA
  9642                           fsr2l	equ	0xFD9
  9643                           status	equ	0xFD8
  9644                           
  9645 ;; *************** function _terminal_textAttributesReset *****************
  9646 ;; Defined at:
  9647 ;;		line 223 in file "ring_buffer_interface.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;		None
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9665 ;;Total ram usage:        0 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:   17
  9668 ;; This function calls:
  9669 ;;		_terminal_textAttributes
  9670 ;; This function is called by:
  9671 ;;		_main
  9672 ;;		_ringBufferLUT
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           	psect	text4
  9677  018086                     __ptext4:
  9678                           	opt stack 0
  9679  018086                     _terminal_textAttributesReset:
  9680                           	opt stack 13
  9681                           
  9682                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  9683                           
  9684                           ;incstack = 0
  9685  018086  0E00               	movlw	0
  9686  018088  0101               	movlb	1	; () banked
  9687  01808A  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9688  01808C  0E00               	movlw	0
  9689  01808E  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9690  018090  0E07               	movlw	7
  9691  018092  EC1E  F09A         	call	_terminal_textAttributes
  9692  018096  0012               	return		;funcret
  9693  018098                     __end_of_terminal_textAttributesReset:
  9694                           	opt stack 0
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           intcon	equ	0xFF2
  9700                           postinc0	equ	0xFEE
  9701                           wreg	equ	0xFE8
  9702                           indf1	equ	0xFE7
  9703                           postdec1	equ	0xFE5
  9704                           fsr1h	equ	0xFE2
  9705                           fsr1l	equ	0xFE1
  9706                           indf2	equ	0xFDF
  9707                           postinc2	equ	0xFDE
  9708                           fsr2h	equ	0xFDA
  9709                           fsr2l	equ	0xFD9
  9710                           status	equ	0xFD8
  9711                           
  9712 ;; *************** function _terminal_textAttributes *****************
  9713 ;; Defined at:
  9714 ;;		line 115 in file "ring_buffer_interface.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  foreground_c    1    wreg     enum E17893
  9717 ;;  background_c    1  170[BANK1 ] enum E17893
  9718 ;;  input_attrib    1  171[BANK1 ] enum E17885
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  foreground_c    1  172[BANK1 ] enum E17893
  9721 ;;  output_buff    15  173[BANK1 ] unsigned char [15]
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  1    wreg      void 
  9724 ;; Registers used:
  9725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9731 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9732 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9734 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9735 ;;Total ram usage:       18 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:   16
  9738 ;; This function calls:
  9739 ;;		_printf
  9740 ;;		_strcat
  9741 ;;		_strncpy
  9742 ;; This function is called by:
  9743 ;;		_terminal_textAttributesReset
  9744 ;;		_ringBufferLUT
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text5
  9749  01343C                     __ptext5:
  9750                           	opt stack 0
  9751  01343C                     _terminal_textAttributes:
  9752                           	opt stack 13
  9753                           
  9754                           ;incstack = 0
  9755                           ;terminal_textAttributes@foreground_color stored from wreg
  9756  01343C  0101               	movlb	1	; () banked
  9757  01343E  6FAC               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  9758                           
  9759                           ;ring_buffer_interface.c: 119: char output_buff[15];
  9760                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  9761  013440  0EAD               	movlw	low terminal_textAttributes@output_buff
  9762  013442  0101               	movlb	1	; () banked
  9763  013444  6F17               	movwf	strncpy@to& (0+255),b
  9764  013446  0E01               	movlw	high terminal_textAttributes@output_buff
  9765  013448  6F18               	movwf	(strncpy@to+1)& (0+255),b
  9766  01344A  0EF6               	movlw	low STR_11
  9767  01344C  6F19               	movwf	strncpy@from& (0+255),b
  9768  01344E  0EFF               	movlw	high STR_11
  9769  013450  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  9770  013452  0E00               	movlw	0
  9771  013454  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  9772  013456  0E0F               	movlw	15
  9773  013458  6F1B               	movwf	strncpy@size& (0+255),b
  9774  01345A  ECFF  F0BA         	call	_strncpy	;wreg free
  9775                           
  9776                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  9777  01345E  D054               	goto	l1064
  9778  013460                     
  9779                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  9780  013460  0EAD               	movlw	low terminal_textAttributes@output_buff
  9781  013462  0101               	movlb	1	; () banked
  9782  013464  6F17               	movwf	strcat@to& (0+255),b
  9783  013466  0E01               	movlw	high terminal_textAttributes@output_buff
  9784  013468  6F18               	movwf	(strcat@to+1)& (0+255),b
  9785  01346A  0ECA               	movlw	low (STR_20+1)
  9786  01346C  6F19               	movwf	strcat@from& (0+255),b
  9787  01346E  0EFF               	movlw	high (STR_20+1)
  9788  013470  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9789  013472  ECC8  F0BC         	call	_strcat	;wreg free
  9790                           
  9791                           ;ring_buffer_interface.c: 127: break;
  9792  013476  D05D               	goto	l1066
  9793  013478                     
  9794                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  9795  013478  0EAD               	movlw	low terminal_textAttributes@output_buff
  9796  01347A  0101               	movlb	1	; () banked
  9797  01347C  6F17               	movwf	strcat@to& (0+255),b
  9798  01347E  0E01               	movlw	high terminal_textAttributes@output_buff
  9799  013480  6F18               	movwf	(strcat@to+1)& (0+255),b
  9800  013482  0E70               	movlw	low (STR_67+20)
  9801  013484  6F19               	movwf	strcat@from& (0+255),b
  9802  013486  0EFD               	movlw	high (STR_67+20)
  9803  013488  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9804  01348A  ECC8  F0BC         	call	_strcat	;wreg free
  9805                           
  9806                           ;ring_buffer_interface.c: 130: break;
  9807  01348E  D051               	goto	l1066
  9808  013490                     
  9809                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  9810  013490  0EAD               	movlw	low terminal_textAttributes@output_buff
  9811  013492  0101               	movlb	1	; () banked
  9812  013494  6F17               	movwf	strcat@to& (0+255),b
  9813  013496  0E01               	movlw	high terminal_textAttributes@output_buff
  9814  013498  6F18               	movwf	(strcat@to+1)& (0+255),b
  9815  01349A  0EDF               	movlw	low (STR_24+1)
  9816  01349C  6F19               	movwf	strcat@from& (0+255),b
  9817  01349E  0EFF               	movlw	high (STR_24+1)
  9818  0134A0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9819  0134A2  ECC8  F0BC         	call	_strcat	;wreg free
  9820                           
  9821                           ;ring_buffer_interface.c: 133: break;
  9822  0134A6  D045               	goto	l1066
  9823  0134A8                     
  9824                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  9825  0134A8  0EAD               	movlw	low terminal_textAttributes@output_buff
  9826  0134AA  0101               	movlb	1	; () banked
  9827  0134AC  6F17               	movwf	strcat@to& (0+255),b
  9828  0134AE  0E01               	movlw	high terminal_textAttributes@output_buff
  9829  0134B0  6F18               	movwf	(strcat@to+1)& (0+255),b
  9830  0134B2  0EE5               	movlw	low (STR_25+1)
  9831  0134B4  6F19               	movwf	strcat@from& (0+255),b
  9832  0134B6  0EFF               	movlw	high (STR_25+1)
  9833  0134B8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9834  0134BA  ECC8  F0BC         	call	_strcat	;wreg free
  9835                           
  9836                           ;ring_buffer_interface.c: 136: break;
  9837  0134BE  D039               	goto	l1066
  9838  0134C0                     
  9839                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  9840  0134C0  0EAD               	movlw	low terminal_textAttributes@output_buff
  9841  0134C2  0101               	movlb	1	; () banked
  9842  0134C4  6F17               	movwf	strcat@to& (0+255),b
  9843  0134C6  0E01               	movlw	high terminal_textAttributes@output_buff
  9844  0134C8  6F18               	movwf	(strcat@to+1)& (0+255),b
  9845  0134CA  0EF1               	movlw	low (STR_27+1)
  9846  0134CC  6F19               	movwf	strcat@from& (0+255),b
  9847  0134CE  0EFF               	movlw	high (STR_27+1)
  9848  0134D0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9849  0134D2  ECC8  F0BC         	call	_strcat	;wreg free
  9850                           
  9851                           ;ring_buffer_interface.c: 139: break;
  9852  0134D6  D02D               	goto	l1066
  9853  0134D8                     
  9854                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  9855  0134D8  0EAD               	movlw	low terminal_textAttributes@output_buff
  9856  0134DA  0101               	movlb	1	; () banked
  9857  0134DC  6F17               	movwf	strcat@to& (0+255),b
  9858  0134DE  0E01               	movlw	high terminal_textAttributes@output_buff
  9859  0134E0  6F18               	movwf	(strcat@to+1)& (0+255),b
  9860  0134E2  0EF9               	movlw	low STR_17
  9861  0134E4  6F19               	movwf	strcat@from& (0+255),b
  9862  0134E6  0EFF               	movlw	high STR_17
  9863  0134E8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9864  0134EA  ECC8  F0BC         	call	_strcat	;wreg free
  9865                           
  9866                           ;ring_buffer_interface.c: 142: break;
  9867  0134EE  D021               	goto	l1066
  9868  0134F0                     
  9869                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  9870  0134F0  0EAD               	movlw	low terminal_textAttributes@output_buff
  9871  0134F2  0101               	movlb	1	; () banked
  9872  0134F4  6F17               	movwf	strcat@to& (0+255),b
  9873  0134F6  0E01               	movlw	high terminal_textAttributes@output_buff
  9874  0134F8  6F18               	movwf	(strcat@to+1)& (0+255),b
  9875  0134FA  0ECA               	movlw	low (STR_20+1)
  9876  0134FC  6F19               	movwf	strcat@from& (0+255),b
  9877  0134FE  0EFF               	movlw	high (STR_20+1)
  9878  013500  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9879  013502  ECC8  F0BC         	call	_strcat	;wreg free
  9880                           
  9881                           ;ring_buffer_interface.c: 147: }
  9882                           
  9883                           ;ring_buffer_interface.c: 146: break;
  9884  013506  D015               	goto	l1066
  9885  013508                     l1064:
  9886  013508  0101               	movlb	1	; () banked
  9887  01350A  51AB               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  9888                           
  9889                           ; Switch size 1, requested type "space"
  9890                           ; Number of cases is 6, Range of values is 0 to 5
  9891                           ; switch strategies available:
  9892                           ; Name         Instructions Cycles
  9893                           ; simple_byte           19    10 (average)
  9894                           ;	Chosen strategy is simple_byte
  9895  01350C  0A00               	xorlw	0	; case 0
  9896  01350E  B4D8               	btfsc	status,2,c
  9897  013510  D7A7               	goto	l1065
  9898  013512  0A01               	xorlw	1	; case 1
  9899  013514  B4D8               	btfsc	status,2,c
  9900  013516  D7B0               	goto	l1067
  9901  013518  0A03               	xorlw	3	; case 2
  9902  01351A  B4D8               	btfsc	status,2,c
  9903  01351C  D7B9               	goto	l1068
  9904  01351E  0A01               	xorlw	1	; case 3
  9905  013520  B4D8               	btfsc	status,2,c
  9906  013522  D7C2               	goto	l1069
  9907  013524  0A07               	xorlw	7	; case 4
  9908  013526  B4D8               	btfsc	status,2,c
  9909  013528  D7CB               	goto	l1070
  9910  01352A  0A01               	xorlw	1	; case 5
  9911  01352C  B4D8               	btfsc	status,2,c
  9912  01352E  D7D4               	goto	l1071
  9913  013530  D7DF               	goto	l1072
  9914  013532                     l1066:
  9915                           
  9916                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  9917                           
  9918                           ; BSR set to: 1
  9919  013532  0EAD               	movlw	low terminal_textAttributes@output_buff
  9920  013534  0101               	movlb	1	; () banked
  9921  013536  6F17               	movwf	strcat@to& (0+255),b
  9922  013538  0E01               	movlw	high terminal_textAttributes@output_buff
  9923  01353A  6F18               	movwf	(strcat@to+1)& (0+255),b
  9924  01353C  0EFB               	movlw	low STR_19
  9925  01353E  6F19               	movwf	strcat@from& (0+255),b
  9926  013540  0EFF               	movlw	high STR_19
  9927  013542  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9928  013544  ECC8  F0BC         	call	_strcat	;wreg free
  9929                           
  9930                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  9931  013548  D06C               	goto	l1073
  9932  01354A                     
  9933                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  9934  01354A  0EAD               	movlw	low terminal_textAttributes@output_buff
  9935  01354C  0101               	movlb	1	; () banked
  9936  01354E  6F17               	movwf	strcat@to& (0+255),b
  9937  013550  0E01               	movlw	high terminal_textAttributes@output_buff
  9938  013552  6F18               	movwf	(strcat@to+1)& (0+255),b
  9939  013554  0EC9               	movlw	low STR_20
  9940  013556  6F19               	movwf	strcat@from& (0+255),b
  9941  013558  0EFF               	movlw	high STR_20
  9942  01355A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9943  01355C  ECC8  F0BC         	call	_strcat	;wreg free
  9944                           
  9945                           ;ring_buffer_interface.c: 155: break;
  9946  013560  D07B               	goto	l1075
  9947  013562                     
  9948                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  9949  013562  0EAD               	movlw	low terminal_textAttributes@output_buff
  9950  013564  0101               	movlb	1	; () banked
  9951  013566  6F17               	movwf	strcat@to& (0+255),b
  9952  013568  0E01               	movlw	high terminal_textAttributes@output_buff
  9953  01356A  6F18               	movwf	(strcat@to+1)& (0+255),b
  9954  01356C  0ECC               	movlw	low STR_21
  9955  01356E  6F19               	movwf	strcat@from& (0+255),b
  9956  013570  0EFF               	movlw	high STR_21
  9957  013572  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9958  013574  ECC8  F0BC         	call	_strcat	;wreg free
  9959                           
  9960                           ;ring_buffer_interface.c: 158: break;
  9961  013578  D06F               	goto	l1075
  9962  01357A                     
  9963                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  9964  01357A  0EAD               	movlw	low terminal_textAttributes@output_buff
  9965  01357C  0101               	movlb	1	; () banked
  9966  01357E  6F17               	movwf	strcat@to& (0+255),b
  9967  013580  0E01               	movlw	high terminal_textAttributes@output_buff
  9968  013582  6F18               	movwf	(strcat@to+1)& (0+255),b
  9969  013584  0ED2               	movlw	low STR_22
  9970  013586  6F19               	movwf	strcat@from& (0+255),b
  9971  013588  0EFF               	movlw	high STR_22
  9972  01358A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9973  01358C  ECC8  F0BC         	call	_strcat	;wreg free
  9974                           
  9975                           ;ring_buffer_interface.c: 161: break;
  9976  013590  D063               	goto	l1075
  9977  013592                     
  9978                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  9979  013592  0EAD               	movlw	low terminal_textAttributes@output_buff
  9980  013594  0101               	movlb	1	; () banked
  9981  013596  6F17               	movwf	strcat@to& (0+255),b
  9982  013598  0E01               	movlw	high terminal_textAttributes@output_buff
  9983  01359A  6F18               	movwf	(strcat@to+1)& (0+255),b
  9984  01359C  0ED8               	movlw	low STR_23
  9985  01359E  6F19               	movwf	strcat@from& (0+255),b
  9986  0135A0  0EFF               	movlw	high STR_23
  9987  0135A2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9988  0135A4  ECC8  F0BC         	call	_strcat	;wreg free
  9989                           
  9990                           ;ring_buffer_interface.c: 164: break;
  9991  0135A8  D057               	goto	l1075
  9992  0135AA                     
  9993                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  9994  0135AA  0EAD               	movlw	low terminal_textAttributes@output_buff
  9995  0135AC  0101               	movlb	1	; () banked
  9996  0135AE  6F17               	movwf	strcat@to& (0+255),b
  9997  0135B0  0E01               	movlw	high terminal_textAttributes@output_buff
  9998  0135B2  6F18               	movwf	(strcat@to+1)& (0+255),b
  9999  0135B4  0EDE               	movlw	low STR_24
 10000  0135B6  6F19               	movwf	strcat@from& (0+255),b
 10001  0135B8  0EFF               	movlw	high STR_24
 10002  0135BA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10003  0135BC  ECC8  F0BC         	call	_strcat	;wreg free
 10004                           
 10005                           ;ring_buffer_interface.c: 167: break;
 10006  0135C0  D04B               	goto	l1075
 10007  0135C2                     
 10008                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 10009  0135C2  0EAD               	movlw	low terminal_textAttributes@output_buff
 10010  0135C4  0101               	movlb	1	; () banked
 10011  0135C6  6F17               	movwf	strcat@to& (0+255),b
 10012  0135C8  0E01               	movlw	high terminal_textAttributes@output_buff
 10013  0135CA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10014  0135CC  0EE4               	movlw	low STR_25
 10015  0135CE  6F19               	movwf	strcat@from& (0+255),b
 10016  0135D0  0EFF               	movlw	high STR_25
 10017  0135D2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10018  0135D4  ECC8  F0BC         	call	_strcat	;wreg free
 10019                           
 10020                           ;ring_buffer_interface.c: 170: break;
 10021  0135D8  D03F               	goto	l1075
 10022  0135DA                     
 10023                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 10024  0135DA  0EAD               	movlw	low terminal_textAttributes@output_buff
 10025  0135DC  0101               	movlb	1	; () banked
 10026  0135DE  6F17               	movwf	strcat@to& (0+255),b
 10027  0135E0  0E01               	movlw	high terminal_textAttributes@output_buff
 10028  0135E2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10029  0135E4  0EEA               	movlw	low STR_26
 10030  0135E6  6F19               	movwf	strcat@from& (0+255),b
 10031  0135E8  0EFF               	movlw	high STR_26
 10032  0135EA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10033  0135EC  ECC8  F0BC         	call	_strcat	;wreg free
 10034                           
 10035                           ;ring_buffer_interface.c: 173: break;
 10036  0135F0  D033               	goto	l1075
 10037  0135F2                     
 10038                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 10039  0135F2  0EAD               	movlw	low terminal_textAttributes@output_buff
 10040  0135F4  0101               	movlb	1	; () banked
 10041  0135F6  6F17               	movwf	strcat@to& (0+255),b
 10042  0135F8  0E01               	movlw	high terminal_textAttributes@output_buff
 10043  0135FA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10044  0135FC  0EF0               	movlw	low STR_27
 10045  0135FE  6F19               	movwf	strcat@from& (0+255),b
 10046  013600  0EFF               	movlw	high STR_27
 10047  013602  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10048  013604  ECC8  F0BC         	call	_strcat	;wreg free
 10049                           
 10050                           ;ring_buffer_interface.c: 176: break;
 10051  013608  D027               	goto	l1075
 10052  01360A                     
 10053                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 10054  01360A  0EAD               	movlw	low terminal_textAttributes@output_buff
 10055  01360C  0101               	movlb	1	; () banked
 10056  01360E  6F17               	movwf	strcat@to& (0+255),b
 10057  013610  0E01               	movlw	high terminal_textAttributes@output_buff
 10058  013612  6F18               	movwf	(strcat@to+1)& (0+255),b
 10059  013614  0EF0               	movlw	low STR_27
 10060  013616  6F19               	movwf	strcat@from& (0+255),b
 10061  013618  0EFF               	movlw	high STR_27
 10062  01361A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10063  01361C  ECC8  F0BC         	call	_strcat	;wreg free
 10064                           
 10065                           ;ring_buffer_interface.c: 181: }
 10066                           
 10067                           ;ring_buffer_interface.c: 180: break;
 10068  013620  D01B               	goto	l1075
 10069  013622                     l1073:
 10070  013622  0101               	movlb	1	; () banked
 10071  013624  51AC               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 10072                           
 10073                           ; Switch size 1, requested type "space"
 10074                           ; Number of cases is 8, Range of values is 0 to 7
 10075                           ; switch strategies available:
 10076                           ; Name         Instructions Cycles
 10077                           ; simple_byte           25    13 (average)
 10078                           ;	Chosen strategy is simple_byte
 10079  013626  0A00               	xorlw	0	; case 0
 10080  013628  B4D8               	btfsc	status,2,c
 10081  01362A  D78F               	goto	l1074
 10082  01362C  0A01               	xorlw	1	; case 1
 10083  01362E  B4D8               	btfsc	status,2,c
 10084  013630  D798               	goto	l1076
 10085  013632  0A03               	xorlw	3	; case 2
 10086  013634  B4D8               	btfsc	status,2,c
 10087  013636  D7A1               	goto	l1077
 10088  013638  0A01               	xorlw	1	; case 3
 10089  01363A  B4D8               	btfsc	status,2,c
 10090  01363C  D7AA               	goto	l1078
 10091  01363E  0A07               	xorlw	7	; case 4
 10092  013640  B4D8               	btfsc	status,2,c
 10093  013642  D7B3               	goto	l1079
 10094  013644  0A01               	xorlw	1	; case 5
 10095  013646  B4D8               	btfsc	status,2,c
 10096  013648  D7BC               	goto	l1080
 10097  01364A  0A03               	xorlw	3	; case 6
 10098  01364C  B4D8               	btfsc	status,2,c
 10099  01364E  D7C5               	goto	l1081
 10100  013650  0A01               	xorlw	1	; case 7
 10101  013652  B4D8               	btfsc	status,2,c
 10102  013654  D7CE               	goto	l1082
 10103  013656  D7D9               	goto	l1083
 10104  013658                     l1075:
 10105                           
 10106                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 10107                           
 10108                           ; BSR set to: 1
 10109  013658  0EAD               	movlw	low terminal_textAttributes@output_buff
 10110  01365A  0101               	movlb	1	; () banked
 10111  01365C  6F17               	movwf	strcat@to& (0+255),b
 10112  01365E  0E01               	movlw	high terminal_textAttributes@output_buff
 10113  013660  6F18               	movwf	(strcat@to+1)& (0+255),b
 10114  013662  0EFB               	movlw	low STR_19
 10115  013664  6F19               	movwf	strcat@from& (0+255),b
 10116  013666  0EFF               	movlw	high STR_19
 10117  013668  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10118  01366A  ECC8  F0BC         	call	_strcat	;wreg free
 10119                           
 10120                           ;ring_buffer_interface.c: 185: switch (background_color) {
 10121  01366E  D06C               	goto	l1084
 10122  013670                     
 10123                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 10124  013670  0EAD               	movlw	low terminal_textAttributes@output_buff
 10125  013672  0101               	movlb	1	; () banked
 10126  013674  6F17               	movwf	strcat@to& (0+255),b
 10127  013676  0E01               	movlw	high terminal_textAttributes@output_buff
 10128  013678  6F18               	movwf	(strcat@to+1)& (0+255),b
 10129  01367A  0E4D               	movlw	low (STR_120+9)
 10130  01367C  6F19               	movwf	strcat@from& (0+255),b
 10131  01367E  0EFF               	movlw	high (STR_120+9)
 10132  013680  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10133  013682  ECC8  F0BC         	call	_strcat	;wreg free
 10134                           
 10135                           ;ring_buffer_interface.c: 189: break;
 10136  013686  D07B               	goto	l1086
 10137  013688                     
 10138                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 10139  013688  0EAD               	movlw	low terminal_textAttributes@output_buff
 10140  01368A  0101               	movlb	1	; () banked
 10141  01368C  6F17               	movwf	strcat@to& (0+255),b
 10142  01368E  0E01               	movlw	high terminal_textAttributes@output_buff
 10143  013690  6F18               	movwf	(strcat@to+1)& (0+255),b
 10144  013692  0ECF               	movlw	low STR_31
 10145  013694  6F19               	movwf	strcat@from& (0+255),b
 10146  013696  0EFF               	movlw	high STR_31
 10147  013698  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10148  01369A  ECC8  F0BC         	call	_strcat	;wreg free
 10149                           
 10150                           ;ring_buffer_interface.c: 192: break;
 10151  01369E  D06F               	goto	l1086
 10152  0136A0                     
 10153                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 10154  0136A0  0EAD               	movlw	low terminal_textAttributes@output_buff
 10155  0136A2  0101               	movlb	1	; () banked
 10156  0136A4  6F17               	movwf	strcat@to& (0+255),b
 10157  0136A6  0E01               	movlw	high terminal_textAttributes@output_buff
 10158  0136A8  6F18               	movwf	(strcat@to+1)& (0+255),b
 10159  0136AA  0ED5               	movlw	low STR_32
 10160  0136AC  6F19               	movwf	strcat@from& (0+255),b
 10161  0136AE  0EFF               	movlw	high STR_32
 10162  0136B0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10163  0136B2  ECC8  F0BC         	call	_strcat	;wreg free
 10164                           
 10165                           ;ring_buffer_interface.c: 195: break;
 10166  0136B6  D063               	goto	l1086
 10167  0136B8                     
 10168                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 10169  0136B8  0EAD               	movlw	low terminal_textAttributes@output_buff
 10170  0136BA  0101               	movlb	1	; () banked
 10171  0136BC  6F17               	movwf	strcat@to& (0+255),b
 10172  0136BE  0E01               	movlw	high terminal_textAttributes@output_buff
 10173  0136C0  6F18               	movwf	(strcat@to+1)& (0+255),b
 10174  0136C2  0EDB               	movlw	low STR_33
 10175  0136C4  6F19               	movwf	strcat@from& (0+255),b
 10176  0136C6  0EFF               	movlw	high STR_33
 10177  0136C8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10178  0136CA  ECC8  F0BC         	call	_strcat	;wreg free
 10179                           
 10180                           ;ring_buffer_interface.c: 198: break;
 10181  0136CE  D057               	goto	l1086
 10182  0136D0                     
 10183                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 10184  0136D0  0EAD               	movlw	low terminal_textAttributes@output_buff
 10185  0136D2  0101               	movlb	1	; () banked
 10186  0136D4  6F17               	movwf	strcat@to& (0+255),b
 10187  0136D6  0E01               	movlw	high terminal_textAttributes@output_buff
 10188  0136D8  6F18               	movwf	(strcat@to+1)& (0+255),b
 10189  0136DA  0EE1               	movlw	low STR_34
 10190  0136DC  6F19               	movwf	strcat@from& (0+255),b
 10191  0136DE  0EFF               	movlw	high STR_34
 10192  0136E0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10193  0136E2  ECC8  F0BC         	call	_strcat	;wreg free
 10194                           
 10195                           ;ring_buffer_interface.c: 201: break;
 10196  0136E6  D04B               	goto	l1086
 10197  0136E8                     
 10198                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 10199  0136E8  0EAD               	movlw	low terminal_textAttributes@output_buff
 10200  0136EA  0101               	movlb	1	; () banked
 10201  0136EC  6F17               	movwf	strcat@to& (0+255),b
 10202  0136EE  0E01               	movlw	high terminal_textAttributes@output_buff
 10203  0136F0  6F18               	movwf	(strcat@to+1)& (0+255),b
 10204  0136F2  0EE7               	movlw	low STR_35
 10205  0136F4  6F19               	movwf	strcat@from& (0+255),b
 10206  0136F6  0EFF               	movlw	high STR_35
 10207  0136F8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10208  0136FA  ECC8  F0BC         	call	_strcat	;wreg free
 10209                           
 10210                           ;ring_buffer_interface.c: 204: break;
 10211  0136FE  D03F               	goto	l1086
 10212  013700                     
 10213                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 10214  013700  0EAD               	movlw	low terminal_textAttributes@output_buff
 10215  013702  0101               	movlb	1	; () banked
 10216  013704  6F17               	movwf	strcat@to& (0+255),b
 10217  013706  0E01               	movlw	high terminal_textAttributes@output_buff
 10218  013708  6F18               	movwf	(strcat@to+1)& (0+255),b
 10219  01370A  0EED               	movlw	low STR_36
 10220  01370C  6F19               	movwf	strcat@from& (0+255),b
 10221  01370E  0EFF               	movlw	high STR_36
 10222  013710  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10223  013712  ECC8  F0BC         	call	_strcat	;wreg free
 10224                           
 10225                           ;ring_buffer_interface.c: 207: break;
 10226  013716  D033               	goto	l1086
 10227  013718                     
 10228                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 10229  013718  0EAD               	movlw	low terminal_textAttributes@output_buff
 10230  01371A  0101               	movlb	1	; () banked
 10231  01371C  6F17               	movwf	strcat@to& (0+255),b
 10232  01371E  0E01               	movlw	high terminal_textAttributes@output_buff
 10233  013720  6F18               	movwf	(strcat@to+1)& (0+255),b
 10234  013722  0EF3               	movlw	low STR_37
 10235  013724  6F19               	movwf	strcat@from& (0+255),b
 10236  013726  0EFF               	movlw	high STR_37
 10237  013728  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10238  01372A  ECC8  F0BC         	call	_strcat	;wreg free
 10239                           
 10240                           ;ring_buffer_interface.c: 210: break;
 10241  01372E  D027               	goto	l1086
 10242  013730                     
 10243                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 10244  013730  0EAD               	movlw	low terminal_textAttributes@output_buff
 10245  013732  0101               	movlb	1	; () banked
 10246  013734  6F17               	movwf	strcat@to& (0+255),b
 10247  013736  0E01               	movlw	high terminal_textAttributes@output_buff
 10248  013738  6F18               	movwf	(strcat@to+1)& (0+255),b
 10249  01373A  0EF3               	movlw	low STR_37
 10250  01373C  6F19               	movwf	strcat@from& (0+255),b
 10251  01373E  0EFF               	movlw	high STR_37
 10252  013740  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10253  013742  ECC8  F0BC         	call	_strcat	;wreg free
 10254                           
 10255                           ;ring_buffer_interface.c: 215: }
 10256                           
 10257                           ;ring_buffer_interface.c: 214: break;
 10258  013746  D01B               	goto	l1086
 10259  013748                     l1084:
 10260  013748  0101               	movlb	1	; () banked
 10261  01374A  51AA               	movf	terminal_textAttributes@background_color& (0+255),w,b
 10262                           
 10263                           ; Switch size 1, requested type "space"
 10264                           ; Number of cases is 8, Range of values is 0 to 7
 10265                           ; switch strategies available:
 10266                           ; Name         Instructions Cycles
 10267                           ; simple_byte           25    13 (average)
 10268                           ;	Chosen strategy is simple_byte
 10269  01374C  0A00               	xorlw	0	; case 0
 10270  01374E  B4D8               	btfsc	status,2,c
 10271  013750  D78F               	goto	l1085
 10272  013752  0A01               	xorlw	1	; case 1
 10273  013754  B4D8               	btfsc	status,2,c
 10274  013756  D798               	goto	l1087
 10275  013758  0A03               	xorlw	3	; case 2
 10276  01375A  B4D8               	btfsc	status,2,c
 10277  01375C  D7A1               	goto	l1088
 10278  01375E  0A01               	xorlw	1	; case 3
 10279  013760  B4D8               	btfsc	status,2,c
 10280  013762  D7AA               	goto	l1089
 10281  013764  0A07               	xorlw	7	; case 4
 10282  013766  B4D8               	btfsc	status,2,c
 10283  013768  D7B3               	goto	l1090
 10284  01376A  0A01               	xorlw	1	; case 5
 10285  01376C  B4D8               	btfsc	status,2,c
 10286  01376E  D7BC               	goto	l1091
 10287  013770  0A03               	xorlw	3	; case 6
 10288  013772  B4D8               	btfsc	status,2,c
 10289  013774  D7C5               	goto	l1092
 10290  013776  0A01               	xorlw	1	; case 7
 10291  013778  B4D8               	btfsc	status,2,c
 10292  01377A  D7CE               	goto	l1093
 10293  01377C  D7D9               	goto	l1094
 10294  01377E                     l1086:
 10295                           
 10296                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 10297                           
 10298                           ; BSR set to: 1
 10299  01377E  0EAD               	movlw	low terminal_textAttributes@output_buff
 10300  013780  0101               	movlb	1	; () banked
 10301  013782  6F17               	movwf	strcat@to& (0+255),b
 10302  013784  0E01               	movlw	high terminal_textAttributes@output_buff
 10303  013786  6F18               	movwf	(strcat@to+1)& (0+255),b
 10304  013788  0EFD               	movlw	low STR_39
 10305  01378A  6F19               	movwf	strcat@from& (0+255),b
 10306  01378C  0EFF               	movlw	high STR_39
 10307  01378E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10308  013790  ECC8  F0BC         	call	_strcat	;wreg free
 10309                           
 10310                           ;ring_buffer_interface.c: 219: printf(output_buff);
 10311  013794  0EAD               	movlw	low terminal_textAttributes@output_buff
 10312  013796  0101               	movlb	1	; () banked
 10313  013798  6F7C               	movwf	printf@f& (0+255),b
 10314  01379A  0E01               	movlw	high terminal_textAttributes@output_buff
 10315  01379C  6F7D               	movwf	(printf@f+1)& (0+255),b
 10316  01379E  EC52  F086         	call	_printf	;wreg free
 10317  0137A2  0012               	return		;funcret
 10318  0137A4                     __end_of_terminal_textAttributes:
 10319                           	opt stack 0
 10320                           tblptru	equ	0xFF8
 10321                           tblptrh	equ	0xFF7
 10322                           tblptrl	equ	0xFF6
 10323                           tablat	equ	0xFF5
 10324                           intcon	equ	0xFF2
 10325                           postinc0	equ	0xFEE
 10326                           wreg	equ	0xFE8
 10327                           indf1	equ	0xFE7
 10328                           postdec1	equ	0xFE5
 10329                           fsr1h	equ	0xFE2
 10330                           fsr1l	equ	0xFE1
 10331                           indf2	equ	0xFDF
 10332                           postinc2	equ	0xFDE
 10333                           fsr2h	equ	0xFDA
 10334                           fsr2l	equ	0xFD9
 10335                           status	equ	0xFD8
 10336                           
 10337 ;; *************** function _strncpy *****************
 10338 ;; Defined at:
 10339 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  to              2   23[BANK1 ] PTR unsigned char 
 10342 ;;		 -> terminal_textAttributes@output_buff(15), 
 10343 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 10344 ;;		 -> STR_11(3), 
 10345 ;;  size            2   27[BANK1 ] unsigned int 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 10348 ;;		 -> terminal_textAttributes@output_buff(15), 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  2   23[BANK1 ] PTR unsigned char 
 10351 ;; Registers used:
 10352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10358 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10359 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10362 ;;Total ram usage:        8 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:   13
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		_terminal_textAttributes
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text6
 10373  0175FE                     __ptext6:
 10374                           	opt stack 0
 10375  0175FE                     _strncpy:
 10376                           	opt stack 15
 10377                           
 10378                           ;incstack = 0
 10379  0175FE  C117  F11D         	movff	strncpy@to,strncpy@cp
 10380  017602  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 10381  017606  D018               	goto	l2167
 10382  017608  0101               	movlb	1	; () banked
 10383  01760A  071B               	decf	strncpy@size& (0+255),f,b
 10384  01760C  A0D8               	btfss	status,0,c
 10385  01760E  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10386                           
 10387                           ; BSR set to: 1
 10388  017610  C119  FFF6         	movff	strncpy@from,tblptrl
 10389  017614  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 10390  017618  4B19               	infsnz	strncpy@from& (0+255),f,b
 10391  01761A  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 10392  01761C                     	if	0	;tblptru may be non-zero
 10393  01761C                     	endif
 10394  01761C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10395  01761C  0E00               	movlw	low (__mediumconst shr (0+16))
 10396  01761E  6EF8               	movwf	tblptru,c
 10397  017620                     	endif
 10398  017620  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10399  017624  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10400  017628  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10401  01762A  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10402  01762C  0008               	tblrd		*
 10403  01762E  CFF5 FFDF          	movff	tablat,indf2
 10404  017632  50DF               	movf	indf2,w,c
 10405  017634  B4D8               	btfsc	status,2,c
 10406  017636  D00E               	goto	l2169
 10407  017638                     l2167:
 10408                           
 10409                           ; BSR set to: 1
 10410                           
 10411                           ; BSR set to: 1
 10412  017638  0101               	movlb	1	; () banked
 10413  01763A  511B               	movf	strncpy@size& (0+255),w,b
 10414  01763C  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 10415  01763E  B4D8               	btfsc	status,2,c
 10416  017640  D009               	goto	l2169
 10417  017642  D7E2               	goto	l2166
 10418  017644                     l12028:
 10419                           
 10420                           ; BSR set to: 1
 10421  017644  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10422  017648  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10423  01764C  0E00               	movlw	0
 10424  01764E  6EDF               	movwf	indf2,c
 10425                           
 10426                           ; BSR set to: 1
 10427  017650  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10428  017652  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10429  017654                     l2169:
 10430                           
 10431                           ; BSR set to: 1
 10432                           
 10433                           ; BSR set to: 1
 10434  017654  071B               	decf	strncpy@size& (0+255),f,b
 10435  017656  A0D8               	btfss	status,0,c
 10436  017658  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10437  01765A  291B               	incf	strncpy@size& (0+255),w,b
 10438  01765C  E1F3               	bnz	l12028
 10439  01765E  291C               	incf	(strncpy@size+1)& (0+255),w,b
 10440  017660  B4D8               	btfsc	status,2,c
 10441  017662  0012               	return	
 10442  017664  D7EF               	goto	l2170
 10443  017666                     __end_of_strncpy:
 10444                           	opt stack 0
 10445                           tblptru	equ	0xFF8
 10446                           tblptrh	equ	0xFF7
 10447                           tblptrl	equ	0xFF6
 10448                           tablat	equ	0xFF5
 10449                           intcon	equ	0xFF2
 10450                           postinc0	equ	0xFEE
 10451                           wreg	equ	0xFE8
 10452                           indf1	equ	0xFE7
 10453                           postdec1	equ	0xFE5
 10454                           fsr1h	equ	0xFE2
 10455                           fsr1l	equ	0xFE1
 10456                           indf2	equ	0xFDF
 10457                           postinc2	equ	0xFDE
 10458                           fsr2h	equ	0xFDA
 10459                           fsr2l	equ	0xFD9
 10460                           status	equ	0xFD8
 10461                           
 10462 ;; *************** function _strcat *****************
 10463 ;; Defined at:
 10464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;  to              2   23[BANK1 ] PTR unsigned char 
 10467 ;;		 -> terminal_textAttributes@output_buff(15), 
 10468 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 10469 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 10470 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 10471 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 10472 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 10473 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 10474 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 10475 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 10478 ;;		 -> terminal_textAttributes@output_buff(15), 
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  2   23[BANK1 ] PTR unsigned char 
 10481 ;; Registers used:
 10482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10488 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10492 ;;Total ram usage:        6 bytes
 10493 ;; Hardware stack levels used:    1
 10494 ;; Hardware stack levels required when called:   13
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_terminal_textAttributes
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text7
 10503  017990                     __ptext7:
 10504                           	opt stack 0
 10505  017990                     _strcat:
 10506                           	opt stack 15
 10507                           
 10508                           ; BSR set to: 1
 10509                           ;incstack = 0
 10510  017990  C117  F11B         	movff	strcat@to,strcat@cp
 10511  017994  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 10512  017998  D003               	goto	l2136
 10513  01799A  0101               	movlb	1	; () banked
 10514  01799C  4B1B               	infsnz	strcat@cp& (0+255),f,b
 10515  01799E  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 10516  0179A0                     l2136:
 10517                           
 10518                           ; BSR set to: 1
 10519  0179A0  C11B  FFD9         	movff	strcat@cp,fsr2l
 10520  0179A4  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 10521  0179A8  50DF               	movf	indf2,w,c
 10522  0179AA  B4D8               	btfsc	status,2,c
 10523  0179AC  D006               	goto	l2139
 10524  0179AE  D7F5               	goto	l2137
 10525  0179B0  0101               	movlb	1	; () banked
 10526  0179B2  4B1B               	infsnz	strcat@cp& (0+255),f,b
 10527  0179B4  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 10528  0179B6  4B19               	infsnz	strcat@from& (0+255),f,b
 10529  0179B8  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 10530  0179BA                     l2139:
 10531                           
 10532                           ; BSR set to: 1
 10533  0179BA  C119  FFF6         	movff	strcat@from,tblptrl
 10534  0179BE  C11A  FFF7         	movff	strcat@from+1,tblptrh
 10535  0179C2                     	if	0	;tblptru may be non-zero
 10536  0179C2                     	endif
 10537  0179C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10538  0179C2  0E00               	movlw	low (__mediumconst shr (0+16))
 10539  0179C4  6EF8               	movwf	tblptru,c
 10540  0179C6                     	endif
 10541  0179C6  C11B  FFD9         	movff	strcat@cp,fsr2l
 10542  0179CA  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 10543  0179CE  0008               	tblrd		*
 10544  0179D0  CFF5 FFDF          	movff	tablat,indf2
 10545  0179D4  50DF               	movf	indf2,w,c
 10546  0179D6  B4D8               	btfsc	status,2,c
 10547  0179D8  0012               	return	
 10548  0179DA  D7EA               	goto	l2140
 10549  0179DC                     __end_of_strcat:
 10550                           	opt stack 0
 10551                           tblptru	equ	0xFF8
 10552                           tblptrh	equ	0xFF7
 10553                           tblptrl	equ	0xFF6
 10554                           tablat	equ	0xFF5
 10555                           intcon	equ	0xFF2
 10556                           postinc0	equ	0xFEE
 10557                           wreg	equ	0xFE8
 10558                           indf1	equ	0xFE7
 10559                           postdec1	equ	0xFE5
 10560                           fsr1h	equ	0xFE2
 10561                           fsr1l	equ	0xFE1
 10562                           indf2	equ	0xFDF
 10563                           postinc2	equ	0xFDE
 10564                           fsr2h	equ	0xFDA
 10565                           fsr2l	equ	0xFD9
 10566                           status	equ	0xFD8
 10567                           
 10568 ;; *************** function _terminal_printNewline *****************
 10569 ;; Defined at:
 10570 ;;		line 230 in file "ring_buffer_interface.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;		None
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;		None
 10575 ;; Return value:  Size  Location     Type
 10576 ;;                  1    wreg      void 
 10577 ;; Registers used:
 10578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10579 ;; Tracked objects:
 10580 ;;		On entry : 0/0
 10581 ;;		On exit  : 0/0
 10582 ;;		Unchanged: 0/0
 10583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;Total ram usage:        0 bytes
 10589 ;; Hardware stack levels used:    1
 10590 ;; Hardware stack levels required when called:   16
 10591 ;; This function calls:
 10592 ;;		_printf
 10593 ;; This function is called by:
 10594 ;;		_ringBufferLUT
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           
 10598                           	psect	text8
 10599  0180A8                     __ptext8:
 10600                           	opt stack 0
 10601  0180A8                     _terminal_printNewline:
 10602                           	opt stack 12
 10603                           
 10604                           ;ring_buffer_interface.c: 232: printf("\n\r");
 10605                           
 10606                           ;incstack = 0
 10607  0180A8  0E6D               	movlw	low (STR_108+68)
 10608  0180AA  0101               	movlb	1	; () banked
 10609  0180AC  6F7C               	movwf	printf@f& (0+255),b
 10610  0180AE  0EF7               	movlw	high (STR_108+68)
 10611  0180B0  6F7D               	movwf	(printf@f+1)& (0+255),b
 10612  0180B2  EC52  F086         	call	_printf	;wreg free
 10613  0180B6  0012               	return		;funcret
 10614  0180B8                     __end_of_terminal_printNewline:
 10615                           	opt stack 0
 10616                           tblptru	equ	0xFF8
 10617                           tblptrh	equ	0xFF7
 10618                           tblptrl	equ	0xFF6
 10619                           tablat	equ	0xFF5
 10620                           intcon	equ	0xFF2
 10621                           postinc0	equ	0xFEE
 10622                           wreg	equ	0xFE8
 10623                           indf1	equ	0xFE7
 10624                           postdec1	equ	0xFE5
 10625                           fsr1h	equ	0xFE2
 10626                           fsr1l	equ	0xFE1
 10627                           indf2	equ	0xFDF
 10628                           postinc2	equ	0xFDE
 10629                           fsr2h	equ	0xFDA
 10630                           fsr2l	equ	0xFD9
 10631                           status	equ	0xFD8
 10632                           
 10633 ;; *************** function _strstr *****************
 10634 ;; Defined at:
 10635 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 10638 ;;		 -> NULL(0), line(64), 
 10639 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 10640 ;;		 -> STR_102(25), 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  2   38[BANK1 ] PTR unsigned char 
 10645 ;; Registers used:
 10646 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10652 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10656 ;;Total ram usage:        4 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:   14
 10659 ;; This function calls:
 10660 ;;		_strchr
 10661 ;;		_strlen
 10662 ;;		_strncmp
 10663 ;; This function is called by:
 10664 ;;		_ringBufferLUT
 10665 ;; This function uses a non-reentrant model
 10666 ;;
 10667                           
 10668                           	psect	text9
 10669  016FB2                     __ptext9:
 10670                           	opt stack 0
 10671  016FB2                     _strstr:
 10672                           	opt stack 14
 10673                           
 10674                           ;incstack = 0
 10675  016FB2  D034               	goto	l2181
 10676  016FB4  C126  F11D         	movff	strstr@s1,strncmp@s1
 10677  016FB8  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 10678  016FBC  C128  F11F         	movff	strstr@s2,strncmp@s2
 10679  016FC0  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 10680  016FC4  C128  F117         	movff	strstr@s2,strlen@s
 10681  016FC8  C129  F118         	movff	strstr@s2+1,strlen@s+1
 10682  016FCC  ECFC  F0BB         	call	_strlen	;wreg free
 10683  016FD0  C117  F121         	movff	?_strlen,strncmp@len
 10684  016FD4  C118  F122         	movff	?_strlen+1,strncmp@len+1
 10685  016FD8  EC91  F0B7         	call	_strncmp	;wreg free
 10686  016FDC  0101               	movlb	1	; () banked
 10687  016FDE  511D               	movf	?_strncmp& (0+255),w,b
 10688  016FE0  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 10689  016FE2  A4D8               	btfss	status,2,c
 10690  016FE4  D005               	goto	l2183
 10691                           
 10692                           ; BSR set to: 1
 10693  016FE6  C126  F126         	movff	strstr@s1,?_strstr
 10694  016FEA  C127  F127         	movff	strstr@s1+1,?_strstr+1
 10695                           
 10696                           ; BSR set to: 1
 10697  016FEE  0012               	return	
 10698  016FF0                     l2183:
 10699                           
 10700                           ; BSR set to: 1
 10701                           
 10702                           ; BSR set to: 1
 10703  016FF0  0E01               	movlw	1
 10704  016FF2  2526               	addwf	strstr@s1& (0+255),w,b
 10705  016FF4  6F17               	movwf	strchr@ptr& (0+255),b
 10706  016FF6  0E00               	movlw	0
 10707  016FF8  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 10708  016FFA  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 10709  016FFC  C128  FFF6         	movff	strstr@s2,tblptrl
 10710  017000  C129  FFF7         	movff	strstr@s2+1,tblptrh
 10711  017004                     	if	0	;tblptru may be non-zero
 10712  017004                     	endif
 10713  017004                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10714  017004  0E00               	movlw	low (__mediumconst shr (0+16))
 10715  017006  6EF8               	movwf	tblptru,c
 10716  017008                     	endif
 10717  017008  0008               	tblrd		*
 10718  01700A  50F5               	movf	tablat,w,c
 10719  01700C  6F19               	movwf	strchr@chr& (0+255),b
 10720  01700E  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 10721  017010  EC44  F0BE         	call	_strchr	;wreg free
 10722  017014  C117  F126         	movff	?_strchr,strstr@s1
 10723  017018  C118  F127         	movff	?_strchr+1,strstr@s1+1
 10724  01701C                     l2181:
 10725  01701C  0101               	movlb	1	; () banked
 10726  01701E  5126               	movf	strstr@s1& (0+255),w,b
 10727  017020  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 10728  017022  B4D8               	btfsc	status,2,c
 10729  017024  D007               	goto	u14930
 10730                           
 10731                           ; BSR set to: 1
 10732  017026  C126  FFD9         	movff	strstr@s1,fsr2l
 10733  01702A  C127  FFDA         	movff	strstr@s1+1,fsr2h
 10734  01702E  50DF               	movf	indf2,w,c
 10735  017030  A4D8               	btfss	status,2,c
 10736  017032  D7C0               	goto	l2182
 10737  017034                     u14930:
 10738                           
 10739                           ; BSR set to: 1
 10740                           
 10741                           ; BSR set to: 1
 10742                           
 10743                           ; BSR set to: 1
 10744  017034  0E00               	movlw	0
 10745  017036  6F26               	movwf	?_strstr& (0+255),b
 10746  017038  0E00               	movlw	0
 10747  01703A  6F27               	movwf	(?_strstr+1)& (0+255),b
 10748  01703C  0012               	return	
 10749  01703E                     __end_of_strstr:
 10750                           	opt stack 0
 10751                           tblptru	equ	0xFF8
 10752                           tblptrh	equ	0xFF7
 10753                           tblptrl	equ	0xFF6
 10754                           tablat	equ	0xFF5
 10755                           intcon	equ	0xFF2
 10756                           postinc0	equ	0xFEE
 10757                           wreg	equ	0xFE8
 10758                           indf1	equ	0xFE7
 10759                           postdec1	equ	0xFE5
 10760                           fsr1h	equ	0xFE2
 10761                           fsr1l	equ	0xFE1
 10762                           indf2	equ	0xFDF
 10763                           postinc2	equ	0xFDE
 10764                           fsr2h	equ	0xFDA
 10765                           fsr2l	equ	0xFD9
 10766                           status	equ	0xFD8
 10767                           
 10768 ;; *************** function _strncmp *****************
 10769 ;; Defined at:
 10770 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 10773 ;;		 -> NULL(0), line(64), 
 10774 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 10775 ;;		 -> STR_102(25), 
 10776 ;;  len             2   33[BANK1 ] unsigned int 
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;		None
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  2   29[BANK1 ] int 
 10781 ;; Registers used:
 10782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10788 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10791 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10792 ;;Total ram usage:        9 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:   13
 10795 ;; This function calls:
 10796 ;;		Nothing
 10797 ;; This function is called by:
 10798 ;;		_strstr
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           	psect	text10
 10803  016F22                     __ptext10:
 10804                           	opt stack 0
 10805  016F22                     _strncmp:
 10806                           	opt stack 14
 10807                           
 10808                           ; BSR set to: 1
 10809                           ;incstack = 0
 10810  016F22  D039               	goto	l2240
 10811  016F24                     l12244:
 10812  016F24  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10813  016F28  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10814  016F2C  50DF               	movf	indf2,w,c
 10815  016F2E  B4D8               	btfsc	status,2,c
 10816  016F30  D012               	goto	u14660
 10817  016F32  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10818  016F36  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10819  016F3A  50DF               	movf	indf2,w,c
 10820  016F3C  0101               	movlb	1	; () banked
 10821  016F3E  6F23               	movwf	??_strncmp& (0+255),b
 10822  016F40  C11F  FFF6         	movff	strncmp@s2,tblptrl
 10823  016F44  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 10824  016F48                     	if	0	;tblptru may be non-zero
 10825  016F48                     	endif
 10826  016F48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10827  016F48  0E00               	movlw	low (__mediumconst shr (0+16))
 10828  016F4A  6EF8               	movwf	tblptru,c
 10829  016F4C                     	endif
 10830  016F4C  0008               	tblrd		*
 10831  016F4E  50F5               	movf	tablat,w,c
 10832  016F50  1923               	xorwf	??_strncmp& (0+255),w,b
 10833  016F52  B4D8               	btfsc	status,2,c
 10834  016F54  D01C               	goto	l2242
 10835  016F56                     u14660:
 10836                           
 10837                           ; BSR set to: 1
 10838  016F56  C11F  FFF6         	movff	strncmp@s2,tblptrl
 10839  016F5A  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 10840  016F5E                     	if	0	;tblptru may be non-zero
 10841  016F5E                     	endif
 10842  016F5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10843  016F5E  0E00               	movlw	low (__mediumconst shr (0+16))
 10844  016F60  6EF8               	movwf	tblptru,c
 10845  016F62                     	endif
 10846  016F62  0008               	tblrd		*
 10847  016F64  50F5               	movf	tablat,w,c
 10848  016F66  0101               	movlb	1	; () banked
 10849  016F68  6F23               	movwf	??_strncmp& (0+255),b
 10850  016F6A  6B24               	clrf	(??_strncmp+1)& (0+255),b
 10851  016F6C  1F23               	comf	??_strncmp& (0+255),f,b
 10852  016F6E  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 10853  016F70  4B23               	infsnz	??_strncmp& (0+255),f,b
 10854  016F72  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 10855  016F74  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10856  016F78  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10857  016F7C  50DF               	movf	indf2,w,c
 10858  016F7E  6F25               	movwf	(??_strncmp+2)& (0+255),b
 10859  016F80  5125               	movf	(??_strncmp+2)& (0+255),w,b
 10860  016F82  2523               	addwf	??_strncmp& (0+255),w,b
 10861  016F84  6F1D               	movwf	?_strncmp& (0+255),b
 10862  016F86  0E00               	movlw	0
 10863  016F88  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 10864  016F8A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 10865                           
 10866                           ; BSR set to: 1
 10867  016F8C  0012               	return	
 10868  016F8E                     l2242:
 10869                           
 10870                           ; BSR set to: 1
 10871                           
 10872                           ; BSR set to: 1
 10873  016F8E  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 10874  016F90  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 10875  016F92  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 10876  016F94  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 10877  016F96                     l2240:
 10878                           
 10879                           ; BSR set to: 1
 10880  016F96  0101               	movlb	1	; () banked
 10881  016F98  0721               	decf	strncmp@len& (0+255),f,b
 10882  016F9A  A0D8               	btfss	status,0,c
 10883  016F9C  0722               	decf	(strncmp@len+1)& (0+255),f,b
 10884  016F9E  2921               	incf	strncmp@len& (0+255),w,b
 10885  016FA0  E1C1               	bnz	l12244
 10886  016FA2  2922               	incf	(strncmp@len+1)& (0+255),w,b
 10887  016FA4  A4D8               	btfss	status,2,c
 10888  016FA6  D7BE               	goto	l2241
 10889                           
 10890                           ; BSR set to: 1
 10891                           
 10892                           ; BSR set to: 1
 10893  016FA8  0E00               	movlw	0
 10894  016FAA  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 10895  016FAC  0E00               	movlw	0
 10896  016FAE  6F1D               	movwf	?_strncmp& (0+255),b
 10897  016FB0  0012               	return	
 10898  016FB2                     __end_of_strncmp:
 10899                           	opt stack 0
 10900                           tblptru	equ	0xFF8
 10901                           tblptrh	equ	0xFF7
 10902                           tblptrl	equ	0xFF6
 10903                           tablat	equ	0xFF5
 10904                           intcon	equ	0xFF2
 10905                           postinc0	equ	0xFEE
 10906                           wreg	equ	0xFE8
 10907                           indf1	equ	0xFE7
 10908                           postdec1	equ	0xFE5
 10909                           fsr1h	equ	0xFE2
 10910                           fsr1l	equ	0xFE1
 10911                           indf2	equ	0xFDF
 10912                           postinc2	equ	0xFDE
 10913                           fsr2h	equ	0xFDA
 10914                           fsr2l	equ	0xFD9
 10915                           status	equ	0xFD8
 10916                           
 10917 ;; *************** function _strlen *****************
 10918 ;; Defined at:
 10919 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 10922 ;;		 -> STR_102(25), line(64), 
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 10925 ;;		 -> STR_102(25), line(64), 
 10926 ;; Return value:  Size  Location     Type
 10927 ;;                  2   23[BANK1 ] unsigned int 
 10928 ;; Registers used:
 10929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10930 ;; Tracked objects:
 10931 ;;		On entry : 0/0
 10932 ;;		On exit  : 0/0
 10933 ;;		Unchanged: 0/0
 10934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10935 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10936 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10937 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10938 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10939 ;;Total ram usage:        6 bytes
 10940 ;; Hardware stack levels used:    1
 10941 ;; Hardware stack levels required when called:   13
 10942 ;; This function calls:
 10943 ;;		Nothing
 10944 ;; This function is called by:
 10945 ;;		_terminal_ringBufferPull
 10946 ;;		_strstr
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           	psect	text11
 10951  0177F8                     __ptext11:
 10952                           	opt stack 0
 10953  0177F8                     _strlen:
 10954                           	opt stack 16
 10955                           
 10956                           ; BSR set to: 1
 10957                           ;incstack = 0
 10958  0177F8  C117  F11B         	movff	strlen@s,strlen@cp
 10959  0177FC  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 10960  017800  D003               	goto	l2159
 10961  017802  0101               	movlb	1	; () banked
 10962  017804  4B1B               	infsnz	strlen@cp& (0+255),f,b
 10963  017806  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 10964  017808                     l2159:
 10965                           
 10966                           ; BSR set to: 1
 10967  017808  C11B  FFF6         	movff	strlen@cp,tblptrl
 10968  01780C  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 10969  017810  0E00               	movlw	low (__mediumconst shr (0+16))
 10970  017812  6EF8               	movwf	tblptru,c
 10971  017814  0E0D               	movlw	(high __ramtop+-1)
 10972  017816  64F7               	cpfsgt	tblptrh,c
 10973  017818  D003               	bra	u14637
 10974  01781A  0008               	tblrd		*
 10975  01781C  50F5               	movf	tablat,w,c
 10976  01781E  D005               	bra	u14630
 10977  017820                     u14637:
 10978  017820  CFF6 FFE9          	movff	tblptrl,fsr0l
 10979  017824  CFF7 FFEA          	movff	tblptrh,fsr0h
 10980  017828  50EF               	movf	indf0,w,c
 10981  01782A                     u14630:
 10982  01782A  0900               	iorlw	0
 10983  01782C  A4D8               	btfss	status,2,c
 10984  01782E  D7E9               	goto	l2160
 10985  017830  C117  F119         	movff	strlen@s,??_strlen
 10986  017834  C118  F11A         	movff	strlen@s+1,??_strlen+1
 10987  017838  0101               	movlb	1	; () banked
 10988  01783A  1F19               	comf	??_strlen& (0+255),f,b
 10989  01783C  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 10990  01783E  4B19               	infsnz	??_strlen& (0+255),f,b
 10991  017840  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 10992  017842  511B               	movf	strlen@cp& (0+255),w,b
 10993  017844  2519               	addwf	??_strlen& (0+255),w,b
 10994  017846  6F17               	movwf	?_strlen& (0+255),b
 10995  017848  511C               	movf	(strlen@cp+1)& (0+255),w,b
 10996  01784A  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 10997  01784C  6F18               	movwf	(?_strlen+1)& (0+255),b
 10998  01784E  0012               	return	
 10999  017850                     __end_of_strlen:
 11000                           	opt stack 0
 11001                           tblptru	equ	0xFF8
 11002                           tblptrh	equ	0xFF7
 11003                           tblptrl	equ	0xFF6
 11004                           tablat	equ	0xFF5
 11005                           intcon	equ	0xFF2
 11006                           indf0	equ	0xFEF
 11007                           postinc0	equ	0xFEE
 11008                           fsr0h	equ	0xFEA
 11009                           fsr0l	equ	0xFE9
 11010                           wreg	equ	0xFE8
 11011                           indf1	equ	0xFE7
 11012                           postdec1	equ	0xFE5
 11013                           fsr1h	equ	0xFE2
 11014                           fsr1l	equ	0xFE1
 11015                           indf2	equ	0xFDF
 11016                           postinc2	equ	0xFDE
 11017                           fsr2h	equ	0xFDA
 11018                           fsr2l	equ	0xFD9
 11019                           status	equ	0xFD8
 11020                           
 11021 ;; *************** function _strchr *****************
 11022 ;; Defined at:
 11023 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 11026 ;;		 -> NULL(0), line(64), 
 11027 ;;  chr             2   25[BANK1 ] int 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;		None
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  2   23[BANK1 ] PTR unsigned char 
 11032 ;; Registers used:
 11033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11039 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11041 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11042 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11043 ;;Total ram usage:        5 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:   13
 11046 ;; This function calls:
 11047 ;;		Nothing
 11048 ;; This function is called by:
 11049 ;;		_strstr
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053                           	psect	text12
 11054  017C88                     __ptext12:
 11055                           	opt stack 0
 11056  017C88                     _strchr:
 11057                           	opt stack 14
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;incstack = 0
 11061  017C88  C117  FFD9         	movff	strchr@ptr,fsr2l
 11062  017C8C  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11063  017C90  0101               	movlb	1	; () banked
 11064  017C92  5119               	movf	strchr@chr& (0+255),w,b
 11065  017C94  18DE               	xorwf	postinc2,w,c
 11066  017C96  A4D8               	btfss	status,2,c
 11067  017C98  D005               	goto	l2235
 11068                           
 11069                           ; BSR set to: 1
 11070  017C9A  C117  F117         	movff	strchr@ptr,?_strchr
 11071  017C9E  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 11072                           
 11073                           ; BSR set to: 1
 11074  017CA2  0012               	return	
 11075  017CA4                     l2235:
 11076                           
 11077                           ; BSR set to: 1
 11078                           
 11079                           ; BSR set to: 1
 11080  017CA4  C117  FFD9         	movff	strchr@ptr,fsr2l
 11081  017CA8  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11082  017CAC  4B17               	infsnz	strchr@ptr& (0+255),f,b
 11083  017CAE  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 11084  017CB0  50DF               	movf	indf2,w,c
 11085  017CB2  A4D8               	btfss	status,2,c
 11086  017CB4  D7E9               	goto	_strchr
 11087                           
 11088                           ; BSR set to: 1
 11089                           
 11090                           ; BSR set to: 1
 11091  017CB6  0E00               	movlw	0
 11092  017CB8  6F17               	movwf	?_strchr& (0+255),b
 11093  017CBA  0E00               	movlw	0
 11094  017CBC  6F18               	movwf	(?_strchr+1)& (0+255),b
 11095  017CBE  0012               	return	
 11096  017CC0                     __end_of_strchr:
 11097                           	opt stack 0
 11098                           tblptru	equ	0xFF8
 11099                           tblptrh	equ	0xFF7
 11100                           tblptrl	equ	0xFF6
 11101                           tablat	equ	0xFF5
 11102                           intcon	equ	0xFF2
 11103                           indf0	equ	0xFEF
 11104                           postinc0	equ	0xFEE
 11105                           fsr0h	equ	0xFEA
 11106                           fsr0l	equ	0xFE9
 11107                           wreg	equ	0xFE8
 11108                           indf1	equ	0xFE7
 11109                           postdec1	equ	0xFE5
 11110                           fsr1h	equ	0xFE2
 11111                           fsr1l	equ	0xFE1
 11112                           indf2	equ	0xFDF
 11113                           postinc2	equ	0xFDE
 11114                           fsr2h	equ	0xFDA
 11115                           fsr2l	equ	0xFD9
 11116                           status	equ	0xFD8
 11117                           
 11118 ;; *************** function _strcpy *****************
 11119 ;; Defined at:
 11120 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11123 ;;		 -> ringBufferLUT@channel_name(22), 
 11124 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11125 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 11126 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 11129 ;;		 -> ringBufferLUT@channel_name(22), 
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  2   23[BANK1 ] PTR unsigned char 
 11132 ;; Registers used:
 11133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11139 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11140 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11142 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11143 ;;Total ram usage:        6 bytes
 11144 ;; Hardware stack levels used:    1
 11145 ;; Hardware stack levels required when called:   13
 11146 ;; This function calls:
 11147 ;;		Nothing
 11148 ;; This function is called by:
 11149 ;;		_ringBufferLUT
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           	psect	text13
 11154  017CC0                     __ptext13:
 11155                           	opt stack 0
 11156  017CC0                     _strcpy:
 11157                           	opt stack 15
 11158                           
 11159                           ; BSR set to: 1
 11160                           ;incstack = 0
 11161  017CC0  C117  F11B         	movff	strcpy@to,strcpy@cp
 11162  017CC4  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 11163  017CC8  D005               	goto	l2153
 11164  017CCA  0101               	movlb	1	; () banked
 11165  017CCC  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 11166  017CCE  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 11167  017CD0  4B19               	infsnz	strcpy@from& (0+255),f,b
 11168  017CD2  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 11169  017CD4                     l2153:
 11170                           
 11171                           ; BSR set to: 1
 11172  017CD4  C119  FFF6         	movff	strcpy@from,tblptrl
 11173  017CD8  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 11174  017CDC                     	if	0	;tblptru may be non-zero
 11175  017CDC                     	endif
 11176  017CDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11177  017CDC  0E00               	movlw	low (__mediumconst shr (0+16))
 11178  017CDE  6EF8               	movwf	tblptru,c
 11179  017CE0                     	endif
 11180  017CE0  C11B  FFD9         	movff	strcpy@cp,fsr2l
 11181  017CE4  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 11182  017CE8  0008               	tblrd		*
 11183  017CEA  CFF5 FFDF          	movff	tablat,indf2
 11184  017CEE  50DF               	movf	indf2,w,c
 11185  017CF0  B4D8               	btfsc	status,2,c
 11186  017CF2  0012               	return	
 11187  017CF4  D7EA               	goto	l2154
 11188  017CF6                     __end_of_strcpy:
 11189                           	opt stack 0
 11190                           tblptru	equ	0xFF8
 11191                           tblptrh	equ	0xFF7
 11192                           tblptrl	equ	0xFF6
 11193                           tablat	equ	0xFF5
 11194                           intcon	equ	0xFF2
 11195                           indf0	equ	0xFEF
 11196                           postinc0	equ	0xFEE
 11197                           fsr0h	equ	0xFEA
 11198                           fsr0l	equ	0xFE9
 11199                           wreg	equ	0xFE8
 11200                           indf1	equ	0xFE7
 11201                           postdec1	equ	0xFE5
 11202                           fsr1h	equ	0xFE2
 11203                           fsr1l	equ	0xFE1
 11204                           indf2	equ	0xFDF
 11205                           postinc2	equ	0xFDE
 11206                           fsr2h	equ	0xFDA
 11207                           fsr2l	equ	0xFD9
 11208                           status	equ	0xFD8
 11209                           
 11210 ;; *************** function _strcmp *****************
 11211 ;; Defined at:
 11212 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 11213 ;; Parameters:    Size  Location     Type
 11214 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 11215 ;;		 -> line(64), 
 11216 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 11217 ;;		 -> STR_113(5), STR_111(14), STR_109(16), STR_100(13), 
 11218 ;;		 -> STR_98(12), STR_96(16), STR_94(15), STR_92(15), 
 11219 ;;		 -> STR_90(21), STR_88(21), STR_86(26), STR_84(14), 
 11220 ;;		 -> STR_82(13), STR_80(18), STR_78(15), STR_76(16), 
 11221 ;;		 -> STR_73(17), STR_71(16), STR_60(11), STR_57(10), 
 11222 ;;		 -> STR_55(13), STR_53(11), STR_50(4), STR_49(6), 
 11223 ;;		 -> STR_47(16), STR_44(6), STR_41(6), 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  r               1   28[BANK1 ] char 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  2   23[BANK1 ] int 
 11228 ;; Registers used:
 11229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11235 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11238 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11239 ;;Total ram usage:        6 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:   13
 11242 ;; This function calls:
 11243 ;;		Nothing
 11244 ;; This function is called by:
 11245 ;;		_ringBufferLUT
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text14
 11250  0178A2                     __ptext14:
 11251                           	opt stack 0
 11252  0178A2                     _strcmp:
 11253                           	opt stack 15
 11254                           
 11255                           ;incstack = 0
 11256  0178A2  D005               	goto	l2145
 11257  0178A4  0101               	movlb	1	; () banked
 11258  0178A6  4B17               	infsnz	strcmp@s1& (0+255),f,b
 11259  0178A8  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 11260  0178AA  4B19               	infsnz	strcmp@s2& (0+255),f,b
 11261  0178AC  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 11262  0178AE                     l2145:
 11263                           
 11264                           ; BSR set to: 1
 11265  0178AE  C117  FFD9         	movff	strcmp@s1,fsr2l
 11266  0178B2  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11267  0178B6  50DF               	movf	indf2,w,c
 11268  0178B8  0101               	movlb	1	; () banked
 11269  0178BA  6F1B               	movwf	??_strcmp& (0+255),b
 11270  0178BC  C119  FFF6         	movff	strcmp@s2,tblptrl
 11271  0178C0  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 11272  0178C4                     	if	0	;tblptru may be non-zero
 11273  0178C4                     	endif
 11274  0178C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11275  0178C4  0E00               	movlw	low (__mediumconst shr (0+16))
 11276  0178C6  6EF8               	movwf	tblptru,c
 11277  0178C8                     	endif
 11278  0178C8  0008               	tblrd		*
 11279  0178CA  50F5               	movf	tablat,w,c
 11280  0178CC  0800               	sublw	0
 11281  0178CE  251B               	addwf	??_strcmp& (0+255),w,b
 11282  0178D0  6F1C               	movwf	strcmp@r& (0+255),b
 11283  0178D2  511C               	movf	strcmp@r& (0+255),w,b
 11284  0178D4  A4D8               	btfss	status,2,c
 11285  0178D6  D007               	goto	u14860
 11286                           
 11287                           ; BSR set to: 1
 11288  0178D8  C117  FFD9         	movff	strcmp@s1,fsr2l
 11289  0178DC  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11290  0178E0  50DF               	movf	indf2,w,c
 11291  0178E2  A4D8               	btfss	status,2,c
 11292  0178E4  D7DF               	goto	l2146
 11293  0178E6                     u14860:
 11294                           
 11295                           ; BSR set to: 1
 11296                           
 11297                           ; BSR set to: 1
 11298                           
 11299                           ; BSR set to: 1
 11300  0178E6  511C               	movf	strcmp@r& (0+255),w,b
 11301  0178E8  6F17               	movwf	?_strcmp& (0+255),b
 11302  0178EA  6B18               	clrf	(?_strcmp+1)& (0+255),b
 11303  0178EC  BF17               	btfsc	?_strcmp& (0+255),7,b
 11304  0178EE  0718               	decf	(?_strcmp+1)& (0+255),f,b
 11305  0178F0  0012               	return	
 11306  0178F2                     __end_of_strcmp:
 11307                           	opt stack 0
 11308                           tblptru	equ	0xFF8
 11309                           tblptrh	equ	0xFF7
 11310                           tblptrl	equ	0xFF6
 11311                           tablat	equ	0xFF5
 11312                           intcon	equ	0xFF2
 11313                           indf0	equ	0xFEF
 11314                           postinc0	equ	0xFEE
 11315                           fsr0h	equ	0xFEA
 11316                           fsr0l	equ	0xFE9
 11317                           wreg	equ	0xFE8
 11318                           indf1	equ	0xFE7
 11319                           postdec1	equ	0xFE5
 11320                           fsr1h	equ	0xFE2
 11321                           fsr1l	equ	0xFE1
 11322                           indf2	equ	0xFDF
 11323                           postinc2	equ	0xFDE
 11324                           fsr2h	equ	0xFDA
 11325                           fsr2l	equ	0xFD9
 11326                           status	equ	0xFD8
 11327                           
 11328 ;; *************** function _getUserID *****************
 11329 ;; Defined at:
 11330 ;;		line 65 in file "device_IDs.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;  inputUserID     1    wreg     unsigned char 
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;  inputUserID     1   40[BANK1 ] unsigned char 
 11335 ;;  initialOffse    4   36[BANK1 ] unsigned long 
 11336 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  2   34[BANK1 ] unsigned int 
 11339 ;; Registers used:
 11340 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11346 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11347 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11349 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11350 ;;Total ram usage:        8 bytes
 11351 ;; Hardware stack levels used:    1
 11352 ;; Hardware stack levels required when called:   15
 11353 ;; This function calls:
 11354 ;;		_FLASH_ReadWord
 11355 ;; This function is called by:
 11356 ;;		_ringBufferLUT
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360                           	psect	text15
 11361  017B4A                     __ptext15:
 11362                           	opt stack 0
 11363  017B4A                     _getUserID:
 11364                           	opt stack 13
 11365                           
 11366                           ; BSR set to: 1
 11367                           ;incstack = 0
 11368                           ;getUserID@inputUserID stored from wreg
 11369  017B4A  0101               	movlb	1	; () banked
 11370  017B4C  6F28               	movwf	getUserID@inputUserID& (0+255),b
 11371                           
 11372                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 11373  017B4E  0E00               	movlw	0
 11374  017B50  0101               	movlb	1	; () banked
 11375  017B52  6F24               	movwf	getUserID@initialOffset& (0+255),b
 11376  017B54  0E00               	movlw	0
 11377  017B56  6F25               	movwf	(getUserID@initialOffset+1)& (0+255),b
 11378  017B58  0E20               	movlw	32
 11379  017B5A  6F26               	movwf	(getUserID@initialOffset+2)& (0+255),b
 11380  017B5C  0E00               	movlw	0
 11381  017B5E  6F27               	movwf	(getUserID@initialOffset+3)& (0+255),b
 11382                           
 11383                           ; BSR set to: 1
 11384                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 11385  017B60  5128               	movf	getUserID@inputUserID& (0+255),w,b
 11386  017B62  0D02               	mullw	2
 11387  017B64  CFF3 F129          	movff	prodl,getUserID@IDOffset
 11388                           
 11389                           ; BSR set to: 1
 11390                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 11391  017B68  5129               	movf	getUserID@IDOffset& (0+255),w,b
 11392  017B6A  2524               	addwf	getUserID@initialOffset& (0+255),w,b
 11393  017B6C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11394  017B6E  0E00               	movlw	0
 11395  017B70  2125               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 11396  017B72  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11397  017B74  0E00               	movlw	0
 11398  017B76  2126               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 11399  017B78  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11400  017B7A  0E00               	movlw	0
 11401  017B7C  2127               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 11402  017B7E  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11403  017B80  ECC7  F0BD         	call	_FLASH_ReadWord	;wreg free
 11404  017B84  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 11405  017B88  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 11406  017B8C  0012               	return	
 11407  017B8E                     __end_of_getUserID:
 11408                           	opt stack 0
 11409                           tblptru	equ	0xFF8
 11410                           tblptrh	equ	0xFF7
 11411                           tblptrl	equ	0xFF6
 11412                           tablat	equ	0xFF5
 11413                           prodl	equ	0xFF3
 11414                           intcon	equ	0xFF2
 11415                           indf0	equ	0xFEF
 11416                           postinc0	equ	0xFEE
 11417                           fsr0h	equ	0xFEA
 11418                           fsr0l	equ	0xFE9
 11419                           wreg	equ	0xFE8
 11420                           indf1	equ	0xFE7
 11421                           postdec1	equ	0xFE5
 11422                           fsr1h	equ	0xFE2
 11423                           fsr1l	equ	0xFE1
 11424                           indf2	equ	0xFDF
 11425                           postinc2	equ	0xFDE
 11426                           fsr2h	equ	0xFDA
 11427                           fsr2l	equ	0xFD9
 11428                           status	equ	0xFD8
 11429                           
 11430 ;; *************** function _getMinorRevisionID *****************
 11431 ;; Defined at:
 11432 ;;		line 23 in file "device_IDs.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;		None
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  1    wreg      unsigned char 
 11439 ;; Registers used:
 11440 ;;		wreg, status,2, status,0, cstack
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/0
 11443 ;;		On exit  : 0/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11447 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11449 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11450 ;;Total ram usage:        2 bytes
 11451 ;; Hardware stack levels used:    1
 11452 ;; Hardware stack levels required when called:   15
 11453 ;; This function calls:
 11454 ;;		_FLASH_ReadWord
 11455 ;; This function is called by:
 11456 ;;		_ringBufferLUT
 11457 ;; This function uses a non-reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text16
 11461  017EFA                     __ptext16:
 11462                           	opt stack 0
 11463  017EFA                     _getMinorRevisionID:
 11464                           	opt stack 13
 11465                           
 11466                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 11467                           
 11468                           ;incstack = 0
 11469  017EFA  0EFC               	movlw	252
 11470  017EFC  0101               	movlb	1	; () banked
 11471  017EFE  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11472  017F00  0EFF               	movlw	255
 11473  017F02  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11474  017F04  0E3F               	movlw	63
 11475  017F06  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11476  017F08  0E00               	movlw	0
 11477  017F0A  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11478  017F0C  ECC7  F0BD         	call	_FLASH_ReadWord	;wreg free
 11479  017F10  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 11480  017F14  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 11481                           
 11482                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 11483  017F18  0101               	movlb	1	; () banked
 11484  017F1A  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 11485  017F1C  0B1F               	andlw	31
 11486  017F1E  0012               	return	
 11487  017F20                     __end_of_getMinorRevisionID:
 11488                           	opt stack 0
 11489                           tblptru	equ	0xFF8
 11490                           tblptrh	equ	0xFF7
 11491                           tblptrl	equ	0xFF6
 11492                           tablat	equ	0xFF5
 11493                           prodl	equ	0xFF3
 11494                           intcon	equ	0xFF2
 11495                           indf0	equ	0xFEF
 11496                           postinc0	equ	0xFEE
 11497                           fsr0h	equ	0xFEA
 11498                           fsr0l	equ	0xFE9
 11499                           wreg	equ	0xFE8
 11500                           indf1	equ	0xFE7
 11501                           postdec1	equ	0xFE5
 11502                           fsr1h	equ	0xFE2
 11503                           fsr1l	equ	0xFE1
 11504                           indf2	equ	0xFDF
 11505                           postinc2	equ	0xFDE
 11506                           fsr2h	equ	0xFDA
 11507                           fsr2l	equ	0xFD9
 11508                           status	equ	0xFD8
 11509                           
 11510 ;; *************** function _getMajorRevisionID *****************
 11511 ;; Defined at:
 11512 ;;		line 12 in file "device_IDs.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;		None
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  1    wreg      unsigned char 
 11519 ;; Registers used:
 11520 ;;		wreg, status,2, status,0, cstack
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11527 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11528 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11529 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11530 ;;Total ram usage:        5 bytes
 11531 ;; Hardware stack levels used:    1
 11532 ;; Hardware stack levels required when called:   15
 11533 ;; This function calls:
 11534 ;;		_FLASH_ReadWord
 11535 ;; This function is called by:
 11536 ;;		_ringBufferLUT
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text17
 11541  017C10                     __ptext17:
 11542                           	opt stack 0
 11543  017C10                     _getMajorRevisionID:
 11544                           	opt stack 13
 11545                           
 11546                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;incstack = 0
 11550  017C10  0EFC               	movlw	252
 11551  017C12  0101               	movlb	1	; () banked
 11552  017C14  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11553  017C16  0EFF               	movlw	255
 11554  017C18  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11555  017C1A  0E3F               	movlw	63
 11556  017C1C  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11557  017C1E  0E00               	movlw	0
 11558  017C20  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11559  017C22  ECC7  F0BD         	call	_FLASH_ReadWord	;wreg free
 11560  017C26  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 11561  017C2A  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 11562                           
 11563                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 11564  017C2E  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 11565  017C32  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 11566  017C36  0E06               	movlw	6
 11567  017C38  0101               	movlb	1	; () banked
 11568  017C3A  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 11569  017C3C                     u14895:
 11570  017C3C  90D8               	bcf	status,0,c
 11571  017C3E  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 11572  017C40  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 11573  017C42  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 11574  017C44  D7FB               	goto	u14895
 11575  017C46  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 11576  017C48  0B1F               	andlw	31
 11577  017C4A  0012               	return	
 11578  017C4C                     __end_of_getMajorRevisionID:
 11579                           	opt stack 0
 11580                           tblptru	equ	0xFF8
 11581                           tblptrh	equ	0xFF7
 11582                           tblptrl	equ	0xFF6
 11583                           tablat	equ	0xFF5
 11584                           prodl	equ	0xFF3
 11585                           intcon	equ	0xFF2
 11586                           indf0	equ	0xFEF
 11587                           postinc0	equ	0xFEE
 11588                           fsr0h	equ	0xFEA
 11589                           fsr0l	equ	0xFE9
 11590                           wreg	equ	0xFE8
 11591                           indf1	equ	0xFE7
 11592                           postdec1	equ	0xFE5
 11593                           fsr1h	equ	0xFE2
 11594                           fsr1l	equ	0xFE1
 11595                           indf2	equ	0xFDF
 11596                           postinc2	equ	0xFDE
 11597                           fsr2h	equ	0xFDA
 11598                           fsr2l	equ	0xFD9
 11599                           status	equ	0xFD8
 11600                           
 11601 ;; *************** function _getDeviceIDString *****************
 11602 ;; Defined at:
 11603 ;;		line 34 in file "device_IDs.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 11608 ;;		 -> STR_122(10), STR_121(13), STR_120(12), 
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  2   36[BANK1 ] PTR inline unsigned char
 11611 ;; Registers used:
 11612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11618 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11619 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11620 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11621 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11622 ;;Total ram usage:       10 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:   13
 11625 ;; This function calls:
 11626 ;;		Nothing
 11627 ;; This function is called by:
 11628 ;;		_ringBufferLUT
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text18
 11633  017798                     __ptext18:
 11634                           	opt stack 0
 11635  017798                     _getDeviceIDString:
 11636                           	opt stack 15
 11637                           
 11638                           ;device_IDs.c: 37: const char *strings[] = {
 11639                           ;device_IDs.c: 39: "PIC18F67K40",
 11640                           ;device_IDs.c: 40: "PIC18LF67K40",
 11641                           ;device_IDs.c: 41: "Undefined"
 11642                           ;device_IDs.c: 43: };
 11643                           
 11644                           ; BSR set to: 1
 11645                           ;incstack = 0
 11646  017798  EE22  F0CB         	lfsr	2,getDeviceIDString@F17550
 11647  01779C  EE11  F028         	lfsr	1,getDeviceIDString@strings
 11648  0177A0  0E05               	movlw	5
 11649  0177A2                     u14881:
 11650  0177A2  CFDB FFE3          	movff	plusw2,plusw1
 11651  0177A6  06E8               	decf	wreg,f,c
 11652  0177A8  E2FC               	bc	u14881
 11653                           
 11654                           ;device_IDs.c: 47: switch (inputDevID) {
 11655  0177AA  D00F               	goto	l1277
 11656  0177AC                     
 11657                           ;device_IDs.c: 50: return strings[0];
 11658  0177AC  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 11659  0177B0  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 11660                           
 11661                           ;device_IDs.c: 51: break;
 11662  0177B4  0012               	return	
 11663  0177B6                     
 11664                           ;device_IDs.c: 54: return strings[1];
 11665  0177B6  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 11666  0177BA  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 11667                           
 11668                           ;device_IDs.c: 55: break;
 11669  0177BE  0012               	return	
 11670  0177C0                     
 11671                           ;device_IDs.c: 58: return strings[2];
 11672  0177C0  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 11673  0177C4  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 11674                           
 11675                           ;device_IDs.c: 61: }
 11676                           
 11677                           ;device_IDs.c: 59: break;
 11678  0177C8  0012               	return	
 11679  0177CA                     l1277:
 11680  0177CA  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 11681  0177CE  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 11682                           
 11683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11684                           ; Switch size 1, requested type "space"
 11685                           ; Number of cases is 2, Range of values is 106 to 107
 11686                           ; switch strategies available:
 11687                           ; Name         Instructions Cycles
 11688                           ; simple_byte            7     4 (average)
 11689                           ;	Chosen strategy is simple_byte
 11690  0177D2  0101               	movlb	1	; () banked
 11691  0177D4  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 11692  0177D6  0A6A               	xorlw	106	; case 106
 11693  0177D8  B4D8               	btfsc	status,2,c
 11694  0177DA  D004               	goto	l14276
 11695  0177DC  0A01               	xorlw	1	; case 107
 11696  0177DE  B4D8               	btfsc	status,2,c
 11697  0177E0  D006               	goto	l14278
 11698  0177E2  D7EE               	goto	l1282
 11699  0177E4                     l14276:
 11700                           
 11701                           ; BSR set to: 1
 11702                           ; Switch size 1, requested type "space"
 11703                           ; Number of cases is 1, Range of values is 192 to 192
 11704                           ; switch strategies available:
 11705                           ; Name         Instructions Cycles
 11706                           ; simple_byte            4     3 (average)
 11707                           ;	Chosen strategy is simple_byte
 11708  0177E4  5126               	movf	??_getDeviceIDString& (0+255),w,b
 11709  0177E6  0AC0               	xorlw	192	; case 192
 11710  0177E8  B4D8               	btfsc	status,2,c
 11711  0177EA  D7E0               	goto	l1278
 11712  0177EC  D7E9               	goto	l1282
 11713  0177EE                     l14278:
 11714                           
 11715                           ; BSR set to: 1
 11716                           ; Switch size 1, requested type "space"
 11717                           ; Number of cases is 1, Range of values is 32 to 32
 11718                           ; switch strategies available:
 11719                           ; Name         Instructions Cycles
 11720                           ; simple_byte            4     3 (average)
 11721                           ;	Chosen strategy is simple_byte
 11722  0177EE  5126               	movf	??_getDeviceIDString& (0+255),w,b
 11723  0177F0  0A20               	xorlw	32	; case 32
 11724  0177F2  B4D8               	btfsc	status,2,c
 11725  0177F4  D7E0               	goto	l1281
 11726  0177F6  D7E4               	goto	l1282
 11727  0177F8                     __end_of_getDeviceIDString:
 11728                           	opt stack 0
 11729                           tblptru	equ	0xFF8
 11730                           tblptrh	equ	0xFF7
 11731                           tblptrl	equ	0xFF6
 11732                           tablat	equ	0xFF5
 11733                           prodl	equ	0xFF3
 11734                           intcon	equ	0xFF2
 11735                           indf0	equ	0xFEF
 11736                           postinc0	equ	0xFEE
 11737                           fsr0h	equ	0xFEA
 11738                           fsr0l	equ	0xFE9
 11739                           wreg	equ	0xFE8
 11740                           indf1	equ	0xFE7
 11741                           postdec1	equ	0xFE5
 11742                           plusw1	equ	0xFE3
 11743                           fsr1h	equ	0xFE2
 11744                           fsr1l	equ	0xFE1
 11745                           indf2	equ	0xFDF
 11746                           postinc2	equ	0xFDE
 11747                           plusw2	equ	0xFDB
 11748                           fsr2h	equ	0xFDA
 11749                           fsr2l	equ	0xFD9
 11750                           status	equ	0xFD8
 11751                           
 11752 ;; *************** function _getDeviceID *****************
 11753 ;; Defined at:
 11754 ;;		line 4 in file "device_IDs.c"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;		None
 11757 ;; Auto vars:     Size  Location     Type
 11758 ;;		None
 11759 ;; Return value:  Size  Location     Type
 11760 ;;                  2   34[BANK1 ] unsigned int 
 11761 ;; Registers used:
 11762 ;;		wreg, status,2, status,0, cstack
 11763 ;; Tracked objects:
 11764 ;;		On entry : 0/0
 11765 ;;		On exit  : 0/0
 11766 ;;		Unchanged: 0/0
 11767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11768 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11771 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11772 ;;Total ram usage:        2 bytes
 11773 ;; Hardware stack levels used:    1
 11774 ;; Hardware stack levels required when called:   15
 11775 ;; This function calls:
 11776 ;;		_FLASH_ReadWord
 11777 ;; This function is called by:
 11778 ;;		_ringBufferLUT
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           	psect	text19
 11783  017FB2                     __ptext19:
 11784                           	opt stack 0
 11785  017FB2                     _getDeviceID:
 11786                           	opt stack 13
 11787                           
 11788                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 11789                           
 11790                           ;incstack = 0
 11791  017FB2  0EFE               	movlw	254
 11792  017FB4  0101               	movlb	1	; () banked
 11793  017FB6  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11794  017FB8  0EFF               	movlw	255
 11795  017FBA  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11796  017FBC  0E3F               	movlw	63
 11797  017FBE  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11798  017FC0  0E00               	movlw	0
 11799  017FC2  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11800  017FC4  ECC7  F0BD         	call	_FLASH_ReadWord	;wreg free
 11801  017FC8  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 11802  017FCC  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 11803  017FD0  0012               	return	
 11804  017FD2                     __end_of_getDeviceID:
 11805                           	opt stack 0
 11806                           tblptru	equ	0xFF8
 11807                           tblptrh	equ	0xFF7
 11808                           tblptrl	equ	0xFF6
 11809                           tablat	equ	0xFF5
 11810                           prodl	equ	0xFF3
 11811                           intcon	equ	0xFF2
 11812                           indf0	equ	0xFEF
 11813                           postinc0	equ	0xFEE
 11814                           fsr0h	equ	0xFEA
 11815                           fsr0l	equ	0xFE9
 11816                           wreg	equ	0xFE8
 11817                           indf1	equ	0xFE7
 11818                           postdec1	equ	0xFE5
 11819                           plusw1	equ	0xFE3
 11820                           fsr1h	equ	0xFE2
 11821                           fsr1l	equ	0xFE1
 11822                           indf2	equ	0xFDF
 11823                           postinc2	equ	0xFDE
 11824                           plusw2	equ	0xFDB
 11825                           fsr2h	equ	0xFDA
 11826                           fsr2l	equ	0xFD9
 11827                           status	equ	0xFD8
 11828                           
 11829 ;; *************** function _FLASH_ReadWord *****************
 11830 ;; Defined at:
 11831 ;;		line 71 in file "mcc_generated_files/memory.c"
 11832 ;; Parameters:    Size  Location     Type
 11833 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;		None
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  2   27[BANK1 ] unsigned int 
 11838 ;; Registers used:
 11839 ;;		wreg, status,2, status,0, cstack
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11845 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11847 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11848 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11849 ;;Total ram usage:        7 bytes
 11850 ;; Hardware stack levels used:    1
 11851 ;; Hardware stack levels required when called:   14
 11852 ;; This function calls:
 11853 ;;		_FLASH_ReadByte
 11854 ;; This function is called by:
 11855 ;;		_getDeviceID
 11856 ;;		_getMajorRevisionID
 11857 ;;		_getMinorRevisionID
 11858 ;;		_getUserID
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           
 11862                           	psect	text20
 11863  017B8E                     __ptext20:
 11864                           	opt stack 0
 11865  017B8E                     _FLASH_ReadWord:
 11866                           	opt stack 13
 11867                           
 11868                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 11869                           
 11870                           ;incstack = 0
 11871  017B8E  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 11872  017B92  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 11873  017B96  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 11874  017B9A  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 11875  017B9E  EC22  F0C0         	call	_FLASH_ReadByte	;wreg free
 11876  017BA2  0101               	movlb	1	; () banked
 11877  017BA4  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 11878  017BA6  0E01               	movlw	1
 11879  017BA8  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 11880  017BAA  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 11881  017BAC  0E00               	movlw	0
 11882  017BAE  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 11883  017BB0  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 11884  017BB2  0E00               	movlw	0
 11885  017BB4  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 11886  017BB6  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 11887  017BB8  0E00               	movlw	0
 11888  017BBA  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 11889  017BBC  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 11890  017BBE  EC22  F0C0         	call	_FLASH_ReadByte	;wreg free
 11891  017BC2  0101               	movlb	1	; () banked
 11892  017BC4  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 11893  017BC6  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 11894  017BC8  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 11895  017BCA  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 11896  017BCE  0012               	return	
 11897  017BD0                     __end_of_FLASH_ReadWord:
 11898                           	opt stack 0
 11899                           tblptru	equ	0xFF8
 11900                           tblptrh	equ	0xFF7
 11901                           tblptrl	equ	0xFF6
 11902                           tablat	equ	0xFF5
 11903                           prodl	equ	0xFF3
 11904                           intcon	equ	0xFF2
 11905                           indf0	equ	0xFEF
 11906                           postinc0	equ	0xFEE
 11907                           fsr0h	equ	0xFEA
 11908                           fsr0l	equ	0xFE9
 11909                           wreg	equ	0xFE8
 11910                           indf1	equ	0xFE7
 11911                           postdec1	equ	0xFE5
 11912                           plusw1	equ	0xFE3
 11913                           fsr1h	equ	0xFE2
 11914                           fsr1l	equ	0xFE1
 11915                           indf2	equ	0xFDF
 11916                           postinc2	equ	0xFDE
 11917                           plusw2	equ	0xFDB
 11918                           fsr2h	equ	0xFDA
 11919                           fsr2l	equ	0xFD9
 11920                           status	equ	0xFD8
 11921                           
 11922 ;; *************** function _FLASH_ReadByte *****************
 11923 ;; Defined at:
 11924 ;;		line 59 in file "mcc_generated_files/memory.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 11927 ;; Auto vars:     Size  Location     Type
 11928 ;;		None
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  1    wreg      unsigned char 
 11931 ;; Registers used:
 11932 ;;		wreg, status,2
 11933 ;; Tracked objects:
 11934 ;;		On entry : 0/0
 11935 ;;		On exit  : 0/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11938 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11941 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11942 ;;Total ram usage:        4 bytes
 11943 ;; Hardware stack levels used:    1
 11944 ;; Hardware stack levels required when called:   13
 11945 ;; This function calls:
 11946 ;;		Nothing
 11947 ;; This function is called by:
 11948 ;;		_FLASH_ReadWord
 11949 ;;		_FLASH_WriteByte
 11950 ;; This function uses a non-reentrant model
 11951 ;;
 11952                           
 11953                           	psect	text21
 11954  018044                     __ptext21:
 11955                           	opt stack 0
 11956  018044                     _FLASH_ReadByte:
 11957                           	opt stack 13
 11958                           
 11959                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 11960                           
 11961                           ; BSR set to: 1
 11962                           ;incstack = 0
 11963  018044  5077               	movf	3959,w,c	;volsfr
 11964  018046  0B3F               	andlw	-193
 11965  018048  0980               	iorlw	128
 11966  01804A  6E77               	movwf	3959,c	;volsfr
 11967                           
 11968                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 11969  01804C  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 11970                           
 11971                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 11972  018050  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 11973                           
 11974                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 11975  018054  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 11976  018058  0008               	tblrd		*	;# 
 11977                           
 11978                           ;memory.c: 68: return (TABLAT);
 11979  01805A  50F5               	movf	tablat,w,c	;volatile
 11980  01805C  0012               	return	
 11981  01805E                     __end_of_FLASH_ReadByte:
 11982                           	opt stack 0
 11983                           tblptru	equ	0xFF8
 11984                           tblptrh	equ	0xFF7
 11985                           tblptrl	equ	0xFF6
 11986                           tablat	equ	0xFF5
 11987                           prodl	equ	0xFF3
 11988                           intcon	equ	0xFF2
 11989                           indf0	equ	0xFEF
 11990                           postinc0	equ	0xFEE
 11991                           fsr0h	equ	0xFEA
 11992                           fsr0l	equ	0xFE9
 11993                           wreg	equ	0xFE8
 11994                           indf1	equ	0xFE7
 11995                           postdec1	equ	0xFE5
 11996                           plusw1	equ	0xFE3
 11997                           fsr1h	equ	0xFE2
 11998                           fsr1l	equ	0xFE1
 11999                           indf2	equ	0xFDF
 12000                           postinc2	equ	0xFDE
 12001                           plusw2	equ	0xFDB
 12002                           fsr2h	equ	0xFDA
 12003                           fsr2l	equ	0xFD9
 12004                           status	equ	0xFD8
 12005                           
 12006 ;; *************** function _getCauseOfResetString *****************
 12007 ;; Defined at:
 12008 ;;		line 81 in file "cause_of_reset.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;  r               1    wreg     enum E17455
 12011 ;; Auto vars:     Size  Location     Type
 12012 ;;  r               1   25[BANK1 ] enum E17455
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  2   23[BANK1 ] PTR inline unsigned char
 12015 ;; Registers used:
 12016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12022 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12023 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12025 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12026 ;;Total ram usage:        3 bytes
 12027 ;; Hardware stack levels used:    1
 12028 ;; Hardware stack levels required when called:   13
 12029 ;; This function calls:
 12030 ;;		Nothing
 12031 ;; This function is called by:
 12032 ;;		_ringBufferLUT
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text22
 12037  017DC6                     __ptext22:
 12038                           	opt stack 0
 12039  017DC6                     _getCauseOfResetString:
 12040                           	opt stack 15
 12041                           
 12042                           ;incstack = 0
 12043                           ;getCauseOfResetString@r stored from wreg
 12044  017DC6  0101               	movlb	1	; () banked
 12045  017DC8  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 12046                           
 12047                           ;cause_of_reset.c: 84: static char *strings[] = {
 12048                           ;cause_of_reset.c: 85: "Undefined Reset",
 12049                           ;cause_of_reset.c: 86: "Power On Reset",
 12050                           ;cause_of_reset.c: 87: "Brown Out Reset",
 12051                           ;cause_of_reset.c: 88: "Master Clear Reset",
 12052                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 12053                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 12054                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 12055                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 12056                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 12057                           ;cause_of_reset.c: 94: };
 12058  017DCA  0E09               	movlw	9
 12059  017DCC  0101               	movlb	1	; () banked
 12060  017DCE  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 12061  017DD0  D00D               	goto	l1309
 12062                           
 12063                           ; BSR set to: 1
 12064                           ;cause_of_reset.c: 99: return strings[r];
 12065  017DD2  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 12066  017DD4  0D02               	mullw	2
 12067  017DD6  0EB9               	movlw	low getCauseOfResetString@strings
 12068  017DD8  24F3               	addwf	prodl,w,c
 12069  017DDA  6ED9               	movwf	fsr2l,c
 12070  017DDC  0E02               	movlw	high getCauseOfResetString@strings
 12071  017DDE  20F4               	addwfc	prodh,w,c
 12072  017DE0  6EDA               	movwf	fsr2h,c
 12073  017DE2  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 12074  017DE6  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 12075                           
 12076                           ; BSR set to: 1
 12077                           ;cause_of_reset.c: 101: }
 12078                           
 12079                           ; BSR set to: 1
 12080  017DEA  0012               	return	
 12081  017DEC                     l1309:
 12082                           
 12083                           ; BSR set to: 1
 12084                           ;cause_of_reset.c: 103: else {
 12085                           ;cause_of_reset.c: 105: return "Undefined Reset";
 12086                           
 12087                           ; BSR set to: 1
 12088  017DEC  0E1E               	movlw	low STR_123
 12089  017DEE  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 12090  017DF0  0EFE               	movlw	high STR_123
 12091  017DF2  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 12092                           
 12093                           ; BSR set to: 1
 12094  017DF4  0012               	return	
 12095  017DF6                     __end_of_getCauseOfResetString:
 12096                           	opt stack 0
 12097                           tblptru	equ	0xFF8
 12098                           tblptrh	equ	0xFF7
 12099                           tblptrl	equ	0xFF6
 12100                           tablat	equ	0xFF5
 12101                           prodh	equ	0xFF4
 12102                           prodl	equ	0xFF3
 12103                           intcon	equ	0xFF2
 12104                           indf0	equ	0xFEF
 12105                           postinc0	equ	0xFEE
 12106                           fsr0h	equ	0xFEA
 12107                           fsr0l	equ	0xFE9
 12108                           wreg	equ	0xFE8
 12109                           indf1	equ	0xFE7
 12110                           postdec1	equ	0xFE5
 12111                           plusw1	equ	0xFE3
 12112                           fsr1h	equ	0xFE2
 12113                           fsr1l	equ	0xFE1
 12114                           indf2	equ	0xFDF
 12115                           postinc2	equ	0xFDE
 12116                           postdec2	equ	0xFDD
 12117                           plusw2	equ	0xFDB
 12118                           fsr2h	equ	0xFDA
 12119                           fsr2l	equ	0xFD9
 12120                           status	equ	0xFD8
 12121                           
 12122 ;; *************** function _atoi *****************
 12123 ;; Defined at:
 12124 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 12125 ;; Parameters:    Size  Location     Type
 12126 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 12127 ;;		 -> ringBufferLUT@arg_buff(3), 
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;  a               2   34[BANK1 ] int 
 12130 ;;  sign            1   33[BANK1 ] unsigned char 
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  2   29[BANK1 ] int 
 12133 ;; Registers used:
 12134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12140 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12141 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12142 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12143 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12144 ;;Total ram usage:        7 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:   14
 12147 ;; This function calls:
 12148 ;;		___wmul
 12149 ;;		_isdigit
 12150 ;; This function is called by:
 12151 ;;		_ringBufferLUT
 12152 ;; This function uses a non-reentrant model
 12153 ;;
 12154                           
 12155                           	psect	text23
 12156  016B6C                     __ptext23:
 12157                           	opt stack 0
 12158  016B6C                     _atoi:
 12159                           	opt stack 14
 12160                           
 12161                           ; BSR set to: 1
 12162                           ;incstack = 0
 12163  016B6C  D003               	goto	l1647
 12164  016B6E  0101               	movlb	1	; () banked
 12165  016B70  4B1D               	infsnz	atoi@s& (0+255),f,b
 12166  016B72  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 12167  016B74                     l1647:
 12168                           
 12169                           ; BSR set to: 1
 12170  016B74  C11D  FFD9         	movff	atoi@s,fsr2l
 12171  016B78  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12172  016B7C  0E20               	movlw	32
 12173  016B7E  18DE               	xorwf	postinc2,w,c
 12174  016B80  B4D8               	btfsc	status,2,c
 12175  016B82  D7F5               	goto	l1648
 12176  016B84  C11D  FFD9         	movff	atoi@s,fsr2l
 12177  016B88  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12178  016B8C  0E09               	movlw	9
 12179  016B8E  18DE               	xorwf	postinc2,w,c
 12180  016B90  B4D8               	btfsc	status,2,c
 12181  016B92  D7ED               	goto	l1648
 12182  016B94  0E00               	movlw	0
 12183  016B96  0101               	movlb	1	; () banked
 12184  016B98  6F23               	movwf	(atoi@a+1)& (0+255),b
 12185  016B9A  0E00               	movlw	0
 12186  016B9C  6F22               	movwf	atoi@a& (0+255),b
 12187  016B9E  0E00               	movlw	0
 12188  016BA0  6F21               	movwf	atoi@sign& (0+255),b
 12189                           
 12190                           ; BSR set to: 1
 12191  016BA2  C11D  FFD9         	movff	atoi@s,fsr2l
 12192  016BA6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12193  016BAA  0E2D               	movlw	45
 12194  016BAC  18DE               	xorwf	postinc2,w,c
 12195  016BAE  A4D8               	btfss	status,2,c
 12196  016BB0  D002               	goto	l1650
 12197                           
 12198                           ; BSR set to: 1
 12199  016BB2  2B21               	incf	atoi@sign& (0+255),f,b
 12200  016BB4  D026               	goto	l12548
 12201  016BB6                     l1650:
 12202                           
 12203                           ; BSR set to: 1
 12204                           
 12205                           ; BSR set to: 1
 12206  016BB6  C11D  FFD9         	movff	atoi@s,fsr2l
 12207  016BBA  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12208  016BBE  0E2B               	movlw	43
 12209  016BC0  18DE               	xorwf	postinc2,w,c
 12210  016BC2  A4D8               	btfss	status,2,c
 12211  016BC4  D020               	goto	l1653
 12212  016BC6  D01D               	goto	l12548
 12213  016BC8                     
 12214                           ; BSR set to: 1
 12215  016BC8  C122  F117         	movff	atoi@a,___wmul@multiplier
 12216  016BCC  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 12217  016BD0  0E00               	movlw	0
 12218  016BD2  0101               	movlb	1	; () banked
 12219  016BD4  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12220  016BD6  0E0A               	movlw	10
 12221  016BD8  6F19               	movwf	___wmul@multiplicand& (0+255),b
 12222  016BDA  EC41  F0BF         	call	___wmul	;wreg free
 12223  016BDE  C11D  FFD9         	movff	atoi@s,fsr2l
 12224  016BE2  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12225  016BE6  50DF               	movf	indf2,w,c
 12226  016BE8  0101               	movlb	1	; () banked
 12227  016BEA  6F1F               	movwf	??_atoi& (0+255),b
 12228  016BEC  6B20               	clrf	(??_atoi+1)& (0+255),b
 12229  016BEE  5117               	movf	?___wmul& (0+255),w,b
 12230  016BF0  271F               	addwf	??_atoi& (0+255),f,b
 12231  016BF2  5118               	movf	(?___wmul+1)& (0+255),w,b
 12232  016BF4  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 12233  016BF6  0ED0               	movlw	208
 12234  016BF8  251F               	addwf	??_atoi& (0+255),w,b
 12235  016BFA  6F22               	movwf	atoi@a& (0+255),b
 12236  016BFC  0EFF               	movlw	255
 12237  016BFE  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 12238  016C00  6F23               	movwf	(atoi@a+1)& (0+255),b
 12239  016C02                     l12548:
 12240                           
 12241                           ; BSR set to: 1
 12242  016C02  4B1D               	infsnz	atoi@s& (0+255),f,b
 12243  016C04  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 12244  016C06                     l1653:
 12245                           
 12246                           ; BSR set to: 1
 12247                           
 12248                           ; BSR set to: 1
 12249  016C06  C11D  FFD9         	movff	atoi@s,fsr2l
 12250  016C0A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12251  016C0E  50DF               	movf	indf2,w,c
 12252  016C10  ECC8  F0BF         	call	_isdigit
 12253  016C14  B0D8               	btfsc	status,0,c
 12254  016C16  D7D8               	goto	l1654
 12255  016C18  0101               	movlb	1	; () banked
 12256  016C1A  5121               	movf	atoi@sign& (0+255),w,b
 12257  016C1C  B4D8               	btfsc	status,2,c
 12258  016C1E  D00D               	goto	l1656
 12259                           
 12260                           ; BSR set to: 1
 12261  016C20  C122  F11F         	movff	atoi@a,??_atoi
 12262  016C24  C123  F120         	movff	atoi@a+1,??_atoi+1
 12263  016C28  1F1F               	comf	??_atoi& (0+255),f,b
 12264  016C2A  1F20               	comf	(??_atoi+1)& (0+255),f,b
 12265  016C2C  4B1F               	infsnz	??_atoi& (0+255),f,b
 12266  016C2E  2B20               	incf	(??_atoi+1)& (0+255),f,b
 12267  016C30  C11F  F11D         	movff	??_atoi,?_atoi
 12268  016C34  C120  F11E         	movff	??_atoi+1,?_atoi+1
 12269  016C38  0012               	return	
 12270  016C3A                     l1656:
 12271                           
 12272                           ; BSR set to: 1
 12273  016C3A  C122  F11D         	movff	atoi@a,?_atoi
 12274  016C3E  C123  F11E         	movff	atoi@a+1,?_atoi+1
 12275                           
 12276                           ; BSR set to: 1
 12277  016C42  0012               	return		;funcret
 12278  016C44                     __end_of_atoi:
 12279                           	opt stack 0
 12280                           tblptru	equ	0xFF8
 12281                           tblptrh	equ	0xFF7
 12282                           tblptrl	equ	0xFF6
 12283                           tablat	equ	0xFF5
 12284                           prodh	equ	0xFF4
 12285                           prodl	equ	0xFF3
 12286                           intcon	equ	0xFF2
 12287                           indf0	equ	0xFEF
 12288                           postinc0	equ	0xFEE
 12289                           fsr0h	equ	0xFEA
 12290                           fsr0l	equ	0xFE9
 12291                           wreg	equ	0xFE8
 12292                           indf1	equ	0xFE7
 12293                           postdec1	equ	0xFE5
 12294                           plusw1	equ	0xFE3
 12295                           fsr1h	equ	0xFE2
 12296                           fsr1l	equ	0xFE1
 12297                           indf2	equ	0xFDF
 12298                           postinc2	equ	0xFDE
 12299                           postdec2	equ	0xFDD
 12300                           plusw2	equ	0xFDB
 12301                           fsr2h	equ	0xFDA
 12302                           fsr2l	equ	0xFD9
 12303                           status	equ	0xFD8
 12304                           
 12305 ;; *************** function ___fldiv *****************
 12306 ;; Defined at:
 12307 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 12308 ;; Parameters:    Size  Location     Type
 12309 ;;  b               4   61[BANK1 ] int 
 12310 ;;  a               4   65[BANK1 ] int 
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;  grs             4   80[BANK1 ] unsigned long 
 12313 ;;  rem             4   74[BANK1 ] unsigned long 
 12314 ;;  new_exp         2   78[BANK1 ] int 
 12315 ;;  aexp            1   85[BANK1 ] unsigned char 
 12316 ;;  bexp            1   84[BANK1 ] unsigned char 
 12317 ;;  sign            1   73[BANK1 ] unsigned char 
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  4   61[BANK1 ] unsigned char 
 12320 ;; Registers used:
 12321 ;;		wreg, status,2, status,0
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12327 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12328 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12329 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12330 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12331 ;;Total ram usage:       25 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:   13
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_ringBufferLUT
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341                           	psect	text24
 12342  01504E                     __ptext24:
 12343                           	opt stack 0
 12344  01504E                     ___fldiv:
 12345                           	opt stack 15
 12346                           
 12347                           ; BSR set to: 1
 12348                           ;incstack = 0
 12349  01504E  0101               	movlb	1	; () banked
 12350  015050  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 12351  015052  0B80               	andlw	128
 12352  015054  6F49               	movwf	___fldiv@sign& (0+255),b
 12353  015056  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 12354  015058  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 12355  01505A  6F54               	movwf	___fldiv@bexp& (0+255),b
 12356                           
 12357                           ; BSR set to: 1
 12358  01505C  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 12359                           
 12360                           ; BSR set to: 1
 12361  01505E  8154               	bsf	___fldiv@bexp& (0+255),0,b
 12362                           
 12363                           ; BSR set to: 1
 12364                           
 12365                           ; BSR set to: 1
 12366  015060  5154               	movf	___fldiv@bexp& (0+255),w,b
 12367  015062  B4D8               	btfsc	status,2,c
 12368  015064  D00D               	goto	l2054
 12369                           
 12370                           ; BSR set to: 1
 12371  015066  2954               	incf	___fldiv@bexp& (0+255),w,b
 12372  015068  A4D8               	btfss	status,2,c
 12373  01506A  D008               	goto	l2055
 12374                           
 12375                           ; BSR set to: 1
 12376  01506C  0E00               	movlw	0
 12377  01506E  6F3D               	movwf	___fldiv@b& (0+255),b
 12378  015070  0E00               	movlw	0
 12379  015072  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12380  015074  0E00               	movlw	0
 12381  015076  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12382  015078  0E00               	movlw	0
 12383  01507A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12384  01507C                     l2055:
 12385                           
 12386                           ; BSR set to: 1
 12387                           
 12388                           ; BSR set to: 1
 12389  01507C  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 12390  01507E  D006               	goto	L1
 12391  015080                     l2054:
 12392                           
 12393                           ; BSR set to: 1
 12394                           
 12395                           ; BSR set to: 1
 12396  015080  0E00               	movlw	0
 12397  015082  6F3D               	movwf	___fldiv@b& (0+255),b
 12398  015084  0E00               	movlw	0
 12399  015086  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12400  015088  0E00               	movlw	0
 12401  01508A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12402  01508C                     L1:
 12403  01508C  0E00               	movlw	0
 12404  01508E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12405                           
 12406                           ; BSR set to: 1
 12407                           
 12408                           ; BSR set to: 1
 12409  015090  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 12410  015092  0B80               	andlw	128
 12411  015094  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 12412                           
 12413                           ; BSR set to: 1
 12414  015096  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 12415  015098  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 12416  01509A  6F55               	movwf	___fldiv@aexp& (0+255),b
 12417                           
 12418                           ; BSR set to: 1
 12419  01509C  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 12420                           
 12421                           ; BSR set to: 1
 12422  01509E  8155               	bsf	___fldiv@aexp& (0+255),0,b
 12423                           
 12424                           ; BSR set to: 1
 12425                           
 12426                           ; BSR set to: 1
 12427  0150A0  5155               	movf	___fldiv@aexp& (0+255),w,b
 12428  0150A2  B4D8               	btfsc	status,2,c
 12429  0150A4  D00D               	goto	l2058
 12430                           
 12431                           ; BSR set to: 1
 12432  0150A6  2955               	incf	___fldiv@aexp& (0+255),w,b
 12433  0150A8  A4D8               	btfss	status,2,c
 12434  0150AA  D008               	goto	l2059
 12435                           
 12436                           ; BSR set to: 1
 12437  0150AC  0E00               	movlw	0
 12438  0150AE  6F41               	movwf	___fldiv@a& (0+255),b
 12439  0150B0  0E00               	movlw	0
 12440  0150B2  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 12441  0150B4  0E00               	movlw	0
 12442  0150B6  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 12443  0150B8  0E00               	movlw	0
 12444  0150BA  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 12445  0150BC                     l2059:
 12446                           
 12447                           ; BSR set to: 1
 12448                           
 12449                           ; BSR set to: 1
 12450  0150BC  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 12451  0150BE  D006               	goto	L2
 12452  0150C0                     l2058:
 12453                           
 12454                           ; BSR set to: 1
 12455                           
 12456                           ; BSR set to: 1
 12457  0150C0  0E00               	movlw	0
 12458  0150C2  6F41               	movwf	___fldiv@a& (0+255),b
 12459  0150C4  0E00               	movlw	0
 12460  0150C6  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 12461  0150C8  0E00               	movlw	0
 12462  0150CA  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 12463  0150CC                     L2:
 12464  0150CC  0E00               	movlw	0
 12465  0150CE  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 12466                           
 12467                           ; BSR set to: 1
 12468                           
 12469                           ; BSR set to: 1
 12470  0150D0  5141               	movf	___fldiv@a& (0+255),w,b
 12471  0150D2  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12472  0150D4  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12473  0150D6  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12474  0150D8  A4D8               	btfss	status,2,c
 12475  0150DA  D015               	goto	l2061
 12476                           
 12477                           ; BSR set to: 1
 12478  0150DC  0E00               	movlw	0
 12479  0150DE  6F3D               	movwf	___fldiv@b& (0+255),b
 12480  0150E0  0E00               	movlw	0
 12481  0150E2  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12482  0150E4  0E00               	movlw	0
 12483  0150E6  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12484  0150E8  0E00               	movlw	0
 12485  0150EA  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12486                           
 12487                           ; BSR set to: 1
 12488  0150EC  0E80               	movlw	128
 12489  0150EE  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12490  0150F0  0E7F               	movlw	127
 12491  0150F2  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12492                           
 12493                           ; BSR set to: 1
 12494  0150F4  C13D  F13D         	movff	___fldiv@b,?___fldiv
 12495  0150F8  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 12496  0150FC  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 12497  015100  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 12498                           
 12499                           ; BSR set to: 1
 12500  015104  0012               	return	
 12501  015106                     l2061:
 12502                           
 12503                           ; BSR set to: 1
 12504                           
 12505                           ; BSR set to: 1
 12506  015106  5154               	movf	___fldiv@bexp& (0+255),w,b
 12507  015108  A4D8               	btfss	status,2,c
 12508  01510A  D011               	goto	l2063
 12509                           
 12510                           ; BSR set to: 1
 12511  01510C  0E00               	movlw	0
 12512  01510E  6F3D               	movwf	___fldiv@b& (0+255),b
 12513  015110  0E00               	movlw	0
 12514  015112  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12515  015114  0E00               	movlw	0
 12516  015116  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12517  015118  0E00               	movlw	0
 12518  01511A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12519                           
 12520                           ; BSR set to: 1
 12521  01511C  C13D  F13D         	movff	___fldiv@b,?___fldiv
 12522  015120  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 12523  015124  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 12524  015128  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 12525                           
 12526                           ; BSR set to: 1
 12527  01512C  0012               	return	
 12528  01512E                     l2063:
 12529                           
 12530                           ; BSR set to: 1
 12531                           
 12532                           ; BSR set to: 1
 12533  01512E  5155               	movf	___fldiv@aexp& (0+255),w,b
 12534  015130  6F45               	movwf	??___fldiv& (0+255),b
 12535  015132  6B46               	clrf	(??___fldiv+1)& (0+255),b
 12536  015134  1F45               	comf	??___fldiv& (0+255),f,b
 12537  015136  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 12538  015138  4B45               	infsnz	??___fldiv& (0+255),f,b
 12539  01513A  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 12540  01513C  5154               	movf	___fldiv@bexp& (0+255),w,b
 12541  01513E  6F47               	movwf	(??___fldiv+2)& (0+255),b
 12542  015140  6B48               	clrf	(??___fldiv+3)& (0+255),b
 12543  015142  5145               	movf	??___fldiv& (0+255),w,b
 12544  015144  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 12545  015146  5146               	movf	(??___fldiv+1)& (0+255),w,b
 12546  015148  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 12547  01514A  0E7F               	movlw	127
 12548  01514C  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 12549  01514E  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 12550  015150  0E00               	movlw	0
 12551  015152  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 12552  015154  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12553                           
 12554                           ; BSR set to: 1
 12555  015156  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 12556  01515A  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 12557  01515E  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 12558  015162  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 12559                           
 12560                           ; BSR set to: 1
 12561  015166  0E00               	movlw	0
 12562  015168  6F3D               	movwf	___fldiv@b& (0+255),b
 12563  01516A  0E00               	movlw	0
 12564  01516C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12565  01516E  0E00               	movlw	0
 12566  015170  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12567  015172  0E00               	movlw	0
 12568  015174  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12569                           
 12570                           ; BSR set to: 1
 12571  015176  0E00               	movlw	0
 12572  015178  6F50               	movwf	___fldiv@grs& (0+255),b
 12573  01517A  0E00               	movlw	0
 12574  01517C  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 12575  01517E  0E00               	movlw	0
 12576  015180  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 12577  015182  0E00               	movlw	0
 12578  015184  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 12579                           
 12580                           ; BSR set to: 1
 12581  015186  0E00               	movlw	0
 12582  015188  6F55               	movwf	___fldiv@aexp& (0+255),b
 12583  01518A  D028               	goto	l2064
 12584  01518C                     
 12585                           ; BSR set to: 1
 12586                           
 12587                           ; BSR set to: 1
 12588  01518C  5155               	movf	___fldiv@aexp& (0+255),w,b
 12589  01518E  B4D8               	btfsc	status,2,c
 12590  015190  D011               	goto	l2066
 12591                           
 12592                           ; BSR set to: 1
 12593  015192  90D8               	bcf	status,0,c
 12594  015194  374A               	rlcf	___fldiv@rem& (0+255),f,b
 12595  015196  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12596  015198  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12597  01519A  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12598  01519C  90D8               	bcf	status,0,c
 12599  01519E  373D               	rlcf	___fldiv@b& (0+255),f,b
 12600  0151A0  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12601  0151A2  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12602  0151A4  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12603                           
 12604                           ; BSR set to: 1
 12605  0151A6  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12606                           
 12607                           ; BSR set to: 1
 12608  0151A8  813D               	bsf	___fldiv@b& (0+255),0,b
 12609                           
 12610                           ; BSR set to: 1
 12611  0151AA  90D8               	bcf	status,0,c
 12612  0151AC  3750               	rlcf	___fldiv@grs& (0+255),f,b
 12613  0151AE  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12614  0151B0  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12615  0151B2  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12616  0151B4                     l2066:
 12617                           
 12618                           ; BSR set to: 1
 12619                           
 12620                           ; BSR set to: 1
 12621  0151B4  5141               	movf	___fldiv@a& (0+255),w,b
 12622  0151B6  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 12623  0151B8  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 12624  0151BA  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12625  0151BC  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 12626  0151BE  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12627  0151C0  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 12628  0151C2  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12629  0151C4  A0D8               	btfss	status,0,c
 12630  0151C6  D009               	goto	l2068
 12631                           
 12632                           ; BSR set to: 1
 12633  0151C8  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12634                           
 12635                           ; BSR set to: 1
 12636  0151CA  5141               	movf	___fldiv@a& (0+255),w,b
 12637  0151CC  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 12638  0151CE  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 12639  0151D0  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12640  0151D2  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 12641  0151D4  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12642  0151D6  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 12643  0151D8  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12644  0151DA                     l2068:
 12645                           
 12646                           ; BSR set to: 1
 12647                           
 12648                           ; BSR set to: 1
 12649  0151DA  2B55               	incf	___fldiv@aexp& (0+255),f,b
 12650  0151DC                     l2064:
 12651                           
 12652                           ; BSR set to: 1
 12653  0151DC  0E19               	movlw	25
 12654  0151DE  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 12655  0151E0  D7D5               	goto	l2065
 12656                           
 12657                           ; BSR set to: 1
 12658                           
 12659                           ; BSR set to: 1
 12660  0151E2  514A               	movf	___fldiv@rem& (0+255),w,b
 12661  0151E4  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12662  0151E6  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12663  0151E8  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12664  0151EA  B4D8               	btfsc	status,2,c
 12665  0151EC  D011               	goto	l2071
 12666                           
 12667                           ; BSR set to: 1
 12668  0151EE  8150               	bsf	___fldiv@grs& (0+255),0,b
 12669                           
 12670                           ; BSR set to: 1
 12671  0151F0  D00F               	goto	l2071
 12672  0151F2                     
 12673                           ; BSR set to: 1
 12674                           
 12675                           ; BSR set to: 1
 12676  0151F2  90D8               	bcf	status,0,c
 12677  0151F4  373D               	rlcf	___fldiv@b& (0+255),f,b
 12678  0151F6  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12679  0151F8  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12680  0151FA  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12681                           
 12682                           ; BSR set to: 1
 12683  0151FC  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12684                           
 12685                           ; BSR set to: 1
 12686  0151FE  813D               	bsf	___fldiv@b& (0+255),0,b
 12687                           
 12688                           ; BSR set to: 1
 12689  015200  90D8               	bcf	status,0,c
 12690  015202  3750               	rlcf	___fldiv@grs& (0+255),f,b
 12691  015204  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12692  015206  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12693  015208  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12694  01520A  074E               	decf	___fldiv@new_exp& (0+255),f,b
 12695  01520C  A0D8               	btfss	status,0,c
 12696  01520E  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12697  015210                     l2071:
 12698                           
 12699                           ; BSR set to: 1
 12700                           
 12701                           ; BSR set to: 1
 12702  015210  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 12703  015212  D7EF               	goto	l2072
 12704                           
 12705                           ; BSR set to: 1
 12706                           
 12707                           ; BSR set to: 1
 12708  015214  0E00               	movlw	0
 12709  015216  6F55               	movwf	___fldiv@aexp& (0+255),b
 12710                           
 12711                           ; BSR set to: 1
 12712  015218  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12713  01521A  D016               	goto	l2078
 12714                           
 12715                           ; BSR set to: 1
 12716  01521C  0EFF               	movlw	255
 12717  01521E  1550               	andwf	___fldiv@grs& (0+255),w,b
 12718  015220  6F45               	movwf	??___fldiv& (0+255),b
 12719  015222  0EFF               	movlw	255
 12720  015224  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12721  015226  6F46               	movwf	(??___fldiv+1)& (0+255),b
 12722  015228  0EFF               	movlw	255
 12723  01522A  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12724  01522C  6F47               	movwf	(??___fldiv+2)& (0+255),b
 12725  01522E  0E7F               	movlw	127
 12726  015230  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12727  015232  6F48               	movwf	(??___fldiv+3)& (0+255),b
 12728  015234  5145               	movf	??___fldiv& (0+255),w,b
 12729  015236  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 12730  015238  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 12731  01523A  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 12732  01523C  A4D8               	btfss	status,2,c
 12733  01523E  D002               	goto	u15170
 12734                           
 12735                           ; BSR set to: 1
 12736                           
 12737                           ; BSR set to: 1
 12738  015240  A13D               	btfss	___fldiv@b& (0+255),0,b
 12739  015242  D002               	goto	l2078
 12740  015244                     u15170:
 12741                           
 12742                           ; BSR set to: 1
 12743  015244  0E01               	movlw	1
 12744  015246  6F55               	movwf	___fldiv@aexp& (0+255),b
 12745  015248                     l2078:
 12746                           
 12747                           ; BSR set to: 1
 12748                           
 12749                           ; BSR set to: 1
 12750                           
 12751                           ; BSR set to: 1
 12752  015248  5155               	movf	___fldiv@aexp& (0+255),w,b
 12753  01524A  B4D8               	btfsc	status,2,c
 12754  01524C  D01F               	goto	l2080
 12755                           
 12756                           ; BSR set to: 1
 12757  01524E  0E01               	movlw	1
 12758  015250  273D               	addwf	___fldiv@b& (0+255),f,b
 12759  015252  0E00               	movlw	0
 12760  015254  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12761  015256  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12762  015258  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12763                           
 12764                           ; BSR set to: 1
 12765  01525A  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 12766  01525C  D017               	goto	l2080
 12767                           
 12768                           ; BSR set to: 1
 12769  01525E  C13D  F145         	movff	___fldiv@b,??___fldiv
 12770  015262  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 12771  015266  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 12772  01526A  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 12773  01526E  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 12774  015270  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 12775  015272  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 12776  015274  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 12777  015276  3345               	rrcf	??___fldiv& (0+255),f,b
 12778  015278  C145  F13D         	movff	??___fldiv,___fldiv@b
 12779  01527C  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 12780  015280  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 12781  015284  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 12782                           
 12783                           ; BSR set to: 1
 12784  015288  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 12785  01528A  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12786  01528C                     l2080:
 12787                           
 12788                           ; BSR set to: 1
 12789                           
 12790                           ; BSR set to: 1
 12791                           
 12792                           ; BSR set to: 1
 12793  01528C  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12794  01528E  D010               	goto	l2081
 12795  015290  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12796  015292  E103               	bnz	u15200
 12797  015294  294E               	incf	___fldiv@new_exp& (0+255),w,b
 12798  015296  A0D8               	btfss	status,0,c
 12799  015298  D00B               	goto	l2081
 12800  01529A                     u15200:
 12801                           
 12802                           ; BSR set to: 1
 12803  01529A  0E00               	movlw	0
 12804  01529C  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12805  01529E  694E               	setf	___fldiv@new_exp& (0+255),b
 12806  0152A0  0E00               	movlw	0
 12807  0152A2  6F3D               	movwf	___fldiv@b& (0+255),b
 12808  0152A4  0E00               	movlw	0
 12809  0152A6  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12810  0152A8  0E00               	movlw	0
 12811  0152AA  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12812  0152AC  0E00               	movlw	0
 12813  0152AE  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12814  0152B0                     l2081:
 12815                           
 12816                           ; BSR set to: 1
 12817                           
 12818                           ; BSR set to: 1
 12819  0152B0  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12820  0152B2  D005               	goto	u15210
 12821  0152B4  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12822  0152B6  E111               	bnz	l12676
 12823  0152B8  054E               	decf	___fldiv@new_exp& (0+255),w,b
 12824  0152BA  B0D8               	btfsc	status,0,c
 12825  0152BC  D00E               	goto	l2082
 12826  0152BE                     u15210:
 12827                           
 12828                           ; BSR set to: 1
 12829  0152BE  0E00               	movlw	0
 12830  0152C0  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12831  0152C2  0E00               	movlw	0
 12832  0152C4  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 12833  0152C6  0E00               	movlw	0
 12834  0152C8  6F3D               	movwf	___fldiv@b& (0+255),b
 12835  0152CA  0E00               	movlw	0
 12836  0152CC  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 12837  0152CE  0E00               	movlw	0
 12838  0152D0  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 12839  0152D2  0E00               	movlw	0
 12840  0152D4  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12841  0152D6  0E00               	movlw	0
 12842  0152D8  6F49               	movwf	___fldiv@sign& (0+255),b
 12843  0152DA                     l2082:
 12844  0152DA                     l12676:
 12845                           
 12846                           ; BSR set to: 1
 12847  0152DA  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 12848                           
 12849                           ; BSR set to: 1
 12850  0152DE  A154               	btfss	___fldiv@bexp& (0+255),0,b
 12851  0152E0  D002               	goto	l2083
 12852                           
 12853                           ; BSR set to: 1
 12854  0152E2  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 12855  0152E4  D001               	goto	l2084
 12856  0152E6                     l2083:
 12857                           
 12858                           ; BSR set to: 1
 12859                           
 12860                           ; BSR set to: 1
 12861  0152E6  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 12862  0152E8                     l2084:
 12863                           
 12864                           ; BSR set to: 1
 12865                           
 12866                           ; BSR set to: 1
 12867  0152E8  90D8               	bcf	status,0,c
 12868  0152EA  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 12869  0152EC  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 12870                           
 12871                           ; BSR set to: 1
 12872  0152EE  5149               	movf	___fldiv@sign& (0+255),w,b
 12873  0152F0  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12874                           
 12875                           ; BSR set to: 1
 12876  0152F2  C13D  F13D         	movff	___fldiv@b,?___fldiv
 12877  0152F6  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 12878  0152FA  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 12879  0152FE  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 12880  015302  0012               	return	
 12881  015304                     __end_of___fldiv:
 12882                           	opt stack 0
 12883                           tblptru	equ	0xFF8
 12884                           tblptrh	equ	0xFF7
 12885                           tblptrl	equ	0xFF6
 12886                           tablat	equ	0xFF5
 12887                           prodh	equ	0xFF4
 12888                           prodl	equ	0xFF3
 12889                           intcon	equ	0xFF2
 12890                           indf0	equ	0xFEF
 12891                           postinc0	equ	0xFEE
 12892                           fsr0h	equ	0xFEA
 12893                           fsr0l	equ	0xFE9
 12894                           wreg	equ	0xFE8
 12895                           indf1	equ	0xFE7
 12896                           postdec1	equ	0xFE5
 12897                           plusw1	equ	0xFE3
 12898                           fsr1h	equ	0xFE2
 12899                           fsr1l	equ	0xFE1
 12900                           indf2	equ	0xFDF
 12901                           postinc2	equ	0xFDE
 12902                           postdec2	equ	0xFDD
 12903                           plusw2	equ	0xFDB
 12904                           fsr2h	equ	0xFDA
 12905                           fsr2l	equ	0xFD9
 12906                           status	equ	0xFD8
 12907                           
 12908 ;; *************** function _TMR7_StartTimer *****************
 12909 ;; Defined at:
 12910 ;;		line 99 in file "mcc_generated_files/tmr7.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;		None
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  1    wreg      void 
 12917 ;; Registers used:
 12918 ;;		None
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12928 ;;Total ram usage:        0 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:   13
 12931 ;; This function calls:
 12932 ;;		Nothing
 12933 ;; This function is called by:
 12934 ;;		_ringBufferLUT
 12935 ;; This function uses a non-reentrant model
 12936 ;;
 12937                           
 12938                           	psect	text25
 12939  018174                     __ptext25:
 12940                           	opt stack 0
 12941  018174                     _TMR7_StartTimer:
 12942                           	opt stack 15
 12943                           
 12944                           ;tmr7.c: 102: T7CONbits.TMR7ON = 1;
 12945                           
 12946                           ; BSR set to: 1
 12947                           ;incstack = 0
 12948  018174  010F               	movlb	15	; () banked
 12949  018176  8130               	bsf	48,0,b	;volatile
 12950                           
 12951                           ; BSR set to: 15
 12952  018178  0012               	return		;funcret
 12953  01817A                     __end_of_TMR7_StartTimer:
 12954                           	opt stack 0
 12955                           tblptru	equ	0xFF8
 12956                           tblptrh	equ	0xFF7
 12957                           tblptrl	equ	0xFF6
 12958                           tablat	equ	0xFF5
 12959                           prodh	equ	0xFF4
 12960                           prodl	equ	0xFF3
 12961                           intcon	equ	0xFF2
 12962                           indf0	equ	0xFEF
 12963                           postinc0	equ	0xFEE
 12964                           fsr0h	equ	0xFEA
 12965                           fsr0l	equ	0xFE9
 12966                           wreg	equ	0xFE8
 12967                           indf1	equ	0xFE7
 12968                           postdec1	equ	0xFE5
 12969                           plusw1	equ	0xFE3
 12970                           fsr1h	equ	0xFE2
 12971                           fsr1l	equ	0xFE1
 12972                           indf2	equ	0xFDF
 12973                           postinc2	equ	0xFDE
 12974                           postdec2	equ	0xFDD
 12975                           plusw2	equ	0xFDB
 12976                           fsr2h	equ	0xFDA
 12977                           fsr2l	equ	0xFD9
 12978                           status	equ	0xFD8
 12979                           
 12980 ;; *************** function _EUSART2_Read *****************
 12981 ;; Defined at:
 12982 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 12983 ;; Parameters:    Size  Location     Type
 12984 ;;		None
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;  readValue       1   23[BANK1 ] unsigned char 
 12987 ;; Return value:  Size  Location     Type
 12988 ;;                  1    wreg      unsigned char 
 12989 ;; Registers used:
 12990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12991 ;; Tracked objects:
 12992 ;;		On entry : 0/0
 12993 ;;		On exit  : 0/0
 12994 ;;		Unchanged: 0/0
 12995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12997 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12999 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13000 ;;Total ram usage:        1 bytes
 13001 ;; Hardware stack levels used:    1
 13002 ;; Hardware stack levels required when called:   13
 13003 ;; This function calls:
 13004 ;;		Nothing
 13005 ;; This function is called by:
 13006 ;;		_terminal_ringBufferPull
 13007 ;;		_getch
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           	psect	text26
 13012  017A72                     __ptext26:
 13013                           	opt stack 0
 13014  017A72                     _EUSART2_Read:
 13015                           	opt stack 16
 13016                           
 13017                           ;eusart2.c: 139: uint8_t readValue = 0;
 13018                           
 13019                           ; BSR set to: 15
 13020                           ;incstack = 0
 13021  017A72  0E00               	movlw	0
 13022  017A74  0101               	movlb	1	; () banked
 13023  017A76  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13024                           
 13025                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 13026  017A78  D002               	goto	l381
 13027  017A7A                     l382:
 13028                           
 13029                           ; BSR set to: 1
 13030  017A7A  0004               	clrwdt		;# 
 13031                           
 13032                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 13033  017A7C  827E               	bsf	3966,1,c	;volatile
 13034  017A7E                     l381:
 13035  017A7E  0101               	movlb	1	; () banked
 13036  017A80  51DE               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 13037  017A82  B4D8               	btfsc	status,2,c
 13038  017A84  D7FA               	goto	l382
 13039                           
 13040                           ; BSR set to: 1
 13041                           ;eusart2.c: 145: }
 13042                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 13043  017A86  927E               	bcf	3966,1,c	;volatile
 13044                           
 13045                           ; BSR set to: 1
 13046                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 13047  017A88  51DF               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 13048  017A8A  0D01               	mullw	1
 13049  017A8C  0E00               	movlw	low _eusart2RxBuffer
 13050  017A8E  24F3               	addwf	prodl,w,c
 13051  017A90  6ED9               	movwf	fsr2l,c
 13052  017A92  0E02               	movlw	high _eusart2RxBuffer
 13053  017A94  20F4               	addwfc	prodh,w,c
 13054  017A96  6EDA               	movwf	fsr2h,c
 13055  017A98  50DF               	movf	indf2,w,c
 13056  017A9A  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13057                           
 13058                           ; BSR set to: 1
 13059  017A9C  2BDF               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 13060                           
 13061                           ; BSR set to: 1
 13062                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 13063  017A9E  0E3F               	movlw	63
 13064  017AA0  65DF               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 13065  017AA2  D002               	goto	l384
 13066                           
 13067                           ; BSR set to: 1
 13068                           ;eusart2.c: 151: {
 13069                           ;eusart2.c: 152: eusart2RxTail = 0;
 13070  017AA4  0E00               	movlw	0
 13071  017AA6  6FDF               	movwf	_eusart2RxTail& (0+255),b	;volatile
 13072  017AA8                     l384:
 13073                           
 13074                           ; BSR set to: 1
 13075                           ;eusart2.c: 153: }
 13076                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 13077                           
 13078                           ; BSR set to: 1
 13079  017AA8  010E               	movlb	14	; () banked
 13080  017AAA  9F2C               	bcf	44,7,b	;volatile
 13081                           
 13082                           ; BSR set to: 14
 13083                           ;eusart2.c: 155: eusart2RxCount--;
 13084  017AAC  0101               	movlb	1	; () banked
 13085  017AAE  07DE               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 13086                           
 13087                           ; BSR set to: 1
 13088                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 13089  017AB0  010E               	movlb	14	; () banked
 13090  017AB2  8F2C               	bsf	44,7,b	;volatile
 13091                           
 13092                           ; BSR set to: 14
 13093                           ;eusart2.c: 158: return readValue;
 13094  017AB4  0101               	movlb	1	; () banked
 13095  017AB6  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 13096  017AB8  0012               	return	
 13097  017ABA                     __end_of_EUSART2_Read:
 13098                           	opt stack 0
 13099                           tblptru	equ	0xFF8
 13100                           tblptrh	equ	0xFF7
 13101                           tblptrl	equ	0xFF6
 13102                           tablat	equ	0xFF5
 13103                           prodh	equ	0xFF4
 13104                           prodl	equ	0xFF3
 13105                           intcon	equ	0xFF2
 13106                           indf0	equ	0xFEF
 13107                           postinc0	equ	0xFEE
 13108                           fsr0h	equ	0xFEA
 13109                           fsr0l	equ	0xFE9
 13110                           wreg	equ	0xFE8
 13111                           indf1	equ	0xFE7
 13112                           postdec1	equ	0xFE5
 13113                           plusw1	equ	0xFE3
 13114                           fsr1h	equ	0xFE2
 13115                           fsr1l	equ	0xFE1
 13116                           indf2	equ	0xFDF
 13117                           postinc2	equ	0xFDE
 13118                           postdec2	equ	0xFDD
 13119                           plusw2	equ	0xFDB
 13120                           fsr2h	equ	0xFDA
 13121                           fsr2l	equ	0xFD9
 13122                           status	equ	0xFD8
 13123                           
 13124 ;; *************** function _terminal_clearTerminal *****************
 13125 ;; Defined at:
 13126 ;;		line 80 in file "ring_buffer_interface.c"
 13127 ;; Parameters:    Size  Location     Type
 13128 ;;		None
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;		None
 13131 ;; Return value:  Size  Location     Type
 13132 ;;                  1    wreg      void 
 13133 ;; Registers used:
 13134 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13135 ;; Tracked objects:
 13136 ;;		On entry : 0/0
 13137 ;;		On exit  : 0/0
 13138 ;;		Unchanged: 0/0
 13139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13144 ;;Total ram usage:        0 bytes
 13145 ;; Hardware stack levels used:    1
 13146 ;; Hardware stack levels required when called:   16
 13147 ;; This function calls:
 13148 ;;		_printf
 13149 ;; This function is called by:
 13150 ;;		_main
 13151 ;; This function uses a non-reentrant model
 13152 ;;
 13153                           
 13154                           	psect	text27
 13155  0180B8                     __ptext27:
 13156                           	opt stack 0
 13157  0180B8                     _terminal_clearTerminal:
 13158                           	opt stack 14
 13159                           
 13160                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 13161                           
 13162                           ; BSR set to: 1
 13163                           ;incstack = 0
 13164  0180B8  0EB0               	movlw	low STR_2
 13165  0180BA  0101               	movlb	1	; () banked
 13166  0180BC  6F7C               	movwf	printf@f& (0+255),b
 13167  0180BE  0EFF               	movlw	high STR_2
 13168  0180C0  6F7D               	movwf	(printf@f+1)& (0+255),b
 13169  0180C2  EC52  F086         	call	_printf	;wreg free
 13170  0180C6  0012               	return		;funcret
 13171  0180C8                     __end_of_terminal_clearTerminal:
 13172                           	opt stack 0
 13173                           tblptru	equ	0xFF8
 13174                           tblptrh	equ	0xFF7
 13175                           tblptrl	equ	0xFF6
 13176                           tablat	equ	0xFF5
 13177                           prodh	equ	0xFF4
 13178                           prodl	equ	0xFF3
 13179                           intcon	equ	0xFF2
 13180                           indf0	equ	0xFEF
 13181                           postinc0	equ	0xFEE
 13182                           fsr0h	equ	0xFEA
 13183                           fsr0l	equ	0xFE9
 13184                           wreg	equ	0xFE8
 13185                           indf1	equ	0xFE7
 13186                           postdec1	equ	0xFE5
 13187                           plusw1	equ	0xFE3
 13188                           fsr1h	equ	0xFE2
 13189                           fsr1l	equ	0xFE1
 13190                           indf2	equ	0xFDF
 13191                           postinc2	equ	0xFDE
 13192                           postdec2	equ	0xFDD
 13193                           plusw2	equ	0xFDB
 13194                           fsr2h	equ	0xFDA
 13195                           fsr2l	equ	0xFD9
 13196                           status	equ	0xFD8
 13197                           
 13198 ;; *************** function _printf *****************
 13199 ;; Defined at:
 13200 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13201 ;; Parameters:    Size  Location     Type
 13202 ;;  f               2  124[BANK1 ] PTR const unsigned char 
 13203 ;;		 -> STR_119(30), STR_118(23), STR_117(39), STR_116(36), 
 13204 ;;		 -> STR_115(33), STR_114(2023), STR_112(53), STR_110(58), 
 13205 ;;		 -> STR_108(71), STR_107(63), STR_106(37), STR_105(46), 
 13206 ;;		 -> STR_104(102), STR_103(86), STR_101(25), STR_99(42), 
 13207 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 13208 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(56), 
 13209 ;;		 -> STR_81(34), STR_79(34), STR_77(35), STR_75(45), 
 13210 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 13211 ;;		 -> STR_59(54), STR_58(64), STR_56(57), STR_54(85), 
 13212 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 13213 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 13214 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 13215 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 13216 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 13217 ;; Auto vars:     Size  Location     Type
 13218 ;;  idx             1  144[BANK1 ] unsigned char 
 13219 ;;  fval            4  163[BANK1 ] unsigned char 
 13220 ;;  val             4  159[BANK1 ] unsigned long 
 13221 ;;  tmpval          4  155[BANK1 ] struct .
 13222 ;;  prec            2  167[BANK1 ] int 
 13223 ;;  exp             2  153[BANK1 ] int 
 13224 ;;  flag            2  151[BANK1 ] unsigned short 
 13225 ;;  ap              2  149[BANK1 ] PTR void [1]
 13226 ;;		 -> ?i2_printf(2), ?_printf(2), 
 13227 ;;  cp              2  147[BANK1 ] PTR const unsigned char 
 13228 ;;		 -> STR_133(7), printf@c(1), STR_132(16), STR_131(22), 
 13229 ;;		 -> STR_130(21), STR_129(27), STR_128(41), STR_127(32), 
 13230 ;;		 -> STR_126(19), STR_125(16), STR_124(15), STR_123(16), 
 13231 ;;		 -> STR_122(10), STR_121(13), STR_120(12), ringBufferLUT@channel_name(22), 
 13232 ;;		 -> TRIAC_Firing_Angle(4), 
 13233 ;;  len             2  145[BANK1 ] unsigned int 
 13234 ;;  width           2    0        int 
 13235 ;;  c               1  169[BANK1 ] char 
 13236 ;;  d               1    0        unsigned char 
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  2  124[BANK1 ] int 
 13239 ;; Registers used:
 13240 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13246 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13247 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13248 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13249 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13250 ;;Total ram usage:       46 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; Hardware stack levels required when called:   15
 13253 ;; This function calls:
 13254 ;;		___awdiv
 13255 ;;		___fladd
 13256 ;;		___flge
 13257 ;;		___flmul
 13258 ;;		___flneg
 13259 ;;		___flsub
 13260 ;;		___fltol
 13261 ;;		___lldiv
 13262 ;;		___llmod
 13263 ;;		___wmul
 13264 ;;		___xxtofl
 13265 ;;		__div_to_l_
 13266 ;;		__tdiv_to_l_
 13267 ;;		_fround
 13268 ;;		_isdigit
 13269 ;;		_putch
 13270 ;;		_scale
 13271 ;; This function is called by:
 13272 ;;		_terminal_clearTerminal
 13273 ;;		_terminal_setCursorHome
 13274 ;;		_terminal_textAttributes
 13275 ;;		_terminal_printNewline
 13276 ;;		_ringBufferLUT
 13277 ;;		_terminal_printResetMessage
 13278 ;;		_terminal_clearLine
 13279 ;;		_terminal_saveCursor
 13280 ;;		_terminal_returnCursor
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           	psect	text28
 13285  010CA4                     __ptext28:
 13286                           	opt stack 0
 13287  010CA4                     _printf:
 13288                           	opt stack 13
 13289                           
 13290                           ;doprnt.c: 466: va_list ap;
 13291                           ;doprnt.c: 499: signed char c;
 13292                           ;doprnt.c: 501: int width;
 13293                           ;doprnt.c: 504: int prec;
 13294                           ;doprnt.c: 508: unsigned short flag;
 13295                           ;doprnt.c: 515: char d;
 13296                           ;doprnt.c: 516: double fval;
 13297                           ;doprnt.c: 517: int exp;
 13298                           ;doprnt.c: 523: union {
 13299                           ;doprnt.c: 524: unsigned long vd;
 13300                           ;doprnt.c: 525: double integ;
 13301                           ;doprnt.c: 526: } tmpval;
 13302                           ;doprnt.c: 528: unsigned long val;
 13303                           ;doprnt.c: 529: unsigned len;
 13304                           ;doprnt.c: 530: const char * cp;
 13305                           ;doprnt.c: 533: *ap = __va_start();
 13306                           
 13307                           ;incstack = 0
 13308  010CA4  0E7E               	movlw	low (?_printf+2)
 13309  010CA6  0101               	movlb	1	; () banked
 13310  010CA8  6F95               	movwf	printf@ap& (0+255),b
 13311  010CAA  0E01               	movlw	high (?_printf+2)
 13312  010CAC  6F96               	movwf	(printf@ap+1)& (0+255),b
 13313                           
 13314                           ;doprnt.c: 536: while(c = *f++) {
 13315  010CAE  EFC6  F08B         	goto	u14420
 13316  010CB2                     
 13317                           ; BSR set to: 1
 13318                           ;doprnt.c: 538: if(c != '%')
 13319                           
 13320                           ; BSR set to: 1
 13321  010CB2  0E25               	movlw	37
 13322  010CB4  19A9               	xorwf	printf@c& (0+255),w,b
 13323  010CB6  B4D8               	btfsc	status,2,c
 13324  010CB8  D005               	goto	l1352
 13325                           
 13326                           ; BSR set to: 1
 13327                           ;doprnt.c: 540: {
 13328                           ;doprnt.c: 541: (putch(c) );
 13329  010CBA  51A9               	movf	printf@c& (0+255),w,b
 13330  010CBC  EC6C  F0C0         	call	_putch
 13331                           
 13332                           ;doprnt.c: 542: continue;
 13333  010CC0  EFC6  F08B         	goto	u14420
 13334  010CC4                     l1352:
 13335                           
 13336                           ;doprnt.c: 543: }
 13337                           ;doprnt.c: 548: flag = 0;
 13338  010CC4  0E00               	movlw	0
 13339  010CC6  0101               	movlb	1	; () banked
 13340  010CC8  6F98               	movwf	(printf@flag+1)& (0+255),b
 13341  010CCA  0E00               	movlw	0
 13342  010CCC  6F97               	movwf	printf@flag& (0+255),b
 13343                           
 13344                           ; BSR set to: 1
 13345                           ;doprnt.c: 611: if(*f == '.') {
 13346  010CCE  C17C  FFF6         	movff	printf@f,tblptrl
 13347  010CD2  C17D  FFF7         	movff	printf@f+1,tblptrh
 13348  010CD6  0E00               	movlw	low (__mediumconst shr (0+16))
 13349  010CD8  6EF8               	movwf	tblptru,c
 13350  010CDA  0E0D               	movlw	(high __ramtop+-1)
 13351  010CDC  64F7               	cpfsgt	tblptrh,c
 13352  010CDE  D003               	bra	u13937
 13353  010CE0  0008               	tblrd		*
 13354  010CE2  50F5               	movf	tablat,w,c
 13355  010CE4  D005               	bra	u13930
 13356  010CE6                     u13937:
 13357  010CE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 13358  010CEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 13359  010CEE  50EF               	movf	indf0,w,c
 13360  010CF0                     u13930:
 13361  010CF0  0A2E               	xorlw	46
 13362  010CF2  A4D8               	btfss	status,2,c
 13363  010CF4  D049               	goto	l1353
 13364                           
 13365                           ;doprnt.c: 612: flag |= 0x4000;
 13366  010CF6  0101               	movlb	1	; () banked
 13367  010CF8  8D98               	bsf	(printf@flag+1)& (0+255),6,b
 13368                           
 13369                           ;doprnt.c: 613: f++;
 13370  010CFA  4B7C               	infsnz	printf@f& (0+255),f,b
 13371  010CFC  2B7D               	incf	(printf@f+1)& (0+255),f,b
 13372                           
 13373                           ; BSR set to: 1
 13374                           ;doprnt.c: 620: {
 13375                           ;doprnt.c: 621: prec = 0;
 13376  010CFE  0E00               	movlw	0
 13377  010D00  6FA8               	movwf	(printf@prec+1)& (0+255),b
 13378  010D02  0E00               	movlw	0
 13379  010D04  6FA7               	movwf	printf@prec& (0+255),b
 13380                           
 13381                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 13382  010D06  D02A               	goto	l1354
 13383  010D08                     
 13384                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 13385                           
 13386                           ; BSR set to: 1
 13387  010D08  C1A7  F117         	movff	printf@prec,___wmul@multiplier
 13388  010D0C  C1A8  F118         	movff	printf@prec+1,___wmul@multiplier+1
 13389  010D10  0E00               	movlw	0
 13390  010D12  0101               	movlb	1	; () banked
 13391  010D14  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13392  010D16  0E0A               	movlw	10
 13393  010D18  6F19               	movwf	___wmul@multiplicand& (0+255),b
 13394  010D1A  EC41  F0BF         	call	___wmul	;wreg free
 13395  010D1E  C17C  FFF6         	movff	printf@f,tblptrl
 13396  010D22  C17D  FFF7         	movff	printf@f+1,tblptrh
 13397  010D26  0E00               	movlw	low (__mediumconst shr (0+16))
 13398  010D28  6EF8               	movwf	tblptru,c
 13399  010D2A  0E0D               	movlw	(high __ramtop+-1)
 13400  010D2C  64F7               	cpfsgt	tblptrh,c
 13401  010D2E  D003               	bra	u13957
 13402  010D30  0008               	tblrd		*
 13403  010D32  50F5               	movf	tablat,w,c
 13404  010D34  D005               	bra	u13950
 13405  010D36                     u13957:
 13406  010D36  CFF6 FFE9          	movff	tblptrl,fsr0l
 13407  010D3A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13408  010D3E  50EF               	movf	indf0,w,c
 13409  010D40                     u13950:
 13410  010D40  0101               	movlb	1	; () banked
 13411  010D42  6F86               	movwf	??_printf& (0+255),b
 13412  010D44  5186               	movf	??_printf& (0+255),w,b
 13413  010D46  2717               	addwf	?___wmul& (0+255),f,b
 13414  010D48  0E00               	movlw	0
 13415  010D4A  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 13416  010D4C  0ED0               	movlw	208
 13417  010D4E  2517               	addwf	?___wmul& (0+255),w,b
 13418  010D50  6FA7               	movwf	printf@prec& (0+255),b
 13419  010D52  0EFF               	movlw	255
 13420  010D54  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 13421  010D56  6FA8               	movwf	(printf@prec+1)& (0+255),b
 13422                           
 13423                           ; BSR set to: 1
 13424  010D58  4B7C               	infsnz	printf@f& (0+255),f,b
 13425  010D5A  2B7D               	incf	(printf@f+1)& (0+255),f,b
 13426  010D5C                     l1354:
 13427                           
 13428                           ; BSR set to: 1
 13429                           
 13430                           ; BSR set to: 1
 13431  010D5C  C17C  FFF6         	movff	printf@f,tblptrl
 13432  010D60  C17D  FFF7         	movff	printf@f+1,tblptrh
 13433  010D64  0E00               	movlw	low (__mediumconst shr (0+16))
 13434  010D66  6EF8               	movwf	tblptru,c
 13435  010D68  0E0D               	movlw	(high __ramtop+-1)
 13436  010D6A  64F7               	cpfsgt	tblptrh,c
 13437  010D6C  D003               	bra	u13967
 13438  010D6E  0008               	tblrd		*
 13439  010D70  50F5               	movf	tablat,w,c
 13440  010D72  D005               	bra	u13960
 13441  010D74                     u13967:
 13442  010D74  CFF6 FFE9          	movff	tblptrl,fsr0l
 13443  010D78  CFF7 FFEA          	movff	tblptrh,fsr0h
 13444  010D7C  50EF               	movf	indf0,w,c
 13445  010D7E                     u13960:
 13446  010D7E  ECC8  F0BF         	call	_isdigit
 13447  010D82  A0D8               	btfss	status,0,c
 13448  010D84  D088               	goto	l1358
 13449  010D86  D7C0               	goto	l1355
 13450  010D88                     l1353:
 13451                           
 13452                           ;doprnt.c: 626: prec = 0;
 13453  010D88  0E00               	movlw	0
 13454  010D8A  0101               	movlb	1	; () banked
 13455  010D8C  6FA8               	movwf	(printf@prec+1)& (0+255),b
 13456  010D8E  0E00               	movlw	0
 13457  010D90  6FA7               	movwf	printf@prec& (0+255),b
 13458                           
 13459                           ; BSR set to: 1
 13460                           ;doprnt.c: 628: flag |= 0x1000;
 13461  010D92  8998               	bsf	(printf@flag+1)& (0+255),4,b
 13462                           
 13463                           ; BSR set to: 1
 13464                           ;doprnt.c: 630: }
 13465                           ;doprnt.c: 635: switch(c = *f++) {
 13466  010D94  D080               	goto	l1358
 13467  010D96                     
 13468                           ; BSR set to: 1
 13469                           ;doprnt.c: 663: flag |= 0x400;
 13470                           
 13471                           ; BSR set to: 1
 13472  010D96  8598               	bsf	(printf@flag+1)& (0+255),2,b
 13473                           
 13474                           ; BSR set to: 1
 13475                           ;doprnt.c: 698: case 'i':
 13476                           ;doprnt.c: 699: break;
 13477                           
 13478                           ; BSR set to: 1
 13479                           
 13480                           ;doprnt.c: 697: case 'd':
 13481                           
 13482                           ;doprnt.c: 664: break;
 13483  010D98  D0B5               	goto	l1362
 13484  010D9A                     
 13485                           ; BSR set to: 1
 13486                           ;doprnt.c: 718: case 'x':
 13487                           ;doprnt.c: 721: flag |= 0x80;
 13488                           
 13489                           ; BSR set to: 1
 13490                           
 13491                           ; BSR set to: 1
 13492  010D9A  8F97               	bsf	printf@flag& (0+255),7,b
 13493                           
 13494                           ;doprnt.c: 723: break;
 13495  010D9C  D0B3               	goto	l1362
 13496  010D9E                     
 13497                           ; BSR set to: 1
 13498                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13499                           
 13500                           ; BSR set to: 1
 13501  010D9E  C195  FFD9         	movff	printf@ap,fsr2l
 13502  010DA2  C196  FFDA         	movff	printf@ap+1,fsr2h
 13503  010DA6  CFDE F193          	movff	postinc2,printf@cp
 13504  010DAA  CFDD F194          	movff	postdec2,printf@cp+1
 13505                           
 13506                           ; BSR set to: 1
 13507  010DAE  0E02               	movlw	2
 13508  010DB0  2795               	addwf	printf@ap& (0+255),f,b
 13509  010DB2  0E00               	movlw	0
 13510  010DB4  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 13511                           
 13512                           ; BSR set to: 1
 13513                           ;doprnt.c: 740: if(!cp)
 13514  010DB6  5193               	movf	printf@cp& (0+255),w,b
 13515  010DB8  1194               	iorwf	(printf@cp+1)& (0+255),w,b
 13516  010DBA  A4D8               	btfss	status,2,c
 13517  010DBC  D004               	goto	l1368
 13518                           
 13519                           ; BSR set to: 1
 13520                           ;doprnt.c: 741: cp = "(null)";
 13521  010DBE  0E86               	movlw	low STR_133
 13522  010DC0  6F93               	movwf	printf@cp& (0+255),b
 13523  010DC2  0EFF               	movlw	high STR_133
 13524  010DC4  6F94               	movwf	(printf@cp+1)& (0+255),b
 13525  010DC6                     l1368:
 13526                           
 13527                           ; BSR set to: 1
 13528                           ;doprnt.c: 745: len = 0;
 13529                           
 13530                           ; BSR set to: 1
 13531  010DC6  0E00               	movlw	0
 13532  010DC8  6F92               	movwf	(printf@len+1)& (0+255),b
 13533  010DCA  0E00               	movlw	0
 13534  010DCC  6F91               	movwf	printf@len& (0+255),b
 13535                           
 13536                           ;doprnt.c: 746: while(cp[len])
 13537  010DCE  D003               	goto	l1369
 13538  010DD0                     
 13539                           ;doprnt.c: 747: len++;
 13540                           
 13541                           ; BSR set to: 1
 13542  010DD0  0101               	movlb	1	; () banked
 13543  010DD2  4B91               	infsnz	printf@len& (0+255),f,b
 13544  010DD4  2B92               	incf	(printf@len+1)& (0+255),f,b
 13545  010DD6                     l1369:
 13546                           
 13547                           ; BSR set to: 1
 13548                           
 13549                           ; BSR set to: 1
 13550  010DD6  5191               	movf	printf@len& (0+255),w,b
 13551  010DD8  2593               	addwf	printf@cp& (0+255),w,b
 13552  010DDA  6F86               	movwf	??_printf& (0+255),b
 13553  010DDC  5192               	movf	(printf@len+1)& (0+255),w,b
 13554  010DDE  2194               	addwfc	(printf@cp+1)& (0+255),w,b
 13555  010DE0  6F87               	movwf	(??_printf+1)& (0+255),b
 13556  010DE2  C186  FFF6         	movff	??_printf,tblptrl
 13557  010DE6  C187  FFF7         	movff	??_printf+1,tblptrh
 13558  010DEA  0E00               	movlw	low (__mediumconst shr (0+16))
 13559  010DEC  6EF8               	movwf	tblptru,c
 13560  010DEE  0E0D               	movlw	(high __ramtop+-1)
 13561  010DF0  64F7               	cpfsgt	tblptrh,c
 13562  010DF2  D003               	bra	u13997
 13563  010DF4  0008               	tblrd		*
 13564  010DF6  50F5               	movf	tablat,w,c
 13565  010DF8  D005               	bra	u13990
 13566  010DFA                     u13997:
 13567  010DFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13568  010DFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13569  010E02  50EF               	movf	indf0,w,c
 13570  010E04                     u13990:
 13571  010E04  0900               	iorlw	0
 13572  010E06  A4D8               	btfss	status,2,c
 13573  010E08  D7E3               	goto	l1370
 13574  010E0A                     u14000:
 13575                           
 13576                           ;doprnt.c: 753: if(prec && prec < len)
 13577                           
 13578                           ;doprnt.c: 750: dostring:
 13579  010E0A  0101               	movlb	1	; () banked
 13580  010E0C  51A7               	movf	printf@prec& (0+255),w,b
 13581  010E0E  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 13582  010E10  B4D8               	btfsc	status,2,c
 13583  010E12  D021               	goto	l1374
 13584                           
 13585                           ; BSR set to: 1
 13586  010E14  5191               	movf	printf@len& (0+255),w,b
 13587  010E16  5DA7               	subwf	printf@prec& (0+255),w,b
 13588  010E18  5192               	movf	(printf@len+1)& (0+255),w,b
 13589  010E1A  59A8               	subwfb	(printf@prec+1)& (0+255),w,b
 13590  010E1C  B0D8               	btfsc	status,0,c
 13591  010E1E  D01B               	goto	l1374
 13592                           
 13593                           ; BSR set to: 1
 13594                           ;doprnt.c: 754: len = prec;
 13595  010E20  C1A7  F191         	movff	printf@prec,printf@len
 13596  010E24  C1A8  F192         	movff	printf@prec+1,printf@len+1
 13597                           
 13598                           ; BSR set to: 1
 13599                           ;doprnt.c: 767: while(len--)
 13600  010E28  D016               	goto	l1374
 13601  010E2A                     l11770:
 13602                           
 13603                           ; BSR set to: 1
 13604                           ;doprnt.c: 768: (putch(*cp++) );
 13605  010E2A  C193  FFF6         	movff	printf@cp,tblptrl
 13606  010E2E  C194  FFF7         	movff	printf@cp+1,tblptrh
 13607  010E32  0E00               	movlw	low (__mediumconst shr (0+16))
 13608  010E34  6EF8               	movwf	tblptru,c
 13609  010E36  0E0D               	movlw	(high __ramtop+-1)
 13610  010E38  64F7               	cpfsgt	tblptrh,c
 13611  010E3A  D003               	bra	u14037
 13612  010E3C  0008               	tblrd		*
 13613  010E3E  50F5               	movf	tablat,w,c
 13614  010E40  D005               	bra	u14030
 13615  010E42                     u14037:
 13616  010E42  CFF6 FFE9          	movff	tblptrl,fsr0l
 13617  010E46  CFF7 FFEA          	movff	tblptrh,fsr0h
 13618  010E4A  50EF               	movf	indf0,w,c
 13619  010E4C                     u14030:
 13620  010E4C  EC6C  F0C0         	call	_putch
 13621  010E50  0101               	movlb	1	; () banked
 13622  010E52  4B93               	infsnz	printf@cp& (0+255),f,b
 13623  010E54  2B94               	incf	(printf@cp+1)& (0+255),f,b
 13624  010E56                     l1374:
 13625                           
 13626                           ; BSR set to: 1
 13627                           
 13628                           ; BSR set to: 1
 13629  010E56  0791               	decf	printf@len& (0+255),f,b
 13630  010E58  A0D8               	btfss	status,0,c
 13631  010E5A  0792               	decf	(printf@len+1)& (0+255),f,b
 13632  010E5C  2991               	incf	printf@len& (0+255),w,b
 13633  010E5E  E1E5               	bnz	l11770
 13634  010E60  2992               	incf	(printf@len+1)& (0+255),w,b
 13635  010E62  B4D8               	btfsc	status,2,c
 13636  010E64  EFC6  F08B         	goto	u14420
 13637  010E68  D7E0               	goto	l1375
 13638  010E6A                     
 13639                           ; BSR set to: 1
 13640                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 13641                           
 13642                           ; BSR set to: 1
 13643  010E6A  C195  FFD9         	movff	printf@ap,fsr2l
 13644  010E6E  C196  FFDA         	movff	printf@ap+1,fsr2h
 13645  010E72  50DF               	movf	indf2,w,c
 13646  010E74  6FA9               	movwf	printf@c& (0+255),b
 13647                           
 13648                           ; BSR set to: 1
 13649  010E76  0E02               	movlw	2
 13650  010E78  2795               	addwf	printf@ap& (0+255),f,b
 13651  010E7A  0E00               	movlw	0
 13652  010E7C  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 13653  010E7E                     
 13654                           ; BSR set to: 1
 13655                           ;doprnt.c: 805: cp = (char *)&c;
 13656                           
 13657                           ; BSR set to: 1
 13658  010E7E  0EA9               	movlw	low printf@c
 13659  010E80  6F93               	movwf	printf@cp& (0+255),b
 13660  010E82  0E01               	movlw	high printf@c
 13661  010E84  6F94               	movwf	(printf@cp+1)& (0+255),b
 13662                           
 13663                           ; BSR set to: 1
 13664                           ;doprnt.c: 806: len = 1;
 13665  010E86  0E00               	movlw	0
 13666  010E88  6F92               	movwf	(printf@len+1)& (0+255),b
 13667  010E8A  0E01               	movlw	1
 13668  010E8C  6F91               	movwf	printf@len& (0+255),b
 13669                           
 13670                           ;doprnt.c: 807: goto dostring;
 13671  010E8E  D7BD               	goto	u14000
 13672  010E90                     
 13673                           ; BSR set to: 1
 13674                           ;doprnt.c: 818: flag |= 0xC0;
 13675                           
 13676                           ; BSR set to: 1
 13677  010E90  0EC0               	movlw	192
 13678  010E92  1397               	iorwf	printf@flag& (0+255),f,b
 13679                           
 13680                           ; BSR set to: 1
 13681                           ;doprnt.c: 822: }
 13682                           
 13683                           ;doprnt.c: 819: break;
 13684  010E94  D037               	goto	l1362
 13685  010E96                     l1358:
 13686                           
 13687                           ; BSR set to: 1
 13688  010E96  0101               	movlb	1	; () banked
 13689  010E98  517C               	movf	printf@f& (0+255),w,b
 13690  010E9A  6F86               	movwf	??_printf& (0+255),b
 13691  010E9C  517D               	movf	(printf@f+1)& (0+255),w,b
 13692  010E9E  6F87               	movwf	(??_printf+1)& (0+255),b
 13693  010EA0  4B7C               	infsnz	printf@f& (0+255),f,b
 13694  010EA2  2B7D               	incf	(printf@f+1)& (0+255),f,b
 13695  010EA4  C186  FFF6         	movff	??_printf,tblptrl
 13696  010EA8  C187  FFF7         	movff	??_printf+1,tblptrh
 13697  010EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 13698  010EAE  6EF8               	movwf	tblptru,c
 13699  010EB0  0E0D               	movlw	(high __ramtop+-1)
 13700  010EB2  64F7               	cpfsgt	tblptrh,c
 13701  010EB4  D003               	bra	u14057
 13702  010EB6  0008               	tblrd		*
 13703  010EB8  50F5               	movf	tablat,w,c
 13704  010EBA  D005               	bra	u14050
 13705  010EBC                     u14057:
 13706  010EBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 13707  010EC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 13708  010EC4  50EF               	movf	indf0,w,c
 13709  010EC6                     u14050:
 13710  010EC6  0101               	movlb	1	; () banked
 13711  010EC8  6FA9               	movwf	printf@c& (0+255),b
 13712  010ECA  51A9               	movf	printf@c& (0+255),w,b
 13713                           
 13714                           ; Switch size 1, requested type "space"
 13715                           ; Number of cases is 9, Range of values is 0 to 120
 13716                           ; switch strategies available:
 13717                           ; Name         Instructions Cycles
 13718                           ; simple_byte           28    15 (average)
 13719                           ;	Chosen strategy is simple_byte
 13720  010ECC  0A00               	xorlw	0	; case 0
 13721  010ECE  B4D8               	btfsc	status,2,c
 13722  010ED0  0012               	return	
 13723  010ED2  0A58               	xorlw	88	; case 88
 13724  010ED4  B4D8               	btfsc	status,2,c
 13725  010ED6  D761               	goto	l1365
 13726  010ED8  0A3B               	xorlw	59	; case 99
 13727  010EDA  B4D8               	btfsc	status,2,c
 13728  010EDC  D7C6               	goto	l1377
 13729  010EDE  0A07               	xorlw	7	; case 100
 13730  010EE0  B4D8               	btfsc	status,2,c
 13731  010EE2  D010               	goto	l1362
 13732  010EE4  0A02               	xorlw	2	; case 102
 13733  010EE6  B4D8               	btfsc	status,2,c
 13734  010EE8  D756               	goto	l1361
 13735  010EEA  0A0F               	xorlw	15	; case 105
 13736  010EEC  B4D8               	btfsc	status,2,c
 13737  010EEE  D00A               	goto	l1362
 13738  010EF0  0A1A               	xorlw	26	; case 115
 13739  010EF2  B4D8               	btfsc	status,2,c
 13740  010EF4  D754               	goto	l1367
 13741  010EF6  0A06               	xorlw	6	; case 117
 13742  010EF8  B4D8               	btfsc	status,2,c
 13743  010EFA  D7CA               	goto	l1379
 13744  010EFC  0A0D               	xorlw	13	; case 120
 13745  010EFE  B4D8               	btfsc	status,2,c
 13746  010F00  D74C               	goto	l1365
 13747  010F02  D7BD               	goto	l1378
 13748  010F04                     l1362:
 13749                           
 13750                           ; BSR set to: 1
 13751                           ;doprnt.c: 825: if(flag & (0x700)) {
 13752                           
 13753                           ; BSR set to: 1
 13754  010F04  0E07               	movlw	7
 13755  010F06  1598               	andwf	(printf@flag+1)& (0+255),w,b
 13756  010F08  B4D8               	btfsc	status,2,c
 13757  010F0A  D2EA               	goto	l1380
 13758                           
 13759                           ; BSR set to: 1
 13760                           ;doprnt.c: 827: if(flag & 0x1000)
 13761  010F0C  A998               	btfss	(printf@flag+1)& (0+255),4,b
 13762  010F0E  D004               	goto	l1381
 13763                           
 13764                           ; BSR set to: 1
 13765                           ;doprnt.c: 829: prec = 6;
 13766  010F10  0E00               	movlw	0
 13767  010F12  6FA8               	movwf	(printf@prec+1)& (0+255),b
 13768  010F14  0E06               	movlw	6
 13769  010F16  6FA7               	movwf	printf@prec& (0+255),b
 13770  010F18                     l1381:
 13771                           
 13772                           ; BSR set to: 1
 13773                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13774                           
 13775                           ; BSR set to: 1
 13776  010F18  C195  FFD9         	movff	printf@ap,fsr2l
 13777  010F1C  C196  FFDA         	movff	printf@ap+1,fsr2h
 13778  010F20  CFDE F1A3          	movff	postinc2,printf@fval
 13779  010F24  CFDE F1A4          	movff	postinc2,printf@fval+1
 13780  010F28  CFDE F1A5          	movff	postinc2,printf@fval+2
 13781  010F2C  CFDE F1A6          	movff	postinc2,printf@fval+3
 13782                           
 13783                           ; BSR set to: 1
 13784  010F30  0E04               	movlw	4
 13785  010F32  2795               	addwf	printf@ap& (0+255),f,b
 13786  010F34  0E00               	movlw	0
 13787  010F36  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 13788                           
 13789                           ; BSR set to: 1
 13790                           ;doprnt.c: 831: if(fval < 0.0) {
 13791  010F38  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 13792  010F3A  D015               	goto	l1382
 13793                           
 13794                           ; BSR set to: 1
 13795                           ;doprnt.c: 832: fval = -fval;
 13796  010F3C  C1A3  F125         	movff	printf@fval,___flneg@f1
 13797  010F40  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 13798  010F44  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 13799  010F48  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 13800  010F4C  ECFB  F0BE         	call	___flneg	;wreg free
 13801  010F50  C125  F1A3         	movff	?___flneg,printf@fval
 13802  010F54  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 13803  010F58  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 13804  010F5C  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 13805                           
 13806                           ;doprnt.c: 833: flag |= 0x03;
 13807  010F60  0E03               	movlw	3
 13808  010F62  0101               	movlb	1	; () banked
 13809  010F64  1397               	iorwf	printf@flag& (0+255),f,b
 13810  010F66                     l1382:
 13811                           
 13812                           ; BSR set to: 1
 13813                           ;doprnt.c: 834: }
 13814                           ;doprnt.c: 835: exp = 0;
 13815                           
 13816                           ; BSR set to: 1
 13817  010F66  0E00               	movlw	0
 13818  010F68  6F9A               	movwf	(printf@exp+1)& (0+255),b
 13819  010F6A  0E00               	movlw	0
 13820  010F6C  6F99               	movwf	printf@exp& (0+255),b
 13821                           
 13822                           ; BSR set to: 1
 13823                           ;doprnt.c: 836: if( fval!=0) {
 13824  010F6E  51A3               	movf	printf@fval& (0+255),w,b
 13825  010F70  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 13826  010F72  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 13827  010F74  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 13828  010F76  B4D8               	btfsc	status,2,c
 13829  010F78  D084               	goto	l1387
 13830                           
 13831                           ; BSR set to: 1
 13832                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 13833  010F7A  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 13834  010F7C  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 13835  010F7E  0F82               	addlw	130
 13836  010F80  6F99               	movwf	printf@exp& (0+255),b
 13837  010F82  6B9A               	clrf	(printf@exp+1)& (0+255),b
 13838  010F84  0EFF               	movlw	255
 13839  010F86  239A               	addwfc	(printf@exp+1)& (0+255),f,b
 13840                           
 13841                           ; BSR set to: 1
 13842                           ;doprnt.c: 838: exp--;
 13843  010F88  0799               	decf	printf@exp& (0+255),f,b
 13844  010F8A  A0D8               	btfss	status,0,c
 13845  010F8C  079A               	decf	(printf@exp+1)& (0+255),f,b
 13846                           
 13847                           ; BSR set to: 1
 13848                           ;doprnt.c: 839: exp *= 3;
 13849  010F8E  C199  F117         	movff	printf@exp,___wmul@multiplier
 13850  010F92  C19A  F118         	movff	printf@exp+1,___wmul@multiplier+1
 13851  010F96  0E00               	movlw	0
 13852  010F98  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13853  010F9A  0E03               	movlw	3
 13854  010F9C  6F19               	movwf	___wmul@multiplicand& (0+255),b
 13855  010F9E  EC41  F0BF         	call	___wmul	;wreg free
 13856  010FA2  C117  F199         	movff	?___wmul,printf@exp
 13857  010FA6  C118  F19A         	movff	?___wmul+1,printf@exp+1
 13858                           
 13859                           ;doprnt.c: 840: exp /= 10;
 13860  010FAA  C199  F11D         	movff	printf@exp,___awdiv@dividend
 13861  010FAE  C19A  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 13862  010FB2  0E00               	movlw	0
 13863  010FB4  0101               	movlb	1	; () banked
 13864  010FB6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 13865  010FB8  0E0A               	movlw	10
 13866  010FBA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 13867  010FBC  EC1F  F0B8         	call	___awdiv	;wreg free
 13868  010FC0  C11D  F199         	movff	?___awdiv,printf@exp
 13869  010FC4  C11E  F19A         	movff	?___awdiv+1,printf@exp+1
 13870                           
 13871                           ;doprnt.c: 841: if(exp < 0)
 13872  010FC8  0101               	movlb	1	; () banked
 13873  010FCA  AF9A               	btfss	(printf@exp+1)& (0+255),7,b
 13874  010FCC  D003               	goto	l1384
 13875                           
 13876                           ; BSR set to: 1
 13877                           ;doprnt.c: 842: exp--;
 13878  010FCE  0799               	decf	printf@exp& (0+255),f,b
 13879  010FD0  A0D8               	btfss	status,0,c
 13880  010FD2  079A               	decf	(printf@exp+1)& (0+255),f,b
 13881  010FD4                     l1384:
 13882                           
 13883                           ; BSR set to: 1
 13884                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 13885                           
 13886                           ; BSR set to: 1
 13887  010FD4  5199               	movf	printf@exp& (0+255),w,b
 13888  010FD6  0800               	sublw	0
 13889  010FD8  EC8C  F095         	call	_scale
 13890  010FDC  C16F  F19B         	movff	?_scale,printf@tmpval
 13891  010FE0  C170  F19C         	movff	?_scale+1,printf@tmpval+1
 13892  010FE4  C171  F19D         	movff	?_scale+2,printf@tmpval+2
 13893  010FE8  C172  F19E         	movff	?_scale+3,printf@tmpval+3
 13894                           
 13895                           ;doprnt.c: 847: tmpval.integ *= fval;
 13896  010FEC  C19B  F156         	movff	printf@tmpval,___flmul@b
 13897  010FF0  C19C  F157         	movff	printf@tmpval+1,___flmul@b+1
 13898  010FF4  C19D  F158         	movff	printf@tmpval+2,___flmul@b+2
 13899  010FF8  C19E  F159         	movff	printf@tmpval+3,___flmul@b+3
 13900  010FFC  C1A3  F15A         	movff	printf@fval,___flmul@a
 13901  011000  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 13902  011004  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 13903  011008  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 13904  01100C  ECD2  F09B         	call	___flmul	;wreg free
 13905  011010  C156  F19B         	movff	?___flmul,printf@tmpval
 13906  011014  C157  F19C         	movff	?___flmul+1,printf@tmpval+1
 13907  011018  C158  F19D         	movff	?___flmul+2,printf@tmpval+2
 13908  01101C  C159  F19E         	movff	?___flmul+3,printf@tmpval+3
 13909                           
 13910                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 13911  011020  C19B  F117         	movff	printf@tmpval,___flge@ff1
 13912  011024  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 13913  011028  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 13914  01102C  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 13915  011030  0E00               	movlw	0
 13916  011032  0101               	movlb	1	; () banked
 13917  011034  6F1B               	movwf	___flge@ff2& (0+255),b
 13918  011036  0E00               	movlw	0
 13919  011038  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 13920  01103A  0E80               	movlw	128
 13921  01103C  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 13922  01103E  0E3F               	movlw	63
 13923  011040  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 13924  011042  EC21  F0B2         	call	___flge	;wreg free
 13925  011046  0101               	movlb	1	; () banked
 13926  011048  B0D8               	btfsc	status,0,c
 13927  01104A  D004               	goto	l1385
 13928                           
 13929                           ; BSR set to: 1
 13930                           ;doprnt.c: 849: exp--;
 13931  01104C  0799               	decf	printf@exp& (0+255),f,b
 13932  01104E  A0D8               	btfss	status,0,c
 13933  011050  079A               	decf	(printf@exp+1)& (0+255),f,b
 13934  011052  D017               	goto	l1387
 13935  011054                     l1385:
 13936                           
 13937                           ; BSR set to: 1
 13938                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 13939                           
 13940                           ; BSR set to: 1
 13941  011054  C19B  F117         	movff	printf@tmpval,___flge@ff1
 13942  011058  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 13943  01105C  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 13944  011060  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 13945  011064  0E00               	movlw	0
 13946  011066  6F1B               	movwf	___flge@ff2& (0+255),b
 13947  011068  0E00               	movlw	0
 13948  01106A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 13949  01106C  0E20               	movlw	32
 13950  01106E  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 13951  011070  0E41               	movlw	65
 13952  011072  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 13953  011074  EC21  F0B2         	call	___flge	;wreg free
 13954  011078  0101               	movlb	1	; () banked
 13955  01107A  A0D8               	btfss	status,0,c
 13956  01107C  D002               	goto	l1387
 13957                           
 13958                           ; BSR set to: 1
 13959                           ;doprnt.c: 851: exp++;
 13960  01107E  4B99               	infsnz	printf@exp& (0+255),f,b
 13961  011080  2B9A               	incf	(printf@exp+1)& (0+255),f,b
 13962  011082                     l1387:
 13963                           
 13964                           ; BSR set to: 1
 13965                           ;doprnt.c: 852: }
 13966                           ;doprnt.c: 1112: if(prec <= 12)
 13967                           
 13968                           ; BSR set to: 1
 13969                           
 13970                           ; BSR set to: 1
 13971                           
 13972                           ; BSR set to: 1
 13973  011082  BFA8               	btfsc	(printf@prec+1)& (0+255),7,b
 13974  011084  D006               	goto	u14130
 13975  011086  51A8               	movf	(printf@prec+1)& (0+255),w,b
 13976  011088  E121               	bnz	l11838
 13977  01108A  0E0D               	movlw	13
 13978  01108C  5DA7               	subwf	printf@prec& (0+255),w,b
 13979  01108E  B0D8               	btfsc	status,0,c
 13980  011090  D01D               	goto	l1388
 13981  011092                     u14130:
 13982                           
 13983                           ; BSR set to: 1
 13984                           ;doprnt.c: 1113: fval += fround(prec);
 13985  011092  C1A3  F129         	movff	printf@fval,___fladd@b
 13986  011096  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 13987  01109A  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 13988  01109E  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 13989  0110A2  51A7               	movf	printf@prec& (0+255),w,b
 13990  0110A4  ECC4  F0A6         	call	_fround
 13991  0110A8  C16F  F12D         	movff	?_fround,___fladd@a
 13992  0110AC  C170  F12E         	movff	?_fround+1,___fladd@a+1
 13993  0110B0  C171  F12F         	movff	?_fround+2,___fladd@a+2
 13994  0110B4  C172  F130         	movff	?_fround+3,___fladd@a+3
 13995  0110B8  EC23  F09F         	call	___fladd	;wreg free
 13996  0110BC  C129  F1A3         	movff	?___fladd,printf@fval
 13997  0110C0  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 13998  0110C4  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 13999  0110C8  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 14000  0110CC                     l1388:
 14001  0110CC                     l11838:
 14002                           
 14003                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 14004  0110CC  0101               	movlb	1	; () banked
 14005  0110CE  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14006  0110D0  D006               	goto	u14140
 14007  0110D2  519A               	movf	(printf@exp+1)& (0+255),w,b
 14008  0110D4  E122               	bnz	l11846
 14009  0110D6  0E0A               	movlw	10
 14010  0110D8  5D99               	subwf	printf@exp& (0+255),w,b
 14011  0110DA  B0D8               	btfsc	status,0,c
 14012  0110DC  D01E               	goto	u14170
 14013  0110DE                     u14140:
 14014                           
 14015                           ; BSR set to: 1
 14016  0110DE  51A3               	movf	printf@fval& (0+255),w,b
 14017  0110E0  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 14018  0110E2  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 14019  0110E4  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 14020  0110E6  B4D8               	btfsc	status,2,c
 14021  0110E8  D062               	goto	l1389
 14022                           
 14023                           ; BSR set to: 1
 14024  0110EA  C1A3  F16F         	movff	printf@fval,___fltol@f1
 14025  0110EE  C1A4  F170         	movff	printf@fval+1,___fltol@f1+1
 14026  0110F2  C1A5  F171         	movff	printf@fval+2,___fltol@f1+2
 14027  0110F6  C1A6  F172         	movff	printf@fval+3,___fltol@f1+3
 14028  0110FA  ECD9  F0B4         	call	___fltol	;wreg free
 14029  0110FE  0101               	movlb	1	; () banked
 14030  011100  516F               	movf	?___fltol& (0+255),w,b
 14031  011102  1170               	iorwf	(?___fltol+1)& (0+255),w,b
 14032  011104  1171               	iorwf	(?___fltol+2)& (0+255),w,b
 14033  011106  1172               	iorwf	(?___fltol+3)& (0+255),w,b
 14034  011108  B4D8               	btfsc	status,2,c
 14035                           
 14036                           ; BSR set to: 1
 14037  01110A  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14038  01110C  D050               	goto	l1389
 14039  01110E  519A               	movf	(printf@exp+1)& (0+255),w,b
 14040  011110  E104               	bnz	l11846
 14041  011112  0E02               	movlw	2
 14042  011114  5D99               	subwf	printf@exp& (0+255),w,b
 14043  011116  A0D8               	btfss	status,0,c
 14044  011118  D04A               	goto	l1389
 14045  01111A                     u14170:
 14046  01111A                     l11846:
 14047                           
 14048                           ; BSR set to: 1
 14049                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 14050  01111A  C19B  F117         	movff	printf@tmpval,___flge@ff1
 14051  01111E  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 14052  011122  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 14053  011126  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 14054  01112A  0E5F               	movlw	95
 14055  01112C  6F1B               	movwf	___flge@ff2& (0+255),b
 14056  01112E  0E70               	movlw	112
 14057  011130  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 14058  011132  0E89               	movlw	137
 14059  011134  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 14060  011136  0E40               	movlw	64
 14061  011138  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 14062  01113A  EC21  F0B2         	call	___flge	;wreg free
 14063  01113E  0101               	movlb	1	; () banked
 14064  011140  B0D8               	btfsc	status,0,c
 14065  011142  D002               	goto	l1392
 14066                           
 14067                           ; BSR set to: 1
 14068                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14069  011144  0EF7               	movlw	247
 14070  011146  D001               	goto	L3
 14071  011148                     l1392:
 14072                           
 14073                           ; BSR set to: 1
 14074                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14075                           
 14076                           ; BSR set to: 1
 14077  011148  0EF8               	movlw	248
 14078  01114A                     L3:
 14079  01114A  2799               	addwf	printf@exp& (0+255),f,b
 14080  01114C  0EFF               	movlw	255
 14081  01114E  239A               	addwfc	(printf@exp+1)& (0+255),f,b
 14082                           
 14083                           ; BSR set to: 1
 14084                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 14085                           
 14086                           ; BSR set to: 1
 14087  011150  5199               	movf	printf@exp& (0+255),w,b
 14088  011152  EC8C  F095         	call	_scale
 14089  011156  C16F  F19B         	movff	?_scale,printf@tmpval
 14090  01115A  C170  F19C         	movff	?_scale+1,printf@tmpval+1
 14091  01115E  C171  F19D         	movff	?_scale+2,printf@tmpval+2
 14092  011162  C172  F19E         	movff	?_scale+3,printf@tmpval+3
 14093  011166  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 14094  01116A  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 14095  01116E  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 14096  011172  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 14097  011176  C19B  F11B         	movff	printf@tmpval,__div_to_l_@f2
 14098  01117A  C19C  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 14099  01117E  C19D  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 14100  011182  C19E  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 14101  011186  ECF8  F0B0         	call	__div_to_l_	;wreg free
 14102  01118A  C117  F19F         	movff	?__div_to_l_,printf@val
 14103  01118E  C118  F1A0         	movff	?__div_to_l_+1,printf@val+1
 14104  011192  C119  F1A1         	movff	?__div_to_l_+2,printf@val+2
 14105  011196  C11A  F1A2         	movff	?__div_to_l_+3,printf@val+3
 14106                           
 14107                           ;doprnt.c: 1129: fval = 0.0;
 14108  01119A  0E00               	movlw	0
 14109  01119C  0101               	movlb	1	; () banked
 14110  01119E  6FA3               	movwf	printf@fval& (0+255),b
 14111  0111A0  0E00               	movlw	0
 14112  0111A2  6FA4               	movwf	(printf@fval+1)& (0+255),b
 14113  0111A4  0E00               	movlw	0
 14114  0111A6  6FA5               	movwf	(printf@fval+2)& (0+255),b
 14115  0111A8  0E00               	movlw	0
 14116  0111AA  6FA6               	movwf	(printf@fval+3)& (0+255),b
 14117                           
 14118                           ;doprnt.c: 1130: } else {
 14119  0111AC  D03C               	goto	l1398
 14120  0111AE                     l1389:
 14121                           
 14122                           ; BSR set to: 1
 14123                           ;doprnt.c: 1131: val = (unsigned long)fval;
 14124                           
 14125                           ; BSR set to: 1
 14126  0111AE  C1A3  F16F         	movff	printf@fval,___fltol@f1
 14127  0111B2  C1A4  F170         	movff	printf@fval+1,___fltol@f1+1
 14128  0111B6  C1A5  F171         	movff	printf@fval+2,___fltol@f1+2
 14129  0111BA  C1A6  F172         	movff	printf@fval+3,___fltol@f1+3
 14130  0111BE  ECD9  F0B4         	call	___fltol	;wreg free
 14131  0111C2  C16F  F19F         	movff	?___fltol,printf@val
 14132  0111C6  C170  F1A0         	movff	?___fltol+1,printf@val+1
 14133  0111CA  C171  F1A1         	movff	?___fltol+2,printf@val+2
 14134  0111CE  C172  F1A2         	movff	?___fltol+3,printf@val+3
 14135                           
 14136                           ;doprnt.c: 1132: fval -= (double)val;
 14137  0111D2  C1A3  F13D         	movff	printf@fval,___flsub@b
 14138  0111D6  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 14139  0111DA  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 14140  0111DE  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 14141  0111E2  C19F  F117         	movff	printf@val,___xxtofl@val
 14142  0111E6  C1A0  F118         	movff	printf@val+1,___xxtofl@val+1
 14143  0111EA  C1A1  F119         	movff	printf@val+2,___xxtofl@val+2
 14144  0111EE  C1A2  F11A         	movff	printf@val+3,___xxtofl@val+3
 14145  0111F2  0E00               	movlw	0
 14146  0111F4  EC73  F0AE         	call	___xxtofl
 14147  0111F8  C117  F141         	movff	?___xxtofl,___flsub@a
 14148  0111FC  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 14149  011200  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 14150  011204  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 14151  011208  EC5D  F0BD         	call	___flsub	;wreg free
 14152  01120C  C13D  F1A3         	movff	?___flsub,printf@fval
 14153  011210  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 14154  011214  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 14155  011218  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 14156                           
 14157                           ;doprnt.c: 1133: exp = 0;
 14158  01121C  0E00               	movlw	0
 14159  01121E  0101               	movlb	1	; () banked
 14160  011220  6F9A               	movwf	(printf@exp+1)& (0+255),b
 14161  011222  0E00               	movlw	0
 14162  011224  6F99               	movwf	printf@exp& (0+255),b
 14163  011226                     l1398:
 14164                           
 14165                           ; BSR set to: 1
 14166                           ;doprnt.c: 1134: }
 14167                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14168                           
 14169                           ; BSR set to: 1
 14170  011226  0E01               	movlw	1
 14171  011228  6FA9               	movwf	printf@c& (0+255),b
 14172  01122A                     l11866:
 14173                           
 14174                           ; BSR set to: 1
 14175  01122A  0E0A               	movlw	10
 14176  01122C  19A9               	xorwf	printf@c& (0+255),w,b
 14177  01122E  B4D8               	btfsc	status,2,c
 14178  011230  D01B               	goto	u14210
 14179                           
 14180                           ; BSR set to: 1
 14181                           ;doprnt.c: 1137: if(val < dpowers[c])
 14182                           
 14183                           ; BSR set to: 1
 14184                           
 14185                           ; BSR set to: 1
 14186  011232  51A9               	movf	printf@c& (0+255),w,b
 14187  011234  0D04               	mullw	4
 14188  011236  0E25               	movlw	low _dpowers
 14189  011238  24F3               	addwf	prodl,w,c
 14190  01123A  6EF6               	movwf	tblptrl,c
 14191  01123C  0EEC               	movlw	high _dpowers
 14192  01123E  20F4               	addwfc	prodh,w,c
 14193  011240  6EF7               	movwf	tblptrh,c
 14194  011242                     	if	1	;There are 3 active tblptr bytes
 14195  011242  6AF8               	clrf	tblptru,c
 14196  011244  0E00               	movlw	low (__mediumconst shr (0+16))
 14197  011246  22F8               	addwfc	tblptru,f,c
 14198  011248                     	endif
 14199  011248  0009               	tblrd		*+
 14200  01124A  50F5               	movf	tablat,w,c
 14201  01124C  5D9F               	subwf	printf@val& (0+255),w,b
 14202  01124E  0009               	tblrd		*+
 14203  011250  50F5               	movf	tablat,w,c
 14204  011252  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 14205  011254  0009               	tblrd		*+
 14206  011256  50F5               	movf	tablat,w,c
 14207  011258  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 14208  01125A  0009               	tblrd		*+
 14209  01125C  50F5               	movf	tablat,w,c
 14210  01125E  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 14211  011260  A0D8               	btfss	status,0,c
 14212  011262  D002               	goto	u14210
 14213                           
 14214                           ; BSR set to: 1
 14215                           
 14216                           ; BSR set to: 1
 14217                           
 14218                           ; BSR set to: 1
 14219                           ;doprnt.c: 1138: break;
 14220  011264  2BA9               	incf	printf@c& (0+255),f,b
 14221  011266  D7E1               	goto	l11866
 14222  011268                     u14210:
 14223                           
 14224                           ; BSR set to: 1
 14225                           ;doprnt.c: 1175: {
 14226                           ;doprnt.c: 1188: if(flag & 0x03)
 14227                           
 14228                           ; BSR set to: 1
 14229  011268  0E03               	movlw	3
 14230  01126A  1597               	andwf	printf@flag& (0+255),w,b
 14231  01126C  6F86               	movwf	??_printf& (0+255),b
 14232  01126E  0E00               	movlw	0
 14233  011270  1598               	andwf	(printf@flag+1)& (0+255),w,b
 14234  011272  6F87               	movwf	(??_printf+1)& (0+255),b
 14235  011274  5186               	movf	??_printf& (0+255),w,b
 14236  011276  1187               	iorwf	(??_printf+1)& (0+255),w,b
 14237  011278  B4D8               	btfsc	status,2,c
 14238  01127A  D04E               	goto	l1403
 14239                           
 14240                           ; BSR set to: 1
 14241                           ;doprnt.c: 1190: (putch('-') );
 14242  01127C  0E2D               	movlw	45
 14243  01127E  EC6C  F0C0         	call	_putch
 14244                           
 14245                           ;doprnt.c: 1195: }
 14246                           ;doprnt.c: 1196: while(c--) {
 14247  011282  D04A               	goto	l1403
 14248  011284                     
 14249                           ;doprnt.c: 1200: {
 14250                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14251  011284  C19F  F117         	movff	printf@val,___lldiv@dividend
 14252  011288  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14253  01128C  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14254  011290  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14255  011294  0101               	movlb	1	; () banked
 14256  011296  51A9               	movf	printf@c& (0+255),w,b
 14257  011298  0D04               	mullw	4
 14258  01129A  0E25               	movlw	low _dpowers
 14259  01129C  24F3               	addwf	prodl,w,c
 14260  01129E  6EF6               	movwf	tblptrl,c
 14261  0112A0  0EEC               	movlw	high _dpowers
 14262  0112A2  20F4               	addwfc	prodh,w,c
 14263  0112A4  6EF7               	movwf	tblptrh,c
 14264  0112A6                     	if	1	;There are 3 active tblptr bytes
 14265  0112A6  6AF8               	clrf	tblptru,c
 14266  0112A8  0E00               	movlw	low (__mediumconst shr (0+16))
 14267  0112AA  22F8               	addwfc	tblptru,f,c
 14268  0112AC                     	endif
 14269  0112AC  0009               	tblrd		*+
 14270  0112AE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14271  0112B2  0009               	tblrd		*+
 14272  0112B4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14273  0112B8  0009               	tblrd		*+
 14274  0112BA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14275  0112BE  000A               	tblrd		*-
 14276  0112C0  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14277  0112C4  EC62  F0B8         	call	___lldiv	;wreg free
 14278  0112C8  C117  F19B         	movff	?___lldiv,printf@tmpval
 14279  0112CC  C118  F19C         	movff	?___lldiv+1,printf@tmpval+1
 14280  0112D0  C119  F19D         	movff	?___lldiv+2,printf@tmpval+2
 14281  0112D4  C11A  F19E         	movff	?___lldiv+3,printf@tmpval+3
 14282                           
 14283                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14284  0112D8  C19B  F124         	movff	printf@tmpval,___llmod@dividend
 14285  0112DC  C19C  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 14286  0112E0  C19D  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 14287  0112E4  C19E  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 14288  0112E8  0E0A               	movlw	10
 14289  0112EA  0101               	movlb	1	; () banked
 14290  0112EC  6F28               	movwf	___llmod@divisor& (0+255),b
 14291  0112EE  0E00               	movlw	0
 14292  0112F0  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14293  0112F2  0E00               	movlw	0
 14294  0112F4  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14295  0112F6  0E00               	movlw	0
 14296  0112F8  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14297  0112FA  EC33  F0BB         	call	___llmod	;wreg free
 14298  0112FE  C124  F19B         	movff	?___llmod,printf@tmpval
 14299  011302  C125  F19C         	movff	?___llmod+1,printf@tmpval+1
 14300  011306  C126  F19D         	movff	?___llmod+2,printf@tmpval+2
 14301  01130A  C127  F19E         	movff	?___llmod+3,printf@tmpval+3
 14302                           
 14303                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 14304  01130E  0101               	movlb	1	; () banked
 14305  011310  519B               	movf	printf@tmpval& (0+255),w,b
 14306  011312  0F30               	addlw	48
 14307  011314  EC6C  F0C0         	call	_putch
 14308  011318                     l1403:
 14309  011318  0101               	movlb	1	; () banked
 14310  01131A  07A9               	decf	printf@c& (0+255),f,b
 14311  01131C  29A9               	incf	printf@c& (0+255),w,b
 14312  01131E  B4D8               	btfsc	status,2,c
 14313  011320  D008               	goto	l1406
 14314  011322  D7B0               	goto	l1404
 14315  011324                     l11890:
 14316                           
 14317                           ; BSR set to: 1
 14318                           ;doprnt.c: 1208: (putch('0') );
 14319  011324  0E30               	movlw	48
 14320  011326  EC6C  F0C0         	call	_putch
 14321                           
 14322                           ;doprnt.c: 1209: exp--;
 14323  01132A  0101               	movlb	1	; () banked
 14324  01132C  0799               	decf	printf@exp& (0+255),f,b
 14325  01132E  A0D8               	btfss	status,0,c
 14326  011330  079A               	decf	(printf@exp+1)& (0+255),f,b
 14327  011332                     l1406:
 14328                           
 14329                           ; BSR set to: 1
 14330                           
 14331                           ; BSR set to: 1
 14332  011332  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14333  011334  D005               	goto	u14240
 14334  011336  519A               	movf	(printf@exp+1)& (0+255),w,b
 14335  011338  E1F5               	bnz	l11890
 14336  01133A  0599               	decf	printf@exp& (0+255),w,b
 14337  01133C  B0D8               	btfsc	status,0,c
 14338  01133E  D7F2               	goto	l1407
 14339  011340                     u14240:
 14340                           
 14341                           ; BSR set to: 1
 14342                           ;doprnt.c: 1210: }
 14343                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 14344                           
 14345                           ; BSR set to: 1
 14346  011340  BFA8               	btfsc	(printf@prec+1)& (0+255),7,b
 14347  011342  D009               	goto	l1409
 14348  011344  51A8               	movf	(printf@prec+1)& (0+255),w,b
 14349  011346  E104               	bnz	u14250
 14350  011348  0E09               	movlw	9
 14351  01134A  5DA7               	subwf	printf@prec& (0+255),w,b
 14352  01134C  A0D8               	btfss	status,0,c
 14353  01134E  D003               	goto	l1409
 14354  011350                     u14250:
 14355                           
 14356                           ; BSR set to: 1
 14357                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14358  011350  0E08               	movlw	8
 14359  011352  6FA9               	movwf	printf@c& (0+255),b
 14360  011354  D002               	goto	l1410
 14361  011356                     l1409:
 14362                           
 14363                           ; BSR set to: 1
 14364                           ;doprnt.c: 1213: else
 14365                           ;doprnt.c: 1214: c = prec;
 14366  011356  C1A7  F1A9         	movff	printf@prec,printf@c
 14367  01135A                     l1410:
 14368                           
 14369                           ; BSR set to: 1
 14370                           ;doprnt.c: 1215: prec -= c;
 14371                           
 14372                           ; BSR set to: 1
 14373  01135A  51A9               	movf	printf@c& (0+255),w,b
 14374  01135C  5FA7               	subwf	printf@prec& (0+255),f,b
 14375  01135E  0E00               	movlw	0
 14376  011360  BFA9               	btfsc	printf@c& (0+255),7,b
 14377  011362  0EFF               	movlw	255
 14378  011364  5BA8               	subwfb	(printf@prec+1)& (0+255),f,b
 14379                           
 14380                           ; BSR set to: 1
 14381                           ;doprnt.c: 1219: if(c)
 14382  011366  51A9               	movf	printf@c& (0+255),w,b
 14383  011368  B4D8               	btfsc	status,2,c
 14384  01136A  D003               	goto	l1411
 14385                           
 14386                           ; BSR set to: 1
 14387                           ;doprnt.c: 1221: (putch('.') );
 14388  01136C  0E2E               	movlw	46
 14389  01136E  EC6C  F0C0         	call	_putch
 14390  011372                     l1411:
 14391                           
 14392                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14393  011372  0101               	movlb	1	; () banked
 14394  011374  51A9               	movf	printf@c& (0+255),w,b
 14395  011376  EC8C  F095         	call	_scale
 14396  01137A  C16F  F18C         	movff	?_scale,_printf$3861
 14397  01137E  C170  F18D         	movff	?_scale+1,_printf$3861+1
 14398  011382  C171  F18E         	movff	?_scale+2,_printf$3861+2
 14399  011386  C172  F18F         	movff	?_scale+3,_printf$3861+3
 14400                           
 14401                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14402  01138A  C1A3  F15A         	movff	printf@fval,___flmul@a
 14403  01138E  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 14404  011392  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 14405  011396  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 14406  01139A  C18C  F156         	movff	_printf$3861,___flmul@b
 14407  01139E  C18D  F157         	movff	_printf$3861+1,___flmul@b+1
 14408  0113A2  C18E  F158         	movff	_printf$3861+2,___flmul@b+2
 14409  0113A6  C18F  F159         	movff	_printf$3861+3,___flmul@b+3
 14410  0113AA  ECD2  F09B         	call	___flmul	;wreg free
 14411  0113AE  C156  F16F         	movff	?___flmul,___fltol@f1
 14412  0113B2  C157  F170         	movff	?___flmul+1,___fltol@f1+1
 14413  0113B6  C158  F171         	movff	?___flmul+2,___fltol@f1+2
 14414  0113BA  C159  F172         	movff	?___flmul+3,___fltol@f1+3
 14415  0113BE  ECD9  F0B4         	call	___fltol	;wreg free
 14416  0113C2  C16F  F19F         	movff	?___fltol,printf@val
 14417  0113C6  C170  F1A0         	movff	?___fltol+1,printf@val+1
 14418  0113CA  C171  F1A1         	movff	?___fltol+2,printf@val+2
 14419  0113CE  C172  F1A2         	movff	?___fltol+3,printf@val+3
 14420                           
 14421                           ;doprnt.c: 1228: while(c--) {
 14422  0113D2  D074               	goto	l1412
 14423  0113D4                     
 14424                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 14425  0113D4  C19F  F117         	movff	printf@val,___lldiv@dividend
 14426  0113D8  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14427  0113DC  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14428  0113E0  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14429  0113E4  0101               	movlb	1	; () banked
 14430  0113E6  51A9               	movf	printf@c& (0+255),w,b
 14431  0113E8  0D04               	mullw	4
 14432  0113EA  0E25               	movlw	low _dpowers
 14433  0113EC  24F3               	addwf	prodl,w,c
 14434  0113EE  6EF6               	movwf	tblptrl,c
 14435  0113F0  0EEC               	movlw	high _dpowers
 14436  0113F2  20F4               	addwfc	prodh,w,c
 14437  0113F4  6EF7               	movwf	tblptrh,c
 14438  0113F6                     	if	1	;There are 3 active tblptr bytes
 14439  0113F6  6AF8               	clrf	tblptru,c
 14440  0113F8  0E00               	movlw	low (__mediumconst shr (0+16))
 14441  0113FA  22F8               	addwfc	tblptru,f,c
 14442  0113FC                     	endif
 14443  0113FC  0009               	tblrd		*+
 14444  0113FE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14445  011402  0009               	tblrd		*+
 14446  011404  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14447  011408  0009               	tblrd		*+
 14448  01140A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14449  01140E  000A               	tblrd		*-
 14450  011410  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14451  011414  EC62  F0B8         	call	___lldiv	;wreg free
 14452  011418  C117  F19B         	movff	?___lldiv,printf@tmpval
 14453  01141C  C118  F19C         	movff	?___lldiv+1,printf@tmpval+1
 14454  011420  C119  F19D         	movff	?___lldiv+2,printf@tmpval+2
 14455  011424  C11A  F19E         	movff	?___lldiv+3,printf@tmpval+3
 14456                           
 14457                           ;doprnt.c: 1230: tmpval.vd %= 10;
 14458  011428  C19B  F124         	movff	printf@tmpval,___llmod@dividend
 14459  01142C  C19C  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 14460  011430  C19D  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 14461  011434  C19E  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 14462  011438  0E0A               	movlw	10
 14463  01143A  0101               	movlb	1	; () banked
 14464  01143C  6F28               	movwf	___llmod@divisor& (0+255),b
 14465  01143E  0E00               	movlw	0
 14466  011440  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14467  011442  0E00               	movlw	0
 14468  011444  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14469  011446  0E00               	movlw	0
 14470  011448  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14471  01144A  EC33  F0BB         	call	___llmod	;wreg free
 14472  01144E  C124  F19B         	movff	?___llmod,printf@tmpval
 14473  011452  C125  F19C         	movff	?___llmod+1,printf@tmpval+1
 14474  011456  C126  F19D         	movff	?___llmod+2,printf@tmpval+2
 14475  01145A  C127  F19E         	movff	?___llmod+3,printf@tmpval+3
 14476                           
 14477                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 14478  01145E  0101               	movlb	1	; () banked
 14479  011460  519B               	movf	printf@tmpval& (0+255),w,b
 14480  011462  0F30               	addlw	48
 14481  011464  EC6C  F0C0         	call	_putch
 14482                           
 14483                           ;doprnt.c: 1232: val %= dpowers[c];
 14484  011468  C19F  F124         	movff	printf@val,___llmod@dividend
 14485  01146C  C1A0  F125         	movff	printf@val+1,___llmod@dividend+1
 14486  011470  C1A1  F126         	movff	printf@val+2,___llmod@dividend+2
 14487  011474  C1A2  F127         	movff	printf@val+3,___llmod@dividend+3
 14488  011478  0101               	movlb	1	; () banked
 14489  01147A  51A9               	movf	printf@c& (0+255),w,b
 14490  01147C  0D04               	mullw	4
 14491  01147E  0E25               	movlw	low _dpowers
 14492  011480  24F3               	addwf	prodl,w,c
 14493  011482  6EF6               	movwf	tblptrl,c
 14494  011484  0EEC               	movlw	high _dpowers
 14495  011486  20F4               	addwfc	prodh,w,c
 14496  011488  6EF7               	movwf	tblptrh,c
 14497  01148A                     	if	1	;There are 3 active tblptr bytes
 14498  01148A  6AF8               	clrf	tblptru,c
 14499  01148C  0E00               	movlw	low (__mediumconst shr (0+16))
 14500  01148E  22F8               	addwfc	tblptru,f,c
 14501  011490                     	endif
 14502  011490  0009               	tblrd		*+
 14503  011492  CFF5 F128          	movff	tablat,___llmod@divisor
 14504  011496  0009               	tblrd		*+
 14505  011498  CFF5 F129          	movff	tablat,___llmod@divisor+1
 14506  01149C  0009               	tblrd		*+
 14507  01149E  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 14508  0114A2  000A               	tblrd		*-
 14509  0114A4  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 14510  0114A8  EC33  F0BB         	call	___llmod	;wreg free
 14511  0114AC  C124  F19F         	movff	?___llmod,printf@val
 14512  0114B0  C125  F1A0         	movff	?___llmod+1,printf@val+1
 14513  0114B4  C126  F1A1         	movff	?___llmod+2,printf@val+2
 14514  0114B8  C127  F1A2         	movff	?___llmod+3,printf@val+3
 14515  0114BC                     l1412:
 14516  0114BC  0101               	movlb	1	; () banked
 14517  0114BE  07A9               	decf	printf@c& (0+255),f,b
 14518  0114C0  29A9               	incf	printf@c& (0+255),w,b
 14519  0114C2  B4D8               	btfsc	status,2,c
 14520  0114C4  D008               	goto	l1415
 14521  0114C6  D786               	goto	l1413
 14522  0114C8                     
 14523                           ; BSR set to: 1
 14524                           ;doprnt.c: 1236: (putch('0') );
 14525                           
 14526                           ; BSR set to: 1
 14527  0114C8  0E30               	movlw	48
 14528  0114CA  EC6C  F0C0         	call	_putch
 14529                           
 14530                           ;doprnt.c: 1237: prec--;
 14531  0114CE  0101               	movlb	1	; () banked
 14532  0114D0  07A7               	decf	printf@prec& (0+255),f,b
 14533  0114D2  A0D8               	btfss	status,0,c
 14534  0114D4  07A8               	decf	(printf@prec+1)& (0+255),f,b
 14535  0114D6                     l1415:
 14536                           
 14537                           ; BSR set to: 1
 14538                           
 14539                           ; BSR set to: 1
 14540  0114D6  51A7               	movf	printf@prec& (0+255),w,b
 14541  0114D8  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 14542  0114DA  B4D8               	btfsc	status,2,c
 14543  0114DC  D157               	goto	u14420
 14544  0114DE  D7F4               	goto	l1416
 14545  0114E0                     l1380:
 14546                           
 14547                           ; BSR set to: 1
 14548                           ;doprnt.c: 1246: }
 14549                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 14550                           
 14551                           ; BSR set to: 1
 14552  0114E0  0EC0               	movlw	192
 14553  0114E2  1597               	andwf	printf@flag& (0+255),w,b
 14554  0114E4  6F86               	movwf	??_printf& (0+255),b
 14555  0114E6  0E00               	movlw	0
 14556  0114E8  1598               	andwf	(printf@flag+1)& (0+255),w,b
 14557  0114EA  6F87               	movwf	(??_printf+1)& (0+255),b
 14558  0114EC  5186               	movf	??_printf& (0+255),w,b
 14559  0114EE  1187               	iorwf	(??_printf+1)& (0+255),w,b
 14560  0114F0  A4D8               	btfss	status,2,c
 14561  0114F2  D01E               	goto	l1418
 14562                           
 14563                           ; BSR set to: 1
 14564                           ;doprnt.c: 1253: {
 14565                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14566  0114F4  C195  FFD9         	movff	printf@ap,fsr2l
 14567  0114F8  C196  FFDA         	movff	printf@ap+1,fsr2h
 14568  0114FC  CFDE F19F          	movff	postinc2,printf@val
 14569  011500  CFDD F1A0          	movff	postdec2,printf@val+1
 14570  011504  0E00               	movlw	0
 14571  011506  BFA0               	btfsc	(printf@val+1)& (0+255),7,b
 14572  011508  0EFF               	movlw	-1
 14573  01150A  6FA1               	movwf	(printf@val+2)& (0+255),b
 14574  01150C  6FA2               	movwf	(printf@val+3)& (0+255),b
 14575                           
 14576                           ; BSR set to: 1
 14577  01150E  0E02               	movlw	2
 14578  011510  2795               	addwf	printf@ap& (0+255),f,b
 14579  011512  0E00               	movlw	0
 14580  011514  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 14581                           
 14582                           ; BSR set to: 1
 14583                           ;doprnt.c: 1261: if((long)val < 0) {
 14584  011516  AFA2               	btfss	(printf@val+3)& (0+255),7,b
 14585  011518  D01D               	goto	l1420
 14586                           
 14587                           ; BSR set to: 1
 14588                           ;doprnt.c: 1262: flag |= 0x03;
 14589  01151A  0E03               	movlw	3
 14590  01151C  1397               	iorwf	printf@flag& (0+255),f,b
 14591                           
 14592                           ; BSR set to: 1
 14593                           ;doprnt.c: 1263: val = -val;
 14594  01151E  1FA2               	comf	(printf@val+3)& (0+255),f,b
 14595  011520  1FA1               	comf	(printf@val+2)& (0+255),f,b
 14596  011522  1FA0               	comf	(printf@val+1)& (0+255),f,b
 14597  011524  6D9F               	negf	printf@val& (0+255),b
 14598  011526  0E00               	movlw	0
 14599  011528  23A0               	addwfc	(printf@val+1)& (0+255),f,b
 14600  01152A  23A1               	addwfc	(printf@val+2)& (0+255),f,b
 14601  01152C  23A2               	addwfc	(printf@val+3)& (0+255),f,b
 14602                           
 14603                           ; BSR set to: 1
 14604                           ;doprnt.c: 1264: }
 14605                           ;doprnt.c: 1266: }
 14606  01152E  D012               	goto	l1420
 14607  011530                     l1418:
 14608                           
 14609                           ; BSR set to: 1
 14610                           ;doprnt.c: 1268: else
 14611                           ;doprnt.c: 1273: {
 14612                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 14613                           
 14614                           ; BSR set to: 1
 14615  011530  C195  FFD9         	movff	printf@ap,fsr2l
 14616  011534  C196  FFDA         	movff	printf@ap+1,fsr2h
 14617  011538  CFDE F186          	movff	postinc2,??_printf
 14618  01153C  CFDD F187          	movff	postdec2,??_printf+1
 14619  011540  C186  F19F         	movff	??_printf,printf@val
 14620  011544  C187  F1A0         	movff	??_printf+1,printf@val+1
 14621  011548  6BA1               	clrf	(printf@val+2)& (0+255),b
 14622  01154A  6BA2               	clrf	(printf@val+3)& (0+255),b
 14623                           
 14624                           ; BSR set to: 1
 14625  01154C  0E02               	movlw	2
 14626  01154E  2795               	addwf	printf@ap& (0+255),f,b
 14627  011550  0E00               	movlw	0
 14628  011552  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 14629  011554                     l1420:
 14630                           
 14631                           ; BSR set to: 1
 14632                           ;doprnt.c: 1287: }
 14633                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 14634                           
 14635                           ; BSR set to: 1
 14636  011554  51A7               	movf	printf@prec& (0+255),w,b
 14637  011556  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 14638  011558  A4D8               	btfss	status,2,c
 14639  01155A  D04B               	goto	l1422
 14640                           
 14641                           ; BSR set to: 1
 14642  01155C  519F               	movf	printf@val& (0+255),w,b
 14643  01155E  11A0               	iorwf	(printf@val+1)& (0+255),w,b
 14644  011560  11A1               	iorwf	(printf@val+2)& (0+255),w,b
 14645  011562  11A2               	iorwf	(printf@val+3)& (0+255),w,b
 14646  011564  A4D8               	btfss	status,2,c
 14647  011566  D045               	goto	l1422
 14648                           
 14649                           ; BSR set to: 1
 14650                           ;doprnt.c: 1291: prec++;
 14651  011568  4BA7               	infsnz	printf@prec& (0+255),f,b
 14652  01156A  2BA8               	incf	(printf@prec+1)& (0+255),f,b
 14653                           
 14654                           ; BSR set to: 1
 14655                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 14656  01156C  D042               	goto	l1422
 14657  01156E                     
 14658                           ; BSR set to: 1
 14659                           ;doprnt.c: 1302: case 0xC0:
 14660                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14661                           
 14662                           ; BSR set to: 1
 14663                           
 14664                           ; BSR set to: 1
 14665  01156E  0E01               	movlw	1
 14666  011570  6FA9               	movwf	printf@c& (0+255),b
 14667  011572                     l11950:
 14668                           
 14669                           ; BSR set to: 1
 14670  011572  0E0A               	movlw	10
 14671  011574  19A9               	xorwf	printf@c& (0+255),w,b
 14672  011576  B4D8               	btfsc	status,2,c
 14673  011578  D047               	goto	l1428
 14674                           
 14675                           ; BSR set to: 1
 14676                           ;doprnt.c: 1306: if(val < dpowers[c])
 14677                           
 14678                           ; BSR set to: 1
 14679                           
 14680                           ; BSR set to: 1
 14681  01157A  51A9               	movf	printf@c& (0+255),w,b
 14682  01157C  0D04               	mullw	4
 14683  01157E  0E25               	movlw	low _dpowers
 14684  011580  24F3               	addwf	prodl,w,c
 14685  011582  6EF6               	movwf	tblptrl,c
 14686  011584  0EEC               	movlw	high _dpowers
 14687  011586  20F4               	addwfc	prodh,w,c
 14688  011588  6EF7               	movwf	tblptrh,c
 14689  01158A                     	if	1	;There are 3 active tblptr bytes
 14690  01158A  6AF8               	clrf	tblptru,c
 14691  01158C  0E00               	movlw	low (__mediumconst shr (0+16))
 14692  01158E  22F8               	addwfc	tblptru,f,c
 14693  011590                     	endif
 14694  011590  0009               	tblrd		*+
 14695  011592  50F5               	movf	tablat,w,c
 14696  011594  5D9F               	subwf	printf@val& (0+255),w,b
 14697  011596  0009               	tblrd		*+
 14698  011598  50F5               	movf	tablat,w,c
 14699  01159A  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 14700  01159C  0009               	tblrd		*+
 14701  01159E  50F5               	movf	tablat,w,c
 14702  0115A0  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 14703  0115A2  0009               	tblrd		*+
 14704  0115A4  50F5               	movf	tablat,w,c
 14705  0115A6  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 14706  0115A8  A0D8               	btfss	status,0,c
 14707  0115AA  D02E               	goto	l1428
 14708                           
 14709                           ; BSR set to: 1
 14710                           
 14711                           ; BSR set to: 1
 14712                           
 14713                           ; BSR set to: 1
 14714                           ;doprnt.c: 1307: break;
 14715  0115AC  2BA9               	incf	printf@c& (0+255),f,b
 14716  0115AE  D7E1               	goto	l11950
 14717  0115B0                     
 14718                           ; BSR set to: 1
 14719                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 14720                           
 14721                           ; BSR set to: 1
 14722  0115B0  0E01               	movlw	1
 14723  0115B2  6FA9               	movwf	printf@c& (0+255),b
 14724  0115B4                     l11964:
 14725                           
 14726                           ; BSR set to: 1
 14727  0115B4  0E08               	movlw	8
 14728  0115B6  19A9               	xorwf	printf@c& (0+255),w,b
 14729  0115B8  B4D8               	btfsc	status,2,c
 14730  0115BA  D026               	goto	l1428
 14731                           
 14732                           ; BSR set to: 1
 14733                           ;doprnt.c: 1317: if(val < hexpowers[c])
 14734                           
 14735                           ; BSR set to: 1
 14736                           
 14737                           ; BSR set to: 1
 14738  0115BC  51A9               	movf	printf@c& (0+255),w,b
 14739  0115BE  0D04               	mullw	4
 14740  0115C0  0E4D               	movlw	low _hexpowers
 14741  0115C2  24F3               	addwf	prodl,w,c
 14742  0115C4  6EF6               	movwf	tblptrl,c
 14743  0115C6  0EEC               	movlw	high _hexpowers
 14744  0115C8  20F4               	addwfc	prodh,w,c
 14745  0115CA  6EF7               	movwf	tblptrh,c
 14746  0115CC                     	if	1	;There are 3 active tblptr bytes
 14747  0115CC  6AF8               	clrf	tblptru,c
 14748  0115CE  0E00               	movlw	low (__mediumconst shr (0+16))
 14749  0115D0  22F8               	addwfc	tblptru,f,c
 14750  0115D2                     	endif
 14751  0115D2  0009               	tblrd		*+
 14752  0115D4  50F5               	movf	tablat,w,c
 14753  0115D6  5D9F               	subwf	printf@val& (0+255),w,b
 14754  0115D8  0009               	tblrd		*+
 14755  0115DA  50F5               	movf	tablat,w,c
 14756  0115DC  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 14757  0115DE  0009               	tblrd		*+
 14758  0115E0  50F5               	movf	tablat,w,c
 14759  0115E2  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 14760  0115E4  0009               	tblrd		*+
 14761  0115E6  50F5               	movf	tablat,w,c
 14762  0115E8  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 14763  0115EA  A0D8               	btfss	status,0,c
 14764  0115EC  D00D               	goto	l1428
 14765                           
 14766                           ; BSR set to: 1
 14767                           
 14768                           ; BSR set to: 1
 14769                           
 14770                           ; BSR set to: 1
 14771                           ;doprnt.c: 1318: break;
 14772  0115EE  2BA9               	incf	printf@c& (0+255),f,b
 14773  0115F0  D7E1               	goto	l11964
 14774  0115F2                     l1422:
 14775                           
 14776                           ; BSR set to: 1
 14777                           
 14778                           ; BSR set to: 1
 14779  0115F2  5197               	movf	printf@flag& (0+255),w,b
 14780  0115F4  0BC0               	andlw	192
 14781                           
 14782                           ; Switch size 1, requested type "space"
 14783                           ; Number of cases is 3, Range of values is 0 to 192
 14784                           ; switch strategies available:
 14785                           ; Name         Instructions Cycles
 14786                           ; simple_byte           10     6 (average)
 14787                           ;	Chosen strategy is simple_byte
 14788  0115F6  0A00               	xorlw	0	; case 0
 14789  0115F8  B4D8               	btfsc	status,2,c
 14790  0115FA  D7B9               	goto	l1423
 14791  0115FC  0A80               	xorlw	128	; case 128
 14792  0115FE  B4D8               	btfsc	status,2,c
 14793  011600  D7D7               	goto	l1429
 14794  011602  0A40               	xorlw	64	; case 192
 14795  011604  B4D8               	btfsc	status,2,c
 14796  011606  D7B3               	goto	l1423
 14797  011608                     l1428:
 14798                           
 14799                           ; BSR set to: 1
 14800                           ;doprnt.c: 1339: if(c < prec)
 14801                           
 14802                           ; BSR set to: 1
 14803  011608  0E80               	movlw	128
 14804  01160A  BFA9               	btfsc	printf@c& (0+255),7,b
 14805  01160C  0E7F               	movlw	127
 14806  01160E  6F86               	movwf	??_printf& (0+255),b
 14807  011610  51A7               	movf	printf@prec& (0+255),w,b
 14808  011612  5DA9               	subwf	printf@c& (0+255),w,b
 14809  011614  51A8               	movf	(printf@prec+1)& (0+255),w,b
 14810  011616  0A80               	xorlw	128
 14811  011618  5986               	subwfb	??_printf& (0+255),w,b
 14812  01161A  B0D8               	btfsc	status,0,c
 14813  01161C  D003               	goto	l1433
 14814                           
 14815                           ; BSR set to: 1
 14816                           ;doprnt.c: 1340: c = prec;
 14817  01161E  C1A7  F1A9         	movff	printf@prec,printf@c
 14818  011622  D010               	goto	l1435
 14819  011624                     l1433:
 14820                           
 14821                           ; BSR set to: 1
 14822                           ;doprnt.c: 1341: else if(prec < c)
 14823                           
 14824                           ; BSR set to: 1
 14825  011624  51A8               	movf	(printf@prec+1)& (0+255),w,b
 14826  011626  0A80               	xorlw	128
 14827  011628  6F86               	movwf	??_printf& (0+255),b
 14828  01162A  51A9               	movf	printf@c& (0+255),w,b
 14829  01162C  5DA7               	subwf	printf@prec& (0+255),w,b
 14830  01162E  0E80               	movlw	128
 14831  011630  BFA9               	btfsc	printf@c& (0+255),7,b
 14832  011632  0E7F               	movlw	127
 14833  011634  5986               	subwfb	??_printf& (0+255),w,b
 14834  011636  B0D8               	btfsc	status,0,c
 14835  011638  D005               	goto	l1435
 14836                           
 14837                           ; BSR set to: 1
 14838                           ;doprnt.c: 1342: prec = c;
 14839  01163A  51A9               	movf	printf@c& (0+255),w,b
 14840  01163C  6FA7               	movwf	printf@prec& (0+255),b
 14841  01163E  6BA8               	clrf	(printf@prec+1)& (0+255),b
 14842  011640  BFA7               	btfsc	printf@prec& (0+255),7,b
 14843  011642  07A8               	decf	(printf@prec+1)& (0+255),f,b
 14844  011644                     l1435:
 14845                           
 14846                           ; BSR set to: 1
 14847                           ;doprnt.c: 1422: {
 14848                           ;doprnt.c: 1438: if(flag & 0x03)
 14849                           
 14850                           ; BSR set to: 1
 14851                           
 14852                           ; BSR set to: 1
 14853  011644  0E03               	movlw	3
 14854  011646  1597               	andwf	printf@flag& (0+255),w,b
 14855  011648  6F86               	movwf	??_printf& (0+255),b
 14856  01164A  0E00               	movlw	0
 14857  01164C  1598               	andwf	(printf@flag+1)& (0+255),w,b
 14858  01164E  6F87               	movwf	(??_printf+1)& (0+255),b
 14859  011650  5186               	movf	??_printf& (0+255),w,b
 14860  011652  1187               	iorwf	(??_printf+1)& (0+255),w,b
 14861  011654  B4D8               	btfsc	status,2,c
 14862  011656  D091               	goto	l1437
 14863                           
 14864                           ; BSR set to: 1
 14865                           ;doprnt.c: 1439: (putch('-') );
 14866  011658  0E2D               	movlw	45
 14867  01165A  EC6C  F0C0         	call	_putch
 14868                           
 14869                           ;doprnt.c: 1469: }
 14870                           ;doprnt.c: 1474: while(prec--) {
 14871  01165E  D08D               	goto	l1437
 14872  011660                     
 14873                           ;doprnt.c: 1486: case 0xC0:
 14874                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14875  011660  C1A7  F186         	movff	printf@prec,??_printf
 14876  011664  C1A8  F187         	movff	printf@prec+1,??_printf+1
 14877  011668  0101               	movlb	1	; () banked
 14878  01166A  90D8               	bcf	status,0,c
 14879  01166C  3786               	rlcf	??_printf& (0+255),f,b
 14880  01166E  3787               	rlcf	(??_printf+1)& (0+255),f,b
 14881  011670  90D8               	bcf	status,0,c
 14882  011672  3786               	rlcf	??_printf& (0+255),f,b
 14883  011674  3787               	rlcf	(??_printf+1)& (0+255),f,b
 14884  011676  0E25               	movlw	low _dpowers
 14885  011678  2586               	addwf	??_printf& (0+255),w,b
 14886  01167A  6EF6               	movwf	tblptrl,c
 14887  01167C  0EEC               	movlw	high _dpowers
 14888  01167E  2187               	addwfc	(??_printf+1)& (0+255),w,b
 14889  011680  6EF7               	movwf	tblptrh,c
 14890  011682                     	if	1	;There are 3 active tblptr bytes
 14891  011682  6AF8               	clrf	tblptru,c
 14892  011684  0E00               	movlw	low (__mediumconst shr (0+16))
 14893  011686  22F8               	addwfc	tblptru,f,c
 14894  011688                     	endif
 14895  011688  0009               	tblrd		*+
 14896  01168A  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14897  01168E  0009               	tblrd		*+
 14898  011690  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14899  011694  0009               	tblrd		*+
 14900  011696  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14901  01169A  000A               	tblrd		*-
 14902  01169C  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14903  0116A0  C19F  F117         	movff	printf@val,___lldiv@dividend
 14904  0116A4  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14905  0116A8  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14906  0116AC  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14907  0116B0  EC62  F0B8         	call	___lldiv	;wreg free
 14908  0116B4  C117  F124         	movff	?___lldiv,___llmod@dividend
 14909  0116B8  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 14910  0116BC  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 14911  0116C0  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 14912  0116C4  0E0A               	movlw	10
 14913  0116C6  0101               	movlb	1	; () banked
 14914  0116C8  6F28               	movwf	___llmod@divisor& (0+255),b
 14915  0116CA  0E00               	movlw	0
 14916  0116CC  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14917  0116CE  0E00               	movlw	0
 14918  0116D0  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14919  0116D2  0E00               	movlw	0
 14920  0116D4  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14921  0116D6  EC33  F0BB         	call	___llmod	;wreg free
 14922  0116DA  0101               	movlb	1	; () banked
 14923  0116DC  5124               	movf	?___llmod& (0+255),w,b
 14924  0116DE  0F30               	addlw	48
 14925  0116E0  6FA9               	movwf	printf@c& (0+255),b
 14926                           
 14927                           ;doprnt.c: 1491: break;
 14928  0116E2  D048               	goto	l1442
 14929  0116E4                     
 14930                           ; BSR set to: 1
 14931                           ;doprnt.c: 1499: {
 14932                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 14933                           
 14934                           ; BSR set to: 1
 14935  0116E4  C19F  F117         	movff	printf@val,___lldiv@dividend
 14936  0116E8  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14937  0116EC  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14938  0116F0  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14939  0116F4  C1A7  F186         	movff	printf@prec,??_printf
 14940  0116F8  C1A8  F187         	movff	printf@prec+1,??_printf+1
 14941  0116FC  90D8               	bcf	status,0,c
 14942  0116FE  3786               	rlcf	??_printf& (0+255),f,b
 14943  011700  3787               	rlcf	(??_printf+1)& (0+255),f,b
 14944  011702  90D8               	bcf	status,0,c
 14945  011704  3786               	rlcf	??_printf& (0+255),f,b
 14946  011706  3787               	rlcf	(??_printf+1)& (0+255),f,b
 14947  011708  0E4D               	movlw	low _hexpowers
 14948  01170A  2586               	addwf	??_printf& (0+255),w,b
 14949  01170C  6EF6               	movwf	tblptrl,c
 14950  01170E  0EEC               	movlw	high _hexpowers
 14951  011710  2187               	addwfc	(??_printf+1)& (0+255),w,b
 14952  011712  6EF7               	movwf	tblptrh,c
 14953  011714                     	if	1	;There are 3 active tblptr bytes
 14954  011714  6AF8               	clrf	tblptru,c
 14955  011716  0E00               	movlw	low (__mediumconst shr (0+16))
 14956  011718  22F8               	addwfc	tblptru,f,c
 14957  01171A                     	endif
 14958  01171A  0009               	tblrd		*+
 14959  01171C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14960  011720  0009               	tblrd		*+
 14961  011722  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14962  011726  0009               	tblrd		*+
 14963  011728  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14964  01172C  000A               	tblrd		*-
 14965  01172E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14966  011732  EC62  F0B8         	call	___lldiv	;wreg free
 14967  011736  0101               	movlb	1	; () banked
 14968  011738  5117               	movf	?___lldiv& (0+255),w,b
 14969  01173A  0B0F               	andlw	15
 14970  01173C  6F90               	movwf	printf@idx& (0+255),b
 14971                           
 14972                           ; BSR set to: 1
 14973                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 14974  01173E  5190               	movf	printf@idx& (0+255),w,b
 14975  011740  0D01               	mullw	1
 14976  011742  0EEB               	movlw	low STR_134
 14977  011744  24F3               	addwf	prodl,w,c
 14978  011746  6EF6               	movwf	tblptrl,c
 14979  011748  0EFD               	movlw	high STR_134
 14980  01174A  20F4               	addwfc	prodh,w,c
 14981  01174C  6EF7               	movwf	tblptrh,c
 14982  01174E                     	if	1	;There are 3 active tblptr bytes
 14983  01174E  6AF8               	clrf	tblptru,c
 14984  011750  0E00               	movlw	low (__mediumconst shr (0+16))
 14985  011752  22F8               	addwfc	tblptru,f,c
 14986  011754                     	endif
 14987  011754  0008               	tblrd		*
 14988  011756  CFF5 F1A9          	movff	tablat,printf@c
 14989                           
 14990                           ; BSR set to: 1
 14991                           ;doprnt.c: 1523: }
 14992                           
 14993                           ;doprnt.c: 1508: }
 14994                           ;doprnt.c: 1510: break;
 14995  01175A  D00C               	goto	l1442
 14996  01175C                     l12000:
 14997  01175C  0101               	movlb	1	; () banked
 14998  01175E  5197               	movf	printf@flag& (0+255),w,b
 14999  011760  0BC0               	andlw	192
 15000                           
 15001                           ; Switch size 1, requested type "space"
 15002                           ; Number of cases is 3, Range of values is 0 to 192
 15003                           ; switch strategies available:
 15004                           ; Name         Instructions Cycles
 15005                           ; simple_byte           10     6 (average)
 15006                           ;	Chosen strategy is simple_byte
 15007  011762  0A00               	xorlw	0	; case 0
 15008  011764  B4D8               	btfsc	status,2,c
 15009  011766  D77C               	goto	l1440
 15010  011768  0A80               	xorlw	128	; case 128
 15011  01176A  B4D8               	btfsc	status,2,c
 15012  01176C  D7BB               	goto	l1443
 15013  01176E  0A40               	xorlw	64	; case 192
 15014  011770  B4D8               	btfsc	status,2,c
 15015  011772  D776               	goto	l1440
 15016  011774                     l1442:
 15017                           
 15018                           ; BSR set to: 1
 15019                           ;doprnt.c: 1524: (putch(c) );
 15020                           
 15021                           ; BSR set to: 1
 15022  011774  51A9               	movf	printf@c& (0+255),w,b
 15023  011776  EC6C  F0C0         	call	_putch
 15024  01177A                     l1437:
 15025  01177A  0101               	movlb	1	; () banked
 15026  01177C  07A7               	decf	printf@prec& (0+255),f,b
 15027  01177E  A0D8               	btfss	status,0,c
 15028  011780  07A8               	decf	(printf@prec+1)& (0+255),f,b
 15029  011782  29A7               	incf	printf@prec& (0+255),w,b
 15030  011784  E1EB               	bnz	l12000
 15031  011786  29A8               	incf	(printf@prec+1)& (0+255),w,b
 15032  011788  A4D8               	btfss	status,2,c
 15033  01178A  D7E8               	goto	l1439
 15034  01178C                     u14420:
 15035                           
 15036                           ; BSR set to: 1
 15037                           
 15038                           ; BSR set to: 1
 15039  01178C  0101               	movlb	1	; () banked
 15040  01178E  517C               	movf	printf@f& (0+255),w,b
 15041  011790  6F86               	movwf	??_printf& (0+255),b
 15042  011792  517D               	movf	(printf@f+1)& (0+255),w,b
 15043  011794  6F87               	movwf	(??_printf+1)& (0+255),b
 15044  011796  4B7C               	infsnz	printf@f& (0+255),f,b
 15045  011798  2B7D               	incf	(printf@f+1)& (0+255),f,b
 15046  01179A  C186  FFF6         	movff	??_printf,tblptrl
 15047  01179E  C187  FFF7         	movff	??_printf+1,tblptrh
 15048  0117A2  0E00               	movlw	low (__mediumconst shr (0+16))
 15049  0117A4  6EF8               	movwf	tblptru,c
 15050  0117A6  0E0D               	movlw	(high __ramtop+-1)
 15051  0117A8  64F7               	cpfsgt	tblptrh,c
 15052  0117AA  D003               	bra	u14437
 15053  0117AC  0008               	tblrd		*
 15054  0117AE  50F5               	movf	tablat,w,c
 15055  0117B0  D005               	bra	u14430
 15056  0117B2                     u14437:
 15057  0117B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 15058  0117B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 15059  0117BA  50EF               	movf	indf0,w,c
 15060  0117BC                     u14430:
 15061  0117BC  0101               	movlb	1	; () banked
 15062  0117BE  6FA9               	movwf	printf@c& (0+255),b
 15063  0117C0  51A9               	movf	printf@c& (0+255),w,b
 15064  0117C2  B4D8               	btfsc	status,2,c
 15065  0117C4  0012               	return	
 15066  0117C6  EF59  F086         	goto	l1351
 15067  0117CA                     __end_of_printf:
 15068                           	opt stack 0
 15069                           tblptru	equ	0xFF8
 15070                           tblptrh	equ	0xFF7
 15071                           tblptrl	equ	0xFF6
 15072                           tablat	equ	0xFF5
 15073                           prodh	equ	0xFF4
 15074                           prodl	equ	0xFF3
 15075                           intcon	equ	0xFF2
 15076                           indf0	equ	0xFEF
 15077                           postinc0	equ	0xFEE
 15078                           fsr0h	equ	0xFEA
 15079                           fsr0l	equ	0xFE9
 15080                           wreg	equ	0xFE8
 15081                           indf1	equ	0xFE7
 15082                           postdec1	equ	0xFE5
 15083                           plusw1	equ	0xFE3
 15084                           fsr1h	equ	0xFE2
 15085                           fsr1l	equ	0xFE1
 15086                           indf2	equ	0xFDF
 15087                           postinc2	equ	0xFDE
 15088                           postdec2	equ	0xFDD
 15089                           plusw2	equ	0xFDB
 15090                           fsr2h	equ	0xFDA
 15091                           fsr2l	equ	0xFD9
 15092                           status	equ	0xFD8
 15093                           
 15094 ;; *************** function _scale *****************
 15095 ;; Defined at:
 15096 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;  scl             1    wreg     char 
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;  scl             1  119[BANK1 ] char 
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  4  111[BANK1 ] char 
 15103 ;; Registers used:
 15104 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15105 ;; Tracked objects:
 15106 ;;		On entry : 0/0
 15107 ;;		On exit  : 0/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15110 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15111 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15113 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15114 ;;Total ram usage:        9 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:   14
 15117 ;; This function calls:
 15118 ;;		___awdiv
 15119 ;;		___awmod
 15120 ;;		___flmul
 15121 ;; This function is called by:
 15122 ;;		_printf
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           	psect	text29
 15127  012B18                     __ptext29:
 15128                           	opt stack 0
 15129  012B18                     _scale:
 15130                           	opt stack 13
 15131                           
 15132                           ; BSR set to: 1
 15133                           ;incstack = 0
 15134                           ;scale@scl stored from wreg
 15135  012B18  0101               	movlb	1	; () banked
 15136  012B1A  6F77               	movwf	scale@scl& (0+255),b
 15137                           
 15138                           ;doprnt.c: 428: if(scl < 0) {
 15139  012B1C  0101               	movlb	1	; () banked
 15140  012B1E  AF77               	btfss	scale@scl& (0+255),7,b
 15141  012B20  D127               	goto	l1340
 15142                           
 15143                           ; BSR set to: 1
 15144                           ;doprnt.c: 429: scl = -scl;
 15145  012B22  6D77               	negf	scale@scl& (0+255),b
 15146                           
 15147                           ;doprnt.c: 430: if(scl>=110)
 15148  012B24  5177               	movf	scale@scl& (0+255),w,b
 15149  012B26  0A80               	xorlw	128
 15150  012B28  0F12               	addlw	-238
 15151  012B2A  A0D8               	btfss	status,0,c
 15152  012B2C  D0A5               	goto	l1341
 15153                           
 15154                           ; BSR set to: 1
 15155                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15156  012B2E  0E00               	movlw	0
 15157  012B30  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15158  012B32  0E0A               	movlw	10
 15159  012B34  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15160  012B36  0E00               	movlw	0
 15161  012B38  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15162  012B3A  0E64               	movlw	100
 15163  012B3C  6F19               	movwf	___awmod@divisor& (0+255),b
 15164  012B3E  5177               	movf	scale@scl& (0+255),w,b
 15165  012B40  6F17               	movwf	___awmod@dividend& (0+255),b
 15166  012B42  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15167  012B44  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15168  012B46  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15169  012B48  EC22  F0BA         	call	___awmod	;wreg free
 15170  012B4C  C117  F11D         	movff	?___awmod,___awdiv@dividend
 15171  012B50  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 15172  012B54  EC1F  F0B8         	call	___awdiv	;wreg free
 15173  012B58  0101               	movlb	1	; () banked
 15174  012B5A  90D8               	bcf	status,0,c
 15175  012B5C  371D               	rlcf	?___awdiv& (0+255),f,b
 15176  012B5E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15177  012B60  90D8               	bcf	status,0,c
 15178  012B62  371D               	rlcf	?___awdiv& (0+255),f,b
 15179  012B64  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15180  012B66  0E24               	movlw	36
 15181  012B68  271D               	addwf	?___awdiv& (0+255),f,b
 15182  012B6A  0E00               	movlw	0
 15183  012B6C  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15184  012B6E  0EF1               	movlw	low __npowers_
 15185  012B70  251D               	addwf	?___awdiv& (0+255),w,b
 15186  012B72  6EF6               	movwf	tblptrl,c
 15187  012B74  0EEB               	movlw	high __npowers_
 15188  012B76  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15189  012B78  6EF7               	movwf	tblptrh,c
 15190  012B7A                     	if	1	;There are 3 active tblptr bytes
 15191  012B7A  6AF8               	clrf	tblptru,c
 15192  012B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 15193  012B7E  22F8               	addwfc	tblptru,f,c
 15194  012B80                     	endif
 15195  012B80  0009               	tblrd		*+
 15196  012B82  CFF5 F15A          	movff	tablat,___flmul@a
 15197  012B86  0009               	tblrd		*+
 15198  012B88  CFF5 F15B          	movff	tablat,___flmul@a+1
 15199  012B8C  0009               	tblrd		*+
 15200  012B8E  CFF5 F15C          	movff	tablat,___flmul@a+2
 15201  012B92  000A               	tblrd		*-
 15202  012B94  CFF5 F15D          	movff	tablat,___flmul@a+3
 15203  012B98  0E00               	movlw	0
 15204  012B9A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15205  012B9C  0E64               	movlw	100
 15206  012B9E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15207  012BA0  5177               	movf	scale@scl& (0+255),w,b
 15208  012BA2  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15209  012BA4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15210  012BA6  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15211  012BA8  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15212  012BAA  EC1F  F0B8         	call	___awdiv	;wreg free
 15213  012BAE  0101               	movlb	1	; () banked
 15214  012BB0  90D8               	bcf	status,0,c
 15215  012BB2  371D               	rlcf	?___awdiv& (0+255),f,b
 15216  012BB4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15217  012BB6  90D8               	bcf	status,0,c
 15218  012BB8  371D               	rlcf	?___awdiv& (0+255),f,b
 15219  012BBA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15220  012BBC  0E48               	movlw	72
 15221  012BBE  271D               	addwf	?___awdiv& (0+255),f,b
 15222  012BC0  0E00               	movlw	0
 15223  012BC2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15224  012BC4  0EF1               	movlw	low __npowers_
 15225  012BC6  251D               	addwf	?___awdiv& (0+255),w,b
 15226  012BC8  6EF6               	movwf	tblptrl,c
 15227  012BCA  0EEB               	movlw	high __npowers_
 15228  012BCC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15229  012BCE  6EF7               	movwf	tblptrh,c
 15230  012BD0                     	if	1	;There are 3 active tblptr bytes
 15231  012BD0  6AF8               	clrf	tblptru,c
 15232  012BD2  0E00               	movlw	low (__mediumconst shr (0+16))
 15233  012BD4  22F8               	addwfc	tblptru,f,c
 15234  012BD6                     	endif
 15235  012BD6  0009               	tblrd		*+
 15236  012BD8  CFF5 F156          	movff	tablat,___flmul@b
 15237  012BDC  0009               	tblrd		*+
 15238  012BDE  CFF5 F157          	movff	tablat,___flmul@b+1
 15239  012BE2  0009               	tblrd		*+
 15240  012BE4  CFF5 F158          	movff	tablat,___flmul@b+2
 15241  012BE8  000A               	tblrd		*-
 15242  012BEA  CFF5 F159          	movff	tablat,___flmul@b+3
 15243  012BEE  ECD2  F09B         	call	___flmul	;wreg free
 15244  012BF2  C156  F173         	movff	?___flmul,_scale$3860
 15245  012BF6  C157  F174         	movff	?___flmul+1,_scale$3860+1
 15246  012BFA  C158  F175         	movff	?___flmul+2,_scale$3860+2
 15247  012BFE  C159  F176         	movff	?___flmul+3,_scale$3860+3
 15248                           
 15249                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15250  012C02  C173  F156         	movff	_scale$3860,___flmul@b
 15251  012C06  C174  F157         	movff	_scale$3860+1,___flmul@b+1
 15252  012C0A  C175  F158         	movff	_scale$3860+2,___flmul@b+2
 15253  012C0E  C176  F159         	movff	_scale$3860+3,___flmul@b+3
 15254  012C12  0E00               	movlw	0
 15255  012C14  0101               	movlb	1	; () banked
 15256  012C16  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15257  012C18  0E0A               	movlw	10
 15258  012C1A  6F19               	movwf	___awmod@divisor& (0+255),b
 15259  012C1C  5177               	movf	scale@scl& (0+255),w,b
 15260  012C1E  6F17               	movwf	___awmod@dividend& (0+255),b
 15261  012C20  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15262  012C22  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15263  012C24  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15264  012C26  EC22  F0BA         	call	___awmod	;wreg free
 15265  012C2A  0101               	movlb	1	; () banked
 15266  012C2C  90D8               	bcf	status,0,c
 15267  012C2E  3717               	rlcf	?___awmod& (0+255),f,b
 15268  012C30  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15269  012C32  90D8               	bcf	status,0,c
 15270  012C34  3717               	rlcf	?___awmod& (0+255),f,b
 15271  012C36  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15272  012C38  0EF1               	movlw	low __npowers_
 15273  012C3A  2517               	addwf	?___awmod& (0+255),w,b
 15274  012C3C  6EF6               	movwf	tblptrl,c
 15275  012C3E  0EEB               	movlw	high __npowers_
 15276  012C40  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15277  012C42  6EF7               	movwf	tblptrh,c
 15278  012C44                     	if	1	;There are 3 active tblptr bytes
 15279  012C44  6AF8               	clrf	tblptru,c
 15280  012C46  0E00               	movlw	low (__mediumconst shr (0+16))
 15281  012C48  22F8               	addwfc	tblptru,f,c
 15282  012C4A                     	endif
 15283  012C4A  0009               	tblrd		*+
 15284  012C4C  CFF5 F15A          	movff	tablat,___flmul@a
 15285  012C50  0009               	tblrd		*+
 15286  012C52  CFF5 F15B          	movff	tablat,___flmul@a+1
 15287  012C56  0009               	tblrd		*+
 15288  012C58  CFF5 F15C          	movff	tablat,___flmul@a+2
 15289  012C5C  000A               	tblrd		*-
 15290  012C5E  CFF5 F15D          	movff	tablat,___flmul@a+3
 15291  012C62  ECD2  F09B         	call	___flmul	;wreg free
 15292  012C66  C156  F16F         	movff	?___flmul,?_scale
 15293  012C6A  C157  F170         	movff	?___flmul+1,?_scale+1
 15294  012C6E  C158  F171         	movff	?___flmul+2,?_scale+2
 15295  012C72  C159  F172         	movff	?___flmul+3,?_scale+3
 15296  012C76  0012               	return	
 15297  012C78                     l1341:
 15298                           
 15299                           ;doprnt.c: 432: else if(scl > 10)
 15300  012C78  0101               	movlb	1	; () banked
 15301  012C7A  5177               	movf	scale@scl& (0+255),w,b
 15302  012C7C  0A80               	xorlw	128
 15303  012C7E  0F75               	addlw	-139
 15304  012C80  A0D8               	btfss	status,0,c
 15305  012C82  D05D               	goto	l1344
 15306                           
 15307                           ; BSR set to: 1
 15308                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 15309  012C84  0E00               	movlw	0
 15310  012C86  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15311  012C88  0E0A               	movlw	10
 15312  012C8A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15313  012C8C  5177               	movf	scale@scl& (0+255),w,b
 15314  012C8E  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15315  012C90  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15316  012C92  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15317  012C94  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15318  012C96  EC1F  F0B8         	call	___awdiv	;wreg free
 15319  012C9A  0101               	movlb	1	; () banked
 15320  012C9C  90D8               	bcf	status,0,c
 15321  012C9E  371D               	rlcf	?___awdiv& (0+255),f,b
 15322  012CA0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15323  012CA2  90D8               	bcf	status,0,c
 15324  012CA4  371D               	rlcf	?___awdiv& (0+255),f,b
 15325  012CA6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15326  012CA8  0E24               	movlw	36
 15327  012CAA  271D               	addwf	?___awdiv& (0+255),f,b
 15328  012CAC  0E00               	movlw	0
 15329  012CAE  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15330  012CB0  0EF1               	movlw	low __npowers_
 15331  012CB2  251D               	addwf	?___awdiv& (0+255),w,b
 15332  012CB4  6EF6               	movwf	tblptrl,c
 15333  012CB6  0EEB               	movlw	high __npowers_
 15334  012CB8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15335  012CBA  6EF7               	movwf	tblptrh,c
 15336  012CBC                     	if	1	;There are 3 active tblptr bytes
 15337  012CBC  6AF8               	clrf	tblptru,c
 15338  012CBE  0E00               	movlw	low (__mediumconst shr (0+16))
 15339  012CC0  22F8               	addwfc	tblptru,f,c
 15340  012CC2                     	endif
 15341  012CC2  0009               	tblrd		*+
 15342  012CC4  CFF5 F156          	movff	tablat,___flmul@b
 15343  012CC8  0009               	tblrd		*+
 15344  012CCA  CFF5 F157          	movff	tablat,___flmul@b+1
 15345  012CCE  0009               	tblrd		*+
 15346  012CD0  CFF5 F158          	movff	tablat,___flmul@b+2
 15347  012CD4  000A               	tblrd		*-
 15348  012CD6  CFF5 F159          	movff	tablat,___flmul@b+3
 15349  012CDA  0E00               	movlw	0
 15350  012CDC  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15351  012CDE  0E0A               	movlw	10
 15352  012CE0  6F19               	movwf	___awmod@divisor& (0+255),b
 15353  012CE2  5177               	movf	scale@scl& (0+255),w,b
 15354  012CE4  6F17               	movwf	___awmod@dividend& (0+255),b
 15355  012CE6  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15356  012CE8  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15357  012CEA  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15358  012CEC  EC22  F0BA         	call	___awmod	;wreg free
 15359  012CF0  0101               	movlb	1	; () banked
 15360  012CF2  90D8               	bcf	status,0,c
 15361  012CF4  3717               	rlcf	?___awmod& (0+255),f,b
 15362  012CF6  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15363  012CF8  90D8               	bcf	status,0,c
 15364  012CFA  3717               	rlcf	?___awmod& (0+255),f,b
 15365  012CFC  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15366  012CFE  0EF1               	movlw	low __npowers_
 15367  012D00  2517               	addwf	?___awmod& (0+255),w,b
 15368  012D02  6EF6               	movwf	tblptrl,c
 15369  012D04  0EEB               	movlw	high __npowers_
 15370  012D06  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15371  012D08  6EF7               	movwf	tblptrh,c
 15372  012D0A                     	if	1	;There are 3 active tblptr bytes
 15373  012D0A  6AF8               	clrf	tblptru,c
 15374  012D0C  0E00               	movlw	low (__mediumconst shr (0+16))
 15375  012D0E  22F8               	addwfc	tblptru,f,c
 15376  012D10                     	endif
 15377  012D10  0009               	tblrd		*+
 15378  012D12  CFF5 F15A          	movff	tablat,___flmul@a
 15379  012D16  0009               	tblrd		*+
 15380  012D18  CFF5 F15B          	movff	tablat,___flmul@a+1
 15381  012D1C  0009               	tblrd		*+
 15382  012D1E  CFF5 F15C          	movff	tablat,___flmul@a+2
 15383  012D22  000A               	tblrd		*-
 15384  012D24  CFF5 F15D          	movff	tablat,___flmul@a+3
 15385  012D28  ECD2  F09B         	call	___flmul	;wreg free
 15386  012D2C  C156  F16F         	movff	?___flmul,?_scale
 15387  012D30  C157  F170         	movff	?___flmul+1,?_scale+1
 15388  012D34  C158  F171         	movff	?___flmul+2,?_scale+2
 15389  012D38  C159  F172         	movff	?___flmul+3,?_scale+3
 15390  012D3C  0012               	return	
 15391  012D3E                     l1344:
 15392                           
 15393                           ;doprnt.c: 434: return _npowers_[scl];
 15394  012D3E  0101               	movlb	1	; () banked
 15395  012D40  5177               	movf	scale@scl& (0+255),w,b
 15396  012D42  0D04               	mullw	4
 15397  012D44  0EF1               	movlw	low __npowers_
 15398  012D46  24F3               	addwf	prodl,w,c
 15399  012D48  6EF6               	movwf	tblptrl,c
 15400  012D4A  0EEB               	movlw	high __npowers_
 15401  012D4C  20F4               	addwfc	prodh,w,c
 15402  012D4E  6EF7               	movwf	tblptrh,c
 15403  012D50                     	if	1	;There are 3 active tblptr bytes
 15404  012D50  6AF8               	clrf	tblptru,c
 15405  012D52  0E00               	movlw	low (__mediumconst shr (0+16))
 15406  012D54  22F8               	addwfc	tblptru,f,c
 15407  012D56                     	endif
 15408  012D56  0009               	tblrd		*+
 15409  012D58  CFF5 F16F          	movff	tablat,?_scale
 15410  012D5C  0009               	tblrd		*+
 15411  012D5E  CFF5 F170          	movff	tablat,?_scale+1
 15412  012D62  0009               	tblrd		*+
 15413  012D64  CFF5 F171          	movff	tablat,?_scale+2
 15414  012D68  000A               	tblrd		*-
 15415  012D6A  CFF5 F172          	movff	tablat,?_scale+3
 15416                           
 15417                           ; BSR set to: 1
 15418  012D6E  0012               	return	
 15419  012D70                     l1340:
 15420                           
 15421                           ; BSR set to: 1
 15422                           ;doprnt.c: 435: }
 15423                           ;doprnt.c: 436: if(scl>=110)
 15424                           
 15425                           ; BSR set to: 1
 15426  012D70  5177               	movf	scale@scl& (0+255),w,b
 15427  012D72  0A80               	xorlw	128
 15428  012D74  0F12               	addlw	-238
 15429  012D76  A0D8               	btfss	status,0,c
 15430  012D78  D0A5               	goto	l1345
 15431                           
 15432                           ; BSR set to: 1
 15433                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15434  012D7A  0E00               	movlw	0
 15435  012D7C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15436  012D7E  0E0A               	movlw	10
 15437  012D80  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15438  012D82  0E00               	movlw	0
 15439  012D84  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15440  012D86  0E64               	movlw	100
 15441  012D88  6F19               	movwf	___awmod@divisor& (0+255),b
 15442  012D8A  5177               	movf	scale@scl& (0+255),w,b
 15443  012D8C  6F17               	movwf	___awmod@dividend& (0+255),b
 15444  012D8E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15445  012D90  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15446  012D92  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15447  012D94  EC22  F0BA         	call	___awmod	;wreg free
 15448  012D98  C117  F11D         	movff	?___awmod,___awdiv@dividend
 15449  012D9C  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 15450  012DA0  EC1F  F0B8         	call	___awdiv	;wreg free
 15451  012DA4  0101               	movlb	1	; () banked
 15452  012DA6  90D8               	bcf	status,0,c
 15453  012DA8  371D               	rlcf	?___awdiv& (0+255),f,b
 15454  012DAA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15455  012DAC  90D8               	bcf	status,0,c
 15456  012DAE  371D               	rlcf	?___awdiv& (0+255),f,b
 15457  012DB0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15458  012DB2  0E24               	movlw	36
 15459  012DB4  271D               	addwf	?___awdiv& (0+255),f,b
 15460  012DB6  0E00               	movlw	0
 15461  012DB8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15462  012DBA  0EBD               	movlw	low __powers_
 15463  012DBC  251D               	addwf	?___awdiv& (0+255),w,b
 15464  012DBE  6EF6               	movwf	tblptrl,c
 15465  012DC0  0EEB               	movlw	high __powers_
 15466  012DC2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15467  012DC4  6EF7               	movwf	tblptrh,c
 15468  012DC6                     	if	1	;There are 3 active tblptr bytes
 15469  012DC6  6AF8               	clrf	tblptru,c
 15470  012DC8  0E00               	movlw	low (__mediumconst shr (0+16))
 15471  012DCA  22F8               	addwfc	tblptru,f,c
 15472  012DCC                     	endif
 15473  012DCC  0009               	tblrd		*+
 15474  012DCE  CFF5 F15A          	movff	tablat,___flmul@a
 15475  012DD2  0009               	tblrd		*+
 15476  012DD4  CFF5 F15B          	movff	tablat,___flmul@a+1
 15477  012DD8  0009               	tblrd		*+
 15478  012DDA  CFF5 F15C          	movff	tablat,___flmul@a+2
 15479  012DDE  000A               	tblrd		*-
 15480  012DE0  CFF5 F15D          	movff	tablat,___flmul@a+3
 15481  012DE4  0E00               	movlw	0
 15482  012DE6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15483  012DE8  0E64               	movlw	100
 15484  012DEA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15485  012DEC  5177               	movf	scale@scl& (0+255),w,b
 15486  012DEE  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15487  012DF0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15488  012DF2  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15489  012DF4  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15490  012DF6  EC1F  F0B8         	call	___awdiv	;wreg free
 15491  012DFA  0101               	movlb	1	; () banked
 15492  012DFC  90D8               	bcf	status,0,c
 15493  012DFE  371D               	rlcf	?___awdiv& (0+255),f,b
 15494  012E00  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15495  012E02  90D8               	bcf	status,0,c
 15496  012E04  371D               	rlcf	?___awdiv& (0+255),f,b
 15497  012E06  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15498  012E08  0E48               	movlw	72
 15499  012E0A  271D               	addwf	?___awdiv& (0+255),f,b
 15500  012E0C  0E00               	movlw	0
 15501  012E0E  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15502  012E10  0EBD               	movlw	low __powers_
 15503  012E12  251D               	addwf	?___awdiv& (0+255),w,b
 15504  012E14  6EF6               	movwf	tblptrl,c
 15505  012E16  0EEB               	movlw	high __powers_
 15506  012E18  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15507  012E1A  6EF7               	movwf	tblptrh,c
 15508  012E1C                     	if	1	;There are 3 active tblptr bytes
 15509  012E1C  6AF8               	clrf	tblptru,c
 15510  012E1E  0E00               	movlw	low (__mediumconst shr (0+16))
 15511  012E20  22F8               	addwfc	tblptru,f,c
 15512  012E22                     	endif
 15513  012E22  0009               	tblrd		*+
 15514  012E24  CFF5 F156          	movff	tablat,___flmul@b
 15515  012E28  0009               	tblrd		*+
 15516  012E2A  CFF5 F157          	movff	tablat,___flmul@b+1
 15517  012E2E  0009               	tblrd		*+
 15518  012E30  CFF5 F158          	movff	tablat,___flmul@b+2
 15519  012E34  000A               	tblrd		*-
 15520  012E36  CFF5 F159          	movff	tablat,___flmul@b+3
 15521  012E3A  ECD2  F09B         	call	___flmul	;wreg free
 15522  012E3E  C156  F173         	movff	?___flmul,_scale$3860
 15523  012E42  C157  F174         	movff	?___flmul+1,_scale$3860+1
 15524  012E46  C158  F175         	movff	?___flmul+2,_scale$3860+2
 15525  012E4A  C159  F176         	movff	?___flmul+3,_scale$3860+3
 15526                           
 15527                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15528  012E4E  C173  F156         	movff	_scale$3860,___flmul@b
 15529  012E52  C174  F157         	movff	_scale$3860+1,___flmul@b+1
 15530  012E56  C175  F158         	movff	_scale$3860+2,___flmul@b+2
 15531  012E5A  C176  F159         	movff	_scale$3860+3,___flmul@b+3
 15532  012E5E  0E00               	movlw	0
 15533  012E60  0101               	movlb	1	; () banked
 15534  012E62  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15535  012E64  0E0A               	movlw	10
 15536  012E66  6F19               	movwf	___awmod@divisor& (0+255),b
 15537  012E68  5177               	movf	scale@scl& (0+255),w,b
 15538  012E6A  6F17               	movwf	___awmod@dividend& (0+255),b
 15539  012E6C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15540  012E6E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15541  012E70  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15542  012E72  EC22  F0BA         	call	___awmod	;wreg free
 15543  012E76  0101               	movlb	1	; () banked
 15544  012E78  90D8               	bcf	status,0,c
 15545  012E7A  3717               	rlcf	?___awmod& (0+255),f,b
 15546  012E7C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15547  012E7E  90D8               	bcf	status,0,c
 15548  012E80  3717               	rlcf	?___awmod& (0+255),f,b
 15549  012E82  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15550  012E84  0EBD               	movlw	low __powers_
 15551  012E86  2517               	addwf	?___awmod& (0+255),w,b
 15552  012E88  6EF6               	movwf	tblptrl,c
 15553  012E8A  0EEB               	movlw	high __powers_
 15554  012E8C  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15555  012E8E  6EF7               	movwf	tblptrh,c
 15556  012E90                     	if	1	;There are 3 active tblptr bytes
 15557  012E90  6AF8               	clrf	tblptru,c
 15558  012E92  0E00               	movlw	low (__mediumconst shr (0+16))
 15559  012E94  22F8               	addwfc	tblptru,f,c
 15560  012E96                     	endif
 15561  012E96  0009               	tblrd		*+
 15562  012E98  CFF5 F15A          	movff	tablat,___flmul@a
 15563  012E9C  0009               	tblrd		*+
 15564  012E9E  CFF5 F15B          	movff	tablat,___flmul@a+1
 15565  012EA2  0009               	tblrd		*+
 15566  012EA4  CFF5 F15C          	movff	tablat,___flmul@a+2
 15567  012EA8  000A               	tblrd		*-
 15568  012EAA  CFF5 F15D          	movff	tablat,___flmul@a+3
 15569  012EAE  ECD2  F09B         	call	___flmul	;wreg free
 15570  012EB2  C156  F16F         	movff	?___flmul,?_scale
 15571  012EB6  C157  F170         	movff	?___flmul+1,?_scale+1
 15572  012EBA  C158  F171         	movff	?___flmul+2,?_scale+2
 15573  012EBE  C159  F172         	movff	?___flmul+3,?_scale+3
 15574  012EC2  0012               	return	
 15575  012EC4                     l1345:
 15576                           
 15577                           ;doprnt.c: 438: else if(scl > 10)
 15578  012EC4  0101               	movlb	1	; () banked
 15579  012EC6  5177               	movf	scale@scl& (0+255),w,b
 15580  012EC8  0A80               	xorlw	128
 15581  012ECA  0F75               	addlw	-139
 15582  012ECC  A0D8               	btfss	status,0,c
 15583  012ECE  D05D               	goto	l1347
 15584                           
 15585                           ; BSR set to: 1
 15586                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15587  012ED0  0E00               	movlw	0
 15588  012ED2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15589  012ED4  0E0A               	movlw	10
 15590  012ED6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15591  012ED8  5177               	movf	scale@scl& (0+255),w,b
 15592  012EDA  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15593  012EDC  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15594  012EDE  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15595  012EE0  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15596  012EE2  EC1F  F0B8         	call	___awdiv	;wreg free
 15597  012EE6  0101               	movlb	1	; () banked
 15598  012EE8  90D8               	bcf	status,0,c
 15599  012EEA  371D               	rlcf	?___awdiv& (0+255),f,b
 15600  012EEC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15601  012EEE  90D8               	bcf	status,0,c
 15602  012EF0  371D               	rlcf	?___awdiv& (0+255),f,b
 15603  012EF2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15604  012EF4  0E24               	movlw	36
 15605  012EF6  271D               	addwf	?___awdiv& (0+255),f,b
 15606  012EF8  0E00               	movlw	0
 15607  012EFA  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15608  012EFC  0EBD               	movlw	low __powers_
 15609  012EFE  251D               	addwf	?___awdiv& (0+255),w,b
 15610  012F00  6EF6               	movwf	tblptrl,c
 15611  012F02  0EEB               	movlw	high __powers_
 15612  012F04  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15613  012F06  6EF7               	movwf	tblptrh,c
 15614  012F08                     	if	1	;There are 3 active tblptr bytes
 15615  012F08  6AF8               	clrf	tblptru,c
 15616  012F0A  0E00               	movlw	low (__mediumconst shr (0+16))
 15617  012F0C  22F8               	addwfc	tblptru,f,c
 15618  012F0E                     	endif
 15619  012F0E  0009               	tblrd		*+
 15620  012F10  CFF5 F156          	movff	tablat,___flmul@b
 15621  012F14  0009               	tblrd		*+
 15622  012F16  CFF5 F157          	movff	tablat,___flmul@b+1
 15623  012F1A  0009               	tblrd		*+
 15624  012F1C  CFF5 F158          	movff	tablat,___flmul@b+2
 15625  012F20  000A               	tblrd		*-
 15626  012F22  CFF5 F159          	movff	tablat,___flmul@b+3
 15627  012F26  0E00               	movlw	0
 15628  012F28  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15629  012F2A  0E0A               	movlw	10
 15630  012F2C  6F19               	movwf	___awmod@divisor& (0+255),b
 15631  012F2E  5177               	movf	scale@scl& (0+255),w,b
 15632  012F30  6F17               	movwf	___awmod@dividend& (0+255),b
 15633  012F32  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15634  012F34  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15635  012F36  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15636  012F38  EC22  F0BA         	call	___awmod	;wreg free
 15637  012F3C  0101               	movlb	1	; () banked
 15638  012F3E  90D8               	bcf	status,0,c
 15639  012F40  3717               	rlcf	?___awmod& (0+255),f,b
 15640  012F42  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15641  012F44  90D8               	bcf	status,0,c
 15642  012F46  3717               	rlcf	?___awmod& (0+255),f,b
 15643  012F48  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15644  012F4A  0EBD               	movlw	low __powers_
 15645  012F4C  2517               	addwf	?___awmod& (0+255),w,b
 15646  012F4E  6EF6               	movwf	tblptrl,c
 15647  012F50  0EEB               	movlw	high __powers_
 15648  012F52  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15649  012F54  6EF7               	movwf	tblptrh,c
 15650  012F56                     	if	1	;There are 3 active tblptr bytes
 15651  012F56  6AF8               	clrf	tblptru,c
 15652  012F58  0E00               	movlw	low (__mediumconst shr (0+16))
 15653  012F5A  22F8               	addwfc	tblptru,f,c
 15654  012F5C                     	endif
 15655  012F5C  0009               	tblrd		*+
 15656  012F5E  CFF5 F15A          	movff	tablat,___flmul@a
 15657  012F62  0009               	tblrd		*+
 15658  012F64  CFF5 F15B          	movff	tablat,___flmul@a+1
 15659  012F68  0009               	tblrd		*+
 15660  012F6A  CFF5 F15C          	movff	tablat,___flmul@a+2
 15661  012F6E  000A               	tblrd		*-
 15662  012F70  CFF5 F15D          	movff	tablat,___flmul@a+3
 15663  012F74  ECD2  F09B         	call	___flmul	;wreg free
 15664  012F78  C156  F16F         	movff	?___flmul,?_scale
 15665  012F7C  C157  F170         	movff	?___flmul+1,?_scale+1
 15666  012F80  C158  F171         	movff	?___flmul+2,?_scale+2
 15667  012F84  C159  F172         	movff	?___flmul+3,?_scale+3
 15668  012F88  0012               	return	
 15669  012F8A                     l1347:
 15670                           
 15671                           ;doprnt.c: 440: return _powers_[scl];
 15672  012F8A  0101               	movlb	1	; () banked
 15673  012F8C  5177               	movf	scale@scl& (0+255),w,b
 15674  012F8E  0D04               	mullw	4
 15675  012F90  0EBD               	movlw	low __powers_
 15676  012F92  24F3               	addwf	prodl,w,c
 15677  012F94  6EF6               	movwf	tblptrl,c
 15678  012F96  0EEB               	movlw	high __powers_
 15679  012F98  20F4               	addwfc	prodh,w,c
 15680  012F9A  6EF7               	movwf	tblptrh,c
 15681  012F9C                     	if	1	;There are 3 active tblptr bytes
 15682  012F9C  6AF8               	clrf	tblptru,c
 15683  012F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 15684  012FA0  22F8               	addwfc	tblptru,f,c
 15685  012FA2                     	endif
 15686  012FA2  0009               	tblrd		*+
 15687  012FA4  CFF5 F16F          	movff	tablat,?_scale
 15688  012FA8  0009               	tblrd		*+
 15689  012FAA  CFF5 F170          	movff	tablat,?_scale+1
 15690  012FAE  0009               	tblrd		*+
 15691  012FB0  CFF5 F171          	movff	tablat,?_scale+2
 15692  012FB4  000A               	tblrd		*-
 15693  012FB6  CFF5 F172          	movff	tablat,?_scale+3
 15694  012FBA  0012               	return	
 15695  012FBC                     __end_of_scale:
 15696                           	opt stack 0
 15697                           tblptru	equ	0xFF8
 15698                           tblptrh	equ	0xFF7
 15699                           tblptrl	equ	0xFF6
 15700                           tablat	equ	0xFF5
 15701                           prodh	equ	0xFF4
 15702                           prodl	equ	0xFF3
 15703                           intcon	equ	0xFF2
 15704                           indf0	equ	0xFEF
 15705                           postinc0	equ	0xFEE
 15706                           fsr0h	equ	0xFEA
 15707                           fsr0l	equ	0xFE9
 15708                           wreg	equ	0xFE8
 15709                           indf1	equ	0xFE7
 15710                           postdec1	equ	0xFE5
 15711                           plusw1	equ	0xFE3
 15712                           fsr1h	equ	0xFE2
 15713                           fsr1l	equ	0xFE1
 15714                           indf2	equ	0xFDF
 15715                           postinc2	equ	0xFDE
 15716                           postdec2	equ	0xFDD
 15717                           plusw2	equ	0xFDB
 15718                           fsr2h	equ	0xFDA
 15719                           fsr2l	equ	0xFD9
 15720                           status	equ	0xFD8
 15721                           
 15722 ;; *************** function _putch *****************
 15723 ;; Defined at:
 15724 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 15725 ;; Parameters:    Size  Location     Type
 15726 ;;  txData          1    wreg     unsigned char 
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;  txData          1   24[BANK1 ] unsigned char 
 15729 ;; Return value:  Size  Location     Type
 15730 ;;                  1    wreg      void 
 15731 ;; Registers used:
 15732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15733 ;; Tracked objects:
 15734 ;;		On entry : 0/0
 15735 ;;		On exit  : 0/0
 15736 ;;		Unchanged: 0/0
 15737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15739 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15741 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15742 ;;Total ram usage:        1 bytes
 15743 ;; Hardware stack levels used:    1
 15744 ;; Hardware stack levels required when called:   14
 15745 ;; This function calls:
 15746 ;;		_EUSART2_Write
 15747 ;; This function is called by:
 15748 ;;		_printf
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           	psect	text30
 15753  0180D8                     __ptext30:
 15754                           	opt stack 0
 15755  0180D8                     _putch:
 15756                           	opt stack 13
 15757                           
 15758                           ;incstack = 0
 15759                           ;putch@txData stored from wreg
 15760  0180D8  0101               	movlb	1	; () banked
 15761  0180DA  6F18               	movwf	putch@txData& (0+255),b
 15762                           
 15763                           ;eusart2.c: 195: EUSART2_Write(txData);
 15764  0180DC  0101               	movlb	1	; () banked
 15765  0180DE  5118               	movf	putch@txData& (0+255),w,b
 15766  0180E0  ECEE  F0BC         	call	_EUSART2_Write
 15767  0180E4  0012               	return		;funcret
 15768  0180E6                     __end_of_putch:
 15769                           	opt stack 0
 15770                           tblptru	equ	0xFF8
 15771                           tblptrh	equ	0xFF7
 15772                           tblptrl	equ	0xFF6
 15773                           tablat	equ	0xFF5
 15774                           prodh	equ	0xFF4
 15775                           prodl	equ	0xFF3
 15776                           intcon	equ	0xFF2
 15777                           indf0	equ	0xFEF
 15778                           postinc0	equ	0xFEE
 15779                           fsr0h	equ	0xFEA
 15780                           fsr0l	equ	0xFE9
 15781                           wreg	equ	0xFE8
 15782                           indf1	equ	0xFE7
 15783                           postdec1	equ	0xFE5
 15784                           plusw1	equ	0xFE3
 15785                           fsr1h	equ	0xFE2
 15786                           fsr1l	equ	0xFE1
 15787                           indf2	equ	0xFDF
 15788                           postinc2	equ	0xFDE
 15789                           postdec2	equ	0xFDD
 15790                           plusw2	equ	0xFDB
 15791                           fsr2h	equ	0xFDA
 15792                           fsr2l	equ	0xFD9
 15793                           status	equ	0xFD8
 15794                           
 15795 ;; *************** function _EUSART2_Write *****************
 15796 ;; Defined at:
 15797 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 15798 ;; Parameters:    Size  Location     Type
 15799 ;;  txData          1    wreg     unsigned char 
 15800 ;; Auto vars:     Size  Location     Type
 15801 ;;  txData          1   23[BANK1 ] unsigned char 
 15802 ;; Return value:  Size  Location     Type
 15803 ;;                  1    wreg      void 
 15804 ;; Registers used:
 15805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15806 ;; Tracked objects:
 15807 ;;		On entry : 0/0
 15808 ;;		On exit  : 0/0
 15809 ;;		Unchanged: 0/0
 15810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15812 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15814 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15815 ;;Total ram usage:        1 bytes
 15816 ;; Hardware stack levels used:    1
 15817 ;; Hardware stack levels required when called:   13
 15818 ;; This function calls:
 15819 ;;		Nothing
 15820 ;; This function is called by:
 15821 ;;		_putch
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825                           	psect	text31
 15826  0179DC                     __ptext31:
 15827                           	opt stack 0
 15828  0179DC                     _EUSART2_Write:
 15829                           	opt stack 13
 15830                           
 15831                           ;incstack = 0
 15832                           ;EUSART2_Write@txData stored from wreg
 15833  0179DC  0101               	movlb	1	; () banked
 15834  0179DE  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 15835                           
 15836                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 15837  0179E0  D002               	goto	l388
 15838  0179E2                     l389:
 15839                           
 15840                           ; BSR set to: 1
 15841  0179E2  0004               	clrwdt		;# 
 15842                           
 15843                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 15844  0179E4  827E               	bsf	3966,1,c	;volatile
 15845  0179E6                     l388:
 15846  0179E6  0101               	movlb	1	; () banked
 15847  0179E8  51E0               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15848  0179EA  B4D8               	btfsc	status,2,c
 15849  0179EC  D7FA               	goto	l389
 15850                           
 15851                           ; BSR set to: 1
 15852                           ;eusart2.c: 167: }
 15853                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 15854  0179EE  927E               	bcf	3966,1,c	;volatile
 15855                           
 15856                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 15857  0179F0  010E               	movlb	14	; () banked
 15858  0179F2  BD2C               	btfsc	44,6,b	;volatile
 15859  0179F4  D003               	goto	l391
 15860                           
 15861                           ; BSR set to: 14
 15862                           ;eusart2.c: 172: {
 15863                           ;eusart2.c: 173: TX2REG = txData;
 15864  0179F6  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 15865                           
 15866                           ;eusart2.c: 174: }
 15867  0179FA  D013               	goto	l392
 15868  0179FC                     l391:
 15869                           
 15870                           ; BSR set to: 14
 15871                           ;eusart2.c: 175: else
 15872                           ;eusart2.c: 176: {
 15873                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 15874  0179FC  9D2C               	bcf	44,6,b	;volatile
 15875                           
 15876                           ; BSR set to: 14
 15877                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 15878  0179FE  0101               	movlb	1	; () banked
 15879  017A00  51E2               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 15880  017A02  0D01               	mullw	1
 15881  017A04  0E00               	movlw	low _eusart2TxBuffer
 15882  017A06  24F3               	addwf	prodl,w,c
 15883  017A08  6ED9               	movwf	fsr2l,c
 15884  017A0A  0E03               	movlw	high _eusart2TxBuffer
 15885  017A0C  20F4               	addwfc	prodh,w,c
 15886  017A0E  6EDA               	movwf	fsr2h,c
 15887  017A10  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 15888                           
 15889                           ; BSR set to: 1
 15890  017A14  2BE2               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 15891                           
 15892                           ; BSR set to: 1
 15893                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 15894  017A16  0E7F               	movlw	127
 15895  017A18  65E2               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 15896  017A1A  D002               	goto	l393
 15897                           
 15898                           ; BSR set to: 1
 15899                           ;eusart2.c: 180: {
 15900                           ;eusart2.c: 181: eusart2TxHead = 0;
 15901  017A1C  0E00               	movlw	0
 15902  017A1E  6FE2               	movwf	_eusart2TxHead& (0+255),b	;volatile
 15903  017A20                     l393:
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;eusart2.c: 182: }
 15907                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 15908                           
 15909                           ; BSR set to: 1
 15910  017A20  07E0               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 15911  017A22                     l392:
 15912                           
 15913                           ;eusart2.c: 184: }
 15914                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 15915                           
 15916                           ; BSR set to: 1
 15917  017A22  010E               	movlb	14	; () banked
 15918  017A24  8D2C               	bsf	44,6,b	;volatile
 15919                           
 15920                           ; BSR set to: 14
 15921  017A26  0012               	return		;funcret
 15922  017A28                     __end_of_EUSART2_Write:
 15923                           	opt stack 0
 15924                           tblptru	equ	0xFF8
 15925                           tblptrh	equ	0xFF7
 15926                           tblptrl	equ	0xFF6
 15927                           tablat	equ	0xFF5
 15928                           prodh	equ	0xFF4
 15929                           prodl	equ	0xFF3
 15930                           intcon	equ	0xFF2
 15931                           indf0	equ	0xFEF
 15932                           postinc0	equ	0xFEE
 15933                           fsr0h	equ	0xFEA
 15934                           fsr0l	equ	0xFE9
 15935                           wreg	equ	0xFE8
 15936                           indf1	equ	0xFE7
 15937                           postdec1	equ	0xFE5
 15938                           plusw1	equ	0xFE3
 15939                           fsr1h	equ	0xFE2
 15940                           fsr1l	equ	0xFE1
 15941                           indf2	equ	0xFDF
 15942                           postinc2	equ	0xFDE
 15943                           postdec2	equ	0xFDD
 15944                           plusw2	equ	0xFDB
 15945                           fsr2h	equ	0xFDA
 15946                           fsr2l	equ	0xFD9
 15947                           status	equ	0xFD8
 15948                           
 15949 ;; *************** function _isdigit *****************
 15950 ;; Defined at:
 15951 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 15952 ;; Parameters:    Size  Location     Type
 15953 ;;  c               1    wreg     unsigned char 
 15954 ;; Auto vars:     Size  Location     Type
 15955 ;;  c               1   25[BANK1 ] unsigned char 
 15956 ;; Return value:  Size  Location     Type
 15957 ;;		None               void
 15958 ;; Registers used:
 15959 ;;		wreg, status,2, status,0
 15960 ;; Tracked objects:
 15961 ;;		On entry : 0/0
 15962 ;;		On exit  : 0/0
 15963 ;;		Unchanged: 0/0
 15964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15966 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15967 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15968 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15969 ;;Total ram usage:        3 bytes
 15970 ;; Hardware stack levels used:    1
 15971 ;; Hardware stack levels required when called:   13
 15972 ;; This function calls:
 15973 ;;		Nothing
 15974 ;; This function is called by:
 15975 ;;		_printf
 15976 ;;		_atoi
 15977 ;; This function uses a non-reentrant model
 15978 ;;
 15979                           
 15980                           	psect	text32
 15981  017F90                     __ptext32:
 15982                           	opt stack 0
 15983  017F90                     _isdigit:
 15984                           	opt stack 14
 15985                           
 15986                           ; BSR set to: 14
 15987                           ;incstack = 0
 15988                           ;isdigit@c stored from wreg
 15989  017F90  0101               	movlb	1	; () banked
 15990  017F92  6F19               	movwf	isdigit@c& (0+255),b
 15991  017F94  0E00               	movlw	0
 15992  017F96  0101               	movlb	1	; () banked
 15993  017F98  6F18               	movwf	_isdigit$3141& (0+255),b
 15994                           
 15995                           ; BSR set to: 1
 15996  017F9A  0E3A               	movlw	58
 15997  017F9C  6119               	cpfslt	isdigit@c& (0+255),b
 15998  017F9E  D005               	goto	l1874
 15999                           
 16000                           ; BSR set to: 1
 16001  017FA0  0E2F               	movlw	47
 16002  017FA2  6519               	cpfsgt	isdigit@c& (0+255),b
 16003  017FA4  D002               	goto	l1874
 16004                           
 16005                           ; BSR set to: 1
 16006  017FA6  0E01               	movlw	1
 16007  017FA8  6F18               	movwf	_isdigit$3141& (0+255),b
 16008  017FAA                     l1874:
 16009                           
 16010                           ; BSR set to: 1
 16011                           
 16012                           ; BSR set to: 1
 16013  017FAA  C118  F117         	movff	_isdigit$3141,??_isdigit
 16014  017FAE  3117               	rrcf	??_isdigit& (0+255),w,b
 16015  017FB0  0012               	return	
 16016  017FB2                     __end_of_isdigit:
 16017                           	opt stack 0
 16018                           tblptru	equ	0xFF8
 16019                           tblptrh	equ	0xFF7
 16020                           tblptrl	equ	0xFF6
 16021                           tablat	equ	0xFF5
 16022                           prodh	equ	0xFF4
 16023                           prodl	equ	0xFF3
 16024                           intcon	equ	0xFF2
 16025                           indf0	equ	0xFEF
 16026                           postinc0	equ	0xFEE
 16027                           fsr0h	equ	0xFEA
 16028                           fsr0l	equ	0xFE9
 16029                           wreg	equ	0xFE8
 16030                           indf1	equ	0xFE7
 16031                           postdec1	equ	0xFE5
 16032                           plusw1	equ	0xFE3
 16033                           fsr1h	equ	0xFE2
 16034                           fsr1l	equ	0xFE1
 16035                           indf2	equ	0xFDF
 16036                           postinc2	equ	0xFDE
 16037                           postdec2	equ	0xFDD
 16038                           plusw2	equ	0xFDB
 16039                           fsr2h	equ	0xFDA
 16040                           fsr2l	equ	0xFD9
 16041                           status	equ	0xFD8
 16042                           
 16043 ;; *************** function _fround *****************
 16044 ;; Defined at:
 16045 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16046 ;; Parameters:    Size  Location     Type
 16047 ;;  prec            1    wreg     unsigned char 
 16048 ;; Auto vars:     Size  Location     Type
 16049 ;;  prec            1  123[BANK1 ] unsigned char 
 16050 ;; Return value:  Size  Location     Type
 16051 ;;                  4  111[BANK1 ] unsigned char 
 16052 ;; Registers used:
 16053 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16054 ;; Tracked objects:
 16055 ;;		On entry : 0/0
 16056 ;;		On exit  : 0/0
 16057 ;;		Unchanged: 0/0
 16058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16059 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16060 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16062 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16063 ;;Total ram usage:       13 bytes
 16064 ;; Hardware stack levels used:    1
 16065 ;; Hardware stack levels required when called:   14
 16066 ;; This function calls:
 16067 ;;		___awdiv
 16068 ;;		___awmod
 16069 ;;		___flmul
 16070 ;; This function is called by:
 16071 ;;		_printf
 16072 ;; This function uses a non-reentrant model
 16073 ;;
 16074                           
 16075                           	psect	text33
 16076  014D88                     __ptext33:
 16077                           	opt stack 0
 16078  014D88                     _fround:
 16079                           	opt stack 13
 16080                           
 16081                           ; BSR set to: 1
 16082                           ;incstack = 0
 16083                           ;fround@prec stored from wreg
 16084  014D88  0101               	movlb	1	; () banked
 16085  014D8A  6F7B               	movwf	fround@prec& (0+255),b
 16086                           
 16087                           ;doprnt.c: 413: if(prec>=110)
 16088  014D8C  0E6D               	movlw	109
 16089  014D8E  0101               	movlb	1	; () banked
 16090  014D90  657B               	cpfsgt	fround@prec& (0+255),b
 16091  014D92  D0BA               	goto	l1334
 16092                           
 16093                           ; BSR set to: 1
 16094                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16095  014D94  0E00               	movlw	0
 16096  014D96  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16097  014D98  0E0A               	movlw	10
 16098  014D9A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16099  014D9C  0E00               	movlw	0
 16100  014D9E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16101  014DA0  0E64               	movlw	100
 16102  014DA2  6F19               	movwf	___awmod@divisor& (0+255),b
 16103  014DA4  C17B  F117         	movff	fround@prec,___awmod@dividend
 16104  014DA8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16105  014DAA  EC22  F0BA         	call	___awmod	;wreg free
 16106  014DAE  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16107  014DB2  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16108  014DB6  EC1F  F0B8         	call	___awdiv	;wreg free
 16109  014DBA  0101               	movlb	1	; () banked
 16110  014DBC  90D8               	bcf	status,0,c
 16111  014DBE  371D               	rlcf	?___awdiv& (0+255),f,b
 16112  014DC0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16113  014DC2  90D8               	bcf	status,0,c
 16114  014DC4  371D               	rlcf	?___awdiv& (0+255),f,b
 16115  014DC6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16116  014DC8  0E24               	movlw	36
 16117  014DCA  271D               	addwf	?___awdiv& (0+255),f,b
 16118  014DCC  0E00               	movlw	0
 16119  014DCE  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16120  014DD0  0EF1               	movlw	low __npowers_
 16121  014DD2  251D               	addwf	?___awdiv& (0+255),w,b
 16122  014DD4  6EF6               	movwf	tblptrl,c
 16123  014DD6  0EEB               	movlw	high __npowers_
 16124  014DD8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16125  014DDA  6EF7               	movwf	tblptrh,c
 16126  014DDC                     	if	1	;There are 3 active tblptr bytes
 16127  014DDC  6AF8               	clrf	tblptru,c
 16128  014DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 16129  014DE0  22F8               	addwfc	tblptru,f,c
 16130  014DE2                     	endif
 16131  014DE2  0009               	tblrd		*+
 16132  014DE4  CFF5 F15A          	movff	tablat,___flmul@a
 16133  014DE8  0009               	tblrd		*+
 16134  014DEA  CFF5 F15B          	movff	tablat,___flmul@a+1
 16135  014DEE  0009               	tblrd		*+
 16136  014DF0  CFF5 F15C          	movff	tablat,___flmul@a+2
 16137  014DF4  000A               	tblrd		*-
 16138  014DF6  CFF5 F15D          	movff	tablat,___flmul@a+3
 16139  014DFA  0E00               	movlw	0
 16140  014DFC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16141  014DFE  0E64               	movlw	100
 16142  014E00  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16143  014E02  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 16144  014E06  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16145  014E08  EC1F  F0B8         	call	___awdiv	;wreg free
 16146  014E0C  0101               	movlb	1	; () banked
 16147  014E0E  90D8               	bcf	status,0,c
 16148  014E10  371D               	rlcf	?___awdiv& (0+255),f,b
 16149  014E12  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16150  014E14  90D8               	bcf	status,0,c
 16151  014E16  371D               	rlcf	?___awdiv& (0+255),f,b
 16152  014E18  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16153  014E1A  0E48               	movlw	72
 16154  014E1C  271D               	addwf	?___awdiv& (0+255),f,b
 16155  014E1E  0E00               	movlw	0
 16156  014E20  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16157  014E22  0EF1               	movlw	low __npowers_
 16158  014E24  251D               	addwf	?___awdiv& (0+255),w,b
 16159  014E26  6EF6               	movwf	tblptrl,c
 16160  014E28  0EEB               	movlw	high __npowers_
 16161  014E2A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16162  014E2C  6EF7               	movwf	tblptrh,c
 16163  014E2E                     	if	1	;There are 3 active tblptr bytes
 16164  014E2E  6AF8               	clrf	tblptru,c
 16165  014E30  0E00               	movlw	low (__mediumconst shr (0+16))
 16166  014E32  22F8               	addwfc	tblptru,f,c
 16167  014E34                     	endif
 16168  014E34  0009               	tblrd		*+
 16169  014E36  CFF5 F156          	movff	tablat,___flmul@b
 16170  014E3A  0009               	tblrd		*+
 16171  014E3C  CFF5 F157          	movff	tablat,___flmul@b+1
 16172  014E40  0009               	tblrd		*+
 16173  014E42  CFF5 F158          	movff	tablat,___flmul@b+2
 16174  014E46  000A               	tblrd		*-
 16175  014E48  CFF5 F159          	movff	tablat,___flmul@b+3
 16176  014E4C  ECD2  F09B         	call	___flmul	;wreg free
 16177  014E50  C156  F177         	movff	?___flmul,_fround$3858
 16178  014E54  C157  F178         	movff	?___flmul+1,_fround$3858+1
 16179  014E58  C158  F179         	movff	?___flmul+2,_fround$3858+2
 16180  014E5C  C159  F17A         	movff	?___flmul+3,_fround$3858+3
 16181                           
 16182                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16183  014E60  0E00               	movlw	0
 16184  014E62  0101               	movlb	1	; () banked
 16185  014E64  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16186  014E66  0E0A               	movlw	10
 16187  014E68  6F19               	movwf	___awmod@divisor& (0+255),b
 16188  014E6A  C17B  F117         	movff	fround@prec,___awmod@dividend
 16189  014E6E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16190  014E70  EC22  F0BA         	call	___awmod	;wreg free
 16191  014E74  0101               	movlb	1	; () banked
 16192  014E76  90D8               	bcf	status,0,c
 16193  014E78  3717               	rlcf	?___awmod& (0+255),f,b
 16194  014E7A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16195  014E7C  90D8               	bcf	status,0,c
 16196  014E7E  3717               	rlcf	?___awmod& (0+255),f,b
 16197  014E80  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16198  014E82  0EF1               	movlw	low __npowers_
 16199  014E84  2517               	addwf	?___awmod& (0+255),w,b
 16200  014E86  6EF6               	movwf	tblptrl,c
 16201  014E88  0EEB               	movlw	high __npowers_
 16202  014E8A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16203  014E8C  6EF7               	movwf	tblptrh,c
 16204  014E8E                     	if	1	;There are 3 active tblptr bytes
 16205  014E8E  6AF8               	clrf	tblptru,c
 16206  014E90  0E00               	movlw	low (__mediumconst shr (0+16))
 16207  014E92  22F8               	addwfc	tblptru,f,c
 16208  014E94                     	endif
 16209  014E94  0009               	tblrd		*+
 16210  014E96  CFF5 F15A          	movff	tablat,___flmul@a
 16211  014E9A  0009               	tblrd		*+
 16212  014E9C  CFF5 F15B          	movff	tablat,___flmul@a+1
 16213  014EA0  0009               	tblrd		*+
 16214  014EA2  CFF5 F15C          	movff	tablat,___flmul@a+2
 16215  014EA6  000A               	tblrd		*-
 16216  014EA8  CFF5 F15D          	movff	tablat,___flmul@a+3
 16217  014EAC  C177  F156         	movff	_fround$3858,___flmul@b
 16218  014EB0  C178  F157         	movff	_fround$3858+1,___flmul@b+1
 16219  014EB4  C179  F158         	movff	_fround$3858+2,___flmul@b+2
 16220  014EB8  C17A  F159         	movff	_fround$3858+3,___flmul@b+3
 16221  014EBC  ECD2  F09B         	call	___flmul	;wreg free
 16222  014EC0  C156  F173         	movff	?___flmul,_fround$3859
 16223  014EC4  C157  F174         	movff	?___flmul+1,_fround$3859+1
 16224  014EC8  C158  F175         	movff	?___flmul+2,_fround$3859+2
 16225  014ECC  C159  F176         	movff	?___flmul+3,_fround$3859+3
 16226                           
 16227                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16228  014ED0  C173  F156         	movff	_fround$3859,___flmul@b
 16229  014ED4  C174  F157         	movff	_fround$3859+1,___flmul@b+1
 16230  014ED8  C175  F158         	movff	_fround$3859+2,___flmul@b+2
 16231  014EDC  C176  F159         	movff	_fround$3859+3,___flmul@b+3
 16232  014EE0  0E00               	movlw	0
 16233  014EE2  0101               	movlb	1	; () banked
 16234  014EE4  6F5A               	movwf	___flmul@a& (0+255),b
 16235  014EE6  0E00               	movlw	0
 16236  014EE8  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16237  014EEA  0E00               	movlw	0
 16238  014EEC  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16239  014EEE  0E3F               	movlw	63
 16240  014EF0  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16241  014EF2  ECD2  F09B         	call	___flmul	;wreg free
 16242  014EF6  C156  F16F         	movff	?___flmul,?_fround
 16243  014EFA  C157  F170         	movff	?___flmul+1,?_fround+1
 16244  014EFE  C158  F171         	movff	?___flmul+2,?_fround+2
 16245  014F02  C159  F172         	movff	?___flmul+3,?_fround+3
 16246  014F06  0012               	return	
 16247  014F08                     l1334:
 16248                           
 16249                           ;doprnt.c: 415: else if(prec > 10)
 16250  014F08  0E0A               	movlw	10
 16251  014F0A  0101               	movlb	1	; () banked
 16252  014F0C  657B               	cpfsgt	fround@prec& (0+255),b
 16253  014F0E  D074               	goto	l1337
 16254                           
 16255                           ; BSR set to: 1
 16256                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16257  014F10  0E00               	movlw	0
 16258  014F12  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16259  014F14  0E0A               	movlw	10
 16260  014F16  6F19               	movwf	___awmod@divisor& (0+255),b
 16261  014F18  C17B  F117         	movff	fround@prec,___awmod@dividend
 16262  014F1C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16263  014F1E  EC22  F0BA         	call	___awmod	;wreg free
 16264  014F22  0101               	movlb	1	; () banked
 16265  014F24  90D8               	bcf	status,0,c
 16266  014F26  3717               	rlcf	?___awmod& (0+255),f,b
 16267  014F28  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16268  014F2A  90D8               	bcf	status,0,c
 16269  014F2C  3717               	rlcf	?___awmod& (0+255),f,b
 16270  014F2E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16271  014F30  0EF1               	movlw	low __npowers_
 16272  014F32  2517               	addwf	?___awmod& (0+255),w,b
 16273  014F34  6EF6               	movwf	tblptrl,c
 16274  014F36  0EEB               	movlw	high __npowers_
 16275  014F38  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16276  014F3A  6EF7               	movwf	tblptrh,c
 16277  014F3C                     	if	1	;There are 3 active tblptr bytes
 16278  014F3C  6AF8               	clrf	tblptru,c
 16279  014F3E  0E00               	movlw	low (__mediumconst shr (0+16))
 16280  014F40  22F8               	addwfc	tblptru,f,c
 16281  014F42                     	endif
 16282  014F42  0009               	tblrd		*+
 16283  014F44  CFF5 F15A          	movff	tablat,___flmul@a
 16284  014F48  0009               	tblrd		*+
 16285  014F4A  CFF5 F15B          	movff	tablat,___flmul@a+1
 16286  014F4E  0009               	tblrd		*+
 16287  014F50  CFF5 F15C          	movff	tablat,___flmul@a+2
 16288  014F54  000A               	tblrd		*-
 16289  014F56  CFF5 F15D          	movff	tablat,___flmul@a+3
 16290  014F5A  0E00               	movlw	0
 16291  014F5C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16292  014F5E  0E0A               	movlw	10
 16293  014F60  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16294  014F62  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 16295  014F66  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16296  014F68  EC1F  F0B8         	call	___awdiv	;wreg free
 16297  014F6C  0101               	movlb	1	; () banked
 16298  014F6E  90D8               	bcf	status,0,c
 16299  014F70  371D               	rlcf	?___awdiv& (0+255),f,b
 16300  014F72  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16301  014F74  90D8               	bcf	status,0,c
 16302  014F76  371D               	rlcf	?___awdiv& (0+255),f,b
 16303  014F78  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16304  014F7A  0E24               	movlw	36
 16305  014F7C  271D               	addwf	?___awdiv& (0+255),f,b
 16306  014F7E  0E00               	movlw	0
 16307  014F80  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16308  014F82  0EF1               	movlw	low __npowers_
 16309  014F84  251D               	addwf	?___awdiv& (0+255),w,b
 16310  014F86  6EF6               	movwf	tblptrl,c
 16311  014F88  0EEB               	movlw	high __npowers_
 16312  014F8A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16313  014F8C  6EF7               	movwf	tblptrh,c
 16314  014F8E                     	if	1	;There are 3 active tblptr bytes
 16315  014F8E  6AF8               	clrf	tblptru,c
 16316  014F90  0E00               	movlw	low (__mediumconst shr (0+16))
 16317  014F92  22F8               	addwfc	tblptru,f,c
 16318  014F94                     	endif
 16319  014F94  0009               	tblrd		*+
 16320  014F96  CFF5 F156          	movff	tablat,___flmul@b
 16321  014F9A  0009               	tblrd		*+
 16322  014F9C  CFF5 F157          	movff	tablat,___flmul@b+1
 16323  014FA0  0009               	tblrd		*+
 16324  014FA2  CFF5 F158          	movff	tablat,___flmul@b+2
 16325  014FA6  000A               	tblrd		*-
 16326  014FA8  CFF5 F159          	movff	tablat,___flmul@b+3
 16327  014FAC  ECD2  F09B         	call	___flmul	;wreg free
 16328  014FB0  C156  F177         	movff	?___flmul,_fround$3858
 16329  014FB4  C157  F178         	movff	?___flmul+1,_fround$3858+1
 16330  014FB8  C158  F179         	movff	?___flmul+2,_fround$3858+2
 16331  014FBC  C159  F17A         	movff	?___flmul+3,_fround$3858+3
 16332                           
 16333                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16334  014FC0  C177  F156         	movff	_fround$3858,___flmul@b
 16335  014FC4  C178  F157         	movff	_fround$3858+1,___flmul@b+1
 16336  014FC8  C179  F158         	movff	_fround$3858+2,___flmul@b+2
 16337  014FCC  C17A  F159         	movff	_fround$3858+3,___flmul@b+3
 16338  014FD0  0E00               	movlw	0
 16339  014FD2  0101               	movlb	1	; () banked
 16340  014FD4  6F5A               	movwf	___flmul@a& (0+255),b
 16341  014FD6  0E00               	movlw	0
 16342  014FD8  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16343  014FDA  0E00               	movlw	0
 16344  014FDC  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16345  014FDE  0E3F               	movlw	63
 16346  014FE0  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16347  014FE2  ECD2  F09B         	call	___flmul	;wreg free
 16348  014FE6  C156  F16F         	movff	?___flmul,?_fround
 16349  014FEA  C157  F170         	movff	?___flmul+1,?_fround+1
 16350  014FEE  C158  F171         	movff	?___flmul+2,?_fround+2
 16351  014FF2  C159  F172         	movff	?___flmul+3,?_fround+3
 16352  014FF6  0012               	return	
 16353  014FF8                     l1337:
 16354                           
 16355                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 16356  014FF8  0101               	movlb	1	; () banked
 16357  014FFA  517B               	movf	fround@prec& (0+255),w,b
 16358  014FFC  0D04               	mullw	4
 16359  014FFE  0EF1               	movlw	low __npowers_
 16360  015000  24F3               	addwf	prodl,w,c
 16361  015002  6EF6               	movwf	tblptrl,c
 16362  015004  0EEB               	movlw	high __npowers_
 16363  015006  20F4               	addwfc	prodh,w,c
 16364  015008  6EF7               	movwf	tblptrh,c
 16365  01500A                     	if	1	;There are 3 active tblptr bytes
 16366  01500A  6AF8               	clrf	tblptru,c
 16367  01500C  0E00               	movlw	low (__mediumconst shr (0+16))
 16368  01500E  22F8               	addwfc	tblptru,f,c
 16369  015010                     	endif
 16370  015010  0009               	tblrd		*+
 16371  015012  CFF5 F156          	movff	tablat,___flmul@b
 16372  015016  0009               	tblrd		*+
 16373  015018  CFF5 F157          	movff	tablat,___flmul@b+1
 16374  01501C  0009               	tblrd		*+
 16375  01501E  CFF5 F158          	movff	tablat,___flmul@b+2
 16376  015022  000A               	tblrd		*-
 16377  015024  CFF5 F159          	movff	tablat,___flmul@b+3
 16378  015028  0E00               	movlw	0
 16379  01502A  6F5A               	movwf	___flmul@a& (0+255),b
 16380  01502C  0E00               	movlw	0
 16381  01502E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16382  015030  0E00               	movlw	0
 16383  015032  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16384  015034  0E3F               	movlw	63
 16385  015036  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16386  015038  ECD2  F09B         	call	___flmul	;wreg free
 16387  01503C  C156  F16F         	movff	?___flmul,?_fround
 16388  015040  C157  F170         	movff	?___flmul+1,?_fround+1
 16389  015044  C158  F171         	movff	?___flmul+2,?_fround+2
 16390  015048  C159  F172         	movff	?___flmul+3,?_fround+3
 16391  01504C  0012               	return	
 16392  01504E                     __end_of_fround:
 16393                           	opt stack 0
 16394                           tblptru	equ	0xFF8
 16395                           tblptrh	equ	0xFF7
 16396                           tblptrl	equ	0xFF6
 16397                           tablat	equ	0xFF5
 16398                           prodh	equ	0xFF4
 16399                           prodl	equ	0xFF3
 16400                           intcon	equ	0xFF2
 16401                           indf0	equ	0xFEF
 16402                           postinc0	equ	0xFEE
 16403                           fsr0h	equ	0xFEA
 16404                           fsr0l	equ	0xFE9
 16405                           wreg	equ	0xFE8
 16406                           indf1	equ	0xFE7
 16407                           postdec1	equ	0xFE5
 16408                           plusw1	equ	0xFE3
 16409                           fsr1h	equ	0xFE2
 16410                           fsr1l	equ	0xFE1
 16411                           indf2	equ	0xFDF
 16412                           postinc2	equ	0xFDE
 16413                           postdec2	equ	0xFDD
 16414                           plusw2	equ	0xFDB
 16415                           fsr2h	equ	0xFDA
 16416                           fsr2l	equ	0xFD9
 16417                           status	equ	0xFD8
 16418                           
 16419 ;; *************** function ___flmul *****************
 16420 ;; Defined at:
 16421 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 16422 ;; Parameters:    Size  Location     Type
 16423 ;;  b               4   86[BANK1 ] unsigned char 
 16424 ;;  a               4   90[BANK1 ] unsigned char 
 16425 ;; Auto vars:     Size  Location     Type
 16426 ;;  prod            4  105[BANK1 ] struct .
 16427 ;;  grs             4  100[BANK1 ] unsigned long 
 16428 ;;  temp            2  109[BANK1 ] struct .
 16429 ;;  bexp            1  104[BANK1 ] unsigned char 
 16430 ;;  aexp            1   99[BANK1 ] unsigned char 
 16431 ;;  sign            1   98[BANK1 ] unsigned char 
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  4   86[BANK1 ] unsigned char 
 16434 ;; Registers used:
 16435 ;;		wreg, status,2, status,0, prodl, prodh
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16441 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16442 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16443 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16444 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16445 ;;Total ram usage:       25 bytes
 16446 ;; Hardware stack levels used:    1
 16447 ;; Hardware stack levels required when called:   13
 16448 ;; This function calls:
 16449 ;;		Nothing
 16450 ;; This function is called by:
 16451 ;;		_ringBufferLUT
 16452 ;;		_fround
 16453 ;;		_scale
 16454 ;;		_printf
 16455 ;; This function uses a non-reentrant model
 16456 ;;
 16457                           
 16458                           	psect	text34
 16459  0137A4                     __ptext34:
 16460                           	opt stack 0
 16461  0137A4                     ___flmul:
 16462                           	opt stack 13
 16463                           
 16464                           ;incstack = 0
 16465  0137A4  0101               	movlb	1	; () banked
 16466  0137A6  5159               	movf	(___flmul@b+3)& (0+255),w,b
 16467  0137A8  0B80               	andlw	128
 16468  0137AA  6F62               	movwf	___flmul@sign& (0+255),b
 16469  0137AC  5159               	movf	(___flmul@b+3)& (0+255),w,b
 16470  0137AE  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 16471  0137B0  6F68               	movwf	___flmul@bexp& (0+255),b
 16472                           
 16473                           ; BSR set to: 1
 16474  0137B2  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 16475                           
 16476                           ; BSR set to: 1
 16477  0137B4  8168               	bsf	___flmul@bexp& (0+255),0,b
 16478                           
 16479                           ; BSR set to: 1
 16480                           
 16481                           ; BSR set to: 1
 16482  0137B6  5168               	movf	___flmul@bexp& (0+255),w,b
 16483  0137B8  B4D8               	btfsc	status,2,c
 16484  0137BA  D00D               	goto	l2088
 16485                           
 16486                           ; BSR set to: 1
 16487  0137BC  2968               	incf	___flmul@bexp& (0+255),w,b
 16488  0137BE  A4D8               	btfss	status,2,c
 16489  0137C0  D008               	goto	l2089
 16490                           
 16491                           ; BSR set to: 1
 16492  0137C2  0E00               	movlw	0
 16493  0137C4  6F56               	movwf	___flmul@b& (0+255),b
 16494  0137C6  0E00               	movlw	0
 16495  0137C8  6F57               	movwf	(___flmul@b+1)& (0+255),b
 16496  0137CA  0E00               	movlw	0
 16497  0137CC  6F58               	movwf	(___flmul@b+2)& (0+255),b
 16498  0137CE  0E00               	movlw	0
 16499  0137D0  6F59               	movwf	(___flmul@b+3)& (0+255),b
 16500  0137D2                     l2089:
 16501                           
 16502                           ; BSR set to: 1
 16503                           
 16504                           ; BSR set to: 1
 16505  0137D2  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 16506  0137D4  D008               	goto	l2090
 16507  0137D6                     l2088:
 16508                           
 16509                           ; BSR set to: 1
 16510                           
 16511                           ; BSR set to: 1
 16512  0137D6  0E00               	movlw	0
 16513  0137D8  6F56               	movwf	___flmul@b& (0+255),b
 16514  0137DA  0E00               	movlw	0
 16515  0137DC  6F57               	movwf	(___flmul@b+1)& (0+255),b
 16516  0137DE  0E00               	movlw	0
 16517  0137E0  6F58               	movwf	(___flmul@b+2)& (0+255),b
 16518  0137E2  0E00               	movlw	0
 16519  0137E4  6F59               	movwf	(___flmul@b+3)& (0+255),b
 16520  0137E6                     l2090:
 16521                           
 16522                           ; BSR set to: 1
 16523                           
 16524                           ; BSR set to: 1
 16525  0137E6  515D               	movf	(___flmul@a+3)& (0+255),w,b
 16526  0137E8  0B80               	andlw	128
 16527  0137EA  1B62               	xorwf	___flmul@sign& (0+255),f,b
 16528                           
 16529                           ; BSR set to: 1
 16530  0137EC  515D               	movf	(___flmul@a+3)& (0+255),w,b
 16531  0137EE  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 16532  0137F0  6F63               	movwf	___flmul@aexp& (0+255),b
 16533                           
 16534                           ; BSR set to: 1
 16535  0137F2  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 16536                           
 16537                           ; BSR set to: 1
 16538  0137F4  8163               	bsf	___flmul@aexp& (0+255),0,b
 16539                           
 16540                           ; BSR set to: 1
 16541                           
 16542                           ; BSR set to: 1
 16543  0137F6  5163               	movf	___flmul@aexp& (0+255),w,b
 16544  0137F8  B4D8               	btfsc	status,2,c
 16545  0137FA  D00D               	goto	l2092
 16546                           
 16547                           ; BSR set to: 1
 16548  0137FC  2963               	incf	___flmul@aexp& (0+255),w,b
 16549  0137FE  A4D8               	btfss	status,2,c
 16550  013800  D008               	goto	l2093
 16551                           
 16552                           ; BSR set to: 1
 16553  013802  0E00               	movlw	0
 16554  013804  6F5A               	movwf	___flmul@a& (0+255),b
 16555  013806  0E00               	movlw	0
 16556  013808  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16557  01380A  0E00               	movlw	0
 16558  01380C  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16559  01380E  0E00               	movlw	0
 16560  013810  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16561  013812                     l2093:
 16562                           
 16563                           ; BSR set to: 1
 16564                           
 16565                           ; BSR set to: 1
 16566  013812  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 16567  013814  D008               	goto	l2094
 16568  013816                     l2092:
 16569                           
 16570                           ; BSR set to: 1
 16571                           
 16572                           ; BSR set to: 1
 16573  013816  0E00               	movlw	0
 16574  013818  6F5A               	movwf	___flmul@a& (0+255),b
 16575  01381A  0E00               	movlw	0
 16576  01381C  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16577  01381E  0E00               	movlw	0
 16578  013820  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16579  013822  0E00               	movlw	0
 16580  013824  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16581  013826                     l2094:
 16582                           
 16583                           ; BSR set to: 1
 16584  013826  5163               	movf	___flmul@aexp& (0+255),w,b
 16585  013828  B4D8               	btfsc	status,2,c
 16586  01382A  D003               	goto	u12840
 16587                           
 16588                           ; BSR set to: 1
 16589  01382C  5168               	movf	___flmul@bexp& (0+255),w,b
 16590  01382E  A4D8               	btfss	status,2,c
 16591  013830  D009               	goto	l2095
 16592  013832                     u12840:
 16593                           
 16594                           ; BSR set to: 1
 16595                           
 16596                           ; BSR set to: 1
 16597  013832  0E00               	movlw	0
 16598  013834  6F56               	movwf	?___flmul& (0+255),b
 16599  013836  0E00               	movlw	0
 16600  013838  6F57               	movwf	(?___flmul+1)& (0+255),b
 16601  01383A  0E00               	movlw	0
 16602  01383C  6F58               	movwf	(?___flmul+2)& (0+255),b
 16603  01383E  0E00               	movlw	0
 16604  013840  6F59               	movwf	(?___flmul+3)& (0+255),b
 16605                           
 16606                           ; BSR set to: 1
 16607  013842  0012               	return	
 16608  013844                     l2095:
 16609                           
 16610                           ; BSR set to: 1
 16611                           
 16612                           ; BSR set to: 1
 16613  013844  515C               	movf	(___flmul@a+2)& (0+255),w,b
 16614  013846  0356               	mulwf	___flmul@b& (0+255),b
 16615  013848  CFF3 F16D          	movff	prodl,___flmul@temp
 16616  01384C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16617                           
 16618                           ; BSR set to: 1
 16619  013850  516D               	movf	___flmul@temp& (0+255),w,b
 16620  013852  6F64               	movwf	___flmul@grs& (0+255),b
 16621  013854  6B65               	clrf	(___flmul@grs+1)& (0+255),b
 16622  013856  6B66               	clrf	(___flmul@grs+2)& (0+255),b
 16623  013858  6B67               	clrf	(___flmul@grs+3)& (0+255),b
 16624                           
 16625                           ; BSR set to: 1
 16626  01385A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16627  01385C  6F69               	movwf	___flmul@prod& (0+255),b
 16628  01385E  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 16629  013860  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 16630  013862  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 16631  013864  515B               	movf	(___flmul@a+1)& (0+255),w,b
 16632  013866  0357               	mulwf	(___flmul@b+1)& (0+255),b
 16633  013868  CFF3 F16D          	movff	prodl,___flmul@temp
 16634  01386C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16635                           
 16636                           ; BSR set to: 1
 16637  013870  516D               	movf	___flmul@temp& (0+255),w,b
 16638  013872  2764               	addwf	___flmul@grs& (0+255),f,b
 16639  013874  0E00               	movlw	0
 16640  013876  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16641  013878  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16642  01387A  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16643                           
 16644                           ; BSR set to: 1
 16645  01387C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16646  01387E  2769               	addwf	___flmul@prod& (0+255),f,b
 16647  013880  0E00               	movlw	0
 16648  013882  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16649  013884  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16650  013886  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16651  013888  515A               	movf	___flmul@a& (0+255),w,b
 16652  01388A  0358               	mulwf	(___flmul@b+2)& (0+255),b
 16653  01388C  CFF3 F16D          	movff	prodl,___flmul@temp
 16654  013890  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16655                           
 16656                           ; BSR set to: 1
 16657  013894  516D               	movf	___flmul@temp& (0+255),w,b
 16658  013896  2764               	addwf	___flmul@grs& (0+255),f,b
 16659  013898  0E00               	movlw	0
 16660  01389A  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16661  01389C  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16662  01389E  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16663                           
 16664                           ; BSR set to: 1
 16665  0138A0  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16666  0138A2  2769               	addwf	___flmul@prod& (0+255),f,b
 16667  0138A4  0E00               	movlw	0
 16668  0138A6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16669  0138A8  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16670  0138AA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16671                           
 16672                           ; BSR set to: 1
 16673  0138AC  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 16674  0138B0  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 16675  0138B4  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 16676  0138B8  6B64               	clrf	___flmul@grs& (0+255),b
 16677                           
 16678                           ; BSR set to: 1
 16679  0138BA  515A               	movf	___flmul@a& (0+255),w,b
 16680  0138BC  0357               	mulwf	(___flmul@b+1)& (0+255),b
 16681  0138BE  CFF3 F16D          	movff	prodl,___flmul@temp
 16682  0138C2  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16683                           
 16684                           ; BSR set to: 1
 16685  0138C6  516D               	movf	___flmul@temp& (0+255),w,b
 16686  0138C8  2764               	addwf	___flmul@grs& (0+255),f,b
 16687  0138CA  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16688  0138CC  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16689  0138CE  0E00               	movlw	0
 16690  0138D0  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16691  0138D2  0E00               	movlw	0
 16692  0138D4  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16693                           
 16694                           ; BSR set to: 1
 16695  0138D6  515B               	movf	(___flmul@a+1)& (0+255),w,b
 16696  0138D8  0356               	mulwf	___flmul@b& (0+255),b
 16697  0138DA  CFF3 F16D          	movff	prodl,___flmul@temp
 16698  0138DE  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16699                           
 16700                           ; BSR set to: 1
 16701  0138E2  516D               	movf	___flmul@temp& (0+255),w,b
 16702  0138E4  2764               	addwf	___flmul@grs& (0+255),f,b
 16703  0138E6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16704  0138E8  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16705  0138EA  0E00               	movlw	0
 16706  0138EC  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16707  0138EE  0E00               	movlw	0
 16708  0138F0  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16709                           
 16710                           ; BSR set to: 1
 16711  0138F2  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 16712  0138F6  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 16713  0138FA  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 16714  0138FE  6B64               	clrf	___flmul@grs& (0+255),b
 16715  013900  515A               	movf	___flmul@a& (0+255),w,b
 16716  013902  0356               	mulwf	___flmul@b& (0+255),b
 16717  013904  CFF3 F16D          	movff	prodl,___flmul@temp
 16718  013908  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16719                           
 16720                           ; BSR set to: 1
 16721  01390C  516D               	movf	___flmul@temp& (0+255),w,b
 16722  01390E  2764               	addwf	___flmul@grs& (0+255),f,b
 16723  013910  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16724  013912  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16725  013914  0E00               	movlw	0
 16726  013916  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16727  013918  0E00               	movlw	0
 16728  01391A  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16729                           
 16730                           ; BSR set to: 1
 16731  01391C  515C               	movf	(___flmul@a+2)& (0+255),w,b
 16732  01391E  0357               	mulwf	(___flmul@b+1)& (0+255),b
 16733  013920  CFF3 F16D          	movff	prodl,___flmul@temp
 16734  013924  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16735  013928  516D               	movf	___flmul@temp& (0+255),w,b
 16736  01392A  2769               	addwf	___flmul@prod& (0+255),f,b
 16737  01392C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16738  01392E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16739  013930  0E00               	movlw	0
 16740  013932  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16741  013934  0E00               	movlw	0
 16742  013936  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16743                           
 16744                           ; BSR set to: 1
 16745  013938  515B               	movf	(___flmul@a+1)& (0+255),w,b
 16746  01393A  0358               	mulwf	(___flmul@b+2)& (0+255),b
 16747  01393C  CFF3 F16D          	movff	prodl,___flmul@temp
 16748  013940  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16749                           
 16750                           ; BSR set to: 1
 16751  013944  516D               	movf	___flmul@temp& (0+255),w,b
 16752  013946  2769               	addwf	___flmul@prod& (0+255),f,b
 16753  013948  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16754  01394A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16755  01394C  0E00               	movlw	0
 16756  01394E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16757  013950  0E00               	movlw	0
 16758  013952  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16759  013954  515C               	movf	(___flmul@a+2)& (0+255),w,b
 16760  013956  0358               	mulwf	(___flmul@b+2)& (0+255),b
 16761  013958  CFF3 F16D          	movff	prodl,___flmul@temp
 16762  01395C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 16763                           
 16764                           ; BSR set to: 1
 16765  013960  516D               	movf	___flmul@temp& (0+255),w,b
 16766  013962  6F5E               	movwf	??___flmul& (0+255),b
 16767  013964  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16768  013966  6F5F               	movwf	(??___flmul+1)& (0+255),b
 16769  013968  6B60               	clrf	(??___flmul+2)& (0+255),b
 16770  01396A  6B61               	clrf	(??___flmul+3)& (0+255),b
 16771  01396C  C160  F161         	movff	??___flmul+2,??___flmul+3
 16772  013970  C15F  F160         	movff	??___flmul+1,??___flmul+2
 16773  013974  C15E  F15F         	movff	??___flmul,??___flmul+1
 16774  013978  6B5E               	clrf	??___flmul& (0+255),b
 16775  01397A  515E               	movf	??___flmul& (0+255),w,b
 16776  01397C  2769               	addwf	___flmul@prod& (0+255),f,b
 16777  01397E  515F               	movf	(??___flmul+1)& (0+255),w,b
 16778  013980  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16779  013982  5160               	movf	(??___flmul+2)& (0+255),w,b
 16780  013984  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16781  013986  5161               	movf	(??___flmul+3)& (0+255),w,b
 16782  013988  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16783                           
 16784                           ; BSR set to: 1
 16785  01398A  C164  F15E         	movff	___flmul@grs,??___flmul
 16786  01398E  C165  F15F         	movff	___flmul@grs+1,??___flmul+1
 16787  013992  C166  F160         	movff	___flmul@grs+2,??___flmul+2
 16788  013996  C167  F161         	movff	___flmul@grs+3,??___flmul+3
 16789  01399A  0E19               	movlw	25
 16790  01399C  D005               	goto	u12850
 16791  01399E                     u12855:
 16792  01399E  90D8               	bcf	status,0,c
 16793  0139A0  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 16794  0139A2  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 16795  0139A4  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 16796  0139A6  335E               	rrcf	??___flmul& (0+255),f,b
 16797  0139A8                     u12850:
 16798  0139A8  2EE8               	decfsz	wreg,f,c
 16799  0139AA  D7F9               	goto	u12855
 16800  0139AC  515E               	movf	??___flmul& (0+255),w,b
 16801  0139AE  2769               	addwf	___flmul@prod& (0+255),f,b
 16802  0139B0  515F               	movf	(??___flmul+1)& (0+255),w,b
 16803  0139B2  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16804  0139B4  5160               	movf	(??___flmul+2)& (0+255),w,b
 16805  0139B6  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16806  0139B8  5161               	movf	(??___flmul+3)& (0+255),w,b
 16807  0139BA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16808                           
 16809                           ; BSR set to: 1
 16810  0139BC  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 16811  0139C0  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 16812  0139C4  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 16813  0139C8  6B64               	clrf	___flmul@grs& (0+255),b
 16814                           
 16815                           ; BSR set to: 1
 16816  0139CA  5163               	movf	___flmul@aexp& (0+255),w,b
 16817  0139CC  C168  F15E         	movff	___flmul@bexp,??___flmul
 16818  0139D0  6B5F               	clrf	(??___flmul+1)& (0+255),b
 16819  0139D2  275E               	addwf	??___flmul& (0+255),f,b
 16820  0139D4  0E00               	movlw	0
 16821  0139D6  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 16822  0139D8  0E82               	movlw	130
 16823  0139DA  255E               	addwf	??___flmul& (0+255),w,b
 16824  0139DC  6F6D               	movwf	___flmul@temp& (0+255),b
 16825  0139DE  0EFF               	movlw	255
 16826  0139E0  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 16827  0139E2  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 16828  0139E4  D00F               	goto	l2099
 16829  0139E6                     
 16830                           ; BSR set to: 1
 16831                           
 16832                           ; BSR set to: 1
 16833  0139E6  90D8               	bcf	status,0,c
 16834  0139E8  3769               	rlcf	___flmul@prod& (0+255),f,b
 16835  0139EA  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 16836  0139EC  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 16837  0139EE  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 16838                           
 16839                           ; BSR set to: 1
 16840  0139F0  BF67               	btfsc	(___flmul@grs+3)& (0+255),7,b
 16841                           
 16842                           ; BSR set to: 1
 16843  0139F2  8169               	bsf	___flmul@prod& (0+255),0,b
 16844                           
 16845                           ; BSR set to: 1
 16846  0139F4  90D8               	bcf	status,0,c
 16847  0139F6  3764               	rlcf	___flmul@grs& (0+255),f,b
 16848  0139F8  3765               	rlcf	(___flmul@grs+1)& (0+255),f,b
 16849  0139FA  3766               	rlcf	(___flmul@grs+2)& (0+255),f,b
 16850  0139FC  3767               	rlcf	(___flmul@grs+3)& (0+255),f,b
 16851  0139FE  076D               	decf	___flmul@temp& (0+255),f,b
 16852  013A00  A0D8               	btfss	status,0,c
 16853  013A02  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 16854  013A04                     l2099:
 16855                           
 16856                           ; BSR set to: 1
 16857                           
 16858                           ; BSR set to: 1
 16859  013A04  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 16860  013A06  D7EF               	goto	l2100
 16861                           
 16862                           ; BSR set to: 1
 16863                           
 16864                           ; BSR set to: 1
 16865  013A08  0E00               	movlw	0
 16866  013A0A  6F63               	movwf	___flmul@aexp& (0+255),b
 16867                           
 16868                           ; BSR set to: 1
 16869  013A0C  AF67               	btfss	(___flmul@grs+3)& (0+255),7,b
 16870  013A0E  D016               	goto	l2106
 16871                           
 16872                           ; BSR set to: 1
 16873  013A10  0EFF               	movlw	255
 16874  013A12  1564               	andwf	___flmul@grs& (0+255),w,b
 16875  013A14  6F5E               	movwf	??___flmul& (0+255),b
 16876  013A16  0EFF               	movlw	255
 16877  013A18  1565               	andwf	(___flmul@grs+1)& (0+255),w,b
 16878  013A1A  6F5F               	movwf	(??___flmul+1)& (0+255),b
 16879  013A1C  0EFF               	movlw	255
 16880  013A1E  1566               	andwf	(___flmul@grs+2)& (0+255),w,b
 16881  013A20  6F60               	movwf	(??___flmul+2)& (0+255),b
 16882  013A22  0E7F               	movlw	127
 16883  013A24  1567               	andwf	(___flmul@grs+3)& (0+255),w,b
 16884  013A26  6F61               	movwf	(??___flmul+3)& (0+255),b
 16885  013A28  515E               	movf	??___flmul& (0+255),w,b
 16886  013A2A  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 16887  013A2C  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 16888  013A2E  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 16889  013A30  A4D8               	btfss	status,2,c
 16890  013A32  D002               	goto	u12900
 16891                           
 16892                           ; BSR set to: 1
 16893                           
 16894                           ; BSR set to: 1
 16895  013A34  A169               	btfss	___flmul@prod& (0+255),0,b
 16896  013A36  D002               	goto	l2106
 16897  013A38                     u12900:
 16898                           
 16899                           ; BSR set to: 1
 16900  013A38  0E01               	movlw	1
 16901  013A3A  6F63               	movwf	___flmul@aexp& (0+255),b
 16902  013A3C                     l2106:
 16903                           
 16904                           ; BSR set to: 1
 16905                           
 16906                           ; BSR set to: 1
 16907                           
 16908                           ; BSR set to: 1
 16909  013A3C  5163               	movf	___flmul@aexp& (0+255),w,b
 16910  013A3E  B4D8               	btfsc	status,2,c
 16911  013A40  D01F               	goto	l2108
 16912                           
 16913                           ; BSR set to: 1
 16914  013A42  0E01               	movlw	1
 16915  013A44  2769               	addwf	___flmul@prod& (0+255),f,b
 16916  013A46  0E00               	movlw	0
 16917  013A48  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16918  013A4A  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16919  013A4C  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16920                           
 16921                           ; BSR set to: 1
 16922  013A4E  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 16923  013A50  D017               	goto	l2108
 16924                           
 16925                           ; BSR set to: 1
 16926  013A52  C169  F15E         	movff	___flmul@prod,??___flmul
 16927  013A56  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 16928  013A5A  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 16929  013A5E  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 16930  013A62  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 16931  013A64  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 16932  013A66  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 16933  013A68  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 16934  013A6A  335E               	rrcf	??___flmul& (0+255),f,b
 16935  013A6C  C15E  F169         	movff	??___flmul,___flmul@prod
 16936  013A70  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 16937  013A74  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 16938  013A78  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 16939                           
 16940                           ; BSR set to: 1
 16941  013A7C  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 16942  013A7E  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 16943  013A80                     l2108:
 16944                           
 16945                           ; BSR set to: 1
 16946                           
 16947                           ; BSR set to: 1
 16948                           
 16949                           ; BSR set to: 1
 16950  013A80  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16951  013A82  D00D               	goto	l2109
 16952  013A84  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16953  013A86  E103               	bnz	u12930
 16954  013A88  296D               	incf	___flmul@temp& (0+255),w,b
 16955  013A8A  A0D8               	btfss	status,0,c
 16956  013A8C  D008               	goto	l2109
 16957  013A8E                     u12930:
 16958                           
 16959                           ; BSR set to: 1
 16960  013A8E  0E00               	movlw	0
 16961  013A90  6F69               	movwf	___flmul@prod& (0+255),b
 16962  013A92  0E00               	movlw	0
 16963  013A94  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 16964  013A96  0E80               	movlw	128
 16965  013A98  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 16966  013A9A  0E7F               	movlw	127
 16967  013A9C  D020               	goto	L4
 16968  013A9E                     l2109:
 16969                           
 16970                           ; BSR set to: 1
 16971                           
 16972                           ; BSR set to: 1
 16973  013A9E  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16974  013AA0  D005               	goto	u12940
 16975  013AA2  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 16976  013AA4  E10E               	bnz	l2111
 16977  013AA6  056D               	decf	___flmul@temp& (0+255),w,b
 16978  013AA8  B0D8               	btfsc	status,0,c
 16979  013AAA  D00B               	goto	l2111
 16980  013AAC                     u12940:
 16981                           
 16982                           ; BSR set to: 1
 16983  013AAC  0E00               	movlw	0
 16984  013AAE  6F69               	movwf	___flmul@prod& (0+255),b
 16985  013AB0  0E00               	movlw	0
 16986  013AB2  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 16987  013AB4  0E00               	movlw	0
 16988  013AB6  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 16989  013AB8  0E00               	movlw	0
 16990  013ABA  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 16991  013ABC  0E00               	movlw	0
 16992  013ABE  6F62               	movwf	___flmul@sign& (0+255),b
 16993  013AC0  D00F               	goto	l2112
 16994  013AC2                     l2111:
 16995                           
 16996                           ; BSR set to: 1
 16997  013AC2  C16D  F168         	movff	___flmul@temp,___flmul@bexp
 16998                           
 16999                           ; BSR set to: 1
 17000  013AC6  0EFF               	movlw	255
 17001  013AC8  1769               	andwf	___flmul@prod& (0+255),f,b
 17002  013ACA  0EFF               	movlw	255
 17003  013ACC  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 17004  013ACE  0E7F               	movlw	127
 17005  013AD0  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 17006  013AD2  0E00               	movlw	0
 17007  013AD4  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 17008                           
 17009                           ; BSR set to: 1
 17010  013AD6  B168               	btfsc	___flmul@bexp& (0+255),0,b
 17011                           
 17012                           ; BSR set to: 1
 17013  013AD8  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 17014                           
 17015                           ; BSR set to: 1
 17016                           
 17017                           ; BSR set to: 1
 17018  013ADA  90D8               	bcf	status,0,c
 17019  013ADC  3168               	rrcf	___flmul@bexp& (0+255),w,b
 17020  013ADE                     L4:
 17021  013ADE  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 17022  013AE0                     l2112:
 17023                           
 17024                           ; BSR set to: 1
 17025                           
 17026                           ; BSR set to: 1
 17027                           
 17028                           ; BSR set to: 1
 17029  013AE0  5162               	movf	___flmul@sign& (0+255),w,b
 17030  013AE2  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 17031                           
 17032                           ; BSR set to: 1
 17033  013AE4  C169  F156         	movff	___flmul@prod,?___flmul
 17034  013AE8  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 17035  013AEC  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 17036  013AF0  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 17037  013AF4  0012               	return	
 17038  013AF6                     __end_of___flmul:
 17039                           	opt stack 0
 17040                           tblptru	equ	0xFF8
 17041                           tblptrh	equ	0xFF7
 17042                           tblptrl	equ	0xFF6
 17043                           tablat	equ	0xFF5
 17044                           prodh	equ	0xFF4
 17045                           prodl	equ	0xFF3
 17046                           intcon	equ	0xFF2
 17047                           indf0	equ	0xFEF
 17048                           postinc0	equ	0xFEE
 17049                           fsr0h	equ	0xFEA
 17050                           fsr0l	equ	0xFE9
 17051                           wreg	equ	0xFE8
 17052                           indf1	equ	0xFE7
 17053                           postdec1	equ	0xFE5
 17054                           plusw1	equ	0xFE3
 17055                           fsr1h	equ	0xFE2
 17056                           fsr1l	equ	0xFE1
 17057                           indf2	equ	0xFDF
 17058                           postinc2	equ	0xFDE
 17059                           postdec2	equ	0xFDD
 17060                           plusw2	equ	0xFDB
 17061                           fsr2h	equ	0xFDA
 17062                           fsr2l	equ	0xFD9
 17063                           status	equ	0xFD8
 17064                           
 17065 ;; *************** function ___awmod *****************
 17066 ;; Defined at:
 17067 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 17068 ;; Parameters:    Size  Location     Type
 17069 ;;  dividend        2   23[BANK1 ] int 
 17070 ;;  divisor         2   25[BANK1 ] int 
 17071 ;; Auto vars:     Size  Location     Type
 17072 ;;  sign            1   28[BANK1 ] unsigned char 
 17073 ;;  counter         1   27[BANK1 ] unsigned char 
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  2   23[BANK1 ] int 
 17076 ;; Registers used:
 17077 ;;		wreg, status,2, status,0
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/0
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17083 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17084 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17086 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17087 ;;Total ram usage:        6 bytes
 17088 ;; Hardware stack levels used:    1
 17089 ;; Hardware stack levels required when called:   13
 17090 ;; This function calls:
 17091 ;;		Nothing
 17092 ;; This function is called by:
 17093 ;;		_fround
 17094 ;;		_scale
 17095 ;; This function uses a non-reentrant model
 17096 ;;
 17097                           
 17098                           	psect	text35
 17099  017444                     __ptext35:
 17100                           	opt stack 0
 17101  017444                     ___awmod:
 17102                           	opt stack 13
 17103                           
 17104                           ; BSR set to: 1
 17105                           ;incstack = 0
 17106  017444  0E00               	movlw	0
 17107  017446  0101               	movlb	1	; () banked
 17108  017448  6F1C               	movwf	___awmod@sign& (0+255),b
 17109                           
 17110                           ; BSR set to: 1
 17111  01744A  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 17112  01744C  D006               	goto	l1679
 17113                           
 17114                           ; BSR set to: 1
 17115  01744E  6D17               	negf	___awmod@dividend& (0+255),b
 17116  017450  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17117  017452  B0D8               	btfsc	status,0,c
 17118  017454  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17119                           
 17120                           ; BSR set to: 1
 17121  017456  0E01               	movlw	1
 17122  017458  6F1C               	movwf	___awmod@sign& (0+255),b
 17123  01745A                     l1679:
 17124                           
 17125                           ; BSR set to: 1
 17126                           
 17127                           ; BSR set to: 1
 17128  01745A  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17129  01745C  D004               	goto	l1680
 17130                           
 17131                           ; BSR set to: 1
 17132  01745E  6D19               	negf	___awmod@divisor& (0+255),b
 17133  017460  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 17134  017462  B0D8               	btfsc	status,0,c
 17135  017464  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 17136  017466                     l1680:
 17137                           
 17138                           ; BSR set to: 1
 17139                           
 17140                           ; BSR set to: 1
 17141  017466  5119               	movf	___awmod@divisor& (0+255),w,b
 17142  017468  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 17143  01746A  B4D8               	btfsc	status,2,c
 17144  01746C  D018               	goto	l1687
 17145                           
 17146                           ; BSR set to: 1
 17147  01746E  0E01               	movlw	1
 17148  017470  6F1B               	movwf	___awmod@counter& (0+255),b
 17149  017472  D004               	goto	l1682
 17150  017474                     
 17151                           ; BSR set to: 1
 17152                           
 17153                           ; BSR set to: 1
 17154  017474  90D8               	bcf	status,0,c
 17155  017476  3719               	rlcf	___awmod@divisor& (0+255),f,b
 17156  017478  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 17157  01747A  2B1B               	incf	___awmod@counter& (0+255),f,b
 17158  01747C                     l1682:
 17159                           
 17160                           ; BSR set to: 1
 17161                           
 17162                           ; BSR set to: 1
 17163  01747C  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17164  01747E  D7FA               	goto	l1683
 17165  017480                     u13070:
 17166                           
 17167                           ; BSR set to: 1
 17168                           
 17169                           ; BSR set to: 1
 17170                           
 17171                           ; BSR set to: 1
 17172  017480  5119               	movf	___awmod@divisor& (0+255),w,b
 17173  017482  5D17               	subwf	___awmod@dividend& (0+255),w,b
 17174  017484  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17175  017486  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 17176  017488  A0D8               	btfss	status,0,c
 17177  01748A  D004               	goto	l1686
 17178                           
 17179                           ; BSR set to: 1
 17180  01748C  5119               	movf	___awmod@divisor& (0+255),w,b
 17181  01748E  5F17               	subwf	___awmod@dividend& (0+255),f,b
 17182  017490  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17183  017492  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 17184  017494                     l1686:
 17185                           
 17186                           ; BSR set to: 1
 17187                           
 17188                           ; BSR set to: 1
 17189  017494  90D8               	bcf	status,0,c
 17190  017496  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 17191  017498  3319               	rrcf	___awmod@divisor& (0+255),f,b
 17192                           
 17193                           ; BSR set to: 1
 17194  01749A  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 17195  01749C  D7F1               	goto	u13070
 17196  01749E                     l1687:
 17197                           
 17198                           ; BSR set to: 1
 17199                           
 17200                           ; BSR set to: 1
 17201                           
 17202                           ; BSR set to: 1
 17203  01749E  511C               	movf	___awmod@sign& (0+255),w,b
 17204  0174A0  B4D8               	btfsc	status,2,c
 17205  0174A2  D004               	goto	l1688
 17206                           
 17207                           ; BSR set to: 1
 17208  0174A4  6D17               	negf	___awmod@dividend& (0+255),b
 17209  0174A6  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17210  0174A8  B0D8               	btfsc	status,0,c
 17211  0174AA  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17212  0174AC                     l1688:
 17213                           
 17214                           ; BSR set to: 1
 17215                           
 17216                           ; BSR set to: 1
 17217  0174AC  C117  F117         	movff	___awmod@dividend,?___awmod
 17218  0174B0  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 17219  0174B4  0012               	return	
 17220  0174B6                     __end_of___awmod:
 17221                           	opt stack 0
 17222                           tblptru	equ	0xFF8
 17223                           tblptrh	equ	0xFF7
 17224                           tblptrl	equ	0xFF6
 17225                           tablat	equ	0xFF5
 17226                           prodh	equ	0xFF4
 17227                           prodl	equ	0xFF3
 17228                           intcon	equ	0xFF2
 17229                           indf0	equ	0xFEF
 17230                           postinc0	equ	0xFEE
 17231                           fsr0h	equ	0xFEA
 17232                           fsr0l	equ	0xFE9
 17233                           wreg	equ	0xFE8
 17234                           indf1	equ	0xFE7
 17235                           postdec1	equ	0xFE5
 17236                           plusw1	equ	0xFE3
 17237                           fsr1h	equ	0xFE2
 17238                           fsr1l	equ	0xFE1
 17239                           indf2	equ	0xFDF
 17240                           postinc2	equ	0xFDE
 17241                           postdec2	equ	0xFDD
 17242                           plusw2	equ	0xFDB
 17243                           fsr2h	equ	0xFDA
 17244                           fsr2l	equ	0xFD9
 17245                           status	equ	0xFD8
 17246                           
 17247 ;; *************** function ___awdiv *****************
 17248 ;; Defined at:
 17249 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 17250 ;; Parameters:    Size  Location     Type
 17251 ;;  dividend        2   29[BANK1 ] int 
 17252 ;;  divisor         2   31[BANK1 ] int 
 17253 ;; Auto vars:     Size  Location     Type
 17254 ;;  quotient        2   35[BANK1 ] int 
 17255 ;;  sign            1   34[BANK1 ] unsigned char 
 17256 ;;  counter         1   33[BANK1 ] unsigned char 
 17257 ;; Return value:  Size  Location     Type
 17258 ;;                  2   29[BANK1 ] int 
 17259 ;; Registers used:
 17260 ;;		wreg, status,2, status,0
 17261 ;; Tracked objects:
 17262 ;;		On entry : 0/0
 17263 ;;		On exit  : 0/0
 17264 ;;		Unchanged: 0/0
 17265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17266 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17267 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17269 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17270 ;;Total ram usage:        8 bytes
 17271 ;; Hardware stack levels used:    1
 17272 ;; Hardware stack levels required when called:   13
 17273 ;; This function calls:
 17274 ;;		Nothing
 17275 ;; This function is called by:
 17276 ;;		_fround
 17277 ;;		_scale
 17278 ;;		_printf
 17279 ;; This function uses a non-reentrant model
 17280 ;;
 17281                           
 17282                           	psect	text36
 17283  01703E                     __ptext36:
 17284                           	opt stack 0
 17285  01703E                     ___awdiv:
 17286                           	opt stack 13
 17287                           
 17288                           ; BSR set to: 1
 17289                           ;incstack = 0
 17290  01703E  0E00               	movlw	0
 17291  017040  0101               	movlb	1	; () banked
 17292  017042  6F22               	movwf	___awdiv@sign& (0+255),b
 17293                           
 17294                           ; BSR set to: 1
 17295  017044  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17296  017046  D006               	goto	l1666
 17297                           
 17298                           ; BSR set to: 1
 17299  017048  6D1F               	negf	___awdiv@divisor& (0+255),b
 17300  01704A  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 17301  01704C  B0D8               	btfsc	status,0,c
 17302  01704E  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 17303                           
 17304                           ; BSR set to: 1
 17305  017050  0E01               	movlw	1
 17306  017052  6F22               	movwf	___awdiv@sign& (0+255),b
 17307  017054                     l1666:
 17308                           
 17309                           ; BSR set to: 1
 17310                           
 17311                           ; BSR set to: 1
 17312  017054  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17313  017056  D006               	goto	l1667
 17314                           
 17315                           ; BSR set to: 1
 17316  017058  6D1D               	negf	___awdiv@dividend& (0+255),b
 17317  01705A  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 17318  01705C  B0D8               	btfsc	status,0,c
 17319  01705E  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 17320                           
 17321                           ; BSR set to: 1
 17322  017060  0E01               	movlw	1
 17323  017062  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 17324  017064                     l1667:
 17325                           
 17326                           ; BSR set to: 1
 17327                           
 17328                           ; BSR set to: 1
 17329  017064  0E00               	movlw	0
 17330  017066  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 17331  017068  0E00               	movlw	0
 17332  01706A  6F23               	movwf	___awdiv@quotient& (0+255),b
 17333                           
 17334                           ; BSR set to: 1
 17335  01706C  511F               	movf	___awdiv@divisor& (0+255),w,b
 17336  01706E  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 17337  017070  B4D8               	btfsc	status,2,c
 17338  017072  D01C               	goto	l1674
 17339                           
 17340                           ; BSR set to: 1
 17341  017074  0E01               	movlw	1
 17342  017076  6F21               	movwf	___awdiv@counter& (0+255),b
 17343  017078  D004               	goto	l1669
 17344  01707A                     
 17345                           ; BSR set to: 1
 17346                           
 17347                           ; BSR set to: 1
 17348  01707A  90D8               	bcf	status,0,c
 17349  01707C  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 17350  01707E  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17351  017080  2B21               	incf	___awdiv@counter& (0+255),f,b
 17352  017082                     l1669:
 17353                           
 17354                           ; BSR set to: 1
 17355                           
 17356                           ; BSR set to: 1
 17357  017082  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17358  017084  D7FA               	goto	l1670
 17359  017086                     u13010:
 17360                           
 17361                           ; BSR set to: 1
 17362                           
 17363                           ; BSR set to: 1
 17364                           
 17365                           ; BSR set to: 1
 17366  017086  90D8               	bcf	status,0,c
 17367  017088  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 17368  01708A  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 17369                           
 17370                           ; BSR set to: 1
 17371  01708C  511F               	movf	___awdiv@divisor& (0+255),w,b
 17372  01708E  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 17373  017090  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17374  017092  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 17375  017094  A0D8               	btfss	status,0,c
 17376  017096  D005               	goto	l1673
 17377                           
 17378                           ; BSR set to: 1
 17379  017098  511F               	movf	___awdiv@divisor& (0+255),w,b
 17380  01709A  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 17381  01709C  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17382  01709E  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 17383                           
 17384                           ; BSR set to: 1
 17385  0170A0  8123               	bsf	___awdiv@quotient& (0+255),0,b
 17386  0170A2                     l1673:
 17387                           
 17388                           ; BSR set to: 1
 17389                           
 17390                           ; BSR set to: 1
 17391  0170A2  90D8               	bcf	status,0,c
 17392  0170A4  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 17393  0170A6  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 17394                           
 17395                           ; BSR set to: 1
 17396  0170A8  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 17397  0170AA  D7ED               	goto	u13010
 17398  0170AC                     l1674:
 17399                           
 17400                           ; BSR set to: 1
 17401                           
 17402                           ; BSR set to: 1
 17403                           
 17404                           ; BSR set to: 1
 17405  0170AC  5122               	movf	___awdiv@sign& (0+255),w,b
 17406  0170AE  B4D8               	btfsc	status,2,c
 17407  0170B0  D004               	goto	l1675
 17408                           
 17409                           ; BSR set to: 1
 17410  0170B2  6D23               	negf	___awdiv@quotient& (0+255),b
 17411  0170B4  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17412  0170B6  B0D8               	btfsc	status,0,c
 17413  0170B8  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17414  0170BA                     l1675:
 17415                           
 17416                           ; BSR set to: 1
 17417                           
 17418                           ; BSR set to: 1
 17419  0170BA  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 17420  0170BE  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 17421  0170C2  0012               	return	
 17422  0170C4                     __end_of___awdiv:
 17423                           	opt stack 0
 17424                           tblptru	equ	0xFF8
 17425                           tblptrh	equ	0xFF7
 17426                           tblptrl	equ	0xFF6
 17427                           tablat	equ	0xFF5
 17428                           prodh	equ	0xFF4
 17429                           prodl	equ	0xFF3
 17430                           intcon	equ	0xFF2
 17431                           indf0	equ	0xFEF
 17432                           postinc0	equ	0xFEE
 17433                           fsr0h	equ	0xFEA
 17434                           fsr0l	equ	0xFE9
 17435                           wreg	equ	0xFE8
 17436                           indf1	equ	0xFE7
 17437                           postdec1	equ	0xFE5
 17438                           plusw1	equ	0xFE3
 17439                           fsr1h	equ	0xFE2
 17440                           fsr1l	equ	0xFE1
 17441                           indf2	equ	0xFDF
 17442                           postinc2	equ	0xFDE
 17443                           postdec2	equ	0xFDD
 17444                           plusw2	equ	0xFDB
 17445                           fsr2h	equ	0xFDA
 17446                           fsr2l	equ	0xFD9
 17447                           status	equ	0xFD8
 17448                           
 17449 ;; *************** function __tdiv_to_l_ *****************
 17450 ;; Defined at:
 17451 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 17452 ;; Parameters:    Size  Location     Type
 17453 ;;  f1              3   23[BANK1 ] float 
 17454 ;;  f2              3   26[BANK1 ] float 
 17455 ;; Auto vars:     Size  Location     Type
 17456 ;;  quot            4   32[BANK1 ] unsigned long 
 17457 ;;  exp1            1   37[BANK1 ] unsigned char 
 17458 ;;  cntr            1   36[BANK1 ] unsigned char 
 17459 ;; Return value:  Size  Location     Type
 17460 ;;                  4   23[BANK1 ] unsigned long 
 17461 ;; Registers used:
 17462 ;;		wreg, status,2, status,0
 17463 ;; Tracked objects:
 17464 ;;		On entry : 0/0
 17465 ;;		On exit  : 0/0
 17466 ;;		Unchanged: 0/0
 17467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17468 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17469 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17470 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17471 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17472 ;;Total ram usage:       15 bytes
 17473 ;; Hardware stack levels used:    1
 17474 ;; Hardware stack levels required when called:   13
 17475 ;; This function calls:
 17476 ;;		Nothing
 17477 ;; This function is called by:
 17478 ;;		_printf
 17479 ;; This function uses a non-reentrant model
 17480 ;;
 17481                           
 17482                           	psect	text37
 17483  015F8A                     __ptext37:
 17484                           	opt stack 0
 17485  015F8A                     __tdiv_to_l_:
 17486                           	opt stack 14
 17487                           
 17488                           ; BSR set to: 1
 17489                           ;incstack = 0
 17490  015F8A  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 17491  015F8E  0101               	movlb	1	; () banked
 17492  015F90  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17493  015F92  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17494  015F94  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17495  015F96  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17496  015F98  E301               	bnc	u13241
 17497  015F9A  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17498  015F9C                     u13241:
 17499  015F9C  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 17500  015F9E  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 17501  015FA0  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17502  015FA2  A4D8               	btfss	status,2,c
 17503  015FA4  D009               	goto	l1814
 17504                           
 17505                           ; BSR set to: 1
 17506  015FA6  0E00               	movlw	0
 17507  015FA8  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17508  015FAA  0E00               	movlw	0
 17509  015FAC  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17510  015FAE  0E00               	movlw	0
 17511  015FB0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17512  015FB2  0E00               	movlw	0
 17513  015FB4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17514                           
 17515                           ; BSR set to: 1
 17516  015FB6  0012               	return	
 17517  015FB8                     l1814:
 17518                           
 17519                           ; BSR set to: 1
 17520                           
 17521                           ; BSR set to: 1
 17522  015FB8  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 17523  015FBC  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17524  015FBE  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17525  015FC0  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17526  015FC2  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17527  015FC4  E301               	bnc	u13261
 17528  015FC6  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17529  015FC8                     u13261:
 17530  015FC8  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 17531  015FCA  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17532  015FCC  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17533  015FCE  A4D8               	btfss	status,2,c
 17534  015FD0  D009               	goto	l1816
 17535                           
 17536                           ; BSR set to: 1
 17537  015FD2  0E00               	movlw	0
 17538  015FD4  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17539  015FD6  0E00               	movlw	0
 17540  015FD8  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17541  015FDA  0E00               	movlw	0
 17542  015FDC  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17543  015FDE  0E00               	movlw	0
 17544  015FE0  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17545                           
 17546                           ; BSR set to: 1
 17547  015FE2  0012               	return	
 17548  015FE4                     l1816:
 17549                           
 17550                           ; BSR set to: 1
 17551                           
 17552                           ; BSR set to: 1
 17553  015FE4  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 17554                           
 17555                           ; BSR set to: 1
 17556  015FE6  0EFF               	movlw	255
 17557  015FE8  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 17558  015FEA  0EFF               	movlw	255
 17559  015FEC  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17560  015FEE  0E00               	movlw	0
 17561  015FF0  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17562  015FF2  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 17563                           
 17564                           ; BSR set to: 1
 17565  015FF4  0EFF               	movlw	255
 17566  015FF6  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 17567  015FF8  0EFF               	movlw	255
 17568  015FFA  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 17569  015FFC  0E00               	movlw	0
 17570  015FFE  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 17571                           
 17572                           ; BSR set to: 1
 17573  016000  0E00               	movlw	0
 17574  016002  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 17575  016004  0E00               	movlw	0
 17576  016006  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 17577  016008  0E00               	movlw	0
 17578  01600A  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 17579  01600C  0E00               	movlw	0
 17580  01600E  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 17581                           
 17582                           ; BSR set to: 1
 17583  016010  0E7F               	movlw	127
 17584  016012  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17585                           
 17586                           ; BSR set to: 1
 17587  016014  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17588  016016  0F98               	addlw	152
 17589  016018  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17590                           
 17591                           ; BSR set to: 1
 17592  01601A  0E18               	movlw	24
 17593  01601C  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17594  01601E                     l1817:
 17595                           
 17596                           ; BSR set to: 1
 17597  01601E  90D8               	bcf	status,0,c
 17598  016020  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17599  016022  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17600  016024  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17601  016026  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17602                           
 17603                           ; BSR set to: 1
 17604  016028  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17605  01602A  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 17606  01602C  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17607  01602E  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17608  016030  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17609  016032  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 17610  016034  A0D8               	btfss	status,0,c
 17611  016036  D007               	goto	l1818
 17612                           
 17613                           ; BSR set to: 1
 17614  016038  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17615  01603A  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 17616  01603C  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17617  01603E  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17618  016040  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17619  016042  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17620                           
 17621                           ; BSR set to: 1
 17622  016044  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 17623  016046                     l1818:
 17624                           
 17625                           ; BSR set to: 1
 17626  016046  90D8               	bcf	status,0,c
 17627  016048  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 17628  01604A  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17629  01604C  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17630                           
 17631                           ; BSR set to: 1
 17632  01604E  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 17633  016050  D7E6               	goto	l1817
 17634                           
 17635                           ; BSR set to: 1
 17636                           
 17637                           ; BSR set to: 1
 17638  016052  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 17639  016054  D016               	goto	l1820
 17640                           
 17641                           ; BSR set to: 1
 17642  016056  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17643  016058  0A80               	xorlw	128
 17644  01605A  0F97               	addlw	151
 17645  01605C  B0D8               	btfsc	status,0,c
 17646  01605E  D009               	goto	l1821
 17647                           
 17648                           ; BSR set to: 1
 17649  016060  0E00               	movlw	0
 17650  016062  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17651  016064  0E00               	movlw	0
 17652  016066  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17653  016068  0E00               	movlw	0
 17654  01606A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17655  01606C  0E00               	movlw	0
 17656  01606E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17657                           
 17658                           ; BSR set to: 1
 17659  016070  0012               	return	
 17660  016072                     l1821:
 17661                           
 17662                           ; BSR set to: 1
 17663                           
 17664                           ; BSR set to: 1
 17665                           
 17666                           ; BSR set to: 1
 17667  016072  90D8               	bcf	status,0,c
 17668  016074  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17669  016076  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17670  016078  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17671  01607A  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 17672                           
 17673                           ; BSR set to: 1
 17674  01607C  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 17675  01607E  D7F9               	goto	l1821
 17676                           
 17677                           ; BSR set to: 1
 17678  016080  D015               	goto	u13320
 17679  016082                     l1820:
 17680                           
 17681                           ; BSR set to: 1
 17682                           
 17683                           ; BSR set to: 1
 17684  016082  0E17               	movlw	23
 17685  016084  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 17686  016086  D00F               	goto	l1826
 17687                           
 17688                           ; BSR set to: 1
 17689  016088  0E00               	movlw	0
 17690  01608A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17691  01608C  0E00               	movlw	0
 17692  01608E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17693  016090  0E00               	movlw	0
 17694  016092  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17695  016094  0E00               	movlw	0
 17696  016096  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17697                           
 17698                           ; BSR set to: 1
 17699  016098  0012               	return	
 17700  01609A                     
 17701                           ; BSR set to: 1
 17702                           
 17703                           ; BSR set to: 1
 17704  01609A  90D8               	bcf	status,0,c
 17705  01609C  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17706  01609E  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17707  0160A0  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17708  0160A2  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17709  0160A4  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 17710  0160A6                     l1826:
 17711                           
 17712                           ; BSR set to: 1
 17713                           
 17714                           ; BSR set to: 1
 17715  0160A6  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17716  0160A8  A4D8               	btfss	status,2,c
 17717  0160AA  D7F7               	goto	l1827
 17718  0160AC                     u13320:
 17719                           
 17720                           ; BSR set to: 1
 17721                           
 17722                           ; BSR set to: 1
 17723  0160AC  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 17724  0160B0  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 17725  0160B4  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 17726  0160B8  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 17727                           
 17728                           ; BSR set to: 1
 17729  0160BC  0012               	return		;funcret
 17730  0160BE                     __end_of__tdiv_to_l_:
 17731                           	opt stack 0
 17732                           tblptru	equ	0xFF8
 17733                           tblptrh	equ	0xFF7
 17734                           tblptrl	equ	0xFF6
 17735                           tablat	equ	0xFF5
 17736                           prodh	equ	0xFF4
 17737                           prodl	equ	0xFF3
 17738                           intcon	equ	0xFF2
 17739                           indf0	equ	0xFEF
 17740                           postinc0	equ	0xFEE
 17741                           fsr0h	equ	0xFEA
 17742                           fsr0l	equ	0xFE9
 17743                           wreg	equ	0xFE8
 17744                           indf1	equ	0xFE7
 17745                           postdec1	equ	0xFE5
 17746                           plusw1	equ	0xFE3
 17747                           fsr1h	equ	0xFE2
 17748                           fsr1l	equ	0xFE1
 17749                           indf2	equ	0xFDF
 17750                           postinc2	equ	0xFDE
 17751                           postdec2	equ	0xFDD
 17752                           plusw2	equ	0xFDB
 17753                           fsr2h	equ	0xFDA
 17754                           fsr2l	equ	0xFD9
 17755                           status	equ	0xFD8
 17756                           
 17757 ;; *************** function __div_to_l_ *****************
 17758 ;; Defined at:
 17759 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 17760 ;; Parameters:    Size  Location     Type
 17761 ;;  f1              4   23[BANK1 ] unsigned long 
 17762 ;;  f2              4   27[BANK1 ] unsigned long 
 17763 ;; Auto vars:     Size  Location     Type
 17764 ;;  quot            4   31[BANK1 ] unsigned long 
 17765 ;;  exp1            1   36[BANK1 ] unsigned char 
 17766 ;;  cntr            1   35[BANK1 ] unsigned char 
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  4   23[BANK1 ] unsigned long 
 17769 ;; Registers used:
 17770 ;;		wreg, status,2, status,0
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/0
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17776 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17777 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17779 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17780 ;;Total ram usage:       14 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:   13
 17783 ;; This function calls:
 17784 ;;		Nothing
 17785 ;; This function is called by:
 17786 ;;		_printf
 17787 ;; This function uses a non-reentrant model
 17788 ;;
 17789                           
 17790                           	psect	text38
 17791  0161F0                     __ptext38:
 17792                           	opt stack 0
 17793  0161F0                     __div_to_l_:
 17794                           	opt stack 14
 17795                           
 17796                           ; BSR set to: 1
 17797                           ;incstack = 0
 17798  0161F0  0101               	movlb	1	; () banked
 17799  0161F2  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 17800  0161F4  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 17801  0161F6  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 17802  0161F8  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 17803  0161FA  A4D8               	btfss	status,2,c
 17804  0161FC  D009               	goto	l1710
 17805                           
 17806                           ; BSR set to: 1
 17807  0161FE  0E00               	movlw	0
 17808  016200  6F17               	movwf	?__div_to_l_& (0+255),b
 17809  016202  0E00               	movlw	0
 17810  016204  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17811  016206  0E00               	movlw	0
 17812  016208  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17813  01620A  0E00               	movlw	0
 17814  01620C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17815                           
 17816                           ; BSR set to: 1
 17817  01620E  0012               	return	
 17818  016210                     l1710:
 17819                           
 17820                           ; BSR set to: 1
 17821                           
 17822                           ; BSR set to: 1
 17823  016210  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 17824  016212  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 17825  016214  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 17826  016216  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 17827  016218  A4D8               	btfss	status,2,c
 17828  01621A  D009               	goto	l1712
 17829                           
 17830                           ; BSR set to: 1
 17831  01621C  0E00               	movlw	0
 17832  01621E  6F17               	movwf	?__div_to_l_& (0+255),b
 17833  016220  0E00               	movlw	0
 17834  016222  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17835  016224  0E00               	movlw	0
 17836  016226  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17837  016228  0E00               	movlw	0
 17838  01622A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17839                           
 17840                           ; BSR set to: 1
 17841  01622C  0012               	return	
 17842  01622E                     l1712:
 17843                           
 17844                           ; BSR set to: 1
 17845                           
 17846                           ; BSR set to: 1
 17847  01622E  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 17848                           
 17849                           ; BSR set to: 1
 17850  016230  0EFF               	movlw	255
 17851  016232  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 17852  016234  0EFF               	movlw	255
 17853  016236  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 17854  016238  0EFF               	movlw	255
 17855  01623A  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 17856  01623C  0E00               	movlw	0
 17857  01623E  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 17858                           
 17859                           ; BSR set to: 1
 17860  016240  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 17861  016242  0EFF               	movlw	255
 17862  016244  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 17863  016246  0EFF               	movlw	255
 17864  016248  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 17865  01624A  0EFF               	movlw	255
 17866  01624C  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 17867  01624E  0E00               	movlw	0
 17868  016250  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 17869                           
 17870                           ; BSR set to: 1
 17871  016252  0E00               	movlw	0
 17872  016254  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 17873  016256  0E00               	movlw	0
 17874  016258  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 17875  01625A  0E00               	movlw	0
 17876  01625C  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 17877  01625E  0E00               	movlw	0
 17878  016260  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 17879                           
 17880                           ; BSR set to: 1
 17881  016262  0E7F               	movlw	127
 17882  016264  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 17883                           
 17884                           ; BSR set to: 1
 17885  016266  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 17886  016268  0FA0               	addlw	160
 17887  01626A  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 17888                           
 17889                           ; BSR set to: 1
 17890  01626C  0E20               	movlw	32
 17891  01626E  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 17892  016270                     
 17893                           ; BSR set to: 1
 17894                           
 17895                           ; BSR set to: 1
 17896  016270  90D8               	bcf	status,0,c
 17897  016272  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 17898  016274  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 17899  016276  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 17900  016278  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 17901                           
 17902                           ; BSR set to: 1
 17903  01627A  511B               	movf	__div_to_l_@f2& (0+255),w,b
 17904  01627C  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 17905  01627E  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 17906  016280  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 17907  016282  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 17908  016284  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 17909  016286  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 17910  016288  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 17911  01628A  A0D8               	btfss	status,0,c
 17912  01628C  D009               	goto	l1714
 17913                           
 17914                           ; BSR set to: 1
 17915  01628E  511B               	movf	__div_to_l_@f2& (0+255),w,b
 17916  016290  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 17917  016292  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 17918  016294  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 17919  016296  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 17920  016298  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 17921  01629A  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 17922  01629C  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 17923                           
 17924                           ; BSR set to: 1
 17925  01629E  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 17926  0162A0                     l1714:
 17927                           
 17928                           ; BSR set to: 1
 17929                           
 17930                           ; BSR set to: 1
 17931  0162A0  90D8               	bcf	status,0,c
 17932  0162A2  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 17933  0162A4  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 17934  0162A6  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 17935  0162A8  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 17936                           
 17937                           ; BSR set to: 1
 17938  0162AA  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 17939  0162AC  D7E1               	goto	l1713
 17940                           
 17941                           ; BSR set to: 1
 17942                           
 17943                           ; BSR set to: 1
 17944  0162AE  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 17945  0162B0  D016               	goto	l1716
 17946                           
 17947                           ; BSR set to: 1
 17948  0162B2  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 17949  0162B4  0A80               	xorlw	128
 17950  0162B6  0F9F               	addlw	159
 17951  0162B8  B0D8               	btfsc	status,0,c
 17952  0162BA  D009               	goto	l1717
 17953                           
 17954                           ; BSR set to: 1
 17955  0162BC  0E00               	movlw	0
 17956  0162BE  6F17               	movwf	?__div_to_l_& (0+255),b
 17957  0162C0  0E00               	movlw	0
 17958  0162C2  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17959  0162C4  0E00               	movlw	0
 17960  0162C6  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17961  0162C8  0E00               	movlw	0
 17962  0162CA  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17963                           
 17964                           ; BSR set to: 1
 17965  0162CC  0012               	return	
 17966  0162CE                     l1717:
 17967                           
 17968                           ; BSR set to: 1
 17969                           
 17970                           ; BSR set to: 1
 17971                           
 17972                           ; BSR set to: 1
 17973  0162CE  90D8               	bcf	status,0,c
 17974  0162D0  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 17975  0162D2  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 17976  0162D4  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 17977  0162D6  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 17978                           
 17979                           ; BSR set to: 1
 17980  0162D8  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 17981  0162DA  D7F9               	goto	l1717
 17982                           
 17983                           ; BSR set to: 1
 17984  0162DC  D015               	goto	u13390
 17985  0162DE                     l1716:
 17986                           
 17987                           ; BSR set to: 1
 17988                           
 17989                           ; BSR set to: 1
 17990  0162DE  0E1F               	movlw	31
 17991  0162E0  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 17992  0162E2  D00F               	goto	l1722
 17993                           
 17994                           ; BSR set to: 1
 17995  0162E4  0E00               	movlw	0
 17996  0162E6  6F17               	movwf	?__div_to_l_& (0+255),b
 17997  0162E8  0E00               	movlw	0
 17998  0162EA  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17999  0162EC  0E00               	movlw	0
 18000  0162EE  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18001  0162F0  0E00               	movlw	0
 18002  0162F2  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18003                           
 18004                           ; BSR set to: 1
 18005  0162F4  0012               	return	
 18006  0162F6                     
 18007                           ; BSR set to: 1
 18008                           
 18009                           ; BSR set to: 1
 18010  0162F6  90D8               	bcf	status,0,c
 18011  0162F8  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 18012  0162FA  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18013  0162FC  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18014  0162FE  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18015  016300  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 18016  016302                     l1722:
 18017                           
 18018                           ; BSR set to: 1
 18019                           
 18020                           ; BSR set to: 1
 18021  016302  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 18022  016304  A4D8               	btfss	status,2,c
 18023  016306  D7F7               	goto	l1723
 18024  016308                     u13390:
 18025                           
 18026                           ; BSR set to: 1
 18027                           
 18028                           ; BSR set to: 1
 18029  016308  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 18030  01630C  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 18031  016310  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 18032  016314  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 18033                           
 18034                           ; BSR set to: 1
 18035  016318  0012               	return		;funcret
 18036  01631A                     __end_of__div_to_l_:
 18037                           	opt stack 0
 18038                           tblptru	equ	0xFF8
 18039                           tblptrh	equ	0xFF7
 18040                           tblptrl	equ	0xFF6
 18041                           tablat	equ	0xFF5
 18042                           prodh	equ	0xFF4
 18043                           prodl	equ	0xFF3
 18044                           intcon	equ	0xFF2
 18045                           indf0	equ	0xFEF
 18046                           postinc0	equ	0xFEE
 18047                           fsr0h	equ	0xFEA
 18048                           fsr0l	equ	0xFE9
 18049                           wreg	equ	0xFE8
 18050                           indf1	equ	0xFE7
 18051                           postdec1	equ	0xFE5
 18052                           plusw1	equ	0xFE3
 18053                           fsr1h	equ	0xFE2
 18054                           fsr1l	equ	0xFE1
 18055                           indf2	equ	0xFDF
 18056                           postinc2	equ	0xFDE
 18057                           postdec2	equ	0xFDD
 18058                           plusw2	equ	0xFDB
 18059                           fsr2h	equ	0xFDA
 18060                           fsr2l	equ	0xFD9
 18061                           status	equ	0xFD8
 18062                           
 18063 ;; *************** function ___xxtofl *****************
 18064 ;; Defined at:
 18065 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 18066 ;; Parameters:    Size  Location     Type
 18067 ;;  sign            1    wreg     unsigned char 
 18068 ;;  val             4   23[BANK1 ] long 
 18069 ;; Auto vars:     Size  Location     Type
 18070 ;;  sign            1   31[BANK1 ] unsigned char 
 18071 ;;  arg             4   33[BANK1 ] unsigned long 
 18072 ;;  exp             1   32[BANK1 ] unsigned char 
 18073 ;; Return value:  Size  Location     Type
 18074 ;;                  4   23[BANK1 ] unsigned char 
 18075 ;; Registers used:
 18076 ;;		wreg, status,2, status,0
 18077 ;; Tracked objects:
 18078 ;;		On entry : 0/0
 18079 ;;		On exit  : 0/0
 18080 ;;		Unchanged: 0/0
 18081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18082 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18083 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18084 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18085 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18086 ;;Total ram usage:       14 bytes
 18087 ;; Hardware stack levels used:    1
 18088 ;; Hardware stack levels required when called:   13
 18089 ;; This function calls:
 18090 ;;		Nothing
 18091 ;; This function is called by:
 18092 ;;		_ringBufferLUT
 18093 ;;		_printf
 18094 ;; This function uses a non-reentrant model
 18095 ;;
 18096                           
 18097                           	psect	text39
 18098  015CE6                     __ptext39:
 18099                           	opt stack 0
 18100  015CE6                     ___xxtofl:
 18101                           	opt stack 14
 18102                           
 18103                           ; BSR set to: 1
 18104                           ;incstack = 0
 18105                           ;___xxtofl@sign stored from wreg
 18106  015CE6  0101               	movlb	1	; () banked
 18107  015CE8  6F1F               	movwf	___xxtofl@sign& (0+255),b
 18108  015CEA  0101               	movlb	1	; () banked
 18109  015CEC  511F               	movf	___xxtofl@sign& (0+255),w,b
 18110  015CEE  A4D8               	btfss	status,2,c
 18111                           
 18112                           ; BSR set to: 1
 18113  015CF0  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 18114  015CF2  D01A               	goto	l2190
 18115                           
 18116                           ; BSR set to: 1
 18117  015CF4  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 18118  015CF8  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 18119  015CFC  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 18120  015D00  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 18121  015D04  1F1B               	comf	??___xxtofl& (0+255),f,b
 18122  015D06  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 18123  015D08  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 18124  015D0A  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 18125  015D0C  2B1B               	incf	??___xxtofl& (0+255),f,b
 18126  015D0E  0E00               	movlw	0
 18127  015D10  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 18128  015D12  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 18129  015D14  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 18130  015D16  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 18131  015D1A  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 18132  015D1E  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 18133  015D22  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 18134  015D26  D008               	goto	l2191
 18135  015D28                     l2190:
 18136                           
 18137                           ; BSR set to: 1
 18138  015D28  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 18139  015D2C  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 18140  015D30  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 18141  015D34  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 18142  015D38                     l2191:
 18143                           
 18144                           ; BSR set to: 1
 18145                           
 18146                           ; BSR set to: 1
 18147  015D38  5117               	movf	___xxtofl@val& (0+255),w,b
 18148  015D3A  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 18149  015D3C  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 18150  015D3E  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 18151  015D40  A4D8               	btfss	status,2,c
 18152  015D42  D009               	goto	l2192
 18153                           
 18154                           ; BSR set to: 1
 18155  015D44  0E00               	movlw	0
 18156  015D46  6F17               	movwf	?___xxtofl& (0+255),b
 18157  015D48  0E00               	movlw	0
 18158  015D4A  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 18159  015D4C  0E00               	movlw	0
 18160  015D4E  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 18161  015D50  0E00               	movlw	0
 18162  015D52  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 18163                           
 18164                           ; BSR set to: 1
 18165  015D54  0012               	return	
 18166  015D56                     l2192:
 18167                           
 18168                           ; BSR set to: 1
 18169                           
 18170                           ; BSR set to: 1
 18171  015D56  0E96               	movlw	150
 18172  015D58  6F20               	movwf	___xxtofl@exp& (0+255),b
 18173  015D5A  D006               	goto	l2194
 18174  015D5C                     
 18175                           ; BSR set to: 1
 18176                           
 18177                           ; BSR set to: 1
 18178  015D5C  2B20               	incf	___xxtofl@exp& (0+255),f,b
 18179  015D5E  90D8               	bcf	status,0,c
 18180  015D60  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 18181  015D62  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 18182  015D64  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 18183  015D66  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 18184  015D68                     l2194:
 18185                           
 18186                           ; BSR set to: 1
 18187                           
 18188                           ; BSR set to: 1
 18189  015D68  0E00               	movlw	0
 18190  015D6A  1521               	andwf	___xxtofl@arg& (0+255),w,b
 18191  015D6C  6F1B               	movwf	??___xxtofl& (0+255),b
 18192  015D6E  0E00               	movlw	0
 18193  015D70  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 18194  015D72  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 18195  015D74  0E00               	movlw	0
 18196  015D76  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 18197  015D78  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 18198  015D7A  0EFE               	movlw	254
 18199  015D7C  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 18200  015D7E  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 18201  015D80  511B               	movf	??___xxtofl& (0+255),w,b
 18202  015D82  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 18203  015D84  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 18204  015D86  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 18205  015D88  B4D8               	btfsc	status,2,c
 18206  015D8A  D00D               	goto	l2197
 18207  015D8C  D7E7               	goto	l2195
 18208  015D8E                     
 18209                           ; BSR set to: 1
 18210                           
 18211                           ; BSR set to: 1
 18212  015D8E  2B20               	incf	___xxtofl@exp& (0+255),f,b
 18213                           
 18214                           ; BSR set to: 1
 18215  015D90  0E01               	movlw	1
 18216  015D92  2721               	addwf	___xxtofl@arg& (0+255),f,b
 18217  015D94  0E00               	movlw	0
 18218  015D96  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 18219  015D98  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 18220  015D9A  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 18221                           
 18222                           ; BSR set to: 1
 18223  015D9C  90D8               	bcf	status,0,c
 18224  015D9E  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 18225  015DA0  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 18226  015DA2  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 18227  015DA4  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 18228  015DA6                     l2197:
 18229                           
 18230                           ; BSR set to: 1
 18231  015DA6  0E00               	movlw	0
 18232  015DA8  1521               	andwf	___xxtofl@arg& (0+255),w,b
 18233  015DAA  6F1B               	movwf	??___xxtofl& (0+255),b
 18234  015DAC  0E00               	movlw	0
 18235  015DAE  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 18236  015DB0  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 18237  015DB2  0E00               	movlw	0
 18238  015DB4  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 18239  015DB6  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 18240  015DB8  0EFF               	movlw	255
 18241  015DBA  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 18242  015DBC  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 18243  015DBE  511B               	movf	??___xxtofl& (0+255),w,b
 18244  015DC0  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 18245  015DC2  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 18246  015DC4  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 18247  015DC6  B4D8               	btfsc	status,2,c
 18248  015DC8  D007               	goto	l2200
 18249  015DCA  D7E1               	goto	l2198
 18250  015DCC                     
 18251                           ; BSR set to: 1
 18252                           
 18253                           ; BSR set to: 1
 18254  015DCC  0720               	decf	___xxtofl@exp& (0+255),f,b
 18255  015DCE  90D8               	bcf	status,0,c
 18256  015DD0  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 18257  015DD2  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 18258  015DD4  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 18259  015DD6  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 18260  015DD8                     l2200:
 18261                           
 18262                           ; BSR set to: 1
 18263                           
 18264                           ; BSR set to: 1
 18265  015DD8  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 18266  015DDA  D003               	goto	u13710
 18267                           
 18268                           ; BSR set to: 1
 18269  015DDC  0E02               	movlw	2
 18270  015DDE  6120               	cpfslt	___xxtofl@exp& (0+255),b
 18271  015DE0  D7F5               	goto	l2201
 18272  015DE2                     u13710:
 18273                           
 18274                           ; BSR set to: 1
 18275                           
 18276                           ; BSR set to: 1
 18277  015DE2  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 18278  015DE4  D008               	goto	l2205
 18279                           
 18280                           ; BSR set to: 1
 18281  015DE6  0EFF               	movlw	255
 18282  015DE8  1721               	andwf	___xxtofl@arg& (0+255),f,b
 18283  015DEA  0EFF               	movlw	255
 18284  015DEC  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 18285  015DEE  0E7F               	movlw	127
 18286  015DF0  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 18287  015DF2  0EFF               	movlw	255
 18288  015DF4  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 18289  015DF6                     l2205:
 18290                           
 18291                           ; BSR set to: 1
 18292  015DF6  90D8               	bcf	status,0,c
 18293  015DF8  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 18294  015DFA  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 18295  015DFE  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 18296  015E00  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 18297  015E02  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 18298  015E04  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 18299  015E08  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 18300  015E0A  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 18301  015E0C  6B1B               	clrf	??___xxtofl& (0+255),b
 18302  015E0E  511B               	movf	??___xxtofl& (0+255),w,b
 18303  015E10  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 18304  015E12  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 18305  015E14  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 18306  015E16  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 18307  015E18  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 18308  015E1A  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 18309  015E1C  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 18310                           
 18311                           ; BSR set to: 1
 18312  015E1E  511F               	movf	___xxtofl@sign& (0+255),w,b
 18313  015E20  A4D8               	btfss	status,2,c
 18314                           
 18315                           ; BSR set to: 1
 18316  015E22  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 18317  015E24  D001               	goto	l2206
 18318                           
 18319                           ; BSR set to: 1
 18320  015E26  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 18321  015E28                     l2206:
 18322                           
 18323                           ; BSR set to: 1
 18324                           
 18325                           ; BSR set to: 1
 18326  015E28  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 18327  015E2C  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 18328  015E30  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 18329  015E34  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 18330  015E38  0012               	return	
 18331  015E3A                     __end_of___xxtofl:
 18332                           	opt stack 0
 18333                           tblptru	equ	0xFF8
 18334                           tblptrh	equ	0xFF7
 18335                           tblptrl	equ	0xFF6
 18336                           tablat	equ	0xFF5
 18337                           prodh	equ	0xFF4
 18338                           prodl	equ	0xFF3
 18339                           intcon	equ	0xFF2
 18340                           indf0	equ	0xFEF
 18341                           postinc0	equ	0xFEE
 18342                           fsr0h	equ	0xFEA
 18343                           fsr0l	equ	0xFE9
 18344                           wreg	equ	0xFE8
 18345                           indf1	equ	0xFE7
 18346                           postdec1	equ	0xFE5
 18347                           plusw1	equ	0xFE3
 18348                           fsr1h	equ	0xFE2
 18349                           fsr1l	equ	0xFE1
 18350                           indf2	equ	0xFDF
 18351                           postinc2	equ	0xFDE
 18352                           postdec2	equ	0xFDD
 18353                           plusw2	equ	0xFDB
 18354                           fsr2h	equ	0xFDA
 18355                           fsr2l	equ	0xFD9
 18356                           status	equ	0xFD8
 18357                           
 18358 ;; *************** function ___wmul *****************
 18359 ;; Defined at:
 18360 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 18361 ;; Parameters:    Size  Location     Type
 18362 ;;  multiplier      2   23[BANK1 ] unsigned int 
 18363 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 18364 ;; Auto vars:     Size  Location     Type
 18365 ;;  product         2   27[BANK1 ] unsigned int 
 18366 ;; Return value:  Size  Location     Type
 18367 ;;                  2   23[BANK1 ] unsigned int 
 18368 ;; Registers used:
 18369 ;;		wreg, status,2, status,0, prodl, prodh
 18370 ;; Tracked objects:
 18371 ;;		On entry : 0/0
 18372 ;;		On exit  : 0/0
 18373 ;;		Unchanged: 0/0
 18374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18375 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18376 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18378 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18379 ;;Total ram usage:        6 bytes
 18380 ;; Hardware stack levels used:    1
 18381 ;; Hardware stack levels required when called:   13
 18382 ;; This function calls:
 18383 ;;		Nothing
 18384 ;; This function is called by:
 18385 ;;		_ringBufferLUT
 18386 ;;		_printf
 18387 ;;		_atoi
 18388 ;; This function uses a non-reentrant model
 18389 ;;
 18390                           
 18391                           	psect	text40
 18392  017E82                     __ptext40:
 18393                           	opt stack 0
 18394  017E82                     ___wmul:
 18395                           	opt stack 14
 18396                           
 18397                           ; BSR set to: 1
 18398                           ;incstack = 0
 18399  017E82  0101               	movlb	1	; () banked
 18400  017E84  5117               	movf	___wmul@multiplier& (0+255),w,b
 18401  017E86  0319               	mulwf	___wmul@multiplicand& (0+255),b
 18402  017E88  CFF3 F11B          	movff	prodl,___wmul@product
 18403  017E8C  CFF4 F11C          	movff	prodh,___wmul@product+1
 18404  017E90  5117               	movf	___wmul@multiplier& (0+255),w,b
 18405  017E92  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 18406  017E94  50F3               	movf	prodl,w,c
 18407  017E96  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 18408  017E98  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 18409  017E9A  0319               	mulwf	___wmul@multiplicand& (0+255),b
 18410  017E9C  50F3               	movf	prodl,w,c
 18411  017E9E  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 18412                           
 18413                           ; BSR set to: 1
 18414  017EA0  C11B  F117         	movff	___wmul@product,?___wmul
 18415  017EA4  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 18416  017EA8  0012               	return	
 18417  017EAA                     __end_of___wmul:
 18418                           	opt stack 0
 18419                           tblptru	equ	0xFF8
 18420                           tblptrh	equ	0xFF7
 18421                           tblptrl	equ	0xFF6
 18422                           tablat	equ	0xFF5
 18423                           prodh	equ	0xFF4
 18424                           prodl	equ	0xFF3
 18425                           intcon	equ	0xFF2
 18426                           indf0	equ	0xFEF
 18427                           postinc0	equ	0xFEE
 18428                           fsr0h	equ	0xFEA
 18429                           fsr0l	equ	0xFE9
 18430                           wreg	equ	0xFE8
 18431                           indf1	equ	0xFE7
 18432                           postdec1	equ	0xFE5
 18433                           plusw1	equ	0xFE3
 18434                           fsr1h	equ	0xFE2
 18435                           fsr1l	equ	0xFE1
 18436                           indf2	equ	0xFDF
 18437                           postinc2	equ	0xFDE
 18438                           postdec2	equ	0xFDD
 18439                           plusw2	equ	0xFDB
 18440                           fsr2h	equ	0xFDA
 18441                           fsr2l	equ	0xFD9
 18442                           status	equ	0xFD8
 18443                           
 18444 ;; *************** function ___llmod *****************
 18445 ;; Defined at:
 18446 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18447 ;; Parameters:    Size  Location     Type
 18448 ;;  dividend        4   36[BANK1 ] unsigned long 
 18449 ;;  divisor         4   40[BANK1 ] unsigned long 
 18450 ;; Auto vars:     Size  Location     Type
 18451 ;;  counter         1   44[BANK1 ] unsigned char 
 18452 ;; Return value:  Size  Location     Type
 18453 ;;                  4   36[BANK1 ] unsigned long 
 18454 ;; Registers used:
 18455 ;;		wreg, status,2, status,0
 18456 ;; Tracked objects:
 18457 ;;		On entry : 0/0
 18458 ;;		On exit  : 0/0
 18459 ;;		Unchanged: 0/0
 18460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18461 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18462 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18464 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18465 ;;Total ram usage:        9 bytes
 18466 ;; Hardware stack levels used:    1
 18467 ;; Hardware stack levels required when called:   13
 18468 ;; This function calls:
 18469 ;;		Nothing
 18470 ;; This function is called by:
 18471 ;;		_printf
 18472 ;; This function uses a non-reentrant model
 18473 ;;
 18474                           
 18475                           	psect	text41
 18476  017666                     __ptext41:
 18477                           	opt stack 0
 18478  017666                     ___llmod:
 18479                           	opt stack 14
 18480                           
 18481                           ; BSR set to: 1
 18482                           ;incstack = 0
 18483  017666  0101               	movlb	1	; () banked
 18484  017668  5128               	movf	___llmod@divisor& (0+255),w,b
 18485  01766A  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 18486  01766C  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 18487  01766E  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 18488  017670  B4D8               	btfsc	status,2,c
 18489  017672  D024               	goto	l1915
 18490                           
 18491                           ; BSR set to: 1
 18492  017674  0E01               	movlw	1
 18493  017676  6F2C               	movwf	___llmod@counter& (0+255),b
 18494  017678  D006               	goto	l1910
 18495  01767A                     
 18496                           ; BSR set to: 1
 18497                           
 18498                           ; BSR set to: 1
 18499  01767A  90D8               	bcf	status,0,c
 18500  01767C  3728               	rlcf	___llmod@divisor& (0+255),f,b
 18501  01767E  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 18502  017680  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 18503  017682  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 18504  017684  2B2C               	incf	___llmod@counter& (0+255),f,b
 18505  017686                     l1910:
 18506                           
 18507                           ; BSR set to: 1
 18508                           
 18509                           ; BSR set to: 1
 18510  017686  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 18511  017688  D7F8               	goto	l1911
 18512  01768A                     u13630:
 18513                           
 18514                           ; BSR set to: 1
 18515                           
 18516                           ; BSR set to: 1
 18517                           
 18518                           ; BSR set to: 1
 18519  01768A  5128               	movf	___llmod@divisor& (0+255),w,b
 18520  01768C  5D24               	subwf	___llmod@dividend& (0+255),w,b
 18521  01768E  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 18522  017690  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 18523  017692  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18524  017694  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 18525  017696  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18526  017698  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 18527  01769A  A0D8               	btfss	status,0,c
 18528  01769C  D008               	goto	l1914
 18529                           
 18530                           ; BSR set to: 1
 18531  01769E  5128               	movf	___llmod@divisor& (0+255),w,b
 18532  0176A0  5F24               	subwf	___llmod@dividend& (0+255),f,b
 18533  0176A2  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 18534  0176A4  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 18535  0176A6  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18536  0176A8  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 18537  0176AA  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18538  0176AC  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 18539  0176AE                     l1914:
 18540                           
 18541                           ; BSR set to: 1
 18542                           
 18543                           ; BSR set to: 1
 18544  0176AE  90D8               	bcf	status,0,c
 18545  0176B0  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 18546  0176B2  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 18547  0176B4  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 18548  0176B6  3328               	rrcf	___llmod@divisor& (0+255),f,b
 18549                           
 18550                           ; BSR set to: 1
 18551  0176B8  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 18552  0176BA  D7E7               	goto	u13630
 18553  0176BC                     l1915:
 18554                           
 18555                           ; BSR set to: 1
 18556                           
 18557                           ; BSR set to: 1
 18558  0176BC  C124  F124         	movff	___llmod@dividend,?___llmod
 18559  0176C0  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 18560  0176C4  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 18561  0176C8  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 18562                           
 18563                           ; BSR set to: 1
 18564  0176CC  0012               	return		;funcret
 18565  0176CE                     __end_of___llmod:
 18566                           	opt stack 0
 18567                           tblptru	equ	0xFF8
 18568                           tblptrh	equ	0xFF7
 18569                           tblptrl	equ	0xFF6
 18570                           tablat	equ	0xFF5
 18571                           prodh	equ	0xFF4
 18572                           prodl	equ	0xFF3
 18573                           intcon	equ	0xFF2
 18574                           indf0	equ	0xFEF
 18575                           postinc0	equ	0xFEE
 18576                           fsr0h	equ	0xFEA
 18577                           fsr0l	equ	0xFE9
 18578                           wreg	equ	0xFE8
 18579                           indf1	equ	0xFE7
 18580                           postdec1	equ	0xFE5
 18581                           plusw1	equ	0xFE3
 18582                           fsr1h	equ	0xFE2
 18583                           fsr1l	equ	0xFE1
 18584                           indf2	equ	0xFDF
 18585                           postinc2	equ	0xFDE
 18586                           postdec2	equ	0xFDD
 18587                           plusw2	equ	0xFDB
 18588                           fsr2h	equ	0xFDA
 18589                           fsr2l	equ	0xFD9
 18590                           status	equ	0xFD8
 18591                           
 18592 ;; *************** function ___lldiv *****************
 18593 ;; Defined at:
 18594 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18595 ;; Parameters:    Size  Location     Type
 18596 ;;  dividend        4   23[BANK1 ] unsigned long 
 18597 ;;  divisor         4   27[BANK1 ] unsigned long 
 18598 ;; Auto vars:     Size  Location     Type
 18599 ;;  quotient        4   31[BANK1 ] unsigned long 
 18600 ;;  counter         1   35[BANK1 ] unsigned char 
 18601 ;; Return value:  Size  Location     Type
 18602 ;;                  4   23[BANK1 ] unsigned long 
 18603 ;; Registers used:
 18604 ;;		wreg, status,2, status,0
 18605 ;; Tracked objects:
 18606 ;;		On entry : 0/0
 18607 ;;		On exit  : 0/0
 18608 ;;		Unchanged: 0/0
 18609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18610 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18611 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18613 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18614 ;;Total ram usage:       13 bytes
 18615 ;; Hardware stack levels used:    1
 18616 ;; Hardware stack levels required when called:   13
 18617 ;; This function calls:
 18618 ;;		Nothing
 18619 ;; This function is called by:
 18620 ;;		_printf
 18621 ;; This function uses a non-reentrant model
 18622 ;;
 18623                           
 18624                           	psect	text42
 18625  0170C4                     __ptext42:
 18626                           	opt stack 0
 18627  0170C4                     ___lldiv:
 18628                           	opt stack 14
 18629                           
 18630                           ; BSR set to: 1
 18631                           ;incstack = 0
 18632  0170C4  0E00               	movlw	0
 18633  0170C6  0101               	movlb	1	; () banked
 18634  0170C8  6F1F               	movwf	___lldiv@quotient& (0+255),b
 18635  0170CA  0E00               	movlw	0
 18636  0170CC  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 18637  0170CE  0E00               	movlw	0
 18638  0170D0  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 18639  0170D2  0E00               	movlw	0
 18640  0170D4  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 18641                           
 18642                           ; BSR set to: 1
 18643  0170D6  511B               	movf	___lldiv@divisor& (0+255),w,b
 18644  0170D8  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 18645  0170DA  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 18646  0170DC  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 18647  0170DE  B4D8               	btfsc	status,2,c
 18648  0170E0  D02A               	goto	l1905
 18649                           
 18650                           ; BSR set to: 1
 18651  0170E2  0E01               	movlw	1
 18652  0170E4  6F23               	movwf	___lldiv@counter& (0+255),b
 18653  0170E6  D006               	goto	l1900
 18654  0170E8                     
 18655                           ; BSR set to: 1
 18656                           
 18657                           ; BSR set to: 1
 18658  0170E8  90D8               	bcf	status,0,c
 18659  0170EA  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 18660  0170EC  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 18661  0170EE  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 18662  0170F0  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 18663  0170F2  2B23               	incf	___lldiv@counter& (0+255),f,b
 18664  0170F4                     l1900:
 18665                           
 18666                           ; BSR set to: 1
 18667                           
 18668                           ; BSR set to: 1
 18669  0170F4  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 18670  0170F6  D7F8               	goto	l1901
 18671  0170F8                     u13600:
 18672                           
 18673                           ; BSR set to: 1
 18674                           
 18675                           ; BSR set to: 1
 18676                           
 18677                           ; BSR set to: 1
 18678  0170F8  90D8               	bcf	status,0,c
 18679  0170FA  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 18680  0170FC  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 18681  0170FE  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 18682  017100  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 18683                           
 18684                           ; BSR set to: 1
 18685  017102  511B               	movf	___lldiv@divisor& (0+255),w,b
 18686  017104  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 18687  017106  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18688  017108  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 18689  01710A  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18690  01710C  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 18691  01710E  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18692  017110  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 18693  017112  A0D8               	btfss	status,0,c
 18694  017114  D009               	goto	l1904
 18695                           
 18696                           ; BSR set to: 1
 18697  017116  511B               	movf	___lldiv@divisor& (0+255),w,b
 18698  017118  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 18699  01711A  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18700  01711C  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 18701  01711E  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18702  017120  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 18703  017122  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18704  017124  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 18705                           
 18706                           ; BSR set to: 1
 18707  017126  811F               	bsf	___lldiv@quotient& (0+255),0,b
 18708  017128                     l1904:
 18709                           
 18710                           ; BSR set to: 1
 18711                           
 18712                           ; BSR set to: 1
 18713  017128  90D8               	bcf	status,0,c
 18714  01712A  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 18715  01712C  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 18716  01712E  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 18717  017130  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 18718                           
 18719                           ; BSR set to: 1
 18720  017132  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 18721  017134  D7E1               	goto	u13600
 18722  017136                     l1905:
 18723                           
 18724                           ; BSR set to: 1
 18725                           
 18726                           ; BSR set to: 1
 18727  017136  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 18728  01713A  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 18729  01713E  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 18730  017142  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 18731                           
 18732                           ; BSR set to: 1
 18733  017146  0012               	return		;funcret
 18734  017148                     __end_of___lldiv:
 18735                           	opt stack 0
 18736                           tblptru	equ	0xFF8
 18737                           tblptrh	equ	0xFF7
 18738                           tblptrl	equ	0xFF6
 18739                           tablat	equ	0xFF5
 18740                           prodh	equ	0xFF4
 18741                           prodl	equ	0xFF3
 18742                           intcon	equ	0xFF2
 18743                           indf0	equ	0xFEF
 18744                           postinc0	equ	0xFEE
 18745                           fsr0h	equ	0xFEA
 18746                           fsr0l	equ	0xFE9
 18747                           wreg	equ	0xFE8
 18748                           indf1	equ	0xFE7
 18749                           postdec1	equ	0xFE5
 18750                           plusw1	equ	0xFE3
 18751                           fsr1h	equ	0xFE2
 18752                           fsr1l	equ	0xFE1
 18753                           indf2	equ	0xFDF
 18754                           postinc2	equ	0xFDE
 18755                           postdec2	equ	0xFDD
 18756                           plusw2	equ	0xFDB
 18757                           fsr2h	equ	0xFDA
 18758                           fsr2l	equ	0xFD9
 18759                           status	equ	0xFD8
 18760                           
 18761 ;; *************** function ___fltol *****************
 18762 ;; Defined at:
 18763 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 18764 ;; Parameters:    Size  Location     Type
 18765 ;;  f1              4  111[BANK1 ] unsigned long 
 18766 ;; Auto vars:     Size  Location     Type
 18767 ;;  exp1            1  120[BANK1 ] unsigned char 
 18768 ;;  sign1           1  119[BANK1 ] unsigned char 
 18769 ;; Return value:  Size  Location     Type
 18770 ;;                  4  111[BANK1 ] long 
 18771 ;; Registers used:
 18772 ;;		wreg, status,2, status,0
 18773 ;; Tracked objects:
 18774 ;;		On entry : 0/0
 18775 ;;		On exit  : 0/0
 18776 ;;		Unchanged: 0/0
 18777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18778 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18779 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18780 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18781 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18782 ;;Total ram usage:       10 bytes
 18783 ;; Hardware stack levels used:    1
 18784 ;; Hardware stack levels required when called:   13
 18785 ;; This function calls:
 18786 ;;		Nothing
 18787 ;; This function is called by:
 18788 ;;		_printf
 18789 ;; This function uses a non-reentrant model
 18790 ;;
 18791                           
 18792                           	psect	text43
 18793  0169B2                     __ptext43:
 18794                           	opt stack 0
 18795  0169B2                     ___fltol:
 18796                           	opt stack 14
 18797                           
 18798                           ; BSR set to: 1
 18799                           ;incstack = 0
 18800  0169B2  0101               	movlb	1	; () banked
 18801  0169B4  3571               	rlcf	(___fltol@f1+2)& (0+255),w,b
 18802  0169B6  3572               	rlcf	(___fltol@f1+3)& (0+255),w,b
 18803  0169B8  6F78               	movwf	___fltol@exp1& (0+255),b
 18804  0169BA  5178               	movf	___fltol@exp1& (0+255),w,b
 18805  0169BC  A4D8               	btfss	status,2,c
 18806  0169BE  D009               	goto	l1757
 18807                           
 18808                           ; BSR set to: 1
 18809  0169C0  0E00               	movlw	0
 18810  0169C2  6F6F               	movwf	?___fltol& (0+255),b
 18811  0169C4  0E00               	movlw	0
 18812  0169C6  6F70               	movwf	(?___fltol+1)& (0+255),b
 18813  0169C8  0E00               	movlw	0
 18814  0169CA  6F71               	movwf	(?___fltol+2)& (0+255),b
 18815  0169CC  0E00               	movlw	0
 18816  0169CE  6F72               	movwf	(?___fltol+3)& (0+255),b
 18817                           
 18818                           ; BSR set to: 1
 18819  0169D0  0012               	return	
 18820  0169D2                     l1757:
 18821                           
 18822                           ; BSR set to: 1
 18823                           
 18824                           ; BSR set to: 1
 18825  0169D2  C16F  F173         	movff	___fltol@f1,??___fltol
 18826  0169D6  C170  F174         	movff	___fltol@f1+1,??___fltol+1
 18827  0169DA  C171  F175         	movff	___fltol@f1+2,??___fltol+2
 18828  0169DE  C172  F176         	movff	___fltol@f1+3,??___fltol+3
 18829  0169E2  0E20               	movlw	32
 18830  0169E4  D005               	goto	u13530
 18831  0169E6                     u13535:
 18832  0169E6  90D8               	bcf	status,0,c
 18833  0169E8  3376               	rrcf	(??___fltol+3)& (0+255),f,b
 18834  0169EA  3375               	rrcf	(??___fltol+2)& (0+255),f,b
 18835  0169EC  3374               	rrcf	(??___fltol+1)& (0+255),f,b
 18836  0169EE  3373               	rrcf	??___fltol& (0+255),f,b
 18837  0169F0                     u13530:
 18838  0169F0  2EE8               	decfsz	wreg,f,c
 18839  0169F2  D7F9               	goto	u13535
 18840  0169F4  5173               	movf	??___fltol& (0+255),w,b
 18841  0169F6  6F77               	movwf	___fltol@sign1& (0+255),b
 18842                           
 18843                           ; BSR set to: 1
 18844  0169F8  8F71               	bsf	(___fltol@f1+2)& (0+255),7,b
 18845                           
 18846                           ; BSR set to: 1
 18847  0169FA  0EFF               	movlw	255
 18848  0169FC  176F               	andwf	___fltol@f1& (0+255),f,b
 18849  0169FE  0EFF               	movlw	255
 18850  016A00  1770               	andwf	(___fltol@f1+1)& (0+255),f,b
 18851  016A02  0EFF               	movlw	255
 18852  016A04  1771               	andwf	(___fltol@f1+2)& (0+255),f,b
 18853  016A06  0E00               	movlw	0
 18854  016A08  1772               	andwf	(___fltol@f1+3)& (0+255),f,b
 18855                           
 18856                           ; BSR set to: 1
 18857  016A0A  0E96               	movlw	150
 18858  016A0C  5F78               	subwf	___fltol@exp1& (0+255),f,b
 18859                           
 18860                           ; BSR set to: 1
 18861  016A0E  AF78               	btfss	___fltol@exp1& (0+255),7,b
 18862  016A10  D016               	goto	l1759
 18863                           
 18864                           ; BSR set to: 1
 18865  016A12  5178               	movf	___fltol@exp1& (0+255),w,b
 18866  016A14  0A80               	xorlw	128
 18867  016A16  0F97               	addlw	151
 18868  016A18  B0D8               	btfsc	status,0,c
 18869  016A1A  D009               	goto	l1760
 18870                           
 18871                           ; BSR set to: 1
 18872  016A1C  0E00               	movlw	0
 18873  016A1E  6F6F               	movwf	?___fltol& (0+255),b
 18874  016A20  0E00               	movlw	0
 18875  016A22  6F70               	movwf	(?___fltol+1)& (0+255),b
 18876  016A24  0E00               	movlw	0
 18877  016A26  6F71               	movwf	(?___fltol+2)& (0+255),b
 18878  016A28  0E00               	movlw	0
 18879  016A2A  6F72               	movwf	(?___fltol+3)& (0+255),b
 18880                           
 18881                           ; BSR set to: 1
 18882  016A2C  0012               	return	
 18883  016A2E                     l1760:
 18884                           
 18885                           ; BSR set to: 1
 18886                           
 18887                           ; BSR set to: 1
 18888                           
 18889                           ; BSR set to: 1
 18890  016A2E  90D8               	bcf	status,0,c
 18891  016A30  3372               	rrcf	(___fltol@f1+3)& (0+255),f,b
 18892  016A32  3371               	rrcf	(___fltol@f1+2)& (0+255),f,b
 18893  016A34  3370               	rrcf	(___fltol@f1+1)& (0+255),f,b
 18894  016A36  336F               	rrcf	___fltol@f1& (0+255),f,b
 18895                           
 18896                           ; BSR set to: 1
 18897  016A38  3F78               	incfsz	___fltol@exp1& (0+255),f,b
 18898  016A3A  D7F9               	goto	l1760
 18899                           
 18900                           ; BSR set to: 1
 18901  016A3C  D015               	goto	u13570
 18902  016A3E                     l1759:
 18903                           
 18904                           ; BSR set to: 1
 18905                           
 18906                           ; BSR set to: 1
 18907  016A3E  0E1F               	movlw	31
 18908  016A40  6578               	cpfsgt	___fltol@exp1& (0+255),b
 18909  016A42  D00F               	goto	l1765
 18910                           
 18911                           ; BSR set to: 1
 18912  016A44  0E00               	movlw	0
 18913  016A46  6F6F               	movwf	?___fltol& (0+255),b
 18914  016A48  0E00               	movlw	0
 18915  016A4A  6F70               	movwf	(?___fltol+1)& (0+255),b
 18916  016A4C  0E00               	movlw	0
 18917  016A4E  6F71               	movwf	(?___fltol+2)& (0+255),b
 18918  016A50  0E00               	movlw	0
 18919  016A52  6F72               	movwf	(?___fltol+3)& (0+255),b
 18920                           
 18921                           ; BSR set to: 1
 18922  016A54  0012               	return	
 18923  016A56                     
 18924                           ; BSR set to: 1
 18925                           
 18926                           ; BSR set to: 1
 18927  016A56  90D8               	bcf	status,0,c
 18928  016A58  376F               	rlcf	___fltol@f1& (0+255),f,b
 18929  016A5A  3770               	rlcf	(___fltol@f1+1)& (0+255),f,b
 18930  016A5C  3771               	rlcf	(___fltol@f1+2)& (0+255),f,b
 18931  016A5E  3772               	rlcf	(___fltol@f1+3)& (0+255),f,b
 18932  016A60  0778               	decf	___fltol@exp1& (0+255),f,b
 18933  016A62                     l1765:
 18934                           
 18935                           ; BSR set to: 1
 18936                           
 18937                           ; BSR set to: 1
 18938  016A62  5178               	movf	___fltol@exp1& (0+255),w,b
 18939  016A64  A4D8               	btfss	status,2,c
 18940  016A66  D7F7               	goto	l1766
 18941  016A68                     u13570:
 18942                           
 18943                           ; BSR set to: 1
 18944                           
 18945                           ; BSR set to: 1
 18946                           
 18947                           ; BSR set to: 1
 18948  016A68  5177               	movf	___fltol@sign1& (0+255),w,b
 18949  016A6A  B4D8               	btfsc	status,2,c
 18950  016A6C  D008               	goto	l1768
 18951                           
 18952                           ; BSR set to: 1
 18953  016A6E  1F72               	comf	(___fltol@f1+3)& (0+255),f,b
 18954  016A70  1F71               	comf	(___fltol@f1+2)& (0+255),f,b
 18955  016A72  1F70               	comf	(___fltol@f1+1)& (0+255),f,b
 18956  016A74  6D6F               	negf	___fltol@f1& (0+255),b
 18957  016A76  0E00               	movlw	0
 18958  016A78  2370               	addwfc	(___fltol@f1+1)& (0+255),f,b
 18959  016A7A  2371               	addwfc	(___fltol@f1+2)& (0+255),f,b
 18960  016A7C  2372               	addwfc	(___fltol@f1+3)& (0+255),f,b
 18961  016A7E                     l1768:
 18962                           
 18963                           ; BSR set to: 1
 18964                           
 18965                           ; BSR set to: 1
 18966  016A7E  C16F  F16F         	movff	___fltol@f1,?___fltol
 18967  016A82  C170  F170         	movff	___fltol@f1+1,?___fltol+1
 18968  016A86  C171  F171         	movff	___fltol@f1+2,?___fltol+2
 18969  016A8A  C172  F172         	movff	___fltol@f1+3,?___fltol+3
 18970  016A8E  0012               	return	
 18971  016A90                     __end_of___fltol:
 18972                           	opt stack 0
 18973                           tblptru	equ	0xFF8
 18974                           tblptrh	equ	0xFF7
 18975                           tblptrl	equ	0xFF6
 18976                           tablat	equ	0xFF5
 18977                           prodh	equ	0xFF4
 18978                           prodl	equ	0xFF3
 18979                           intcon	equ	0xFF2
 18980                           indf0	equ	0xFEF
 18981                           postinc0	equ	0xFEE
 18982                           fsr0h	equ	0xFEA
 18983                           fsr0l	equ	0xFE9
 18984                           wreg	equ	0xFE8
 18985                           indf1	equ	0xFE7
 18986                           postdec1	equ	0xFE5
 18987                           plusw1	equ	0xFE3
 18988                           fsr1h	equ	0xFE2
 18989                           fsr1l	equ	0xFE1
 18990                           indf2	equ	0xFDF
 18991                           postinc2	equ	0xFDE
 18992                           postdec2	equ	0xFDD
 18993                           plusw2	equ	0xFDB
 18994                           fsr2h	equ	0xFDA
 18995                           fsr2l	equ	0xFD9
 18996                           status	equ	0xFD8
 18997                           
 18998 ;; *************** function ___flsub *****************
 18999 ;; Defined at:
 19000 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19001 ;; Parameters:    Size  Location     Type
 19002 ;;  b               4   61[BANK1 ] long 
 19003 ;;  a               4   65[BANK1 ] long 
 19004 ;; Auto vars:     Size  Location     Type
 19005 ;;		None
 19006 ;; Return value:  Size  Location     Type
 19007 ;;                  4   61[BANK1 ] long 
 19008 ;; Registers used:
 19009 ;;		wreg, status,2, status,0, cstack
 19010 ;; Tracked objects:
 19011 ;;		On entry : 0/0
 19012 ;;		On exit  : 0/0
 19013 ;;		Unchanged: 0/0
 19014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19015 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19018 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19019 ;;Total ram usage:        8 bytes
 19020 ;; Hardware stack levels used:    1
 19021 ;; Hardware stack levels required when called:   14
 19022 ;; This function calls:
 19023 ;;		___fladd
 19024 ;; This function is called by:
 19025 ;;		_printf
 19026 ;; This function uses a non-reentrant model
 19027 ;;
 19028                           
 19029                           	psect	text44
 19030  017ABA                     __ptext44:
 19031                           	opt stack 0
 19032  017ABA                     ___flsub:
 19033                           	opt stack 13
 19034                           
 19035                           ; BSR set to: 1
 19036                           ;incstack = 0
 19037  017ABA  0E00               	movlw	0
 19038  017ABC  0101               	movlb	1	; () banked
 19039  017ABE  1B41               	xorwf	___flsub@a& (0+255),f,b
 19040  017AC0  0E00               	movlw	0
 19041  017AC2  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 19042  017AC4  0E00               	movlw	0
 19043  017AC6  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 19044  017AC8  0E80               	movlw	128
 19045  017ACA  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 19046                           
 19047                           ; BSR set to: 1
 19048  017ACC  C13D  F129         	movff	___flsub@b,___fladd@b
 19049  017AD0  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 19050  017AD4  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 19051  017AD8  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 19052  017ADC  C141  F12D         	movff	___flsub@a,___fladd@a
 19053  017AE0  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 19054  017AE4  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 19055  017AE8  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 19056  017AEC  EC23  F09F         	call	___fladd	;wreg free
 19057  017AF0  C129  F13D         	movff	?___fladd,?___flsub
 19058  017AF4  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 19059  017AF8  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 19060  017AFC  C12C  F140         	movff	?___fladd+3,?___flsub+3
 19061  017B00  0012               	return	
 19062  017B02                     __end_of___flsub:
 19063                           	opt stack 0
 19064                           tblptru	equ	0xFF8
 19065                           tblptrh	equ	0xFF7
 19066                           tblptrl	equ	0xFF6
 19067                           tablat	equ	0xFF5
 19068                           prodh	equ	0xFF4
 19069                           prodl	equ	0xFF3
 19070                           intcon	equ	0xFF2
 19071                           indf0	equ	0xFEF
 19072                           postinc0	equ	0xFEE
 19073                           fsr0h	equ	0xFEA
 19074                           fsr0l	equ	0xFE9
 19075                           wreg	equ	0xFE8
 19076                           indf1	equ	0xFE7
 19077                           postdec1	equ	0xFE5
 19078                           plusw1	equ	0xFE3
 19079                           fsr1h	equ	0xFE2
 19080                           fsr1l	equ	0xFE1
 19081                           indf2	equ	0xFDF
 19082                           postinc2	equ	0xFDE
 19083                           postdec2	equ	0xFDD
 19084                           plusw2	equ	0xFDB
 19085                           fsr2h	equ	0xFDA
 19086                           fsr2l	equ	0xFD9
 19087                           status	equ	0xFD8
 19088                           
 19089 ;; *************** function ___fladd *****************
 19090 ;; Defined at:
 19091 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19092 ;; Parameters:    Size  Location     Type
 19093 ;;  b               4   41[BANK1 ] long 
 19094 ;;  a               4   45[BANK1 ] long 
 19095 ;; Auto vars:     Size  Location     Type
 19096 ;;  grs             1   60[BANK1 ] unsigned char 
 19097 ;;  bexp            1   59[BANK1 ] unsigned char 
 19098 ;;  aexp            1   58[BANK1 ] unsigned char 
 19099 ;;  signs           1   57[BANK1 ] unsigned char 
 19100 ;; Return value:  Size  Location     Type
 19101 ;;                  4   41[BANK1 ] unsigned char 
 19102 ;; Registers used:
 19103 ;;		wreg, status,2, status,0
 19104 ;; Tracked objects:
 19105 ;;		On entry : 0/0
 19106 ;;		On exit  : 0/0
 19107 ;;		Unchanged: 0/0
 19108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19109 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19110 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19111 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19112 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19113 ;;Total ram usage:       20 bytes
 19114 ;; Hardware stack levels used:    1
 19115 ;; Hardware stack levels required when called:   13
 19116 ;; This function calls:
 19117 ;;		Nothing
 19118 ;; This function is called by:
 19119 ;;		_ringBufferLUT
 19120 ;;		_printf
 19121 ;;		___flsub
 19122 ;; This function uses a non-reentrant model
 19123 ;;
 19124                           
 19125                           	psect	text45
 19126  013E46                     __ptext45:
 19127                           	opt stack 0
 19128  013E46                     ___fladd:
 19129                           	opt stack 13
 19130                           
 19131                           ;incstack = 0
 19132  013E46  0101               	movlb	1	; () banked
 19133  013E48  512C               	movf	(___fladd@b+3)& (0+255),w,b
 19134  013E4A  0B80               	andlw	128
 19135  013E4C  6F39               	movwf	___fladd@signs& (0+255),b
 19136  013E4E  512C               	movf	(___fladd@b+3)& (0+255),w,b
 19137  013E50  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 19138  013E52  6F3B               	movwf	___fladd@bexp& (0+255),b
 19139                           
 19140                           ; BSR set to: 1
 19141  013E54  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 19142                           
 19143                           ; BSR set to: 1
 19144  013E56  813B               	bsf	___fladd@bexp& (0+255),0,b
 19145                           
 19146                           ; BSR set to: 1
 19147                           
 19148                           ; BSR set to: 1
 19149  013E58  513B               	movf	___fladd@bexp& (0+255),w,b
 19150  013E5A  B4D8               	btfsc	status,2,c
 19151  013E5C  D00D               	goto	l1997
 19152                           
 19153                           ; BSR set to: 1
 19154  013E5E  293B               	incf	___fladd@bexp& (0+255),w,b
 19155  013E60  A4D8               	btfss	status,2,c
 19156  013E62  D008               	goto	l1998
 19157                           
 19158                           ; BSR set to: 1
 19159  013E64  0E00               	movlw	0
 19160  013E66  6F29               	movwf	___fladd@b& (0+255),b
 19161  013E68  0E00               	movlw	0
 19162  013E6A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19163  013E6C  0E00               	movlw	0
 19164  013E6E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19165  013E70  0E00               	movlw	0
 19166  013E72  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19167  013E74                     l1998:
 19168                           
 19169                           ; BSR set to: 1
 19170                           
 19171                           ; BSR set to: 1
 19172  013E74  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 19173  013E76  D006               	goto	L5
 19174  013E78                     l1997:
 19175                           
 19176                           ; BSR set to: 1
 19177                           
 19178                           ; BSR set to: 1
 19179  013E78  0E00               	movlw	0
 19180  013E7A  6F29               	movwf	___fladd@b& (0+255),b
 19181  013E7C  0E00               	movlw	0
 19182  013E7E  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19183  013E80  0E00               	movlw	0
 19184  013E82  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19185  013E84                     L5:
 19186  013E84  0E00               	movlw	0
 19187  013E86  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19188                           
 19189                           ; BSR set to: 1
 19190                           
 19191                           ; BSR set to: 1
 19192  013E88  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19193  013E8A  0B80               	andlw	128
 19194  013E8C  6F3A               	movwf	___fladd@aexp& (0+255),b
 19195                           
 19196                           ; BSR set to: 1
 19197  013E8E  5139               	movf	___fladd@signs& (0+255),w,b
 19198  013E90  193A               	xorwf	___fladd@aexp& (0+255),w,b
 19199  013E92  A4D8               	btfss	status,2,c
 19200                           
 19201                           ; BSR set to: 1
 19202  013E94  8D39               	bsf	___fladd@signs& (0+255),6,b
 19203                           
 19204                           ; BSR set to: 1
 19205                           
 19206                           ; BSR set to: 1
 19207  013E96  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19208  013E98  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 19209  013E9A  6F3A               	movwf	___fladd@aexp& (0+255),b
 19210                           
 19211                           ; BSR set to: 1
 19212  013E9C  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 19213                           
 19214                           ; BSR set to: 1
 19215  013E9E  813A               	bsf	___fladd@aexp& (0+255),0,b
 19216                           
 19217                           ; BSR set to: 1
 19218                           
 19219                           ; BSR set to: 1
 19220  013EA0  513A               	movf	___fladd@aexp& (0+255),w,b
 19221  013EA2  B4D8               	btfsc	status,2,c
 19222  013EA4  D00D               	goto	l2002
 19223                           
 19224                           ; BSR set to: 1
 19225  013EA6  293A               	incf	___fladd@aexp& (0+255),w,b
 19226  013EA8  A4D8               	btfss	status,2,c
 19227  013EAA  D008               	goto	l2003
 19228                           
 19229                           ; BSR set to: 1
 19230  013EAC  0E00               	movlw	0
 19231  013EAE  6F2D               	movwf	___fladd@a& (0+255),b
 19232  013EB0  0E00               	movlw	0
 19233  013EB2  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 19234  013EB4  0E00               	movlw	0
 19235  013EB6  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 19236  013EB8  0E00               	movlw	0
 19237  013EBA  6F30               	movwf	(___fladd@a+3)& (0+255),b
 19238  013EBC                     l2003:
 19239                           
 19240                           ; BSR set to: 1
 19241                           
 19242                           ; BSR set to: 1
 19243  013EBC  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 19244  013EBE  D006               	goto	L6
 19245  013EC0                     l2002:
 19246                           
 19247                           ; BSR set to: 1
 19248                           
 19249                           ; BSR set to: 1
 19250  013EC0  0E00               	movlw	0
 19251  013EC2  6F2D               	movwf	___fladd@a& (0+255),b
 19252  013EC4  0E00               	movlw	0
 19253  013EC6  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 19254  013EC8  0E00               	movlw	0
 19255  013ECA  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 19256  013ECC                     L6:
 19257  013ECC  0E00               	movlw	0
 19258  013ECE  6F30               	movwf	(___fladd@a+3)& (0+255),b
 19259                           
 19260                           ; BSR set to: 1
 19261                           
 19262                           ; BSR set to: 1
 19263  013ED0  513B               	movf	___fladd@bexp& (0+255),w,b
 19264  013ED2  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 19265  013ED4  B0D8               	btfsc	status,0,c
 19266  013ED6  D022               	goto	l2005
 19267                           
 19268                           ; BSR set to: 1
 19269  013ED8  AD39               	btfss	___fladd@signs& (0+255),6,b
 19270  013EDA  D002               	goto	l2006
 19271                           
 19272                           ; BSR set to: 1
 19273  013EDC  0E80               	movlw	128
 19274  013EDE  1B39               	xorwf	___fladd@signs& (0+255),f,b
 19275  013EE0                     l2006:
 19276                           
 19277                           ; BSR set to: 1
 19278                           
 19279                           ; BSR set to: 1
 19280  013EE0  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 19281                           
 19282                           ; BSR set to: 1
 19283  013EE4  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 19284                           
 19285                           ; BSR set to: 1
 19286  013EE8  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 19287                           
 19288                           ; BSR set to: 1
 19289  013EEC  C129  F13C         	movff	___fladd@b,___fladd@grs
 19290                           
 19291                           ; BSR set to: 1
 19292  013EF0  C12D  F129         	movff	___fladd@a,___fladd@b
 19293                           
 19294                           ; BSR set to: 1
 19295  013EF4  C13C  F12D         	movff	___fladd@grs,___fladd@a
 19296                           
 19297                           ; BSR set to: 1
 19298  013EF8  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 19299                           
 19300                           ; BSR set to: 1
 19301  013EFC  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 19302                           
 19303                           ; BSR set to: 1
 19304  013F00  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 19305                           
 19306                           ; BSR set to: 1
 19307  013F04  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 19308                           
 19309                           ; BSR set to: 1
 19310  013F08  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 19311                           
 19312                           ; BSR set to: 1
 19313  013F0C  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 19314                           
 19315                           ; BSR set to: 1
 19316  013F10  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 19317                           
 19318                           ; BSR set to: 1
 19319  013F14  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 19320                           
 19321                           ; BSR set to: 1
 19322  013F18  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 19323  013F1C                     l2005:
 19324                           
 19325                           ; BSR set to: 1
 19326                           
 19327                           ; BSR set to: 1
 19328  013F1C  0E00               	movlw	0
 19329  013F1E  6F3C               	movwf	___fladd@grs& (0+255),b
 19330                           
 19331                           ; BSR set to: 1
 19332  013F20  513B               	movf	___fladd@bexp& (0+255),w,b
 19333  013F22  6F31               	movwf	??___fladd& (0+255),b
 19334  013F24  6B32               	clrf	(??___fladd+1)& (0+255),b
 19335  013F26  1F31               	comf	??___fladd& (0+255),f,b
 19336  013F28  1F32               	comf	(??___fladd+1)& (0+255),f,b
 19337  013F2A  4B31               	infsnz	??___fladd& (0+255),f,b
 19338  013F2C  2B32               	incf	(??___fladd+1)& (0+255),f,b
 19339  013F2E  513A               	movf	___fladd@aexp& (0+255),w,b
 19340  013F30  6F33               	movwf	(??___fladd+2)& (0+255),b
 19341  013F32  6B34               	clrf	(??___fladd+3)& (0+255),b
 19342  013F34  5131               	movf	??___fladd& (0+255),w,b
 19343  013F36  2733               	addwf	(??___fladd+2)& (0+255),f,b
 19344  013F38  5132               	movf	(??___fladd+1)& (0+255),w,b
 19345  013F3A  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 19346  013F3C  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 19347  013F3E  D02C               	goto	l2009
 19348  013F40  5134               	movf	(??___fladd+3)& (0+255),w,b
 19349  013F42  E104               	bnz	u12470
 19350  013F44  0E1A               	movlw	26
 19351  013F46  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 19352  013F48  A0D8               	btfss	status,0,c
 19353  013F4A  D026               	goto	l2009
 19354  013F4C                     u12470:
 19355                           
 19356                           ; BSR set to: 1
 19357  013F4C  5129               	movf	___fladd@b& (0+255),w,b
 19358  013F4E  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 19359  013F50  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 19360  013F52  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 19361  013F54  B4D8               	btfsc	status,2,c
 19362  013F56  D002               	goto	u12480
 19363  013F58  0E01               	movlw	1
 19364  013F5A  D001               	goto	u12490
 19365  013F5C                     u12480:
 19366  013F5C  0E00               	movlw	0
 19367  013F5E                     u12490:
 19368  013F5E  6F3C               	movwf	___fladd@grs& (0+255),b
 19369                           
 19370                           ; BSR set to: 1
 19371  013F60  0E00               	movlw	0
 19372  013F62  6F29               	movwf	___fladd@b& (0+255),b
 19373  013F64  0E00               	movlw	0
 19374  013F66  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19375  013F68  0E00               	movlw	0
 19376  013F6A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19377  013F6C  0E00               	movlw	0
 19378  013F6E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19379                           
 19380                           ; BSR set to: 1
 19381  013F70  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 19382  013F74  D015               	goto	u12520
 19383  013F76                     l2010:
 19384                           
 19385                           ; BSR set to: 1
 19386  013F76  A13C               	btfss	___fladd@grs& (0+255),0,b
 19387  013F78  D005               	goto	l2011
 19388                           
 19389                           ; BSR set to: 1
 19390  013F7A  90D8               	bcf	status,0,c
 19391  013F7C  313C               	rrcf	___fladd@grs& (0+255),w,b
 19392  013F7E  0901               	iorlw	1
 19393  013F80  6F3C               	movwf	___fladd@grs& (0+255),b
 19394  013F82  D002               	goto	l2012
 19395  013F84                     l2011:
 19396                           
 19397                           ; BSR set to: 1
 19398                           
 19399                           ; BSR set to: 1
 19400  013F84  90D8               	bcf	status,0,c
 19401  013F86  333C               	rrcf	___fladd@grs& (0+255),f,b
 19402  013F88                     l2012:
 19403                           
 19404                           ; BSR set to: 1
 19405                           
 19406                           ; BSR set to: 1
 19407  013F88  B129               	btfsc	___fladd@b& (0+255),0,b
 19408                           
 19409                           ; BSR set to: 1
 19410  013F8A  8F3C               	bsf	___fladd@grs& (0+255),7,b
 19411                           
 19412                           ; BSR set to: 1
 19413                           
 19414                           ; BSR set to: 1
 19415  013F8C  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 19416  013F8E  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 19417  013F90  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 19418  013F92  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 19419  013F94  3329               	rrcf	___fladd@b& (0+255),f,b
 19420                           
 19421                           ; BSR set to: 1
 19422  013F96  2B3B               	incf	___fladd@bexp& (0+255),f,b
 19423  013F98                     l2009:
 19424                           
 19425                           ; BSR set to: 1
 19426  013F98  513A               	movf	___fladd@aexp& (0+255),w,b
 19427  013F9A  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 19428  013F9C  A0D8               	btfss	status,0,c
 19429  013F9E  D7EB               	goto	l2010
 19430  013FA0                     u12520:
 19431                           
 19432                           ; BSR set to: 1
 19433                           
 19434                           ; BSR set to: 1
 19435  013FA0  BD39               	btfsc	___fladd@signs& (0+255),6,b
 19436  013FA2  D029               	goto	l2015
 19437                           
 19438                           ; BSR set to: 1
 19439  013FA4  513B               	movf	___fladd@bexp& (0+255),w,b
 19440  013FA6  A4D8               	btfss	status,2,c
 19441  013FA8  D009               	goto	l2016
 19442                           
 19443                           ; BSR set to: 1
 19444  013FAA  0E00               	movlw	0
 19445  013FAC  6F29               	movwf	?___fladd& (0+255),b
 19446  013FAE  0E00               	movlw	0
 19447  013FB0  6F2A               	movwf	(?___fladd+1)& (0+255),b
 19448  013FB2  0E00               	movlw	0
 19449  013FB4  6F2B               	movwf	(?___fladd+2)& (0+255),b
 19450  013FB6  0E00               	movlw	0
 19451  013FB8  6F2C               	movwf	(?___fladd+3)& (0+255),b
 19452                           
 19453                           ; BSR set to: 1
 19454  013FBA  0012               	return	
 19455  013FBC                     l2016:
 19456                           
 19457                           ; BSR set to: 1
 19458                           
 19459                           ; BSR set to: 1
 19460  013FBC  512D               	movf	___fladd@a& (0+255),w,b
 19461  013FBE  2729               	addwf	___fladd@b& (0+255),f,b
 19462  013FC0  512E               	movf	(___fladd@a+1)& (0+255),w,b
 19463  013FC2  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 19464  013FC4  512F               	movf	(___fladd@a+2)& (0+255),w,b
 19465  013FC6  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 19466  013FC8  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19467  013FCA  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 19468                           
 19469                           ; BSR set to: 1
 19470  013FCC  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 19471  013FCE  D083               	goto	u12650
 19472                           
 19473                           ; BSR set to: 1
 19474  013FD0  A13C               	btfss	___fladd@grs& (0+255),0,b
 19475  013FD2  D006               	goto	l2019
 19476                           
 19477                           ; BSR set to: 1
 19478  013FD4  90D8               	bcf	status,0,c
 19479  013FD6  333C               	rrcf	___fladd@grs& (0+255),f,b
 19480  013FD8  513C               	movf	___fladd@grs& (0+255),w,b
 19481  013FDA  0901               	iorlw	1
 19482  013FDC  6F3C               	movwf	___fladd@grs& (0+255),b
 19483  013FDE  D002               	goto	l2020
 19484  013FE0                     l2019:
 19485                           
 19486                           ; BSR set to: 1
 19487                           
 19488                           ; BSR set to: 1
 19489  013FE0  90D8               	bcf	status,0,c
 19490  013FE2  333C               	rrcf	___fladd@grs& (0+255),f,b
 19491  013FE4                     l2020:
 19492                           
 19493                           ; BSR set to: 1
 19494                           
 19495                           ; BSR set to: 1
 19496  013FE4  B129               	btfsc	___fladd@b& (0+255),0,b
 19497                           
 19498                           ; BSR set to: 1
 19499  013FE6  8F3C               	bsf	___fladd@grs& (0+255),7,b
 19500                           
 19501                           ; BSR set to: 1
 19502                           
 19503                           ; BSR set to: 1
 19504  013FE8  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 19505  013FEA  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 19506  013FEC  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 19507  013FEE  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 19508  013FF0  3329               	rrcf	___fladd@b& (0+255),f,b
 19509                           
 19510                           ; BSR set to: 1
 19511  013FF2  2B3B               	incf	___fladd@bexp& (0+255),f,b
 19512                           
 19513                           ; BSR set to: 1
 19514  013FF4  D070               	goto	u12650
 19515  013FF6                     l2015:
 19516                           
 19517                           ; BSR set to: 1
 19518                           
 19519                           ; BSR set to: 1
 19520  013FF6  512D               	movf	___fladd@a& (0+255),w,b
 19521  013FF8  5D29               	subwf	___fladd@b& (0+255),w,b
 19522  013FFA  512E               	movf	(___fladd@a+1)& (0+255),w,b
 19523  013FFC  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 19524  013FFE  512F               	movf	(___fladd@a+2)& (0+255),w,b
 19525  014000  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 19526  014002  512C               	movf	(___fladd@b+3)& (0+255),w,b
 19527  014004  0A80               	xorlw	128
 19528  014006  6F31               	movwf	??___fladd& (0+255),b
 19529  014008  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19530  01400A  0A80               	xorlw	128
 19531  01400C  5931               	subwfb	??___fladd& (0+255),w,b
 19532  01400E  B0D8               	btfsc	status,0,c
 19533  014010  D036               	goto	l2023
 19534                           
 19535                           ; BSR set to: 1
 19536  014012  C129  F131         	movff	___fladd@b,??___fladd
 19537  014016  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 19538  01401A  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 19539  01401E  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 19540  014022  1F31               	comf	??___fladd& (0+255),f,b
 19541  014024  1F32               	comf	(??___fladd+1)& (0+255),f,b
 19542  014026  1F33               	comf	(??___fladd+2)& (0+255),f,b
 19543  014028  1F34               	comf	(??___fladd+3)& (0+255),f,b
 19544  01402A  2B31               	incf	??___fladd& (0+255),f,b
 19545  01402C  0E00               	movlw	0
 19546  01402E  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 19547  014030  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 19548  014032  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 19549  014034  512D               	movf	___fladd@a& (0+255),w,b
 19550  014036  2531               	addwf	??___fladd& (0+255),w,b
 19551  014038  6F35               	movwf	(??___fladd+4)& (0+255),b
 19552  01403A  512E               	movf	(___fladd@a+1)& (0+255),w,b
 19553  01403C  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 19554  01403E  6F36               	movwf	(??___fladd+5)& (0+255),b
 19555  014040  512F               	movf	(___fladd@a+2)& (0+255),w,b
 19556  014042  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 19557  014044  6F37               	movwf	(??___fladd+6)& (0+255),b
 19558  014046  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19559  014048  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 19560  01404A  6F38               	movwf	(??___fladd+7)& (0+255),b
 19561  01404C  0EFF               	movlw	255
 19562  01404E  2535               	addwf	(??___fladd+4)& (0+255),w,b
 19563  014050  6F29               	movwf	___fladd@b& (0+255),b
 19564  014052  0EFF               	movlw	255
 19565  014054  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 19566  014056  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19567  014058  0EFF               	movlw	255
 19568  01405A  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 19569  01405C  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19570  01405E  0EFF               	movlw	255
 19571  014060  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 19572  014062  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19573  014064  0E80               	movlw	128
 19574  014066  1B39               	xorwf	___fladd@signs& (0+255),f,b
 19575                           
 19576                           ; BSR set to: 1
 19577  014068  6D3C               	negf	___fladd@grs& (0+255),b
 19578                           
 19579                           ; BSR set to: 1
 19580  01406A  513C               	movf	___fladd@grs& (0+255),w,b
 19581  01406C  A4D8               	btfss	status,2,c
 19582  01406E  D00F               	goto	l2025
 19583                           
 19584                           ; BSR set to: 1
 19585  014070  0E01               	movlw	1
 19586  014072  2729               	addwf	___fladd@b& (0+255),f,b
 19587  014074  0E00               	movlw	0
 19588  014076  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 19589  014078  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 19590  01407A  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 19591                           
 19592                           ; BSR set to: 1
 19593  01407C  D008               	goto	l2025
 19594  01407E                     l2023:
 19595                           
 19596                           ; BSR set to: 1
 19597                           
 19598                           ; BSR set to: 1
 19599  01407E  512D               	movf	___fladd@a& (0+255),w,b
 19600  014080  5F29               	subwf	___fladd@b& (0+255),f,b
 19601  014082  512E               	movf	(___fladd@a+1)& (0+255),w,b
 19602  014084  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 19603  014086  512F               	movf	(___fladd@a+2)& (0+255),w,b
 19604  014088  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 19605  01408A  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19606  01408C  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 19607  01408E                     l2025:
 19608                           
 19609                           ; BSR set to: 1
 19610  01408E  5129               	movf	___fladd@b& (0+255),w,b
 19611  014090  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 19612  014092  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 19613  014094  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 19614  014096  A4D8               	btfss	status,2,c
 19615  014098  D01C               	goto	l2032
 19616                           
 19617                           ; BSR set to: 1
 19618  01409A  513C               	movf	___fladd@grs& (0+255),w,b
 19619  01409C  A4D8               	btfss	status,2,c
 19620  01409E  D019               	goto	l2032
 19621                           
 19622                           ; BSR set to: 1
 19623  0140A0  0E00               	movlw	0
 19624  0140A2  6F29               	movwf	?___fladd& (0+255),b
 19625  0140A4  0E00               	movlw	0
 19626  0140A6  6F2A               	movwf	(?___fladd+1)& (0+255),b
 19627  0140A8  0E00               	movlw	0
 19628  0140AA  6F2B               	movwf	(?___fladd+2)& (0+255),b
 19629  0140AC  0E00               	movlw	0
 19630  0140AE  6F2C               	movwf	(?___fladd+3)& (0+255),b
 19631                           
 19632                           ; BSR set to: 1
 19633  0140B0  0012               	return	
 19634  0140B2                     
 19635                           ; BSR set to: 1
 19636                           
 19637                           ; BSR set to: 1
 19638  0140B2  90D8               	bcf	status,0,c
 19639  0140B4  3729               	rlcf	___fladd@b& (0+255),f,b
 19640  0140B6  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 19641  0140B8  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 19642  0140BA  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 19643                           
 19644                           ; BSR set to: 1
 19645  0140BC  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 19646                           
 19647                           ; BSR set to: 1
 19648  0140BE  8129               	bsf	___fladd@b& (0+255),0,b
 19649                           
 19650                           ; BSR set to: 1
 19651                           
 19652                           ; BSR set to: 1
 19653  0140C0  A13C               	btfss	___fladd@grs& (0+255),0,b
 19654  0140C2  D002               	goto	l2030
 19655                           
 19656                           ; BSR set to: 1
 19657  0140C4  80D8               	bsf	status,0,c
 19658  0140C6  D001               	goto	L7
 19659  0140C8                     l2030:
 19660                           
 19661                           ; BSR set to: 1
 19662                           
 19663                           ; BSR set to: 1
 19664  0140C8  90D8               	bcf	status,0,c
 19665  0140CA                     L7:
 19666  0140CA  373C               	rlcf	___fladd@grs& (0+255),f,b
 19667                           
 19668                           ; BSR set to: 1
 19669                           
 19670                           ; BSR set to: 1
 19671  0140CC  513B               	movf	___fladd@bexp& (0+255),w,b
 19672  0140CE  A4D8               	btfss	status,2,c
 19673                           
 19674                           ; BSR set to: 1
 19675  0140D0  073B               	decf	___fladd@bexp& (0+255),f,b
 19676  0140D2                     l2032:
 19677                           
 19678                           ; BSR set to: 1
 19679                           
 19680                           ; BSR set to: 1
 19681                           
 19682                           ; BSR set to: 1
 19683  0140D2  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 19684  0140D4  D7EE               	goto	l2028
 19685  0140D6                     u12650:
 19686                           
 19687                           ; BSR set to: 1
 19688                           
 19689                           ; BSR set to: 1
 19690                           
 19691                           ; BSR set to: 1
 19692  0140D6  0E00               	movlw	0
 19693  0140D8  6F3A               	movwf	___fladd@aexp& (0+255),b
 19694                           
 19695                           ; BSR set to: 1
 19696  0140DA  AF3C               	btfss	___fladd@grs& (0+255),7,b
 19697  0140DC  D00A               	goto	l2037
 19698                           
 19699                           ; BSR set to: 1
 19700  0140DE  C13C  F131         	movff	___fladd@grs,??___fladd
 19701  0140E2  0E7F               	movlw	127
 19702  0140E4  1731               	andwf	??___fladd& (0+255),f,b
 19703  0140E6  A4D8               	btfss	status,2,c
 19704  0140E8  D002               	goto	u12680
 19705                           
 19706                           ; BSR set to: 1
 19707                           
 19708                           ; BSR set to: 1
 19709  0140EA  A129               	btfss	___fladd@b& (0+255),0,b
 19710  0140EC  D002               	goto	l2037
 19711  0140EE                     u12680:
 19712                           
 19713                           ; BSR set to: 1
 19714  0140EE  0E01               	movlw	1
 19715  0140F0  6F3A               	movwf	___fladd@aexp& (0+255),b
 19716  0140F2                     l2037:
 19717                           
 19718                           ; BSR set to: 1
 19719                           
 19720                           ; BSR set to: 1
 19721                           
 19722                           ; BSR set to: 1
 19723  0140F2  513A               	movf	___fladd@aexp& (0+255),w,b
 19724  0140F4  B4D8               	btfsc	status,2,c
 19725  0140F6  D020               	goto	l2040
 19726                           
 19727                           ; BSR set to: 1
 19728  0140F8  0E01               	movlw	1
 19729  0140FA  2729               	addwf	___fladd@b& (0+255),f,b
 19730  0140FC  0E00               	movlw	0
 19731  0140FE  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 19732  014100  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 19733  014102  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 19734                           
 19735                           ; BSR set to: 1
 19736  014104  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 19737  014106  D018               	goto	l2040
 19738                           
 19739                           ; BSR set to: 1
 19740  014108  C129  F131         	movff	___fladd@b,??___fladd
 19741  01410C  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 19742  014110  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 19743  014114  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 19744  014118  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 19745  01411A  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 19746  01411C  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 19747  01411E  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 19748  014120  3331               	rrcf	??___fladd& (0+255),f,b
 19749  014122  C131  F129         	movff	??___fladd,___fladd@b
 19750  014126  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 19751  01412A  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 19752  01412E  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 19753  014132  293B               	incf	___fladd@bexp& (0+255),w,b
 19754  014134  A4D8               	btfss	status,2,c
 19755                           
 19756                           ; BSR set to: 1
 19757  014136  2B3B               	incf	___fladd@bexp& (0+255),f,b
 19758  014138                     l2040:
 19759                           
 19760                           ; BSR set to: 1
 19761                           
 19762                           ; BSR set to: 1
 19763                           
 19764                           ; BSR set to: 1
 19765                           
 19766                           ; BSR set to: 1
 19767  014138  293B               	incf	___fladd@bexp& (0+255),w,b
 19768  01413A  B4D8               	btfsc	status,2,c
 19769  01413C  D003               	goto	u12730
 19770                           
 19771                           ; BSR set to: 1
 19772  01413E  513B               	movf	___fladd@bexp& (0+255),w,b
 19773  014140  A4D8               	btfss	status,2,c
 19774  014142  D00D               	goto	l2044
 19775  014144                     u12730:
 19776                           
 19777                           ; BSR set to: 1
 19778                           
 19779                           ; BSR set to: 1
 19780  014144  0E00               	movlw	0
 19781  014146  6F29               	movwf	___fladd@b& (0+255),b
 19782  014148  0E00               	movlw	0
 19783  01414A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19784  01414C  0E00               	movlw	0
 19785  01414E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19786  014150  0E00               	movlw	0
 19787  014152  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19788  014154  513B               	movf	___fladd@bexp& (0+255),w,b
 19789  014156  A4D8               	btfss	status,2,c
 19790  014158  D002               	goto	l2044
 19791                           
 19792                           ; BSR set to: 1
 19793  01415A  0E00               	movlw	0
 19794  01415C  6F39               	movwf	___fladd@signs& (0+255),b
 19795  01415E                     l2044:
 19796                           
 19797                           ; BSR set to: 1
 19798                           
 19799                           ; BSR set to: 1
 19800                           
 19801                           ; BSR set to: 1
 19802  01415E  A13B               	btfss	___fladd@bexp& (0+255),0,b
 19803  014160  D002               	goto	l2045
 19804                           
 19805                           ; BSR set to: 1
 19806  014162  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 19807  014164  D001               	goto	l2046
 19808  014166                     l2045:
 19809                           
 19810                           ; BSR set to: 1
 19811                           
 19812                           ; BSR set to: 1
 19813  014166  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 19814  014168                     l2046:
 19815                           
 19816                           ; BSR set to: 1
 19817                           
 19818                           ; BSR set to: 1
 19819  014168  90D8               	bcf	status,0,c
 19820  01416A  313B               	rrcf	___fladd@bexp& (0+255),w,b
 19821  01416C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19822                           
 19823                           ; BSR set to: 1
 19824  01416E  BF39               	btfsc	___fladd@signs& (0+255),7,b
 19825                           
 19826                           ; BSR set to: 1
 19827  014170  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 19828                           
 19829                           ; BSR set to: 1
 19830                           
 19831                           ; BSR set to: 1
 19832  014172  C129  F129         	movff	___fladd@b,?___fladd
 19833  014176  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 19834  01417A  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 19835  01417E  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 19836  014182  0012               	return	
 19837  014184                     __end_of___fladd:
 19838                           	opt stack 0
 19839                           tblptru	equ	0xFF8
 19840                           tblptrh	equ	0xFF7
 19841                           tblptrl	equ	0xFF6
 19842                           tablat	equ	0xFF5
 19843                           prodh	equ	0xFF4
 19844                           prodl	equ	0xFF3
 19845                           intcon	equ	0xFF2
 19846                           indf0	equ	0xFEF
 19847                           postinc0	equ	0xFEE
 19848                           fsr0h	equ	0xFEA
 19849                           fsr0l	equ	0xFE9
 19850                           wreg	equ	0xFE8
 19851                           indf1	equ	0xFE7
 19852                           postdec1	equ	0xFE5
 19853                           plusw1	equ	0xFE3
 19854                           fsr1h	equ	0xFE2
 19855                           fsr1l	equ	0xFE1
 19856                           indf2	equ	0xFDF
 19857                           postinc2	equ	0xFDE
 19858                           postdec2	equ	0xFDD
 19859                           plusw2	equ	0xFDB
 19860                           fsr2h	equ	0xFDA
 19861                           fsr2l	equ	0xFD9
 19862                           status	equ	0xFD8
 19863                           
 19864 ;; *************** function ___flneg *****************
 19865 ;; Defined at:
 19866 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 19867 ;; Parameters:    Size  Location     Type
 19868 ;;  f1              4   37[BANK1 ] unsigned char 
 19869 ;; Auto vars:     Size  Location     Type
 19870 ;;		None
 19871 ;; Return value:  Size  Location     Type
 19872 ;;                  4   37[BANK1 ] unsigned char 
 19873 ;; Registers used:
 19874 ;;		wreg, status,2, status,0
 19875 ;; Tracked objects:
 19876 ;;		On entry : 0/0
 19877 ;;		On exit  : 0/0
 19878 ;;		Unchanged: 0/0
 19879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19880 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19883 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19884 ;;Total ram usage:        4 bytes
 19885 ;; Hardware stack levels used:    1
 19886 ;; Hardware stack levels required when called:   13
 19887 ;; This function calls:
 19888 ;;		Nothing
 19889 ;; This function is called by:
 19890 ;;		_ringBufferLUT
 19891 ;;		_printf
 19892 ;; This function uses a non-reentrant model
 19893 ;;
 19894                           
 19895                           	psect	text46
 19896  017DF6                     __ptext46:
 19897                           	opt stack 0
 19898  017DF6                     ___flneg:
 19899                           	opt stack 14
 19900                           
 19901                           ; BSR set to: 1
 19902                           ;incstack = 0
 19903  017DF6  0101               	movlb	1	; () banked
 19904  017DF8  5125               	movf	___flneg@f1& (0+255),w,b
 19905  017DFA  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 19906  017DFC  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 19907  017DFE  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 19908  017E00  B4D8               	btfsc	status,2,c
 19909  017E02  D008               	goto	l1734
 19910                           
 19911                           ; BSR set to: 1
 19912  017E04  0E00               	movlw	0
 19913  017E06  1B25               	xorwf	___flneg@f1& (0+255),f,b
 19914  017E08  0E00               	movlw	0
 19915  017E0A  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 19916  017E0C  0E00               	movlw	0
 19917  017E0E  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 19918  017E10  0E80               	movlw	128
 19919  017E12  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 19920  017E14                     l1734:
 19921                           
 19922                           ; BSR set to: 1
 19923                           
 19924                           ; BSR set to: 1
 19925  017E14  C125  F125         	movff	___flneg@f1,?___flneg
 19926  017E18  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 19927  017E1C  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 19928  017E20  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 19929  017E24  0012               	return	
 19930  017E26                     __end_of___flneg:
 19931                           	opt stack 0
 19932                           tblptru	equ	0xFF8
 19933                           tblptrh	equ	0xFF7
 19934                           tblptrl	equ	0xFF6
 19935                           tablat	equ	0xFF5
 19936                           prodh	equ	0xFF4
 19937                           prodl	equ	0xFF3
 19938                           intcon	equ	0xFF2
 19939                           indf0	equ	0xFEF
 19940                           postinc0	equ	0xFEE
 19941                           fsr0h	equ	0xFEA
 19942                           fsr0l	equ	0xFE9
 19943                           wreg	equ	0xFE8
 19944                           indf1	equ	0xFE7
 19945                           postdec1	equ	0xFE5
 19946                           plusw1	equ	0xFE3
 19947                           fsr1h	equ	0xFE2
 19948                           fsr1l	equ	0xFE1
 19949                           indf2	equ	0xFDF
 19950                           postinc2	equ	0xFDE
 19951                           postdec2	equ	0xFDD
 19952                           plusw2	equ	0xFDB
 19953                           fsr2h	equ	0xFDA
 19954                           fsr2l	equ	0xFD9
 19955                           status	equ	0xFD8
 19956                           
 19957 ;; *************** function ___flge *****************
 19958 ;; Defined at:
 19959 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 19960 ;; Parameters:    Size  Location     Type
 19961 ;;  ff1             4   23[BANK1 ] unsigned char 
 19962 ;;  ff2             4   27[BANK1 ] unsigned char 
 19963 ;; Auto vars:     Size  Location     Type
 19964 ;;		None
 19965 ;; Return value:  Size  Location     Type
 19966 ;;		None               void
 19967 ;; Registers used:
 19968 ;;		wreg, status,2, status,0
 19969 ;; Tracked objects:
 19970 ;;		On entry : 0/0
 19971 ;;		On exit  : 0/0
 19972 ;;		Unchanged: 0/0
 19973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19974 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19976 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19977 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19978 ;;Total ram usage:       12 bytes
 19979 ;; Hardware stack levels used:    1
 19980 ;; Hardware stack levels required when called:   13
 19981 ;; This function calls:
 19982 ;;		Nothing
 19983 ;; This function is called by:
 19984 ;;		_printf
 19985 ;; This function uses a non-reentrant model
 19986 ;;
 19987                           
 19988                           	psect	text47
 19989  016442                     __ptext47:
 19990                           	opt stack 0
 19991  016442                     ___flge:
 19992                           	opt stack 14
 19993                           
 19994                           ; BSR set to: 1
 19995                           ;incstack = 0
 19996  016442  0E00               	movlw	0
 19997  016444  0101               	movlb	1	; () banked
 19998  016446  1517               	andwf	___flge@ff1& (0+255),w,b
 19999  016448  6F1F               	movwf	??___flge& (0+255),b
 20000  01644A  0E00               	movlw	0
 20001  01644C  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 20002  01644E  6F20               	movwf	(??___flge+1)& (0+255),b
 20003  016450  0E80               	movlw	128
 20004  016452  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 20005  016454  6F21               	movwf	(??___flge+2)& (0+255),b
 20006  016456  0E7F               	movlw	127
 20007  016458  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 20008  01645A  6F22               	movwf	(??___flge+3)& (0+255),b
 20009  01645C  511F               	movf	??___flge& (0+255),w,b
 20010  01645E  1120               	iorwf	(??___flge+1)& (0+255),w,b
 20011  016460  1121               	iorwf	(??___flge+2)& (0+255),w,b
 20012  016462  1122               	iorwf	(??___flge+3)& (0+255),w,b
 20013  016464  A4D8               	btfss	status,2,c
 20014  016466  D008               	goto	l1727
 20015                           
 20016                           ; BSR set to: 1
 20017  016468  0E00               	movlw	0
 20018  01646A  6F17               	movwf	___flge@ff1& (0+255),b
 20019  01646C  0E00               	movlw	0
 20020  01646E  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 20021  016470  0E00               	movlw	0
 20022  016472  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 20023  016474  0E00               	movlw	0
 20024  016476  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 20025  016478                     l1727:
 20026                           
 20027                           ; BSR set to: 1
 20028                           
 20029                           ; BSR set to: 1
 20030  016478  0E00               	movlw	0
 20031  01647A  151B               	andwf	___flge@ff2& (0+255),w,b
 20032  01647C  6F1F               	movwf	??___flge& (0+255),b
 20033  01647E  0E00               	movlw	0
 20034  016480  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 20035  016482  6F20               	movwf	(??___flge+1)& (0+255),b
 20036  016484  0E80               	movlw	128
 20037  016486  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 20038  016488  6F21               	movwf	(??___flge+2)& (0+255),b
 20039  01648A  0E7F               	movlw	127
 20040  01648C  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 20041  01648E  6F22               	movwf	(??___flge+3)& (0+255),b
 20042  016490  511F               	movf	??___flge& (0+255),w,b
 20043  016492  1120               	iorwf	(??___flge+1)& (0+255),w,b
 20044  016494  1121               	iorwf	(??___flge+2)& (0+255),w,b
 20045  016496  1122               	iorwf	(??___flge+3)& (0+255),w,b
 20046  016498  A4D8               	btfss	status,2,c
 20047  01649A  D008               	goto	l1728
 20048                           
 20049                           ; BSR set to: 1
 20050  01649C  0E00               	movlw	0
 20051  01649E  6F1B               	movwf	___flge@ff2& (0+255),b
 20052  0164A0  0E00               	movlw	0
 20053  0164A2  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20054  0164A4  0E00               	movlw	0
 20055  0164A6  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20056  0164A8  0E00               	movlw	0
 20057  0164AA  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20058  0164AC                     l1728:
 20059                           
 20060                           ; BSR set to: 1
 20061                           
 20062                           ; BSR set to: 1
 20063  0164AC  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 20064  0164AE  D01D               	goto	l1729
 20065                           
 20066                           ; BSR set to: 1
 20067  0164B0  C117  F11F         	movff	___flge@ff1,??___flge
 20068  0164B4  C118  F120         	movff	___flge@ff1+1,??___flge+1
 20069  0164B8  C119  F121         	movff	___flge@ff1+2,??___flge+2
 20070  0164BC  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 20071  0164C0  1F1F               	comf	??___flge& (0+255),f,b
 20072  0164C2  1F20               	comf	(??___flge+1)& (0+255),f,b
 20073  0164C4  1F21               	comf	(??___flge+2)& (0+255),f,b
 20074  0164C6  1F22               	comf	(??___flge+3)& (0+255),f,b
 20075  0164C8  2B1F               	incf	??___flge& (0+255),f,b
 20076  0164CA  0E00               	movlw	0
 20077  0164CC  2320               	addwfc	(??___flge+1)& (0+255),f,b
 20078  0164CE  2321               	addwfc	(??___flge+2)& (0+255),f,b
 20079  0164D0  2322               	addwfc	(??___flge+3)& (0+255),f,b
 20080  0164D2  0E00               	movlw	0
 20081  0164D4  251F               	addwf	??___flge& (0+255),w,b
 20082  0164D6  6F17               	movwf	___flge@ff1& (0+255),b
 20083  0164D8  0E00               	movlw	0
 20084  0164DA  2120               	addwfc	(??___flge+1)& (0+255),w,b
 20085  0164DC  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 20086  0164DE  0E00               	movlw	0
 20087  0164E0  2121               	addwfc	(??___flge+2)& (0+255),w,b
 20088  0164E2  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 20089  0164E4  0E80               	movlw	128
 20090  0164E6  2122               	addwfc	(??___flge+3)& (0+255),w,b
 20091  0164E8  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 20092  0164EA                     l1729:
 20093                           
 20094                           ; BSR set to: 1
 20095                           
 20096                           ; BSR set to: 1
 20097  0164EA  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 20098  0164EC  D01D               	goto	l1730
 20099                           
 20100                           ; BSR set to: 1
 20101  0164EE  C11B  F11F         	movff	___flge@ff2,??___flge
 20102  0164F2  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 20103  0164F6  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 20104  0164FA  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 20105  0164FE  1F1F               	comf	??___flge& (0+255),f,b
 20106  016500  1F20               	comf	(??___flge+1)& (0+255),f,b
 20107  016502  1F21               	comf	(??___flge+2)& (0+255),f,b
 20108  016504  1F22               	comf	(??___flge+3)& (0+255),f,b
 20109  016506  2B1F               	incf	??___flge& (0+255),f,b
 20110  016508  0E00               	movlw	0
 20111  01650A  2320               	addwfc	(??___flge+1)& (0+255),f,b
 20112  01650C  2321               	addwfc	(??___flge+2)& (0+255),f,b
 20113  01650E  2322               	addwfc	(??___flge+3)& (0+255),f,b
 20114  016510  0E00               	movlw	0
 20115  016512  251F               	addwf	??___flge& (0+255),w,b
 20116  016514  6F1B               	movwf	___flge@ff2& (0+255),b
 20117  016516  0E00               	movlw	0
 20118  016518  2120               	addwfc	(??___flge+1)& (0+255),w,b
 20119  01651A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20120  01651C  0E00               	movlw	0
 20121  01651E  2121               	addwfc	(??___flge+2)& (0+255),w,b
 20122  016520  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20123  016522  0E80               	movlw	128
 20124  016524  2122               	addwfc	(??___flge+3)& (0+255),w,b
 20125  016526  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20126  016528                     l1730:
 20127                           
 20128                           ; BSR set to: 1
 20129  016528  0E00               	movlw	0
 20130  01652A  1B17               	xorwf	___flge@ff1& (0+255),f,b
 20131  01652C  0E00               	movlw	0
 20132  01652E  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20133  016530  0E00               	movlw	0
 20134  016532  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20135  016534  0E80               	movlw	128
 20136  016536  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20137  016538  0E00               	movlw	0
 20138  01653A  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 20139  01653C  0E00               	movlw	0
 20140  01653E  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20141  016540  0E00               	movlw	0
 20142  016542  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20143  016544  0E80               	movlw	128
 20144  016546  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20145  016548  511B               	movf	___flge@ff2& (0+255),w,b
 20146  01654A  5D17               	subwf	___flge@ff1& (0+255),w,b
 20147  01654C  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 20148  01654E  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20149  016550  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 20150  016552  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20151  016554  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 20152  016556  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20153  016558  B0D8               	btfsc	status,0,c
 20154  01655A  D002               	goto	l10438
 20155                           
 20156                           ; BSR set to: 1
 20157  01655C  90D8               	bcf	status,0,c
 20158  01655E  0012               	return	
 20159  016560                     l10438:
 20160                           
 20161                           ; BSR set to: 1
 20162                           
 20163                           ; BSR set to: 1
 20164  016560  80D8               	bsf	status,0,c
 20165                           
 20166                           ; BSR set to: 1
 20167  016562  0012               	return	
 20168  016564                     __end_of___flge:
 20169                           	opt stack 0
 20170                           tblptru	equ	0xFF8
 20171                           tblptrh	equ	0xFF7
 20172                           tblptrl	equ	0xFF6
 20173                           tablat	equ	0xFF5
 20174                           prodh	equ	0xFF4
 20175                           prodl	equ	0xFF3
 20176                           intcon	equ	0xFF2
 20177                           indf0	equ	0xFEF
 20178                           postinc0	equ	0xFEE
 20179                           fsr0h	equ	0xFEA
 20180                           fsr0l	equ	0xFE9
 20181                           wreg	equ	0xFE8
 20182                           indf1	equ	0xFE7
 20183                           postdec1	equ	0xFE5
 20184                           plusw1	equ	0xFE3
 20185                           fsr1h	equ	0xFE2
 20186                           fsr1l	equ	0xFE1
 20187                           indf2	equ	0xFDF
 20188                           postinc2	equ	0xFDE
 20189                           postdec2	equ	0xFDD
 20190                           plusw2	equ	0xFDB
 20191                           fsr2h	equ	0xFDA
 20192                           fsr2l	equ	0xFD9
 20193                           status	equ	0xFD8
 20194                           
 20195 ;; *************** function _getCauseOfReset *****************
 20196 ;; Defined at:
 20197 ;;		line 11 in file "cause_of_reset.c"
 20198 ;; Parameters:    Size  Location     Type
 20199 ;;		None
 20200 ;; Auto vars:     Size  Location     Type
 20201 ;;  return_reset    1   23[BANK1 ] enum E17455
 20202 ;; Return value:  Size  Location     Type
 20203 ;;                  1    wreg      enum E17948
 20204 ;; Registers used:
 20205 ;;		wreg, status,2
 20206 ;; Tracked objects:
 20207 ;;		On entry : 0/0
 20208 ;;		On exit  : 0/0
 20209 ;;		Unchanged: 0/0
 20210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20212 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20214 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20215 ;;Total ram usage:        1 bytes
 20216 ;; Hardware stack levels used:    1
 20217 ;; Hardware stack levels required when called:   13
 20218 ;; This function calls:
 20219 ;;		Nothing
 20220 ;; This function is called by:
 20221 ;;		_main
 20222 ;; This function uses a non-reentrant model
 20223 ;;
 20224                           
 20225                           	psect	text48
 20226  017850                     __ptext48:
 20227                           	opt stack 0
 20228  017850                     _getCauseOfReset:
 20229                           	opt stack 17
 20230                           
 20231                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 20232                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 20233                           
 20234                           ; BSR set to: 1
 20235                           ;incstack = 0
 20236  017850  AED7               	btfss	4055,7,c	;volatile
 20237  017852  D002               	goto	l1290
 20238                           
 20239                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 20240  017854  0E07               	movlw	7
 20241  017856  D019               	goto	L14
 20242  017858                     l1290:
 20243                           
 20244                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 20245  017858  ACD7               	btfss	4055,6,c	;volatile
 20246  01785A  D002               	goto	l1292
 20247                           
 20248                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 20249  01785C  0E08               	movlw	8
 20250  01785E  D015               	goto	L14
 20251  017860                     l1292:
 20252                           
 20253                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 20254  017860  BAD7               	btfsc	4055,5,c	;volatile
 20255  017862  D002               	goto	l1294
 20256                           
 20257                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 20258  017864  0E05               	movlw	5
 20259  017866  D011               	goto	L14
 20260  017868                     l1294:
 20261                           
 20262                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 20263  017868  B6D7               	btfsc	4055,3,c	;volatile
 20264  01786A  D002               	goto	l1296
 20265                           
 20266                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 20267  01786C  0E03               	movlw	3
 20268  01786E  D00D               	goto	L14
 20269  017870                     l1296:
 20270                           
 20271                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 20272  017870  B4D7               	btfsc	4055,2,c	;volatile
 20273  017872  D002               	goto	l1298
 20274                           
 20275                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 20276  017874  0E06               	movlw	6
 20277  017876  D009               	goto	L14
 20278  017878                     l1298:
 20279                           
 20280                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 20281  017878  B2D7               	btfsc	4055,1,c	;volatile
 20282  01787A  D002               	goto	l1300
 20283                           
 20284                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 20285  01787C  0E01               	movlw	1
 20286  01787E  D005               	goto	L14
 20287  017880                     l1300:
 20288                           
 20289                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 20290  017880  B0D7               	btfsc	4055,0,c	;volatile
 20291  017882  D002               	goto	l1302
 20292                           
 20293                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 20294  017884  0E02               	movlw	2
 20295  017886  D001               	goto	L14
 20296  017888                     l1302:
 20297                           
 20298                           ;cause_of_reset.c: 60: else {
 20299                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 20300                           
 20301                           ; BSR set to: 1
 20302  017888  0E00               	movlw	0
 20303  01788A                     L14:
 20304  01788A  0101               	movlb	1	; () banked
 20305  01788C  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 20306                           
 20307                           ; BSR set to: 1
 20308                           ;cause_of_reset.c: 64: }
 20309                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 20310                           
 20311                           ; BSR set to: 1
 20312                           
 20313                           ; BSR set to: 1
 20314                           
 20315                           ; BSR set to: 1
 20316                           
 20317                           ; BSR set to: 1
 20318                           
 20319                           ; BSR set to: 1
 20320                           
 20321                           ; BSR set to: 1
 20322                           
 20323                           ; BSR set to: 1
 20324  01788E  9ED7               	bcf	4055,7,c	;volatile
 20325                           
 20326                           ; BSR set to: 1
 20327                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 20328  017890  9CD7               	bcf	4055,6,c	;volatile
 20329                           
 20330                           ; BSR set to: 1
 20331                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 20332  017892  8AD7               	bsf	4055,5,c	;volatile
 20333                           
 20334                           ; BSR set to: 1
 20335                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 20336  017894  88D7               	bsf	4055,4,c	;volatile
 20337                           
 20338                           ; BSR set to: 1
 20339                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 20340  017896  86D7               	bsf	4055,3,c	;volatile
 20341                           
 20342                           ; BSR set to: 1
 20343                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 20344  017898  84D7               	bsf	4055,2,c	;volatile
 20345                           
 20346                           ; BSR set to: 1
 20347                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 20348  01789A  82D7               	bsf	4055,1,c	;volatile
 20349                           
 20350                           ; BSR set to: 1
 20351                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 20352  01789C  80D7               	bsf	4055,0,c	;volatile
 20353                           
 20354                           ;cause_of_reset.c: 76: return return_reset_cause;
 20355  01789E  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 20356  0178A0  0012               	return	
 20357  0178A2                     __end_of_getCauseOfReset:
 20358                           	opt stack 0
 20359                           tblptru	equ	0xFF8
 20360                           tblptrh	equ	0xFF7
 20361                           tblptrl	equ	0xFF6
 20362                           tablat	equ	0xFF5
 20363                           prodh	equ	0xFF4
 20364                           prodl	equ	0xFF3
 20365                           intcon	equ	0xFF2
 20366                           indf0	equ	0xFEF
 20367                           postinc0	equ	0xFEE
 20368                           fsr0h	equ	0xFEA
 20369                           fsr0l	equ	0xFE9
 20370                           wreg	equ	0xFE8
 20371                           indf1	equ	0xFE7
 20372                           postdec1	equ	0xFE5
 20373                           plusw1	equ	0xFE3
 20374                           fsr1h	equ	0xFE2
 20375                           fsr1l	equ	0xFE1
 20376                           indf2	equ	0xFDF
 20377                           postinc2	equ	0xFDE
 20378                           postdec2	equ	0xFDD
 20379                           plusw2	equ	0xFDB
 20380                           fsr2h	equ	0xFDA
 20381                           fsr2l	equ	0xFD9
 20382                           status	equ	0xFD8
 20383                           
 20384 ;; *************** function _SYSTEM_Initialize *****************
 20385 ;; Defined at:
 20386 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20387 ;; Parameters:    Size  Location     Type
 20388 ;;		None
 20389 ;; Auto vars:     Size  Location     Type
 20390 ;;		None
 20391 ;; Return value:  Size  Location     Type
 20392 ;;                  1    wreg      void 
 20393 ;; Registers used:
 20394 ;;		wreg, status,2, status,0, cstack
 20395 ;; Tracked objects:
 20396 ;;		On entry : 0/0
 20397 ;;		On exit  : 0/0
 20398 ;;		Unchanged: 0/0
 20399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20404 ;;Total ram usage:        0 bytes
 20405 ;; Hardware stack levels used:    1
 20406 ;; Hardware stack levels required when called:   15
 20407 ;; This function calls:
 20408 ;;		_ADCC_Initialize
 20409 ;;		_EUSART2_Initialize
 20410 ;;		_FVR_Initialize
 20411 ;;		_HLVD_Initialize
 20412 ;;		_INTERRUPT_Initialize
 20413 ;;		_OSCILLATOR_Initialize
 20414 ;;		_PIN_MANAGER_Initialize
 20415 ;;		_PMD_Initialize
 20416 ;;		_TMR5_Initialize
 20417 ;;		_TMR6_Initialize
 20418 ;;		_TMR7_Initialize
 20419 ;; This function is called by:
 20420 ;;		_main
 20421 ;; This function uses a non-reentrant model
 20422 ;;
 20423                           
 20424                           	psect	text49
 20425  017E26                     __ptext49:
 20426                           	opt stack 0
 20427  017E26                     _SYSTEM_Initialize:
 20428                           	opt stack 15
 20429                           
 20430                           ;mcc.c: 52: INTERRUPT_Initialize();
 20431                           
 20432                           ; BSR set to: 1
 20433                           ;incstack = 0
 20434  017E26  EC2F  F0C0         	call	_INTERRUPT_Initialize	;wreg free
 20435                           
 20436                           ;mcc.c: 53: PMD_Initialize();
 20437  017E2A  ECF8  F0BF         	call	_PMD_Initialize	;wreg free
 20438                           
 20439                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 20440  017E2E  EC40  F0B7         	call	_PIN_MANAGER_Initialize	;wreg free
 20441                           
 20442                           ;mcc.c: 55: OSCILLATOR_Initialize();
 20443  017E32  EC06  F0C0         	call	_OSCILLATOR_Initialize	;wreg free
 20444                           
 20445                           ;mcc.c: 56: HLVD_Initialize();
 20446  017E36  EC64  F0C0         	call	_HLVD_Initialize	;wreg free
 20447                           
 20448                           ;mcc.c: 57: FVR_Initialize();
 20449  017E3A  ECAF  F0C0         	call	_FVR_Initialize	;wreg free
 20450                           
 20451                           ;mcc.c: 58: TMR7_Initialize();
 20452  017E3E  ECA1  F0BC         	call	_TMR7_Initialize	;wreg free
 20453                           
 20454                           ;mcc.c: 59: TMR6_Initialize();
 20455  017E42  ECCA  F0BE         	call	_TMR6_Initialize	;wreg free
 20456                           
 20457                           ;mcc.c: 60: ADCC_Initialize();
 20458  017E46  EC9A  F0BB         	call	_ADCC_Initialize	;wreg free
 20459                           
 20460                           ;mcc.c: 61: TMR5_Initialize();
 20461  017E4A  EC79  F0BC         	call	_TMR5_Initialize	;wreg free
 20462                           
 20463                           ;mcc.c: 62: EUSART2_Initialize();
 20464  017E4E  ECCA  F0BA         	call	_EUSART2_Initialize	;wreg free
 20465  017E52  0012               	return		;funcret
 20466  017E54                     __end_of_SYSTEM_Initialize:
 20467                           	opt stack 0
 20468                           tblptru	equ	0xFF8
 20469                           tblptrh	equ	0xFF7
 20470                           tblptrl	equ	0xFF6
 20471                           tablat	equ	0xFF5
 20472                           prodh	equ	0xFF4
 20473                           prodl	equ	0xFF3
 20474                           intcon	equ	0xFF2
 20475                           indf0	equ	0xFEF
 20476                           postinc0	equ	0xFEE
 20477                           fsr0h	equ	0xFEA
 20478                           fsr0l	equ	0xFE9
 20479                           wreg	equ	0xFE8
 20480                           indf1	equ	0xFE7
 20481                           postdec1	equ	0xFE5
 20482                           plusw1	equ	0xFE3
 20483                           fsr1h	equ	0xFE2
 20484                           fsr1l	equ	0xFE1
 20485                           indf2	equ	0xFDF
 20486                           postinc2	equ	0xFDE
 20487                           postdec2	equ	0xFDD
 20488                           plusw2	equ	0xFDB
 20489                           fsr2h	equ	0xFDA
 20490                           fsr2l	equ	0xFD9
 20491                           status	equ	0xFD8
 20492                           
 20493 ;; *************** function _TMR7_Initialize *****************
 20494 ;; Defined at:
 20495 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 20496 ;; Parameters:    Size  Location     Type
 20497 ;;		None
 20498 ;; Auto vars:     Size  Location     Type
 20499 ;;		None
 20500 ;; Return value:  Size  Location     Type
 20501 ;;                  1    wreg      void 
 20502 ;; Registers used:
 20503 ;;		wreg, status,2, status,0, cstack
 20504 ;; Tracked objects:
 20505 ;;		On entry : 0/0
 20506 ;;		On exit  : 0/0
 20507 ;;		Unchanged: 0/0
 20508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20511 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20512 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20513 ;;Total ram usage:        2 bytes
 20514 ;; Hardware stack levels used:    1
 20515 ;; Hardware stack levels required when called:   14
 20516 ;; This function calls:
 20517 ;;		_TMR7_SetInterruptHandler
 20518 ;; This function is called by:
 20519 ;;		_SYSTEM_Initialize
 20520 ;; This function uses a non-reentrant model
 20521 ;;
 20522                           
 20523                           	psect	text50
 20524  017942                     __ptext50:
 20525                           	opt stack 0
 20526  017942                     _TMR7_Initialize:
 20527                           	opt stack 15
 20528                           
 20529                           ;tmr7.c: 69: T7GCON = 0x00;
 20530                           
 20531                           ;incstack = 0
 20532  017942  0E00               	movlw	0
 20533  017944  010F               	movlb	15	; () banked
 20534  017946  6F31               	movwf	49,b	;volatile
 20535                           
 20536                           ;tmr7.c: 72: T7GATE = 0x00;
 20537  017948  0E00               	movlw	0
 20538  01794A  6F32               	movwf	50,b	;volatile
 20539                           
 20540                           ;tmr7.c: 75: T7CLK = 0x03;
 20541  01794C  0E03               	movlw	3
 20542  01794E  6F33               	movwf	51,b	;volatile
 20543                           
 20544                           ;tmr7.c: 78: TMR7H = 0x3C;
 20545  017950  0E3C               	movlw	60
 20546  017952  6F2F               	movwf	47,b	;volatile
 20547                           
 20548                           ;tmr7.c: 81: TMR7L = 0xB0;
 20549  017954  0EB0               	movlw	176
 20550  017956  6F2E               	movwf	46,b	;volatile
 20551                           
 20552                           ; BSR set to: 15
 20553                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 20554  017958  512E               	movf	46,w,b	;volatile
 20555  01795A  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 20556  01795E  0101               	movlb	1	; () banked
 20557  017960  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 20558  017962  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 20559  017966  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 20560  017968  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 20561  01796A  6FDB               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 20562  01796C  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 20563  01796E  6FDC               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 20564                           
 20565                           ; BSR set to: 1
 20566                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 20567  017970  010E               	movlb	14	; () banked
 20568  017972  9D38               	bcf	56,6,b	;volatile
 20569                           
 20570                           ; BSR set to: 14
 20571                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 20572  017974  8D2E               	bsf	46,6,b	;volatile
 20573                           
 20574                           ; BSR set to: 14
 20575                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 20576  017976  0E86               	movlw	low _TMR7_DefaultInterruptHandler
 20577  017978  0101               	movlb	1	; () banked
 20578  01797A  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 20579  01797C  0E81               	movlw	high _TMR7_DefaultInterruptHandler
 20580  01797E  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20581  017980  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 20582  017982  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20583  017984  EC73  F0C0         	call	_TMR7_SetInterruptHandler	;wreg free
 20584                           
 20585                           ;tmr7.c: 96: T7CON = 0x31;
 20586  017988  0E31               	movlw	49
 20587  01798A  010F               	movlb	15	; () banked
 20588  01798C  6F30               	movwf	48,b	;volatile
 20589                           
 20590                           ; BSR set to: 15
 20591  01798E  0012               	return		;funcret
 20592  017990                     __end_of_TMR7_Initialize:
 20593                           	opt stack 0
 20594                           tblptru	equ	0xFF8
 20595                           tblptrh	equ	0xFF7
 20596                           tblptrl	equ	0xFF6
 20597                           tablat	equ	0xFF5
 20598                           prodh	equ	0xFF4
 20599                           prodl	equ	0xFF3
 20600                           intcon	equ	0xFF2
 20601                           indf0	equ	0xFEF
 20602                           postinc0	equ	0xFEE
 20603                           fsr0h	equ	0xFEA
 20604                           fsr0l	equ	0xFE9
 20605                           wreg	equ	0xFE8
 20606                           indf1	equ	0xFE7
 20607                           postdec1	equ	0xFE5
 20608                           plusw1	equ	0xFE3
 20609                           fsr1h	equ	0xFE2
 20610                           fsr1l	equ	0xFE1
 20611                           indf2	equ	0xFDF
 20612                           postinc2	equ	0xFDE
 20613                           postdec2	equ	0xFDD
 20614                           plusw2	equ	0xFDB
 20615                           fsr2h	equ	0xFDA
 20616                           fsr2l	equ	0xFD9
 20617                           status	equ	0xFD8
 20618                           
 20619 ;; *************** function _TMR7_SetInterruptHandler *****************
 20620 ;; Defined at:
 20621 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 20622 ;; Parameters:    Size  Location     Type
 20623 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20624 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 20625 ;; Auto vars:     Size  Location     Type
 20626 ;;		None
 20627 ;; Return value:  Size  Location     Type
 20628 ;;                  1    wreg      void 
 20629 ;; Registers used:
 20630 ;;		wreg, status,2, status,0
 20631 ;; Tracked objects:
 20632 ;;		On entry : 0/0
 20633 ;;		On exit  : 0/0
 20634 ;;		Unchanged: 0/0
 20635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20636 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20639 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20640 ;;Total ram usage:        3 bytes
 20641 ;; Hardware stack levels used:    1
 20642 ;; Hardware stack levels required when called:   13
 20643 ;; This function calls:
 20644 ;;		Nothing
 20645 ;; This function is called by:
 20646 ;;		_TMR7_Initialize
 20647 ;;		_main
 20648 ;; This function uses a non-reentrant model
 20649 ;;
 20650                           
 20651                           	psect	text51
 20652  0180E6                     __ptext51:
 20653                           	opt stack 0
 20654  0180E6                     _TMR7_SetInterruptHandler:
 20655                           	opt stack 17
 20656                           
 20657                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 20658                           
 20659                           ; BSR set to: 15
 20660                           ;incstack = 0
 20661  0180E6  C117  F263         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 20662  0180EA  C118  F264         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 20663  0180EE  C119  F265         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 20664  0180F2  0012               	return		;funcret
 20665  0180F4                     __end_of_TMR7_SetInterruptHandler:
 20666                           	opt stack 0
 20667                           tblptru	equ	0xFF8
 20668                           tblptrh	equ	0xFF7
 20669                           tblptrl	equ	0xFF6
 20670                           tablat	equ	0xFF5
 20671                           prodh	equ	0xFF4
 20672                           prodl	equ	0xFF3
 20673                           intcon	equ	0xFF2
 20674                           indf0	equ	0xFEF
 20675                           postinc0	equ	0xFEE
 20676                           fsr0h	equ	0xFEA
 20677                           fsr0l	equ	0xFE9
 20678                           wreg	equ	0xFE8
 20679                           indf1	equ	0xFE7
 20680                           postdec1	equ	0xFE5
 20681                           plusw1	equ	0xFE3
 20682                           fsr1h	equ	0xFE2
 20683                           fsr1l	equ	0xFE1
 20684                           indf2	equ	0xFDF
 20685                           postinc2	equ	0xFDE
 20686                           postdec2	equ	0xFDD
 20687                           plusw2	equ	0xFDB
 20688                           fsr2h	equ	0xFDA
 20689                           fsr2l	equ	0xFD9
 20690                           status	equ	0xFD8
 20691                           
 20692 ;; *************** function _TMR6_Initialize *****************
 20693 ;; Defined at:
 20694 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 20695 ;; Parameters:    Size  Location     Type
 20696 ;;		None
 20697 ;; Auto vars:     Size  Location     Type
 20698 ;;		None
 20699 ;; Return value:  Size  Location     Type
 20700 ;;                  1    wreg      void 
 20701 ;; Registers used:
 20702 ;;		wreg, status,2, status,0, cstack
 20703 ;; Tracked objects:
 20704 ;;		On entry : 0/0
 20705 ;;		On exit  : 0/0
 20706 ;;		Unchanged: 0/0
 20707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20712 ;;Total ram usage:        0 bytes
 20713 ;; Hardware stack levels used:    1
 20714 ;; Hardware stack levels required when called:   14
 20715 ;; This function calls:
 20716 ;;		_TMR6_SetInterruptHandler
 20717 ;; This function is called by:
 20718 ;;		_SYSTEM_Initialize
 20719 ;; This function uses a non-reentrant model
 20720 ;;
 20721                           
 20722                           	psect	text52
 20723  017D94                     __ptext52:
 20724                           	opt stack 0
 20725  017D94                     _TMR6_Initialize:
 20726                           	opt stack 15
 20727                           
 20728                           ;tmr6.c: 69: T6CLKCON = 0x04;
 20729                           
 20730                           ;incstack = 0
 20731  017D94  0E04               	movlw	4
 20732  017D96  6EB3               	movwf	4019,c	;volatile
 20733                           
 20734                           ;tmr6.c: 72: T6HLT = 0x20;
 20735  017D98  0E20               	movlw	32
 20736  017D9A  6EB2               	movwf	4018,c	;volatile
 20737                           
 20738                           ;tmr6.c: 75: T6RST = 0x00;
 20739  017D9C  0E00               	movlw	0
 20740  017D9E  6EB4               	movwf	4020,c	;volatile
 20741                           
 20742                           ;tmr6.c: 78: T6PR = 0xF1;
 20743  017DA0  0EF1               	movlw	241
 20744  017DA2  6EB0               	movwf	4016,c	;volatile
 20745                           
 20746                           ;tmr6.c: 81: T6TMR = 0x00;
 20747  017DA4  0E00               	movlw	0
 20748  017DA6  6EAF               	movwf	4015,c	;volatile
 20749                           
 20750                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 20751  017DA8  010E               	movlb	14	; () banked
 20752  017DAA  9B38               	bcf	56,5,b	;volatile
 20753                           
 20754                           ; BSR set to: 14
 20755                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 20756  017DAC  8B2E               	bsf	46,5,b	;volatile
 20757                           
 20758                           ; BSR set to: 14
 20759                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 20760  017DAE  0E88               	movlw	low _TMR6_DefaultInterruptHandler
 20761  017DB0  0101               	movlb	1	; () banked
 20762  017DB2  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 20763  017DB4  0E81               	movlw	high _TMR6_DefaultInterruptHandler
 20764  017DB6  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20765  017DB8  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 20766  017DBA  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20767  017DBC  EC7A  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 20768                           
 20769                           ;tmr6.c: 93: T6CON = 0xBF;
 20770  017DC0  0EBF               	movlw	191
 20771  017DC2  6EB1               	movwf	4017,c	;volatile
 20772  017DC4  0012               	return		;funcret
 20773  017DC6                     __end_of_TMR6_Initialize:
 20774                           	opt stack 0
 20775                           tblptru	equ	0xFF8
 20776                           tblptrh	equ	0xFF7
 20777                           tblptrl	equ	0xFF6
 20778                           tablat	equ	0xFF5
 20779                           prodh	equ	0xFF4
 20780                           prodl	equ	0xFF3
 20781                           intcon	equ	0xFF2
 20782                           indf0	equ	0xFEF
 20783                           postinc0	equ	0xFEE
 20784                           fsr0h	equ	0xFEA
 20785                           fsr0l	equ	0xFE9
 20786                           wreg	equ	0xFE8
 20787                           indf1	equ	0xFE7
 20788                           postdec1	equ	0xFE5
 20789                           plusw1	equ	0xFE3
 20790                           fsr1h	equ	0xFE2
 20791                           fsr1l	equ	0xFE1
 20792                           indf2	equ	0xFDF
 20793                           postinc2	equ	0xFDE
 20794                           postdec2	equ	0xFDD
 20795                           plusw2	equ	0xFDB
 20796                           fsr2h	equ	0xFDA
 20797                           fsr2l	equ	0xFD9
 20798                           status	equ	0xFD8
 20799                           
 20800 ;; *************** function _TMR6_SetInterruptHandler *****************
 20801 ;; Defined at:
 20802 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 20803 ;; Parameters:    Size  Location     Type
 20804 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20805 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 20806 ;; Auto vars:     Size  Location     Type
 20807 ;;		None
 20808 ;; Return value:  Size  Location     Type
 20809 ;;                  1    wreg      void 
 20810 ;; Registers used:
 20811 ;;		wreg, status,2, status,0
 20812 ;; Tracked objects:
 20813 ;;		On entry : 0/0
 20814 ;;		On exit  : 0/0
 20815 ;;		Unchanged: 0/0
 20816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20817 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20820 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20821 ;;Total ram usage:        3 bytes
 20822 ;; Hardware stack levels used:    1
 20823 ;; Hardware stack levels required when called:   13
 20824 ;; This function calls:
 20825 ;;		Nothing
 20826 ;; This function is called by:
 20827 ;;		_TMR6_Initialize
 20828 ;;		_main
 20829 ;; This function uses a non-reentrant model
 20830 ;;
 20831                           
 20832                           	psect	text53
 20833  0180F4                     __ptext53:
 20834                           	opt stack 0
 20835  0180F4                     _TMR6_SetInterruptHandler:
 20836                           	opt stack 17
 20837                           
 20838                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 20839                           
 20840                           ;incstack = 0
 20841  0180F4  C117  F269         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 20842  0180F8  C118  F26A         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 20843  0180FC  C119  F26B         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 20844  018100  0012               	return		;funcret
 20845  018102                     __end_of_TMR6_SetInterruptHandler:
 20846                           	opt stack 0
 20847                           tblptru	equ	0xFF8
 20848                           tblptrh	equ	0xFF7
 20849                           tblptrl	equ	0xFF6
 20850                           tablat	equ	0xFF5
 20851                           prodh	equ	0xFF4
 20852                           prodl	equ	0xFF3
 20853                           intcon	equ	0xFF2
 20854                           indf0	equ	0xFEF
 20855                           postinc0	equ	0xFEE
 20856                           fsr0h	equ	0xFEA
 20857                           fsr0l	equ	0xFE9
 20858                           wreg	equ	0xFE8
 20859                           indf1	equ	0xFE7
 20860                           postdec1	equ	0xFE5
 20861                           plusw1	equ	0xFE3
 20862                           fsr1h	equ	0xFE2
 20863                           fsr1l	equ	0xFE1
 20864                           indf2	equ	0xFDF
 20865                           postinc2	equ	0xFDE
 20866                           postdec2	equ	0xFDD
 20867                           plusw2	equ	0xFDB
 20868                           fsr2h	equ	0xFDA
 20869                           fsr2l	equ	0xFD9
 20870                           status	equ	0xFD8
 20871                           
 20872 ;; *************** function _TMR5_Initialize *****************
 20873 ;; Defined at:
 20874 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 20875 ;; Parameters:    Size  Location     Type
 20876 ;;		None
 20877 ;; Auto vars:     Size  Location     Type
 20878 ;;		None
 20879 ;; Return value:  Size  Location     Type
 20880 ;;                  1    wreg      void 
 20881 ;; Registers used:
 20882 ;;		wreg, status,2, status,0, cstack
 20883 ;; Tracked objects:
 20884 ;;		On entry : 0/0
 20885 ;;		On exit  : 0/0
 20886 ;;		Unchanged: 0/0
 20887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20890 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20891 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20892 ;;Total ram usage:        2 bytes
 20893 ;; Hardware stack levels used:    1
 20894 ;; Hardware stack levels required when called:   14
 20895 ;; This function calls:
 20896 ;;		_TMR5_SetInterruptHandler
 20897 ;; This function is called by:
 20898 ;;		_SYSTEM_Initialize
 20899 ;; This function uses a non-reentrant model
 20900 ;;
 20901                           
 20902                           	psect	text54
 20903  0178F2                     __ptext54:
 20904                           	opt stack 0
 20905  0178F2                     _TMR5_Initialize:
 20906                           	opt stack 15
 20907                           
 20908                           ;tmr5.c: 69: T5GCON = 0x00;
 20909                           
 20910                           ;incstack = 0
 20911  0178F2  0E00               	movlw	0
 20912  0178F4  6EC4               	movwf	4036,c	;volatile
 20913                           
 20914                           ;tmr5.c: 72: T5GATE = 0x00;
 20915  0178F6  0E00               	movlw	0
 20916  0178F8  6EC5               	movwf	4037,c	;volatile
 20917                           
 20918                           ;tmr5.c: 75: T5CLK = 0x01;
 20919  0178FA  0E01               	movlw	1
 20920  0178FC  6EC6               	movwf	4038,c	;volatile
 20921                           
 20922                           ;tmr5.c: 78: TMR5H = 0x00;
 20923  0178FE  0E00               	movlw	0
 20924  017900  6EC2               	movwf	4034,c	;volatile
 20925                           
 20926                           ;tmr5.c: 81: TMR5L = 0x00;
 20927  017902  0E00               	movlw	0
 20928  017904  6EC1               	movwf	4033,c	;volatile
 20929                           
 20930                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 20931  017906  50C1               	movf	4033,w,c	;volatile
 20932  017908  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 20933  01790C  0101               	movlb	1	; () banked
 20934  01790E  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 20935  017910  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 20936  017914  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 20937  017916  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 20938  017918  0102               	movlb	2	; () banked
 20939  01791A  6F74               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 20940  01791C  0101               	movlb	1	; () banked
 20941  01791E  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 20942  017920  0102               	movlb	2	; () banked
 20943  017922  6F75               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 20944                           
 20945                           ; BSR set to: 2
 20946                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 20947  017924  010E               	movlb	14	; () banked
 20948  017926  9938               	bcf	56,4,b	;volatile
 20949                           
 20950                           ; BSR set to: 14
 20951                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 20952  017928  892E               	bsf	46,4,b	;volatile
 20953                           
 20954                           ; BSR set to: 14
 20955                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 20956  01792A  0E8A               	movlw	low _TMR5_DefaultInterruptHandler
 20957  01792C  0101               	movlb	1	; () banked
 20958  01792E  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 20959  017930  0E81               	movlw	high _TMR5_DefaultInterruptHandler
 20960  017932  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20961  017934  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 20962  017936  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20963  017938  EC81  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 20964                           
 20965                           ;tmr5.c: 96: T5CON = 0x13;
 20966  01793C  0E13               	movlw	19
 20967  01793E  6EC3               	movwf	4035,c	;volatile
 20968  017940  0012               	return		;funcret
 20969  017942                     __end_of_TMR5_Initialize:
 20970                           	opt stack 0
 20971                           tblptru	equ	0xFF8
 20972                           tblptrh	equ	0xFF7
 20973                           tblptrl	equ	0xFF6
 20974                           tablat	equ	0xFF5
 20975                           prodh	equ	0xFF4
 20976                           prodl	equ	0xFF3
 20977                           intcon	equ	0xFF2
 20978                           indf0	equ	0xFEF
 20979                           postinc0	equ	0xFEE
 20980                           fsr0h	equ	0xFEA
 20981                           fsr0l	equ	0xFE9
 20982                           wreg	equ	0xFE8
 20983                           indf1	equ	0xFE7
 20984                           postdec1	equ	0xFE5
 20985                           plusw1	equ	0xFE3
 20986                           fsr1h	equ	0xFE2
 20987                           fsr1l	equ	0xFE1
 20988                           indf2	equ	0xFDF
 20989                           postinc2	equ	0xFDE
 20990                           postdec2	equ	0xFDD
 20991                           plusw2	equ	0xFDB
 20992                           fsr2h	equ	0xFDA
 20993                           fsr2l	equ	0xFD9
 20994                           status	equ	0xFD8
 20995                           
 20996 ;; *************** function _TMR5_SetInterruptHandler *****************
 20997 ;; Defined at:
 20998 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 20999 ;; Parameters:    Size  Location     Type
 21000 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 21001 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21002 ;; Auto vars:     Size  Location     Type
 21003 ;;		None
 21004 ;; Return value:  Size  Location     Type
 21005 ;;                  1    wreg      void 
 21006 ;; Registers used:
 21007 ;;		wreg, status,2, status,0
 21008 ;; Tracked objects:
 21009 ;;		On entry : 0/0
 21010 ;;		On exit  : 0/0
 21011 ;;		Unchanged: 0/0
 21012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21013 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21016 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21017 ;;Total ram usage:        3 bytes
 21018 ;; Hardware stack levels used:    1
 21019 ;; Hardware stack levels required when called:   13
 21020 ;; This function calls:
 21021 ;;		Nothing
 21022 ;; This function is called by:
 21023 ;;		_TMR5_Initialize
 21024 ;; This function uses a non-reentrant model
 21025 ;;
 21026                           
 21027                           	psect	text55
 21028  018102                     __ptext55:
 21029                           	opt stack 0
 21030  018102                     _TMR5_SetInterruptHandler:
 21031                           	opt stack 15
 21032                           
 21033                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 21034                           
 21035                           ;incstack = 0
 21036  018102  C117  F260         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 21037  018106  C118  F261         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 21038  01810A  C119  F262         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 21039  01810E  0012               	return		;funcret
 21040  018110                     __end_of_TMR5_SetInterruptHandler:
 21041                           	opt stack 0
 21042                           tblptru	equ	0xFF8
 21043                           tblptrh	equ	0xFF7
 21044                           tblptrl	equ	0xFF6
 21045                           tablat	equ	0xFF5
 21046                           prodh	equ	0xFF4
 21047                           prodl	equ	0xFF3
 21048                           intcon	equ	0xFF2
 21049                           indf0	equ	0xFEF
 21050                           postinc0	equ	0xFEE
 21051                           fsr0h	equ	0xFEA
 21052                           fsr0l	equ	0xFE9
 21053                           wreg	equ	0xFE8
 21054                           indf1	equ	0xFE7
 21055                           postdec1	equ	0xFE5
 21056                           plusw1	equ	0xFE3
 21057                           fsr1h	equ	0xFE2
 21058                           fsr1l	equ	0xFE1
 21059                           indf2	equ	0xFDF
 21060                           postinc2	equ	0xFDE
 21061                           postdec2	equ	0xFDD
 21062                           plusw2	equ	0xFDB
 21063                           fsr2h	equ	0xFDA
 21064                           fsr2l	equ	0xFD9
 21065                           status	equ	0xFD8
 21066                           
 21067 ;; *************** function _PMD_Initialize *****************
 21068 ;; Defined at:
 21069 ;;		line 83 in file "mcc_generated_files/mcc.c"
 21070 ;; Parameters:    Size  Location     Type
 21071 ;;		None
 21072 ;; Auto vars:     Size  Location     Type
 21073 ;;		None
 21074 ;; Return value:  Size  Location     Type
 21075 ;;                  1    wreg      void 
 21076 ;; Registers used:
 21077 ;;		wreg, status,2
 21078 ;; Tracked objects:
 21079 ;;		On entry : 0/0
 21080 ;;		On exit  : 0/0
 21081 ;;		Unchanged: 0/0
 21082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21087 ;;Total ram usage:        0 bytes
 21088 ;; Hardware stack levels used:    1
 21089 ;; Hardware stack levels required when called:   13
 21090 ;; This function calls:
 21091 ;;		Nothing
 21092 ;; This function is called by:
 21093 ;;		_SYSTEM_Initialize
 21094 ;; This function uses a non-reentrant model
 21095 ;;
 21096                           
 21097                           	psect	text56
 21098  017FF0                     __ptext56:
 21099                           	opt stack 0
 21100  017FF0                     _PMD_Initialize:
 21101                           	opt stack 16
 21102                           
 21103                           ;mcc.c: 86: PMD0 = 0x00;
 21104                           
 21105                           ;incstack = 0
 21106  017FF0  0E00               	movlw	0
 21107  017FF2  010E               	movlb	14	; () banked
 21108  017FF4  6F4C               	movwf	76,b	;volatile
 21109                           
 21110                           ;mcc.c: 88: PMD1 = 0x00;
 21111  017FF6  0E00               	movlw	0
 21112  017FF8  6F4D               	movwf	77,b	;volatile
 21113                           
 21114                           ;mcc.c: 90: PMD2 = 0x00;
 21115  017FFA  0E00               	movlw	0
 21116  017FFC  6F4E               	movwf	78,b	;volatile
 21117                           
 21118                           ;mcc.c: 92: PMD3 = 0x00;
 21119  017FFE  0E00               	movlw	0
 21120  018000  6F4F               	movwf	79,b	;volatile
 21121                           
 21122                           ;mcc.c: 94: PMD4 = 0x00;
 21123  018002  0E00               	movlw	0
 21124  018004  6F50               	movwf	80,b	;volatile
 21125                           
 21126                           ;mcc.c: 96: PMD5 = 0x00;
 21127  018006  0E00               	movlw	0
 21128  018008  6F51               	movwf	81,b	;volatile
 21129                           
 21130                           ; BSR set to: 14
 21131  01800A  0012               	return		;funcret
 21132  01800C                     __end_of_PMD_Initialize:
 21133                           	opt stack 0
 21134                           tblptru	equ	0xFF8
 21135                           tblptrh	equ	0xFF7
 21136                           tblptrl	equ	0xFF6
 21137                           tablat	equ	0xFF5
 21138                           prodh	equ	0xFF4
 21139                           prodl	equ	0xFF3
 21140                           intcon	equ	0xFF2
 21141                           indf0	equ	0xFEF
 21142                           postinc0	equ	0xFEE
 21143                           fsr0h	equ	0xFEA
 21144                           fsr0l	equ	0xFE9
 21145                           wreg	equ	0xFE8
 21146                           indf1	equ	0xFE7
 21147                           postdec1	equ	0xFE5
 21148                           plusw1	equ	0xFE3
 21149                           fsr1h	equ	0xFE2
 21150                           fsr1l	equ	0xFE1
 21151                           indf2	equ	0xFDF
 21152                           postinc2	equ	0xFDE
 21153                           postdec2	equ	0xFDD
 21154                           plusw2	equ	0xFDB
 21155                           fsr2h	equ	0xFDA
 21156                           fsr2l	equ	0xFD9
 21157                           status	equ	0xFD8
 21158                           
 21159 ;; *************** function _PIN_MANAGER_Initialize *****************
 21160 ;; Defined at:
 21161 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 21162 ;; Parameters:    Size  Location     Type
 21163 ;;		None
 21164 ;; Auto vars:     Size  Location     Type
 21165 ;;		None
 21166 ;; Return value:  Size  Location     Type
 21167 ;;                  1    wreg      void 
 21168 ;; Registers used:
 21169 ;;		wreg, status,2
 21170 ;; Tracked objects:
 21171 ;;		On entry : 0/0
 21172 ;;		On exit  : 0/0
 21173 ;;		Unchanged: 0/0
 21174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21179 ;;Total ram usage:        0 bytes
 21180 ;; Hardware stack levels used:    1
 21181 ;; Hardware stack levels required when called:   13
 21182 ;; This function calls:
 21183 ;;		Nothing
 21184 ;; This function is called by:
 21185 ;;		_SYSTEM_Initialize
 21186 ;; This function uses a non-reentrant model
 21187 ;;
 21188                           
 21189                           	psect	text57
 21190  016E80                     __ptext57:
 21191                           	opt stack 0
 21192  016E80                     _PIN_MANAGER_Initialize:
 21193                           	opt stack 16
 21194                           
 21195                           ;pin_manager.c: 62: LATE = 0x00;
 21196                           
 21197                           ; BSR set to: 14
 21198                           ;incstack = 0
 21199  016E80  0E00               	movlw	0
 21200  016E82  6E7D               	movwf	3965,c	;volatile
 21201                           
 21202                           ;pin_manager.c: 63: LATD = 0x00;
 21203  016E84  0E00               	movlw	0
 21204  016E86  6E7C               	movwf	3964,c	;volatile
 21205                           
 21206                           ;pin_manager.c: 64: LATA = 0x00;
 21207  016E88  0E00               	movlw	0
 21208  016E8A  6E79               	movwf	3961,c	;volatile
 21209                           
 21210                           ;pin_manager.c: 65: LATF = 0x00;
 21211  016E8C  0E00               	movlw	0
 21212  016E8E  6E7E               	movwf	3966,c	;volatile
 21213                           
 21214                           ;pin_manager.c: 66: LATB = 0x00;
 21215  016E90  0E00               	movlw	0
 21216  016E92  6E7A               	movwf	3962,c	;volatile
 21217                           
 21218                           ;pin_manager.c: 67: LATG = 0x00;
 21219  016E94  0E00               	movlw	0
 21220  016E96  6E7F               	movwf	3967,c	;volatile
 21221                           
 21222                           ;pin_manager.c: 68: LATC = 0x00;
 21223  016E98  0E00               	movlw	0
 21224  016E9A  6E7B               	movwf	3963,c	;volatile
 21225                           
 21226                           ;pin_manager.c: 69: LATH = 0x00;
 21227  016E9C  0E00               	movlw	0
 21228  016E9E  6E80               	movwf	3968,c	;volatile
 21229                           
 21230                           ;pin_manager.c: 74: TRISE = 0xFF;
 21231  016EA0  6885               	setf	3973,c	;volatile
 21232                           
 21233                           ;pin_manager.c: 75: TRISF = 0xF0;
 21234  016EA2  0EF0               	movlw	240
 21235  016EA4  6E86               	movwf	3974,c	;volatile
 21236                           
 21237                           ;pin_manager.c: 76: TRISA = 0xFF;
 21238  016EA6  6881               	setf	3969,c	;volatile
 21239                           
 21240                           ;pin_manager.c: 77: TRISG = 0x5C;
 21241  016EA8  0E5C               	movlw	92
 21242  016EAA  6E87               	movwf	3975,c	;volatile
 21243                           
 21244                           ;pin_manager.c: 78: TRISB = 0xFF;
 21245  016EAC  6882               	setf	3970,c	;volatile
 21246                           
 21247                           ;pin_manager.c: 79: TRISH = 0x0F;
 21248  016EAE  0E0F               	movlw	15
 21249  016EB0  6E88               	movwf	3976,c	;volatile
 21250                           
 21251                           ;pin_manager.c: 80: TRISC = 0xFF;
 21252  016EB2  6883               	setf	3971,c	;volatile
 21253                           
 21254                           ;pin_manager.c: 81: TRISD = 0xFF;
 21255  016EB4  6884               	setf	3972,c	;volatile
 21256                           
 21257                           ;pin_manager.c: 86: ANSELD = 0xFF;
 21258  016EB6  010E               	movlb	14	; () banked
 21259  016EB8  69A7               	setf	167,b	;volatile
 21260                           
 21261                           ; BSR set to: 14
 21262                           ;pin_manager.c: 87: ANSELB = 0xFF;
 21263  016EBA  699A               	setf	154,b	;volatile
 21264                           
 21265                           ; BSR set to: 14
 21266                           ;pin_manager.c: 88: ANSELE = 0xFF;
 21267  016EBC  69AF               	setf	175,b	;volatile
 21268                           
 21269                           ;pin_manager.c: 89: ANSELG = 0x3C;
 21270  016EBE  0E3C               	movlw	60
 21271  016EC0  6FBC               	movwf	188,b	;volatile
 21272                           
 21273                           ;pin_manager.c: 90: ANSELF = 0xF0;
 21274  016EC2  0EF0               	movlw	240
 21275  016EC4  6FB4               	movwf	180,b	;volatile
 21276                           
 21277                           ; BSR set to: 14
 21278                           ;pin_manager.c: 91: ANSELA = 0xFF;
 21279  016EC6  6992               	setf	146,b	;volatile
 21280                           
 21281                           ;pin_manager.c: 96: WPUD = 0x00;
 21282  016EC8  0E00               	movlw	0
 21283  016ECA  6FA6               	movwf	166,b	;volatile
 21284                           
 21285                           ;pin_manager.c: 97: WPUF = 0x00;
 21286  016ECC  0E00               	movlw	0
 21287  016ECE  6FB3               	movwf	179,b	;volatile
 21288                           
 21289                           ;pin_manager.c: 98: WPUE = 0x00;
 21290  016ED0  0E00               	movlw	0
 21291  016ED2  6FAE               	movwf	174,b	;volatile
 21292                           
 21293                           ;pin_manager.c: 99: WPUB = 0x00;
 21294  016ED4  0E00               	movlw	0
 21295  016ED6  6F99               	movwf	153,b	;volatile
 21296                           
 21297                           ;pin_manager.c: 100: WPUG = 0x00;
 21298  016ED8  0E00               	movlw	0
 21299  016EDA  6FBB               	movwf	187,b	;volatile
 21300                           
 21301                           ;pin_manager.c: 101: WPUA = 0x00;
 21302  016EDC  0E00               	movlw	0
 21303  016EDE  6F91               	movwf	145,b	;volatile
 21304                           
 21305                           ;pin_manager.c: 102: WPUC = 0x00;
 21306  016EE0  0E00               	movlw	0
 21307  016EE2  6FA1               	movwf	161,b	;volatile
 21308                           
 21309                           ;pin_manager.c: 103: WPUH = 0x00;
 21310  016EE4  0E00               	movlw	0
 21311  016EE6  6FC0               	movwf	192,b	;volatile
 21312                           
 21313                           ;pin_manager.c: 108: ODCONE = 0x00;
 21314  016EE8  0E00               	movlw	0
 21315  016EEA  6FAD               	movwf	173,b	;volatile
 21316                           
 21317                           ;pin_manager.c: 109: ODCONF = 0x01;
 21318  016EEC  0E01               	movlw	1
 21319  016EEE  6FB2               	movwf	178,b	;volatile
 21320                           
 21321                           ;pin_manager.c: 110: ODCONA = 0x00;
 21322  016EF0  0E00               	movlw	0
 21323  016EF2  6F90               	movwf	144,b	;volatile
 21324                           
 21325                           ;pin_manager.c: 111: ODCONG = 0x00;
 21326  016EF4  0E00               	movlw	0
 21327  016EF6  6FBA               	movwf	186,b	;volatile
 21328                           
 21329                           ;pin_manager.c: 112: ODCONB = 0x00;
 21330  016EF8  0E00               	movlw	0
 21331  016EFA  6F98               	movwf	152,b	;volatile
 21332                           
 21333                           ;pin_manager.c: 113: ODCONH = 0x00;
 21334  016EFC  0E00               	movlw	0
 21335  016EFE  6FBF               	movwf	191,b	;volatile
 21336                           
 21337                           ;pin_manager.c: 114: ODCONC = 0x00;
 21338  016F00  0E00               	movlw	0
 21339  016F02  6FA0               	movwf	160,b	;volatile
 21340                           
 21341                           ;pin_manager.c: 115: ODCOND = 0x00;
 21342  016F04  0E00               	movlw	0
 21343  016F06  6FA5               	movwf	165,b	;volatile
 21344                           
 21345                           ; BSR set to: 14
 21346                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 21347  016F08  698F               	setf	143,b	;volatile
 21348                           
 21349                           ; BSR set to: 14
 21350                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 21351  016F0A  6997               	setf	151,b	;volatile
 21352                           
 21353                           ; BSR set to: 14
 21354                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 21355  016F0C  699F               	setf	159,b	;volatile
 21356                           
 21357                           ; BSR set to: 14
 21358                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 21359  016F0E  69A4               	setf	164,b	;volatile
 21360                           
 21361                           ; BSR set to: 14
 21362                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 21363  016F10  69AC               	setf	172,b	;volatile
 21364                           
 21365                           ; BSR set to: 14
 21366                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 21367  016F12  69B1               	setf	177,b	;volatile
 21368                           
 21369                           ; BSR set to: 14
 21370                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 21371  016F14  69B9               	setf	185,b	;volatile
 21372                           
 21373                           ; BSR set to: 14
 21374                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 21375  016F16  69BE               	setf	190,b	;volatile
 21376                           
 21377                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 21378  016F18  0E0E               	movlw	14
 21379  016F1A  6F89               	movwf	137,b	;volatile
 21380                           
 21381                           ;pin_manager.c: 137: RX2PPS = 0x36;
 21382  016F1C  0E36               	movlw	54
 21383  016F1E  6F11               	movwf	17,b	;volatile
 21384                           
 21385                           ; BSR set to: 14
 21386  016F20  0012               	return		;funcret
 21387  016F22                     __end_of_PIN_MANAGER_Initialize:
 21388                           	opt stack 0
 21389                           tblptru	equ	0xFF8
 21390                           tblptrh	equ	0xFF7
 21391                           tblptrl	equ	0xFF6
 21392                           tablat	equ	0xFF5
 21393                           prodh	equ	0xFF4
 21394                           prodl	equ	0xFF3
 21395                           intcon	equ	0xFF2
 21396                           indf0	equ	0xFEF
 21397                           postinc0	equ	0xFEE
 21398                           fsr0h	equ	0xFEA
 21399                           fsr0l	equ	0xFE9
 21400                           wreg	equ	0xFE8
 21401                           indf1	equ	0xFE7
 21402                           postdec1	equ	0xFE5
 21403                           plusw1	equ	0xFE3
 21404                           fsr1h	equ	0xFE2
 21405                           fsr1l	equ	0xFE1
 21406                           indf2	equ	0xFDF
 21407                           postinc2	equ	0xFDE
 21408                           postdec2	equ	0xFDD
 21409                           plusw2	equ	0xFDB
 21410                           fsr2h	equ	0xFDA
 21411                           fsr2l	equ	0xFD9
 21412                           status	equ	0xFD8
 21413                           
 21414 ;; *************** function _OSCILLATOR_Initialize *****************
 21415 ;; Defined at:
 21416 ;;		line 65 in file "mcc_generated_files/mcc.c"
 21417 ;; Parameters:    Size  Location     Type
 21418 ;;		None
 21419 ;; Auto vars:     Size  Location     Type
 21420 ;;		None
 21421 ;; Return value:  Size  Location     Type
 21422 ;;                  1    wreg      void 
 21423 ;; Registers used:
 21424 ;;		wreg, status,2
 21425 ;; Tracked objects:
 21426 ;;		On entry : 0/0
 21427 ;;		On exit  : 0/0
 21428 ;;		Unchanged: 0/0
 21429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21434 ;;Total ram usage:        0 bytes
 21435 ;; Hardware stack levels used:    1
 21436 ;; Hardware stack levels required when called:   13
 21437 ;; This function calls:
 21438 ;;		Nothing
 21439 ;; This function is called by:
 21440 ;;		_SYSTEM_Initialize
 21441 ;; This function uses a non-reentrant model
 21442 ;;
 21443                           
 21444                           	psect	text58
 21445  01800C                     __ptext58:
 21446                           	opt stack 0
 21447  01800C                     _OSCILLATOR_Initialize:
 21448                           	opt stack 16
 21449                           
 21450                           ;mcc.c: 68: OSCCON1 = 0x20;
 21451                           
 21452                           ; BSR set to: 14
 21453                           ;incstack = 0
 21454  01800C  0E20               	movlw	32
 21455  01800E  010E               	movlb	14	; () banked
 21456  018010  6F43               	movwf	67,b	;volatile
 21457                           
 21458                           ;mcc.c: 70: OSCCON3 = 0x00;
 21459  018012  0E00               	movlw	0
 21460  018014  6F45               	movwf	69,b	;volatile
 21461                           
 21462                           ;mcc.c: 72: OSCEN = 0x00;
 21463  018016  0E00               	movlw	0
 21464  018018  6F47               	movwf	71,b	;volatile
 21465                           
 21466                           ;mcc.c: 74: OSCFRQ = 0x02;
 21467  01801A  0E02               	movlw	2
 21468  01801C  6F49               	movwf	73,b	;volatile
 21469                           
 21470                           ;mcc.c: 76: OSCTUNE = 0x00;
 21471  01801E  0E00               	movlw	0
 21472  018020  6F48               	movwf	72,b	;volatile
 21473  018022                     
 21474                           ; BSR set to: 14
 21475                           
 21476                           ; BSR set to: 14
 21477                           ;mcc.c: 79: {
 21478  018022  B146               	btfsc	70,0,b	;volatile
 21479  018024  0012               	return	
 21480  018026  D7FD               	goto	l57
 21481  018028                     __end_of_OSCILLATOR_Initialize:
 21482                           	opt stack 0
 21483                           tblptru	equ	0xFF8
 21484                           tblptrh	equ	0xFF7
 21485                           tblptrl	equ	0xFF6
 21486                           tablat	equ	0xFF5
 21487                           prodh	equ	0xFF4
 21488                           prodl	equ	0xFF3
 21489                           intcon	equ	0xFF2
 21490                           indf0	equ	0xFEF
 21491                           postinc0	equ	0xFEE
 21492                           fsr0h	equ	0xFEA
 21493                           fsr0l	equ	0xFE9
 21494                           wreg	equ	0xFE8
 21495                           indf1	equ	0xFE7
 21496                           postdec1	equ	0xFE5
 21497                           plusw1	equ	0xFE3
 21498                           fsr1h	equ	0xFE2
 21499                           fsr1l	equ	0xFE1
 21500                           indf2	equ	0xFDF
 21501                           postinc2	equ	0xFDE
 21502                           postdec2	equ	0xFDD
 21503                           plusw2	equ	0xFDB
 21504                           fsr2h	equ	0xFDA
 21505                           fsr2l	equ	0xFD9
 21506                           status	equ	0xFD8
 21507                           
 21508 ;; *************** function _INTERRUPT_Initialize *****************
 21509 ;; Defined at:
 21510 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21511 ;; Parameters:    Size  Location     Type
 21512 ;;		None
 21513 ;; Auto vars:     Size  Location     Type
 21514 ;;		None
 21515 ;; Return value:  Size  Location     Type
 21516 ;;                  1    wreg      void 
 21517 ;; Registers used:
 21518 ;;		None
 21519 ;; Tracked objects:
 21520 ;;		On entry : 0/0
 21521 ;;		On exit  : 0/0
 21522 ;;		Unchanged: 0/0
 21523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21528 ;;Total ram usage:        0 bytes
 21529 ;; Hardware stack levels used:    1
 21530 ;; Hardware stack levels required when called:   13
 21531 ;; This function calls:
 21532 ;;		Nothing
 21533 ;; This function is called by:
 21534 ;;		_SYSTEM_Initialize
 21535 ;; This function uses a non-reentrant model
 21536 ;;
 21537                           
 21538                           	psect	text59
 21539  01805E                     __ptext59:
 21540                           	opt stack 0
 21541  01805E                     _INTERRUPT_Initialize:
 21542                           	opt stack 16
 21543                           
 21544                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 21545                           
 21546                           ; BSR set to: 14
 21547                           ;incstack = 0
 21548  01805E  8AF2               	bsf	intcon,5,c	;volatile
 21549                           
 21550                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 21551  018060  010E               	movlb	14	; () banked
 21552  018062  8F22               	bsf	34,7,b	;volatile
 21553                           
 21554                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 21555  018064  8924               	bsf	36,4,b	;volatile
 21556                           
 21557                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 21558  018066  8120               	bsf	32,0,b	;volatile
 21559                           
 21560                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 21561  018068  9B24               	bcf	36,5,b	;volatile
 21562                           
 21563                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 21564  01806A  9D22               	bcf	34,6,b	;volatile
 21565                           
 21566                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 21567  01806C  9D24               	bcf	36,6,b	;volatile
 21568                           
 21569                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 21570  01806E  9F21               	bcf	33,7,b	;volatile
 21571                           
 21572                           ; BSR set to: 14
 21573  018070  0012               	return		;funcret
 21574  018072                     __end_of_INTERRUPT_Initialize:
 21575                           	opt stack 0
 21576                           tblptru	equ	0xFF8
 21577                           tblptrh	equ	0xFF7
 21578                           tblptrl	equ	0xFF6
 21579                           tablat	equ	0xFF5
 21580                           prodh	equ	0xFF4
 21581                           prodl	equ	0xFF3
 21582                           intcon	equ	0xFF2
 21583                           indf0	equ	0xFEF
 21584                           postinc0	equ	0xFEE
 21585                           fsr0h	equ	0xFEA
 21586                           fsr0l	equ	0xFE9
 21587                           wreg	equ	0xFE8
 21588                           indf1	equ	0xFE7
 21589                           postdec1	equ	0xFE5
 21590                           plusw1	equ	0xFE3
 21591                           fsr1h	equ	0xFE2
 21592                           fsr1l	equ	0xFE1
 21593                           indf2	equ	0xFDF
 21594                           postinc2	equ	0xFDE
 21595                           postdec2	equ	0xFDD
 21596                           plusw2	equ	0xFDB
 21597                           fsr2h	equ	0xFDA
 21598                           fsr2l	equ	0xFD9
 21599                           status	equ	0xFD8
 21600                           
 21601 ;; *************** function _HLVD_Initialize *****************
 21602 ;; Defined at:
 21603 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 21604 ;; Parameters:    Size  Location     Type
 21605 ;;		None
 21606 ;; Auto vars:     Size  Location     Type
 21607 ;;		None
 21608 ;; Return value:  Size  Location     Type
 21609 ;;                  1    wreg      void 
 21610 ;; Registers used:
 21611 ;;		wreg, status,2
 21612 ;; Tracked objects:
 21613 ;;		On entry : 0/0
 21614 ;;		On exit  : 0/0
 21615 ;;		Unchanged: 0/0
 21616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21621 ;;Total ram usage:        0 bytes
 21622 ;; Hardware stack levels used:    1
 21623 ;; Hardware stack levels required when called:   13
 21624 ;; This function calls:
 21625 ;;		Nothing
 21626 ;; This function is called by:
 21627 ;;		_SYSTEM_Initialize
 21628 ;; This function uses a non-reentrant model
 21629 ;;
 21630                           
 21631                           	psect	text60
 21632  0180C8                     __ptext60:
 21633                           	opt stack 0
 21634  0180C8                     _HLVD_Initialize:
 21635                           	opt stack 16
 21636                           
 21637                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 21638                           
 21639                           ; BSR set to: 14
 21640                           ;incstack = 0
 21641  0180C8  0E09               	movlw	9
 21642  0180CA  010E               	movlb	14	; () banked
 21643  0180CC  6FC3               	movwf	195,b	;volatile
 21644                           
 21645                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 21646  0180CE  0E82               	movlw	130
 21647  0180D0  6FC2               	movwf	194,b	;volatile
 21648                           
 21649                           ; BSR set to: 14
 21650                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 21651  0180D2  9F35               	bcf	53,7,b	;volatile
 21652                           
 21653                           ; BSR set to: 14
 21654                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 21655  0180D4  8F2B               	bsf	43,7,b	;volatile
 21656                           
 21657                           ; BSR set to: 14
 21658  0180D6  0012               	return		;funcret
 21659  0180D8                     __end_of_HLVD_Initialize:
 21660                           	opt stack 0
 21661                           tblptru	equ	0xFF8
 21662                           tblptrh	equ	0xFF7
 21663                           tblptrl	equ	0xFF6
 21664                           tablat	equ	0xFF5
 21665                           prodh	equ	0xFF4
 21666                           prodl	equ	0xFF3
 21667                           intcon	equ	0xFF2
 21668                           indf0	equ	0xFEF
 21669                           postinc0	equ	0xFEE
 21670                           fsr0h	equ	0xFEA
 21671                           fsr0l	equ	0xFE9
 21672                           wreg	equ	0xFE8
 21673                           indf1	equ	0xFE7
 21674                           postdec1	equ	0xFE5
 21675                           plusw1	equ	0xFE3
 21676                           fsr1h	equ	0xFE2
 21677                           fsr1l	equ	0xFE1
 21678                           indf2	equ	0xFDF
 21679                           postinc2	equ	0xFDE
 21680                           postdec2	equ	0xFDD
 21681                           plusw2	equ	0xFDB
 21682                           fsr2h	equ	0xFDA
 21683                           fsr2l	equ	0xFD9
 21684                           status	equ	0xFD8
 21685                           
 21686 ;; *************** function _FVR_Initialize *****************
 21687 ;; Defined at:
 21688 ;;		line 58 in file "mcc_generated_files/fvr.c"
 21689 ;; Parameters:    Size  Location     Type
 21690 ;;		None
 21691 ;; Auto vars:     Size  Location     Type
 21692 ;;		None
 21693 ;; Return value:  Size  Location     Type
 21694 ;;                  1    wreg      void 
 21695 ;; Registers used:
 21696 ;;		wreg, status,2
 21697 ;; Tracked objects:
 21698 ;;		On entry : 0/0
 21699 ;;		On exit  : 0/0
 21700 ;;		Unchanged: 0/0
 21701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21706 ;;Total ram usage:        0 bytes
 21707 ;; Hardware stack levels used:    1
 21708 ;; Hardware stack levels required when called:   13
 21709 ;; This function calls:
 21710 ;;		Nothing
 21711 ;; This function is called by:
 21712 ;;		_SYSTEM_Initialize
 21713 ;; This function uses a non-reentrant model
 21714 ;;
 21715                           
 21716                           	psect	text61
 21717  01815E                     __ptext61:
 21718                           	opt stack 0
 21719  01815E                     _FVR_Initialize:
 21720                           	opt stack 16
 21721                           
 21722                           ;fvr.c: 61: FVRCON = 0xA6;
 21723                           
 21724                           ; BSR set to: 14
 21725                           ;incstack = 0
 21726  01815E  0EA6               	movlw	166
 21727  018160  010E               	movlb	14	; () banked
 21728  018162  6FC4               	movwf	196,b	;volatile
 21729                           
 21730                           ; BSR set to: 14
 21731  018164  0012               	return		;funcret
 21732  018166                     __end_of_FVR_Initialize:
 21733                           	opt stack 0
 21734                           tblptru	equ	0xFF8
 21735                           tblptrh	equ	0xFF7
 21736                           tblptrl	equ	0xFF6
 21737                           tablat	equ	0xFF5
 21738                           prodh	equ	0xFF4
 21739                           prodl	equ	0xFF3
 21740                           intcon	equ	0xFF2
 21741                           indf0	equ	0xFEF
 21742                           postinc0	equ	0xFEE
 21743                           fsr0h	equ	0xFEA
 21744                           fsr0l	equ	0xFE9
 21745                           wreg	equ	0xFE8
 21746                           indf1	equ	0xFE7
 21747                           postdec1	equ	0xFE5
 21748                           plusw1	equ	0xFE3
 21749                           fsr1h	equ	0xFE2
 21750                           fsr1l	equ	0xFE1
 21751                           indf2	equ	0xFDF
 21752                           postinc2	equ	0xFDE
 21753                           postdec2	equ	0xFDD
 21754                           plusw2	equ	0xFDB
 21755                           fsr2h	equ	0xFDA
 21756                           fsr2l	equ	0xFD9
 21757                           status	equ	0xFD8
 21758                           
 21759 ;; *************** function _EUSART2_Initialize *****************
 21760 ;; Defined at:
 21761 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 21762 ;; Parameters:    Size  Location     Type
 21763 ;;		None
 21764 ;; Auto vars:     Size  Location     Type
 21765 ;;		None
 21766 ;; Return value:  Size  Location     Type
 21767 ;;                  1    wreg      void 
 21768 ;; Registers used:
 21769 ;;		wreg, status,2, status,0, cstack
 21770 ;; Tracked objects:
 21771 ;;		On entry : 0/0
 21772 ;;		On exit  : 0/0
 21773 ;;		Unchanged: 0/0
 21774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21779 ;;Total ram usage:        0 bytes
 21780 ;; Hardware stack levels used:    1
 21781 ;; Hardware stack levels required when called:   14
 21782 ;; This function calls:
 21783 ;;		_EUSART2_SetRxInterruptHandler
 21784 ;;		_EUSART2_SetTxInterruptHandler
 21785 ;; This function is called by:
 21786 ;;		_SYSTEM_Initialize
 21787 ;; This function uses a non-reentrant model
 21788 ;;
 21789                           
 21790                           	psect	text62
 21791  017594                     __ptext62:
 21792                           	opt stack 0
 21793  017594                     _EUSART2_Initialize:
 21794                           	opt stack 15
 21795                           
 21796                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 21797                           
 21798                           ; BSR set to: 14
 21799                           ;incstack = 0
 21800  017594  827E               	bsf	3966,1,c	;volatile
 21801                           
 21802                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 21803  017596  010E               	movlb	14	; () banked
 21804  017598  9F2C               	bcf	44,7,b	;volatile
 21805                           
 21806                           ; BSR set to: 14
 21807                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 21808  01759A  0ED2               	movlw	low _EUSART2_Receive_ISR
 21809  01759C  0101               	movlb	1	; () banked
 21810  01759E  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 21811  0175A0  0E6D               	movlw	high _EUSART2_Receive_ISR
 21812  0175A2  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 21813  0175A4  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 21814  0175A6  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 21815  0175A8  EC8F  F0C0         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 21816                           
 21817                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 21818  0175AC  010E               	movlb	14	; () banked
 21819  0175AE  9D2C               	bcf	44,6,b	;volatile
 21820                           
 21821                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 21822  0175B0  0EF6               	movlw	low _EUSART2_Transmit_ISR
 21823  0175B2  0101               	movlb	1	; () banked
 21824  0175B4  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 21825  0175B6  0E7C               	movlw	high _EUSART2_Transmit_ISR
 21826  0175B8  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 21827  0175BA  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 21828  0175BC  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 21829  0175BE  EC88  F0C0         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 21830                           
 21831                           ;eusart2.c: 91: BAUD2CON = 0x08;
 21832  0175C2  0E08               	movlw	8
 21833  0175C4  010E               	movlb	14	; () banked
 21834  0175C6  6FF7               	movwf	247,b	;volatile
 21835                           
 21836                           ; BSR set to: 14
 21837                           ;eusart2.c: 94: RC2STA = 0x90;
 21838  0175C8  0E90               	movlw	144
 21839  0175CA  6FF5               	movwf	245,b	;volatile
 21840                           
 21841                           ; BSR set to: 14
 21842                           ;eusart2.c: 97: TX2STA = 0x24;
 21843  0175CC  0E24               	movlw	36
 21844  0175CE  6FF6               	movwf	246,b	;volatile
 21845                           
 21846                           ; BSR set to: 14
 21847                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 21848  0175D0  0E8A               	movlw	138
 21849  0175D2  6FF3               	movwf	243,b	;volatile
 21850                           
 21851                           ; BSR set to: 14
 21852                           ;eusart2.c: 103: SP2BRGH = 0x00;
 21853  0175D4  0E00               	movlw	0
 21854  0175D6  6FF4               	movwf	244,b	;volatile
 21855                           
 21856                           ; BSR set to: 14
 21857                           ;eusart2.c: 107: eusart2TxHead = 0;
 21858  0175D8  0E00               	movlw	0
 21859  0175DA  0101               	movlb	1	; () banked
 21860  0175DC  6FE2               	movwf	_eusart2TxHead& (0+255),b	;volatile
 21861                           
 21862                           ; BSR set to: 1
 21863                           ;eusart2.c: 108: eusart2TxTail = 0;
 21864  0175DE  0E00               	movlw	0
 21865  0175E0  6FE1               	movwf	_eusart2TxTail& (0+255),b	;volatile
 21866                           
 21867                           ; BSR set to: 1
 21868                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 21869  0175E2  0E80               	movlw	128
 21870  0175E4  6FE0               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 21871                           
 21872                           ; BSR set to: 1
 21873                           ;eusart2.c: 111: eusart2RxHead = 0;
 21874  0175E6  0E00               	movlw	0
 21875  0175E8  0100               	movlb	0	; () banked
 21876  0175EA  6FF4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 21877                           
 21878                           ; BSR set to: 0
 21879                           ;eusart2.c: 112: eusart2RxTail = 0;
 21880  0175EC  0E00               	movlw	0
 21881  0175EE  0101               	movlb	1	; () banked
 21882  0175F0  6FDF               	movwf	_eusart2RxTail& (0+255),b	;volatile
 21883                           
 21884                           ; BSR set to: 1
 21885                           ;eusart2.c: 113: eusart2RxCount = 0;
 21886  0175F2  0E00               	movlw	0
 21887  0175F4  6FDE               	movwf	_eusart2RxCount& (0+255),b	;volatile
 21888                           
 21889                           ; BSR set to: 1
 21890                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 21891  0175F6  010E               	movlb	14	; () banked
 21892  0175F8  8F2C               	bsf	44,7,b	;volatile
 21893                           
 21894                           ; BSR set to: 14
 21895                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 21896  0175FA  927E               	bcf	3966,1,c	;volatile
 21897                           
 21898                           ; BSR set to: 14
 21899  0175FC  0012               	return		;funcret
 21900  0175FE                     __end_of_EUSART2_Initialize:
 21901                           	opt stack 0
 21902                           tblptru	equ	0xFF8
 21903                           tblptrh	equ	0xFF7
 21904                           tblptrl	equ	0xFF6
 21905                           tablat	equ	0xFF5
 21906                           prodh	equ	0xFF4
 21907                           prodl	equ	0xFF3
 21908                           intcon	equ	0xFF2
 21909                           indf0	equ	0xFEF
 21910                           postinc0	equ	0xFEE
 21911                           fsr0h	equ	0xFEA
 21912                           fsr0l	equ	0xFE9
 21913                           wreg	equ	0xFE8
 21914                           indf1	equ	0xFE7
 21915                           postdec1	equ	0xFE5
 21916                           plusw1	equ	0xFE3
 21917                           fsr1h	equ	0xFE2
 21918                           fsr1l	equ	0xFE1
 21919                           indf2	equ	0xFDF
 21920                           postinc2	equ	0xFDE
 21921                           postdec2	equ	0xFDD
 21922                           plusw2	equ	0xFDB
 21923                           fsr2h	equ	0xFDA
 21924                           fsr2l	equ	0xFD9
 21925                           status	equ	0xFD8
 21926                           
 21927 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 21928 ;; Defined at:
 21929 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 21930 ;; Parameters:    Size  Location     Type
 21931 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 21932 ;;		 -> EUSART2_Transmit_ISR(1), 
 21933 ;; Auto vars:     Size  Location     Type
 21934 ;;		None
 21935 ;; Return value:  Size  Location     Type
 21936 ;;                  1    wreg      void 
 21937 ;; Registers used:
 21938 ;;		wreg, status,2, status,0
 21939 ;; Tracked objects:
 21940 ;;		On entry : 0/0
 21941 ;;		On exit  : 0/0
 21942 ;;		Unchanged: 0/0
 21943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21944 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21947 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21948 ;;Total ram usage:        3 bytes
 21949 ;; Hardware stack levels used:    1
 21950 ;; Hardware stack levels required when called:   13
 21951 ;; This function calls:
 21952 ;;		Nothing
 21953 ;; This function is called by:
 21954 ;;		_EUSART2_Initialize
 21955 ;; This function uses a non-reentrant model
 21956 ;;
 21957                           
 21958                           	psect	text63
 21959  018110                     __ptext63:
 21960                           	opt stack 0
 21961  018110                     _EUSART2_SetTxInterruptHandler:
 21962                           	opt stack 15
 21963                           
 21964                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 21965                           
 21966                           ; BSR set to: 14
 21967                           ;incstack = 0
 21968  018110  C117  F26F         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 21969  018114  C118  F270         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 21970  018118  C119  F271         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 21971  01811C  0012               	return		;funcret
 21972  01811E                     __end_of_EUSART2_SetTxInterruptHandler:
 21973                           	opt stack 0
 21974                           tblptru	equ	0xFF8
 21975                           tblptrh	equ	0xFF7
 21976                           tblptrl	equ	0xFF6
 21977                           tablat	equ	0xFF5
 21978                           prodh	equ	0xFF4
 21979                           prodl	equ	0xFF3
 21980                           intcon	equ	0xFF2
 21981                           indf0	equ	0xFEF
 21982                           postinc0	equ	0xFEE
 21983                           fsr0h	equ	0xFEA
 21984                           fsr0l	equ	0xFE9
 21985                           wreg	equ	0xFE8
 21986                           indf1	equ	0xFE7
 21987                           postdec1	equ	0xFE5
 21988                           plusw1	equ	0xFE3
 21989                           fsr1h	equ	0xFE2
 21990                           fsr1l	equ	0xFE1
 21991                           indf2	equ	0xFDF
 21992                           postinc2	equ	0xFDE
 21993                           postdec2	equ	0xFDD
 21994                           plusw2	equ	0xFDB
 21995                           fsr2h	equ	0xFDA
 21996                           fsr2l	equ	0xFD9
 21997                           status	equ	0xFD8
 21998                           
 21999 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 22000 ;; Defined at:
 22001 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 22002 ;; Parameters:    Size  Location     Type
 22003 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 22004 ;;		 -> EUSART2_Receive_ISR(1), 
 22005 ;; Auto vars:     Size  Location     Type
 22006 ;;		None
 22007 ;; Return value:  Size  Location     Type
 22008 ;;                  1    wreg      void 
 22009 ;; Registers used:
 22010 ;;		wreg, status,2, status,0
 22011 ;; Tracked objects:
 22012 ;;		On entry : 0/0
 22013 ;;		On exit  : 0/0
 22014 ;;		Unchanged: 0/0
 22015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22016 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22019 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22020 ;;Total ram usage:        3 bytes
 22021 ;; Hardware stack levels used:    1
 22022 ;; Hardware stack levels required when called:   13
 22023 ;; This function calls:
 22024 ;;		Nothing
 22025 ;; This function is called by:
 22026 ;;		_EUSART2_Initialize
 22027 ;; This function uses a non-reentrant model
 22028 ;;
 22029                           
 22030                           	psect	text64
 22031  01811E                     __ptext64:
 22032                           	opt stack 0
 22033  01811E                     _EUSART2_SetRxInterruptHandler:
 22034                           	opt stack 15
 22035                           
 22036                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 22037                           
 22038                           ;incstack = 0
 22039  01811E  C117  F26C         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 22040  018122  C118  F26D         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 22041  018126  C119  F26E         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 22042  01812A  0012               	return		;funcret
 22043  01812C                     __end_of_EUSART2_SetRxInterruptHandler:
 22044                           	opt stack 0
 22045                           tblptru	equ	0xFF8
 22046                           tblptrh	equ	0xFF7
 22047                           tblptrl	equ	0xFF6
 22048                           tablat	equ	0xFF5
 22049                           prodh	equ	0xFF4
 22050                           prodl	equ	0xFF3
 22051                           intcon	equ	0xFF2
 22052                           indf0	equ	0xFEF
 22053                           postinc0	equ	0xFEE
 22054                           fsr0h	equ	0xFEA
 22055                           fsr0l	equ	0xFE9
 22056                           wreg	equ	0xFE8
 22057                           indf1	equ	0xFE7
 22058                           postdec1	equ	0xFE5
 22059                           plusw1	equ	0xFE3
 22060                           fsr1h	equ	0xFE2
 22061                           fsr1l	equ	0xFE1
 22062                           indf2	equ	0xFDF
 22063                           postinc2	equ	0xFDE
 22064                           postdec2	equ	0xFDD
 22065                           plusw2	equ	0xFDB
 22066                           fsr2h	equ	0xFDA
 22067                           fsr2l	equ	0xFD9
 22068                           status	equ	0xFD8
 22069                           
 22070 ;; *************** function _ADCC_Initialize *****************
 22071 ;; Defined at:
 22072 ;;		line 63 in file "mcc_generated_files/adcc.c"
 22073 ;; Parameters:    Size  Location     Type
 22074 ;;		None
 22075 ;; Auto vars:     Size  Location     Type
 22076 ;;		None
 22077 ;; Return value:  Size  Location     Type
 22078 ;;                  1    wreg      void 
 22079 ;; Registers used:
 22080 ;;		wreg, status,2, status,0, cstack
 22081 ;; Tracked objects:
 22082 ;;		On entry : 0/0
 22083 ;;		On exit  : 0/0
 22084 ;;		Unchanged: 0/0
 22085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22090 ;;Total ram usage:        0 bytes
 22091 ;; Hardware stack levels used:    1
 22092 ;; Hardware stack levels required when called:   14
 22093 ;; This function calls:
 22094 ;;		_ADCC_SetADIInterruptHandler
 22095 ;; This function is called by:
 22096 ;;		_SYSTEM_Initialize
 22097 ;; This function uses a non-reentrant model
 22098 ;;
 22099                           
 22100                           	psect	text65
 22101  017734                     __ptext65:
 22102                           	opt stack 0
 22103  017734                     _ADCC_Initialize:
 22104                           	opt stack 15
 22105                           
 22106                           ;adcc.c: 67: ADLTHL = 0x00;
 22107                           
 22108                           ;incstack = 0
 22109  017734  0E00               	movlw	0
 22110  017736  6E6A               	movwf	3946,c	;volatile
 22111                           
 22112                           ;adcc.c: 69: ADLTHH = 0x00;
 22113  017738  0E00               	movlw	0
 22114  01773A  6E6B               	movwf	3947,c	;volatile
 22115                           
 22116                           ;adcc.c: 71: ADUTHL = 0x00;
 22117  01773C  0E00               	movlw	0
 22118  01773E  6E6C               	movwf	3948,c	;volatile
 22119                           
 22120                           ;adcc.c: 73: ADUTHH = 0x00;
 22121  017740  0E00               	movlw	0
 22122  017742  6E6D               	movwf	3949,c	;volatile
 22123                           
 22124                           ;adcc.c: 75: ADSTPTL = 0x00;
 22125  017744  0E00               	movlw	0
 22126  017746  6E68               	movwf	3944,c	;volatile
 22127                           
 22128                           ;adcc.c: 77: ADSTPTH = 0x00;
 22129  017748  0E00               	movlw	0
 22130  01774A  6E69               	movwf	3945,c	;volatile
 22131                           
 22132                           ;adcc.c: 79: ADRPT = 0x00;
 22133  01774C  0E00               	movlw	0
 22134  01774E  6E66               	movwf	3942,c	;volatile
 22135                           
 22136                           ;adcc.c: 81: ADPCH = 0x00;
 22137  017750  0E00               	movlw	0
 22138  017752  010F               	movlb	15	; () banked
 22139  017754  6F5F               	movwf	95,b	;volatile
 22140                           
 22141                           ;adcc.c: 83: ADCAP = 0x00;
 22142  017756  0E00               	movlw	0
 22143  017758  6F5D               	movwf	93,b	;volatile
 22144                           
 22145                           ;adcc.c: 85: ADCON1 = 0x00;
 22146  01775A  0E00               	movlw	0
 22147  01775C  6F59               	movwf	89,b	;volatile
 22148                           
 22149                           ;adcc.c: 87: ADCON2 = 0x04;
 22150  01775E  0E04               	movlw	4
 22151  017760  6F5A               	movwf	90,b	;volatile
 22152                           
 22153                           ;adcc.c: 89: ADCON3 = 0x00;
 22154  017762  0E00               	movlw	0
 22155  017764  6F5B               	movwf	91,b	;volatile
 22156                           
 22157                           ;adcc.c: 91: ADSTAT = 0x00;
 22158  017766  0E00               	movlw	0
 22159  017768  6E65               	movwf	3941,c	;volatile
 22160                           
 22161                           ;adcc.c: 93: ADREF = 0x12;
 22162  01776A  0E12               	movlw	18
 22163  01776C  6F58               	movwf	88,b	;volatile
 22164                           
 22165                           ;adcc.c: 95: ADACT = 0x00;
 22166  01776E  0E00               	movlw	0
 22167  017770  6F56               	movwf	86,b	;volatile
 22168                           
 22169                           ;adcc.c: 97: ADCLK = 0x00;
 22170  017772  0E00               	movlw	0
 22171  017774  6F57               	movwf	87,b	;volatile
 22172                           
 22173                           ;adcc.c: 99: ADCON0 = 0x94;
 22174  017776  0E94               	movlw	148
 22175  017778  6E60               	movwf	3936,c	;volatile
 22176                           
 22177                           ;adcc.c: 101: ADACQ = 0x00;
 22178  01777A  0E00               	movlw	0
 22179  01777C  6F5C               	movwf	92,b	;volatile
 22180                           
 22181                           ; BSR set to: 15
 22182                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 22183  01777E  010E               	movlb	14	; () banked
 22184  017780  9134               	bcf	52,0,b	;volatile
 22185                           
 22186                           ; BSR set to: 14
 22187                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 22188  017782  812A               	bsf	42,0,b	;volatile
 22189                           
 22190                           ; BSR set to: 14
 22191                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 22192  017784  0E8C               	movlw	low _ADCC_DefaultInterruptHandler
 22193  017786  0101               	movlb	1	; () banked
 22194  017788  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 22195  01778A  0E81               	movlw	high _ADCC_DefaultInterruptHandler
 22196  01778C  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 22197  01778E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 22198  017790  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 22199  017792  EC96  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22200  017796  0012               	return		;funcret
 22201  017798                     __end_of_ADCC_Initialize:
 22202                           	opt stack 0
 22203                           tblptru	equ	0xFF8
 22204                           tblptrh	equ	0xFF7
 22205                           tblptrl	equ	0xFF6
 22206                           tablat	equ	0xFF5
 22207                           prodh	equ	0xFF4
 22208                           prodl	equ	0xFF3
 22209                           intcon	equ	0xFF2
 22210                           indf0	equ	0xFEF
 22211                           postinc0	equ	0xFEE
 22212                           fsr0h	equ	0xFEA
 22213                           fsr0l	equ	0xFE9
 22214                           wreg	equ	0xFE8
 22215                           indf1	equ	0xFE7
 22216                           postdec1	equ	0xFE5
 22217                           plusw1	equ	0xFE3
 22218                           fsr1h	equ	0xFE2
 22219                           fsr1l	equ	0xFE1
 22220                           indf2	equ	0xFDF
 22221                           postinc2	equ	0xFDE
 22222                           postdec2	equ	0xFDD
 22223                           plusw2	equ	0xFDB
 22224                           fsr2h	equ	0xFDA
 22225                           fsr2l	equ	0xFD9
 22226                           status	equ	0xFD8
 22227                           
 22228 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 22229 ;; Defined at:
 22230 ;;		line 306 in file "mcc_generated_files/adcc.c"
 22231 ;; Parameters:    Size  Location     Type
 22232 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 22233 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 22234 ;; Auto vars:     Size  Location     Type
 22235 ;;		None
 22236 ;; Return value:  Size  Location     Type
 22237 ;;                  1    wreg      void 
 22238 ;; Registers used:
 22239 ;;		wreg, status,2, status,0
 22240 ;; Tracked objects:
 22241 ;;		On entry : 0/0
 22242 ;;		On exit  : 0/0
 22243 ;;		Unchanged: 0/0
 22244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22245 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22248 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22249 ;;Total ram usage:        3 bytes
 22250 ;; Hardware stack levels used:    1
 22251 ;; Hardware stack levels required when called:   13
 22252 ;; This function calls:
 22253 ;;		Nothing
 22254 ;; This function is called by:
 22255 ;;		_ADCC_Initialize
 22256 ;;		_main
 22257 ;; This function uses a non-reentrant model
 22258 ;;
 22259                           
 22260                           	psect	text66
 22261  01812C                     __ptext66:
 22262                           	opt stack 0
 22263  01812C                     _ADCC_SetADIInterruptHandler:
 22264                           	opt stack 15
 22265                           
 22266                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 22267                           
 22268                           ;incstack = 0
 22269  01812C  C117  F266         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 22270  018130  C118  F267         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 22271  018134  C119  F268         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 22272  018138  0012               	return		;funcret
 22273  01813A                     __end_of_ADCC_SetADIInterruptHandler:
 22274                           	opt stack 0
 22275                           tblptru	equ	0xFF8
 22276                           tblptrh	equ	0xFF7
 22277                           tblptrl	equ	0xFF6
 22278                           tablat	equ	0xFF5
 22279                           prodh	equ	0xFF4
 22280                           prodl	equ	0xFF3
 22281                           intcon	equ	0xFF2
 22282                           indf0	equ	0xFEF
 22283                           postinc0	equ	0xFEE
 22284                           fsr0h	equ	0xFEA
 22285                           fsr0l	equ	0xFE9
 22286                           wreg	equ	0xFE8
 22287                           indf1	equ	0xFE7
 22288                           postdec1	equ	0xFE5
 22289                           plusw1	equ	0xFE3
 22290                           fsr1h	equ	0xFE2
 22291                           fsr1l	equ	0xFE1
 22292                           indf2	equ	0xFDF
 22293                           postinc2	equ	0xFDE
 22294                           postdec2	equ	0xFDD
 22295                           plusw2	equ	0xFDB
 22296                           fsr2h	equ	0xFDA
 22297                           fsr2l	equ	0xFD9
 22298                           status	equ	0xFD8
 22299                           
 22300 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 22301 ;; Defined at:
 22302 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 22303 ;; Parameters:    Size  Location     Type
 22304 ;;		None
 22305 ;; Auto vars:     Size  Location     Type
 22306 ;;		None
 22307 ;; Return value:  Size  Location     Type
 22308 ;;                  1    wreg      void 
 22309 ;; Registers used:
 22310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22311 ;; Tracked objects:
 22312 ;;		On entry : 0/0
 22313 ;;		On exit  : 0/0
 22314 ;;		Unchanged: 0/0
 22315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22318 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22319 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22320 ;;Total ram usage:       21 bytes
 22321 ;; Hardware stack levels used:    1
 22322 ;; Hardware stack levels required when called:   12
 22323 ;; This function calls:
 22324 ;;		Absolute function
 22325 ;;		_EUSART2_Transmit_ISR
 22326 ;;		_HLVD_ISR
 22327 ;;		_TMR6_ISR
 22328 ;;		_TMR7_ISR
 22329 ;; This function is called by:
 22330 ;;		Interrupt level 1
 22331 ;; This function uses a non-reentrant model
 22332 ;;
 22333                           
 22334                           	psect	intcodelo
 22335  000018                     __pintcodelo:
 22336                           	opt stack 0
 22337  000018                     _INTERRUPT_InterruptManagerLow:
 22338                           	opt stack 11
 22339                           
 22340                           ;incstack = 0
 22341  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 22342  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 22343  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 22344  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 22345  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 22346  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 22347  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 22348  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 22349  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 22350  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 22351  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 22352  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 22353  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 22354  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 22355  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 22356  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 22357  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 22358  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 22359  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 22360  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 22361  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 22362  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 22363                           
 22364                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 22365  00006E  010E               	movlb	14	; () banked
 22366  000070  BB2E               	btfsc	46,5,b	;volatile
 22367                           
 22368                           ; BSR set to: 14
 22369  000072  AB38               	btfss	56,5,b	;volatile
 22370  000074  D003               	goto	i1l223
 22371                           
 22372                           ; BSR set to: 14
 22373                           ;interrupt_manager.c: 108: {
 22374                           ;interrupt_manager.c: 109: TMR6_ISR();
 22375  000076  EC55  F0BF         	call	_TMR6_ISR	;wreg free
 22376                           
 22377                           ;interrupt_manager.c: 110: }
 22378  00007A  D01B               	goto	i1l229
 22379  00007C                     i1l223:
 22380                           
 22381                           ; BSR set to: 14
 22382                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 22383  00007C  BD2C               	btfsc	44,6,b	;volatile
 22384                           
 22385                           ; BSR set to: 14
 22386  00007E  AD36               	btfss	54,6,b	;volatile
 22387  000080  D00D               	goto	i1l225
 22388                           
 22389                           ; BSR set to: 14
 22390                           ;interrupt_manager.c: 112: {
 22391                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 22392  000082  D801               	call	i1u1768_28
 22393  000084  D016               	goto	i1l229
 22394  000086                     i1u1768_28:
 22395  000086  0005               	push	
 22396  000088  6EFA               	movwf	pclath,c
 22397  00008A  0102               	movlb	2	; () banked
 22398  00008C  516F               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 22399  00008E  6EFD               	movwf	tosl,c
 22400  000090  5170               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 22401  000092  6EFE               	movwf	tosh,c
 22402  000094  5171               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 22403  000096  6EFF               	movwf	tosu,c
 22404  000098  50FA               	movf	pclath,w,c
 22405  00009A  0012               	return		;indir
 22406  00009C                     i1l225:
 22407                           
 22408                           ; BSR set to: 14
 22409                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 22410  00009C  BD2E               	btfsc	46,6,b	;volatile
 22411                           
 22412                           ; BSR set to: 14
 22413  00009E  AD38               	btfss	56,6,b	;volatile
 22414  0000A0  D003               	goto	i1l227
 22415                           
 22416                           ; BSR set to: 14
 22417                           ;interrupt_manager.c: 116: {
 22418                           ;interrupt_manager.c: 117: TMR7_ISR();
 22419  0000A2  EC96  F0BE         	call	_TMR7_ISR	;wreg free
 22420                           
 22421                           ;interrupt_manager.c: 118: }
 22422  0000A6  D005               	goto	i1l229
 22423  0000A8                     i1l227:
 22424                           
 22425                           ; BSR set to: 14
 22426                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 22427  0000A8  BF2B               	btfsc	43,7,b	;volatile
 22428                           
 22429                           ; BSR set to: 14
 22430  0000AA  AF35               	btfss	53,7,b	;volatile
 22431  0000AC  D002               	goto	i1l229
 22432                           
 22433                           ; BSR set to: 14
 22434                           ;interrupt_manager.c: 120: {
 22435                           ;interrupt_manager.c: 121: HLVD_ISR();
 22436  0000AE  ECB3  F0C0         	call	_HLVD_ISR	;wreg free
 22437  0000B2                     i1l229:
 22438                           
 22439                           ;interrupt_manager.c: 123: else
 22440                           ;interrupt_manager.c: 124: {
 22441  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 22442  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 22443  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 22444  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 22445  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 22446  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 22447  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 22448  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 22449  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 22450  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 22451  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 22452  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 22453  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 22454  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 22455  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 22456  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 22457  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 22458  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 22459  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 22460  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 22461  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 22462  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 22463  000108  0010               	retfie	
 22464  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 22465                           	opt stack 0
 22466                           tosu	equ	0xFFF
 22467                           tosh	equ	0xFFE
 22468                           tosl	equ	0xFFD
 22469                           pclatu	equ	0xFFB
 22470                           pclath	equ	0xFFA
 22471                           tblptru	equ	0xFF8
 22472                           tblptrh	equ	0xFF7
 22473                           tblptrl	equ	0xFF6
 22474                           tablat	equ	0xFF5
 22475                           prodh	equ	0xFF4
 22476                           prodl	equ	0xFF3
 22477                           intcon	equ	0xFF2
 22478                           indf0	equ	0xFEF
 22479                           postinc0	equ	0xFEE
 22480                           fsr0h	equ	0xFEA
 22481                           fsr0l	equ	0xFE9
 22482                           wreg	equ	0xFE8
 22483                           indf1	equ	0xFE7
 22484                           postdec1	equ	0xFE5
 22485                           plusw1	equ	0xFE3
 22486                           fsr1h	equ	0xFE2
 22487                           fsr1l	equ	0xFE1
 22488                           bsr	equ	0xFE0
 22489                           indf2	equ	0xFDF
 22490                           postinc2	equ	0xFDE
 22491                           postdec2	equ	0xFDD
 22492                           plusw2	equ	0xFDB
 22493                           fsr2h	equ	0xFDA
 22494                           fsr2l	equ	0xFD9
 22495                           status	equ	0xFD8
 22496                           
 22497 ;; *************** function _TMR7_ISR *****************
 22498 ;; Defined at:
 22499 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 22500 ;; Parameters:    Size  Location     Type
 22501 ;;		None
 22502 ;; Auto vars:     Size  Location     Type
 22503 ;;		None
 22504 ;; Return value:  Size  Location     Type
 22505 ;;                  1    wreg      void 
 22506 ;; Registers used:
 22507 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 22508 ;; Tracked objects:
 22509 ;;		On entry : 0/0
 22510 ;;		On exit  : 0/0
 22511 ;;		Unchanged: 0/0
 22512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22517 ;;Total ram usage:        0 bytes
 22518 ;; Hardware stack levels used:    1
 22519 ;; Hardware stack levels required when called:   11
 22520 ;; This function calls:
 22521 ;;		Absolute function
 22522 ;;		_TMR7_DefaultInterruptHandler
 22523 ;;		_TMR7_WriteTimer
 22524 ;;		_acquisitionTimerCallback
 22525 ;; This function is called by:
 22526 ;;		_INTERRUPT_InterruptManagerLow
 22527 ;; This function uses a non-reentrant model
 22528 ;;
 22529                           
 22530                           	psect	text68
 22531  017D2C                     __ptext68:
 22532                           	opt stack 0
 22533  017D2C                     _TMR7_ISR:
 22534                           	opt stack 11
 22535                           
 22536                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 22537                           
 22538                           ;incstack = 0
 22539  017D2C  010E               	movlb	14	; () banked
 22540  017D2E  9D38               	bcf	56,6,b	;volatile
 22541                           
 22542                           ; BSR set to: 14
 22543                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 22544  017D30  C1DB  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 22545  017D34  C1DC  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 22546  017D38  EC90  F0BF         	call	_TMR7_WriteTimer	;wreg free
 22547                           
 22548                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 22549  017D3C  0102               	movlb	2	; () banked
 22550  017D3E  5163               	movf	_TMR7_InterruptHandler& (0+255),w,b
 22551  017D40  1164               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 22552  017D42  1165               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 22553  017D44  B4D8               	btfsc	status,2,c
 22554  017D46  0012               	return	
 22555                           
 22556                           ; BSR set to: 2
 22557                           ;tmr7.c: 172: {
 22558                           ;tmr7.c: 173: TMR7_InterruptHandler();
 22559  017D48  D801               	call	i1u1756_28
 22560  017D4A  0012               	return	
 22561  017D4C                     i1u1756_28:
 22562  017D4C  0005               	push	
 22563  017D4E  6EFA               	movwf	pclath,c
 22564  017D50  5163               	movf	_TMR7_InterruptHandler& (0+255),w,b
 22565  017D52  6EFD               	movwf	tosl,c
 22566  017D54  5164               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 22567  017D56  6EFE               	movwf	tosh,c
 22568  017D58  5165               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 22569  017D5A  6EFF               	movwf	tosu,c
 22570  017D5C  50FA               	movf	pclath,w,c
 22571  017D5E  0012               	return		;indir
 22572  017D60                     __end_of_TMR7_ISR:
 22573                           	opt stack 0
 22574                           tosu	equ	0xFFF
 22575                           tosh	equ	0xFFE
 22576                           tosl	equ	0xFFD
 22577                           pclatu	equ	0xFFB
 22578                           pclath	equ	0xFFA
 22579                           tblptru	equ	0xFF8
 22580                           tblptrh	equ	0xFF7
 22581                           tblptrl	equ	0xFF6
 22582                           tablat	equ	0xFF5
 22583                           prodh	equ	0xFF4
 22584                           prodl	equ	0xFF3
 22585                           intcon	equ	0xFF2
 22586                           indf0	equ	0xFEF
 22587                           postinc0	equ	0xFEE
 22588                           fsr0h	equ	0xFEA
 22589                           fsr0l	equ	0xFE9
 22590                           wreg	equ	0xFE8
 22591                           indf1	equ	0xFE7
 22592                           postdec1	equ	0xFE5
 22593                           plusw1	equ	0xFE3
 22594                           fsr1h	equ	0xFE2
 22595                           fsr1l	equ	0xFE1
 22596                           bsr	equ	0xFE0
 22597                           indf2	equ	0xFDF
 22598                           postinc2	equ	0xFDE
 22599                           postdec2	equ	0xFDD
 22600                           plusw2	equ	0xFDB
 22601                           fsr2h	equ	0xFDA
 22602                           fsr2l	equ	0xFD9
 22603                           status	equ	0xFD8
 22604                           
 22605 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 22606 ;; Defined at:
 22607 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 22608 ;; Parameters:    Size  Location     Type
 22609 ;;		None
 22610 ;; Auto vars:     Size  Location     Type
 22611 ;;		None
 22612 ;; Return value:  Size  Location     Type
 22613 ;;                  1    wreg      void 
 22614 ;; Registers used:
 22615 ;;		None
 22616 ;; Tracked objects:
 22617 ;;		On entry : 0/0
 22618 ;;		On exit  : 0/0
 22619 ;;		Unchanged: 0/0
 22620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22625 ;;Total ram usage:        0 bytes
 22626 ;; Hardware stack levels used:    1
 22627 ;; Hardware stack levels required when called:    9
 22628 ;; This function calls:
 22629 ;;		Nothing
 22630 ;; This function is called by:
 22631 ;;		_TMR7_Initialize
 22632 ;;		_TMR7_ISR
 22633 ;; This function uses a non-reentrant model
 22634 ;;
 22635                           
 22636                           	psect	text69
 22637  018186                     __ptext69:
 22638                           	opt stack 0
 22639  018186                     _TMR7_DefaultInterruptHandler:
 22640                           	opt stack 12
 22641                           
 22642                           ;incstack = 0
 22643  018186  0012               	return		;funcret
 22644  018188                     __end_of_TMR7_DefaultInterruptHandler:
 22645                           	opt stack 0
 22646                           tosu	equ	0xFFF
 22647                           tosh	equ	0xFFE
 22648                           tosl	equ	0xFFD
 22649                           pclatu	equ	0xFFB
 22650                           pclath	equ	0xFFA
 22651                           tblptru	equ	0xFF8
 22652                           tblptrh	equ	0xFF7
 22653                           tblptrl	equ	0xFF6
 22654                           tablat	equ	0xFF5
 22655                           prodh	equ	0xFF4
 22656                           prodl	equ	0xFF3
 22657                           intcon	equ	0xFF2
 22658                           indf0	equ	0xFEF
 22659                           postinc0	equ	0xFEE
 22660                           fsr0h	equ	0xFEA
 22661                           fsr0l	equ	0xFE9
 22662                           wreg	equ	0xFE8
 22663                           indf1	equ	0xFE7
 22664                           postdec1	equ	0xFE5
 22665                           plusw1	equ	0xFE3
 22666                           fsr1h	equ	0xFE2
 22667                           fsr1l	equ	0xFE1
 22668                           bsr	equ	0xFE0
 22669                           indf2	equ	0xFDF
 22670                           postinc2	equ	0xFDE
 22671                           postdec2	equ	0xFDD
 22672                           plusw2	equ	0xFDB
 22673                           fsr2h	equ	0xFDA
 22674                           fsr2l	equ	0xFD9
 22675                           status	equ	0xFD8
 22676                           
 22677 ;; *************** function _acquisitionTimerCallback *****************
 22678 ;; Defined at:
 22679 ;;		line 342 in file "main.c"
 22680 ;; Parameters:    Size  Location     Type
 22681 ;;		None
 22682 ;; Auto vars:     Size  Location     Type
 22683 ;;		None
 22684 ;; Return value:  Size  Location     Type
 22685 ;;                  1    wreg      void 
 22686 ;; Registers used:
 22687 ;;		wreg, status,2, cstack
 22688 ;; Tracked objects:
 22689 ;;		On entry : 0/0
 22690 ;;		On exit  : 0/0
 22691 ;;		Unchanged: 0/0
 22692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22697 ;;Total ram usage:        0 bytes
 22698 ;; Hardware stack levels used:    1
 22699 ;; Hardware stack levels required when called:   10
 22700 ;; This function calls:
 22701 ;;		_ADCC_IsConversionDone
 22702 ;;		_ADCC_StartConversion
 22703 ;;		_TMR7_StopTimer
 22704 ;; This function is called by:
 22705 ;;		_main
 22706 ;;		_TMR7_ISR
 22707 ;; This function uses a non-reentrant model
 22708 ;;
 22709                           
 22710                           	psect	text70
 22711  016D10                     __ptext70:
 22712                           	opt stack 0
 22713  016D10                     _acquisitionTimerCallback:
 22714                           	opt stack 11
 22715                           
 22716                           ;main.c: 345: ADCC_StartConversion(channel_VSS);
 22717                           
 22718                           ;incstack = 0
 22719  016D10  0E3C               	movlw	60
 22720  016D12  EC9D  F0C0         	call	_ADCC_StartConversion
 22721                           
 22722                           ;main.c: 348: while(!ADCC_IsConversionDone()) {
 22723  016D16  D007               	goto	i1l969
 22724  016D18                     i1l968:
 22725                           
 22726                           ;main.c: 350: if (adc_error_flag) {
 22727  016D18  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22728  016D1A  D005               	goto	i1l969
 22729                           
 22730                           ;main.c: 353: PIE5bits.TMR7IE = 0;
 22731  016D1C  010E               	movlb	14	; () banked
 22732  016D1E  9D2E               	bcf	46,6,b	;volatile
 22733                           
 22734                           ; BSR set to: 14
 22735                           ;main.c: 354: TMR7_StopTimer();
 22736  016D20  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22737                           
 22738                           ;main.c: 355: return;
 22739  016D24  0012               	return	
 22740  016D26                     i1l969:
 22741  016D26  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22742  016D2A  0900               	iorlw	0
 22743  016D2C  B4D8               	btfsc	status,2,c
 22744  016D2E  D7F4               	goto	i1l968
 22745                           
 22746                           ;main.c: 357: }
 22747                           ;main.c: 359: }
 22748                           ;main.c: 362: ADCC_StartConversion(channel_FVR_buf1);
 22749  016D30  0E3F               	movlw	63
 22750  016D32  EC9D  F0C0         	call	_ADCC_StartConversion
 22751                           
 22752                           ;main.c: 365: while(!ADCC_IsConversionDone()) {
 22753  016D36  D007               	goto	i1l974
 22754  016D38                     i1l973:
 22755                           
 22756                           ;main.c: 367: if (adc_error_flag) {
 22757  016D38  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22758  016D3A  D005               	goto	i1l974
 22759                           
 22760                           ;main.c: 370: PIE5bits.TMR7IE = 0;
 22761  016D3C  010E               	movlb	14	; () banked
 22762  016D3E  9D2E               	bcf	46,6,b	;volatile
 22763                           
 22764                           ; BSR set to: 14
 22765                           ;main.c: 371: TMR7_StopTimer();
 22766  016D40  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22767                           
 22768                           ;main.c: 372: return;
 22769  016D44  0012               	return	
 22770  016D46                     i1l974:
 22771  016D46  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22772  016D4A  0900               	iorlw	0
 22773  016D4C  B4D8               	btfsc	status,2,c
 22774  016D4E  D7F4               	goto	i1l973
 22775                           
 22776                           ;main.c: 374: }
 22777                           ;main.c: 376: }
 22778                           ;main.c: 379: ADCC_StartConversion(POS3P3_ADC);
 22779  016D50  0E22               	movlw	34
 22780  016D52  EC9D  F0C0         	call	_ADCC_StartConversion
 22781                           
 22782                           ;main.c: 382: while(!ADCC_IsConversionDone()) {
 22783  016D56  D007               	goto	i1l978
 22784  016D58                     i1l977:
 22785                           
 22786                           ;main.c: 384: if (adc_error_flag) {
 22787  016D58  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22788  016D5A  D005               	goto	i1l978
 22789                           
 22790                           ;main.c: 387: PIE5bits.TMR7IE = 0;
 22791  016D5C  010E               	movlb	14	; () banked
 22792  016D5E  9D2E               	bcf	46,6,b	;volatile
 22793                           
 22794                           ; BSR set to: 14
 22795                           ;main.c: 388: TMR7_StopTimer();
 22796  016D60  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22797                           
 22798                           ;main.c: 389: return;
 22799  016D64  0012               	return	
 22800  016D66                     i1l978:
 22801  016D66  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22802  016D6A  0900               	iorlw	0
 22803  016D6C  B4D8               	btfsc	status,2,c
 22804  016D6E  D7F4               	goto	i1l977
 22805                           
 22806                           ;main.c: 391: }
 22807                           ;main.c: 393: }
 22808                           ;main.c: 396: ADCC_StartConversion(ISNS_ADC);
 22809  016D70  0E00               	movlw	0
 22810  016D72  EC9D  F0C0         	call	_ADCC_StartConversion
 22811                           
 22812                           ;main.c: 399: while(!ADCC_IsConversionDone()) {
 22813  016D76  D007               	goto	i1l982
 22814  016D78                     i1l981:
 22815                           
 22816                           ;main.c: 401: if (adc_error_flag) {
 22817  016D78  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22818  016D7A  D005               	goto	i1l982
 22819                           
 22820                           ;main.c: 404: PIE5bits.TMR7IE = 0;
 22821  016D7C  010E               	movlb	14	; () banked
 22822  016D7E  9D2E               	bcf	46,6,b	;volatile
 22823                           
 22824                           ; BSR set to: 14
 22825                           ;main.c: 405: TMR7_StopTimer();
 22826  016D80  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22827                           
 22828                           ;main.c: 406: return;
 22829  016D84  0012               	return	
 22830  016D86                     i1l982:
 22831  016D86  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22832  016D8A  0900               	iorlw	0
 22833  016D8C  B4D8               	btfsc	status,2,c
 22834  016D8E  D7F4               	goto	i1l981
 22835                           
 22836                           ;main.c: 408: }
 22837                           ;main.c: 410: }
 22838                           ;main.c: 413: ADCC_StartConversion(POS12_ADC);
 22839  016D90  0E04               	movlw	4
 22840  016D92  EC9D  F0C0         	call	_ADCC_StartConversion
 22841                           
 22842                           ;main.c: 416: while(!ADCC_IsConversionDone()) {
 22843  016D96  D007               	goto	i1l986
 22844  016D98                     i1l985:
 22845                           
 22846                           ;main.c: 418: if (adc_error_flag) {
 22847  016D98  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22848  016D9A  D005               	goto	i1l986
 22849                           
 22850                           ;main.c: 421: PIE5bits.TMR7IE = 0;
 22851  016D9C  010E               	movlb	14	; () banked
 22852  016D9E  9D2E               	bcf	46,6,b	;volatile
 22853                           
 22854                           ; BSR set to: 14
 22855                           ;main.c: 422: TMR7_StopTimer();
 22856  016DA0  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22857                           
 22858                           ;main.c: 423: return;
 22859  016DA4  0012               	return	
 22860  016DA6                     i1l986:
 22861  016DA6  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22862  016DAA  0900               	iorlw	0
 22863  016DAC  B4D8               	btfsc	status,2,c
 22864  016DAE  D7F4               	goto	i1l985
 22865                           
 22866                           ;main.c: 425: }
 22867                           ;main.c: 427: }
 22868                           ;main.c: 430: ADCC_StartConversion(channel_Temp);
 22869  016DB0  0E3D               	movlw	61
 22870  016DB2  EC9D  F0C0         	call	_ADCC_StartConversion
 22871                           
 22872                           ;main.c: 433: while(!ADCC_IsConversionDone()) {
 22873  016DB6  D007               	goto	i1l990
 22874  016DB8                     i1l989:
 22875                           
 22876                           ;main.c: 435: if (adc_error_flag) {
 22877  016DB8  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22878  016DBA  D005               	goto	i1l990
 22879                           
 22880                           ;main.c: 438: PIE5bits.TMR7IE == 0;
 22881  016DBC  010E               	movlb	14	; () banked
 22882  016DBE  512E               	movf	46,w,b	;volatile
 22883                           
 22884                           ; BSR set to: 14
 22885                           ;main.c: 439: TMR7_StopTimer();
 22886  016DC0  ECBD  F0C0         	call	_TMR7_StopTimer	;wreg free
 22887                           
 22888                           ;main.c: 440: return;
 22889  016DC4  0012               	return	
 22890  016DC6                     i1l990:
 22891  016DC6  ECA4  F0C0         	call	_ADCC_IsConversionDone	;wreg free
 22892  016DCA  0900               	iorlw	0
 22893  016DCC  A4D8               	btfss	status,2,c
 22894  016DCE  0012               	return	
 22895  016DD0  D7F3               	goto	i1l989
 22896  016DD2                     __end_of_acquisitionTimerCallback:
 22897                           	opt stack 0
 22898                           tosu	equ	0xFFF
 22899                           tosh	equ	0xFFE
 22900                           tosl	equ	0xFFD
 22901                           pclatu	equ	0xFFB
 22902                           pclath	equ	0xFFA
 22903                           tblptru	equ	0xFF8
 22904                           tblptrh	equ	0xFF7
 22905                           tblptrl	equ	0xFF6
 22906                           tablat	equ	0xFF5
 22907                           prodh	equ	0xFF4
 22908                           prodl	equ	0xFF3
 22909                           intcon	equ	0xFF2
 22910                           indf0	equ	0xFEF
 22911                           postinc0	equ	0xFEE
 22912                           fsr0h	equ	0xFEA
 22913                           fsr0l	equ	0xFE9
 22914                           wreg	equ	0xFE8
 22915                           indf1	equ	0xFE7
 22916                           postdec1	equ	0xFE5
 22917                           plusw1	equ	0xFE3
 22918                           fsr1h	equ	0xFE2
 22919                           fsr1l	equ	0xFE1
 22920                           bsr	equ	0xFE0
 22921                           indf2	equ	0xFDF
 22922                           postinc2	equ	0xFDE
 22923                           postdec2	equ	0xFDD
 22924                           plusw2	equ	0xFDB
 22925                           fsr2h	equ	0xFDA
 22926                           fsr2l	equ	0xFD9
 22927                           status	equ	0xFD8
 22928                           
 22929 ;; *************** function _TMR7_StopTimer *****************
 22930 ;; Defined at:
 22931 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 22932 ;; Parameters:    Size  Location     Type
 22933 ;;		None
 22934 ;; Auto vars:     Size  Location     Type
 22935 ;;		None
 22936 ;; Return value:  Size  Location     Type
 22937 ;;                  1    wreg      void 
 22938 ;; Registers used:
 22939 ;;		None
 22940 ;; Tracked objects:
 22941 ;;		On entry : 0/0
 22942 ;;		On exit  : 0/0
 22943 ;;		Unchanged: 0/0
 22944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22949 ;;Total ram usage:        0 bytes
 22950 ;; Hardware stack levels used:    1
 22951 ;; Hardware stack levels required when called:    9
 22952 ;; This function calls:
 22953 ;;		Nothing
 22954 ;; This function is called by:
 22955 ;;		_acquisitionTimerCallback
 22956 ;; This function uses a non-reentrant model
 22957 ;;
 22958                           
 22959                           	psect	text71
 22960  01817A                     __ptext71:
 22961                           	opt stack 0
 22962  01817A                     _TMR7_StopTimer:
 22963                           	opt stack 11
 22964                           
 22965                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 22966                           
 22967                           ;incstack = 0
 22968  01817A  010F               	movlb	15	; () banked
 22969  01817C  9130               	bcf	48,0,b	;volatile
 22970                           
 22971                           ; BSR set to: 15
 22972  01817E  0012               	return		;funcret
 22973  018180                     __end_of_TMR7_StopTimer:
 22974                           	opt stack 0
 22975                           tosu	equ	0xFFF
 22976                           tosh	equ	0xFFE
 22977                           tosl	equ	0xFFD
 22978                           pclatu	equ	0xFFB
 22979                           pclath	equ	0xFFA
 22980                           tblptru	equ	0xFF8
 22981                           tblptrh	equ	0xFF7
 22982                           tblptrl	equ	0xFF6
 22983                           tablat	equ	0xFF5
 22984                           prodh	equ	0xFF4
 22985                           prodl	equ	0xFF3
 22986                           intcon	equ	0xFF2
 22987                           indf0	equ	0xFEF
 22988                           postinc0	equ	0xFEE
 22989                           fsr0h	equ	0xFEA
 22990                           fsr0l	equ	0xFE9
 22991                           wreg	equ	0xFE8
 22992                           indf1	equ	0xFE7
 22993                           postdec1	equ	0xFE5
 22994                           plusw1	equ	0xFE3
 22995                           fsr1h	equ	0xFE2
 22996                           fsr1l	equ	0xFE1
 22997                           bsr	equ	0xFE0
 22998                           indf2	equ	0xFDF
 22999                           postinc2	equ	0xFDE
 23000                           postdec2	equ	0xFDD
 23001                           plusw2	equ	0xFDB
 23002                           fsr2h	equ	0xFDA
 23003                           fsr2l	equ	0xFD9
 23004                           status	equ	0xFD8
 23005                           
 23006 ;; *************** function _ADCC_StartConversion *****************
 23007 ;; Defined at:
 23008 ;;		line 112 in file "mcc_generated_files/adcc.c"
 23009 ;; Parameters:    Size  Location     Type
 23010 ;;  channel         1    wreg     enum E17310
 23011 ;; Auto vars:     Size  Location     Type
 23012 ;;  channel         1    0[BANK1 ] enum E17310
 23013 ;; Return value:  Size  Location     Type
 23014 ;;                  1    wreg      void 
 23015 ;; Registers used:
 23016 ;;		wreg
 23017 ;; Tracked objects:
 23018 ;;		On entry : 0/0
 23019 ;;		On exit  : 0/0
 23020 ;;		Unchanged: 0/0
 23021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23023 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23025 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23026 ;;Total ram usage:        1 bytes
 23027 ;; Hardware stack levels used:    1
 23028 ;; Hardware stack levels required when called:    9
 23029 ;; This function calls:
 23030 ;;		Nothing
 23031 ;; This function is called by:
 23032 ;;		_acquisitionTimerCallback
 23033 ;; This function uses a non-reentrant model
 23034 ;;
 23035                           
 23036                           	psect	text72
 23037  01813A                     __ptext72:
 23038                           	opt stack 0
 23039  01813A                     _ADCC_StartConversion:
 23040                           	opt stack 11
 23041                           
 23042                           ; BSR set to: 15
 23043                           ;incstack = 0
 23044                           ;ADCC_StartConversion@channel stored from wreg
 23045  01813A  0101               	movlb	1	; () banked
 23046  01813C  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 23047                           
 23048                           ;adcc.c: 115: ADPCH = channel;
 23049  01813E  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 23050                           
 23051                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 23052  018142  8E60               	bsf	3936,7,c	;volatile
 23053                           
 23054                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 23055  018144  8060               	bsf	3936,0,c	;volatile
 23056  018146  0012               	return		;funcret
 23057  018148                     __end_of_ADCC_StartConversion:
 23058                           	opt stack 0
 23059                           tosu	equ	0xFFF
 23060                           tosh	equ	0xFFE
 23061                           tosl	equ	0xFFD
 23062                           pclatu	equ	0xFFB
 23063                           pclath	equ	0xFFA
 23064                           tblptru	equ	0xFF8
 23065                           tblptrh	equ	0xFF7
 23066                           tblptrl	equ	0xFF6
 23067                           tablat	equ	0xFF5
 23068                           prodh	equ	0xFF4
 23069                           prodl	equ	0xFF3
 23070                           intcon	equ	0xFF2
 23071                           indf0	equ	0xFEF
 23072                           postinc0	equ	0xFEE
 23073                           fsr0h	equ	0xFEA
 23074                           fsr0l	equ	0xFE9
 23075                           wreg	equ	0xFE8
 23076                           indf1	equ	0xFE7
 23077                           postdec1	equ	0xFE5
 23078                           plusw1	equ	0xFE3
 23079                           fsr1h	equ	0xFE2
 23080                           fsr1l	equ	0xFE1
 23081                           bsr	equ	0xFE0
 23082                           indf2	equ	0xFDF
 23083                           postinc2	equ	0xFDE
 23084                           postdec2	equ	0xFDD
 23085                           plusw2	equ	0xFDB
 23086                           fsr2h	equ	0xFDA
 23087                           fsr2l	equ	0xFD9
 23088                           status	equ	0xFD8
 23089                           
 23090 ;; *************** function _ADCC_IsConversionDone *****************
 23091 ;; Defined at:
 23092 ;;		line 124 in file "mcc_generated_files/adcc.c"
 23093 ;; Parameters:    Size  Location     Type
 23094 ;;		None
 23095 ;; Auto vars:     Size  Location     Type
 23096 ;;		None
 23097 ;; Return value:  Size  Location     Type
 23098 ;;                  1    wreg      unsigned char 
 23099 ;; Registers used:
 23100 ;;		wreg
 23101 ;; Tracked objects:
 23102 ;;		On entry : 0/0
 23103 ;;		On exit  : 0/0
 23104 ;;		Unchanged: 0/0
 23105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23110 ;;Total ram usage:        0 bytes
 23111 ;; Hardware stack levels used:    1
 23112 ;; Hardware stack levels required when called:    9
 23113 ;; This function calls:
 23114 ;;		Nothing
 23115 ;; This function is called by:
 23116 ;;		_acquisitionTimerCallback
 23117 ;; This function uses a non-reentrant model
 23118 ;;
 23119                           
 23120                           	psect	text73
 23121  018148                     __ptext73:
 23122                           	opt stack 0
 23123  018148                     _ADCC_IsConversionDone:
 23124                           	opt stack 11
 23125                           
 23126                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 23127                           
 23128                           ;incstack = 0
 23129  018148  B060               	btfsc	3936,0,c	;volatile
 23130  01814A  D002               	goto	i1u939_20
 23131  01814C  0E01               	movlw	1
 23132  01814E  0012               	return	
 23133  018150                     i1u939_20:
 23134  018150  0E00               	movlw	0
 23135  018152  0012               	return	
 23136  018154                     __end_of_ADCC_IsConversionDone:
 23137                           	opt stack 0
 23138                           tosu	equ	0xFFF
 23139                           tosh	equ	0xFFE
 23140                           tosl	equ	0xFFD
 23141                           pclatu	equ	0xFFB
 23142                           pclath	equ	0xFFA
 23143                           tblptru	equ	0xFF8
 23144                           tblptrh	equ	0xFF7
 23145                           tblptrl	equ	0xFF6
 23146                           tablat	equ	0xFF5
 23147                           prodh	equ	0xFF4
 23148                           prodl	equ	0xFF3
 23149                           intcon	equ	0xFF2
 23150                           indf0	equ	0xFEF
 23151                           postinc0	equ	0xFEE
 23152                           fsr0h	equ	0xFEA
 23153                           fsr0l	equ	0xFE9
 23154                           wreg	equ	0xFE8
 23155                           indf1	equ	0xFE7
 23156                           postdec1	equ	0xFE5
 23157                           plusw1	equ	0xFE3
 23158                           fsr1h	equ	0xFE2
 23159                           fsr1l	equ	0xFE1
 23160                           bsr	equ	0xFE0
 23161                           indf2	equ	0xFDF
 23162                           postinc2	equ	0xFDE
 23163                           postdec2	equ	0xFDD
 23164                           plusw2	equ	0xFDB
 23165                           fsr2h	equ	0xFDA
 23166                           fsr2l	equ	0xFD9
 23167                           status	equ	0xFD8
 23168                           
 23169 ;; *************** function _TMR7_WriteTimer *****************
 23170 ;; Defined at:
 23171 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 23172 ;; Parameters:    Size  Location     Type
 23173 ;;  timerVal        2    0[BANK1 ] unsigned int 
 23174 ;; Auto vars:     Size  Location     Type
 23175 ;;		None
 23176 ;; Return value:  Size  Location     Type
 23177 ;;                  1    wreg      void 
 23178 ;; Registers used:
 23179 ;;		wreg, status,2
 23180 ;; Tracked objects:
 23181 ;;		On entry : 0/0
 23182 ;;		On exit  : 0/0
 23183 ;;		Unchanged: 0/0
 23184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23185 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23188 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23189 ;;Total ram usage:        2 bytes
 23190 ;; Hardware stack levels used:    1
 23191 ;; Hardware stack levels required when called:    9
 23192 ;; This function calls:
 23193 ;;		Nothing
 23194 ;; This function is called by:
 23195 ;;		_TMR7_ISR
 23196 ;;		_TMR7_Reload
 23197 ;; This function uses a non-reentrant model
 23198 ;;
 23199                           
 23200                           	psect	text74
 23201  017F20                     __ptext74:
 23202                           	opt stack 0
 23203  017F20                     _TMR7_WriteTimer:
 23204                           	opt stack 12
 23205                           
 23206                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 23207                           
 23208                           ;incstack = 0
 23209  017F20  010F               	movlb	15	; () banked
 23210  017F22  A530               	btfss	48,2,b	;volatile
 23211  017F24  D009               	goto	i1l640
 23212                           
 23213                           ; BSR set to: 15
 23214                           ;tmr7.c: 130: {
 23215                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 23216  017F26  9130               	bcf	48,0,b	;volatile
 23217                           
 23218                           ; BSR set to: 15
 23219                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 23220  017F28  0101               	movlb	1	; () banked
 23221  017F2A  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 23222  017F2C  010F               	movlb	15	; () banked
 23223  017F2E  6F2F               	movwf	47,b	;volatile
 23224                           
 23225                           ; BSR set to: 15
 23226                           ;tmr7.c: 136: TMR7L = timerVal;
 23227  017F30  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 23228                           
 23229                           ; BSR set to: 15
 23230                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 23231  017F34  8130               	bsf	48,0,b	;volatile
 23232                           
 23233                           ;tmr7.c: 140: }
 23234  017F36  0012               	return	
 23235  017F38                     i1l640:
 23236                           
 23237                           ; BSR set to: 15
 23238                           ;tmr7.c: 141: else
 23239                           ;tmr7.c: 142: {
 23240                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 23241                           
 23242                           ; BSR set to: 15
 23243  017F38  0101               	movlb	1	; () banked
 23244  017F3A  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 23245  017F3C  010F               	movlb	15	; () banked
 23246  017F3E  6F2F               	movwf	47,b	;volatile
 23247                           
 23248                           ; BSR set to: 15
 23249                           ;tmr7.c: 145: TMR7L = timerVal;
 23250  017F40  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 23251  017F44  0012               	return	
 23252  017F46                     __end_of_TMR7_WriteTimer:
 23253                           	opt stack 0
 23254                           tosu	equ	0xFFF
 23255                           tosh	equ	0xFFE
 23256                           tosl	equ	0xFFD
 23257                           pclatu	equ	0xFFB
 23258                           pclath	equ	0xFFA
 23259                           tblptru	equ	0xFF8
 23260                           tblptrh	equ	0xFF7
 23261                           tblptrl	equ	0xFF6
 23262                           tablat	equ	0xFF5
 23263                           prodh	equ	0xFF4
 23264                           prodl	equ	0xFF3
 23265                           intcon	equ	0xFF2
 23266                           indf0	equ	0xFEF
 23267                           postinc0	equ	0xFEE
 23268                           fsr0h	equ	0xFEA
 23269                           fsr0l	equ	0xFE9
 23270                           wreg	equ	0xFE8
 23271                           indf1	equ	0xFE7
 23272                           postdec1	equ	0xFE5
 23273                           plusw1	equ	0xFE3
 23274                           fsr1h	equ	0xFE2
 23275                           fsr1l	equ	0xFE1
 23276                           bsr	equ	0xFE0
 23277                           indf2	equ	0xFDF
 23278                           postinc2	equ	0xFDE
 23279                           postdec2	equ	0xFDD
 23280                           plusw2	equ	0xFDB
 23281                           fsr2h	equ	0xFDA
 23282                           fsr2l	equ	0xFD9
 23283                           status	equ	0xFD8
 23284                           
 23285 ;; *************** function _TMR6_ISR *****************
 23286 ;; Defined at:
 23287 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 23288 ;; Parameters:    Size  Location     Type
 23289 ;;		None
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;		None
 23292 ;; Return value:  Size  Location     Type
 23293 ;;                  1    wreg      void 
 23294 ;; Registers used:
 23295 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23296 ;; Tracked objects:
 23297 ;;		On entry : 0/0
 23298 ;;		On exit  : 0/0
 23299 ;;		Unchanged: 0/0
 23300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23305 ;;Total ram usage:        0 bytes
 23306 ;; Hardware stack levels used:    1
 23307 ;; Hardware stack levels required when called:   10
 23308 ;; This function calls:
 23309 ;;		Absolute function
 23310 ;;		_TMR6_DefaultInterruptHandler
 23311 ;;		_heartbeatTimerCallback
 23312 ;; This function is called by:
 23313 ;;		_INTERRUPT_InterruptManagerLow
 23314 ;; This function uses a non-reentrant model
 23315 ;;
 23316                           
 23317                           	psect	text75
 23318  017EAA                     __ptext75:
 23319                           	opt stack 0
 23320  017EAA                     _TMR6_ISR:
 23321                           	opt stack 12
 23322                           
 23323                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 23324                           
 23325                           ; BSR set to: 15
 23326                           ;incstack = 0
 23327  017EAA  010E               	movlb	14	; () banked
 23328  017EAC  9B38               	bcf	56,5,b	;volatile
 23329                           
 23330                           ; BSR set to: 14
 23331                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 23332  017EAE  0102               	movlb	2	; () banked
 23333  017EB0  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 23334  017EB2  116A               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 23335  017EB4  116B               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 23336  017EB6  B4D8               	btfsc	status,2,c
 23337  017EB8  0012               	return	
 23338                           
 23339                           ; BSR set to: 2
 23340                           ;tmr6.c: 172: {
 23341                           ;tmr6.c: 173: TMR6_InterruptHandler();
 23342  017EBA  D801               	call	i1u1754_28
 23343  017EBC  0012               	return	
 23344  017EBE                     i1u1754_28:
 23345  017EBE  0005               	push	
 23346  017EC0  6EFA               	movwf	pclath,c
 23347  017EC2  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 23348  017EC4  6EFD               	movwf	tosl,c
 23349  017EC6  516A               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 23350  017EC8  6EFE               	movwf	tosh,c
 23351  017ECA  516B               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 23352  017ECC  6EFF               	movwf	tosu,c
 23353  017ECE  50FA               	movf	pclath,w,c
 23354  017ED0  0012               	return		;indir
 23355  017ED2                     __end_of_TMR6_ISR:
 23356                           	opt stack 0
 23357                           tosu	equ	0xFFF
 23358                           tosh	equ	0xFFE
 23359                           tosl	equ	0xFFD
 23360                           pclatu	equ	0xFFB
 23361                           pclath	equ	0xFFA
 23362                           tblptru	equ	0xFF8
 23363                           tblptrh	equ	0xFF7
 23364                           tblptrl	equ	0xFF6
 23365                           tablat	equ	0xFF5
 23366                           prodh	equ	0xFF4
 23367                           prodl	equ	0xFF3
 23368                           intcon	equ	0xFF2
 23369                           indf0	equ	0xFEF
 23370                           postinc0	equ	0xFEE
 23371                           fsr0h	equ	0xFEA
 23372                           fsr0l	equ	0xFE9
 23373                           wreg	equ	0xFE8
 23374                           indf1	equ	0xFE7
 23375                           postdec1	equ	0xFE5
 23376                           plusw1	equ	0xFE3
 23377                           fsr1h	equ	0xFE2
 23378                           fsr1l	equ	0xFE1
 23379                           bsr	equ	0xFE0
 23380                           indf2	equ	0xFDF
 23381                           postinc2	equ	0xFDE
 23382                           postdec2	equ	0xFDD
 23383                           plusw2	equ	0xFDB
 23384                           fsr2h	equ	0xFDA
 23385                           fsr2l	equ	0xFD9
 23386                           status	equ	0xFD8
 23387                           
 23388 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 23389 ;; Defined at:
 23390 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 23391 ;; Parameters:    Size  Location     Type
 23392 ;;		None
 23393 ;; Auto vars:     Size  Location     Type
 23394 ;;		None
 23395 ;; Return value:  Size  Location     Type
 23396 ;;                  1    wreg      void 
 23397 ;; Registers used:
 23398 ;;		None
 23399 ;; Tracked objects:
 23400 ;;		On entry : 0/0
 23401 ;;		On exit  : 0/0
 23402 ;;		Unchanged: 0/0
 23403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23408 ;;Total ram usage:        0 bytes
 23409 ;; Hardware stack levels used:    1
 23410 ;; Hardware stack levels required when called:    9
 23411 ;; This function calls:
 23412 ;;		Nothing
 23413 ;; This function is called by:
 23414 ;;		_TMR6_Initialize
 23415 ;;		_TMR6_ISR
 23416 ;; This function uses a non-reentrant model
 23417 ;;
 23418                           
 23419                           	psect	text76
 23420  018188                     __ptext76:
 23421                           	opt stack 0
 23422  018188                     _TMR6_DefaultInterruptHandler:
 23423                           	opt stack 12
 23424                           
 23425                           ;incstack = 0
 23426  018188  0012               	return		;funcret
 23427  01818A                     __end_of_TMR6_DefaultInterruptHandler:
 23428                           	opt stack 0
 23429                           tosu	equ	0xFFF
 23430                           tosh	equ	0xFFE
 23431                           tosl	equ	0xFFD
 23432                           pclatu	equ	0xFFB
 23433                           pclath	equ	0xFFA
 23434                           tblptru	equ	0xFF8
 23435                           tblptrh	equ	0xFF7
 23436                           tblptrl	equ	0xFF6
 23437                           tablat	equ	0xFF5
 23438                           prodh	equ	0xFF4
 23439                           prodl	equ	0xFF3
 23440                           intcon	equ	0xFF2
 23441                           indf0	equ	0xFEF
 23442                           postinc0	equ	0xFEE
 23443                           fsr0h	equ	0xFEA
 23444                           fsr0l	equ	0xFE9
 23445                           wreg	equ	0xFE8
 23446                           indf1	equ	0xFE7
 23447                           postdec1	equ	0xFE5
 23448                           plusw1	equ	0xFE3
 23449                           fsr1h	equ	0xFE2
 23450                           fsr1l	equ	0xFE1
 23451                           bsr	equ	0xFE0
 23452                           indf2	equ	0xFDF
 23453                           postinc2	equ	0xFDE
 23454                           postdec2	equ	0xFDD
 23455                           plusw2	equ	0xFDB
 23456                           fsr2h	equ	0xFDA
 23457                           fsr2l	equ	0xFD9
 23458                           status	equ	0xFD8
 23459                           
 23460 ;; *************** function _heartbeatTimerCallback *****************
 23461 ;; Defined at:
 23462 ;;		line 139 in file "main.c"
 23463 ;; Parameters:    Size  Location     Type
 23464 ;;		None
 23465 ;; Auto vars:     Size  Location     Type
 23466 ;;		None
 23467 ;; Return value:  Size  Location     Type
 23468 ;;                  1    wreg      void 
 23469 ;; Registers used:
 23470 ;;		wreg, status,2, status,0
 23471 ;; Tracked objects:
 23472 ;;		On entry : 0/0
 23473 ;;		On exit  : 0/0
 23474 ;;		Unchanged: 0/0
 23475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23478 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23479 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23480 ;;Total ram usage:        1 bytes
 23481 ;; Hardware stack levels used:    1
 23482 ;; Hardware stack levels required when called:    9
 23483 ;; This function calls:
 23484 ;;		Nothing
 23485 ;; This function is called by:
 23486 ;;		_main
 23487 ;;		_TMR6_ISR
 23488 ;; This function uses a non-reentrant model
 23489 ;;
 23490                           
 23491                           	psect	text77
 23492  017BD0                     __ptext77:
 23493                           	opt stack 0
 23494  017BD0                     _heartbeatTimerCallback:
 23495                           	opt stack 12
 23496                           
 23497                           ;main.c: 142: LATFbits.LATF2 = !LATFbits.LATF2;
 23498                           
 23499                           ;incstack = 0
 23500  017BD0  B47E               	btfsc	3966,2,c	;volatile
 23501  017BD2  D004               	goto	i1u1015_20
 23502  017BD4  0101               	movlb	1	; () banked
 23503  017BD6  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 23504  017BD8  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 23505  017BDA  D002               	goto	i1u1016_28
 23506  017BDC                     i1u1015_20:
 23507  017BDC  0101               	movlb	1	; () banked
 23508  017BDE  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 23509  017BE0                     i1u1016_28:
 23510  017BE0  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 23511  017BE2  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 23512  017BE4  507E               	movf	3966,w,c	;volatile
 23513  017BE6  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 23514  017BE8  0BFB               	andlw	-5
 23515  017BEA  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 23516  017BEC  6E7E               	movwf	3966,c	;volatile
 23517                           
 23518                           ;main.c: 145: dev_on_time++;
 23519  017BEE  0E01               	movlw	1
 23520  017BF0  0102               	movlb	2	; () banked
 23521  017BF2  2744               	addwf	_dev_on_time& (0+255),f,b	;volatile
 23522  017BF4  0E00               	movlw	0
 23523  017BF6  2345               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 23524  017BF8  2346               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 23525  017BFA  2347               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 23526                           
 23527                           ; BSR set to: 2
 23528                           ;main.c: 148: if (load_enable) {
 23529  017BFC  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 23530  017BFE  D006               	goto	i1l937
 23531                           
 23532                           ; BSR set to: 2
 23533                           ;main.c: 150: load_on_time++;
 23534  017C00  0E01               	movlw	1
 23535  017C02  2740               	addwf	_load_on_time& (0+255),f,b	;volatile
 23536  017C04  0E00               	movlw	0
 23537  017C06  2341               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 23538  017C08  2342               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 23539  017C0A  2343               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 23540  017C0C                     i1l937:
 23541                           
 23542                           ; BSR set to: 2
 23543  017C0C  0004               	clrwdt		;# 
 23544  017C0E  0012               	return		;funcret
 23545  017C10                     __end_of_heartbeatTimerCallback:
 23546                           	opt stack 0
 23547                           tosu	equ	0xFFF
 23548                           tosh	equ	0xFFE
 23549                           tosl	equ	0xFFD
 23550                           pclatu	equ	0xFFB
 23551                           pclath	equ	0xFFA
 23552                           tblptru	equ	0xFF8
 23553                           tblptrh	equ	0xFF7
 23554                           tblptrl	equ	0xFF6
 23555                           tablat	equ	0xFF5
 23556                           prodh	equ	0xFF4
 23557                           prodl	equ	0xFF3
 23558                           intcon	equ	0xFF2
 23559                           indf0	equ	0xFEF
 23560                           postinc0	equ	0xFEE
 23561                           fsr0h	equ	0xFEA
 23562                           fsr0l	equ	0xFE9
 23563                           wreg	equ	0xFE8
 23564                           indf1	equ	0xFE7
 23565                           postdec1	equ	0xFE5
 23566                           plusw1	equ	0xFE3
 23567                           fsr1h	equ	0xFE2
 23568                           fsr1l	equ	0xFE1
 23569                           bsr	equ	0xFE0
 23570                           indf2	equ	0xFDF
 23571                           postinc2	equ	0xFDE
 23572                           postdec2	equ	0xFDD
 23573                           plusw2	equ	0xFDB
 23574                           fsr2h	equ	0xFDA
 23575                           fsr2l	equ	0xFD9
 23576                           status	equ	0xFD8
 23577                           
 23578 ;; *************** function _HLVD_ISR *****************
 23579 ;; Defined at:
 23580 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 23581 ;; Parameters:    Size  Location     Type
 23582 ;;		None
 23583 ;; Auto vars:     Size  Location     Type
 23584 ;;		None
 23585 ;; Return value:  Size  Location     Type
 23586 ;;                  1    wreg      void 
 23587 ;; Registers used:
 23588 ;;		None
 23589 ;; Tracked objects:
 23590 ;;		On entry : 0/0
 23591 ;;		On exit  : 0/0
 23592 ;;		Unchanged: 0/0
 23593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23598 ;;Total ram usage:        0 bytes
 23599 ;; Hardware stack levels used:    1
 23600 ;; Hardware stack levels required when called:    9
 23601 ;; This function calls:
 23602 ;;		Nothing
 23603 ;; This function is called by:
 23604 ;;		_INTERRUPT_InterruptManagerLow
 23605 ;; This function uses a non-reentrant model
 23606 ;;
 23607                           
 23608                           	psect	text78
 23609  018166                     __ptext78:
 23610                           	opt stack 0
 23611  018166                     _HLVD_ISR:
 23612                           	opt stack 13
 23613                           
 23614                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 23615                           
 23616                           ;incstack = 0
 23617  018166  010E               	movlb	14	; () banked
 23618  018168  9F35               	bcf	53,7,b	;volatile
 23619                           
 23620                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 23621  01816A  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 23622                           
 23623                           ; BSR set to: 14
 23624  01816C  0012               	return		;funcret
 23625  01816E                     __end_of_HLVD_ISR:
 23626                           	opt stack 0
 23627                           tosu	equ	0xFFF
 23628                           tosh	equ	0xFFE
 23629                           tosl	equ	0xFFD
 23630                           pclatu	equ	0xFFB
 23631                           pclath	equ	0xFFA
 23632                           tblptru	equ	0xFF8
 23633                           tblptrh	equ	0xFF7
 23634                           tblptrl	equ	0xFF6
 23635                           tablat	equ	0xFF5
 23636                           prodh	equ	0xFF4
 23637                           prodl	equ	0xFF3
 23638                           intcon	equ	0xFF2
 23639                           indf0	equ	0xFEF
 23640                           postinc0	equ	0xFEE
 23641                           fsr0h	equ	0xFEA
 23642                           fsr0l	equ	0xFE9
 23643                           wreg	equ	0xFE8
 23644                           indf1	equ	0xFE7
 23645                           postdec1	equ	0xFE5
 23646                           plusw1	equ	0xFE3
 23647                           fsr1h	equ	0xFE2
 23648                           fsr1l	equ	0xFE1
 23649                           bsr	equ	0xFE0
 23650                           indf2	equ	0xFDF
 23651                           postinc2	equ	0xFDE
 23652                           postdec2	equ	0xFDD
 23653                           plusw2	equ	0xFDB
 23654                           fsr2h	equ	0xFDA
 23655                           fsr2l	equ	0xFD9
 23656                           status	equ	0xFD8
 23657                           
 23658 ;; *************** function _EUSART2_Transmit_ISR *****************
 23659 ;; Defined at:
 23660 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 23661 ;; Parameters:    Size  Location     Type
 23662 ;;		None
 23663 ;; Auto vars:     Size  Location     Type
 23664 ;;		None
 23665 ;; Return value:  Size  Location     Type
 23666 ;;                  1    wreg      void 
 23667 ;; Registers used:
 23668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23669 ;; Tracked objects:
 23670 ;;		On entry : 0/0
 23671 ;;		On exit  : 0/0
 23672 ;;		Unchanged: 0/0
 23673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23678 ;;Total ram usage:        0 bytes
 23679 ;; Hardware stack levels used:    1
 23680 ;; Hardware stack levels required when called:    9
 23681 ;; This function calls:
 23682 ;;		Nothing
 23683 ;; This function is called by:
 23684 ;;		_EUSART2_Initialize
 23685 ;;		_INTERRUPT_InterruptManagerLow
 23686 ;; This function uses a non-reentrant model
 23687 ;;
 23688                           
 23689                           	psect	text79
 23690  017CF6                     __ptext79:
 23691                           	opt stack 0
 23692  017CF6                     _EUSART2_Transmit_ISR:
 23693                           	opt stack 13
 23694                           
 23695                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 23696                           
 23697                           ; BSR set to: 14
 23698                           ;incstack = 0
 23699  017CF6  0E80               	movlw	128
 23700  017CF8  0101               	movlb	1	; () banked
 23701  017CFA  61E0               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 23702  017CFC  D014               	goto	i1l403
 23703                           
 23704                           ; BSR set to: 1
 23705                           ;eusart2.c: 203: {
 23706                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 23707  017CFE  51E1               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 23708  017D00  0D01               	mullw	1
 23709  017D02  0E00               	movlw	low _eusart2TxBuffer
 23710  017D04  24F3               	addwf	prodl,w,c
 23711  017D06  6ED9               	movwf	fsr2l,c
 23712  017D08  0E03               	movlw	high _eusart2TxBuffer
 23713  017D0A  20F4               	addwfc	prodh,w,c
 23714  017D0C  6EDA               	movwf	fsr2h,c
 23715  017D0E  50DF               	movf	indf2,w,c
 23716  017D10  010E               	movlb	14	; () banked
 23717  017D12  6FF2               	movwf	242,b	;volatile
 23718                           
 23719                           ; BSR set to: 14
 23720  017D14  0101               	movlb	1	; () banked
 23721  017D16  2BE1               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 23722                           
 23723                           ; BSR set to: 1
 23724                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 23725  017D18  0E7F               	movlw	127
 23726  017D1A  65E1               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 23727  017D1C  D002               	goto	i1l404
 23728                           
 23729                           ; BSR set to: 1
 23730                           ;eusart2.c: 206: {
 23731                           ;eusart2.c: 207: eusart2TxTail = 0;
 23732  017D1E  0E00               	movlw	0
 23733  017D20  6FE1               	movwf	_eusart2TxTail& (0+255),b	;volatile
 23734  017D22                     i1l404:
 23735                           
 23736                           ; BSR set to: 1
 23737                           ;eusart2.c: 208: }
 23738                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 23739                           
 23740                           ; BSR set to: 1
 23741  017D22  2BE0               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 23742                           
 23743                           ;eusart2.c: 210: }
 23744  017D24  0012               	return	
 23745  017D26                     i1l403:
 23746                           
 23747                           ; BSR set to: 1
 23748                           ;eusart2.c: 211: else
 23749                           ;eusart2.c: 212: {
 23750                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 23751  017D26  010E               	movlb	14	; () banked
 23752  017D28  9D2C               	bcf	44,6,b	;volatile
 23753  017D2A  0012               	return	
 23754  017D2C                     __end_of_EUSART2_Transmit_ISR:
 23755                           	opt stack 0
 23756                           tosu	equ	0xFFF
 23757                           tosh	equ	0xFFE
 23758                           tosl	equ	0xFFD
 23759                           pclatu	equ	0xFFB
 23760                           pclath	equ	0xFFA
 23761                           tblptru	equ	0xFF8
 23762                           tblptrh	equ	0xFF7
 23763                           tblptrl	equ	0xFF6
 23764                           tablat	equ	0xFF5
 23765                           prodh	equ	0xFF4
 23766                           prodl	equ	0xFF3
 23767                           intcon	equ	0xFF2
 23768                           indf0	equ	0xFEF
 23769                           postinc0	equ	0xFEE
 23770                           fsr0h	equ	0xFEA
 23771                           fsr0l	equ	0xFE9
 23772                           wreg	equ	0xFE8
 23773                           indf1	equ	0xFE7
 23774                           postdec1	equ	0xFE5
 23775                           plusw1	equ	0xFE3
 23776                           fsr1h	equ	0xFE2
 23777                           fsr1l	equ	0xFE1
 23778                           bsr	equ	0xFE0
 23779                           indf2	equ	0xFDF
 23780                           postinc2	equ	0xFDE
 23781                           postdec2	equ	0xFDD
 23782                           plusw2	equ	0xFDB
 23783                           fsr2h	equ	0xFDA
 23784                           fsr2l	equ	0xFD9
 23785                           status	equ	0xFD8
 23786                           
 23787 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 23788 ;; Defined at:
 23789 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 23790 ;; Parameters:    Size  Location     Type
 23791 ;;		None
 23792 ;; Auto vars:     Size  Location     Type
 23793 ;;		None
 23794 ;; Return value:  Size  Location     Type
 23795 ;;                  1    wreg      void 
 23796 ;; Registers used:
 23797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23798 ;; Tracked objects:
 23799 ;;		On entry : 0/0
 23800 ;;		On exit  : 0/0
 23801 ;;		Unchanged: 0/0
 23802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23805 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23806 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23807 ;;Total ram usage:       18 bytes
 23808 ;; Hardware stack levels used:    1
 23809 ;; Hardware stack levels required when called:    8
 23810 ;; This function calls:
 23811 ;;		Absolute function
 23812 ;;		_ADCC_ISR
 23813 ;;		_EUSART2_Receive_ISR
 23814 ;;		_TMR5_ISR
 23815 ;; This function is called by:
 23816 ;;		Interrupt level 2
 23817 ;; This function uses a non-reentrant model
 23818 ;;
 23819                           
 23820                           	psect	intcode
 23821  000008                     __pintcode:
 23822                           	opt stack 0
 23823  000008                     _INTERRUPT_InterruptManagerHigh:
 23824                           	opt stack 11
 23825                           
 23826                           ;incstack = 0
 23827  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23828  00000A  EF22  F0B6         	goto	int_func
 23829                           tosu	equ	0xFFF
 23830                           tosh	equ	0xFFE
 23831                           tosl	equ	0xFFD
 23832                           pclatu	equ	0xFFB
 23833                           pclath	equ	0xFFA
 23834                           tblptru	equ	0xFF8
 23835                           tblptrh	equ	0xFF7
 23836                           tblptrl	equ	0xFF6
 23837                           tablat	equ	0xFF5
 23838                           prodh	equ	0xFF4
 23839                           prodl	equ	0xFF3
 23840                           intcon	equ	0xFF2
 23841                           indf0	equ	0xFEF
 23842                           postinc0	equ	0xFEE
 23843                           fsr0h	equ	0xFEA
 23844                           fsr0l	equ	0xFE9
 23845                           wreg	equ	0xFE8
 23846                           indf1	equ	0xFE7
 23847                           postdec1	equ	0xFE5
 23848                           plusw1	equ	0xFE3
 23849                           fsr1h	equ	0xFE2
 23850                           fsr1l	equ	0xFE1
 23851                           bsr	equ	0xFE0
 23852                           indf2	equ	0xFDF
 23853                           postinc2	equ	0xFDE
 23854                           postdec2	equ	0xFDD
 23855                           plusw2	equ	0xFDB
 23856                           fsr2h	equ	0xFDA
 23857                           fsr2l	equ	0xFD9
 23858                           status	equ	0xFD8
 23859                           
 23860                           	psect	intcode_body
 23861  016C44                     __pintcode_body:
 23862                           	opt stack 11
 23863  016C44                     int_func:
 23864                           	opt stack 11
 23865  016C44  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 23866  016C48  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 23867  016C4C  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 23868  016C50  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 23869  016C54  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 23870  016C58  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 23871  016C5C  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 23872  016C60  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 23873  016C64  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 23874  016C68  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 23875  016C6C  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 23876  016C70  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 23877  016C74  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 23878  016C78  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 23879  016C7C  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 23880  016C80  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 23881  016C84  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 23882  016C88  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 23883                           
 23884                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 23885  016C8C  010E               	movlb	14	; () banked
 23886  016C8E  BF2C               	btfsc	44,7,b	;volatile
 23887                           
 23888                           ; BSR set to: 14
 23889  016C90  AF36               	btfss	54,7,b	;volatile
 23890  016C92  D00D               	goto	i2l212
 23891                           
 23892                           ; BSR set to: 14
 23893                           ;interrupt_manager.c: 87: {
 23894                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 23895  016C94  D801               	call	i2u1759_48
 23896  016C96  D016               	goto	i2l216
 23897  016C98                     i2u1759_48:
 23898  016C98  0005               	push	
 23899  016C9A  6EFA               	movwf	pclath,c
 23900  016C9C  0102               	movlb	2	; () banked
 23901  016C9E  516C               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 23902  016CA0  6EFD               	movwf	tosl,c
 23903  016CA2  516D               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 23904  016CA4  6EFE               	movwf	tosh,c
 23905  016CA6  516E               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 23906  016CA8  6EFF               	movwf	tosu,c
 23907  016CAA  50FA               	movf	pclath,w,c
 23908  016CAC  0012               	return		;indir
 23909  016CAE                     i2l212:
 23910                           
 23911                           ; BSR set to: 14
 23912                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 23913  016CAE  B92E               	btfsc	46,4,b	;volatile
 23914                           
 23915                           ; BSR set to: 14
 23916  016CB0  A938               	btfss	56,4,b	;volatile
 23917  016CB2  D003               	goto	i2l214
 23918                           
 23919                           ; BSR set to: 14
 23920                           ;interrupt_manager.c: 91: {
 23921                           ;interrupt_manager.c: 92: TMR5_ISR();
 23922  016CB4  ECB0  F0BE         	call	_TMR5_ISR	;wreg free
 23923                           
 23924                           ;interrupt_manager.c: 93: }
 23925  016CB8  D005               	goto	i2l216
 23926  016CBA                     i2l214:
 23927                           
 23928                           ; BSR set to: 14
 23929                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 23930  016CBA  B12A               	btfsc	42,0,b	;volatile
 23931                           
 23932                           ; BSR set to: 14
 23933  016CBC  A134               	btfss	52,0,b	;volatile
 23934  016CBE  D002               	goto	i2l216
 23935                           
 23936                           ; BSR set to: 14
 23937                           ;interrupt_manager.c: 95: {
 23938                           ;interrupt_manager.c: 96: ADCC_ISR();
 23939  016CC0  EC69  F0BF         	call	_ADCC_ISR	;wreg free
 23940  016CC4                     i2l216:
 23941                           
 23942                           ;interrupt_manager.c: 98: else
 23943                           ;interrupt_manager.c: 99: {
 23944  016CC4  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 23945  016CC8  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 23946  016CCC  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 23947  016CD0  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 23948  016CD4  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 23949  016CD8  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 23950  016CDC  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 23951  016CE0  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 23952  016CE4  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 23953  016CE8  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 23954  016CEC  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 23955  016CF0  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 23956  016CF4  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 23957  016CF8  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 23958  016CFC  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 23959  016D00  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 23960  016D04  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 23961  016D08  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 23962  016D0C  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23963  016D0E  0011               	retfie		f
 23964  016D10                     __end_of_INTERRUPT_InterruptManagerHigh:
 23965                           	opt stack 0
 23966                           tosu	equ	0xFFF
 23967                           tosh	equ	0xFFE
 23968                           tosl	equ	0xFFD
 23969                           pclatu	equ	0xFFB
 23970                           pclath	equ	0xFFA
 23971                           tblptru	equ	0xFF8
 23972                           tblptrh	equ	0xFF7
 23973                           tblptrl	equ	0xFF6
 23974                           tablat	equ	0xFF5
 23975                           prodh	equ	0xFF4
 23976                           prodl	equ	0xFF3
 23977                           intcon	equ	0xFF2
 23978                           indf0	equ	0xFEF
 23979                           postinc0	equ	0xFEE
 23980                           fsr0h	equ	0xFEA
 23981                           fsr0l	equ	0xFE9
 23982                           wreg	equ	0xFE8
 23983                           indf1	equ	0xFE7
 23984                           postdec1	equ	0xFE5
 23985                           plusw1	equ	0xFE3
 23986                           fsr1h	equ	0xFE2
 23987                           fsr1l	equ	0xFE1
 23988                           bsr	equ	0xFE0
 23989                           indf2	equ	0xFDF
 23990                           postinc2	equ	0xFDE
 23991                           postdec2	equ	0xFDD
 23992                           plusw2	equ	0xFDB
 23993                           fsr2h	equ	0xFDA
 23994                           fsr2l	equ	0xFD9
 23995                           status	equ	0xFD8
 23996                           
 23997 ;; *************** function _TMR5_ISR *****************
 23998 ;; Defined at:
 23999 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24000 ;; Parameters:    Size  Location     Type
 24001 ;;		None
 24002 ;; Auto vars:     Size  Location     Type
 24003 ;;		None
 24004 ;; Return value:  Size  Location     Type
 24005 ;;                  1    wreg      void 
 24006 ;; Registers used:
 24007 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 24008 ;; Tracked objects:
 24009 ;;		On entry : 0/0
 24010 ;;		On exit  : 0/0
 24011 ;;		Unchanged: 0/0
 24012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24017 ;;Total ram usage:        0 bytes
 24018 ;; Hardware stack levels used:    1
 24019 ;; Hardware stack levels required when called:    1
 24020 ;; This function calls:
 24021 ;;		Absolute function
 24022 ;;		_TMR5_DefaultInterruptHandler
 24023 ;;		_TMR5_WriteTimer
 24024 ;; This function is called by:
 24025 ;;		_INTERRUPT_InterruptManagerHigh
 24026 ;; This function uses a non-reentrant model
 24027 ;;
 24028                           
 24029                           	psect	text81
 24030  017D60                     __ptext81:
 24031                           	opt stack 0
 24032  017D60                     _TMR5_ISR:
 24033                           	opt stack 17
 24034                           
 24035                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 24036                           
 24037                           ;incstack = 0
 24038  017D60  010E               	movlb	14	; () banked
 24039  017D62  9938               	bcf	56,4,b	;volatile
 24040                           
 24041                           ; BSR set to: 14
 24042                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 24043  017D64  C274  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 24044  017D68  C275  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 24045  017D6C  EC14  F0C0         	call	_TMR5_WriteTimer	;wreg free
 24046                           
 24047                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 24048  017D70  0102               	movlb	2	; () banked
 24049  017D72  5160               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24050  017D74  1161               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24051  017D76  1162               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24052  017D78  B4D8               	btfsc	status,2,c
 24053  017D7A  0012               	return	
 24054                           
 24055                           ; BSR set to: 2
 24056                           ;tmr5.c: 172: {
 24057                           ;tmr5.c: 173: TMR5_InterruptHandler();
 24058  017D7C  D801               	call	i2u1750_48
 24059  017D7E  0012               	return	
 24060  017D80                     i2u1750_48:
 24061  017D80  0005               	push	
 24062  017D82  6EFA               	movwf	pclath,c
 24063  017D84  5160               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24064  017D86  6EFD               	movwf	tosl,c
 24065  017D88  5161               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24066  017D8A  6EFE               	movwf	tosh,c
 24067  017D8C  5162               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24068  017D8E  6EFF               	movwf	tosu,c
 24069  017D90  50FA               	movf	pclath,w,c
 24070  017D92  0012               	return		;indir
 24071  017D94                     __end_of_TMR5_ISR:
 24072                           	opt stack 0
 24073                           tosu	equ	0xFFF
 24074                           tosh	equ	0xFFE
 24075                           tosl	equ	0xFFD
 24076                           pclatu	equ	0xFFB
 24077                           pclath	equ	0xFFA
 24078                           tblptru	equ	0xFF8
 24079                           tblptrh	equ	0xFF7
 24080                           tblptrl	equ	0xFF6
 24081                           tablat	equ	0xFF5
 24082                           prodh	equ	0xFF4
 24083                           prodl	equ	0xFF3
 24084                           intcon	equ	0xFF2
 24085                           indf0	equ	0xFEF
 24086                           postinc0	equ	0xFEE
 24087                           fsr0h	equ	0xFEA
 24088                           fsr0l	equ	0xFE9
 24089                           wreg	equ	0xFE8
 24090                           indf1	equ	0xFE7
 24091                           postdec1	equ	0xFE5
 24092                           plusw1	equ	0xFE3
 24093                           fsr1h	equ	0xFE2
 24094                           fsr1l	equ	0xFE1
 24095                           bsr	equ	0xFE0
 24096                           indf2	equ	0xFDF
 24097                           postinc2	equ	0xFDE
 24098                           postdec2	equ	0xFDD
 24099                           plusw2	equ	0xFDB
 24100                           fsr2h	equ	0xFDA
 24101                           fsr2l	equ	0xFD9
 24102                           status	equ	0xFD8
 24103                           
 24104 ;; *************** function _TMR5_WriteTimer *****************
 24105 ;; Defined at:
 24106 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 24107 ;; Parameters:    Size  Location     Type
 24108 ;;  timerVal        2    0[COMRAM] unsigned int 
 24109 ;; Auto vars:     Size  Location     Type
 24110 ;;		None
 24111 ;; Return value:  Size  Location     Type
 24112 ;;                  1    wreg      void 
 24113 ;; Registers used:
 24114 ;;		wreg, status,2
 24115 ;; Tracked objects:
 24116 ;;		On entry : 0/0
 24117 ;;		On exit  : 0/0
 24118 ;;		Unchanged: 0/0
 24119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24124 ;;Total ram usage:        2 bytes
 24125 ;; Hardware stack levels used:    1
 24126 ;; This function calls:
 24127 ;;		Nothing
 24128 ;; This function is called by:
 24129 ;;		_TMR5_ISR
 24130 ;;		_TMR5_Reload
 24131 ;; This function uses a non-reentrant model
 24132 ;;
 24133                           
 24134                           	psect	text82
 24135  018028                     __ptext82:
 24136                           	opt stack 0
 24137  018028                     _TMR5_WriteTimer:
 24138                           	opt stack 17
 24139                           
 24140                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 24141                           
 24142                           ;incstack = 0
 24143  018028  A4C3               	btfss	4035,2,c	;volatile
 24144  01802A  D007               	goto	i2l714
 24145                           
 24146                           ;tmr5.c: 130: {
 24147                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 24148  01802C  90C3               	bcf	4035,0,c	;volatile
 24149                           
 24150                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 24151  01802E  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 24152  018030  6EC2               	movwf	4034,c	;volatile
 24153                           
 24154                           ;tmr5.c: 136: TMR5L = timerVal;
 24155  018032  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 24156                           
 24157                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 24158  018036  80C3               	bsf	4035,0,c	;volatile
 24159                           
 24160                           ;tmr5.c: 140: }
 24161  018038  0012               	return	
 24162  01803A                     i2l714:
 24163                           
 24164                           ;tmr5.c: 141: else
 24165                           ;tmr5.c: 142: {
 24166                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 24167  01803A  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 24168  01803C  6EC2               	movwf	4034,c	;volatile
 24169                           
 24170                           ;tmr5.c: 145: TMR5L = timerVal;
 24171  01803E  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 24172  018042  0012               	return	
 24173  018044                     __end_of_TMR5_WriteTimer:
 24174                           	opt stack 0
 24175                           tosu	equ	0xFFF
 24176                           tosh	equ	0xFFE
 24177                           tosl	equ	0xFFD
 24178                           pclatu	equ	0xFFB
 24179                           pclath	equ	0xFFA
 24180                           tblptru	equ	0xFF8
 24181                           tblptrh	equ	0xFF7
 24182                           tblptrl	equ	0xFF6
 24183                           tablat	equ	0xFF5
 24184                           prodh	equ	0xFF4
 24185                           prodl	equ	0xFF3
 24186                           intcon	equ	0xFF2
 24187                           indf0	equ	0xFEF
 24188                           postinc0	equ	0xFEE
 24189                           fsr0h	equ	0xFEA
 24190                           fsr0l	equ	0xFE9
 24191                           wreg	equ	0xFE8
 24192                           indf1	equ	0xFE7
 24193                           postdec1	equ	0xFE5
 24194                           plusw1	equ	0xFE3
 24195                           fsr1h	equ	0xFE2
 24196                           fsr1l	equ	0xFE1
 24197                           bsr	equ	0xFE0
 24198                           indf2	equ	0xFDF
 24199                           postinc2	equ	0xFDE
 24200                           postdec2	equ	0xFDD
 24201                           plusw2	equ	0xFDB
 24202                           fsr2h	equ	0xFDA
 24203                           fsr2l	equ	0xFD9
 24204                           status	equ	0xFD8
 24205                           
 24206 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24207 ;; Defined at:
 24208 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24209 ;; Parameters:    Size  Location     Type
 24210 ;;		None
 24211 ;; Auto vars:     Size  Location     Type
 24212 ;;		None
 24213 ;; Return value:  Size  Location     Type
 24214 ;;                  1    wreg      void 
 24215 ;; Registers used:
 24216 ;;		None
 24217 ;; Tracked objects:
 24218 ;;		On entry : 0/0
 24219 ;;		On exit  : 0/0
 24220 ;;		Unchanged: 0/0
 24221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24226 ;;Total ram usage:        0 bytes
 24227 ;; Hardware stack levels used:    1
 24228 ;; This function calls:
 24229 ;;		Nothing
 24230 ;; This function is called by:
 24231 ;;		_TMR5_Initialize
 24232 ;;		_TMR5_ISR
 24233 ;; This function uses a non-reentrant model
 24234 ;;
 24235                           
 24236                           	psect	text83
 24237  01818A                     __ptext83:
 24238                           	opt stack 0
 24239  01818A                     _TMR5_DefaultInterruptHandler:
 24240                           	opt stack 17
 24241                           
 24242                           ;incstack = 0
 24243  01818A  0012               	return		;funcret
 24244  01818C                     __end_of_TMR5_DefaultInterruptHandler:
 24245                           	opt stack 0
 24246                           tosu	equ	0xFFF
 24247                           tosh	equ	0xFFE
 24248                           tosl	equ	0xFFD
 24249                           pclatu	equ	0xFFB
 24250                           pclath	equ	0xFFA
 24251                           tblptru	equ	0xFF8
 24252                           tblptrh	equ	0xFF7
 24253                           tblptrl	equ	0xFF6
 24254                           tablat	equ	0xFF5
 24255                           prodh	equ	0xFF4
 24256                           prodl	equ	0xFF3
 24257                           intcon	equ	0xFF2
 24258                           indf0	equ	0xFEF
 24259                           postinc0	equ	0xFEE
 24260                           fsr0h	equ	0xFEA
 24261                           fsr0l	equ	0xFE9
 24262                           wreg	equ	0xFE8
 24263                           indf1	equ	0xFE7
 24264                           postdec1	equ	0xFE5
 24265                           plusw1	equ	0xFE3
 24266                           fsr1h	equ	0xFE2
 24267                           fsr1l	equ	0xFE1
 24268                           bsr	equ	0xFE0
 24269                           indf2	equ	0xFDF
 24270                           postinc2	equ	0xFDE
 24271                           postdec2	equ	0xFDD
 24272                           plusw2	equ	0xFDB
 24273                           fsr2h	equ	0xFDA
 24274                           fsr2l	equ	0xFD9
 24275                           status	equ	0xFD8
 24276                           
 24277 ;; *************** function _EUSART2_Receive_ISR *****************
 24278 ;; Defined at:
 24279 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 24280 ;; Parameters:    Size  Location     Type
 24281 ;;		None
 24282 ;; Auto vars:     Size  Location     Type
 24283 ;;		None
 24284 ;; Return value:  Size  Location     Type
 24285 ;;                  1    wreg      void 
 24286 ;; Registers used:
 24287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24288 ;; Tracked objects:
 24289 ;;		On entry : 0/0
 24290 ;;		On exit  : 0/0
 24291 ;;		Unchanged: 0/0
 24292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24297 ;;Total ram usage:        0 bytes
 24298 ;; Hardware stack levels used:    1
 24299 ;; Hardware stack levels required when called:    3
 24300 ;; This function calls:
 24301 ;;		i2_printf
 24302 ;; This function is called by:
 24303 ;;		_EUSART2_Initialize
 24304 ;;		_INTERRUPT_InterruptManagerHigh
 24305 ;; This function uses a non-reentrant model
 24306 ;;
 24307                           
 24308                           	psect	text84
 24309  016DD2                     __ptext84:
 24310                           	opt stack 0
 24311  016DD2                     _EUSART2_Receive_ISR:
 24312                           	opt stack 15
 24313                           
 24314                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 24315                           
 24316                           ;incstack = 0
 24317  016DD2  010E               	movlb	14	; () banked
 24318  016DD4  A3F5               	btfss	245,1,b	;volatile
 24319  016DD6  D003               	goto	i2l409
 24320                           
 24321                           ; BSR set to: 14
 24322                           ;eusart2.c: 221: {
 24323                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 24324  016DD8  99F5               	bcf	245,4,b	;volatile
 24325                           
 24326                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 24327  016DDA  89F5               	bsf	245,4,b	;volatile
 24328                           
 24329                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 24330  016DDC  827E               	bsf	3966,1,c	;volatile
 24331  016DDE                     i2l409:
 24332                           
 24333                           ; BSR set to: 14
 24334                           ;eusart2.c: 227: }
 24335                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 24336  016DDE  927E               	bcf	3966,1,c	;volatile
 24337                           
 24338                           ; BSR set to: 14
 24339                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 24340  016DE0  0100               	movlb	0	; () banked
 24341  016DE2  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24342  016DE4  0D01               	mullw	1
 24343  016DE6  0E00               	movlw	low _eusart2RxBuffer
 24344  016DE8  24F3               	addwf	prodl,w,c
 24345  016DEA  6ED9               	movwf	fsr2l,c
 24346  016DEC  0E02               	movlw	high _eusart2RxBuffer
 24347  016DEE  20F4               	addwfc	prodh,w,c
 24348  016DF0  6EDA               	movwf	fsr2h,c
 24349  016DF2  CEF1 FFDF          	movff	3825,indf2	;volatile
 24350                           
 24351                           ; BSR set to: 0
 24352  016DF6  2BF4               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 24353                           
 24354                           ; BSR set to: 0
 24355                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 24356  016DF8  0E3F               	movlw	63
 24357  016DFA  65F4               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 24358  016DFC  D002               	goto	i2l410
 24359                           
 24360                           ; BSR set to: 0
 24361                           ;eusart2.c: 234: {
 24362                           ;eusart2.c: 235: eusart2RxHead = 0;
 24363  016DFE  0E00               	movlw	0
 24364  016E00  6FF4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 24365  016E02                     i2l410:
 24366                           
 24367                           ; BSR set to: 0
 24368                           ;eusart2.c: 236: }
 24369                           ;eusart2.c: 237: eusart2RxCount++;
 24370                           
 24371                           ; BSR set to: 0
 24372  016E02  0101               	movlb	1	; () banked
 24373  016E04  2BDE               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 24374                           
 24375                           ; BSR set to: 1
 24376                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 24377  016E06  0E0A               	movlw	10
 24378  016E08  010E               	movlb	14	; () banked
 24379  016E0A  19F1               	xorwf	241,w,b	;volatile
 24380  016E0C  B4D8               	btfsc	status,2,c
 24381  016E0E  D004               	goto	i2u1667_40
 24382                           
 24383                           ; BSR set to: 14
 24384  016E10  0E0D               	movlw	13
 24385  016E12  19F1               	xorwf	241,w,b	;volatile
 24386  016E14  A4D8               	btfss	status,2,c
 24387  016E16  D006               	goto	i2l411
 24388  016E18                     i2u1667_40:
 24389                           
 24390                           ; BSR set to: 14
 24391                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 24392  016E18  0100               	movlb	0	; () banked
 24393  016E1A  81FF               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 24394                           
 24395                           ; BSR set to: 0
 24396                           ;eusart2.c: 248: RC2REG = 0;
 24397  016E1C  0E00               	movlw	0
 24398  016E1E  010E               	movlb	14	; () banked
 24399  016E20  6FF1               	movwf	241,b	;volatile
 24400                           
 24401                           ;eusart2.c: 250: }
 24402  016E22  D002               	goto	i2l414
 24403  016E24                     i2l411:
 24404                           
 24405                           ; BSR set to: 14
 24406                           ;eusart2.c: 252: else {
 24407                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 24408  016E24  0100               	movlb	0	; () banked
 24409  016E26  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 24410  016E28                     i2l414:
 24411                           
 24412                           ;eusart2.c: 256: }
 24413                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 24414                           
 24415                           ; BSR set to: 0
 24416  016E28  0E08               	movlw	8
 24417  016E2A  010E               	movlb	14	; () banked
 24418  016E2C  19F1               	xorwf	241,w,b	;volatile
 24419  016E2E  A4D8               	btfss	status,2,c
 24420  016E30  0012               	return	
 24421                           
 24422                           ; BSR set to: 14
 24423                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 24424  016E32  0100               	movlb	0	; () banked
 24425  016E34  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24426  016E36  0D01               	mullw	1
 24427  016E38  0E00               	movlw	low _eusart2RxBuffer
 24428  016E3A  24F3               	addwf	prodl,w,c
 24429  016E3C  6ED9               	movwf	fsr2l,c
 24430  016E3E  0E02               	movlw	high _eusart2RxBuffer
 24431  016E40  20F4               	addwfc	prodh,w,c
 24432  016E42  6EDA               	movwf	fsr2h,c
 24433  016E44  0E00               	movlw	0
 24434  016E46  6EDF               	movwf	indf2,c
 24435                           
 24436                           ; BSR set to: 0
 24437                           ;eusart2.c: 262: eusart2RxHead--;
 24438  016E48  07F4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 24439                           
 24440                           ; BSR set to: 0
 24441                           ;eusart2.c: 265: printf("\033[K");
 24442  016E4A  0EC5               	movlw	low STR_1
 24443  016E4C  6F7E               	movwf	i2printf@f& (0+255),b
 24444  016E4E  0EFF               	movlw	high STR_1
 24445  016E50  6F7F               	movwf	(i2printf@f+1)& (0+255),b
 24446  016E52  ECE5  F08B         	call	i2_printf	;wreg free
 24447                           
 24448                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 24449  016E56  0101               	movlb	1	; () banked
 24450  016E58  51DF               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 24451  016E5A  0100               	movlb	0	; () banked
 24452  016E5C  19F4               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 24453  016E5E  B4D8               	btfsc	status,2,c
 24454  016E60  D00B               	goto	i2l416
 24455                           
 24456                           ; BSR set to: 0
 24457                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 24458  016E62  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24459  016E64  0D01               	mullw	1
 24460  016E66  0E00               	movlw	low _eusart2RxBuffer
 24461  016E68  24F3               	addwf	prodl,w,c
 24462  016E6A  6ED9               	movwf	fsr2l,c
 24463  016E6C  0E02               	movlw	high _eusart2RxBuffer
 24464  016E6E  20F4               	addwfc	prodh,w,c
 24465  016E70  6EDA               	movwf	fsr2h,c
 24466  016E72  0E00               	movlw	0
 24467  016E74  6EDF               	movwf	indf2,c
 24468                           
 24469                           ; BSR set to: 0
 24470                           ;eusart2.c: 270: eusart2RxHead--;
 24471  016E76  07F4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 24472  016E78                     i2l416:
 24473                           
 24474                           ; BSR set to: 0
 24475                           ;eusart2.c: 272: }
 24476                           ;eusart2.c: 274: RC2REG = 0;
 24477                           
 24478                           ; BSR set to: 0
 24479  016E78  0E00               	movlw	0
 24480  016E7A  010E               	movlb	14	; () banked
 24481  016E7C  6FF1               	movwf	241,b	;volatile
 24482  016E7E  0012               	return	
 24483  016E80                     __end_of_EUSART2_Receive_ISR:
 24484                           	opt stack 0
 24485                           tosu	equ	0xFFF
 24486                           tosh	equ	0xFFE
 24487                           tosl	equ	0xFFD
 24488                           pclatu	equ	0xFFB
 24489                           pclath	equ	0xFFA
 24490                           tblptru	equ	0xFF8
 24491                           tblptrh	equ	0xFF7
 24492                           tblptrl	equ	0xFF6
 24493                           tablat	equ	0xFF5
 24494                           prodh	equ	0xFF4
 24495                           prodl	equ	0xFF3
 24496                           intcon	equ	0xFF2
 24497                           indf0	equ	0xFEF
 24498                           postinc0	equ	0xFEE
 24499                           fsr0h	equ	0xFEA
 24500                           fsr0l	equ	0xFE9
 24501                           wreg	equ	0xFE8
 24502                           indf1	equ	0xFE7
 24503                           postdec1	equ	0xFE5
 24504                           plusw1	equ	0xFE3
 24505                           fsr1h	equ	0xFE2
 24506                           fsr1l	equ	0xFE1
 24507                           bsr	equ	0xFE0
 24508                           indf2	equ	0xFDF
 24509                           postinc2	equ	0xFDE
 24510                           postdec2	equ	0xFDD
 24511                           plusw2	equ	0xFDB
 24512                           fsr2h	equ	0xFDA
 24513                           fsr2l	equ	0xFD9
 24514                           status	equ	0xFD8
 24515                           
 24516 ;; *************** function i2_printf *****************
 24517 ;; Defined at:
 24518 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 24519 ;; Parameters:    Size  Location     Type
 24520 ;;  f               2   30[BANK0 ] PTR const unsigned char 
 24521 ;;		 -> STR_119(30), STR_118(23), STR_117(39), STR_116(36), 
 24522 ;;		 -> STR_115(33), STR_114(2023), STR_112(53), STR_110(58), 
 24523 ;;		 -> STR_108(71), STR_107(63), STR_106(37), STR_105(46), 
 24524 ;;		 -> STR_104(102), STR_103(86), STR_101(25), STR_99(42), 
 24525 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 24526 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(56), 
 24527 ;;		 -> STR_81(34), STR_79(34), STR_77(35), STR_75(45), 
 24528 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 24529 ;;		 -> STR_59(54), STR_58(64), STR_56(57), STR_54(85), 
 24530 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 24531 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 24532 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 24533 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 24534 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 24535 ;; Auto vars:     Size  Location     Type
 24536 ;;  printf          4   61[BANK0 ] PTR const unsigned char 
 24537 ;;  printf          4   57[BANK0 ] unsigned long 
 24538 ;;  printf          4   53[BANK0 ] struct .
 24539 ;;  printf          2   65[BANK0 ] int 
 24540 ;;  printf          2   51[BANK0 ] int 
 24541 ;;  printf          2   49[BANK0 ] unsigned short 
 24542 ;;  printf          2   47[BANK0 ] PTR void [1]
 24543 ;;		 -> ?i2_printf(2), ?_printf(2), 
 24544 ;;  printf          2   45[BANK0 ] PTR const unsigned char 
 24545 ;;		 -> STR_133(7), printf@c(1), STR_132(16), STR_131(22), 
 24546 ;;		 -> STR_130(21), STR_129(27), STR_128(41), STR_127(32), 
 24547 ;;		 -> STR_126(19), STR_125(16), STR_124(15), STR_123(16), 
 24548 ;;		 -> STR_122(10), STR_121(13), STR_120(12), ringBufferLUT@channel_name(22), 
 24549 ;;		 -> TRIAC_Firing_Angle(4), 
 24550 ;;  printf          2   43[BANK0 ] unsigned int 
 24551 ;;  printf          2    0        int 
 24552 ;;  printf          1   67[BANK0 ] char 
 24553 ;;  printf          1   42[BANK0 ] unsigned char 
 24554 ;;  printf          1    0        unsigned char 
 24555 ;; Return value:  Size  Location     Type
 24556 ;;                  2   30[BANK0 ] int 
 24557 ;; Registers used:
 24558 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24559 ;; Tracked objects:
 24560 ;;		On entry : 0/0
 24561 ;;		On exit  : 0/0
 24562 ;;		Unchanged: 0/0
 24563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24564 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24565 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24566 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24567 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24568 ;;Total ram usage:       38 bytes
 24569 ;; Hardware stack levels used:    1
 24570 ;; Hardware stack levels required when called:    2
 24571 ;; This function calls:
 24572 ;;		i2___awdiv
 24573 ;;		i2___fladd
 24574 ;;		i2___flge
 24575 ;;		i2___flmul
 24576 ;;		i2___flneg
 24577 ;;		i2___flsub
 24578 ;;		i2___fltol
 24579 ;;		i2___lldiv
 24580 ;;		i2___llmod
 24581 ;;		i2___wmul
 24582 ;;		i2___xxtofl
 24583 ;;		i2__div_to_l_
 24584 ;;		i2__tdiv_to_l_
 24585 ;;		i2_fround
 24586 ;;		i2_isdigit
 24587 ;;		i2_putch
 24588 ;;		i2_scale
 24589 ;; This function is called by:
 24590 ;;		_EUSART2_Receive_ISR
 24591 ;; This function uses a non-reentrant model
 24592 ;;
 24593                           
 24594                           	psect	text85
 24595  0117CA                     __ptext85:
 24596                           	opt stack 0
 24597  0117CA                     i2_printf:
 24598                           	opt stack 15
 24599                           
 24600                           ;doprnt.c: 466: va_list ap;
 24601                           ;doprnt.c: 499: signed char c;
 24602                           ;doprnt.c: 501: int width;
 24603                           ;doprnt.c: 504: int prec;
 24604                           ;doprnt.c: 508: unsigned short flag;
 24605                           ;doprnt.c: 515: char d;
 24606                           ;doprnt.c: 516: double fval;
 24607                           ;doprnt.c: 517: int exp;
 24608                           ;doprnt.c: 523: union {
 24609                           ;doprnt.c: 524: unsigned long vd;
 24610                           ;doprnt.c: 525: double integ;
 24611                           ;doprnt.c: 526: } tmpval;
 24612                           ;doprnt.c: 528: unsigned long val;
 24613                           ;doprnt.c: 529: unsigned len;
 24614                           ;doprnt.c: 530: const char * cp;
 24615                           ;doprnt.c: 533: *ap = __va_start();
 24616                           
 24617                           ; BSR set to: 14
 24618                           ;incstack = 0
 24619  0117CA  0E80               	movlw	low (?i2_printf+2)
 24620  0117CC  0100               	movlb	0	; () banked
 24621  0117CE  6F8F               	movwf	i2printf@ap& (0+255),b
 24622  0117D0  0E00               	movlw	high (?i2_printf+2)
 24623  0117D2  6F90               	movwf	(i2printf@ap+1)& (0+255),b
 24624                           
 24625                           ;doprnt.c: 536: while(c = *f++) {
 24626  0117D4  EF56  F091         	goto	i2u1653_40
 24627  0117D8                     
 24628                           ; BSR set to: 0
 24629                           ;doprnt.c: 538: if(c != '%')
 24630                           
 24631                           ; BSR set to: 0
 24632  0117D8  0E25               	movlw	37
 24633  0117DA  19A3               	xorwf	i2printf@c& (0+255),w,b
 24634  0117DC  B4D8               	btfsc	status,2,c
 24635  0117DE  D005               	goto	i2l1352
 24636                           
 24637                           ; BSR set to: 0
 24638                           ;doprnt.c: 540: {
 24639                           ;doprnt.c: 541: (putch(c) );
 24640  0117E0  51A3               	movf	i2printf@c& (0+255),w,b
 24641  0117E2  ECAA  F0C0         	call	i2_putch
 24642                           
 24643                           ;doprnt.c: 542: continue;
 24644  0117E6  EF56  F091         	goto	i2u1653_40
 24645  0117EA                     i2l1352:
 24646                           
 24647                           ;doprnt.c: 543: }
 24648                           ;doprnt.c: 548: flag = 0;
 24649  0117EA  0E00               	movlw	0
 24650  0117EC  0100               	movlb	0	; () banked
 24651  0117EE  6F92               	movwf	(i2printf@flag+1)& (0+255),b
 24652  0117F0  0E00               	movlw	0
 24653  0117F2  6F91               	movwf	i2printf@flag& (0+255),b
 24654                           
 24655                           ; BSR set to: 0
 24656                           ;doprnt.c: 611: if(*f == '.') {
 24657  0117F4  C07E  FFF6         	movff	i2printf@f,tblptrl
 24658  0117F8  C07F  FFF7         	movff	i2printf@f+1,tblptrh
 24659  0117FC  0E00               	movlw	low (__mediumconst shr (0+16))
 24660  0117FE  6EF8               	movwf	tblptru,c
 24661  011800  0E0D               	movlw	(high __ramtop+-1)
 24662  011802  64F7               	cpfsgt	tblptrh,c
 24663  011804  D003               	bra	i2u1604_47
 24664  011806  0008               	tblrd		*
 24665  011808  50F5               	movf	tablat,w,c
 24666  01180A  D005               	bra	i2u1604_40
 24667  01180C                     i2u1604_47:
 24668  01180C  CFF6 FFE9          	movff	tblptrl,fsr0l
 24669  011810  CFF7 FFEA          	movff	tblptrh,fsr0h
 24670  011814  50EF               	movf	indf0,w,c
 24671  011816                     i2u1604_40:
 24672  011816  0A2E               	xorlw	46
 24673  011818  A4D8               	btfss	status,2,c
 24674  01181A  D048               	goto	i2l1353
 24675                           
 24676                           ;doprnt.c: 612: flag |= 0x4000;
 24677  01181C  0100               	movlb	0	; () banked
 24678  01181E  8D92               	bsf	(i2printf@flag+1)& (0+255),6,b
 24679                           
 24680                           ;doprnt.c: 613: f++;
 24681  011820  4B7E               	infsnz	i2printf@f& (0+255),f,b
 24682  011822  2B7F               	incf	(i2printf@f+1)& (0+255),f,b
 24683                           
 24684                           ; BSR set to: 0
 24685                           ;doprnt.c: 620: {
 24686                           ;doprnt.c: 621: prec = 0;
 24687  011824  0E00               	movlw	0
 24688  011826  6FA2               	movwf	(i2printf@prec+1)& (0+255),b
 24689  011828  0E00               	movlw	0
 24690  01182A  6FA1               	movwf	i2printf@prec& (0+255),b
 24691                           
 24692                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 24693  01182C  D029               	goto	i2l1354
 24694  01182E                     
 24695                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 24696                           
 24697                           ; BSR set to: 0
 24698  01182E  C0A1  F001         	movff	i2printf@prec,i2___wmul@multiplier
 24699  011832  C0A2  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 24700  011836  0E00               	movlw	0
 24701  011838  6E04               	movwf	i2___wmul@multiplicand+1,c
 24702  01183A  0E0A               	movlw	10
 24703  01183C  6E03               	movwf	i2___wmul@multiplicand,c
 24704  01183E  ECA3  F0BF         	call	i2___wmul	;wreg free
 24705  011842  C07E  FFF6         	movff	i2printf@f,tblptrl
 24706  011846  C07F  FFF7         	movff	i2printf@f+1,tblptrh
 24707  01184A  0E00               	movlw	low (__mediumconst shr (0+16))
 24708  01184C  6EF8               	movwf	tblptru,c
 24709  01184E  0E0D               	movlw	(high __ramtop+-1)
 24710  011850  64F7               	cpfsgt	tblptrh,c
 24711  011852  D003               	bra	i2u1606_47
 24712  011854  0008               	tblrd		*
 24713  011856  50F5               	movf	tablat,w,c
 24714  011858  D005               	bra	i2u1606_40
 24715  01185A                     i2u1606_47:
 24716  01185A  CFF6 FFE9          	movff	tblptrl,fsr0l
 24717  01185E  CFF7 FFEA          	movff	tblptrh,fsr0h
 24718  011862  50EF               	movf	indf0,w,c
 24719  011864                     i2u1606_40:
 24720  011864  0100               	movlb	0	; () banked
 24721  011866  6F80               	movwf	??i2_printf& (0+255),b
 24722  011868  5180               	movf	??i2_printf& (0+255),w,b
 24723  01186A  2601               	addwf	?i2___wmul,f,c
 24724  01186C  0E00               	movlw	0
 24725  01186E  2202               	addwfc	?i2___wmul+1,f,c
 24726  011870  0ED0               	movlw	208
 24727  011872  2401               	addwf	?i2___wmul,w,c
 24728  011874  6FA1               	movwf	i2printf@prec& (0+255),b
 24729  011876  0EFF               	movlw	255
 24730  011878  2002               	addwfc	?i2___wmul+1,w,c
 24731  01187A  6FA2               	movwf	(i2printf@prec+1)& (0+255),b
 24732                           
 24733                           ; BSR set to: 0
 24734  01187C  4B7E               	infsnz	i2printf@f& (0+255),f,b
 24735  01187E  2B7F               	incf	(i2printf@f+1)& (0+255),f,b
 24736  011880                     i2l1354:
 24737                           
 24738                           ; BSR set to: 0
 24739                           
 24740                           ; BSR set to: 0
 24741  011880  C07E  FFF6         	movff	i2printf@f,tblptrl
 24742  011884  C07F  FFF7         	movff	i2printf@f+1,tblptrh
 24743  011888  0E00               	movlw	low (__mediumconst shr (0+16))
 24744  01188A  6EF8               	movwf	tblptru,c
 24745  01188C  0E0D               	movlw	(high __ramtop+-1)
 24746  01188E  64F7               	cpfsgt	tblptrh,c
 24747  011890  D003               	bra	i2u1607_47
 24748  011892  0008               	tblrd		*
 24749  011894  50F5               	movf	tablat,w,c
 24750  011896  D005               	bra	i2u1607_40
 24751  011898                     i2u1607_47:
 24752  011898  CFF6 FFE9          	movff	tblptrl,fsr0l
 24753  01189C  CFF7 FFEA          	movff	tblptrh,fsr0h
 24754  0118A0  50EF               	movf	indf0,w,c
 24755  0118A2                     i2u1607_40:
 24756  0118A2  ECE9  F0BF         	call	i2_isdigit
 24757  0118A6  A0D8               	btfss	status,0,c
 24758  0118A8  D088               	goto	i2l1358
 24759  0118AA  D7C1               	goto	i2l1355
 24760  0118AC                     i2l1353:
 24761                           
 24762                           ;doprnt.c: 626: prec = 0;
 24763  0118AC  0E00               	movlw	0
 24764  0118AE  0100               	movlb	0	; () banked
 24765  0118B0  6FA2               	movwf	(i2printf@prec+1)& (0+255),b
 24766  0118B2  0E00               	movlw	0
 24767  0118B4  6FA1               	movwf	i2printf@prec& (0+255),b
 24768                           
 24769                           ; BSR set to: 0
 24770                           ;doprnt.c: 628: flag |= 0x1000;
 24771  0118B6  8992               	bsf	(i2printf@flag+1)& (0+255),4,b
 24772                           
 24773                           ; BSR set to: 0
 24774                           ;doprnt.c: 630: }
 24775                           ;doprnt.c: 635: switch(c = *f++) {
 24776  0118B8  D080               	goto	i2l1358
 24777  0118BA                     
 24778                           ; BSR set to: 0
 24779                           ;doprnt.c: 663: flag |= 0x400;
 24780                           
 24781                           ; BSR set to: 0
 24782  0118BA  8592               	bsf	(i2printf@flag+1)& (0+255),2,b
 24783                           
 24784                           ; BSR set to: 0
 24785                           ;doprnt.c: 698: case 'i':
 24786                           ;doprnt.c: 699: break;
 24787                           
 24788                           ; BSR set to: 0
 24789                           
 24790                           ;doprnt.c: 697: case 'd':
 24791                           
 24792                           ;doprnt.c: 664: break;
 24793  0118BC  D0B5               	goto	i2l1362
 24794  0118BE                     
 24795                           ; BSR set to: 0
 24796                           ;doprnt.c: 718: case 'x':
 24797                           ;doprnt.c: 721: flag |= 0x80;
 24798                           
 24799                           ; BSR set to: 0
 24800                           
 24801                           ; BSR set to: 0
 24802  0118BE  8F91               	bsf	i2printf@flag& (0+255),7,b
 24803                           
 24804                           ;doprnt.c: 723: break;
 24805  0118C0  D0B3               	goto	i2l1362
 24806  0118C2                     
 24807                           ; BSR set to: 0
 24808                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 24809                           
 24810                           ; BSR set to: 0
 24811  0118C2  C08F  FFD9         	movff	i2printf@ap,fsr2l
 24812  0118C6  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 24813  0118CA  CFDE F08D          	movff	postinc2,i2printf@cp
 24814  0118CE  CFDD F08E          	movff	postdec2,i2printf@cp+1
 24815                           
 24816                           ; BSR set to: 0
 24817  0118D2  0E02               	movlw	2
 24818  0118D4  278F               	addwf	i2printf@ap& (0+255),f,b
 24819  0118D6  0E00               	movlw	0
 24820  0118D8  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24821                           
 24822                           ; BSR set to: 0
 24823                           ;doprnt.c: 740: if(!cp)
 24824  0118DA  518D               	movf	i2printf@cp& (0+255),w,b
 24825  0118DC  118E               	iorwf	(i2printf@cp+1)& (0+255),w,b
 24826  0118DE  A4D8               	btfss	status,2,c
 24827  0118E0  D004               	goto	i2l1368
 24828                           
 24829                           ; BSR set to: 0
 24830                           ;doprnt.c: 741: cp = "(null)";
 24831  0118E2  0E86               	movlw	low STR_133
 24832  0118E4  6F8D               	movwf	i2printf@cp& (0+255),b
 24833  0118E6  0EFF               	movlw	high STR_133
 24834  0118E8  6F8E               	movwf	(i2printf@cp+1)& (0+255),b
 24835  0118EA                     i2l1368:
 24836                           
 24837                           ; BSR set to: 0
 24838                           ;doprnt.c: 745: len = 0;
 24839                           
 24840                           ; BSR set to: 0
 24841  0118EA  0E00               	movlw	0
 24842  0118EC  6F8C               	movwf	(i2printf@len+1)& (0+255),b
 24843  0118EE  0E00               	movlw	0
 24844  0118F0  6F8B               	movwf	i2printf@len& (0+255),b
 24845                           
 24846                           ;doprnt.c: 746: while(cp[len])
 24847  0118F2  D003               	goto	i2l1369
 24848  0118F4                     
 24849                           ;doprnt.c: 747: len++;
 24850                           
 24851                           ; BSR set to: 0
 24852  0118F4  0100               	movlb	0	; () banked
 24853  0118F6  4B8B               	infsnz	i2printf@len& (0+255),f,b
 24854  0118F8  2B8C               	incf	(i2printf@len+1)& (0+255),f,b
 24855  0118FA                     i2l1369:
 24856                           
 24857                           ; BSR set to: 0
 24858                           
 24859                           ; BSR set to: 0
 24860  0118FA  518B               	movf	i2printf@len& (0+255),w,b
 24861  0118FC  258D               	addwf	i2printf@cp& (0+255),w,b
 24862  0118FE  6F80               	movwf	??i2_printf& (0+255),b
 24863  011900  518C               	movf	(i2printf@len+1)& (0+255),w,b
 24864  011902  218E               	addwfc	(i2printf@cp+1)& (0+255),w,b
 24865  011904  6F81               	movwf	(??i2_printf+1)& (0+255),b
 24866  011906  C080  FFF6         	movff	??i2_printf,tblptrl
 24867  01190A  C081  FFF7         	movff	??i2_printf+1,tblptrh
 24868  01190E  0E00               	movlw	low (__mediumconst shr (0+16))
 24869  011910  6EF8               	movwf	tblptru,c
 24870  011912  0E0D               	movlw	(high __ramtop+-1)
 24871  011914  64F7               	cpfsgt	tblptrh,c
 24872  011916  D003               	bra	i2u1610_47
 24873  011918  0008               	tblrd		*
 24874  01191A  50F5               	movf	tablat,w,c
 24875  01191C  D005               	bra	i2u1610_40
 24876  01191E                     i2u1610_47:
 24877  01191E  CFF6 FFE9          	movff	tblptrl,fsr0l
 24878  011922  CFF7 FFEA          	movff	tblptrh,fsr0h
 24879  011926  50EF               	movf	indf0,w,c
 24880  011928                     i2u1610_40:
 24881  011928  0900               	iorlw	0
 24882  01192A  A4D8               	btfss	status,2,c
 24883  01192C  D7E3               	goto	i2l1370
 24884  01192E                     i2u1611_40:
 24885                           
 24886                           ;doprnt.c: 753: if(prec && prec < len)
 24887                           
 24888                           ;doprnt.c: 750: dostring:
 24889  01192E  0100               	movlb	0	; () banked
 24890  011930  51A1               	movf	i2printf@prec& (0+255),w,b
 24891  011932  11A2               	iorwf	(i2printf@prec+1)& (0+255),w,b
 24892  011934  B4D8               	btfsc	status,2,c
 24893  011936  D021               	goto	i2l1374
 24894                           
 24895                           ; BSR set to: 0
 24896  011938  518B               	movf	i2printf@len& (0+255),w,b
 24897  01193A  5DA1               	subwf	i2printf@prec& (0+255),w,b
 24898  01193C  518C               	movf	(i2printf@len+1)& (0+255),w,b
 24899  01193E  59A2               	subwfb	(i2printf@prec+1)& (0+255),w,b
 24900  011940  B0D8               	btfsc	status,0,c
 24901  011942  D01B               	goto	i2l1374
 24902                           
 24903                           ; BSR set to: 0
 24904                           ;doprnt.c: 754: len = prec;
 24905  011944  C0A1  F08B         	movff	i2printf@prec,i2printf@len
 24906  011948  C0A2  F08C         	movff	i2printf@prec+1,i2printf@len+1
 24907                           
 24908                           ; BSR set to: 0
 24909                           ;doprnt.c: 767: while(len--)
 24910  01194C  D016               	goto	i2l1374
 24911  01194E                     i2l13450:
 24912                           
 24913                           ; BSR set to: 0
 24914                           ;doprnt.c: 768: (putch(*cp++) );
 24915  01194E  C08D  FFF6         	movff	i2printf@cp,tblptrl
 24916  011952  C08E  FFF7         	movff	i2printf@cp+1,tblptrh
 24917  011956  0E00               	movlw	low (__mediumconst shr (0+16))
 24918  011958  6EF8               	movwf	tblptru,c
 24919  01195A  0E0D               	movlw	(high __ramtop+-1)
 24920  01195C  64F7               	cpfsgt	tblptrh,c
 24921  01195E  D003               	bra	i2u1614_47
 24922  011960  0008               	tblrd		*
 24923  011962  50F5               	movf	tablat,w,c
 24924  011964  D005               	bra	i2u1614_40
 24925  011966                     i2u1614_47:
 24926  011966  CFF6 FFE9          	movff	tblptrl,fsr0l
 24927  01196A  CFF7 FFEA          	movff	tblptrh,fsr0h
 24928  01196E  50EF               	movf	indf0,w,c
 24929  011970                     i2u1614_40:
 24930  011970  ECAA  F0C0         	call	i2_putch
 24931  011974  0100               	movlb	0	; () banked
 24932  011976  4B8D               	infsnz	i2printf@cp& (0+255),f,b
 24933  011978  2B8E               	incf	(i2printf@cp+1)& (0+255),f,b
 24934  01197A                     i2l1374:
 24935                           
 24936                           ; BSR set to: 0
 24937                           
 24938                           ; BSR set to: 0
 24939  01197A  078B               	decf	i2printf@len& (0+255),f,b
 24940  01197C  A0D8               	btfss	status,0,c
 24941  01197E  078C               	decf	(i2printf@len+1)& (0+255),f,b
 24942  011980  298B               	incf	i2printf@len& (0+255),w,b
 24943  011982  E1E5               	bnz	i2l13450
 24944  011984  298C               	incf	(i2printf@len+1)& (0+255),w,b
 24945  011986  B4D8               	btfsc	status,2,c
 24946  011988  EF56  F091         	goto	i2u1653_40
 24947  01198C  D7E0               	goto	i2l1375
 24948  01198E                     
 24949                           ; BSR set to: 0
 24950                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 24951                           
 24952                           ; BSR set to: 0
 24953  01198E  C08F  FFD9         	movff	i2printf@ap,fsr2l
 24954  011992  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 24955  011996  50DF               	movf	indf2,w,c
 24956  011998  6FA3               	movwf	i2printf@c& (0+255),b
 24957                           
 24958                           ; BSR set to: 0
 24959  01199A  0E02               	movlw	2
 24960  01199C  278F               	addwf	i2printf@ap& (0+255),f,b
 24961  01199E  0E00               	movlw	0
 24962  0119A0  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24963  0119A2                     
 24964                           ; BSR set to: 0
 24965                           ;doprnt.c: 805: cp = (char *)&c;
 24966                           
 24967                           ; BSR set to: 0
 24968  0119A2  0EA3               	movlw	low i2printf@c
 24969  0119A4  6F8D               	movwf	i2printf@cp& (0+255),b
 24970  0119A6  0E00               	movlw	high i2printf@c
 24971  0119A8  6F8E               	movwf	(i2printf@cp+1)& (0+255),b
 24972                           
 24973                           ; BSR set to: 0
 24974                           ;doprnt.c: 806: len = 1;
 24975  0119AA  0E00               	movlw	0
 24976  0119AC  6F8C               	movwf	(i2printf@len+1)& (0+255),b
 24977  0119AE  0E01               	movlw	1
 24978  0119B0  6F8B               	movwf	i2printf@len& (0+255),b
 24979                           
 24980                           ;doprnt.c: 807: goto dostring;
 24981  0119B2  D7BD               	goto	i2u1611_40
 24982  0119B4                     
 24983                           ; BSR set to: 0
 24984                           ;doprnt.c: 818: flag |= 0xC0;
 24985                           
 24986                           ; BSR set to: 0
 24987  0119B4  0EC0               	movlw	192
 24988  0119B6  1391               	iorwf	i2printf@flag& (0+255),f,b
 24989                           
 24990                           ; BSR set to: 0
 24991                           ;doprnt.c: 822: }
 24992                           
 24993                           ;doprnt.c: 819: break;
 24994  0119B8  D037               	goto	i2l1362
 24995  0119BA                     i2l1358:
 24996                           
 24997                           ; BSR set to: 0
 24998  0119BA  0100               	movlb	0	; () banked
 24999  0119BC  517E               	movf	i2printf@f& (0+255),w,b
 25000  0119BE  6F80               	movwf	??i2_printf& (0+255),b
 25001  0119C0  517F               	movf	(i2printf@f+1)& (0+255),w,b
 25002  0119C2  6F81               	movwf	(??i2_printf+1)& (0+255),b
 25003  0119C4  4B7E               	infsnz	i2printf@f& (0+255),f,b
 25004  0119C6  2B7F               	incf	(i2printf@f+1)& (0+255),f,b
 25005  0119C8  C080  FFF6         	movff	??i2_printf,tblptrl
 25006  0119CC  C081  FFF7         	movff	??i2_printf+1,tblptrh
 25007  0119D0  0E00               	movlw	low (__mediumconst shr (0+16))
 25008  0119D2  6EF8               	movwf	tblptru,c
 25009  0119D4  0E0D               	movlw	(high __ramtop+-1)
 25010  0119D6  64F7               	cpfsgt	tblptrh,c
 25011  0119D8  D003               	bra	i2u1616_47
 25012  0119DA  0008               	tblrd		*
 25013  0119DC  50F5               	movf	tablat,w,c
 25014  0119DE  D005               	bra	i2u1616_40
 25015  0119E0                     i2u1616_47:
 25016  0119E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 25017  0119E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 25018  0119E8  50EF               	movf	indf0,w,c
 25019  0119EA                     i2u1616_40:
 25020  0119EA  0100               	movlb	0	; () banked
 25021  0119EC  6FA3               	movwf	i2printf@c& (0+255),b
 25022  0119EE  51A3               	movf	i2printf@c& (0+255),w,b
 25023                           
 25024                           ; Switch size 1, requested type "space"
 25025                           ; Number of cases is 9, Range of values is 0 to 120
 25026                           ; switch strategies available:
 25027                           ; Name         Instructions Cycles
 25028                           ; simple_byte           28    15 (average)
 25029                           ;	Chosen strategy is simple_byte
 25030  0119F0  0A00               	xorlw	0	; case 0
 25031  0119F2  B4D8               	btfsc	status,2,c
 25032  0119F4  0012               	return	
 25033  0119F6  0A58               	xorlw	88	; case 88
 25034  0119F8  B4D8               	btfsc	status,2,c
 25035  0119FA  D761               	goto	i2l1365
 25036  0119FC  0A3B               	xorlw	59	; case 99
 25037  0119FE  B4D8               	btfsc	status,2,c
 25038  011A00  D7C6               	goto	i2l1377
 25039  011A02  0A07               	xorlw	7	; case 100
 25040  011A04  B4D8               	btfsc	status,2,c
 25041  011A06  D010               	goto	i2l1362
 25042  011A08  0A02               	xorlw	2	; case 102
 25043  011A0A  B4D8               	btfsc	status,2,c
 25044  011A0C  D756               	goto	i2l1361
 25045  011A0E  0A0F               	xorlw	15	; case 105
 25046  011A10  B4D8               	btfsc	status,2,c
 25047  011A12  D00A               	goto	i2l1362
 25048  011A14  0A1A               	xorlw	26	; case 115
 25049  011A16  B4D8               	btfsc	status,2,c
 25050  011A18  D754               	goto	i2l1367
 25051  011A1A  0A06               	xorlw	6	; case 117
 25052  011A1C  B4D8               	btfsc	status,2,c
 25053  011A1E  D7CA               	goto	i2l1379
 25054  011A20  0A0D               	xorlw	13	; case 120
 25055  011A22  B4D8               	btfsc	status,2,c
 25056  011A24  D74C               	goto	i2l1365
 25057  011A26  D7BD               	goto	i2l1378
 25058  011A28                     i2l1362:
 25059                           
 25060                           ; BSR set to: 0
 25061                           ;doprnt.c: 825: if(flag & (0x700)) {
 25062                           
 25063                           ; BSR set to: 0
 25064  011A28  0E07               	movlw	7
 25065  011A2A  1592               	andwf	(i2printf@flag+1)& (0+255),w,b
 25066  011A2C  B4D8               	btfsc	status,2,c
 25067  011A2E  D2E9               	goto	i2l1380
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;doprnt.c: 827: if(flag & 0x1000)
 25071  011A30  A992               	btfss	(i2printf@flag+1)& (0+255),4,b
 25072  011A32  D004               	goto	i2l1381
 25073                           
 25074                           ; BSR set to: 0
 25075                           ;doprnt.c: 829: prec = 6;
 25076  011A34  0E00               	movlw	0
 25077  011A36  6FA2               	movwf	(i2printf@prec+1)& (0+255),b
 25078  011A38  0E06               	movlw	6
 25079  011A3A  6FA1               	movwf	i2printf@prec& (0+255),b
 25080  011A3C                     i2l1381:
 25081                           
 25082                           ; BSR set to: 0
 25083                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 25084                           
 25085                           ; BSR set to: 0
 25086  011A3C  C08F  FFD9         	movff	i2printf@ap,fsr2l
 25087  011A40  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 25088  011A44  CFDE F09D          	movff	postinc2,i2printf@fval
 25089  011A48  CFDE F09E          	movff	postinc2,i2printf@fval+1
 25090  011A4C  CFDE F09F          	movff	postinc2,i2printf@fval+2
 25091  011A50  CFDE F0A0          	movff	postinc2,i2printf@fval+3
 25092                           
 25093                           ; BSR set to: 0
 25094  011A54  0E04               	movlw	4
 25095  011A56  278F               	addwf	i2printf@ap& (0+255),f,b
 25096  011A58  0E00               	movlw	0
 25097  011A5A  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25098                           
 25099                           ; BSR set to: 0
 25100                           ;doprnt.c: 831: if(fval < 0.0) {
 25101  011A5C  AFA0               	btfss	(i2printf@fval+3)& (0+255),7,b
 25102  011A5E  D015               	goto	i2l1382
 25103                           
 25104                           ; BSR set to: 0
 25105                           ;doprnt.c: 832: fval = -fval;
 25106  011A60  C09D  F02C         	movff	i2printf@fval,i2___flneg@f1
 25107  011A64  C09E  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 25108  011A68  C09F  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 25109  011A6C  C0A0  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 25110  011A70  EC2A  F0BF         	call	i2___flneg	;wreg free
 25111  011A74  C02C  F09D         	movff	?i2___flneg,i2printf@fval
 25112  011A78  C02D  F09E         	movff	?i2___flneg+1,i2printf@fval+1
 25113  011A7C  C02E  F09F         	movff	?i2___flneg+2,i2printf@fval+2
 25114  011A80  C02F  F0A0         	movff	?i2___flneg+3,i2printf@fval+3
 25115                           
 25116                           ;doprnt.c: 833: flag |= 0x03;
 25117  011A84  0E03               	movlw	3
 25118  011A86  0100               	movlb	0	; () banked
 25119  011A88  1391               	iorwf	i2printf@flag& (0+255),f,b
 25120  011A8A                     i2l1382:
 25121                           
 25122                           ; BSR set to: 0
 25123                           ;doprnt.c: 834: }
 25124                           ;doprnt.c: 835: exp = 0;
 25125                           
 25126                           ; BSR set to: 0
 25127  011A8A  0E00               	movlw	0
 25128  011A8C  6F94               	movwf	(i2printf@exp+1)& (0+255),b
 25129  011A8E  0E00               	movlw	0
 25130  011A90  6F93               	movwf	i2printf@exp& (0+255),b
 25131                           
 25132                           ; BSR set to: 0
 25133                           ;doprnt.c: 836: if( fval!=0) {
 25134  011A92  519D               	movf	i2printf@fval& (0+255),w,b
 25135  011A94  119E               	iorwf	(i2printf@fval+1)& (0+255),w,b
 25136  011A96  119F               	iorwf	(i2printf@fval+2)& (0+255),w,b
 25137  011A98  11A0               	iorwf	(i2printf@fval+3)& (0+255),w,b
 25138  011A9A  B4D8               	btfsc	status,2,c
 25139  011A9C  D082               	goto	i2l1387
 25140                           
 25141                           ; BSR set to: 0
 25142                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 25143  011A9E  359F               	rlcf	(i2printf@fval+2)& (0+255),w,b
 25144  011AA0  35A0               	rlcf	(i2printf@fval+3)& (0+255),w,b
 25145  011AA2  0F82               	addlw	130
 25146  011AA4  6F93               	movwf	i2printf@exp& (0+255),b
 25147  011AA6  6B94               	clrf	(i2printf@exp+1)& (0+255),b
 25148  011AA8  0EFF               	movlw	255
 25149  011AAA  2394               	addwfc	(i2printf@exp+1)& (0+255),f,b
 25150                           
 25151                           ; BSR set to: 0
 25152                           ;doprnt.c: 838: exp--;
 25153  011AAC  0793               	decf	i2printf@exp& (0+255),f,b
 25154  011AAE  A0D8               	btfss	status,0,c
 25155  011AB0  0794               	decf	(i2printf@exp+1)& (0+255),f,b
 25156                           
 25157                           ; BSR set to: 0
 25158                           ;doprnt.c: 839: exp *= 3;
 25159  011AB2  C093  F001         	movff	i2printf@exp,i2___wmul@multiplier
 25160  011AB6  C094  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 25161  011ABA  0E00               	movlw	0
 25162  011ABC  6E04               	movwf	i2___wmul@multiplicand+1,c
 25163  011ABE  0E03               	movlw	3
 25164  011AC0  6E03               	movwf	i2___wmul@multiplicand,c
 25165  011AC2  ECA3  F0BF         	call	i2___wmul	;wreg free
 25166  011AC6  C001  F093         	movff	?i2___wmul,i2printf@exp
 25167  011ACA  C002  F094         	movff	?i2___wmul+1,i2printf@exp+1
 25168                           
 25169                           ;doprnt.c: 840: exp /= 10;
 25170  011ACE  C093  F007         	movff	i2printf@exp,i2___awdiv@dividend
 25171  011AD2  C094  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 25172  011AD6  0E00               	movlw	0
 25173  011AD8  6E0A               	movwf	i2___awdiv@divisor+1,c
 25174  011ADA  0E0A               	movlw	10
 25175  011ADC  6E09               	movwf	i2___awdiv@divisor,c
 25176  011ADE  ECA4  F0B8         	call	i2___awdiv	;wreg free
 25177  011AE2  C007  F093         	movff	?i2___awdiv,i2printf@exp
 25178  011AE6  C008  F094         	movff	?i2___awdiv+1,i2printf@exp+1
 25179                           
 25180                           ;doprnt.c: 841: if(exp < 0)
 25181  011AEA  0100               	movlb	0	; () banked
 25182  011AEC  AF94               	btfss	(i2printf@exp+1)& (0+255),7,b
 25183  011AEE  D003               	goto	i2l1384
 25184                           
 25185                           ; BSR set to: 0
 25186                           ;doprnt.c: 842: exp--;
 25187  011AF0  0793               	decf	i2printf@exp& (0+255),f,b
 25188  011AF2  A0D8               	btfss	status,0,c
 25189  011AF4  0794               	decf	(i2printf@exp+1)& (0+255),f,b
 25190  011AF6                     i2l1384:
 25191                           
 25192                           ; BSR set to: 0
 25193                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25194                           
 25195                           ; BSR set to: 0
 25196  011AF6  5193               	movf	i2printf@exp& (0+255),w,b
 25197  011AF8  0800               	sublw	0
 25198  011AFA  ECDE  F097         	call	i2_scale
 25199  011AFE  C049  F095         	movff	?i2_scale,i2printf@tmpval
 25200  011B02  C04A  F096         	movff	?i2_scale+1,i2printf@tmpval+1
 25201  011B06  C04B  F097         	movff	?i2_scale+2,i2printf@tmpval+2
 25202  011B0A  C04C  F098         	movff	?i2_scale+3,i2printf@tmpval+3
 25203                           
 25204                           ;doprnt.c: 847: tmpval.integ *= fval;
 25205  011B0E  C095  F030         	movff	i2printf@tmpval,i2___flmul@b
 25206  011B12  C096  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 25207  011B16  C097  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 25208  011B1A  C098  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 25209  011B1E  C09D  F034         	movff	i2printf@fval,i2___flmul@a
 25210  011B22  C09E  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 25211  011B26  C09F  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 25212  011B2A  C0A0  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 25213  011B2E  EC7B  F09D         	call	i2___flmul	;wreg free
 25214  011B32  C030  F095         	movff	?i2___flmul,i2printf@tmpval
 25215  011B36  C031  F096         	movff	?i2___flmul+1,i2printf@tmpval+1
 25216  011B3A  C032  F097         	movff	?i2___flmul+2,i2printf@tmpval+2
 25217  011B3E  C033  F098         	movff	?i2___flmul+3,i2printf@tmpval+3
 25218                           
 25219                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25220  011B42  C095  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25221  011B46  C096  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25222  011B4A  C097  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25223  011B4E  C098  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25224  011B52  0E00               	movlw	0
 25225  011B54  6E38               	movwf	i2___flge@ff2,c
 25226  011B56  0E00               	movlw	0
 25227  011B58  6E39               	movwf	i2___flge@ff2+1,c
 25228  011B5A  0E80               	movlw	128
 25229  011B5C  6E3A               	movwf	i2___flge@ff2+2,c
 25230  011B5E  0E3F               	movlw	63
 25231  011B60  6E3B               	movwf	i2___flge@ff2+3,c
 25232  011B62  ECB2  F0B2         	call	i2___flge	;wreg free
 25233  011B66  B0D8               	btfsc	status,0,c
 25234  011B68  D005               	goto	i2l1385
 25235                           
 25236                           ;doprnt.c: 849: exp--;
 25237  011B6A  0100               	movlb	0	; () banked
 25238  011B6C  0793               	decf	i2printf@exp& (0+255),f,b
 25239  011B6E  A0D8               	btfss	status,0,c
 25240  011B70  0794               	decf	(i2printf@exp+1)& (0+255),f,b
 25241  011B72  D017               	goto	i2l1387
 25242  011B74                     i2l1385:
 25243                           
 25244                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25245                           
 25246                           ; BSR set to: 0
 25247  011B74  C095  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25248  011B78  C096  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25249  011B7C  C097  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25250  011B80  C098  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25251  011B84  0E00               	movlw	0
 25252  011B86  6E38               	movwf	i2___flge@ff2,c
 25253  011B88  0E00               	movlw	0
 25254  011B8A  6E39               	movwf	i2___flge@ff2+1,c
 25255  011B8C  0E20               	movlw	32
 25256  011B8E  6E3A               	movwf	i2___flge@ff2+2,c
 25257  011B90  0E41               	movlw	65
 25258  011B92  6E3B               	movwf	i2___flge@ff2+3,c
 25259  011B94  ECB2  F0B2         	call	i2___flge	;wreg free
 25260  011B98  A0D8               	btfss	status,0,c
 25261  011B9A  D003               	goto	i2l1387
 25262                           
 25263                           ;doprnt.c: 851: exp++;
 25264  011B9C  0100               	movlb	0	; () banked
 25265  011B9E  4B93               	infsnz	i2printf@exp& (0+255),f,b
 25266  011BA0  2B94               	incf	(i2printf@exp+1)& (0+255),f,b
 25267  011BA2                     i2l1387:
 25268                           
 25269                           ;doprnt.c: 852: }
 25270                           ;doprnt.c: 1112: if(prec <= 12)
 25271                           
 25272                           ; BSR set to: 0
 25273                           
 25274                           ; BSR set to: 0
 25275                           
 25276                           ; BSR set to: 0
 25277  011BA2  0100               	movlb	0	; () banked
 25278  011BA4  BFA2               	btfsc	(i2printf@prec+1)& (0+255),7,b
 25279  011BA6  D006               	goto	i2u1624_40
 25280  011BA8  51A2               	movf	(i2printf@prec+1)& (0+255),w,b
 25281  011BAA  E121               	bnz	i2l13518
 25282  011BAC  0E0D               	movlw	13
 25283  011BAE  5DA1               	subwf	i2printf@prec& (0+255),w,b
 25284  011BB0  B0D8               	btfsc	status,0,c
 25285  011BB2  D01D               	goto	i2l1388
 25286  011BB4                     i2u1624_40:
 25287                           
 25288                           ; BSR set to: 0
 25289                           ;doprnt.c: 1113: fval += fround(prec);
 25290  011BB4  C09D  F056         	movff	i2printf@fval,i2___fladd@b
 25291  011BB8  C09E  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 25292  011BBC  C09F  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 25293  011BC0  C0A0  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 25294  011BC4  51A1               	movf	i2printf@prec& (0+255),w,b
 25295  011BC6  ECDC  F0AA         	call	i2_fround
 25296  011BCA  C049  F05A         	movff	?i2_fround,i2___fladd@a
 25297  011BCE  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 25298  011BD2  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 25299  011BD6  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 25300  011BDA  ECC2  F0A0         	call	i2___fladd	;wreg free
 25301  011BDE  C056  F09D         	movff	?i2___fladd,i2printf@fval
 25302  011BE2  C057  F09E         	movff	?i2___fladd+1,i2printf@fval+1
 25303  011BE6  C058  F09F         	movff	?i2___fladd+2,i2printf@fval+2
 25304  011BEA  C059  F0A0         	movff	?i2___fladd+3,i2printf@fval+3
 25305  011BEE                     i2l1388:
 25306  011BEE                     i2l13518:
 25307                           
 25308                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25309  011BEE  0100               	movlb	0	; () banked
 25310  011BF0  BF94               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25311  011BF2  D006               	goto	i2u1625_40
 25312  011BF4  5194               	movf	(i2printf@exp+1)& (0+255),w,b
 25313  011BF6  E123               	bnz	i2l13526
 25314  011BF8  0E0A               	movlw	10
 25315  011BFA  5D93               	subwf	i2printf@exp& (0+255),w,b
 25316  011BFC  B0D8               	btfsc	status,0,c
 25317  011BFE  D01F               	goto	i2u1628_40
 25318  011C00                     i2u1625_40:
 25319                           
 25320                           ; BSR set to: 0
 25321  011C00  519D               	movf	i2printf@fval& (0+255),w,b
 25322  011C02  119E               	iorwf	(i2printf@fval+1)& (0+255),w,b
 25323  011C04  119F               	iorwf	(i2printf@fval+2)& (0+255),w,b
 25324  011C06  11A0               	iorwf	(i2printf@fval+3)& (0+255),w,b
 25325  011C08  B4D8               	btfsc	status,2,c
 25326  011C0A  D064               	goto	i2l1389
 25327                           
 25328                           ; BSR set to: 0
 25329  011C0C  C09D  F049         	movff	i2printf@fval,i2___fltol@f1
 25330  011C10  C09E  F04A         	movff	i2printf@fval+1,i2___fltol@f1+1
 25331  011C14  C09F  F04B         	movff	i2printf@fval+2,i2___fltol@f1+2
 25332  011C18  C0A0  F04C         	movff	i2printf@fval+3,i2___fltol@f1+3
 25333  011C1C  EC48  F0B5         	call	i2___fltol	;wreg free
 25334  011C20  5049               	movf	?i2___fltol,w,c
 25335  011C22  104A               	iorwf	?i2___fltol+1,w,c
 25336  011C24  104B               	iorwf	?i2___fltol+2,w,c
 25337  011C26  104C               	iorwf	?i2___fltol+3,w,c
 25338  011C28  A4D8               	btfss	status,2,c
 25339  011C2A  D054               	goto	i2l1389
 25340  011C2C  0100               	movlb	0	; () banked
 25341  011C2E  BF94               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25342  011C30  D051               	goto	i2l1389
 25343  011C32  5194               	movf	(i2printf@exp+1)& (0+255),w,b
 25344  011C34  E104               	bnz	i2l13526
 25345  011C36  0E02               	movlw	2
 25346  011C38  5D93               	subwf	i2printf@exp& (0+255),w,b
 25347  011C3A  A0D8               	btfss	status,0,c
 25348  011C3C  D04B               	goto	i2l1389
 25349  011C3E                     i2u1628_40:
 25350  011C3E                     i2l13526:
 25351                           
 25352                           ; BSR set to: 0
 25353                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25354  011C3E  C095  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25355  011C42  C096  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25356  011C46  C097  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25357  011C4A  C098  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25358  011C4E  0E5F               	movlw	95
 25359  011C50  6E38               	movwf	i2___flge@ff2,c
 25360  011C52  0E70               	movlw	112
 25361  011C54  6E39               	movwf	i2___flge@ff2+1,c
 25362  011C56  0E89               	movlw	137
 25363  011C58  6E3A               	movwf	i2___flge@ff2+2,c
 25364  011C5A  0E40               	movlw	64
 25365  011C5C  6E3B               	movwf	i2___flge@ff2+3,c
 25366  011C5E  ECB2  F0B2         	call	i2___flge	;wreg free
 25367  011C62  B0D8               	btfsc	status,0,c
 25368  011C64  D003               	goto	i2l1392
 25369                           
 25370                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25371  011C66  0100               	movlb	0	; () banked
 25372  011C68  0EF7               	movlw	247
 25373  011C6A  D002               	goto	L15
 25374  011C6C                     i2l1392:
 25375                           
 25376                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25377                           
 25378                           ; BSR set to: 0
 25379  011C6C  0100               	movlb	0	; () banked
 25380  011C6E  0EF8               	movlw	248
 25381  011C70                     L15:
 25382  011C70  2793               	addwf	i2printf@exp& (0+255),f,b
 25383  011C72  0EFF               	movlw	255
 25384  011C74  2394               	addwfc	(i2printf@exp+1)& (0+255),f,b
 25385                           
 25386                           ; BSR set to: 0
 25387                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25388                           
 25389                           ; BSR set to: 0
 25390  011C76  5193               	movf	i2printf@exp& (0+255),w,b
 25391  011C78  ECDE  F097         	call	i2_scale
 25392  011C7C  C049  F095         	movff	?i2_scale,i2printf@tmpval
 25393  011C80  C04A  F096         	movff	?i2_scale+1,i2printf@tmpval+1
 25394  011C84  C04B  F097         	movff	?i2_scale+2,i2printf@tmpval+2
 25395  011C88  C04C  F098         	movff	?i2_scale+3,i2printf@tmpval+3
 25396  011C8C  C09D  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 25397  011C90  C09E  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 25398  011C94  C09F  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 25399  011C98  C0A0  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 25400  011C9C  C095  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 25401  011CA0  C096  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 25402  011CA4  C097  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 25403  011CA8  C098  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 25404  011CAC  EC8D  F0B1         	call	i2__div_to_l_	;wreg free
 25405  011CB0  C001  F099         	movff	?i2__div_to_l_,i2printf@val
 25406  011CB4  C002  F09A         	movff	?i2__div_to_l_+1,i2printf@val+1
 25407  011CB8  C003  F09B         	movff	?i2__div_to_l_+2,i2printf@val+2
 25408  011CBC  C004  F09C         	movff	?i2__div_to_l_+3,i2printf@val+3
 25409                           
 25410                           ;doprnt.c: 1129: fval = 0.0;
 25411  011CC0  0E00               	movlw	0
 25412  011CC2  0100               	movlb	0	; () banked
 25413  011CC4  6F9D               	movwf	i2printf@fval& (0+255),b
 25414  011CC6  0E00               	movlw	0
 25415  011CC8  6F9E               	movwf	(i2printf@fval+1)& (0+255),b
 25416  011CCA  0E00               	movlw	0
 25417  011CCC  6F9F               	movwf	(i2printf@fval+2)& (0+255),b
 25418  011CCE  0E00               	movlw	0
 25419  011CD0  6FA0               	movwf	(i2printf@fval+3)& (0+255),b
 25420                           
 25421                           ;doprnt.c: 1130: } else {
 25422  011CD2  D03C               	goto	i2l1398
 25423  011CD4                     i2l1389:
 25424                           
 25425                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25426                           
 25427                           ; BSR set to: 0
 25428  011CD4  C09D  F049         	movff	i2printf@fval,i2___fltol@f1
 25429  011CD8  C09E  F04A         	movff	i2printf@fval+1,i2___fltol@f1+1
 25430  011CDC  C09F  F04B         	movff	i2printf@fval+2,i2___fltol@f1+2
 25431  011CE0  C0A0  F04C         	movff	i2printf@fval+3,i2___fltol@f1+3
 25432  011CE4  EC48  F0B5         	call	i2___fltol	;wreg free
 25433  011CE8  C049  F099         	movff	?i2___fltol,i2printf@val
 25434  011CEC  C04A  F09A         	movff	?i2___fltol+1,i2printf@val+1
 25435  011CF0  C04B  F09B         	movff	?i2___fltol+2,i2printf@val+2
 25436  011CF4  C04C  F09C         	movff	?i2___fltol+3,i2printf@val+3
 25437                           
 25438                           ;doprnt.c: 1132: fval -= (double)val;
 25439  011CF8  C09D  F076         	movff	i2printf@fval,i2___flsub@b
 25440  011CFC  C09E  F077         	movff	i2printf@fval+1,i2___flsub@b+1
 25441  011D00  C09F  F078         	movff	i2printf@fval+2,i2___flsub@b+2
 25442  011D04  C0A0  F079         	movff	i2printf@fval+3,i2___flsub@b+3
 25443  011D08  C099  F005         	movff	i2printf@val,i2___xxtofl@val
 25444  011D0C  C09A  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 25445  011D10  C09B  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 25446  011D14  C09C  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 25447  011D18  0E00               	movlw	0
 25448  011D1A  EC1D  F0AF         	call	i2___xxtofl
 25449  011D1E  C005  F07A         	movff	?i2___xxtofl,i2___flsub@a
 25450  011D22  C006  F07B         	movff	?i2___xxtofl+1,i2___flsub@a+1
 25451  011D26  C007  F07C         	movff	?i2___xxtofl+2,i2___flsub@a+2
 25452  011D2A  C008  F07D         	movff	?i2___xxtofl+3,i2___flsub@a+3
 25453  011D2E  EC81  F0BD         	call	i2___flsub	;wreg free
 25454  011D32  C076  F09D         	movff	?i2___flsub,i2printf@fval
 25455  011D36  C077  F09E         	movff	?i2___flsub+1,i2printf@fval+1
 25456  011D3A  C078  F09F         	movff	?i2___flsub+2,i2printf@fval+2
 25457  011D3E  C079  F0A0         	movff	?i2___flsub+3,i2printf@fval+3
 25458                           
 25459                           ;doprnt.c: 1133: exp = 0;
 25460  011D42  0E00               	movlw	0
 25461  011D44  0100               	movlb	0	; () banked
 25462  011D46  6F94               	movwf	(i2printf@exp+1)& (0+255),b
 25463  011D48  0E00               	movlw	0
 25464  011D4A  6F93               	movwf	i2printf@exp& (0+255),b
 25465  011D4C                     i2l1398:
 25466                           
 25467                           ; BSR set to: 0
 25468                           ;doprnt.c: 1134: }
 25469                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25470                           
 25471                           ; BSR set to: 0
 25472  011D4C  0E01               	movlw	1
 25473  011D4E  6FA3               	movwf	i2printf@c& (0+255),b
 25474  011D50                     i2l13546:
 25475                           
 25476                           ; BSR set to: 0
 25477  011D50  0E0A               	movlw	10
 25478  011D52  19A3               	xorwf	i2printf@c& (0+255),w,b
 25479  011D54  B4D8               	btfsc	status,2,c
 25480  011D56  D01B               	goto	i2u1632_40
 25481                           
 25482                           ; BSR set to: 0
 25483                           ;doprnt.c: 1137: if(val < dpowers[c])
 25484                           
 25485                           ; BSR set to: 0
 25486                           
 25487                           ; BSR set to: 0
 25488  011D58  51A3               	movf	i2printf@c& (0+255),w,b
 25489  011D5A  0D04               	mullw	4
 25490  011D5C  0E25               	movlw	low _dpowers
 25491  011D5E  24F3               	addwf	prodl,w,c
 25492  011D60  6EF6               	movwf	tblptrl,c
 25493  011D62  0EEC               	movlw	high _dpowers
 25494  011D64  20F4               	addwfc	prodh,w,c
 25495  011D66  6EF7               	movwf	tblptrh,c
 25496  011D68                     	if	1	;There are 3 active tblptr bytes
 25497  011D68  6AF8               	clrf	tblptru,c
 25498  011D6A  0E00               	movlw	low (__mediumconst shr (0+16))
 25499  011D6C  22F8               	addwfc	tblptru,f,c
 25500  011D6E                     	endif
 25501  011D6E  0009               	tblrd		*+
 25502  011D70  50F5               	movf	tablat,w,c
 25503  011D72  5D99               	subwf	i2printf@val& (0+255),w,b
 25504  011D74  0009               	tblrd		*+
 25505  011D76  50F5               	movf	tablat,w,c
 25506  011D78  599A               	subwfb	(i2printf@val+1)& (0+255),w,b
 25507  011D7A  0009               	tblrd		*+
 25508  011D7C  50F5               	movf	tablat,w,c
 25509  011D7E  599B               	subwfb	(i2printf@val+2)& (0+255),w,b
 25510  011D80  0009               	tblrd		*+
 25511  011D82  50F5               	movf	tablat,w,c
 25512  011D84  599C               	subwfb	(i2printf@val+3)& (0+255),w,b
 25513  011D86  A0D8               	btfss	status,0,c
 25514  011D88  D002               	goto	i2u1632_40
 25515                           
 25516                           ; BSR set to: 0
 25517                           
 25518                           ; BSR set to: 0
 25519                           
 25520                           ; BSR set to: 0
 25521                           ;doprnt.c: 1138: break;
 25522  011D8A  2BA3               	incf	i2printf@c& (0+255),f,b
 25523  011D8C  D7E1               	goto	i2l13546
 25524  011D8E                     i2u1632_40:
 25525                           
 25526                           ; BSR set to: 0
 25527                           ;doprnt.c: 1175: {
 25528                           ;doprnt.c: 1188: if(flag & 0x03)
 25529                           
 25530                           ; BSR set to: 0
 25531  011D8E  0E03               	movlw	3
 25532  011D90  1591               	andwf	i2printf@flag& (0+255),w,b
 25533  011D92  6F80               	movwf	??i2_printf& (0+255),b
 25534  011D94  0E00               	movlw	0
 25535  011D96  1592               	andwf	(i2printf@flag+1)& (0+255),w,b
 25536  011D98  6F81               	movwf	(??i2_printf+1)& (0+255),b
 25537  011D9A  5180               	movf	??i2_printf& (0+255),w,b
 25538  011D9C  1181               	iorwf	(??i2_printf+1)& (0+255),w,b
 25539  011D9E  B4D8               	btfsc	status,2,c
 25540  011DA0  D04D               	goto	i2l1403
 25541                           
 25542                           ; BSR set to: 0
 25543                           ;doprnt.c: 1190: (putch('-') );
 25544  011DA2  0E2D               	movlw	45
 25545  011DA4  ECAA  F0C0         	call	i2_putch
 25546                           
 25547                           ;doprnt.c: 1195: }
 25548                           ;doprnt.c: 1196: while(c--) {
 25549  011DA8  D049               	goto	i2l1403
 25550  011DAA                     
 25551                           ;doprnt.c: 1200: {
 25552                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 25553  011DAA  C099  F001         	movff	i2printf@val,i2___lldiv@dividend
 25554  011DAE  C09A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25555  011DB2  C09B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25556  011DB6  C09C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25557  011DBA  0100               	movlb	0	; () banked
 25558  011DBC  51A3               	movf	i2printf@c& (0+255),w,b
 25559  011DBE  0D04               	mullw	4
 25560  011DC0  0E25               	movlw	low _dpowers
 25561  011DC2  24F3               	addwf	prodl,w,c
 25562  011DC4  6EF6               	movwf	tblptrl,c
 25563  011DC6  0EEC               	movlw	high _dpowers
 25564  011DC8  20F4               	addwfc	prodh,w,c
 25565  011DCA  6EF7               	movwf	tblptrh,c
 25566  011DCC                     	if	1	;There are 3 active tblptr bytes
 25567  011DCC  6AF8               	clrf	tblptru,c
 25568  011DCE  0E00               	movlw	low (__mediumconst shr (0+16))
 25569  011DD0  22F8               	addwfc	tblptru,f,c
 25570  011DD2                     	endif
 25571  011DD2  0009               	tblrd		*+
 25572  011DD4  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25573  011DD8  0009               	tblrd		*+
 25574  011DDA  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25575  011DDE  0009               	tblrd		*+
 25576  011DE0  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25577  011DE4  000A               	tblrd		*-
 25578  011DE6  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25579  011DEA  ECE6  F0B8         	call	i2___lldiv	;wreg free
 25580  011DEE  C001  F095         	movff	?i2___lldiv,i2printf@tmpval
 25581  011DF2  C002  F096         	movff	?i2___lldiv+1,i2printf@tmpval+1
 25582  011DF6  C003  F097         	movff	?i2___lldiv+2,i2printf@tmpval+2
 25583  011DFA  C004  F098         	movff	?i2___lldiv+3,i2printf@tmpval+3
 25584                           
 25585                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25586  011DFE  C095  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 25587  011E02  C096  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 25588  011E06  C097  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 25589  011E0A  C098  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 25590  011E0E  0E0A               	movlw	10
 25591  011E10  6E12               	movwf	i2___llmod@divisor,c
 25592  011E12  0E00               	movlw	0
 25593  011E14  6E13               	movwf	i2___llmod@divisor+1,c
 25594  011E16  0E00               	movlw	0
 25595  011E18  6E14               	movwf	i2___llmod@divisor+2,c
 25596  011E1A  0E00               	movlw	0
 25597  011E1C  6E15               	movwf	i2___llmod@divisor+3,c
 25598  011E1E  EC67  F0BB         	call	i2___llmod	;wreg free
 25599  011E22  C00E  F095         	movff	?i2___llmod,i2printf@tmpval
 25600  011E26  C00F  F096         	movff	?i2___llmod+1,i2printf@tmpval+1
 25601  011E2A  C010  F097         	movff	?i2___llmod+2,i2printf@tmpval+2
 25602  011E2E  C011  F098         	movff	?i2___llmod+3,i2printf@tmpval+3
 25603                           
 25604                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 25605  011E32  0100               	movlb	0	; () banked
 25606  011E34  5195               	movf	i2printf@tmpval& (0+255),w,b
 25607  011E36  0F30               	addlw	48
 25608  011E38  ECAA  F0C0         	call	i2_putch
 25609  011E3C                     i2l1403:
 25610  011E3C  0100               	movlb	0	; () banked
 25611  011E3E  07A3               	decf	i2printf@c& (0+255),f,b
 25612  011E40  29A3               	incf	i2printf@c& (0+255),w,b
 25613  011E42  B4D8               	btfsc	status,2,c
 25614  011E44  D008               	goto	i2l1406
 25615  011E46  D7B1               	goto	i2l1404
 25616  011E48                     i2l13570:
 25617                           
 25618                           ; BSR set to: 0
 25619                           ;doprnt.c: 1208: (putch('0') );
 25620  011E48  0E30               	movlw	48
 25621  011E4A  ECAA  F0C0         	call	i2_putch
 25622                           
 25623                           ;doprnt.c: 1209: exp--;
 25624  011E4E  0100               	movlb	0	; () banked
 25625  011E50  0793               	decf	i2printf@exp& (0+255),f,b
 25626  011E52  A0D8               	btfss	status,0,c
 25627  011E54  0794               	decf	(i2printf@exp+1)& (0+255),f,b
 25628  011E56                     i2l1406:
 25629                           
 25630                           ; BSR set to: 0
 25631                           
 25632                           ; BSR set to: 0
 25633  011E56  BF94               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25634  011E58  D005               	goto	i2u1635_40
 25635  011E5A  5194               	movf	(i2printf@exp+1)& (0+255),w,b
 25636  011E5C  E1F5               	bnz	i2l13570
 25637  011E5E  0593               	decf	i2printf@exp& (0+255),w,b
 25638  011E60  B0D8               	btfsc	status,0,c
 25639  011E62  D7F2               	goto	i2l1407
 25640  011E64                     i2u1635_40:
 25641                           
 25642                           ; BSR set to: 0
 25643                           ;doprnt.c: 1210: }
 25644                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25645                           
 25646                           ; BSR set to: 0
 25647  011E64  BFA2               	btfsc	(i2printf@prec+1)& (0+255),7,b
 25648  011E66  D009               	goto	i2l1409
 25649  011E68  51A2               	movf	(i2printf@prec+1)& (0+255),w,b
 25650  011E6A  E104               	bnz	i2u1636_40
 25651  011E6C  0E09               	movlw	9
 25652  011E6E  5DA1               	subwf	i2printf@prec& (0+255),w,b
 25653  011E70  A0D8               	btfss	status,0,c
 25654  011E72  D003               	goto	i2l1409
 25655  011E74                     i2u1636_40:
 25656                           
 25657                           ; BSR set to: 0
 25658                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25659  011E74  0E08               	movlw	8
 25660  011E76  6FA3               	movwf	i2printf@c& (0+255),b
 25661  011E78  D002               	goto	i2l1410
 25662  011E7A                     i2l1409:
 25663                           
 25664                           ; BSR set to: 0
 25665                           ;doprnt.c: 1213: else
 25666                           ;doprnt.c: 1214: c = prec;
 25667  011E7A  C0A1  F0A3         	movff	i2printf@prec,i2printf@c
 25668  011E7E                     i2l1410:
 25669                           
 25670                           ; BSR set to: 0
 25671                           ;doprnt.c: 1215: prec -= c;
 25672                           
 25673                           ; BSR set to: 0
 25674  011E7E  51A3               	movf	i2printf@c& (0+255),w,b
 25675  011E80  5FA1               	subwf	i2printf@prec& (0+255),f,b
 25676  011E82  0E00               	movlw	0
 25677  011E84  BFA3               	btfsc	i2printf@c& (0+255),7,b
 25678  011E86  0EFF               	movlw	255
 25679  011E88  5BA2               	subwfb	(i2printf@prec+1)& (0+255),f,b
 25680                           
 25681                           ; BSR set to: 0
 25682                           ;doprnt.c: 1219: if(c)
 25683  011E8A  51A3               	movf	i2printf@c& (0+255),w,b
 25684  011E8C  B4D8               	btfsc	status,2,c
 25685  011E8E  D003               	goto	i2l1411
 25686                           
 25687                           ; BSR set to: 0
 25688                           ;doprnt.c: 1221: (putch('.') );
 25689  011E90  0E2E               	movlw	46
 25690  011E92  ECAA  F0C0         	call	i2_putch
 25691  011E96                     i2l1411:
 25692                           
 25693                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25694  011E96  0100               	movlb	0	; () banked
 25695  011E98  51A3               	movf	i2printf@c& (0+255),w,b
 25696  011E9A  ECDE  F097         	call	i2_scale
 25697  011E9E  C049  F086         	movff	?i2_scale,i2_printf$4064
 25698  011EA2  C04A  F087         	movff	?i2_scale+1,i2_printf$4064+1
 25699  011EA6  C04B  F088         	movff	?i2_scale+2,i2_printf$4064+2
 25700  011EAA  C04C  F089         	movff	?i2_scale+3,i2_printf$4064+3
 25701                           
 25702                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25703  011EAE  C09D  F034         	movff	i2printf@fval,i2___flmul@a
 25704  011EB2  C09E  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 25705  011EB6  C09F  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 25706  011EBA  C0A0  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 25707  011EBE  C086  F030         	movff	i2_printf$4064,i2___flmul@b
 25708  011EC2  C087  F031         	movff	i2_printf$4064+1,i2___flmul@b+1
 25709  011EC6  C088  F032         	movff	i2_printf$4064+2,i2___flmul@b+2
 25710  011ECA  C089  F033         	movff	i2_printf$4064+3,i2___flmul@b+3
 25711  011ECE  EC7B  F09D         	call	i2___flmul	;wreg free
 25712  011ED2  C030  F049         	movff	?i2___flmul,i2___fltol@f1
 25713  011ED6  C031  F04A         	movff	?i2___flmul+1,i2___fltol@f1+1
 25714  011EDA  C032  F04B         	movff	?i2___flmul+2,i2___fltol@f1+2
 25715  011EDE  C033  F04C         	movff	?i2___flmul+3,i2___fltol@f1+3
 25716  011EE2  EC48  F0B5         	call	i2___fltol	;wreg free
 25717  011EE6  C049  F099         	movff	?i2___fltol,i2printf@val
 25718  011EEA  C04A  F09A         	movff	?i2___fltol+1,i2printf@val+1
 25719  011EEE  C04B  F09B         	movff	?i2___fltol+2,i2printf@val+2
 25720  011EF2  C04C  F09C         	movff	?i2___fltol+3,i2printf@val+3
 25721                           
 25722                           ;doprnt.c: 1228: while(c--) {
 25723  011EF6  D073               	goto	i2l1412
 25724  011EF8                     
 25725                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 25726  011EF8  C099  F001         	movff	i2printf@val,i2___lldiv@dividend
 25727  011EFC  C09A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25728  011F00  C09B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25729  011F04  C09C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25730  011F08  0100               	movlb	0	; () banked
 25731  011F0A  51A3               	movf	i2printf@c& (0+255),w,b
 25732  011F0C  0D04               	mullw	4
 25733  011F0E  0E25               	movlw	low _dpowers
 25734  011F10  24F3               	addwf	prodl,w,c
 25735  011F12  6EF6               	movwf	tblptrl,c
 25736  011F14  0EEC               	movlw	high _dpowers
 25737  011F16  20F4               	addwfc	prodh,w,c
 25738  011F18  6EF7               	movwf	tblptrh,c
 25739  011F1A                     	if	1	;There are 3 active tblptr bytes
 25740  011F1A  6AF8               	clrf	tblptru,c
 25741  011F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 25742  011F1E  22F8               	addwfc	tblptru,f,c
 25743  011F20                     	endif
 25744  011F20  0009               	tblrd		*+
 25745  011F22  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25746  011F26  0009               	tblrd		*+
 25747  011F28  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25748  011F2C  0009               	tblrd		*+
 25749  011F2E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25750  011F32  000A               	tblrd		*-
 25751  011F34  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25752  011F38  ECE6  F0B8         	call	i2___lldiv	;wreg free
 25753  011F3C  C001  F095         	movff	?i2___lldiv,i2printf@tmpval
 25754  011F40  C002  F096         	movff	?i2___lldiv+1,i2printf@tmpval+1
 25755  011F44  C003  F097         	movff	?i2___lldiv+2,i2printf@tmpval+2
 25756  011F48  C004  F098         	movff	?i2___lldiv+3,i2printf@tmpval+3
 25757                           
 25758                           ;doprnt.c: 1230: tmpval.vd %= 10;
 25759  011F4C  C095  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 25760  011F50  C096  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 25761  011F54  C097  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 25762  011F58  C098  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 25763  011F5C  0E0A               	movlw	10
 25764  011F5E  6E12               	movwf	i2___llmod@divisor,c
 25765  011F60  0E00               	movlw	0
 25766  011F62  6E13               	movwf	i2___llmod@divisor+1,c
 25767  011F64  0E00               	movlw	0
 25768  011F66  6E14               	movwf	i2___llmod@divisor+2,c
 25769  011F68  0E00               	movlw	0
 25770  011F6A  6E15               	movwf	i2___llmod@divisor+3,c
 25771  011F6C  EC67  F0BB         	call	i2___llmod	;wreg free
 25772  011F70  C00E  F095         	movff	?i2___llmod,i2printf@tmpval
 25773  011F74  C00F  F096         	movff	?i2___llmod+1,i2printf@tmpval+1
 25774  011F78  C010  F097         	movff	?i2___llmod+2,i2printf@tmpval+2
 25775  011F7C  C011  F098         	movff	?i2___llmod+3,i2printf@tmpval+3
 25776                           
 25777                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 25778  011F80  0100               	movlb	0	; () banked
 25779  011F82  5195               	movf	i2printf@tmpval& (0+255),w,b
 25780  011F84  0F30               	addlw	48
 25781  011F86  ECAA  F0C0         	call	i2_putch
 25782                           
 25783                           ;doprnt.c: 1232: val %= dpowers[c];
 25784  011F8A  C099  F00E         	movff	i2printf@val,i2___llmod@dividend
 25785  011F8E  C09A  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 25786  011F92  C09B  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 25787  011F96  C09C  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 25788  011F9A  0100               	movlb	0	; () banked
 25789  011F9C  51A3               	movf	i2printf@c& (0+255),w,b
 25790  011F9E  0D04               	mullw	4
 25791  011FA0  0E25               	movlw	low _dpowers
 25792  011FA2  24F3               	addwf	prodl,w,c
 25793  011FA4  6EF6               	movwf	tblptrl,c
 25794  011FA6  0EEC               	movlw	high _dpowers
 25795  011FA8  20F4               	addwfc	prodh,w,c
 25796  011FAA  6EF7               	movwf	tblptrh,c
 25797  011FAC                     	if	1	;There are 3 active tblptr bytes
 25798  011FAC  6AF8               	clrf	tblptru,c
 25799  011FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 25800  011FB0  22F8               	addwfc	tblptru,f,c
 25801  011FB2                     	endif
 25802  011FB2  0009               	tblrd		*+
 25803  011FB4  CFF5 F012          	movff	tablat,i2___llmod@divisor
 25804  011FB8  0009               	tblrd		*+
 25805  011FBA  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 25806  011FBE  0009               	tblrd		*+
 25807  011FC0  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 25808  011FC4  000A               	tblrd		*-
 25809  011FC6  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 25810  011FCA  EC67  F0BB         	call	i2___llmod	;wreg free
 25811  011FCE  C00E  F099         	movff	?i2___llmod,i2printf@val
 25812  011FD2  C00F  F09A         	movff	?i2___llmod+1,i2printf@val+1
 25813  011FD6  C010  F09B         	movff	?i2___llmod+2,i2printf@val+2
 25814  011FDA  C011  F09C         	movff	?i2___llmod+3,i2printf@val+3
 25815  011FDE                     i2l1412:
 25816  011FDE  0100               	movlb	0	; () banked
 25817  011FE0  07A3               	decf	i2printf@c& (0+255),f,b
 25818  011FE2  29A3               	incf	i2printf@c& (0+255),w,b
 25819  011FE4  B4D8               	btfsc	status,2,c
 25820  011FE6  D008               	goto	i2l1415
 25821  011FE8  D787               	goto	i2l1413
 25822  011FEA                     
 25823                           ; BSR set to: 0
 25824                           ;doprnt.c: 1236: (putch('0') );
 25825                           
 25826                           ; BSR set to: 0
 25827  011FEA  0E30               	movlw	48
 25828  011FEC  ECAA  F0C0         	call	i2_putch
 25829                           
 25830                           ;doprnt.c: 1237: prec--;
 25831  011FF0  0100               	movlb	0	; () banked
 25832  011FF2  07A1               	decf	i2printf@prec& (0+255),f,b
 25833  011FF4  A0D8               	btfss	status,0,c
 25834  011FF6  07A2               	decf	(i2printf@prec+1)& (0+255),f,b
 25835  011FF8                     i2l1415:
 25836                           
 25837                           ; BSR set to: 0
 25838                           
 25839                           ; BSR set to: 0
 25840  011FF8  51A1               	movf	i2printf@prec& (0+255),w,b
 25841  011FFA  11A2               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25842  011FFC  B4D8               	btfsc	status,2,c
 25843  011FFE  D156               	goto	i2u1653_40
 25844  012000  D7F4               	goto	i2l1416
 25845  012002                     i2l1380:
 25846                           
 25847                           ; BSR set to: 0
 25848                           ;doprnt.c: 1246: }
 25849                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 25850                           
 25851                           ; BSR set to: 0
 25852  012002  0EC0               	movlw	192
 25853  012004  1591               	andwf	i2printf@flag& (0+255),w,b
 25854  012006  6F80               	movwf	??i2_printf& (0+255),b
 25855  012008  0E00               	movlw	0
 25856  01200A  1592               	andwf	(i2printf@flag+1)& (0+255),w,b
 25857  01200C  6F81               	movwf	(??i2_printf+1)& (0+255),b
 25858  01200E  5180               	movf	??i2_printf& (0+255),w,b
 25859  012010  1181               	iorwf	(??i2_printf+1)& (0+255),w,b
 25860  012012  A4D8               	btfss	status,2,c
 25861  012014  D01E               	goto	i2l1418
 25862                           
 25863                           ; BSR set to: 0
 25864                           ;doprnt.c: 1253: {
 25865                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 25866  012016  C08F  FFD9         	movff	i2printf@ap,fsr2l
 25867  01201A  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 25868  01201E  CFDE F099          	movff	postinc2,i2printf@val
 25869  012022  CFDD F09A          	movff	postdec2,i2printf@val+1
 25870  012026  0E00               	movlw	0
 25871  012028  BF9A               	btfsc	(i2printf@val+1)& (0+255),7,b
 25872  01202A  0EFF               	movlw	-1
 25873  01202C  6F9B               	movwf	(i2printf@val+2)& (0+255),b
 25874  01202E  6F9C               	movwf	(i2printf@val+3)& (0+255),b
 25875                           
 25876                           ; BSR set to: 0
 25877  012030  0E02               	movlw	2
 25878  012032  278F               	addwf	i2printf@ap& (0+255),f,b
 25879  012034  0E00               	movlw	0
 25880  012036  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25881                           
 25882                           ; BSR set to: 0
 25883                           ;doprnt.c: 1261: if((long)val < 0) {
 25884  012038  AF9C               	btfss	(i2printf@val+3)& (0+255),7,b
 25885  01203A  D01D               	goto	i2l1420
 25886                           
 25887                           ; BSR set to: 0
 25888                           ;doprnt.c: 1262: flag |= 0x03;
 25889  01203C  0E03               	movlw	3
 25890  01203E  1391               	iorwf	i2printf@flag& (0+255),f,b
 25891                           
 25892                           ; BSR set to: 0
 25893                           ;doprnt.c: 1263: val = -val;
 25894  012040  1F9C               	comf	(i2printf@val+3)& (0+255),f,b
 25895  012042  1F9B               	comf	(i2printf@val+2)& (0+255),f,b
 25896  012044  1F9A               	comf	(i2printf@val+1)& (0+255),f,b
 25897  012046  6D99               	negf	i2printf@val& (0+255),b
 25898  012048  0E00               	movlw	0
 25899  01204A  239A               	addwfc	(i2printf@val+1)& (0+255),f,b
 25900  01204C  239B               	addwfc	(i2printf@val+2)& (0+255),f,b
 25901  01204E  239C               	addwfc	(i2printf@val+3)& (0+255),f,b
 25902                           
 25903                           ; BSR set to: 0
 25904                           ;doprnt.c: 1264: }
 25905                           ;doprnt.c: 1266: }
 25906  012050  D012               	goto	i2l1420
 25907  012052                     i2l1418:
 25908                           
 25909                           ; BSR set to: 0
 25910                           ;doprnt.c: 1268: else
 25911                           ;doprnt.c: 1273: {
 25912                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25913                           
 25914                           ; BSR set to: 0
 25915  012052  C08F  FFD9         	movff	i2printf@ap,fsr2l
 25916  012056  C090  FFDA         	movff	i2printf@ap+1,fsr2h
 25917  01205A  CFDE F080          	movff	postinc2,??i2_printf
 25918  01205E  CFDD F081          	movff	postdec2,??i2_printf+1
 25919  012062  C080  F099         	movff	??i2_printf,i2printf@val
 25920  012066  C081  F09A         	movff	??i2_printf+1,i2printf@val+1
 25921  01206A  6B9B               	clrf	(i2printf@val+2)& (0+255),b
 25922  01206C  6B9C               	clrf	(i2printf@val+3)& (0+255),b
 25923                           
 25924                           ; BSR set to: 0
 25925  01206E  0E02               	movlw	2
 25926  012070  278F               	addwf	i2printf@ap& (0+255),f,b
 25927  012072  0E00               	movlw	0
 25928  012074  2390               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25929  012076                     i2l1420:
 25930                           
 25931                           ; BSR set to: 0
 25932                           ;doprnt.c: 1287: }
 25933                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25934                           
 25935                           ; BSR set to: 0
 25936  012076  51A1               	movf	i2printf@prec& (0+255),w,b
 25937  012078  11A2               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25938  01207A  A4D8               	btfss	status,2,c
 25939  01207C  D04B               	goto	i2l1422
 25940                           
 25941                           ; BSR set to: 0
 25942  01207E  5199               	movf	i2printf@val& (0+255),w,b
 25943  012080  119A               	iorwf	(i2printf@val+1)& (0+255),w,b
 25944  012082  119B               	iorwf	(i2printf@val+2)& (0+255),w,b
 25945  012084  119C               	iorwf	(i2printf@val+3)& (0+255),w,b
 25946  012086  A4D8               	btfss	status,2,c
 25947  012088  D045               	goto	i2l1422
 25948                           
 25949                           ; BSR set to: 0
 25950                           ;doprnt.c: 1291: prec++;
 25951  01208A  4BA1               	infsnz	i2printf@prec& (0+255),f,b
 25952  01208C  2BA2               	incf	(i2printf@prec+1)& (0+255),f,b
 25953                           
 25954                           ; BSR set to: 0
 25955                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25956  01208E  D042               	goto	i2l1422
 25957  012090                     
 25958                           ; BSR set to: 0
 25959                           ;doprnt.c: 1302: case 0xC0:
 25960                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25961                           
 25962                           ; BSR set to: 0
 25963                           
 25964                           ; BSR set to: 0
 25965  012090  0E01               	movlw	1
 25966  012092  6FA3               	movwf	i2printf@c& (0+255),b
 25967  012094                     i2l13630:
 25968                           
 25969                           ; BSR set to: 0
 25970  012094  0E0A               	movlw	10
 25971  012096  19A3               	xorwf	i2printf@c& (0+255),w,b
 25972  012098  B4D8               	btfsc	status,2,c
 25973  01209A  D047               	goto	i2l1428
 25974                           
 25975                           ; BSR set to: 0
 25976                           ;doprnt.c: 1306: if(val < dpowers[c])
 25977                           
 25978                           ; BSR set to: 0
 25979                           
 25980                           ; BSR set to: 0
 25981  01209C  51A3               	movf	i2printf@c& (0+255),w,b
 25982  01209E  0D04               	mullw	4
 25983  0120A0  0E25               	movlw	low _dpowers
 25984  0120A2  24F3               	addwf	prodl,w,c
 25985  0120A4  6EF6               	movwf	tblptrl,c
 25986  0120A6  0EEC               	movlw	high _dpowers
 25987  0120A8  20F4               	addwfc	prodh,w,c
 25988  0120AA  6EF7               	movwf	tblptrh,c
 25989  0120AC                     	if	1	;There are 3 active tblptr bytes
 25990  0120AC  6AF8               	clrf	tblptru,c
 25991  0120AE  0E00               	movlw	low (__mediumconst shr (0+16))
 25992  0120B0  22F8               	addwfc	tblptru,f,c
 25993  0120B2                     	endif
 25994  0120B2  0009               	tblrd		*+
 25995  0120B4  50F5               	movf	tablat,w,c
 25996  0120B6  5D99               	subwf	i2printf@val& (0+255),w,b
 25997  0120B8  0009               	tblrd		*+
 25998  0120BA  50F5               	movf	tablat,w,c
 25999  0120BC  599A               	subwfb	(i2printf@val+1)& (0+255),w,b
 26000  0120BE  0009               	tblrd		*+
 26001  0120C0  50F5               	movf	tablat,w,c
 26002  0120C2  599B               	subwfb	(i2printf@val+2)& (0+255),w,b
 26003  0120C4  0009               	tblrd		*+
 26004  0120C6  50F5               	movf	tablat,w,c
 26005  0120C8  599C               	subwfb	(i2printf@val+3)& (0+255),w,b
 26006  0120CA  A0D8               	btfss	status,0,c
 26007  0120CC  D02E               	goto	i2l1428
 26008                           
 26009                           ; BSR set to: 0
 26010                           
 26011                           ; BSR set to: 0
 26012                           
 26013                           ; BSR set to: 0
 26014                           ;doprnt.c: 1307: break;
 26015  0120CE  2BA3               	incf	i2printf@c& (0+255),f,b
 26016  0120D0  D7E1               	goto	i2l13630
 26017  0120D2                     
 26018                           ; BSR set to: 0
 26019                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 26020                           
 26021                           ; BSR set to: 0
 26022  0120D2  0E01               	movlw	1
 26023  0120D4  6FA3               	movwf	i2printf@c& (0+255),b
 26024  0120D6                     i2l13644:
 26025                           
 26026                           ; BSR set to: 0
 26027  0120D6  0E08               	movlw	8
 26028  0120D8  19A3               	xorwf	i2printf@c& (0+255),w,b
 26029  0120DA  B4D8               	btfsc	status,2,c
 26030  0120DC  D026               	goto	i2l1428
 26031                           
 26032                           ; BSR set to: 0
 26033                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26034                           
 26035                           ; BSR set to: 0
 26036                           
 26037                           ; BSR set to: 0
 26038  0120DE  51A3               	movf	i2printf@c& (0+255),w,b
 26039  0120E0  0D04               	mullw	4
 26040  0120E2  0E4D               	movlw	low _hexpowers
 26041  0120E4  24F3               	addwf	prodl,w,c
 26042  0120E6  6EF6               	movwf	tblptrl,c
 26043  0120E8  0EEC               	movlw	high _hexpowers
 26044  0120EA  20F4               	addwfc	prodh,w,c
 26045  0120EC  6EF7               	movwf	tblptrh,c
 26046  0120EE                     	if	1	;There are 3 active tblptr bytes
 26047  0120EE  6AF8               	clrf	tblptru,c
 26048  0120F0  0E00               	movlw	low (__mediumconst shr (0+16))
 26049  0120F2  22F8               	addwfc	tblptru,f,c
 26050  0120F4                     	endif
 26051  0120F4  0009               	tblrd		*+
 26052  0120F6  50F5               	movf	tablat,w,c
 26053  0120F8  5D99               	subwf	i2printf@val& (0+255),w,b
 26054  0120FA  0009               	tblrd		*+
 26055  0120FC  50F5               	movf	tablat,w,c
 26056  0120FE  599A               	subwfb	(i2printf@val+1)& (0+255),w,b
 26057  012100  0009               	tblrd		*+
 26058  012102  50F5               	movf	tablat,w,c
 26059  012104  599B               	subwfb	(i2printf@val+2)& (0+255),w,b
 26060  012106  0009               	tblrd		*+
 26061  012108  50F5               	movf	tablat,w,c
 26062  01210A  599C               	subwfb	(i2printf@val+3)& (0+255),w,b
 26063  01210C  A0D8               	btfss	status,0,c
 26064  01210E  D00D               	goto	i2l1428
 26065                           
 26066                           ; BSR set to: 0
 26067                           
 26068                           ; BSR set to: 0
 26069                           
 26070                           ; BSR set to: 0
 26071                           ;doprnt.c: 1318: break;
 26072  012110  2BA3               	incf	i2printf@c& (0+255),f,b
 26073  012112  D7E1               	goto	i2l13644
 26074  012114                     i2l1422:
 26075                           
 26076                           ; BSR set to: 0
 26077                           
 26078                           ; BSR set to: 0
 26079  012114  5191               	movf	i2printf@flag& (0+255),w,b
 26080  012116  0BC0               	andlw	192
 26081                           
 26082                           ; Switch size 1, requested type "space"
 26083                           ; Number of cases is 3, Range of values is 0 to 192
 26084                           ; switch strategies available:
 26085                           ; Name         Instructions Cycles
 26086                           ; simple_byte           10     6 (average)
 26087                           ;	Chosen strategy is simple_byte
 26088  012118  0A00               	xorlw	0	; case 0
 26089  01211A  B4D8               	btfsc	status,2,c
 26090  01211C  D7B9               	goto	i2l1423
 26091  01211E  0A80               	xorlw	128	; case 128
 26092  012120  B4D8               	btfsc	status,2,c
 26093  012122  D7D7               	goto	i2l1429
 26094  012124  0A40               	xorlw	64	; case 192
 26095  012126  B4D8               	btfsc	status,2,c
 26096  012128  D7B3               	goto	i2l1423
 26097  01212A                     i2l1428:
 26098                           
 26099                           ; BSR set to: 0
 26100                           ;doprnt.c: 1339: if(c < prec)
 26101                           
 26102                           ; BSR set to: 0
 26103  01212A  0E80               	movlw	128
 26104  01212C  BFA3               	btfsc	i2printf@c& (0+255),7,b
 26105  01212E  0E7F               	movlw	127
 26106  012130  6F80               	movwf	??i2_printf& (0+255),b
 26107  012132  51A1               	movf	i2printf@prec& (0+255),w,b
 26108  012134  5DA3               	subwf	i2printf@c& (0+255),w,b
 26109  012136  51A2               	movf	(i2printf@prec+1)& (0+255),w,b
 26110  012138  0A80               	xorlw	128
 26111  01213A  5980               	subwfb	??i2_printf& (0+255),w,b
 26112  01213C  B0D8               	btfsc	status,0,c
 26113  01213E  D003               	goto	i2l1433
 26114                           
 26115                           ; BSR set to: 0
 26116                           ;doprnt.c: 1340: c = prec;
 26117  012140  C0A1  F0A3         	movff	i2printf@prec,i2printf@c
 26118  012144  D010               	goto	i2l1435
 26119  012146                     i2l1433:
 26120                           
 26121                           ; BSR set to: 0
 26122                           ;doprnt.c: 1341: else if(prec < c)
 26123                           
 26124                           ; BSR set to: 0
 26125  012146  51A2               	movf	(i2printf@prec+1)& (0+255),w,b
 26126  012148  0A80               	xorlw	128
 26127  01214A  6F80               	movwf	??i2_printf& (0+255),b
 26128  01214C  51A3               	movf	i2printf@c& (0+255),w,b
 26129  01214E  5DA1               	subwf	i2printf@prec& (0+255),w,b
 26130  012150  0E80               	movlw	128
 26131  012152  BFA3               	btfsc	i2printf@c& (0+255),7,b
 26132  012154  0E7F               	movlw	127
 26133  012156  5980               	subwfb	??i2_printf& (0+255),w,b
 26134  012158  B0D8               	btfsc	status,0,c
 26135  01215A  D005               	goto	i2l1435
 26136                           
 26137                           ; BSR set to: 0
 26138                           ;doprnt.c: 1342: prec = c;
 26139  01215C  51A3               	movf	i2printf@c& (0+255),w,b
 26140  01215E  6FA1               	movwf	i2printf@prec& (0+255),b
 26141  012160  6BA2               	clrf	(i2printf@prec+1)& (0+255),b
 26142  012162  BFA1               	btfsc	i2printf@prec& (0+255),7,b
 26143  012164  07A2               	decf	(i2printf@prec+1)& (0+255),f,b
 26144  012166                     i2l1435:
 26145                           
 26146                           ; BSR set to: 0
 26147                           ;doprnt.c: 1422: {
 26148                           ;doprnt.c: 1438: if(flag & 0x03)
 26149                           
 26150                           ; BSR set to: 0
 26151                           
 26152                           ; BSR set to: 0
 26153  012166  0E03               	movlw	3
 26154  012168  1591               	andwf	i2printf@flag& (0+255),w,b
 26155  01216A  6F80               	movwf	??i2_printf& (0+255),b
 26156  01216C  0E00               	movlw	0
 26157  01216E  1592               	andwf	(i2printf@flag+1)& (0+255),w,b
 26158  012170  6F81               	movwf	(??i2_printf+1)& (0+255),b
 26159  012172  5180               	movf	??i2_printf& (0+255),w,b
 26160  012174  1181               	iorwf	(??i2_printf+1)& (0+255),w,b
 26161  012176  B4D8               	btfsc	status,2,c
 26162  012178  D090               	goto	i2l1437
 26163                           
 26164                           ; BSR set to: 0
 26165                           ;doprnt.c: 1439: (putch('-') );
 26166  01217A  0E2D               	movlw	45
 26167  01217C  ECAA  F0C0         	call	i2_putch
 26168                           
 26169                           ;doprnt.c: 1469: }
 26170                           ;doprnt.c: 1474: while(prec--) {
 26171  012180  D08C               	goto	i2l1437
 26172  012182                     
 26173                           ;doprnt.c: 1486: case 0xC0:
 26174                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26175  012182  C0A1  F080         	movff	i2printf@prec,??i2_printf
 26176  012186  C0A2  F081         	movff	i2printf@prec+1,??i2_printf+1
 26177  01218A  0100               	movlb	0	; () banked
 26178  01218C  90D8               	bcf	status,0,c
 26179  01218E  3780               	rlcf	??i2_printf& (0+255),f,b
 26180  012190  3781               	rlcf	(??i2_printf+1)& (0+255),f,b
 26181  012192  90D8               	bcf	status,0,c
 26182  012194  3780               	rlcf	??i2_printf& (0+255),f,b
 26183  012196  3781               	rlcf	(??i2_printf+1)& (0+255),f,b
 26184  012198  0E25               	movlw	low _dpowers
 26185  01219A  2580               	addwf	??i2_printf& (0+255),w,b
 26186  01219C  6EF6               	movwf	tblptrl,c
 26187  01219E  0EEC               	movlw	high _dpowers
 26188  0121A0  2181               	addwfc	(??i2_printf+1)& (0+255),w,b
 26189  0121A2  6EF7               	movwf	tblptrh,c
 26190  0121A4                     	if	1	;There are 3 active tblptr bytes
 26191  0121A4  6AF8               	clrf	tblptru,c
 26192  0121A6  0E00               	movlw	low (__mediumconst shr (0+16))
 26193  0121A8  22F8               	addwfc	tblptru,f,c
 26194  0121AA                     	endif
 26195  0121AA  0009               	tblrd		*+
 26196  0121AC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26197  0121B0  0009               	tblrd		*+
 26198  0121B2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26199  0121B6  0009               	tblrd		*+
 26200  0121B8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26201  0121BC  000A               	tblrd		*-
 26202  0121BE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26203  0121C2  C099  F001         	movff	i2printf@val,i2___lldiv@dividend
 26204  0121C6  C09A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26205  0121CA  C09B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26206  0121CE  C09C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26207  0121D2  ECE6  F0B8         	call	i2___lldiv	;wreg free
 26208  0121D6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 26209  0121DA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 26210  0121DE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 26211  0121E2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 26212  0121E6  0E0A               	movlw	10
 26213  0121E8  6E12               	movwf	i2___llmod@divisor,c
 26214  0121EA  0E00               	movlw	0
 26215  0121EC  6E13               	movwf	i2___llmod@divisor+1,c
 26216  0121EE  0E00               	movlw	0
 26217  0121F0  6E14               	movwf	i2___llmod@divisor+2,c
 26218  0121F2  0E00               	movlw	0
 26219  0121F4  6E15               	movwf	i2___llmod@divisor+3,c
 26220  0121F6  EC67  F0BB         	call	i2___llmod	;wreg free
 26221  0121FA  500E               	movf	?i2___llmod,w,c
 26222  0121FC  0F30               	addlw	48
 26223  0121FE  0100               	movlb	0	; () banked
 26224  012200  6FA3               	movwf	i2printf@c& (0+255),b
 26225                           
 26226                           ;doprnt.c: 1491: break;
 26227  012202  D048               	goto	i2l1442
 26228  012204                     
 26229                           ; BSR set to: 0
 26230                           ;doprnt.c: 1499: {
 26231                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26232                           
 26233                           ; BSR set to: 0
 26234  012204  C099  F001         	movff	i2printf@val,i2___lldiv@dividend
 26235  012208  C09A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26236  01220C  C09B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26237  012210  C09C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26238  012214  C0A1  F080         	movff	i2printf@prec,??i2_printf
 26239  012218  C0A2  F081         	movff	i2printf@prec+1,??i2_printf+1
 26240  01221C  90D8               	bcf	status,0,c
 26241  01221E  3780               	rlcf	??i2_printf& (0+255),f,b
 26242  012220  3781               	rlcf	(??i2_printf+1)& (0+255),f,b
 26243  012222  90D8               	bcf	status,0,c
 26244  012224  3780               	rlcf	??i2_printf& (0+255),f,b
 26245  012226  3781               	rlcf	(??i2_printf+1)& (0+255),f,b
 26246  012228  0E4D               	movlw	low _hexpowers
 26247  01222A  2580               	addwf	??i2_printf& (0+255),w,b
 26248  01222C  6EF6               	movwf	tblptrl,c
 26249  01222E  0EEC               	movlw	high _hexpowers
 26250  012230  2181               	addwfc	(??i2_printf+1)& (0+255),w,b
 26251  012232  6EF7               	movwf	tblptrh,c
 26252  012234                     	if	1	;There are 3 active tblptr bytes
 26253  012234  6AF8               	clrf	tblptru,c
 26254  012236  0E00               	movlw	low (__mediumconst shr (0+16))
 26255  012238  22F8               	addwfc	tblptru,f,c
 26256  01223A                     	endif
 26257  01223A  0009               	tblrd		*+
 26258  01223C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26259  012240  0009               	tblrd		*+
 26260  012242  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26261  012246  0009               	tblrd		*+
 26262  012248  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26263  01224C  000A               	tblrd		*-
 26264  01224E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26265  012252  ECE6  F0B8         	call	i2___lldiv	;wreg free
 26266  012256  5001               	movf	?i2___lldiv,w,c
 26267  012258  0B0F               	andlw	15
 26268  01225A  0100               	movlb	0	; () banked
 26269  01225C  6F8A               	movwf	i2printf@idx& (0+255),b
 26270                           
 26271                           ; BSR set to: 0
 26272                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26273  01225E  518A               	movf	i2printf@idx& (0+255),w,b
 26274  012260  0D01               	mullw	1
 26275  012262  0EEB               	movlw	low STR_134
 26276  012264  24F3               	addwf	prodl,w,c
 26277  012266  6EF6               	movwf	tblptrl,c
 26278  012268  0EFD               	movlw	high STR_134
 26279  01226A  20F4               	addwfc	prodh,w,c
 26280  01226C  6EF7               	movwf	tblptrh,c
 26281  01226E                     	if	1	;There are 3 active tblptr bytes
 26282  01226E  6AF8               	clrf	tblptru,c
 26283  012270  0E00               	movlw	low (__mediumconst shr (0+16))
 26284  012272  22F8               	addwfc	tblptru,f,c
 26285  012274                     	endif
 26286  012274  0008               	tblrd		*
 26287  012276  CFF5 F0A3          	movff	tablat,i2printf@c
 26288                           
 26289                           ; BSR set to: 0
 26290                           ;doprnt.c: 1523: }
 26291                           
 26292                           ;doprnt.c: 1508: }
 26293                           ;doprnt.c: 1510: break;
 26294  01227A  D00C               	goto	i2l1442
 26295  01227C                     i2l13680:
 26296  01227C  0100               	movlb	0	; () banked
 26297  01227E  5191               	movf	i2printf@flag& (0+255),w,b
 26298  012280  0BC0               	andlw	192
 26299                           
 26300                           ; Switch size 1, requested type "space"
 26301                           ; Number of cases is 3, Range of values is 0 to 192
 26302                           ; switch strategies available:
 26303                           ; Name         Instructions Cycles
 26304                           ; simple_byte           10     6 (average)
 26305                           ;	Chosen strategy is simple_byte
 26306  012282  0A00               	xorlw	0	; case 0
 26307  012284  B4D8               	btfsc	status,2,c
 26308  012286  D77D               	goto	i2l1440
 26309  012288  0A80               	xorlw	128	; case 128
 26310  01228A  B4D8               	btfsc	status,2,c
 26311  01228C  D7BB               	goto	i2l1443
 26312  01228E  0A40               	xorlw	64	; case 192
 26313  012290  B4D8               	btfsc	status,2,c
 26314  012292  D777               	goto	i2l1440
 26315  012294                     i2l1442:
 26316                           
 26317                           ; BSR set to: 0
 26318                           ;doprnt.c: 1524: (putch(c) );
 26319                           
 26320                           ; BSR set to: 0
 26321  012294  51A3               	movf	i2printf@c& (0+255),w,b
 26322  012296  ECAA  F0C0         	call	i2_putch
 26323  01229A                     i2l1437:
 26324  01229A  0100               	movlb	0	; () banked
 26325  01229C  07A1               	decf	i2printf@prec& (0+255),f,b
 26326  01229E  A0D8               	btfss	status,0,c
 26327  0122A0  07A2               	decf	(i2printf@prec+1)& (0+255),f,b
 26328  0122A2  29A1               	incf	i2printf@prec& (0+255),w,b
 26329  0122A4  E1EB               	bnz	i2l13680
 26330  0122A6  29A2               	incf	(i2printf@prec+1)& (0+255),w,b
 26331  0122A8  A4D8               	btfss	status,2,c
 26332  0122AA  D7E8               	goto	i2l1439
 26333  0122AC                     i2u1653_40:
 26334                           
 26335                           ; BSR set to: 0
 26336                           
 26337                           ; BSR set to: 0
 26338  0122AC  0100               	movlb	0	; () banked
 26339  0122AE  517E               	movf	i2printf@f& (0+255),w,b
 26340  0122B0  6F80               	movwf	??i2_printf& (0+255),b
 26341  0122B2  517F               	movf	(i2printf@f+1)& (0+255),w,b
 26342  0122B4  6F81               	movwf	(??i2_printf+1)& (0+255),b
 26343  0122B6  4B7E               	infsnz	i2printf@f& (0+255),f,b
 26344  0122B8  2B7F               	incf	(i2printf@f+1)& (0+255),f,b
 26345  0122BA  C080  FFF6         	movff	??i2_printf,tblptrl
 26346  0122BE  C081  FFF7         	movff	??i2_printf+1,tblptrh
 26347  0122C2  0E00               	movlw	low (__mediumconst shr (0+16))
 26348  0122C4  6EF8               	movwf	tblptru,c
 26349  0122C6  0E0D               	movlw	(high __ramtop+-1)
 26350  0122C8  64F7               	cpfsgt	tblptrh,c
 26351  0122CA  D003               	bra	i2u1654_47
 26352  0122CC  0008               	tblrd		*
 26353  0122CE  50F5               	movf	tablat,w,c
 26354  0122D0  D005               	bra	i2u1654_40
 26355  0122D2                     i2u1654_47:
 26356  0122D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 26357  0122D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 26358  0122DA  50EF               	movf	indf0,w,c
 26359  0122DC                     i2u1654_40:
 26360  0122DC  0100               	movlb	0	; () banked
 26361  0122DE  6FA3               	movwf	i2printf@c& (0+255),b
 26362  0122E0  51A3               	movf	i2printf@c& (0+255),w,b
 26363  0122E2  B4D8               	btfsc	status,2,c
 26364  0122E4  0012               	return	
 26365  0122E6  EFEC  F08B         	goto	i2l1351
 26366  0122EA                     __end_ofi2_printf:
 26367                           	opt stack 0
 26368                           tosu	equ	0xFFF
 26369                           tosh	equ	0xFFE
 26370                           tosl	equ	0xFFD
 26371                           pclatu	equ	0xFFB
 26372                           pclath	equ	0xFFA
 26373                           tblptru	equ	0xFF8
 26374                           tblptrh	equ	0xFF7
 26375                           tblptrl	equ	0xFF6
 26376                           tablat	equ	0xFF5
 26377                           prodh	equ	0xFF4
 26378                           prodl	equ	0xFF3
 26379                           intcon	equ	0xFF2
 26380                           indf0	equ	0xFEF
 26381                           postinc0	equ	0xFEE
 26382                           fsr0h	equ	0xFEA
 26383                           fsr0l	equ	0xFE9
 26384                           wreg	equ	0xFE8
 26385                           indf1	equ	0xFE7
 26386                           postdec1	equ	0xFE5
 26387                           plusw1	equ	0xFE3
 26388                           fsr1h	equ	0xFE2
 26389                           fsr1l	equ	0xFE1
 26390                           bsr	equ	0xFE0
 26391                           indf2	equ	0xFDF
 26392                           postinc2	equ	0xFDE
 26393                           postdec2	equ	0xFDD
 26394                           plusw2	equ	0xFDB
 26395                           fsr2h	equ	0xFDA
 26396                           fsr2l	equ	0xFD9
 26397                           status	equ	0xFD8
 26398                           
 26399 ;; *************** function i2_scale *****************
 26400 ;; Defined at:
 26401 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26402 ;; Parameters:    Size  Location     Type
 26403 ;;  scl             1    wreg     char 
 26404 ;; Auto vars:     Size  Location     Type
 26405 ;;  scl             1   80[COMRAM] char 
 26406 ;; Return value:  Size  Location     Type
 26407 ;;                  4   72[COMRAM] char 
 26408 ;; Registers used:
 26409 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26410 ;; Tracked objects:
 26411 ;;		On entry : 0/0
 26412 ;;		On exit  : 0/0
 26413 ;;		Unchanged: 0/0
 26414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26416 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26418 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26419 ;;Total ram usage:        9 bytes
 26420 ;; Hardware stack levels used:    1
 26421 ;; Hardware stack levels required when called:    1
 26422 ;; This function calls:
 26423 ;;		i2___awdiv
 26424 ;;		i2___awmod
 26425 ;;		i2___flmul
 26426 ;; This function is called by:
 26427 ;;		i2_printf
 26428 ;; This function uses a non-reentrant model
 26429 ;;
 26430                           
 26431                           	psect	text86
 26432  012FBC                     __ptext86:
 26433                           	opt stack 0
 26434  012FBC                     i2_scale:
 26435                           	opt stack 15
 26436                           
 26437                           ; BSR set to: 0
 26438                           ;incstack = 0
 26439                           ;i2scale@scl stored from wreg
 26440  012FBC  6E51               	movwf	i2scale@scl,c
 26441                           
 26442                           ;doprnt.c: 428: if(scl < 0) {
 26443  012FBE  AE51               	btfss	i2scale@scl,7,c
 26444  012FC0  D11F               	goto	i2l1340
 26445                           
 26446                           ;doprnt.c: 429: scl = -scl;
 26447  012FC2  6C51               	negf	i2scale@scl,c
 26448                           
 26449                           ;doprnt.c: 430: if(scl>=110)
 26450  012FC4  5051               	movf	i2scale@scl,w,c
 26451  012FC6  0A80               	xorlw	128
 26452  012FC8  0F12               	addlw	-238
 26453  012FCA  A0D8               	btfss	status,0,c
 26454  012FCC  D0A1               	goto	i2l1341
 26455                           
 26456                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26457  012FCE  0E00               	movlw	0
 26458  012FD0  6E0A               	movwf	i2___awdiv@divisor+1,c
 26459  012FD2  0E0A               	movlw	10
 26460  012FD4  6E09               	movwf	i2___awdiv@divisor,c
 26461  012FD6  0E00               	movlw	0
 26462  012FD8  6E04               	movwf	i2___awmod@divisor+1,c
 26463  012FDA  0E64               	movlw	100
 26464  012FDC  6E03               	movwf	i2___awmod@divisor,c
 26465  012FDE  5051               	movf	i2scale@scl,w,c
 26466  012FE0  6E01               	movwf	i2___awmod@dividend,c
 26467  012FE2  6A02               	clrf	i2___awmod@dividend+1,c
 26468  012FE4  BE01               	btfsc	i2___awmod@dividend,7,c
 26469  012FE6  0602               	decf	i2___awmod@dividend+1,f,c
 26470  012FE8  EC5B  F0BA         	call	i2___awmod	;wreg free
 26471  012FEC  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26472  012FF0  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26473  012FF4  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26474  012FF8  90D8               	bcf	status,0,c
 26475  012FFA  3607               	rlcf	?i2___awdiv,f,c
 26476  012FFC  3608               	rlcf	?i2___awdiv+1,f,c
 26477  012FFE  90D8               	bcf	status,0,c
 26478  013000  3607               	rlcf	?i2___awdiv,f,c
 26479  013002  3608               	rlcf	?i2___awdiv+1,f,c
 26480  013004  0E24               	movlw	36
 26481  013006  2607               	addwf	?i2___awdiv,f,c
 26482  013008  0E00               	movlw	0
 26483  01300A  2208               	addwfc	?i2___awdiv+1,f,c
 26484  01300C  0EF1               	movlw	low __npowers_
 26485  01300E  2407               	addwf	?i2___awdiv,w,c
 26486  013010  6EF6               	movwf	tblptrl,c
 26487  013012  0EEB               	movlw	high __npowers_
 26488  013014  2008               	addwfc	?i2___awdiv+1,w,c
 26489  013016  6EF7               	movwf	tblptrh,c
 26490  013018                     	if	1	;There are 3 active tblptr bytes
 26491  013018  6AF8               	clrf	tblptru,c
 26492  01301A  0E00               	movlw	low (__mediumconst shr (0+16))
 26493  01301C  22F8               	addwfc	tblptru,f,c
 26494  01301E                     	endif
 26495  01301E  0009               	tblrd		*+
 26496  013020  CFF5 F034          	movff	tablat,i2___flmul@a
 26497  013024  0009               	tblrd		*+
 26498  013026  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26499  01302A  0009               	tblrd		*+
 26500  01302C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26501  013030  000A               	tblrd		*-
 26502  013032  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26503  013036  0E00               	movlw	0
 26504  013038  6E0A               	movwf	i2___awdiv@divisor+1,c
 26505  01303A  0E64               	movlw	100
 26506  01303C  6E09               	movwf	i2___awdiv@divisor,c
 26507  01303E  5051               	movf	i2scale@scl,w,c
 26508  013040  6E07               	movwf	i2___awdiv@dividend,c
 26509  013042  6A08               	clrf	i2___awdiv@dividend+1,c
 26510  013044  BE07               	btfsc	i2___awdiv@dividend,7,c
 26511  013046  0608               	decf	i2___awdiv@dividend+1,f,c
 26512  013048  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26513  01304C  90D8               	bcf	status,0,c
 26514  01304E  3607               	rlcf	?i2___awdiv,f,c
 26515  013050  3608               	rlcf	?i2___awdiv+1,f,c
 26516  013052  90D8               	bcf	status,0,c
 26517  013054  3607               	rlcf	?i2___awdiv,f,c
 26518  013056  3608               	rlcf	?i2___awdiv+1,f,c
 26519  013058  0E48               	movlw	72
 26520  01305A  2607               	addwf	?i2___awdiv,f,c
 26521  01305C  0E00               	movlw	0
 26522  01305E  2208               	addwfc	?i2___awdiv+1,f,c
 26523  013060  0EF1               	movlw	low __npowers_
 26524  013062  2407               	addwf	?i2___awdiv,w,c
 26525  013064  6EF6               	movwf	tblptrl,c
 26526  013066  0EEB               	movlw	high __npowers_
 26527  013068  2008               	addwfc	?i2___awdiv+1,w,c
 26528  01306A  6EF7               	movwf	tblptrh,c
 26529  01306C                     	if	1	;There are 3 active tblptr bytes
 26530  01306C  6AF8               	clrf	tblptru,c
 26531  01306E  0E00               	movlw	low (__mediumconst shr (0+16))
 26532  013070  22F8               	addwfc	tblptru,f,c
 26533  013072                     	endif
 26534  013072  0009               	tblrd		*+
 26535  013074  CFF5 F030          	movff	tablat,i2___flmul@b
 26536  013078  0009               	tblrd		*+
 26537  01307A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 26538  01307E  0009               	tblrd		*+
 26539  013080  CFF5 F032          	movff	tablat,i2___flmul@b+2
 26540  013084  000A               	tblrd		*-
 26541  013086  CFF5 F033          	movff	tablat,i2___flmul@b+3
 26542  01308A  EC7B  F09D         	call	i2___flmul	;wreg free
 26543  01308E  C030  F04D         	movff	?i2___flmul,i2_scale$4063
 26544  013092  C031  F04E         	movff	?i2___flmul+1,i2_scale$4063+1
 26545  013096  C032  F04F         	movff	?i2___flmul+2,i2_scale$4063+2
 26546  01309A  C033  F050         	movff	?i2___flmul+3,i2_scale$4063+3
 26547                           
 26548                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26549  01309E  C04D  F030         	movff	i2_scale$4063,i2___flmul@b
 26550  0130A2  C04E  F031         	movff	i2_scale$4063+1,i2___flmul@b+1
 26551  0130A6  C04F  F032         	movff	i2_scale$4063+2,i2___flmul@b+2
 26552  0130AA  C050  F033         	movff	i2_scale$4063+3,i2___flmul@b+3
 26553  0130AE  0E00               	movlw	0
 26554  0130B0  6E04               	movwf	i2___awmod@divisor+1,c
 26555  0130B2  0E0A               	movlw	10
 26556  0130B4  6E03               	movwf	i2___awmod@divisor,c
 26557  0130B6  5051               	movf	i2scale@scl,w,c
 26558  0130B8  6E01               	movwf	i2___awmod@dividend,c
 26559  0130BA  6A02               	clrf	i2___awmod@dividend+1,c
 26560  0130BC  BE01               	btfsc	i2___awmod@dividend,7,c
 26561  0130BE  0602               	decf	i2___awmod@dividend+1,f,c
 26562  0130C0  EC5B  F0BA         	call	i2___awmod	;wreg free
 26563  0130C4  90D8               	bcf	status,0,c
 26564  0130C6  3601               	rlcf	?i2___awmod,f,c
 26565  0130C8  3602               	rlcf	?i2___awmod+1,f,c
 26566  0130CA  90D8               	bcf	status,0,c
 26567  0130CC  3601               	rlcf	?i2___awmod,f,c
 26568  0130CE  3602               	rlcf	?i2___awmod+1,f,c
 26569  0130D0  0EF1               	movlw	low __npowers_
 26570  0130D2  2401               	addwf	?i2___awmod,w,c
 26571  0130D4  6EF6               	movwf	tblptrl,c
 26572  0130D6  0EEB               	movlw	high __npowers_
 26573  0130D8  2002               	addwfc	?i2___awmod+1,w,c
 26574  0130DA  6EF7               	movwf	tblptrh,c
 26575  0130DC                     	if	1	;There are 3 active tblptr bytes
 26576  0130DC  6AF8               	clrf	tblptru,c
 26577  0130DE  0E00               	movlw	low (__mediumconst shr (0+16))
 26578  0130E0  22F8               	addwfc	tblptru,f,c
 26579  0130E2                     	endif
 26580  0130E2  0009               	tblrd		*+
 26581  0130E4  CFF5 F034          	movff	tablat,i2___flmul@a
 26582  0130E8  0009               	tblrd		*+
 26583  0130EA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26584  0130EE  0009               	tblrd		*+
 26585  0130F0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26586  0130F4  000A               	tblrd		*-
 26587  0130F6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26588  0130FA  EC7B  F09D         	call	i2___flmul	;wreg free
 26589  0130FE  C030  F049         	movff	?i2___flmul,?i2_scale
 26590  013102  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 26591  013106  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 26592  01310A  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 26593  01310E  0012               	return	
 26594  013110                     i2l1341:
 26595                           
 26596                           ;doprnt.c: 432: else if(scl > 10)
 26597  013110  5051               	movf	i2scale@scl,w,c
 26598  013112  0A80               	xorlw	128
 26599  013114  0F75               	addlw	-139
 26600  013116  A0D8               	btfss	status,0,c
 26601  013118  D05B               	goto	i2l1344
 26602                           
 26603                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 26604  01311A  0E00               	movlw	0
 26605  01311C  6E0A               	movwf	i2___awdiv@divisor+1,c
 26606  01311E  0E0A               	movlw	10
 26607  013120  6E09               	movwf	i2___awdiv@divisor,c
 26608  013122  5051               	movf	i2scale@scl,w,c
 26609  013124  6E07               	movwf	i2___awdiv@dividend,c
 26610  013126  6A08               	clrf	i2___awdiv@dividend+1,c
 26611  013128  BE07               	btfsc	i2___awdiv@dividend,7,c
 26612  01312A  0608               	decf	i2___awdiv@dividend+1,f,c
 26613  01312C  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26614  013130  90D8               	bcf	status,0,c
 26615  013132  3607               	rlcf	?i2___awdiv,f,c
 26616  013134  3608               	rlcf	?i2___awdiv+1,f,c
 26617  013136  90D8               	bcf	status,0,c
 26618  013138  3607               	rlcf	?i2___awdiv,f,c
 26619  01313A  3608               	rlcf	?i2___awdiv+1,f,c
 26620  01313C  0E24               	movlw	36
 26621  01313E  2607               	addwf	?i2___awdiv,f,c
 26622  013140  0E00               	movlw	0
 26623  013142  2208               	addwfc	?i2___awdiv+1,f,c
 26624  013144  0EF1               	movlw	low __npowers_
 26625  013146  2407               	addwf	?i2___awdiv,w,c
 26626  013148  6EF6               	movwf	tblptrl,c
 26627  01314A  0EEB               	movlw	high __npowers_
 26628  01314C  2008               	addwfc	?i2___awdiv+1,w,c
 26629  01314E  6EF7               	movwf	tblptrh,c
 26630  013150                     	if	1	;There are 3 active tblptr bytes
 26631  013150  6AF8               	clrf	tblptru,c
 26632  013152  0E00               	movlw	low (__mediumconst shr (0+16))
 26633  013154  22F8               	addwfc	tblptru,f,c
 26634  013156                     	endif
 26635  013156  0009               	tblrd		*+
 26636  013158  CFF5 F030          	movff	tablat,i2___flmul@b
 26637  01315C  0009               	tblrd		*+
 26638  01315E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 26639  013162  0009               	tblrd		*+
 26640  013164  CFF5 F032          	movff	tablat,i2___flmul@b+2
 26641  013168  000A               	tblrd		*-
 26642  01316A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 26643  01316E  0E00               	movlw	0
 26644  013170  6E04               	movwf	i2___awmod@divisor+1,c
 26645  013172  0E0A               	movlw	10
 26646  013174  6E03               	movwf	i2___awmod@divisor,c
 26647  013176  5051               	movf	i2scale@scl,w,c
 26648  013178  6E01               	movwf	i2___awmod@dividend,c
 26649  01317A  6A02               	clrf	i2___awmod@dividend+1,c
 26650  01317C  BE01               	btfsc	i2___awmod@dividend,7,c
 26651  01317E  0602               	decf	i2___awmod@dividend+1,f,c
 26652  013180  EC5B  F0BA         	call	i2___awmod	;wreg free
 26653  013184  90D8               	bcf	status,0,c
 26654  013186  3601               	rlcf	?i2___awmod,f,c
 26655  013188  3602               	rlcf	?i2___awmod+1,f,c
 26656  01318A  90D8               	bcf	status,0,c
 26657  01318C  3601               	rlcf	?i2___awmod,f,c
 26658  01318E  3602               	rlcf	?i2___awmod+1,f,c
 26659  013190  0EF1               	movlw	low __npowers_
 26660  013192  2401               	addwf	?i2___awmod,w,c
 26661  013194  6EF6               	movwf	tblptrl,c
 26662  013196  0EEB               	movlw	high __npowers_
 26663  013198  2002               	addwfc	?i2___awmod+1,w,c
 26664  01319A  6EF7               	movwf	tblptrh,c
 26665  01319C                     	if	1	;There are 3 active tblptr bytes
 26666  01319C  6AF8               	clrf	tblptru,c
 26667  01319E  0E00               	movlw	low (__mediumconst shr (0+16))
 26668  0131A0  22F8               	addwfc	tblptru,f,c
 26669  0131A2                     	endif
 26670  0131A2  0009               	tblrd		*+
 26671  0131A4  CFF5 F034          	movff	tablat,i2___flmul@a
 26672  0131A8  0009               	tblrd		*+
 26673  0131AA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26674  0131AE  0009               	tblrd		*+
 26675  0131B0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26676  0131B4  000A               	tblrd		*-
 26677  0131B6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26678  0131BA  EC7B  F09D         	call	i2___flmul	;wreg free
 26679  0131BE  C030  F049         	movff	?i2___flmul,?i2_scale
 26680  0131C2  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 26681  0131C6  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 26682  0131CA  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 26683  0131CE  0012               	return	
 26684  0131D0                     i2l1344:
 26685                           
 26686                           ;doprnt.c: 434: return _npowers_[scl];
 26687  0131D0  5051               	movf	i2scale@scl,w,c
 26688  0131D2  0D04               	mullw	4
 26689  0131D4  0EF1               	movlw	low __npowers_
 26690  0131D6  24F3               	addwf	prodl,w,c
 26691  0131D8  6EF6               	movwf	tblptrl,c
 26692  0131DA  0EEB               	movlw	high __npowers_
 26693  0131DC  20F4               	addwfc	prodh,w,c
 26694  0131DE  6EF7               	movwf	tblptrh,c
 26695  0131E0                     	if	1	;There are 3 active tblptr bytes
 26696  0131E0  6AF8               	clrf	tblptru,c
 26697  0131E2  0E00               	movlw	low (__mediumconst shr (0+16))
 26698  0131E4  22F8               	addwfc	tblptru,f,c
 26699  0131E6                     	endif
 26700  0131E6  0009               	tblrd		*+
 26701  0131E8  CFF5 F049          	movff	tablat,?i2_scale
 26702  0131EC  0009               	tblrd		*+
 26703  0131EE  CFF5 F04A          	movff	tablat,?i2_scale+1
 26704  0131F2  0009               	tblrd		*+
 26705  0131F4  CFF5 F04B          	movff	tablat,?i2_scale+2
 26706  0131F8  000A               	tblrd		*-
 26707  0131FA  CFF5 F04C          	movff	tablat,?i2_scale+3
 26708  0131FE  0012               	return	
 26709  013200                     i2l1340:
 26710                           
 26711                           ;doprnt.c: 435: }
 26712                           ;doprnt.c: 436: if(scl>=110)
 26713  013200  5051               	movf	i2scale@scl,w,c
 26714  013202  0A80               	xorlw	128
 26715  013204  0F12               	addlw	-238
 26716  013206  A0D8               	btfss	status,0,c
 26717  013208  D0A1               	goto	i2l1345
 26718                           
 26719                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26720  01320A  0E00               	movlw	0
 26721  01320C  6E0A               	movwf	i2___awdiv@divisor+1,c
 26722  01320E  0E0A               	movlw	10
 26723  013210  6E09               	movwf	i2___awdiv@divisor,c
 26724  013212  0E00               	movlw	0
 26725  013214  6E04               	movwf	i2___awmod@divisor+1,c
 26726  013216  0E64               	movlw	100
 26727  013218  6E03               	movwf	i2___awmod@divisor,c
 26728  01321A  5051               	movf	i2scale@scl,w,c
 26729  01321C  6E01               	movwf	i2___awmod@dividend,c
 26730  01321E  6A02               	clrf	i2___awmod@dividend+1,c
 26731  013220  BE01               	btfsc	i2___awmod@dividend,7,c
 26732  013222  0602               	decf	i2___awmod@dividend+1,f,c
 26733  013224  EC5B  F0BA         	call	i2___awmod	;wreg free
 26734  013228  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26735  01322C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26736  013230  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26737  013234  90D8               	bcf	status,0,c
 26738  013236  3607               	rlcf	?i2___awdiv,f,c
 26739  013238  3608               	rlcf	?i2___awdiv+1,f,c
 26740  01323A  90D8               	bcf	status,0,c
 26741  01323C  3607               	rlcf	?i2___awdiv,f,c
 26742  01323E  3608               	rlcf	?i2___awdiv+1,f,c
 26743  013240  0E24               	movlw	36
 26744  013242  2607               	addwf	?i2___awdiv,f,c
 26745  013244  0E00               	movlw	0
 26746  013246  2208               	addwfc	?i2___awdiv+1,f,c
 26747  013248  0EBD               	movlw	low __powers_
 26748  01324A  2407               	addwf	?i2___awdiv,w,c
 26749  01324C  6EF6               	movwf	tblptrl,c
 26750  01324E  0EEB               	movlw	high __powers_
 26751  013250  2008               	addwfc	?i2___awdiv+1,w,c
 26752  013252  6EF7               	movwf	tblptrh,c
 26753  013254                     	if	1	;There are 3 active tblptr bytes
 26754  013254  6AF8               	clrf	tblptru,c
 26755  013256  0E00               	movlw	low (__mediumconst shr (0+16))
 26756  013258  22F8               	addwfc	tblptru,f,c
 26757  01325A                     	endif
 26758  01325A  0009               	tblrd		*+
 26759  01325C  CFF5 F034          	movff	tablat,i2___flmul@a
 26760  013260  0009               	tblrd		*+
 26761  013262  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26762  013266  0009               	tblrd		*+
 26763  013268  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26764  01326C  000A               	tblrd		*-
 26765  01326E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26766  013272  0E00               	movlw	0
 26767  013274  6E0A               	movwf	i2___awdiv@divisor+1,c
 26768  013276  0E64               	movlw	100
 26769  013278  6E09               	movwf	i2___awdiv@divisor,c
 26770  01327A  5051               	movf	i2scale@scl,w,c
 26771  01327C  6E07               	movwf	i2___awdiv@dividend,c
 26772  01327E  6A08               	clrf	i2___awdiv@dividend+1,c
 26773  013280  BE07               	btfsc	i2___awdiv@dividend,7,c
 26774  013282  0608               	decf	i2___awdiv@dividend+1,f,c
 26775  013284  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26776  013288  90D8               	bcf	status,0,c
 26777  01328A  3607               	rlcf	?i2___awdiv,f,c
 26778  01328C  3608               	rlcf	?i2___awdiv+1,f,c
 26779  01328E  90D8               	bcf	status,0,c
 26780  013290  3607               	rlcf	?i2___awdiv,f,c
 26781  013292  3608               	rlcf	?i2___awdiv+1,f,c
 26782  013294  0E48               	movlw	72
 26783  013296  2607               	addwf	?i2___awdiv,f,c
 26784  013298  0E00               	movlw	0
 26785  01329A  2208               	addwfc	?i2___awdiv+1,f,c
 26786  01329C  0EBD               	movlw	low __powers_
 26787  01329E  2407               	addwf	?i2___awdiv,w,c
 26788  0132A0  6EF6               	movwf	tblptrl,c
 26789  0132A2  0EEB               	movlw	high __powers_
 26790  0132A4  2008               	addwfc	?i2___awdiv+1,w,c
 26791  0132A6  6EF7               	movwf	tblptrh,c
 26792  0132A8                     	if	1	;There are 3 active tblptr bytes
 26793  0132A8  6AF8               	clrf	tblptru,c
 26794  0132AA  0E00               	movlw	low (__mediumconst shr (0+16))
 26795  0132AC  22F8               	addwfc	tblptru,f,c
 26796  0132AE                     	endif
 26797  0132AE  0009               	tblrd		*+
 26798  0132B0  CFF5 F030          	movff	tablat,i2___flmul@b
 26799  0132B4  0009               	tblrd		*+
 26800  0132B6  CFF5 F031          	movff	tablat,i2___flmul@b+1
 26801  0132BA  0009               	tblrd		*+
 26802  0132BC  CFF5 F032          	movff	tablat,i2___flmul@b+2
 26803  0132C0  000A               	tblrd		*-
 26804  0132C2  CFF5 F033          	movff	tablat,i2___flmul@b+3
 26805  0132C6  EC7B  F09D         	call	i2___flmul	;wreg free
 26806  0132CA  C030  F04D         	movff	?i2___flmul,i2_scale$4063
 26807  0132CE  C031  F04E         	movff	?i2___flmul+1,i2_scale$4063+1
 26808  0132D2  C032  F04F         	movff	?i2___flmul+2,i2_scale$4063+2
 26809  0132D6  C033  F050         	movff	?i2___flmul+3,i2_scale$4063+3
 26810                           
 26811                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26812  0132DA  C04D  F030         	movff	i2_scale$4063,i2___flmul@b
 26813  0132DE  C04E  F031         	movff	i2_scale$4063+1,i2___flmul@b+1
 26814  0132E2  C04F  F032         	movff	i2_scale$4063+2,i2___flmul@b+2
 26815  0132E6  C050  F033         	movff	i2_scale$4063+3,i2___flmul@b+3
 26816  0132EA  0E00               	movlw	0
 26817  0132EC  6E04               	movwf	i2___awmod@divisor+1,c
 26818  0132EE  0E0A               	movlw	10
 26819  0132F0  6E03               	movwf	i2___awmod@divisor,c
 26820  0132F2  5051               	movf	i2scale@scl,w,c
 26821  0132F4  6E01               	movwf	i2___awmod@dividend,c
 26822  0132F6  6A02               	clrf	i2___awmod@dividend+1,c
 26823  0132F8  BE01               	btfsc	i2___awmod@dividend,7,c
 26824  0132FA  0602               	decf	i2___awmod@dividend+1,f,c
 26825  0132FC  EC5B  F0BA         	call	i2___awmod	;wreg free
 26826  013300  90D8               	bcf	status,0,c
 26827  013302  3601               	rlcf	?i2___awmod,f,c
 26828  013304  3602               	rlcf	?i2___awmod+1,f,c
 26829  013306  90D8               	bcf	status,0,c
 26830  013308  3601               	rlcf	?i2___awmod,f,c
 26831  01330A  3602               	rlcf	?i2___awmod+1,f,c
 26832  01330C  0EBD               	movlw	low __powers_
 26833  01330E  2401               	addwf	?i2___awmod,w,c
 26834  013310  6EF6               	movwf	tblptrl,c
 26835  013312  0EEB               	movlw	high __powers_
 26836  013314  2002               	addwfc	?i2___awmod+1,w,c
 26837  013316  6EF7               	movwf	tblptrh,c
 26838  013318                     	if	1	;There are 3 active tblptr bytes
 26839  013318  6AF8               	clrf	tblptru,c
 26840  01331A  0E00               	movlw	low (__mediumconst shr (0+16))
 26841  01331C  22F8               	addwfc	tblptru,f,c
 26842  01331E                     	endif
 26843  01331E  0009               	tblrd		*+
 26844  013320  CFF5 F034          	movff	tablat,i2___flmul@a
 26845  013324  0009               	tblrd		*+
 26846  013326  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26847  01332A  0009               	tblrd		*+
 26848  01332C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26849  013330  000A               	tblrd		*-
 26850  013332  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26851  013336  EC7B  F09D         	call	i2___flmul	;wreg free
 26852  01333A  C030  F049         	movff	?i2___flmul,?i2_scale
 26853  01333E  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 26854  013342  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 26855  013346  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 26856  01334A  0012               	return	
 26857  01334C                     i2l1345:
 26858                           
 26859                           ;doprnt.c: 438: else if(scl > 10)
 26860  01334C  5051               	movf	i2scale@scl,w,c
 26861  01334E  0A80               	xorlw	128
 26862  013350  0F75               	addlw	-139
 26863  013352  A0D8               	btfss	status,0,c
 26864  013354  D05B               	goto	i2l1347
 26865                           
 26866                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 26867  013356  0E00               	movlw	0
 26868  013358  6E0A               	movwf	i2___awdiv@divisor+1,c
 26869  01335A  0E0A               	movlw	10
 26870  01335C  6E09               	movwf	i2___awdiv@divisor,c
 26871  01335E  5051               	movf	i2scale@scl,w,c
 26872  013360  6E07               	movwf	i2___awdiv@dividend,c
 26873  013362  6A08               	clrf	i2___awdiv@dividend+1,c
 26874  013364  BE07               	btfsc	i2___awdiv@dividend,7,c
 26875  013366  0608               	decf	i2___awdiv@dividend+1,f,c
 26876  013368  ECA4  F0B8         	call	i2___awdiv	;wreg free
 26877  01336C  90D8               	bcf	status,0,c
 26878  01336E  3607               	rlcf	?i2___awdiv,f,c
 26879  013370  3608               	rlcf	?i2___awdiv+1,f,c
 26880  013372  90D8               	bcf	status,0,c
 26881  013374  3607               	rlcf	?i2___awdiv,f,c
 26882  013376  3608               	rlcf	?i2___awdiv+1,f,c
 26883  013378  0E24               	movlw	36
 26884  01337A  2607               	addwf	?i2___awdiv,f,c
 26885  01337C  0E00               	movlw	0
 26886  01337E  2208               	addwfc	?i2___awdiv+1,f,c
 26887  013380  0EBD               	movlw	low __powers_
 26888  013382  2407               	addwf	?i2___awdiv,w,c
 26889  013384  6EF6               	movwf	tblptrl,c
 26890  013386  0EEB               	movlw	high __powers_
 26891  013388  2008               	addwfc	?i2___awdiv+1,w,c
 26892  01338A  6EF7               	movwf	tblptrh,c
 26893  01338C                     	if	1	;There are 3 active tblptr bytes
 26894  01338C  6AF8               	clrf	tblptru,c
 26895  01338E  0E00               	movlw	low (__mediumconst shr (0+16))
 26896  013390  22F8               	addwfc	tblptru,f,c
 26897  013392                     	endif
 26898  013392  0009               	tblrd		*+
 26899  013394  CFF5 F030          	movff	tablat,i2___flmul@b
 26900  013398  0009               	tblrd		*+
 26901  01339A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 26902  01339E  0009               	tblrd		*+
 26903  0133A0  CFF5 F032          	movff	tablat,i2___flmul@b+2
 26904  0133A4  000A               	tblrd		*-
 26905  0133A6  CFF5 F033          	movff	tablat,i2___flmul@b+3
 26906  0133AA  0E00               	movlw	0
 26907  0133AC  6E04               	movwf	i2___awmod@divisor+1,c
 26908  0133AE  0E0A               	movlw	10
 26909  0133B0  6E03               	movwf	i2___awmod@divisor,c
 26910  0133B2  5051               	movf	i2scale@scl,w,c
 26911  0133B4  6E01               	movwf	i2___awmod@dividend,c
 26912  0133B6  6A02               	clrf	i2___awmod@dividend+1,c
 26913  0133B8  BE01               	btfsc	i2___awmod@dividend,7,c
 26914  0133BA  0602               	decf	i2___awmod@dividend+1,f,c
 26915  0133BC  EC5B  F0BA         	call	i2___awmod	;wreg free
 26916  0133C0  90D8               	bcf	status,0,c
 26917  0133C2  3601               	rlcf	?i2___awmod,f,c
 26918  0133C4  3602               	rlcf	?i2___awmod+1,f,c
 26919  0133C6  90D8               	bcf	status,0,c
 26920  0133C8  3601               	rlcf	?i2___awmod,f,c
 26921  0133CA  3602               	rlcf	?i2___awmod+1,f,c
 26922  0133CC  0EBD               	movlw	low __powers_
 26923  0133CE  2401               	addwf	?i2___awmod,w,c
 26924  0133D0  6EF6               	movwf	tblptrl,c
 26925  0133D2  0EEB               	movlw	high __powers_
 26926  0133D4  2002               	addwfc	?i2___awmod+1,w,c
 26927  0133D6  6EF7               	movwf	tblptrh,c
 26928  0133D8                     	if	1	;There are 3 active tblptr bytes
 26929  0133D8  6AF8               	clrf	tblptru,c
 26930  0133DA  0E00               	movlw	low (__mediumconst shr (0+16))
 26931  0133DC  22F8               	addwfc	tblptru,f,c
 26932  0133DE                     	endif
 26933  0133DE  0009               	tblrd		*+
 26934  0133E0  CFF5 F034          	movff	tablat,i2___flmul@a
 26935  0133E4  0009               	tblrd		*+
 26936  0133E6  CFF5 F035          	movff	tablat,i2___flmul@a+1
 26937  0133EA  0009               	tblrd		*+
 26938  0133EC  CFF5 F036          	movff	tablat,i2___flmul@a+2
 26939  0133F0  000A               	tblrd		*-
 26940  0133F2  CFF5 F037          	movff	tablat,i2___flmul@a+3
 26941  0133F6  EC7B  F09D         	call	i2___flmul	;wreg free
 26942  0133FA  C030  F049         	movff	?i2___flmul,?i2_scale
 26943  0133FE  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 26944  013402  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 26945  013406  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 26946  01340A  0012               	return	
 26947  01340C                     i2l1347:
 26948                           
 26949                           ;doprnt.c: 440: return _powers_[scl];
 26950  01340C  5051               	movf	i2scale@scl,w,c
 26951  01340E  0D04               	mullw	4
 26952  013410  0EBD               	movlw	low __powers_
 26953  013412  24F3               	addwf	prodl,w,c
 26954  013414  6EF6               	movwf	tblptrl,c
 26955  013416  0EEB               	movlw	high __powers_
 26956  013418  20F4               	addwfc	prodh,w,c
 26957  01341A  6EF7               	movwf	tblptrh,c
 26958  01341C                     	if	1	;There are 3 active tblptr bytes
 26959  01341C  6AF8               	clrf	tblptru,c
 26960  01341E  0E00               	movlw	low (__mediumconst shr (0+16))
 26961  013420  22F8               	addwfc	tblptru,f,c
 26962  013422                     	endif
 26963  013422  0009               	tblrd		*+
 26964  013424  CFF5 F049          	movff	tablat,?i2_scale
 26965  013428  0009               	tblrd		*+
 26966  01342A  CFF5 F04A          	movff	tablat,?i2_scale+1
 26967  01342E  0009               	tblrd		*+
 26968  013430  CFF5 F04B          	movff	tablat,?i2_scale+2
 26969  013434  000A               	tblrd		*-
 26970  013436  CFF5 F04C          	movff	tablat,?i2_scale+3
 26971  01343A  0012               	return	
 26972  01343C                     __end_ofi2_scale:
 26973                           	opt stack 0
 26974                           tosu	equ	0xFFF
 26975                           tosh	equ	0xFFE
 26976                           tosl	equ	0xFFD
 26977                           pclatu	equ	0xFFB
 26978                           pclath	equ	0xFFA
 26979                           tblptru	equ	0xFF8
 26980                           tblptrh	equ	0xFF7
 26981                           tblptrl	equ	0xFF6
 26982                           tablat	equ	0xFF5
 26983                           prodh	equ	0xFF4
 26984                           prodl	equ	0xFF3
 26985                           intcon	equ	0xFF2
 26986                           indf0	equ	0xFEF
 26987                           postinc0	equ	0xFEE
 26988                           fsr0h	equ	0xFEA
 26989                           fsr0l	equ	0xFE9
 26990                           wreg	equ	0xFE8
 26991                           indf1	equ	0xFE7
 26992                           postdec1	equ	0xFE5
 26993                           plusw1	equ	0xFE3
 26994                           fsr1h	equ	0xFE2
 26995                           fsr1l	equ	0xFE1
 26996                           bsr	equ	0xFE0
 26997                           indf2	equ	0xFDF
 26998                           postinc2	equ	0xFDE
 26999                           postdec2	equ	0xFDD
 27000                           plusw2	equ	0xFDB
 27001                           fsr2h	equ	0xFDA
 27002                           fsr2l	equ	0xFD9
 27003                           status	equ	0xFD8
 27004                           
 27005 ;; *************** function i2_putch *****************
 27006 ;; Defined at:
 27007 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 27008 ;; Parameters:    Size  Location     Type
 27009 ;;  txData          1    wreg     unsigned char 
 27010 ;; Auto vars:     Size  Location     Type
 27011 ;;  txData          1    1[COMRAM] unsigned char 
 27012 ;; Return value:  Size  Location     Type
 27013 ;;                  1    wreg      void 
 27014 ;; Registers used:
 27015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27016 ;; Tracked objects:
 27017 ;;		On entry : 0/0
 27018 ;;		On exit  : 0/0
 27019 ;;		Unchanged: 0/0
 27020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27025 ;;Total ram usage:        1 bytes
 27026 ;; Hardware stack levels used:    1
 27027 ;; Hardware stack levels required when called:    1
 27028 ;; This function calls:
 27029 ;;		i2_EUSART2_Write
 27030 ;; This function is called by:
 27031 ;;		i2_printf
 27032 ;; This function uses a non-reentrant model
 27033 ;;
 27034                           
 27035                           	psect	text87
 27036  018154                     __ptext87:
 27037                           	opt stack 0
 27038  018154                     i2_putch:
 27039                           	opt stack 15
 27040                           
 27041                           ;incstack = 0
 27042                           ;i2putch@txData stored from wreg
 27043  018154  6E02               	movwf	i2putch@txData,c
 27044                           
 27045                           ;eusart2.c: 195: EUSART2_Write(txData);
 27046  018156  5002               	movf	i2putch@txData,w,c
 27047  018158  EC14  F0BD         	call	i2_EUSART2_Write
 27048  01815C  0012               	return		;funcret
 27049  01815E                     __end_ofi2_putch:
 27050                           	opt stack 0
 27051                           tosu	equ	0xFFF
 27052                           tosh	equ	0xFFE
 27053                           tosl	equ	0xFFD
 27054                           pclatu	equ	0xFFB
 27055                           pclath	equ	0xFFA
 27056                           tblptru	equ	0xFF8
 27057                           tblptrh	equ	0xFF7
 27058                           tblptrl	equ	0xFF6
 27059                           tablat	equ	0xFF5
 27060                           prodh	equ	0xFF4
 27061                           prodl	equ	0xFF3
 27062                           intcon	equ	0xFF2
 27063                           indf0	equ	0xFEF
 27064                           postinc0	equ	0xFEE
 27065                           fsr0h	equ	0xFEA
 27066                           fsr0l	equ	0xFE9
 27067                           wreg	equ	0xFE8
 27068                           indf1	equ	0xFE7
 27069                           postdec1	equ	0xFE5
 27070                           plusw1	equ	0xFE3
 27071                           fsr1h	equ	0xFE2
 27072                           fsr1l	equ	0xFE1
 27073                           bsr	equ	0xFE0
 27074                           indf2	equ	0xFDF
 27075                           postinc2	equ	0xFDE
 27076                           postdec2	equ	0xFDD
 27077                           plusw2	equ	0xFDB
 27078                           fsr2h	equ	0xFDA
 27079                           fsr2l	equ	0xFD9
 27080                           status	equ	0xFD8
 27081                           
 27082 ;; *************** function i2_EUSART2_Write *****************
 27083 ;; Defined at:
 27084 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 27085 ;; Parameters:    Size  Location     Type
 27086 ;;  txData          1    wreg     unsigned char 
 27087 ;; Auto vars:     Size  Location     Type
 27088 ;;  txData          1    0[COMRAM] unsigned char 
 27089 ;; Return value:  Size  Location     Type
 27090 ;;                  1    wreg      void 
 27091 ;; Registers used:
 27092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27093 ;; Tracked objects:
 27094 ;;		On entry : 0/0
 27095 ;;		On exit  : 0/0
 27096 ;;		Unchanged: 0/0
 27097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27102 ;;Total ram usage:        1 bytes
 27103 ;; Hardware stack levels used:    1
 27104 ;; This function calls:
 27105 ;;		Nothing
 27106 ;; This function is called by:
 27107 ;;		i2_putch
 27108 ;; This function uses a non-reentrant model
 27109 ;;
 27110                           
 27111                           	psect	text88
 27112  017A28                     __ptext88:
 27113                           	opt stack 0
 27114  017A28                     i2_EUSART2_Write:
 27115                           	opt stack 15
 27116                           
 27117                           ;incstack = 0
 27118                           ;i2EUSART2_Write@txData stored from wreg
 27119  017A28  6E01               	movwf	i2EUSART2_Write@txData,c
 27120                           
 27121                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 27122  017A2A  D002               	goto	i2l388
 27123  017A2C                     i2l389:
 27124                           
 27125                           ; BSR set to: 1
 27126  017A2C  0004               	clrwdt		;# 
 27127                           
 27128                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 27129  017A2E  827E               	bsf	3966,1,c	;volatile
 27130  017A30                     i2l388:
 27131  017A30  0101               	movlb	1	; () banked
 27132  017A32  51E0               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 27133  017A34  B4D8               	btfsc	status,2,c
 27134  017A36  D7FA               	goto	i2l389
 27135                           
 27136                           ; BSR set to: 1
 27137                           ;eusart2.c: 167: }
 27138                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 27139  017A38  927E               	bcf	3966,1,c	;volatile
 27140                           
 27141                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 27142  017A3A  010E               	movlb	14	; () banked
 27143  017A3C  BD2C               	btfsc	44,6,b	;volatile
 27144  017A3E  D003               	goto	i2l391
 27145                           
 27146                           ; BSR set to: 14
 27147                           ;eusart2.c: 172: {
 27148                           ;eusart2.c: 173: TX2REG = txData;
 27149  017A40  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 27150                           
 27151                           ;eusart2.c: 174: }
 27152  017A44  D013               	goto	i2l392
 27153  017A46                     i2l391:
 27154                           
 27155                           ; BSR set to: 14
 27156                           ;eusart2.c: 175: else
 27157                           ;eusart2.c: 176: {
 27158                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 27159  017A46  9D2C               	bcf	44,6,b	;volatile
 27160                           
 27161                           ; BSR set to: 14
 27162                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 27163  017A48  0101               	movlb	1	; () banked
 27164  017A4A  51E2               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 27165  017A4C  0D01               	mullw	1
 27166  017A4E  0E00               	movlw	low _eusart2TxBuffer
 27167  017A50  24F3               	addwf	prodl,w,c
 27168  017A52  6ED9               	movwf	fsr2l,c
 27169  017A54  0E03               	movlw	high _eusart2TxBuffer
 27170  017A56  20F4               	addwfc	prodh,w,c
 27171  017A58  6EDA               	movwf	fsr2h,c
 27172  017A5A  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 27173                           
 27174                           ; BSR set to: 1
 27175  017A5E  2BE2               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 27176                           
 27177                           ; BSR set to: 1
 27178                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27179  017A60  0E7F               	movlw	127
 27180  017A62  65E2               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 27181  017A64  D002               	goto	i2l393
 27182                           
 27183                           ; BSR set to: 1
 27184                           ;eusart2.c: 180: {
 27185                           ;eusart2.c: 181: eusart2TxHead = 0;
 27186  017A66  0E00               	movlw	0
 27187  017A68  6FE2               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27188  017A6A                     i2l393:
 27189                           
 27190                           ; BSR set to: 1
 27191                           ;eusart2.c: 182: }
 27192                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 27193                           
 27194                           ; BSR set to: 1
 27195  017A6A  07E0               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27196  017A6C                     i2l392:
 27197                           
 27198                           ;eusart2.c: 184: }
 27199                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 27200                           
 27201                           ; BSR set to: 1
 27202  017A6C  010E               	movlb	14	; () banked
 27203  017A6E  8D2C               	bsf	44,6,b	;volatile
 27204                           
 27205                           ; BSR set to: 14
 27206  017A70  0012               	return		;funcret
 27207  017A72                     __end_ofi2_EUSART2_Write:
 27208                           	opt stack 0
 27209                           tosu	equ	0xFFF
 27210                           tosh	equ	0xFFE
 27211                           tosl	equ	0xFFD
 27212                           pclatu	equ	0xFFB
 27213                           pclath	equ	0xFFA
 27214                           tblptru	equ	0xFF8
 27215                           tblptrh	equ	0xFF7
 27216                           tblptrl	equ	0xFF6
 27217                           tablat	equ	0xFF5
 27218                           prodh	equ	0xFF4
 27219                           prodl	equ	0xFF3
 27220                           intcon	equ	0xFF2
 27221                           indf0	equ	0xFEF
 27222                           postinc0	equ	0xFEE
 27223                           fsr0h	equ	0xFEA
 27224                           fsr0l	equ	0xFE9
 27225                           wreg	equ	0xFE8
 27226                           indf1	equ	0xFE7
 27227                           postdec1	equ	0xFE5
 27228                           plusw1	equ	0xFE3
 27229                           fsr1h	equ	0xFE2
 27230                           fsr1l	equ	0xFE1
 27231                           bsr	equ	0xFE0
 27232                           indf2	equ	0xFDF
 27233                           postinc2	equ	0xFDE
 27234                           postdec2	equ	0xFDD
 27235                           plusw2	equ	0xFDB
 27236                           fsr2h	equ	0xFDA
 27237                           fsr2l	equ	0xFD9
 27238                           status	equ	0xFD8
 27239                           
 27240 ;; *************** function i2_isdigit *****************
 27241 ;; Defined at:
 27242 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 27243 ;; Parameters:    Size  Location     Type
 27244 ;;  c               1    wreg     unsigned char 
 27245 ;; Auto vars:     Size  Location     Type
 27246 ;;  c               1    2[COMRAM] unsigned char 
 27247 ;; Return value:  Size  Location     Type
 27248 ;;		None               void
 27249 ;; Registers used:
 27250 ;;		wreg, status,2, status,0
 27251 ;; Tracked objects:
 27252 ;;		On entry : 0/0
 27253 ;;		On exit  : 0/0
 27254 ;;		Unchanged: 0/0
 27255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27259 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27260 ;;Total ram usage:        3 bytes
 27261 ;; Hardware stack levels used:    1
 27262 ;; This function calls:
 27263 ;;		Nothing
 27264 ;; This function is called by:
 27265 ;;		i2_printf
 27266 ;; This function uses a non-reentrant model
 27267 ;;
 27268                           
 27269                           	psect	text89
 27270  017FD2                     __ptext89:
 27271                           	opt stack 0
 27272  017FD2                     i2_isdigit:
 27273                           	opt stack 16
 27274                           
 27275                           ; BSR set to: 14
 27276                           ;incstack = 0
 27277                           ;i2isdigit@c stored from wreg
 27278  017FD2  6E03               	movwf	i2isdigit@c,c
 27279  017FD4  0E00               	movlw	0
 27280  017FD6  6E02               	movwf	i2_isdigit$3141,c
 27281  017FD8  0E3A               	movlw	58
 27282  017FDA  6003               	cpfslt	i2isdigit@c,c
 27283  017FDC  D005               	goto	i2l1874
 27284  017FDE  0E2F               	movlw	47
 27285  017FE0  6403               	cpfsgt	i2isdigit@c,c
 27286  017FE2  D002               	goto	i2l1874
 27287  017FE4  0E01               	movlw	1
 27288  017FE6  6E02               	movwf	i2_isdigit$3141,c
 27289  017FE8                     i2l1874:
 27290  017FE8  C002  F001         	movff	i2_isdigit$3141,??i2_isdigit
 27291  017FEC  3001               	rrcf	??i2_isdigit,w,c
 27292  017FEE  0012               	return	
 27293  017FF0                     __end_ofi2_isdigit:
 27294                           	opt stack 0
 27295                           tosu	equ	0xFFF
 27296                           tosh	equ	0xFFE
 27297                           tosl	equ	0xFFD
 27298                           pclatu	equ	0xFFB
 27299                           pclath	equ	0xFFA
 27300                           tblptru	equ	0xFF8
 27301                           tblptrh	equ	0xFF7
 27302                           tblptrl	equ	0xFF6
 27303                           tablat	equ	0xFF5
 27304                           prodh	equ	0xFF4
 27305                           prodl	equ	0xFF3
 27306                           intcon	equ	0xFF2
 27307                           indf0	equ	0xFEF
 27308                           postinc0	equ	0xFEE
 27309                           fsr0h	equ	0xFEA
 27310                           fsr0l	equ	0xFE9
 27311                           wreg	equ	0xFE8
 27312                           indf1	equ	0xFE7
 27313                           postdec1	equ	0xFE5
 27314                           plusw1	equ	0xFE3
 27315                           fsr1h	equ	0xFE2
 27316                           fsr1l	equ	0xFE1
 27317                           bsr	equ	0xFE0
 27318                           indf2	equ	0xFDF
 27319                           postinc2	equ	0xFDE
 27320                           postdec2	equ	0xFDD
 27321                           plusw2	equ	0xFDB
 27322                           fsr2h	equ	0xFDA
 27323                           fsr2l	equ	0xFD9
 27324                           status	equ	0xFD8
 27325                           
 27326 ;; *************** function i2_fround *****************
 27327 ;; Defined at:
 27328 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 27329 ;; Parameters:    Size  Location     Type
 27330 ;;  prec            1    wreg     unsigned char 
 27331 ;; Auto vars:     Size  Location     Type
 27332 ;;  prec            1   84[COMRAM] unsigned char 
 27333 ;; Return value:  Size  Location     Type
 27334 ;;                  4   72[COMRAM] unsigned char 
 27335 ;; Registers used:
 27336 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27337 ;; Tracked objects:
 27338 ;;		On entry : 0/0
 27339 ;;		On exit  : 0/0
 27340 ;;		Unchanged: 0/0
 27341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27343 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27345 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27346 ;;Total ram usage:       13 bytes
 27347 ;; Hardware stack levels used:    1
 27348 ;; Hardware stack levels required when called:    1
 27349 ;; This function calls:
 27350 ;;		i2___awdiv
 27351 ;;		i2___awmod
 27352 ;;		i2___flmul
 27353 ;; This function is called by:
 27354 ;;		i2_printf
 27355 ;; This function uses a non-reentrant model
 27356 ;;
 27357                           
 27358                           	psect	text90
 27359  0155B8                     __ptext90:
 27360                           	opt stack 0
 27361  0155B8                     i2_fround:
 27362                           	opt stack 15
 27363                           
 27364                           ;incstack = 0
 27365                           ;i2fround@prec stored from wreg
 27366  0155B8  6E55               	movwf	i2fround@prec,c
 27367                           
 27368                           ;doprnt.c: 413: if(prec>=110)
 27369  0155BA  0E6D               	movlw	109
 27370  0155BC  6455               	cpfsgt	i2fround@prec,c
 27371  0155BE  D0B5               	goto	i2l1334
 27372                           
 27373                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27374  0155C0  0E00               	movlw	0
 27375  0155C2  6E0A               	movwf	i2___awdiv@divisor+1,c
 27376  0155C4  0E0A               	movlw	10
 27377  0155C6  6E09               	movwf	i2___awdiv@divisor,c
 27378  0155C8  0E00               	movlw	0
 27379  0155CA  6E04               	movwf	i2___awmod@divisor+1,c
 27380  0155CC  0E64               	movlw	100
 27381  0155CE  6E03               	movwf	i2___awmod@divisor,c
 27382  0155D0  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 27383  0155D4  6A02               	clrf	i2___awmod@dividend+1,c
 27384  0155D6  EC5B  F0BA         	call	i2___awmod	;wreg free
 27385  0155DA  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 27386  0155DE  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 27387  0155E2  ECA4  F0B8         	call	i2___awdiv	;wreg free
 27388  0155E6  90D8               	bcf	status,0,c
 27389  0155E8  3607               	rlcf	?i2___awdiv,f,c
 27390  0155EA  3608               	rlcf	?i2___awdiv+1,f,c
 27391  0155EC  90D8               	bcf	status,0,c
 27392  0155EE  3607               	rlcf	?i2___awdiv,f,c
 27393  0155F0  3608               	rlcf	?i2___awdiv+1,f,c
 27394  0155F2  0E24               	movlw	36
 27395  0155F4  2607               	addwf	?i2___awdiv,f,c
 27396  0155F6  0E00               	movlw	0
 27397  0155F8  2208               	addwfc	?i2___awdiv+1,f,c
 27398  0155FA  0EF1               	movlw	low __npowers_
 27399  0155FC  2407               	addwf	?i2___awdiv,w,c
 27400  0155FE  6EF6               	movwf	tblptrl,c
 27401  015600  0EEB               	movlw	high __npowers_
 27402  015602  2008               	addwfc	?i2___awdiv+1,w,c
 27403  015604  6EF7               	movwf	tblptrh,c
 27404  015606                     	if	1	;There are 3 active tblptr bytes
 27405  015606  6AF8               	clrf	tblptru,c
 27406  015608  0E00               	movlw	low (__mediumconst shr (0+16))
 27407  01560A  22F8               	addwfc	tblptru,f,c
 27408  01560C                     	endif
 27409  01560C  0009               	tblrd		*+
 27410  01560E  CFF5 F034          	movff	tablat,i2___flmul@a
 27411  015612  0009               	tblrd		*+
 27412  015614  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27413  015618  0009               	tblrd		*+
 27414  01561A  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27415  01561E  000A               	tblrd		*-
 27416  015620  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27417  015624  0E00               	movlw	0
 27418  015626  6E0A               	movwf	i2___awdiv@divisor+1,c
 27419  015628  0E64               	movlw	100
 27420  01562A  6E09               	movwf	i2___awdiv@divisor,c
 27421  01562C  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 27422  015630  6A08               	clrf	i2___awdiv@dividend+1,c
 27423  015632  ECA4  F0B8         	call	i2___awdiv	;wreg free
 27424  015636  90D8               	bcf	status,0,c
 27425  015638  3607               	rlcf	?i2___awdiv,f,c
 27426  01563A  3608               	rlcf	?i2___awdiv+1,f,c
 27427  01563C  90D8               	bcf	status,0,c
 27428  01563E  3607               	rlcf	?i2___awdiv,f,c
 27429  015640  3608               	rlcf	?i2___awdiv+1,f,c
 27430  015642  0E48               	movlw	72
 27431  015644  2607               	addwf	?i2___awdiv,f,c
 27432  015646  0E00               	movlw	0
 27433  015648  2208               	addwfc	?i2___awdiv+1,f,c
 27434  01564A  0EF1               	movlw	low __npowers_
 27435  01564C  2407               	addwf	?i2___awdiv,w,c
 27436  01564E  6EF6               	movwf	tblptrl,c
 27437  015650  0EEB               	movlw	high __npowers_
 27438  015652  2008               	addwfc	?i2___awdiv+1,w,c
 27439  015654  6EF7               	movwf	tblptrh,c
 27440  015656                     	if	1	;There are 3 active tblptr bytes
 27441  015656  6AF8               	clrf	tblptru,c
 27442  015658  0E00               	movlw	low (__mediumconst shr (0+16))
 27443  01565A  22F8               	addwfc	tblptru,f,c
 27444  01565C                     	endif
 27445  01565C  0009               	tblrd		*+
 27446  01565E  CFF5 F030          	movff	tablat,i2___flmul@b
 27447  015662  0009               	tblrd		*+
 27448  015664  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27449  015668  0009               	tblrd		*+
 27450  01566A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27451  01566E  000A               	tblrd		*-
 27452  015670  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27453  015674  EC7B  F09D         	call	i2___flmul	;wreg free
 27454  015678  C030  F051         	movff	?i2___flmul,i2_fround$4061
 27455  01567C  C031  F052         	movff	?i2___flmul+1,i2_fround$4061+1
 27456  015680  C032  F053         	movff	?i2___flmul+2,i2_fround$4061+2
 27457  015684  C033  F054         	movff	?i2___flmul+3,i2_fround$4061+3
 27458                           
 27459                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27460  015688  0E00               	movlw	0
 27461  01568A  6E04               	movwf	i2___awmod@divisor+1,c
 27462  01568C  0E0A               	movlw	10
 27463  01568E  6E03               	movwf	i2___awmod@divisor,c
 27464  015690  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 27465  015694  6A02               	clrf	i2___awmod@dividend+1,c
 27466  015696  EC5B  F0BA         	call	i2___awmod	;wreg free
 27467  01569A  90D8               	bcf	status,0,c
 27468  01569C  3601               	rlcf	?i2___awmod,f,c
 27469  01569E  3602               	rlcf	?i2___awmod+1,f,c
 27470  0156A0  90D8               	bcf	status,0,c
 27471  0156A2  3601               	rlcf	?i2___awmod,f,c
 27472  0156A4  3602               	rlcf	?i2___awmod+1,f,c
 27473  0156A6  0EF1               	movlw	low __npowers_
 27474  0156A8  2401               	addwf	?i2___awmod,w,c
 27475  0156AA  6EF6               	movwf	tblptrl,c
 27476  0156AC  0EEB               	movlw	high __npowers_
 27477  0156AE  2002               	addwfc	?i2___awmod+1,w,c
 27478  0156B0  6EF7               	movwf	tblptrh,c
 27479  0156B2                     	if	1	;There are 3 active tblptr bytes
 27480  0156B2  6AF8               	clrf	tblptru,c
 27481  0156B4  0E00               	movlw	low (__mediumconst shr (0+16))
 27482  0156B6  22F8               	addwfc	tblptru,f,c
 27483  0156B8                     	endif
 27484  0156B8  0009               	tblrd		*+
 27485  0156BA  CFF5 F034          	movff	tablat,i2___flmul@a
 27486  0156BE  0009               	tblrd		*+
 27487  0156C0  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27488  0156C4  0009               	tblrd		*+
 27489  0156C6  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27490  0156CA  000A               	tblrd		*-
 27491  0156CC  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27492  0156D0  C051  F030         	movff	i2_fround$4061,i2___flmul@b
 27493  0156D4  C052  F031         	movff	i2_fround$4061+1,i2___flmul@b+1
 27494  0156D8  C053  F032         	movff	i2_fround$4061+2,i2___flmul@b+2
 27495  0156DC  C054  F033         	movff	i2_fround$4061+3,i2___flmul@b+3
 27496  0156E0  EC7B  F09D         	call	i2___flmul	;wreg free
 27497  0156E4  C030  F04D         	movff	?i2___flmul,i2_fround$4062
 27498  0156E8  C031  F04E         	movff	?i2___flmul+1,i2_fround$4062+1
 27499  0156EC  C032  F04F         	movff	?i2___flmul+2,i2_fround$4062+2
 27500  0156F0  C033  F050         	movff	?i2___flmul+3,i2_fround$4062+3
 27501                           
 27502                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27503  0156F4  C04D  F030         	movff	i2_fround$4062,i2___flmul@b
 27504  0156F8  C04E  F031         	movff	i2_fround$4062+1,i2___flmul@b+1
 27505  0156FC  C04F  F032         	movff	i2_fround$4062+2,i2___flmul@b+2
 27506  015700  C050  F033         	movff	i2_fround$4062+3,i2___flmul@b+3
 27507  015704  0E00               	movlw	0
 27508  015706  6E34               	movwf	i2___flmul@a,c
 27509  015708  0E00               	movlw	0
 27510  01570A  6E35               	movwf	i2___flmul@a+1,c
 27511  01570C  0E00               	movlw	0
 27512  01570E  6E36               	movwf	i2___flmul@a+2,c
 27513  015710  0E3F               	movlw	63
 27514  015712  6E37               	movwf	i2___flmul@a+3,c
 27515  015714  EC7B  F09D         	call	i2___flmul	;wreg free
 27516  015718  C030  F049         	movff	?i2___flmul,?i2_fround
 27517  01571C  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 27518  015720  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 27519  015724  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 27520  015728  0012               	return	
 27521  01572A                     i2l1334:
 27522                           
 27523                           ;doprnt.c: 415: else if(prec > 10)
 27524  01572A  0E0A               	movlw	10
 27525  01572C  6455               	cpfsgt	i2fround@prec,c
 27526  01572E  D071               	goto	i2l1337
 27527                           
 27528                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27529  015730  0E00               	movlw	0
 27530  015732  6E04               	movwf	i2___awmod@divisor+1,c
 27531  015734  0E0A               	movlw	10
 27532  015736  6E03               	movwf	i2___awmod@divisor,c
 27533  015738  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 27534  01573C  6A02               	clrf	i2___awmod@dividend+1,c
 27535  01573E  EC5B  F0BA         	call	i2___awmod	;wreg free
 27536  015742  90D8               	bcf	status,0,c
 27537  015744  3601               	rlcf	?i2___awmod,f,c
 27538  015746  3602               	rlcf	?i2___awmod+1,f,c
 27539  015748  90D8               	bcf	status,0,c
 27540  01574A  3601               	rlcf	?i2___awmod,f,c
 27541  01574C  3602               	rlcf	?i2___awmod+1,f,c
 27542  01574E  0EF1               	movlw	low __npowers_
 27543  015750  2401               	addwf	?i2___awmod,w,c
 27544  015752  6EF6               	movwf	tblptrl,c
 27545  015754  0EEB               	movlw	high __npowers_
 27546  015756  2002               	addwfc	?i2___awmod+1,w,c
 27547  015758  6EF7               	movwf	tblptrh,c
 27548  01575A                     	if	1	;There are 3 active tblptr bytes
 27549  01575A  6AF8               	clrf	tblptru,c
 27550  01575C  0E00               	movlw	low (__mediumconst shr (0+16))
 27551  01575E  22F8               	addwfc	tblptru,f,c
 27552  015760                     	endif
 27553  015760  0009               	tblrd		*+
 27554  015762  CFF5 F034          	movff	tablat,i2___flmul@a
 27555  015766  0009               	tblrd		*+
 27556  015768  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27557  01576C  0009               	tblrd		*+
 27558  01576E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27559  015772  000A               	tblrd		*-
 27560  015774  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27561  015778  0E00               	movlw	0
 27562  01577A  6E0A               	movwf	i2___awdiv@divisor+1,c
 27563  01577C  0E0A               	movlw	10
 27564  01577E  6E09               	movwf	i2___awdiv@divisor,c
 27565  015780  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 27566  015784  6A08               	clrf	i2___awdiv@dividend+1,c
 27567  015786  ECA4  F0B8         	call	i2___awdiv	;wreg free
 27568  01578A  90D8               	bcf	status,0,c
 27569  01578C  3607               	rlcf	?i2___awdiv,f,c
 27570  01578E  3608               	rlcf	?i2___awdiv+1,f,c
 27571  015790  90D8               	bcf	status,0,c
 27572  015792  3607               	rlcf	?i2___awdiv,f,c
 27573  015794  3608               	rlcf	?i2___awdiv+1,f,c
 27574  015796  0E24               	movlw	36
 27575  015798  2607               	addwf	?i2___awdiv,f,c
 27576  01579A  0E00               	movlw	0
 27577  01579C  2208               	addwfc	?i2___awdiv+1,f,c
 27578  01579E  0EF1               	movlw	low __npowers_
 27579  0157A0  2407               	addwf	?i2___awdiv,w,c
 27580  0157A2  6EF6               	movwf	tblptrl,c
 27581  0157A4  0EEB               	movlw	high __npowers_
 27582  0157A6  2008               	addwfc	?i2___awdiv+1,w,c
 27583  0157A8  6EF7               	movwf	tblptrh,c
 27584  0157AA                     	if	1	;There are 3 active tblptr bytes
 27585  0157AA  6AF8               	clrf	tblptru,c
 27586  0157AC  0E00               	movlw	low (__mediumconst shr (0+16))
 27587  0157AE  22F8               	addwfc	tblptru,f,c
 27588  0157B0                     	endif
 27589  0157B0  0009               	tblrd		*+
 27590  0157B2  CFF5 F030          	movff	tablat,i2___flmul@b
 27591  0157B6  0009               	tblrd		*+
 27592  0157B8  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27593  0157BC  0009               	tblrd		*+
 27594  0157BE  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27595  0157C2  000A               	tblrd		*-
 27596  0157C4  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27597  0157C8  EC7B  F09D         	call	i2___flmul	;wreg free
 27598  0157CC  C030  F051         	movff	?i2___flmul,i2_fround$4061
 27599  0157D0  C031  F052         	movff	?i2___flmul+1,i2_fround$4061+1
 27600  0157D4  C032  F053         	movff	?i2___flmul+2,i2_fround$4061+2
 27601  0157D8  C033  F054         	movff	?i2___flmul+3,i2_fround$4061+3
 27602                           
 27603                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27604  0157DC  C051  F030         	movff	i2_fround$4061,i2___flmul@b
 27605  0157E0  C052  F031         	movff	i2_fround$4061+1,i2___flmul@b+1
 27606  0157E4  C053  F032         	movff	i2_fround$4061+2,i2___flmul@b+2
 27607  0157E8  C054  F033         	movff	i2_fround$4061+3,i2___flmul@b+3
 27608  0157EC  0E00               	movlw	0
 27609  0157EE  6E34               	movwf	i2___flmul@a,c
 27610  0157F0  0E00               	movlw	0
 27611  0157F2  6E35               	movwf	i2___flmul@a+1,c
 27612  0157F4  0E00               	movlw	0
 27613  0157F6  6E36               	movwf	i2___flmul@a+2,c
 27614  0157F8  0E3F               	movlw	63
 27615  0157FA  6E37               	movwf	i2___flmul@a+3,c
 27616  0157FC  EC7B  F09D         	call	i2___flmul	;wreg free
 27617  015800  C030  F049         	movff	?i2___flmul,?i2_fround
 27618  015804  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 27619  015808  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 27620  01580C  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 27621  015810  0012               	return	
 27622  015812                     i2l1337:
 27623                           
 27624                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 27625  015812  5055               	movf	i2fround@prec,w,c
 27626  015814  0D04               	mullw	4
 27627  015816  0EF1               	movlw	low __npowers_
 27628  015818  24F3               	addwf	prodl,w,c
 27629  01581A  6EF6               	movwf	tblptrl,c
 27630  01581C  0EEB               	movlw	high __npowers_
 27631  01581E  20F4               	addwfc	prodh,w,c
 27632  015820  6EF7               	movwf	tblptrh,c
 27633  015822                     	if	1	;There are 3 active tblptr bytes
 27634  015822  6AF8               	clrf	tblptru,c
 27635  015824  0E00               	movlw	low (__mediumconst shr (0+16))
 27636  015826  22F8               	addwfc	tblptru,f,c
 27637  015828                     	endif
 27638  015828  0009               	tblrd		*+
 27639  01582A  CFF5 F030          	movff	tablat,i2___flmul@b
 27640  01582E  0009               	tblrd		*+
 27641  015830  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27642  015834  0009               	tblrd		*+
 27643  015836  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27644  01583A  000A               	tblrd		*-
 27645  01583C  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27646  015840  0E00               	movlw	0
 27647  015842  6E34               	movwf	i2___flmul@a,c
 27648  015844  0E00               	movlw	0
 27649  015846  6E35               	movwf	i2___flmul@a+1,c
 27650  015848  0E00               	movlw	0
 27651  01584A  6E36               	movwf	i2___flmul@a+2,c
 27652  01584C  0E3F               	movlw	63
 27653  01584E  6E37               	movwf	i2___flmul@a+3,c
 27654  015850  EC7B  F09D         	call	i2___flmul	;wreg free
 27655  015854  C030  F049         	movff	?i2___flmul,?i2_fround
 27656  015858  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 27657  01585C  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 27658  015860  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 27659  015864  0012               	return	
 27660  015866                     __end_ofi2_fround:
 27661                           	opt stack 0
 27662                           tosu	equ	0xFFF
 27663                           tosh	equ	0xFFE
 27664                           tosl	equ	0xFFD
 27665                           pclatu	equ	0xFFB
 27666                           pclath	equ	0xFFA
 27667                           tblptru	equ	0xFF8
 27668                           tblptrh	equ	0xFF7
 27669                           tblptrl	equ	0xFF6
 27670                           tablat	equ	0xFF5
 27671                           prodh	equ	0xFF4
 27672                           prodl	equ	0xFF3
 27673                           intcon	equ	0xFF2
 27674                           indf0	equ	0xFEF
 27675                           postinc0	equ	0xFEE
 27676                           fsr0h	equ	0xFEA
 27677                           fsr0l	equ	0xFE9
 27678                           wreg	equ	0xFE8
 27679                           indf1	equ	0xFE7
 27680                           postdec1	equ	0xFE5
 27681                           plusw1	equ	0xFE3
 27682                           fsr1h	equ	0xFE2
 27683                           fsr1l	equ	0xFE1
 27684                           bsr	equ	0xFE0
 27685                           indf2	equ	0xFDF
 27686                           postinc2	equ	0xFDE
 27687                           postdec2	equ	0xFDD
 27688                           plusw2	equ	0xFDB
 27689                           fsr2h	equ	0xFDA
 27690                           fsr2l	equ	0xFD9
 27691                           status	equ	0xFD8
 27692                           
 27693 ;; *************** function i2___awmod *****************
 27694 ;; Defined at:
 27695 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 27696 ;; Parameters:    Size  Location     Type
 27697 ;;  dividend        2    0[COMRAM] int 
 27698 ;;  divisor         2    2[COMRAM] int 
 27699 ;; Auto vars:     Size  Location     Type
 27700 ;;  __awmod         1    5[COMRAM] unsigned char 
 27701 ;;  __awmod         1    4[COMRAM] unsigned char 
 27702 ;; Return value:  Size  Location     Type
 27703 ;;                  2    0[COMRAM] int 
 27704 ;; Registers used:
 27705 ;;		wreg, status,2, status,0
 27706 ;; Tracked objects:
 27707 ;;		On entry : 0/0
 27708 ;;		On exit  : 0/0
 27709 ;;		Unchanged: 0/0
 27710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27714 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27715 ;;Total ram usage:        6 bytes
 27716 ;; Hardware stack levels used:    1
 27717 ;; This function calls:
 27718 ;;		Nothing
 27719 ;; This function is called by:
 27720 ;;		i2_fround
 27721 ;;		i2_scale
 27722 ;; This function uses a non-reentrant model
 27723 ;;
 27724                           
 27725                           	psect	text91
 27726  0174B6                     __ptext91:
 27727                           	opt stack 0
 27728  0174B6                     i2___awmod:
 27729                           	opt stack 15
 27730                           
 27731                           ;incstack = 0
 27732  0174B6  0E00               	movlw	0
 27733  0174B8  6E06               	movwf	i2___awmod@sign,c
 27734  0174BA  AE02               	btfss	i2___awmod@dividend+1,7,c
 27735  0174BC  D006               	goto	i2l1679
 27736  0174BE  6C01               	negf	i2___awmod@dividend,c
 27737  0174C0  1E02               	comf	i2___awmod@dividend+1,f,c
 27738  0174C2  B0D8               	btfsc	status,0,c
 27739  0174C4  2A02               	incf	i2___awmod@dividend+1,f,c
 27740  0174C6  0E01               	movlw	1
 27741  0174C8  6E06               	movwf	i2___awmod@sign,c
 27742  0174CA                     i2l1679:
 27743  0174CA  AE04               	btfss	i2___awmod@divisor+1,7,c
 27744  0174CC  D004               	goto	i2l1680
 27745  0174CE  6C03               	negf	i2___awmod@divisor,c
 27746  0174D0  1E04               	comf	i2___awmod@divisor+1,f,c
 27747  0174D2  B0D8               	btfsc	status,0,c
 27748  0174D4  2A04               	incf	i2___awmod@divisor+1,f,c
 27749  0174D6                     i2l1680:
 27750  0174D6  5003               	movf	i2___awmod@divisor,w,c
 27751  0174D8  1004               	iorwf	i2___awmod@divisor+1,w,c
 27752  0174DA  B4D8               	btfsc	status,2,c
 27753  0174DC  D018               	goto	i2l1687
 27754  0174DE  0E01               	movlw	1
 27755  0174E0  6E05               	movwf	i2___awmod@counter,c
 27756  0174E2  D004               	goto	i2l1682
 27757  0174E4  90D8               	bcf	status,0,c
 27758  0174E6  3603               	rlcf	i2___awmod@divisor,f,c
 27759  0174E8  3604               	rlcf	i2___awmod@divisor+1,f,c
 27760  0174EA  2A05               	incf	i2___awmod@counter,f,c
 27761  0174EC                     i2l1682:
 27762  0174EC  AE04               	btfss	i2___awmod@divisor+1,7,c
 27763  0174EE  D7FA               	goto	i2l1683
 27764  0174F0                     i2u1482_40:
 27765  0174F0  5003               	movf	i2___awmod@divisor,w,c
 27766  0174F2  5C01               	subwf	i2___awmod@dividend,w,c
 27767  0174F4  5004               	movf	i2___awmod@divisor+1,w,c
 27768  0174F6  5802               	subwfb	i2___awmod@dividend+1,w,c
 27769  0174F8  A0D8               	btfss	status,0,c
 27770  0174FA  D004               	goto	i2l1686
 27771  0174FC  5003               	movf	i2___awmod@divisor,w,c
 27772  0174FE  5E01               	subwf	i2___awmod@dividend,f,c
 27773  017500  5004               	movf	i2___awmod@divisor+1,w,c
 27774  017502  5A02               	subwfb	i2___awmod@dividend+1,f,c
 27775  017504                     i2l1686:
 27776  017504  90D8               	bcf	status,0,c
 27777  017506  3204               	rrcf	i2___awmod@divisor+1,f,c
 27778  017508  3203               	rrcf	i2___awmod@divisor,f,c
 27779  01750A  2E05               	decfsz	i2___awmod@counter,f,c
 27780  01750C  D7F1               	goto	i2u1482_40
 27781  01750E                     i2l1687:
 27782  01750E  5006               	movf	i2___awmod@sign,w,c
 27783  017510  B4D8               	btfsc	status,2,c
 27784  017512  D004               	goto	i2l1688
 27785  017514  6C01               	negf	i2___awmod@dividend,c
 27786  017516  1E02               	comf	i2___awmod@dividend+1,f,c
 27787  017518  B0D8               	btfsc	status,0,c
 27788  01751A  2A02               	incf	i2___awmod@dividend+1,f,c
 27789  01751C                     i2l1688:
 27790  01751C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 27791  017520  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 27792  017524  0012               	return	
 27793  017526                     __end_ofi2___awmod:
 27794                           	opt stack 0
 27795                           tosu	equ	0xFFF
 27796                           tosh	equ	0xFFE
 27797                           tosl	equ	0xFFD
 27798                           pclatu	equ	0xFFB
 27799                           pclath	equ	0xFFA
 27800                           tblptru	equ	0xFF8
 27801                           tblptrh	equ	0xFF7
 27802                           tblptrl	equ	0xFF6
 27803                           tablat	equ	0xFF5
 27804                           prodh	equ	0xFF4
 27805                           prodl	equ	0xFF3
 27806                           intcon	equ	0xFF2
 27807                           indf0	equ	0xFEF
 27808                           postinc0	equ	0xFEE
 27809                           fsr0h	equ	0xFEA
 27810                           fsr0l	equ	0xFE9
 27811                           wreg	equ	0xFE8
 27812                           indf1	equ	0xFE7
 27813                           postdec1	equ	0xFE5
 27814                           plusw1	equ	0xFE3
 27815                           fsr1h	equ	0xFE2
 27816                           fsr1l	equ	0xFE1
 27817                           bsr	equ	0xFE0
 27818                           indf2	equ	0xFDF
 27819                           postinc2	equ	0xFDE
 27820                           postdec2	equ	0xFDD
 27821                           plusw2	equ	0xFDB
 27822                           fsr2h	equ	0xFDA
 27823                           fsr2l	equ	0xFD9
 27824                           status	equ	0xFD8
 27825                           
 27826 ;; *************** function i2___awdiv *****************
 27827 ;; Defined at:
 27828 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 27829 ;; Parameters:    Size  Location     Type
 27830 ;;  dividend        2    6[COMRAM] int 
 27831 ;;  divisor         2    8[COMRAM] int 
 27832 ;; Auto vars:     Size  Location     Type
 27833 ;;  __awdiv         2   12[COMRAM] int 
 27834 ;;  __awdiv         1   11[COMRAM] unsigned char 
 27835 ;;  __awdiv         1   10[COMRAM] unsigned char 
 27836 ;; Return value:  Size  Location     Type
 27837 ;;                  2    6[COMRAM] int 
 27838 ;; Registers used:
 27839 ;;		wreg, status,2, status,0
 27840 ;; Tracked objects:
 27841 ;;		On entry : 0/0
 27842 ;;		On exit  : 0/0
 27843 ;;		Unchanged: 0/0
 27844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27846 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27848 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27849 ;;Total ram usage:        8 bytes
 27850 ;; Hardware stack levels used:    1
 27851 ;; This function calls:
 27852 ;;		Nothing
 27853 ;; This function is called by:
 27854 ;;		i2_fround
 27855 ;;		i2_scale
 27856 ;;		i2_printf
 27857 ;; This function uses a non-reentrant model
 27858 ;;
 27859                           
 27860                           	psect	text92
 27861  017148                     __ptext92:
 27862                           	opt stack 0
 27863  017148                     i2___awdiv:
 27864                           	opt stack 15
 27865                           
 27866                           ;incstack = 0
 27867  017148  0E00               	movlw	0
 27868  01714A  6E0C               	movwf	i2___awdiv@sign,c
 27869  01714C  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 27870  01714E  D006               	goto	i2l1666
 27871  017150  6C09               	negf	i2___awdiv@divisor,c
 27872  017152  1E0A               	comf	i2___awdiv@divisor+1,f,c
 27873  017154  B0D8               	btfsc	status,0,c
 27874  017156  2A0A               	incf	i2___awdiv@divisor+1,f,c
 27875  017158  0E01               	movlw	1
 27876  01715A  6E0C               	movwf	i2___awdiv@sign,c
 27877  01715C                     i2l1666:
 27878  01715C  AE08               	btfss	i2___awdiv@dividend+1,7,c
 27879  01715E  D006               	goto	i2l1667
 27880  017160  6C07               	negf	i2___awdiv@dividend,c
 27881  017162  1E08               	comf	i2___awdiv@dividend+1,f,c
 27882  017164  B0D8               	btfsc	status,0,c
 27883  017166  2A08               	incf	i2___awdiv@dividend+1,f,c
 27884  017168  0E01               	movlw	1
 27885  01716A  1A0C               	xorwf	i2___awdiv@sign,f,c
 27886  01716C                     i2l1667:
 27887  01716C  0E00               	movlw	0
 27888  01716E  6E0E               	movwf	i2___awdiv@quotient+1,c
 27889  017170  0E00               	movlw	0
 27890  017172  6E0D               	movwf	i2___awdiv@quotient,c
 27891  017174  5009               	movf	i2___awdiv@divisor,w,c
 27892  017176  100A               	iorwf	i2___awdiv@divisor+1,w,c
 27893  017178  B4D8               	btfsc	status,2,c
 27894  01717A  D01C               	goto	i2l1674
 27895  01717C  0E01               	movlw	1
 27896  01717E  6E0B               	movwf	i2___awdiv@counter,c
 27897  017180  D004               	goto	i2l1669
 27898  017182  90D8               	bcf	status,0,c
 27899  017184  3609               	rlcf	i2___awdiv@divisor,f,c
 27900  017186  360A               	rlcf	i2___awdiv@divisor+1,f,c
 27901  017188  2A0B               	incf	i2___awdiv@counter,f,c
 27902  01718A                     i2l1669:
 27903  01718A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 27904  01718C  D7FA               	goto	i2l1670
 27905  01718E                     i2u1476_40:
 27906  01718E  90D8               	bcf	status,0,c
 27907  017190  360D               	rlcf	i2___awdiv@quotient,f,c
 27908  017192  360E               	rlcf	i2___awdiv@quotient+1,f,c
 27909  017194  5009               	movf	i2___awdiv@divisor,w,c
 27910  017196  5C07               	subwf	i2___awdiv@dividend,w,c
 27911  017198  500A               	movf	i2___awdiv@divisor+1,w,c
 27912  01719A  5808               	subwfb	i2___awdiv@dividend+1,w,c
 27913  01719C  A0D8               	btfss	status,0,c
 27914  01719E  D005               	goto	i2l1673
 27915  0171A0  5009               	movf	i2___awdiv@divisor,w,c
 27916  0171A2  5E07               	subwf	i2___awdiv@dividend,f,c
 27917  0171A4  500A               	movf	i2___awdiv@divisor+1,w,c
 27918  0171A6  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 27919  0171A8  800D               	bsf	i2___awdiv@quotient,0,c
 27920  0171AA                     i2l1673:
 27921  0171AA  90D8               	bcf	status,0,c
 27922  0171AC  320A               	rrcf	i2___awdiv@divisor+1,f,c
 27923  0171AE  3209               	rrcf	i2___awdiv@divisor,f,c
 27924  0171B0  2E0B               	decfsz	i2___awdiv@counter,f,c
 27925  0171B2  D7ED               	goto	i2u1476_40
 27926  0171B4                     i2l1674:
 27927  0171B4  500C               	movf	i2___awdiv@sign,w,c
 27928  0171B6  B4D8               	btfsc	status,2,c
 27929  0171B8  D004               	goto	i2l1675
 27930  0171BA  6C0D               	negf	i2___awdiv@quotient,c
 27931  0171BC  1E0E               	comf	i2___awdiv@quotient+1,f,c
 27932  0171BE  B0D8               	btfsc	status,0,c
 27933  0171C0  2A0E               	incf	i2___awdiv@quotient+1,f,c
 27934  0171C2                     i2l1675:
 27935  0171C2  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 27936  0171C6  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 27937  0171CA  0012               	return	
 27938  0171CC                     __end_ofi2___awdiv:
 27939                           	opt stack 0
 27940                           tosu	equ	0xFFF
 27941                           tosh	equ	0xFFE
 27942                           tosl	equ	0xFFD
 27943                           pclatu	equ	0xFFB
 27944                           pclath	equ	0xFFA
 27945                           tblptru	equ	0xFF8
 27946                           tblptrh	equ	0xFF7
 27947                           tblptrl	equ	0xFF6
 27948                           tablat	equ	0xFF5
 27949                           prodh	equ	0xFF4
 27950                           prodl	equ	0xFF3
 27951                           intcon	equ	0xFF2
 27952                           indf0	equ	0xFEF
 27953                           postinc0	equ	0xFEE
 27954                           fsr0h	equ	0xFEA
 27955                           fsr0l	equ	0xFE9
 27956                           wreg	equ	0xFE8
 27957                           indf1	equ	0xFE7
 27958                           postdec1	equ	0xFE5
 27959                           plusw1	equ	0xFE3
 27960                           fsr1h	equ	0xFE2
 27961                           fsr1l	equ	0xFE1
 27962                           bsr	equ	0xFE0
 27963                           indf2	equ	0xFDF
 27964                           postinc2	equ	0xFDE
 27965                           postdec2	equ	0xFDD
 27966                           plusw2	equ	0xFDB
 27967                           fsr2h	equ	0xFDA
 27968                           fsr2l	equ	0xFD9
 27969                           status	equ	0xFD8
 27970                           
 27971 ;; *************** function i2__tdiv_to_l_ *****************
 27972 ;; Defined at:
 27973 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 27974 ;; Parameters:    Size  Location     Type
 27975 ;;  f1              3    0[COMRAM] float 
 27976 ;;  f2              3    3[COMRAM] float 
 27977 ;; Auto vars:     Size  Location     Type
 27978 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 27979 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 27980 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 27981 ;; Return value:  Size  Location     Type
 27982 ;;                  4    0[COMRAM] unsigned long 
 27983 ;; Registers used:
 27984 ;;		wreg, status,2, status,0
 27985 ;; Tracked objects:
 27986 ;;		On entry : 0/0
 27987 ;;		On exit  : 0/0
 27988 ;;		Unchanged: 0/0
 27989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27990 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27991 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27992 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27993 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27994 ;;Total ram usage:       15 bytes
 27995 ;; Hardware stack levels used:    1
 27996 ;; This function calls:
 27997 ;;		Nothing
 27998 ;; This function is called by:
 27999 ;;		i2_printf
 28000 ;; This function uses a non-reentrant model
 28001 ;;
 28002                           
 28003                           	psect	text93
 28004  0160BE                     __ptext93:
 28005                           	opt stack 0
 28006  0160BE                     i2__tdiv_to_l_:
 28007                           	opt stack 16
 28008                           
 28009                           ;incstack = 0
 28010  0160BE  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 28011  0160C2  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 28012  0160C4  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 28013  0160C6  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 28014  0160C8  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 28015  0160CA  E301               	bnc	u1537_41
 28016  0160CC  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 28017  0160CE                     u1537_41:
 28018  0160CE  5007               	movf	??i2__tdiv_to_l_,w,c
 28019  0160D0  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 28020  0160D2  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28021  0160D4  A4D8               	btfss	status,2,c
 28022  0160D6  D009               	goto	i2l1814
 28023  0160D8  0E00               	movlw	0
 28024  0160DA  6E01               	movwf	?i2__tdiv_to_l_,c
 28025  0160DC  0E00               	movlw	0
 28026  0160DE  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28027  0160E0  0E00               	movlw	0
 28028  0160E2  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28029  0160E4  0E00               	movlw	0
 28030  0160E6  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28031  0160E8  0012               	return	
 28032  0160EA                     i2l1814:
 28033  0160EA  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 28034  0160EE  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 28035  0160F0  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 28036  0160F2  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 28037  0160F4  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 28038  0160F6  E301               	bnc	u1539_41
 28039  0160F8  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 28040  0160FA                     u1539_41:
 28041  0160FA  5007               	movf	??i2__tdiv_to_l_,w,c
 28042  0160FC  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 28043  0160FE  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 28044  016100  A4D8               	btfss	status,2,c
 28045  016102  D009               	goto	i2l1816
 28046  016104  0E00               	movlw	0
 28047  016106  6E01               	movwf	?i2__tdiv_to_l_,c
 28048  016108  0E00               	movlw	0
 28049  01610A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28050  01610C  0E00               	movlw	0
 28051  01610E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28052  016110  0E00               	movlw	0
 28053  016112  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28054  016114  0012               	return	
 28055  016116                     i2l1816:
 28056  016116  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 28057  016118  0EFF               	movlw	255
 28058  01611A  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 28059  01611C  0EFF               	movlw	255
 28060  01611E  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 28061  016120  0E00               	movlw	0
 28062  016122  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 28063  016124  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 28064  016126  0EFF               	movlw	255
 28065  016128  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 28066  01612A  0EFF               	movlw	255
 28067  01612C  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 28068  01612E  0E00               	movlw	0
 28069  016130  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 28070  016132  0E00               	movlw	0
 28071  016134  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 28072  016136  0E00               	movlw	0
 28073  016138  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 28074  01613A  0E00               	movlw	0
 28075  01613C  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 28076  01613E  0E00               	movlw	0
 28077  016140  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 28078  016142  0E7F               	movlw	127
 28079  016144  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 28080  016146  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 28081  016148  0F98               	addlw	152
 28082  01614A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 28083  01614C  0E18               	movlw	24
 28084  01614E  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 28085  016150                     i2l1817:
 28086  016150  90D8               	bcf	status,0,c
 28087  016152  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 28088  016154  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 28089  016156  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 28090  016158  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 28091  01615A  5004               	movf	i2__tdiv_to_l_@f2,w,c
 28092  01615C  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 28093  01615E  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 28094  016160  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 28095  016162  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 28096  016164  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 28097  016166  A0D8               	btfss	status,0,c
 28098  016168  D007               	goto	i2l1818
 28099  01616A  5004               	movf	i2__tdiv_to_l_@f2,w,c
 28100  01616C  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 28101  01616E  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 28102  016170  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 28103  016172  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 28104  016174  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 28105  016176  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 28106  016178                     i2l1818:
 28107  016178  90D8               	bcf	status,0,c
 28108  01617A  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 28109  01617C  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 28110  01617E  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 28111  016180  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 28112  016182  D7E6               	goto	i2l1817
 28113  016184  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 28114  016186  D016               	goto	i2l1820
 28115  016188  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28116  01618A  0A80               	xorlw	128
 28117  01618C  0F97               	addlw	151
 28118  01618E  B0D8               	btfsc	status,0,c
 28119  016190  D009               	goto	i2l1821
 28120  016192  0E00               	movlw	0
 28121  016194  6E01               	movwf	?i2__tdiv_to_l_,c
 28122  016196  0E00               	movlw	0
 28123  016198  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28124  01619A  0E00               	movlw	0
 28125  01619C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28126  01619E  0E00               	movlw	0
 28127  0161A0  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28128  0161A2  0012               	return	
 28129  0161A4                     i2l1821:
 28130  0161A4  90D8               	bcf	status,0,c
 28131  0161A6  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 28132  0161A8  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 28133  0161AA  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 28134  0161AC  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 28135  0161AE  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 28136  0161B0  D7F9               	goto	i2l1821
 28137  0161B2  D015               	goto	i2u1545_40
 28138  0161B4                     i2l1820:
 28139  0161B4  0E17               	movlw	23
 28140  0161B6  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 28141  0161B8  D00F               	goto	i2l1826
 28142  0161BA  0E00               	movlw	0
 28143  0161BC  6E01               	movwf	?i2__tdiv_to_l_,c
 28144  0161BE  0E00               	movlw	0
 28145  0161C0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28146  0161C2  0E00               	movlw	0
 28147  0161C4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28148  0161C6  0E00               	movlw	0
 28149  0161C8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28150  0161CA  0012               	return	
 28151  0161CC  90D8               	bcf	status,0,c
 28152  0161CE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 28153  0161D0  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 28154  0161D2  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 28155  0161D4  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 28156  0161D6  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 28157  0161D8                     i2l1826:
 28158  0161D8  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28159  0161DA  A4D8               	btfss	status,2,c
 28160  0161DC  D7F7               	goto	i2l1827
 28161  0161DE                     i2u1545_40:
 28162  0161DE  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 28163  0161E2  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 28164  0161E6  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 28165  0161EA  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 28166  0161EE  0012               	return		;funcret
 28167  0161F0                     __end_ofi2__tdiv_to_l_:
 28168                           	opt stack 0
 28169                           tosu	equ	0xFFF
 28170                           tosh	equ	0xFFE
 28171                           tosl	equ	0xFFD
 28172                           pclatu	equ	0xFFB
 28173                           pclath	equ	0xFFA
 28174                           tblptru	equ	0xFF8
 28175                           tblptrh	equ	0xFF7
 28176                           tblptrl	equ	0xFF6
 28177                           tablat	equ	0xFF5
 28178                           prodh	equ	0xFF4
 28179                           prodl	equ	0xFF3
 28180                           intcon	equ	0xFF2
 28181                           indf0	equ	0xFEF
 28182                           postinc0	equ	0xFEE
 28183                           fsr0h	equ	0xFEA
 28184                           fsr0l	equ	0xFE9
 28185                           wreg	equ	0xFE8
 28186                           indf1	equ	0xFE7
 28187                           postdec1	equ	0xFE5
 28188                           plusw1	equ	0xFE3
 28189                           fsr1h	equ	0xFE2
 28190                           fsr1l	equ	0xFE1
 28191                           bsr	equ	0xFE0
 28192                           indf2	equ	0xFDF
 28193                           postinc2	equ	0xFDE
 28194                           postdec2	equ	0xFDD
 28195                           plusw2	equ	0xFDB
 28196                           fsr2h	equ	0xFDA
 28197                           fsr2l	equ	0xFD9
 28198                           status	equ	0xFD8
 28199                           
 28200 ;; *************** function i2__div_to_l_ *****************
 28201 ;; Defined at:
 28202 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 28203 ;; Parameters:    Size  Location     Type
 28204 ;;  f1              4    0[COMRAM] unsigned long 
 28205 ;;  f2              4    4[COMRAM] unsigned long 
 28206 ;; Auto vars:     Size  Location     Type
 28207 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 28208 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 28209 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 28210 ;; Return value:  Size  Location     Type
 28211 ;;                  4    0[COMRAM] unsigned long 
 28212 ;; Registers used:
 28213 ;;		wreg, status,2, status,0
 28214 ;; Tracked objects:
 28215 ;;		On entry : 0/0
 28216 ;;		On exit  : 0/0
 28217 ;;		Unchanged: 0/0
 28218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28219 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28220 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28222 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28223 ;;Total ram usage:       14 bytes
 28224 ;; Hardware stack levels used:    1
 28225 ;; This function calls:
 28226 ;;		Nothing
 28227 ;; This function is called by:
 28228 ;;		i2_printf
 28229 ;; This function uses a non-reentrant model
 28230 ;;
 28231                           
 28232                           	psect	text94
 28233  01631A                     __ptext94:
 28234                           	opt stack 0
 28235  01631A                     i2__div_to_l_:
 28236                           	opt stack 16
 28237                           
 28238                           ;incstack = 0
 28239  01631A  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 28240  01631C  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 28241  01631E  6E0E               	movwf	i2__div_to_l_@exp1,c
 28242  016320  500E               	movf	i2__div_to_l_@exp1,w,c
 28243  016322  A4D8               	btfss	status,2,c
 28244  016324  D009               	goto	i2l1710
 28245  016326  0E00               	movlw	0
 28246  016328  6E01               	movwf	?i2__div_to_l_,c
 28247  01632A  0E00               	movlw	0
 28248  01632C  6E02               	movwf	?i2__div_to_l_+1,c
 28249  01632E  0E00               	movlw	0
 28250  016330  6E03               	movwf	?i2__div_to_l_+2,c
 28251  016332  0E00               	movlw	0
 28252  016334  6E04               	movwf	?i2__div_to_l_+3,c
 28253  016336  0012               	return	
 28254  016338                     i2l1710:
 28255  016338  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 28256  01633A  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 28257  01633C  6E0D               	movwf	i2__div_to_l_@cntr,c
 28258  01633E  500D               	movf	i2__div_to_l_@cntr,w,c
 28259  016340  A4D8               	btfss	status,2,c
 28260  016342  D009               	goto	i2l1712
 28261  016344  0E00               	movlw	0
 28262  016346  6E01               	movwf	?i2__div_to_l_,c
 28263  016348  0E00               	movlw	0
 28264  01634A  6E02               	movwf	?i2__div_to_l_+1,c
 28265  01634C  0E00               	movlw	0
 28266  01634E  6E03               	movwf	?i2__div_to_l_+2,c
 28267  016350  0E00               	movlw	0
 28268  016352  6E04               	movwf	?i2__div_to_l_+3,c
 28269  016354  0012               	return	
 28270  016356                     i2l1712:
 28271  016356  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 28272  016358  0EFF               	movlw	255
 28273  01635A  1601               	andwf	i2__div_to_l_@f1,f,c
 28274  01635C  0EFF               	movlw	255
 28275  01635E  1602               	andwf	i2__div_to_l_@f1+1,f,c
 28276  016360  0EFF               	movlw	255
 28277  016362  1603               	andwf	i2__div_to_l_@f1+2,f,c
 28278  016364  0E00               	movlw	0
 28279  016366  1604               	andwf	i2__div_to_l_@f1+3,f,c
 28280  016368  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 28281  01636A  0EFF               	movlw	255
 28282  01636C  1605               	andwf	i2__div_to_l_@f2,f,c
 28283  01636E  0EFF               	movlw	255
 28284  016370  1606               	andwf	i2__div_to_l_@f2+1,f,c
 28285  016372  0EFF               	movlw	255
 28286  016374  1607               	andwf	i2__div_to_l_@f2+2,f,c
 28287  016376  0E00               	movlw	0
 28288  016378  1608               	andwf	i2__div_to_l_@f2+3,f,c
 28289  01637A  0E00               	movlw	0
 28290  01637C  6E09               	movwf	i2__div_to_l_@quot,c
 28291  01637E  0E00               	movlw	0
 28292  016380  6E0A               	movwf	i2__div_to_l_@quot+1,c
 28293  016382  0E00               	movlw	0
 28294  016384  6E0B               	movwf	i2__div_to_l_@quot+2,c
 28295  016386  0E00               	movlw	0
 28296  016388  6E0C               	movwf	i2__div_to_l_@quot+3,c
 28297  01638A  0E7F               	movlw	127
 28298  01638C  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 28299  01638E  500D               	movf	i2__div_to_l_@cntr,w,c
 28300  016390  0FA0               	addlw	160
 28301  016392  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 28302  016394  0E20               	movlw	32
 28303  016396  6E0D               	movwf	i2__div_to_l_@cntr,c
 28304  016398  90D8               	bcf	status,0,c
 28305  01639A  3609               	rlcf	i2__div_to_l_@quot,f,c
 28306  01639C  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 28307  01639E  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 28308  0163A0  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 28309  0163A2  5005               	movf	i2__div_to_l_@f2,w,c
 28310  0163A4  5C01               	subwf	i2__div_to_l_@f1,w,c
 28311  0163A6  5006               	movf	i2__div_to_l_@f2+1,w,c
 28312  0163A8  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 28313  0163AA  5007               	movf	i2__div_to_l_@f2+2,w,c
 28314  0163AC  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 28315  0163AE  5008               	movf	i2__div_to_l_@f2+3,w,c
 28316  0163B0  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 28317  0163B2  A0D8               	btfss	status,0,c
 28318  0163B4  D009               	goto	i2l1714
 28319  0163B6  5005               	movf	i2__div_to_l_@f2,w,c
 28320  0163B8  5E01               	subwf	i2__div_to_l_@f1,f,c
 28321  0163BA  5006               	movf	i2__div_to_l_@f2+1,w,c
 28322  0163BC  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 28323  0163BE  5007               	movf	i2__div_to_l_@f2+2,w,c
 28324  0163C0  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 28325  0163C2  5008               	movf	i2__div_to_l_@f2+3,w,c
 28326  0163C4  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 28327  0163C6  8009               	bsf	i2__div_to_l_@quot,0,c
 28328  0163C8                     i2l1714:
 28329  0163C8  90D8               	bcf	status,0,c
 28330  0163CA  3601               	rlcf	i2__div_to_l_@f1,f,c
 28331  0163CC  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 28332  0163CE  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 28333  0163D0  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 28334  0163D2  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 28335  0163D4  D7E1               	goto	i2l1713
 28336  0163D6  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 28337  0163D8  D016               	goto	i2l1716
 28338  0163DA  500E               	movf	i2__div_to_l_@exp1,w,c
 28339  0163DC  0A80               	xorlw	128
 28340  0163DE  0F9F               	addlw	159
 28341  0163E0  B0D8               	btfsc	status,0,c
 28342  0163E2  D009               	goto	i2l1717
 28343  0163E4  0E00               	movlw	0
 28344  0163E6  6E01               	movwf	?i2__div_to_l_,c
 28345  0163E8  0E00               	movlw	0
 28346  0163EA  6E02               	movwf	?i2__div_to_l_+1,c
 28347  0163EC  0E00               	movlw	0
 28348  0163EE  6E03               	movwf	?i2__div_to_l_+2,c
 28349  0163F0  0E00               	movlw	0
 28350  0163F2  6E04               	movwf	?i2__div_to_l_+3,c
 28351  0163F4  0012               	return	
 28352  0163F6                     i2l1717:
 28353  0163F6  90D8               	bcf	status,0,c
 28354  0163F8  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 28355  0163FA  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 28356  0163FC  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 28357  0163FE  3209               	rrcf	i2__div_to_l_@quot,f,c
 28358  016400  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 28359  016402  D7F9               	goto	i2l1717
 28360  016404  D015               	goto	i2u1536_40
 28361  016406                     i2l1716:
 28362  016406  0E1F               	movlw	31
 28363  016408  640E               	cpfsgt	i2__div_to_l_@exp1,c
 28364  01640A  D00F               	goto	i2l1722
 28365  01640C  0E00               	movlw	0
 28366  01640E  6E01               	movwf	?i2__div_to_l_,c
 28367  016410  0E00               	movlw	0
 28368  016412  6E02               	movwf	?i2__div_to_l_+1,c
 28369  016414  0E00               	movlw	0
 28370  016416  6E03               	movwf	?i2__div_to_l_+2,c
 28371  016418  0E00               	movlw	0
 28372  01641A  6E04               	movwf	?i2__div_to_l_+3,c
 28373  01641C  0012               	return	
 28374  01641E  90D8               	bcf	status,0,c
 28375  016420  3609               	rlcf	i2__div_to_l_@quot,f,c
 28376  016422  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 28377  016424  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 28378  016426  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 28379  016428  060E               	decf	i2__div_to_l_@exp1,f,c
 28380  01642A                     i2l1722:
 28381  01642A  500E               	movf	i2__div_to_l_@exp1,w,c
 28382  01642C  A4D8               	btfss	status,2,c
 28383  01642E  D7F7               	goto	i2l1723
 28384  016430                     i2u1536_40:
 28385  016430  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 28386  016434  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 28387  016438  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 28388  01643C  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 28389  016440  0012               	return		;funcret
 28390  016442                     __end_ofi2__div_to_l_:
 28391                           	opt stack 0
 28392                           tosu	equ	0xFFF
 28393                           tosh	equ	0xFFE
 28394                           tosl	equ	0xFFD
 28395                           pclatu	equ	0xFFB
 28396                           pclath	equ	0xFFA
 28397                           tblptru	equ	0xFF8
 28398                           tblptrh	equ	0xFF7
 28399                           tblptrl	equ	0xFF6
 28400                           tablat	equ	0xFF5
 28401                           prodh	equ	0xFF4
 28402                           prodl	equ	0xFF3
 28403                           intcon	equ	0xFF2
 28404                           indf0	equ	0xFEF
 28405                           postinc0	equ	0xFEE
 28406                           fsr0h	equ	0xFEA
 28407                           fsr0l	equ	0xFE9
 28408                           wreg	equ	0xFE8
 28409                           indf1	equ	0xFE7
 28410                           postdec1	equ	0xFE5
 28411                           plusw1	equ	0xFE3
 28412                           fsr1h	equ	0xFE2
 28413                           fsr1l	equ	0xFE1
 28414                           bsr	equ	0xFE0
 28415                           indf2	equ	0xFDF
 28416                           postinc2	equ	0xFDE
 28417                           postdec2	equ	0xFDD
 28418                           plusw2	equ	0xFDB
 28419                           fsr2h	equ	0xFDA
 28420                           fsr2l	equ	0xFD9
 28421                           status	equ	0xFD8
 28422                           
 28423 ;; *************** function i2___wmul *****************
 28424 ;; Defined at:
 28425 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 28426 ;; Parameters:    Size  Location     Type
 28427 ;;  multiplier      2    0[COMRAM] unsigned int 
 28428 ;;  multiplicand    2    2[COMRAM] unsigned int 
 28429 ;; Auto vars:     Size  Location     Type
 28430 ;;  __wmul          2    4[COMRAM] unsigned int 
 28431 ;; Return value:  Size  Location     Type
 28432 ;;                  2    0[COMRAM] unsigned int 
 28433 ;; Registers used:
 28434 ;;		wreg, status,2, status,0, prodl, prodh
 28435 ;; Tracked objects:
 28436 ;;		On entry : 0/0
 28437 ;;		On exit  : 0/0
 28438 ;;		Unchanged: 0/0
 28439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28443 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28444 ;;Total ram usage:        6 bytes
 28445 ;; Hardware stack levels used:    1
 28446 ;; This function calls:
 28447 ;;		Nothing
 28448 ;; This function is called by:
 28449 ;;		i2_printf
 28450 ;; This function uses a non-reentrant model
 28451 ;;
 28452                           
 28453                           	psect	text95
 28454  017F46                     __ptext95:
 28455                           	opt stack 0
 28456  017F46                     i2___wmul:
 28457                           	opt stack 16
 28458                           
 28459                           ;incstack = 0
 28460  017F46  5001               	movf	i2___wmul@multiplier,w,c
 28461  017F48  0203               	mulwf	i2___wmul@multiplicand,c
 28462  017F4A  CFF3 F005          	movff	prodl,i2___wmul@product
 28463  017F4E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 28464  017F52  5001               	movf	i2___wmul@multiplier,w,c
 28465  017F54  0204               	mulwf	i2___wmul@multiplicand+1,c
 28466  017F56  50F3               	movf	prodl,w,c
 28467  017F58  2606               	addwf	i2___wmul@product+1,f,c
 28468  017F5A  5002               	movf	i2___wmul@multiplier+1,w,c
 28469  017F5C  0203               	mulwf	i2___wmul@multiplicand,c
 28470  017F5E  50F3               	movf	prodl,w,c
 28471  017F60  2606               	addwf	i2___wmul@product+1,f,c
 28472  017F62  C005  F001         	movff	i2___wmul@product,?i2___wmul
 28473  017F66  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 28474  017F6A  0012               	return	
 28475  017F6C                     __end_ofi2___wmul:
 28476                           	opt stack 0
 28477                           tosu	equ	0xFFF
 28478                           tosh	equ	0xFFE
 28479                           tosl	equ	0xFFD
 28480                           pclatu	equ	0xFFB
 28481                           pclath	equ	0xFFA
 28482                           tblptru	equ	0xFF8
 28483                           tblptrh	equ	0xFF7
 28484                           tblptrl	equ	0xFF6
 28485                           tablat	equ	0xFF5
 28486                           prodh	equ	0xFF4
 28487                           prodl	equ	0xFF3
 28488                           intcon	equ	0xFF2
 28489                           indf0	equ	0xFEF
 28490                           postinc0	equ	0xFEE
 28491                           fsr0h	equ	0xFEA
 28492                           fsr0l	equ	0xFE9
 28493                           wreg	equ	0xFE8
 28494                           indf1	equ	0xFE7
 28495                           postdec1	equ	0xFE5
 28496                           plusw1	equ	0xFE3
 28497                           fsr1h	equ	0xFE2
 28498                           fsr1l	equ	0xFE1
 28499                           bsr	equ	0xFE0
 28500                           indf2	equ	0xFDF
 28501                           postinc2	equ	0xFDE
 28502                           postdec2	equ	0xFDD
 28503                           plusw2	equ	0xFDB
 28504                           fsr2h	equ	0xFDA
 28505                           fsr2l	equ	0xFD9
 28506                           status	equ	0xFD8
 28507                           
 28508 ;; *************** function i2___llmod *****************
 28509 ;; Defined at:
 28510 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 28511 ;; Parameters:    Size  Location     Type
 28512 ;;  dividend        4   13[COMRAM] unsigned long 
 28513 ;;  divisor         4   17[COMRAM] unsigned long 
 28514 ;; Auto vars:     Size  Location     Type
 28515 ;;  __llmod         1   21[COMRAM] unsigned char 
 28516 ;; Return value:  Size  Location     Type
 28517 ;;                  4   13[COMRAM] unsigned long 
 28518 ;; Registers used:
 28519 ;;		wreg, status,2, status,0
 28520 ;; Tracked objects:
 28521 ;;		On entry : 0/0
 28522 ;;		On exit  : 0/0
 28523 ;;		Unchanged: 0/0
 28524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28525 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28528 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28529 ;;Total ram usage:        9 bytes
 28530 ;; Hardware stack levels used:    1
 28531 ;; This function calls:
 28532 ;;		Nothing
 28533 ;; This function is called by:
 28534 ;;		i2_printf
 28535 ;; This function uses a non-reentrant model
 28536 ;;
 28537                           
 28538                           	psect	text96
 28539  0176CE                     __ptext96:
 28540                           	opt stack 0
 28541  0176CE                     i2___llmod:
 28542                           	opt stack 16
 28543                           
 28544                           ;incstack = 0
 28545  0176CE  5012               	movf	i2___llmod@divisor,w,c
 28546  0176D0  1013               	iorwf	i2___llmod@divisor+1,w,c
 28547  0176D2  1014               	iorwf	i2___llmod@divisor+2,w,c
 28548  0176D4  1015               	iorwf	i2___llmod@divisor+3,w,c
 28549  0176D6  B4D8               	btfsc	status,2,c
 28550  0176D8  D024               	goto	i2l1915
 28551  0176DA  0E01               	movlw	1
 28552  0176DC  6E16               	movwf	i2___llmod@counter,c
 28553  0176DE  D006               	goto	i2l1910
 28554  0176E0  90D8               	bcf	status,0,c
 28555  0176E2  3612               	rlcf	i2___llmod@divisor,f,c
 28556  0176E4  3613               	rlcf	i2___llmod@divisor+1,f,c
 28557  0176E6  3614               	rlcf	i2___llmod@divisor+2,f,c
 28558  0176E8  3615               	rlcf	i2___llmod@divisor+3,f,c
 28559  0176EA  2A16               	incf	i2___llmod@counter,f,c
 28560  0176EC                     i2l1910:
 28561  0176EC  AE15               	btfss	i2___llmod@divisor+3,7,c
 28562  0176EE  D7F8               	goto	i2l1911
 28563  0176F0                     i2u1552_40:
 28564  0176F0  5012               	movf	i2___llmod@divisor,w,c
 28565  0176F2  5C0E               	subwf	i2___llmod@dividend,w,c
 28566  0176F4  5013               	movf	i2___llmod@divisor+1,w,c
 28567  0176F6  580F               	subwfb	i2___llmod@dividend+1,w,c
 28568  0176F8  5014               	movf	i2___llmod@divisor+2,w,c
 28569  0176FA  5810               	subwfb	i2___llmod@dividend+2,w,c
 28570  0176FC  5015               	movf	i2___llmod@divisor+3,w,c
 28571  0176FE  5811               	subwfb	i2___llmod@dividend+3,w,c
 28572  017700  A0D8               	btfss	status,0,c
 28573  017702  D008               	goto	i2l1914
 28574  017704  5012               	movf	i2___llmod@divisor,w,c
 28575  017706  5E0E               	subwf	i2___llmod@dividend,f,c
 28576  017708  5013               	movf	i2___llmod@divisor+1,w,c
 28577  01770A  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 28578  01770C  5014               	movf	i2___llmod@divisor+2,w,c
 28579  01770E  5A10               	subwfb	i2___llmod@dividend+2,f,c
 28580  017710  5015               	movf	i2___llmod@divisor+3,w,c
 28581  017712  5A11               	subwfb	i2___llmod@dividend+3,f,c
 28582  017714                     i2l1914:
 28583  017714  90D8               	bcf	status,0,c
 28584  017716  3215               	rrcf	i2___llmod@divisor+3,f,c
 28585  017718  3214               	rrcf	i2___llmod@divisor+2,f,c
 28586  01771A  3213               	rrcf	i2___llmod@divisor+1,f,c
 28587  01771C  3212               	rrcf	i2___llmod@divisor,f,c
 28588  01771E  2E16               	decfsz	i2___llmod@counter,f,c
 28589  017720  D7E7               	goto	i2u1552_40
 28590  017722                     i2l1915:
 28591  017722  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 28592  017726  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 28593  01772A  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 28594  01772E  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 28595  017732  0012               	return		;funcret
 28596  017734                     __end_ofi2___llmod:
 28597                           	opt stack 0
 28598                           tosu	equ	0xFFF
 28599                           tosh	equ	0xFFE
 28600                           tosl	equ	0xFFD
 28601                           pclatu	equ	0xFFB
 28602                           pclath	equ	0xFFA
 28603                           tblptru	equ	0xFF8
 28604                           tblptrh	equ	0xFF7
 28605                           tblptrl	equ	0xFF6
 28606                           tablat	equ	0xFF5
 28607                           prodh	equ	0xFF4
 28608                           prodl	equ	0xFF3
 28609                           intcon	equ	0xFF2
 28610                           indf0	equ	0xFEF
 28611                           postinc0	equ	0xFEE
 28612                           fsr0h	equ	0xFEA
 28613                           fsr0l	equ	0xFE9
 28614                           wreg	equ	0xFE8
 28615                           indf1	equ	0xFE7
 28616                           postdec1	equ	0xFE5
 28617                           plusw1	equ	0xFE3
 28618                           fsr1h	equ	0xFE2
 28619                           fsr1l	equ	0xFE1
 28620                           bsr	equ	0xFE0
 28621                           indf2	equ	0xFDF
 28622                           postinc2	equ	0xFDE
 28623                           postdec2	equ	0xFDD
 28624                           plusw2	equ	0xFDB
 28625                           fsr2h	equ	0xFDA
 28626                           fsr2l	equ	0xFD9
 28627                           status	equ	0xFD8
 28628                           
 28629 ;; *************** function i2___lldiv *****************
 28630 ;; Defined at:
 28631 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 28632 ;; Parameters:    Size  Location     Type
 28633 ;;  dividend        4    0[COMRAM] unsigned long 
 28634 ;;  divisor         4    4[COMRAM] unsigned long 
 28635 ;; Auto vars:     Size  Location     Type
 28636 ;;  __lldiv         4    8[COMRAM] unsigned long 
 28637 ;;  __lldiv         1   12[COMRAM] unsigned char 
 28638 ;; Return value:  Size  Location     Type
 28639 ;;                  4    0[COMRAM] unsigned long 
 28640 ;; Registers used:
 28641 ;;		wreg, status,2, status,0
 28642 ;; Tracked objects:
 28643 ;;		On entry : 0/0
 28644 ;;		On exit  : 0/0
 28645 ;;		Unchanged: 0/0
 28646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28647 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28648 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28650 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28651 ;;Total ram usage:       13 bytes
 28652 ;; Hardware stack levels used:    1
 28653 ;; This function calls:
 28654 ;;		Nothing
 28655 ;; This function is called by:
 28656 ;;		i2_printf
 28657 ;; This function uses a non-reentrant model
 28658 ;;
 28659                           
 28660                           	psect	text97
 28661  0171CC                     __ptext97:
 28662                           	opt stack 0
 28663  0171CC                     i2___lldiv:
 28664                           	opt stack 16
 28665                           
 28666                           ;incstack = 0
 28667  0171CC  0E00               	movlw	0
 28668  0171CE  6E09               	movwf	i2___lldiv@quotient,c
 28669  0171D0  0E00               	movlw	0
 28670  0171D2  6E0A               	movwf	i2___lldiv@quotient+1,c
 28671  0171D4  0E00               	movlw	0
 28672  0171D6  6E0B               	movwf	i2___lldiv@quotient+2,c
 28673  0171D8  0E00               	movlw	0
 28674  0171DA  6E0C               	movwf	i2___lldiv@quotient+3,c
 28675  0171DC  5005               	movf	i2___lldiv@divisor,w,c
 28676  0171DE  1006               	iorwf	i2___lldiv@divisor+1,w,c
 28677  0171E0  1007               	iorwf	i2___lldiv@divisor+2,w,c
 28678  0171E2  1008               	iorwf	i2___lldiv@divisor+3,w,c
 28679  0171E4  B4D8               	btfsc	status,2,c
 28680  0171E6  D02A               	goto	i2l1905
 28681  0171E8  0E01               	movlw	1
 28682  0171EA  6E0D               	movwf	i2___lldiv@counter,c
 28683  0171EC  D006               	goto	i2l1900
 28684  0171EE  90D8               	bcf	status,0,c
 28685  0171F0  3605               	rlcf	i2___lldiv@divisor,f,c
 28686  0171F2  3606               	rlcf	i2___lldiv@divisor+1,f,c
 28687  0171F4  3607               	rlcf	i2___lldiv@divisor+2,f,c
 28688  0171F6  3608               	rlcf	i2___lldiv@divisor+3,f,c
 28689  0171F8  2A0D               	incf	i2___lldiv@counter,f,c
 28690  0171FA                     i2l1900:
 28691  0171FA  AE08               	btfss	i2___lldiv@divisor+3,7,c
 28692  0171FC  D7F8               	goto	i2l1901
 28693  0171FE                     i2u1549_40:
 28694  0171FE  90D8               	bcf	status,0,c
 28695  017200  3609               	rlcf	i2___lldiv@quotient,f,c
 28696  017202  360A               	rlcf	i2___lldiv@quotient+1,f,c
 28697  017204  360B               	rlcf	i2___lldiv@quotient+2,f,c
 28698  017206  360C               	rlcf	i2___lldiv@quotient+3,f,c
 28699  017208  5005               	movf	i2___lldiv@divisor,w,c
 28700  01720A  5C01               	subwf	i2___lldiv@dividend,w,c
 28701  01720C  5006               	movf	i2___lldiv@divisor+1,w,c
 28702  01720E  5802               	subwfb	i2___lldiv@dividend+1,w,c
 28703  017210  5007               	movf	i2___lldiv@divisor+2,w,c
 28704  017212  5803               	subwfb	i2___lldiv@dividend+2,w,c
 28705  017214  5008               	movf	i2___lldiv@divisor+3,w,c
 28706  017216  5804               	subwfb	i2___lldiv@dividend+3,w,c
 28707  017218  A0D8               	btfss	status,0,c
 28708  01721A  D009               	goto	i2l1904
 28709  01721C  5005               	movf	i2___lldiv@divisor,w,c
 28710  01721E  5E01               	subwf	i2___lldiv@dividend,f,c
 28711  017220  5006               	movf	i2___lldiv@divisor+1,w,c
 28712  017222  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 28713  017224  5007               	movf	i2___lldiv@divisor+2,w,c
 28714  017226  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 28715  017228  5008               	movf	i2___lldiv@divisor+3,w,c
 28716  01722A  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 28717  01722C  8009               	bsf	i2___lldiv@quotient,0,c
 28718  01722E                     i2l1904:
 28719  01722E  90D8               	bcf	status,0,c
 28720  017230  3208               	rrcf	i2___lldiv@divisor+3,f,c
 28721  017232  3207               	rrcf	i2___lldiv@divisor+2,f,c
 28722  017234  3206               	rrcf	i2___lldiv@divisor+1,f,c
 28723  017236  3205               	rrcf	i2___lldiv@divisor,f,c
 28724  017238  2E0D               	decfsz	i2___lldiv@counter,f,c
 28725  01723A  D7E1               	goto	i2u1549_40
 28726  01723C                     i2l1905:
 28727  01723C  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 28728  017240  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 28729  017244  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 28730  017248  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 28731  01724C  0012               	return		;funcret
 28732  01724E                     __end_ofi2___lldiv:
 28733                           	opt stack 0
 28734                           tosu	equ	0xFFF
 28735                           tosh	equ	0xFFE
 28736                           tosl	equ	0xFFD
 28737                           pclatu	equ	0xFFB
 28738                           pclath	equ	0xFFA
 28739                           tblptru	equ	0xFF8
 28740                           tblptrh	equ	0xFF7
 28741                           tblptrl	equ	0xFF6
 28742                           tablat	equ	0xFF5
 28743                           prodh	equ	0xFF4
 28744                           prodl	equ	0xFF3
 28745                           intcon	equ	0xFF2
 28746                           indf0	equ	0xFEF
 28747                           postinc0	equ	0xFEE
 28748                           fsr0h	equ	0xFEA
 28749                           fsr0l	equ	0xFE9
 28750                           wreg	equ	0xFE8
 28751                           indf1	equ	0xFE7
 28752                           postdec1	equ	0xFE5
 28753                           plusw1	equ	0xFE3
 28754                           fsr1h	equ	0xFE2
 28755                           fsr1l	equ	0xFE1
 28756                           bsr	equ	0xFE0
 28757                           indf2	equ	0xFDF
 28758                           postinc2	equ	0xFDE
 28759                           postdec2	equ	0xFDD
 28760                           plusw2	equ	0xFDB
 28761                           fsr2h	equ	0xFDA
 28762                           fsr2l	equ	0xFD9
 28763                           status	equ	0xFD8
 28764                           
 28765 ;; *************** function _ADCC_ISR *****************
 28766 ;; Defined at:
 28767 ;;		line 297 in file "mcc_generated_files/adcc.c"
 28768 ;; Parameters:    Size  Location     Type
 28769 ;;		None
 28770 ;; Auto vars:     Size  Location     Type
 28771 ;;		None
 28772 ;; Return value:  Size  Location     Type
 28773 ;;                  1    wreg      void 
 28774 ;; Registers used:
 28775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28776 ;; Tracked objects:
 28777 ;;		On entry : 0/0
 28778 ;;		On exit  : 0/0
 28779 ;;		Unchanged: 0/0
 28780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28785 ;;Total ram usage:        0 bytes
 28786 ;; Hardware stack levels used:    1
 28787 ;; Hardware stack levels required when called:    7
 28788 ;; This function calls:
 28789 ;;		Absolute function
 28790 ;;		_ADCC_DefaultInterruptHandler
 28791 ;;		_ADCPostProcessingCallback
 28792 ;; This function is called by:
 28793 ;;		_INTERRUPT_InterruptManagerHigh
 28794 ;; This function uses a non-reentrant model
 28795 ;;
 28796                           
 28797                           	psect	text98
 28798  017ED2                     __ptext98:
 28799                           	opt stack 0
 28800  017ED2                     _ADCC_ISR:
 28801                           	opt stack 11
 28802                           
 28803                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 28804                           
 28805                           ;incstack = 0
 28806  017ED2  010E               	movlb	14	; () banked
 28807  017ED4  9134               	bcf	52,0,b	;volatile
 28808                           
 28809                           ; BSR set to: 14
 28810                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 28811  017ED6  0102               	movlb	2	; () banked
 28812  017ED8  5166               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28813  017EDA  1167               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28814  017EDC  1168               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28815  017EDE  B4D8               	btfsc	status,2,c
 28816  017EE0  0012               	return	
 28817                           
 28818                           ; BSR set to: 2
 28819                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 28820  017EE2  D801               	call	i2u1752_48
 28821  017EE4  0012               	return	
 28822  017EE6                     i2u1752_48:
 28823  017EE6  0005               	push	
 28824  017EE8  6EFA               	movwf	pclath,c
 28825  017EEA  5166               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28826  017EEC  6EFD               	movwf	tosl,c
 28827  017EEE  5167               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28828  017EF0  6EFE               	movwf	tosh,c
 28829  017EF2  5168               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28830  017EF4  6EFF               	movwf	tosu,c
 28831  017EF6  50FA               	movf	pclath,w,c
 28832  017EF8  0012               	return		;indir
 28833  017EFA                     __end_of_ADCC_ISR:
 28834                           	opt stack 0
 28835                           tosu	equ	0xFFF
 28836                           tosh	equ	0xFFE
 28837                           tosl	equ	0xFFD
 28838                           pclatu	equ	0xFFB
 28839                           pclath	equ	0xFFA
 28840                           tblptru	equ	0xFF8
 28841                           tblptrh	equ	0xFF7
 28842                           tblptrl	equ	0xFF6
 28843                           tablat	equ	0xFF5
 28844                           prodh	equ	0xFF4
 28845                           prodl	equ	0xFF3
 28846                           intcon	equ	0xFF2
 28847                           indf0	equ	0xFEF
 28848                           postinc0	equ	0xFEE
 28849                           fsr0h	equ	0xFEA
 28850                           fsr0l	equ	0xFE9
 28851                           wreg	equ	0xFE8
 28852                           indf1	equ	0xFE7
 28853                           postdec1	equ	0xFE5
 28854                           plusw1	equ	0xFE3
 28855                           fsr1h	equ	0xFE2
 28856                           fsr1l	equ	0xFE1
 28857                           bsr	equ	0xFE0
 28858                           indf2	equ	0xFDF
 28859                           postinc2	equ	0xFDE
 28860                           postdec2	equ	0xFDD
 28861                           plusw2	equ	0xFDB
 28862                           fsr2h	equ	0xFDA
 28863                           fsr2l	equ	0xFD9
 28864                           status	equ	0xFD8
 28865                           
 28866 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 28867 ;; Defined at:
 28868 ;;		line 310 in file "mcc_generated_files/adcc.c"
 28869 ;; Parameters:    Size  Location     Type
 28870 ;;		None
 28871 ;; Auto vars:     Size  Location     Type
 28872 ;;		None
 28873 ;; Return value:  Size  Location     Type
 28874 ;;                  1    wreg      void 
 28875 ;; Registers used:
 28876 ;;		None
 28877 ;; Tracked objects:
 28878 ;;		On entry : 0/0
 28879 ;;		On exit  : 0/0
 28880 ;;		Unchanged: 0/0
 28881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28886 ;;Total ram usage:        0 bytes
 28887 ;; Hardware stack levels used:    1
 28888 ;; This function calls:
 28889 ;;		Nothing
 28890 ;; This function is called by:
 28891 ;;		_ADCC_Initialize
 28892 ;;		_ADCC_ISR
 28893 ;; This function uses a non-reentrant model
 28894 ;;
 28895                           
 28896                           	psect	text99
 28897  01818C                     __ptext99:
 28898                           	opt stack 0
 28899  01818C                     _ADCC_DefaultInterruptHandler:
 28900                           	opt stack 17
 28901                           
 28902                           ;incstack = 0
 28903  01818C  0012               	return		;funcret
 28904  01818E                     __end_of_ADCC_DefaultInterruptHandler:
 28905                           	opt stack 0
 28906                           tosu	equ	0xFFF
 28907                           tosh	equ	0xFFE
 28908                           tosl	equ	0xFFD
 28909                           pclatu	equ	0xFFB
 28910                           pclath	equ	0xFFA
 28911                           tblptru	equ	0xFF8
 28912                           tblptrh	equ	0xFF7
 28913                           tblptrl	equ	0xFF6
 28914                           tablat	equ	0xFF5
 28915                           prodh	equ	0xFF4
 28916                           prodl	equ	0xFF3
 28917                           intcon	equ	0xFF2
 28918                           indf0	equ	0xFEF
 28919                           postinc0	equ	0xFEE
 28920                           fsr0h	equ	0xFEA
 28921                           fsr0l	equ	0xFE9
 28922                           wreg	equ	0xFE8
 28923                           indf1	equ	0xFE7
 28924                           postdec1	equ	0xFE5
 28925                           plusw1	equ	0xFE3
 28926                           fsr1h	equ	0xFE2
 28927                           fsr1l	equ	0xFE1
 28928                           bsr	equ	0xFE0
 28929                           indf2	equ	0xFDF
 28930                           postinc2	equ	0xFDE
 28931                           postdec2	equ	0xFDD
 28932                           plusw2	equ	0xFDB
 28933                           fsr2h	equ	0xFDA
 28934                           fsr2l	equ	0xFD9
 28935                           status	equ	0xFD8
 28936                           
 28937 ;; *************** function _ADCPostProcessingCallback *****************
 28938 ;; Defined at:
 28939 ;;		line 160 in file "main.c"
 28940 ;; Parameters:    Size  Location     Type
 28941 ;;		None
 28942 ;; Auto vars:     Size  Location     Type
 28943 ;;  current_adc_    1  117[BANK0 ] enum E17421
 28944 ;; Return value:  Size  Location     Type
 28945 ;;                  1    wreg      void 
 28946 ;; Registers used:
 28947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28948 ;; Tracked objects:
 28949 ;;		On entry : 0/0
 28950 ;;		On exit  : 0/0
 28951 ;;		Unchanged: 0/0
 28952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28954 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28956 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28957 ;;Total ram usage:       21 bytes
 28958 ;; Hardware stack levels used:    1
 28959 ;; Hardware stack levels required when called:    6
 28960 ;; This function calls:
 28961 ;;		_ADCC_GetConversionResult
 28962 ;;		_currentMeasuredToPeak
 28963 ;;		_peakToRMS
 28964 ;;		i2_TMR7_StopTimer
 28965 ;;		i2___fladd
 28966 ;;		i2___fldiv
 28967 ;;		i2___flge
 28968 ;;		i2___flmul
 28969 ;;		i2___flneg
 28970 ;;		i2___xxtofl
 28971 ;; This function is called by:
 28972 ;;		_main
 28973 ;;		_ADCC_ISR
 28974 ;; This function uses a non-reentrant model
 28975 ;;
 28976                           
 28977                           	psect	text100
 28978  0122EA                     __ptext100:
 28979                           	opt stack 0
 28980  0122EA                     _ADCPostProcessingCallback:
 28981                           	opt stack 11
 28982                           
 28983                           ;main.c: 163: adcc_channel_t current_adc_channel = ADPCH;
 28984                           
 28985                           ;incstack = 0
 28986  0122EA  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 28987                           
 28988                           ;main.c: 166: switch (current_adc_channel) {
 28989  0122EE  D3FE               	goto	i2l941
 28990  0122F0                     
 28991                           ;main.c: 170: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 28992  0122F0  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 28993  0122F4  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 28994  0122F8  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 28995  0122FC  6A07               	clrf	i2___xxtofl@val+2,c
 28996  0122FE  6A08               	clrf	i2___xxtofl@val+3,c
 28997  012300  0E00               	movlw	0
 28998  012302  EC1D  F0AF         	call	i2___xxtofl
 28999  012306  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29000  01230A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29001  01230E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29002  012312  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29003  012316  0E0D               	movlw	13
 29004  012318  6E34               	movwf	i2___flmul@a,c
 29005  01231A  0E68               	movlw	104
 29006  01231C  6E35               	movwf	i2___flmul@a+1,c
 29007  01231E  0E53               	movlw	83
 29008  012320  6E36               	movwf	i2___flmul@a+2,c
 29009  012322  0E3B               	movlw	59
 29010  012324  6E37               	movwf	i2___flmul@a+3,c
 29011  012326  EC7B  F09D         	call	i2___flmul	;wreg free
 29012  01232A  C030  F1D7         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 29013  01232E  C031  F1D8         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 29014  012332  C032  F1D9         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 29015  012336  C033  F1DA         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 29016                           
 29017                           ;main.c: 172: if (AVSS_ADC_Result > 0.01) {
 29018  01233A  0E0A               	movlw	10
 29019  01233C  6E34               	movwf	i2___flge@ff1,c
 29020  01233E  0ED7               	movlw	215
 29021  012340  6E35               	movwf	i2___flge@ff1+1,c
 29022  012342  0E23               	movlw	35
 29023  012344  6E36               	movwf	i2___flge@ff1+2,c
 29024  012346  0E3C               	movlw	60
 29025  012348  6E37               	movwf	i2___flge@ff1+3,c
 29026  01234A  C1D7  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 29027  01234E  C1D8  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 29028  012352  C1D9  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 29029  012356  C1DA  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 29030  01235A  ECB2  F0B2         	call	i2___flge	;wreg free
 29031  01235E  B0D8               	btfsc	status,0,c
 29032  012360  0012               	return	
 29033                           
 29034                           ;main.c: 174: LATFbits.LATF3 = 1;
 29035  012362  867E               	bsf	3966,3,c	;volatile
 29036                           
 29037                           ;main.c: 175: adc_error_flag = 1;
 29038  012364  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29039                           
 29040                           ;main.c: 177: PIE5bits.TMR7IE == 0;
 29041  012366  010E               	movlb	14	; () banked
 29042  012368  512E               	movf	46,w,b	;volatile
 29043                           
 29044                           ; BSR set to: 14
 29045                           ;main.c: 178: TMR7_StopTimer();
 29046  01236A  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29047                           
 29048                           ;main.c: 181: }
 29049                           ;main.c: 183: break;
 29050                           
 29051                           ;main.c: 179: return;
 29052  01236E  0012               	return	
 29053  012370                     
 29054                           ;main.c: 188: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 29055  012370  0E0D               	movlw	13
 29056  012372  6E34               	movwf	i2___flmul@a,c
 29057  012374  0E68               	movlw	104
 29058  012376  6E35               	movwf	i2___flmul@a+1,c
 29059  012378  0E53               	movlw	83
 29060  01237A  6E36               	movwf	i2___flmul@a+2,c
 29061  01237C  0E3B               	movlw	59
 29062  01237E  6E37               	movwf	i2___flmul@a+3,c
 29063  012380  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29064  012384  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29065  012388  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29066  01238C  6A07               	clrf	i2___xxtofl@val+2,c
 29067  01238E  6A08               	clrf	i2___xxtofl@val+3,c
 29068  012390  0E00               	movlw	0
 29069  012392  EC1D  F0AF         	call	i2___xxtofl
 29070  012396  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29071  01239A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29072  01239E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29073  0123A2  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29074  0123A6  EC7B  F09D         	call	i2___flmul	;wreg free
 29075  0123AA  C030  F056         	movff	?i2___flmul,i2___fladd@b
 29076  0123AE  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 29077  0123B2  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 29078  0123B6  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 29079  0123BA  C1D7  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 29080  0123BE  C1D8  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 29081  0123C2  C1D9  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 29082  0123C6  C1DA  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 29083  0123CA  ECC2  F0A0         	call	i2___fladd	;wreg free
 29084  0123CE  C056  F0F5         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 29085  0123D2  C057  F0F6         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 29086  0123D6  C058  F0F7         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 29087  0123DA  C059  F0F8         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 29088                           
 29089                           ;main.c: 189: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 29090  0123DE  0E6F               	movlw	111
 29091  0123E0  6E13               	movwf	i2___fldiv@b,c
 29092  0123E2  0E12               	movlw	18
 29093  0123E4  6E14               	movwf	i2___fldiv@b+1,c
 29094  0123E6  0E03               	movlw	3
 29095  0123E8  6E15               	movwf	i2___fldiv@b+2,c
 29096  0123EA  0E40               	movlw	64
 29097  0123EC  6E16               	movwf	i2___fldiv@b+3,c
 29098  0123EE  C0F5  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 29099  0123F2  C0F6  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 29100  0123F6  C0F7  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 29101  0123FA  C0F8  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 29102  0123FE  EC82  F0A9         	call	i2___fldiv	;wreg free
 29103  012402  C013  F25C         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 29104  012406  C014  F25D         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 29105  01240A  C015  F25E         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 29106  01240E  C016  F25F         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 29107                           
 29108                           ;main.c: 191: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0) {
 29109  012412  0E00               	movlw	0
 29110  012414  6E34               	movwf	i2___flge@ff1,c
 29111  012416  0E00               	movlw	0
 29112  012418  6E35               	movwf	i2___flge@ff1+1,c
 29113  01241A  0E20               	movlw	32
 29114  01241C  6E36               	movwf	i2___flge@ff1+2,c
 29115  01241E  0E40               	movlw	64
 29116  012420  6E37               	movwf	i2___flge@ff1+3,c
 29117  012422  C0F5  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 29118  012426  C0F6  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 29119  01242A  C0F7  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 29120  01242E  C0F8  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 29121  012432  ECB2  F0B2         	call	i2___flge	;wreg free
 29122  012436  A0D8               	btfss	status,0,c
 29123  012438  D014               	goto	i2u1559_40
 29124  01243A  C0F5  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 29125  01243E  C0F6  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 29126  012442  C0F7  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 29127  012446  C0F8  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 29128  01244A  0E00               	movlw	0
 29129  01244C  6E38               	movwf	i2___flge@ff2,c
 29130  01244E  0E00               	movlw	0
 29131  012450  6E39               	movwf	i2___flge@ff2+1,c
 29132  012452  0E00               	movlw	0
 29133  012454  6E3A               	movwf	i2___flge@ff2+2,c
 29134  012456  0E40               	movlw	64
 29135  012458  6E3B               	movwf	i2___flge@ff2+3,c
 29136  01245A  ECB2  F0B2         	call	i2___flge	;wreg free
 29137  01245E  B0D8               	btfsc	status,0,c
 29138  012460  0012               	return	
 29139  012462                     i2u1559_40:
 29140                           
 29141                           ;main.c: 193: LATFbits.LATF3 = 1;
 29142  012462  867E               	bsf	3966,3,c	;volatile
 29143                           
 29144                           ;main.c: 194: adc_error_flag = 1;
 29145  012464  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29146                           
 29147                           ;main.c: 196: PIE5bits.TMR7IE == 0;
 29148  012466  010E               	movlb	14	; () banked
 29149  012468  512E               	movf	46,w,b	;volatile
 29150                           
 29151                           ; BSR set to: 14
 29152                           ;main.c: 197: TMR7_StopTimer();
 29153  01246A  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29154                           
 29155                           ;main.c: 200: }
 29156                           ;main.c: 203: break;
 29157                           
 29158                           ;main.c: 198: return;
 29159  01246E  0012               	return	
 29160  012470                     
 29161                           ;main.c: 208: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 29162  012470  C25C  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 29163  012474  C25D  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 29164  012478  C25E  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 29165  01247C  C25F  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 29166  012480  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29167  012484  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29168  012488  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29169  01248C  6A07               	clrf	i2___xxtofl@val+2,c
 29170  01248E  6A08               	clrf	i2___xxtofl@val+3,c
 29171  012490  0E00               	movlw	0
 29172  012492  EC1D  F0AF         	call	i2___xxtofl
 29173  012496  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29174  01249A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29175  01249E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29176  0124A2  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29177  0124A6  EC7B  F09D         	call	i2___flmul	;wreg free
 29178  0124AA  C030  F0DA         	movff	?i2___flmul,_ADCPostProcessingCallback$4051
 29179  0124AE  C031  F0DB         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4051+1
 29180  0124B2  C032  F0DC         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4051+2
 29181  0124B6  C033  F0DD         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4051+3
 29182                           
 29183                           ;main.c: 208: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 29184  0124BA  C0DA  F030         	movff	_ADCPostProcessingCallback$4051,i2___flmul@b
 29185  0124BE  C0DB  F031         	movff	_ADCPostProcessingCallback$4051+1,i2___flmul@b+1
 29186  0124C2  C0DC  F032         	movff	_ADCPostProcessingCallback$4051+2,i2___flmul@b+2
 29187  0124C6  C0DD  F033         	movff	_ADCPostProcessingCallback$4051+3,i2___flmul@b+3
 29188  0124CA  0E0D               	movlw	13
 29189  0124CC  6E34               	movwf	i2___flmul@a,c
 29190  0124CE  0E68               	movlw	104
 29191  0124D0  6E35               	movwf	i2___flmul@a+1,c
 29192  0124D2  0ED3               	movlw	211
 29193  0124D4  6E36               	movwf	i2___flmul@a+2,c
 29194  0124D6  0E3B               	movlw	59
 29195  0124D8  6E37               	movwf	i2___flmul@a+3,c
 29196  0124DA  EC7B  F09D         	call	i2___flmul	;wreg free
 29197  0124DE  C030  F0F0         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 29198  0124E2  C031  F0F1         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 29199  0124E6  C032  F0F2         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 29200  0124EA  C033  F0F3         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 29201                           
 29202                           ;main.c: 210: if (POS3P3_ADC_Result > 3.5) {
 29203  0124EE  0E00               	movlw	0
 29204  0124F0  6E34               	movwf	i2___flge@ff1,c
 29205  0124F2  0E00               	movlw	0
 29206  0124F4  6E35               	movwf	i2___flge@ff1+1,c
 29207  0124F6  0E60               	movlw	96
 29208  0124F8  6E36               	movwf	i2___flge@ff1+2,c
 29209  0124FA  0E40               	movlw	64
 29210  0124FC  6E37               	movwf	i2___flge@ff1+3,c
 29211  0124FE  C0F0  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 29212  012502  C0F1  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 29213  012506  C0F2  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 29214  01250A  C0F3  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 29215  01250E  ECB2  F0B2         	call	i2___flge	;wreg free
 29216  012512  B0D8               	btfsc	status,0,c
 29217  012514  0012               	return	
 29218                           
 29219                           ;main.c: 212: LATFbits.LATF3 = 1;
 29220  012516  867E               	bsf	3966,3,c	;volatile
 29221                           
 29222                           ;main.c: 213: adc_error_flag = 1;
 29223  012518  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29224                           
 29225                           ;main.c: 215: PIE5bits.TMR7IE == 0;
 29226  01251A  010E               	movlb	14	; () banked
 29227  01251C  512E               	movf	46,w,b	;volatile
 29228                           
 29229                           ; BSR set to: 14
 29230                           ;main.c: 216: TMR7_StopTimer();
 29231  01251E  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29232                           
 29233                           ;main.c: 219: }
 29234                           ;main.c: 221: break;
 29235                           
 29236                           ;main.c: 217: return;
 29237  012522  0012               	return	
 29238  012524                     
 29239                           ;main.c: 226: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 29240  012524  0E00               	movlw	0
 29241  012526  6E17               	movwf	i2___fldiv@a,c
 29242  012528  0EC0               	movlw	192
 29243  01252A  6E18               	movwf	i2___fldiv@a+1,c
 29244  01252C  0E7F               	movlw	127
 29245  01252E  6E19               	movwf	i2___fldiv@a+2,c
 29246  012530  0E44               	movlw	68
 29247  012532  6E1A               	movwf	i2___fldiv@a+3,c
 29248  012534  C0F0  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 29249  012538  C0F1  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 29250  01253C  C0F2  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 29251  012540  C0F3  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 29252  012544  EC82  F0A9         	call	i2___fldiv	;wreg free
 29253  012548  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 29254  01254C  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 29255  012550  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 29256  012554  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 29257  012558  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29258  01255C  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29259  012560  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29260  012564  6A07               	clrf	i2___xxtofl@val+2,c
 29261  012566  6A08               	clrf	i2___xxtofl@val+3,c
 29262  012568  0E00               	movlw	0
 29263  01256A  EC1D  F0AF         	call	i2___xxtofl
 29264  01256E  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29265  012572  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29266  012576  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29267  01257A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29268  01257E  EC7B  F09D         	call	i2___flmul	;wreg free
 29269  012582  C030  F0DA         	movff	?i2___flmul,_ADCPostProcessingCallback$4051
 29270  012586  C031  F0DB         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4051+1
 29271  01258A  C032  F0DC         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4051+2
 29272  01258E  C033  F0DD         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4051+3
 29273                           
 29274                           ;main.c: 226: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 29275  012592  C0DA  F030         	movff	_ADCPostProcessingCallback$4051,i2___flmul@b
 29276  012596  C0DB  F031         	movff	_ADCPostProcessingCallback$4051+1,i2___flmul@b+1
 29277  01259A  C0DC  F032         	movff	_ADCPostProcessingCallback$4051+2,i2___flmul@b+2
 29278  01259E  C0DD  F033         	movff	_ADCPostProcessingCallback$4051+3,i2___flmul@b+3
 29279  0125A2  0E35               	movlw	53
 29280  0125A4  6E34               	movwf	i2___flmul@a,c
 29281  0125A6  0E5E               	movlw	94
 29282  0125A8  6E35               	movwf	i2___flmul@a+1,c
 29283  0125AA  0EF2               	movlw	242
 29284  0125AC  6E36               	movwf	i2___flmul@a+2,c
 29285  0125AE  0E3F               	movlw	63
 29286  0125B0  6E37               	movwf	i2___flmul@a+3,c
 29287  0125B2  EC7B  F09D         	call	i2___flmul	;wreg free
 29288  0125B6  C030  F1D3         	movff	?i2___flmul,_Imeas	;volatile
 29289  0125BA  C031  F1D4         	movff	?i2___flmul+1,_Imeas+1	;volatile
 29290  0125BE  C032  F1D5         	movff	?i2___flmul+2,_Imeas+2	;volatile
 29291  0125C2  C033  F1D6         	movff	?i2___flmul+3,_Imeas+3	;volatile
 29292                           
 29293                           ;main.c: 230: if (LATGbits.LATG0 != 1) {
 29294  0125C6  B07F               	btfsc	3967,0,c	;volatile
 29295  0125C8  D0A7               	goto	i2l953
 29296                           
 29297                           ;main.c: 235: if (load_enable) {
 29298  0125CA  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 29299  0125CC  D033               	goto	i2l954
 29300                           
 29301                           ;main.c: 238: if (dimming_period < 0x7FEE) {
 29302  0125CE  0EEE               	movlw	238
 29303  0125D0  0100               	movlb	0	; () banked
 29304  0125D2  5DF9               	subwf	_dimming_period& (0+255),w,b	;volatile
 29305  0125D4  0E7F               	movlw	127
 29306  0125D6  59FA               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 29307  0125D8  B0D8               	btfsc	status,0,c
 29308  0125DA  D009               	goto	i2l955
 29309                           
 29310                           ; BSR set to: 0
 29311                           ;main.c: 240: Ipk = Imeas;
 29312  0125DC  C1D3  F24C         	movff	_Imeas,_Ipk	;volatile
 29313  0125E0  C1D4  F24D         	movff	_Imeas+1,_Ipk+1	;volatile
 29314  0125E4  C1D5  F24E         	movff	_Imeas+2,_Ipk+2	;volatile
 29315  0125E8  C1D6  F24F         	movff	_Imeas+3,_Ipk+3	;volatile
 29316                           
 29317                           ;main.c: 242: }
 29318  0125EC  D01A               	goto	i2l956
 29319  0125EE                     i2l955:
 29320                           
 29321                           ; BSR set to: 0
 29322                           ;main.c: 245: else {
 29323                           ;main.c: 247: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 29324                           
 29325                           ; BSR set to: 0
 29326  0125EE  C1D3  F08F         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 29327  0125F2  C1D4  F090         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 29328  0125F6  C1D5  F091         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 29329  0125FA  C1D6  F092         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 29330  0125FE  C0FB  F093         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 29331  012602  C0FC  F094         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 29332  012606  C0FD  F095         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 29333  01260A  C0FE  F096         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 29334  01260E  ECA7  F0B9         	call	_currentMeasuredToPeak	;wreg free
 29335  012612  C08F  F24C         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 29336  012616  C090  F24D         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 29337  01261A  C091  F24E         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 29338  01261E  C092  F24F         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 29339  012622                     i2l956:
 29340                           
 29341                           ;main.c: 249: }
 29342                           ;main.c: 251: Vpk = Vpk_const;
 29343  012622  C2D5  F250         	movff	_Vpk_const,_Vpk	;volatile
 29344  012626  C2D6  F251         	movff	_Vpk_const+1,_Vpk+1	;volatile
 29345  01262A  C2D7  F252         	movff	_Vpk_const+2,_Vpk+2	;volatile
 29346  01262E  C2D8  F253         	movff	_Vpk_const+3,_Vpk+3	;volatile
 29347                           
 29348                           ;main.c: 253: }
 29349  012632  D011               	goto	i2l957
 29350  012634                     i2l954:
 29351                           
 29352                           ;main.c: 255: else {
 29353                           ;main.c: 257: Ipk = 0.0;
 29354  012634  0E00               	movlw	0
 29355  012636  0102               	movlb	2	; () banked
 29356  012638  6F4C               	movwf	_Ipk& (0+255),b	;volatile
 29357  01263A  0E00               	movlw	0
 29358  01263C  6F4D               	movwf	(_Ipk+1)& (0+255),b	;volatile
 29359  01263E  0E00               	movlw	0
 29360  012640  6F4E               	movwf	(_Ipk+2)& (0+255),b	;volatile
 29361  012642  0E00               	movlw	0
 29362  012644  6F4F               	movwf	(_Ipk+3)& (0+255),b	;volatile
 29363                           
 29364                           ;main.c: 258: Vpk = 0.0;
 29365  012646  0E00               	movlw	0
 29366  012648  6F50               	movwf	_Vpk& (0+255),b	;volatile
 29367  01264A  0E00               	movlw	0
 29368  01264C  6F51               	movwf	(_Vpk+1)& (0+255),b	;volatile
 29369  01264E  0E00               	movlw	0
 29370  012650  6F52               	movwf	(_Vpk+2)& (0+255),b	;volatile
 29371  012652  0E00               	movlw	0
 29372  012654  6F53               	movwf	(_Vpk+3)& (0+255),b	;volatile
 29373  012656                     i2l957:
 29374                           
 29375                           ;main.c: 260: }
 29376                           ;main.c: 262: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 29377                           
 29378                           ; BSR set to: 2
 29379  012656  C0FB  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 29380  01265A  C0FC  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 29381  01265E  C0FD  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 29382  012662  C0FE  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 29383  012666  C24C  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 29384  01266A  C24D  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 29385  01266E  C24E  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 29386  012672  C24F  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 29387  012676  EC33  F0AC         	call	_peakToRMS	;wreg free
 29388  01267A  C0B1  F0D6         	movff	?_peakToRMS,_ADCPostProcessingCallback$4052
 29389  01267E  C0B2  F0D7         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4052+1
 29390  012682  C0B3  F0D8         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4052+2
 29391  012686  C0B4  F0D9         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4052+3
 29392                           
 29393                           ;main.c: 260: }
 29394                           ;main.c: 262: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 29395  01268A  C0D6  F056         	movff	_ADCPostProcessingCallback$4052,i2___fladd@b
 29396  01268E  C0D7  F057         	movff	_ADCPostProcessingCallback$4052+1,i2___fladd@b+1
 29397  012692  C0D8  F058         	movff	_ADCPostProcessingCallback$4052+2,i2___fladd@b+2
 29398  012696  C0D9  F059         	movff	_ADCPostProcessingCallback$4052+3,i2___fladd@b+3
 29399  01269A  C2D1  F05A         	movff	_Irms_offset,i2___fladd@a
 29400  01269E  C2D2  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 29401  0126A2  C2D3  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 29402  0126A6  C2D4  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 29403  0126AA  ECC2  F0A0         	call	i2___fladd	;wreg free
 29404  0126AE  C056  F1CF         	movff	?i2___fladd,_Irms	;volatile
 29405  0126B2  C057  F1D0         	movff	?i2___fladd+1,_Irms+1	;volatile
 29406  0126B6  C058  F1D1         	movff	?i2___fladd+2,_Irms+2	;volatile
 29407  0126BA  C059  F1D2         	movff	?i2___fladd+3,_Irms+3	;volatile
 29408                           
 29409                           ;main.c: 263: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 29410  0126BE  C250  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 29411  0126C2  C251  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 29412  0126C6  C252  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 29413  0126CA  C253  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 29414  0126CE  C0FB  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 29415  0126D2  C0FC  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 29416  0126D6  C0FD  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 29417  0126DA  C0FE  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 29418  0126DE  EC33  F0AC         	call	_peakToRMS	;wreg free
 29419  0126E2  C0B1  F1CB         	movff	?_peakToRMS,_Vrms	;volatile
 29420  0126E6  C0B2  F1CC         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 29421  0126EA  C0B3  F1CD         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 29422  0126EE  C0B4  F1CE         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 29423                           
 29424                           ;main.c: 264: Avg_Power = Vrms * Irms;
 29425  0126F2  C1CB  F030         	movff	_Vrms,i2___flmul@b	;volatile
 29426  0126F6  C1CC  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 29427  0126FA  C1CD  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 29428  0126FE  C1CE  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 29429  012702  C1CF  F034         	movff	_Irms,i2___flmul@a	;volatile
 29430  012706  C1D0  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 29431  01270A  C1D1  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 29432  01270E  C1D2  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 29433  012712  EC7B  F09D         	call	i2___flmul	;wreg free
 29434  012716  D06A               	goto	L16
 29435  012718                     i2l953:
 29436                           
 29437                           ;main.c: 269: else {
 29438                           ;main.c: 271: Ipk = Imeas;
 29439  012718  C1D3  F24C         	movff	_Imeas,_Ipk	;volatile
 29440  01271C  C1D4  F24D         	movff	_Imeas+1,_Ipk+1	;volatile
 29441  012720  C1D5  F24E         	movff	_Imeas+2,_Ipk+2	;volatile
 29442  012724  C1D6  F24F         	movff	_Imeas+3,_Ipk+3	;volatile
 29443                           
 29444                           ;main.c: 272: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 29445  012728  0E00               	movlw	0
 29446  01272A  0100               	movlb	0	; () banked
 29447  01272C  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 29448  01272E  0E00               	movlw	0
 29449  012730  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 29450  012732  0E00               	movlw	0
 29451  012734  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 29452  012736  0E00               	movlw	0
 29453  012738  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 29454  01273A  C24C  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 29455  01273E  C24D  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 29456  012742  C24E  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 29457  012746  C24F  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 29458  01274A  EC33  F0AC         	call	_peakToRMS	;wreg free
 29459  01274E  C0B1  F0D6         	movff	?_peakToRMS,_ADCPostProcessingCallback$4052
 29460  012752  C0B2  F0D7         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4052+1
 29461  012756  C0B3  F0D8         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4052+2
 29462  01275A  C0B4  F0D9         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4052+3
 29463                           
 29464                           ;main.c: 272: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 29465  01275E  C0D6  F056         	movff	_ADCPostProcessingCallback$4052,i2___fladd@b
 29466  012762  C0D7  F057         	movff	_ADCPostProcessingCallback$4052+1,i2___fladd@b+1
 29467  012766  C0D8  F058         	movff	_ADCPostProcessingCallback$4052+2,i2___fladd@b+2
 29468  01276A  C0D9  F059         	movff	_ADCPostProcessingCallback$4052+3,i2___fladd@b+3
 29469  01276E  C2D1  F05A         	movff	_Irms_offset,i2___fladd@a
 29470  012772  C2D2  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 29471  012776  C2D3  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 29472  01277A  C2D4  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 29473  01277E  ECC2  F0A0         	call	i2___fladd	;wreg free
 29474  012782  C056  F1CF         	movff	?i2___fladd,_Irms	;volatile
 29475  012786  C057  F1D0         	movff	?i2___fladd+1,_Irms+1	;volatile
 29476  01278A  C058  F1D1         	movff	?i2___fladd+2,_Irms+2	;volatile
 29477  01278E  C059  F1D2         	movff	?i2___fladd+3,_Irms+3	;volatile
 29478                           
 29479                           ;main.c: 273: Vrms = peakToRMS(Vpk_const, 0.0);
 29480  012792  C2D5  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 29481  012796  C2D6  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 29482  01279A  C2D7  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 29483  01279E  C2D8  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 29484  0127A2  0E00               	movlw	0
 29485  0127A4  0100               	movlb	0	; () banked
 29486  0127A6  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 29487  0127A8  0E00               	movlw	0
 29488  0127AA  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 29489  0127AC  0E00               	movlw	0
 29490  0127AE  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 29491  0127B0  0E00               	movlw	0
 29492  0127B2  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 29493  0127B4  EC33  F0AC         	call	_peakToRMS	;wreg free
 29494  0127B8  C0B1  F1CB         	movff	?_peakToRMS,_Vrms	;volatile
 29495  0127BC  C0B2  F1CC         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 29496  0127C0  C0B3  F1CD         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 29497  0127C4  C0B4  F1CE         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 29498                           
 29499                           ;main.c: 274: Avg_Power = Vrms * Irms;
 29500  0127C8  C1CB  F030         	movff	_Vrms,i2___flmul@b	;volatile
 29501  0127CC  C1CC  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 29502  0127D0  C1CD  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 29503  0127D4  C1CE  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 29504  0127D8  C1CF  F034         	movff	_Irms,i2___flmul@a	;volatile
 29505  0127DC  C1D0  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 29506  0127E0  C1D1  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 29507  0127E4  C1D2  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 29508  0127E8  EC7B  F09D         	call	i2___flmul	;wreg free
 29509  0127EC                     L16:
 29510  0127EC  C030  F248         	movff	?i2___flmul,_Avg_Power	;volatile
 29511  0127F0  C031  F249         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 29512  0127F4  C032  F24A         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 29513  0127F8  C033  F24B         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 29514                           
 29515                           ;main.c: 276: }
 29516                           ;main.c: 278: if (Irms > 5.0) {
 29517  0127FC  0E00               	movlw	0
 29518  0127FE  6E34               	movwf	i2___flge@ff1,c
 29519  012800  0E00               	movlw	0
 29520  012802  6E35               	movwf	i2___flge@ff1+1,c
 29521  012804  0EA0               	movlw	160
 29522  012806  6E36               	movwf	i2___flge@ff1+2,c
 29523  012808  0E40               	movlw	64
 29524  01280A  6E37               	movwf	i2___flge@ff1+3,c
 29525  01280C  C1CF  F038         	movff	_Irms,i2___flge@ff2	;volatile
 29526  012810  C1D0  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 29527  012814  C1D1  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 29528  012818  C1D2  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 29529  01281C  ECB2  F0B2         	call	i2___flge	;wreg free
 29530  012820  B0D8               	btfsc	status,0,c
 29531  012822  0012               	return	
 29532                           
 29533                           ;main.c: 280: LATFbits.LATF3 = 1;
 29534  012824  867E               	bsf	3966,3,c	;volatile
 29535                           
 29536                           ;main.c: 281: adc_error_flag = 1;
 29537  012826  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29538                           
 29539                           ;main.c: 283: PIE5bits.TMR7IE == 0;
 29540  012828  010E               	movlb	14	; () banked
 29541  01282A  512E               	movf	46,w,b	;volatile
 29542                           
 29543                           ; BSR set to: 14
 29544                           ;main.c: 284: TMR7_StopTimer();
 29545  01282C  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29546                           
 29547                           ;main.c: 287: }
 29548                           ;main.c: 289: break;
 29549                           
 29550                           ;main.c: 285: return;
 29551  012830  0012               	return	
 29552  012832                     
 29553                           ;main.c: 294: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 29554  012832  0E00               	movlw	0
 29555  012834  6E17               	movwf	i2___fldiv@a,c
 29556  012836  0EC0               	movlw	192
 29557  012838  6E18               	movwf	i2___fldiv@a+1,c
 29558  01283A  0E7F               	movlw	127
 29559  01283C  6E19               	movwf	i2___fldiv@a+2,c
 29560  01283E  0E44               	movlw	68
 29561  012840  6E1A               	movwf	i2___fldiv@a+3,c
 29562  012842  C0F0  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 29563  012846  C0F1  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 29564  01284A  C0F2  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 29565  01284E  C0F3  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 29566  012852  EC82  F0A9         	call	i2___fldiv	;wreg free
 29567  012856  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 29568  01285A  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 29569  01285E  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 29570  012862  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 29571  012866  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29572  01286A  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29573  01286E  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29574  012872  6A07               	clrf	i2___xxtofl@val+2,c
 29575  012874  6A08               	clrf	i2___xxtofl@val+3,c
 29576  012876  0E00               	movlw	0
 29577  012878  EC1D  F0AF         	call	i2___xxtofl
 29578  01287C  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29579  012880  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29580  012884  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29581  012888  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29582  01288C  EC7B  F09D         	call	i2___flmul	;wreg free
 29583  012890  C030  F0DA         	movff	?i2___flmul,_ADCPostProcessingCallback$4051
 29584  012894  C031  F0DB         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4051+1
 29585  012898  C032  F0DC         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4051+2
 29586  01289C  C033  F0DD         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4051+3
 29587                           
 29588                           ;main.c: 294: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 29589  0128A0  C0DA  F030         	movff	_ADCPostProcessingCallback$4051,i2___flmul@b
 29590  0128A4  C0DB  F031         	movff	_ADCPostProcessingCallback$4051+1,i2___flmul@b+1
 29591  0128A8  C0DC  F032         	movff	_ADCPostProcessingCallback$4051+2,i2___flmul@b+2
 29592  0128AC  C0DD  F033         	movff	_ADCPostProcessingCallback$4051+3,i2___flmul@b+3
 29593  0128B0  0E3E               	movlw	62
 29594  0128B2  6E34               	movwf	i2___flmul@a,c
 29595  0128B4  0EF8               	movlw	248
 29596  0128B6  6E35               	movwf	i2___flmul@a+1,c
 29597  0128B8  0E80               	movlw	128
 29598  0128BA  6E36               	movwf	i2___flmul@a+2,c
 29599  0128BC  0E40               	movlw	64
 29600  0128BE  6E37               	movwf	i2___flmul@a+3,c
 29601  0128C0  EC7B  F09D         	call	i2___flmul	;wreg free
 29602  0128C4  C030  F258         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 29603  0128C8  C031  F259         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 29604  0128CC  C032  F25A         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 29605  0128D0  C033  F25B         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 29606                           
 29607                           ;main.c: 296: if (POS12_ADC_Result > 13.6) {
 29608  0128D4  0E9A               	movlw	154
 29609  0128D6  6E34               	movwf	i2___flge@ff1,c
 29610  0128D8  0E99               	movlw	153
 29611  0128DA  6E35               	movwf	i2___flge@ff1+1,c
 29612  0128DC  0E59               	movlw	89
 29613  0128DE  6E36               	movwf	i2___flge@ff1+2,c
 29614  0128E0  0E41               	movlw	65
 29615  0128E2  6E37               	movwf	i2___flge@ff1+3,c
 29616  0128E4  C258  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 29617  0128E8  C259  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 29618  0128EC  C25A  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 29619  0128F0  C25B  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 29620  0128F4  ECB2  F0B2         	call	i2___flge	;wreg free
 29621  0128F8  B0D8               	btfsc	status,0,c
 29622  0128FA  0012               	return	
 29623                           
 29624                           ;main.c: 298: LATFbits.LATF3 = 1;
 29625  0128FC  867E               	bsf	3966,3,c	;volatile
 29626                           
 29627                           ;main.c: 299: adc_error_flag = 1;
 29628  0128FE  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29629                           
 29630                           ;main.c: 301: PIE5bits.TMR7IE == 0;
 29631  012900  010E               	movlb	14	; () banked
 29632  012902  512E               	movf	46,w,b	;volatile
 29633                           
 29634                           ; BSR set to: 14
 29635                           ;main.c: 302: TMR7_StopTimer();
 29636  012904  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29637                           
 29638                           ;main.c: 305: }
 29639                           ;main.c: 307: break;
 29640                           
 29641                           ;main.c: 303: return;
 29642  012908  0012               	return	
 29643  01290A                     
 29644                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29645  01290A  0E00               	movlw	0
 29646  01290C  6E17               	movwf	i2___fldiv@a,c
 29647  01290E  0E00               	movlw	0
 29648  012910  6E18               	movwf	i2___fldiv@a+1,c
 29649  012912  0E00               	movlw	0
 29650  012914  6E19               	movwf	i2___fldiv@a+2,c
 29651  012916  0E40               	movlw	64
 29652  012918  6E1A               	movwf	i2___fldiv@a+3,c
 29653  01291A  C0F0  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 29654  01291E  C0F1  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 29655  012922  C0F2  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 29656  012926  C0F3  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 29657  01292A  EC82  F0A9         	call	i2___fldiv	;wreg free
 29658  01292E  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 29659  012932  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 29660  012936  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 29661  01293A  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 29662  01293E  0E00               	movlw	0
 29663  012940  6E5A               	movwf	i2___fladd@a,c
 29664  012942  0E00               	movlw	0
 29665  012944  6E5B               	movwf	i2___fladd@a+1,c
 29666  012946  0E80               	movlw	128
 29667  012948  6E5C               	movwf	i2___fladd@a+2,c
 29668  01294A  0E3F               	movlw	63
 29669  01294C  6E5D               	movwf	i2___fladd@a+3,c
 29670  01294E  0E00               	movlw	0
 29671  012950  6E17               	movwf	i2___fldiv@a,c
 29672  012952  0EC0               	movlw	192
 29673  012954  6E18               	movwf	i2___fldiv@a+1,c
 29674  012956  0E7F               	movlw	127
 29675  012958  6E19               	movwf	i2___fldiv@a+2,c
 29676  01295A  0E44               	movlw	68
 29677  01295C  6E1A               	movwf	i2___fldiv@a+3,c
 29678  01295E  EC39  F0C0         	call	_ADCC_GetConversionResult	;wreg free
 29679  012962  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29680  012966  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29681  01296A  6A07               	clrf	i2___xxtofl@val+2,c
 29682  01296C  6A08               	clrf	i2___xxtofl@val+3,c
 29683  01296E  0E00               	movlw	0
 29684  012970  EC1D  F0AF         	call	i2___xxtofl
 29685  012974  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 29686  012978  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 29687  01297C  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 29688  012980  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 29689  012984  EC82  F0A9         	call	i2___fldiv	;wreg free
 29690  012988  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 29691  01298C  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 29692  012990  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 29693  012994  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 29694  012998  EC2A  F0BF         	call	i2___flneg	;wreg free
 29695  01299C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 29696  0129A0  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 29697  0129A4  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 29698  0129A8  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 29699  0129AC  ECC2  F0A0         	call	i2___fladd	;wreg free
 29700  0129B0  C056  F030         	movff	?i2___fladd,i2___flmul@b
 29701  0129B4  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 29702  0129B8  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 29703  0129BC  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 29704  0129C0  EC7B  F09D         	call	i2___flmul	;wreg free
 29705  0129C4  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4053
 29706  0129C8  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4053+1
 29707  0129CC  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4053+2
 29708  0129D0  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4053+3
 29709                           
 29710                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29711  0129D4  0EDA               	movlw	218
 29712  0129D6  6E17               	movwf	i2___fldiv@a,c
 29713  0129D8  0E03               	movlw	3
 29714  0129DA  6E18               	movwf	i2___fldiv@a+1,c
 29715  0129DC  0EAD               	movlw	173
 29716  0129DE  6E19               	movwf	i2___fldiv@a+2,c
 29717  0129E0  0E3A               	movlw	58
 29718  0129E2  6E1A               	movwf	i2___fldiv@a+3,c
 29719  0129E4  0E39               	movlw	57
 29720  0129E6  6E5A               	movwf	i2___fladd@a,c
 29721  0129E8  0EB4               	movlw	180
 29722  0129EA  6E5B               	movwf	i2___fladd@a+1,c
 29723  0129EC  0E28               	movlw	40
 29724  0129EE  6E5C               	movwf	i2___fladd@a+2,c
 29725  0129F0  0E3F               	movlw	63
 29726  0129F2  6E5D               	movwf	i2___fladd@a+3,c
 29727  0129F4  C0C9  F02C         	movff	_ADCPostProcessingCallback$4053,i2___flneg@f1
 29728  0129F8  C0CA  F02D         	movff	_ADCPostProcessingCallback$4053+1,i2___flneg@f1+1
 29729  0129FC  C0CB  F02E         	movff	_ADCPostProcessingCallback$4053+2,i2___flneg@f1+2
 29730  012A00  C0CC  F02F         	movff	_ADCPostProcessingCallback$4053+3,i2___flneg@f1+3
 29731  012A04  EC2A  F0BF         	call	i2___flneg	;wreg free
 29732  012A08  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 29733  012A0C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 29734  012A10  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 29735  012A14  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 29736  012A18  ECC2  F0A0         	call	i2___fladd	;wreg free
 29737  012A1C  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 29738  012A20  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 29739  012A24  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 29740  012A28  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 29741  012A2C  EC82  F0A9         	call	i2___fldiv	;wreg free
 29742  012A30  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4054
 29743  012A34  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4054+1
 29744  012A38  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4054+2
 29745  012A3C  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4054+3
 29746                           
 29747                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29748  012A40  C2D9  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 29749  012A44  C2DA  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 29750  012A48  C2DB  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 29751  012A4C  C2DC  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 29752  012A50  C0CD  F056         	movff	_ADCPostProcessingCallback$4054,i2___fladd@b
 29753  012A54  C0CE  F057         	movff	_ADCPostProcessingCallback$4054+1,i2___fladd@b+1
 29754  012A58  C0CF  F058         	movff	_ADCPostProcessingCallback$4054+2,i2___fladd@b+2
 29755  012A5C  C0D0  F059         	movff	_ADCPostProcessingCallback$4054+3,i2___fladd@b+3
 29756  012A60  ECC2  F0A0         	call	i2___fladd	;wreg free
 29757  012A64  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4055
 29758  012A68  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4055+1
 29759  012A6C  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4055+2
 29760  012A70  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4055+3
 29761                           
 29762                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29763  012A74  C0D1  F056         	movff	_ADCPostProcessingCallback$4055,i2___fladd@b
 29764  012A78  C0D2  F057         	movff	_ADCPostProcessingCallback$4055+1,i2___fladd@b+1
 29765  012A7C  C0D3  F058         	movff	_ADCPostProcessingCallback$4055+2,i2___fladd@b+2
 29766  012A80  C0D4  F059         	movff	_ADCPostProcessingCallback$4055+3,i2___fladd@b+3
 29767  012A84  0E00               	movlw	0
 29768  012A86  6E5A               	movwf	i2___fladd@a,c
 29769  012A88  0E00               	movlw	0
 29770  012A8A  6E5B               	movwf	i2___fladd@a+1,c
 29771  012A8C  0E20               	movlw	32
 29772  012A8E  6E5C               	movwf	i2___fladd@a+2,c
 29773  012A90  0EC2               	movlw	194
 29774  012A92  6E5D               	movwf	i2___fladd@a+3,c
 29775  012A94  ECC2  F0A0         	call	i2___fladd	;wreg free
 29776  012A98  C056  F254         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 29777  012A9C  C057  F255         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 29778  012AA0  C058  F256         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 29779  012AA4  C059  F257         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 29780                           
 29781                           ;main.c: 314: if (Temp_ADC_Result > 40.0) {
 29782  012AA8  0E00               	movlw	0
 29783  012AAA  6E34               	movwf	i2___flge@ff1,c
 29784  012AAC  0E00               	movlw	0
 29785  012AAE  6E35               	movwf	i2___flge@ff1+1,c
 29786  012AB0  0E20               	movlw	32
 29787  012AB2  6E36               	movwf	i2___flge@ff1+2,c
 29788  012AB4  0E42               	movlw	66
 29789  012AB6  6E37               	movwf	i2___flge@ff1+3,c
 29790  012AB8  C254  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 29791  012ABC  C255  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 29792  012AC0  C256  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 29793  012AC4  C257  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 29794  012AC8  ECB2  F0B2         	call	i2___flge	;wreg free
 29795  012ACC  B0D8               	btfsc	status,0,c
 29796  012ACE  0012               	return	
 29797                           
 29798                           ;main.c: 316: LATFbits.LATF3 = 1;
 29799  012AD0  867E               	bsf	3966,3,c	;volatile
 29800                           
 29801                           ;main.c: 317: adc_error_flag = 1;
 29802  012AD2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29803                           
 29804                           ;main.c: 319: PIE5bits.TMR7IE == 0;
 29805  012AD4  010E               	movlb	14	; () banked
 29806  012AD6  512E               	movf	46,w,b	;volatile
 29807                           
 29808                           ; BSR set to: 14
 29809                           ;main.c: 320: TMR7_StopTimer();
 29810  012AD8  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29811                           
 29812                           ;main.c: 323: }
 29813                           ;main.c: 325: break;
 29814                           
 29815                           ;main.c: 321: return;
 29816  012ADC  0012               	return	
 29817  012ADE                     i2l964:
 29818                           
 29819                           ; BSR set to: 0
 29820                           ;main.c: 330: LATFbits.LATF3 = 1;
 29821  012ADE  867E               	bsf	3966,3,c	;volatile
 29822                           
 29823                           ;main.c: 331: adc_error_flag = 1;
 29824  012AE0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29825                           
 29826                           ; BSR set to: 0
 29827                           ;main.c: 333: PIE5bits.TMR7IE == 0;
 29828  012AE2  010E               	movlb	14	; () banked
 29829  012AE4  512E               	movf	46,w,b	;volatile
 29830                           
 29831                           ; BSR set to: 14
 29832                           ;main.c: 334: TMR7_StopTimer();
 29833  012AE6  ECC0  F0C0         	call	i2_TMR7_StopTimer	;wreg free
 29834                           
 29835                           ;main.c: 337: }
 29836                           
 29837                           ;main.c: 335: break;
 29838  012AEA  0012               	return	
 29839  012AEC                     i2l941:
 29840  012AEC  0100               	movlb	0	; () banked
 29841  012AEE  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 29842                           
 29843                           ; Switch size 1, requested type "space"
 29844                           ; Number of cases is 6, Range of values is 0 to 63
 29845                           ; switch strategies available:
 29846                           ; Name         Instructions Cycles
 29847                           ; simple_byte           19    10 (average)
 29848                           ;	Chosen strategy is simple_byte
 29849  012AF0  0A00               	xorlw	0	; case 0
 29850  012AF2  B4D8               	btfsc	status,2,c
 29851  012AF4  D517               	goto	i2l952
 29852  012AF6  0A04               	xorlw	4	; case 4
 29853  012AF8  B4D8               	btfsc	status,2,c
 29854  012AFA  D69B               	goto	i2l960
 29855  012AFC  0A26               	xorlw	38	; case 34
 29856  012AFE  B4D8               	btfsc	status,2,c
 29857  012B00  D4B7               	goto	i2l950
 29858  012B02  0A1E               	xorlw	30	; case 60
 29859  012B04  B4D8               	btfsc	status,2,c
 29860  012B06  EF78  F091         	goto	i2l942
 29861  012B0A  0A01               	xorlw	1	; case 61
 29862  012B0C  B4D8               	btfsc	status,2,c
 29863  012B0E  D6FD               	goto	i2l962
 29864  012B10  0A02               	xorlw	2	; case 63
 29865  012B12  B4D8               	btfsc	status,2,c
 29866  012B14  D42D               	goto	i2l946
 29867  012B16  D7E3               	goto	i2l964
 29868  012B18                     __end_of_ADCPostProcessingCallback:
 29869                           	opt stack 0
 29870                           tosu	equ	0xFFF
 29871                           tosh	equ	0xFFE
 29872                           tosl	equ	0xFFD
 29873                           pclatu	equ	0xFFB
 29874                           pclath	equ	0xFFA
 29875                           tblptru	equ	0xFF8
 29876                           tblptrh	equ	0xFF7
 29877                           tblptrl	equ	0xFF6
 29878                           tablat	equ	0xFF5
 29879                           prodh	equ	0xFF4
 29880                           prodl	equ	0xFF3
 29881                           intcon	equ	0xFF2
 29882                           indf0	equ	0xFEF
 29883                           postinc0	equ	0xFEE
 29884                           fsr0h	equ	0xFEA
 29885                           fsr0l	equ	0xFE9
 29886                           wreg	equ	0xFE8
 29887                           indf1	equ	0xFE7
 29888                           postdec1	equ	0xFE5
 29889                           plusw1	equ	0xFE3
 29890                           fsr1h	equ	0xFE2
 29891                           fsr1l	equ	0xFE1
 29892                           bsr	equ	0xFE0
 29893                           indf2	equ	0xFDF
 29894                           postinc2	equ	0xFDE
 29895                           postdec2	equ	0xFDD
 29896                           plusw2	equ	0xFDB
 29897                           fsr2h	equ	0xFDA
 29898                           fsr2l	equ	0xFD9
 29899                           status	equ	0xFD8
 29900                           
 29901 ;; *************** function i2_TMR7_StopTimer *****************
 29902 ;; Defined at:
 29903 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 29904 ;; Parameters:    Size  Location     Type
 29905 ;;		None
 29906 ;; Auto vars:     Size  Location     Type
 29907 ;;		None
 29908 ;; Return value:  Size  Location     Type
 29909 ;;                  1    wreg      void 
 29910 ;; Registers used:
 29911 ;;		None
 29912 ;; Tracked objects:
 29913 ;;		On entry : 0/0
 29914 ;;		On exit  : 0/0
 29915 ;;		Unchanged: 0/0
 29916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29921 ;;Total ram usage:        0 bytes
 29922 ;; Hardware stack levels used:    1
 29923 ;; This function calls:
 29924 ;;		Nothing
 29925 ;; This function is called by:
 29926 ;;		_ADCPostProcessingCallback
 29927 ;; This function uses a non-reentrant model
 29928 ;;
 29929                           
 29930                           	psect	text101
 29931  018180                     __ptext101:
 29932                           	opt stack 0
 29933  018180                     i2_TMR7_StopTimer:
 29934                           	opt stack 16
 29935                           
 29936                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 29937                           
 29938                           ;incstack = 0
 29939  018180  010F               	movlb	15	; () banked
 29940  018182  9130               	bcf	48,0,b	;volatile
 29941                           
 29942                           ; BSR set to: 15
 29943  018184  0012               	return		;funcret
 29944  018186                     __end_ofi2_TMR7_StopTimer:
 29945                           	opt stack 0
 29946                           tosu	equ	0xFFF
 29947                           tosh	equ	0xFFE
 29948                           tosl	equ	0xFFD
 29949                           pclatu	equ	0xFFB
 29950                           pclath	equ	0xFFA
 29951                           tblptru	equ	0xFF8
 29952                           tblptrh	equ	0xFF7
 29953                           tblptrl	equ	0xFF6
 29954                           tablat	equ	0xFF5
 29955                           prodh	equ	0xFF4
 29956                           prodl	equ	0xFF3
 29957                           intcon	equ	0xFF2
 29958                           indf0	equ	0xFEF
 29959                           postinc0	equ	0xFEE
 29960                           fsr0h	equ	0xFEA
 29961                           fsr0l	equ	0xFE9
 29962                           wreg	equ	0xFE8
 29963                           indf1	equ	0xFE7
 29964                           postdec1	equ	0xFE5
 29965                           plusw1	equ	0xFE3
 29966                           fsr1h	equ	0xFE2
 29967                           fsr1l	equ	0xFE1
 29968                           bsr	equ	0xFE0
 29969                           indf2	equ	0xFDF
 29970                           postinc2	equ	0xFDE
 29971                           postdec2	equ	0xFDD
 29972                           plusw2	equ	0xFDB
 29973                           fsr2h	equ	0xFDA
 29974                           fsr2l	equ	0xFD9
 29975                           status	equ	0xFD8
 29976                           
 29977 ;; *************** function _peakToRMS *****************
 29978 ;; Defined at:
 29979 ;;		line 103 in file "main.c"
 29980 ;; Parameters:    Size  Location     Type
 29981 ;;  Peak            4   81[BANK0 ] void 
 29982 ;;  Angle           4   85[BANK0 ] void 
 29983 ;; Auto vars:     Size  Location     Type
 29984 ;;  RMS             4  101[BANK0 ] void 
 29985 ;; Return value:  Size  Location     Type
 29986 ;;                  4   81[BANK0 ] void 
 29987 ;; Registers used:
 29988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29989 ;; Tracked objects:
 29990 ;;		On entry : 0/0
 29991 ;;		On exit  : 0/0
 29992 ;;		Unchanged: 0/0
 29993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29994 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29995 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29997 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29998 ;;Total ram usage:       24 bytes
 29999 ;; Hardware stack levels used:    1
 30000 ;; Hardware stack levels required when called:    5
 30001 ;; This function calls:
 30002 ;;		_acos
 30003 ;;		_sin
 30004 ;;		_sqrt
 30005 ;;		i2___fladd
 30006 ;;		i2___fldiv
 30007 ;;		i2___flmul
 30008 ;;		i2___flneg
 30009 ;; This function is called by:
 30010 ;;		_ADCPostProcessingCallback
 30011 ;; This function uses a non-reentrant model
 30012 ;;
 30013                           
 30014                           	psect	text102
 30015  015866                     __ptext102:
 30016                           	opt stack 0
 30017  015866                     _peakToRMS:
 30018                           	opt stack 11
 30019                           
 30020                           ;main.c: 106: double RMS = 0.0;
 30021                           
 30022                           ; BSR set to: 15
 30023                           ;incstack = 0
 30024  015866  0E00               	movlw	0
 30025  015868  0100               	movlb	0	; () banked
 30026  01586A  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 30027  01586C  0E00               	movlw	0
 30028  01586E  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 30029  015870  0E00               	movlw	0
 30030  015872  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 30031  015874  0E00               	movlw	0
 30032  015876  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 30033                           
 30034                           ; BSR set to: 0
 30035                           ;main.c: 109: RMS = 2.0 * acos(-1.0);
 30036  015878  0E00               	movlw	0
 30037  01587A  6FA9               	movwf	acos@x& (0+255),b
 30038  01587C  0E00               	movlw	0
 30039  01587E  6FAA               	movwf	(acos@x+1)& (0+255),b
 30040  015880  0E80               	movlw	128
 30041  015882  6FAB               	movwf	(acos@x+2)& (0+255),b
 30042  015884  0EBF               	movlw	191
 30043  015886  6FAC               	movwf	(acos@x+3)& (0+255),b
 30044  015888  EC93  F0BA         	call	_acos	;wreg free
 30045  01588C  C0A9  F0C1         	movff	?_acos,_peakToRMS$4048
 30046  015890  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4048+1
 30047  015894  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4048+2
 30048  015898  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4048+3
 30049                           
 30050                           ;main.c: 109: RMS = 2.0 * acos(-1.0);
 30051  01589C  C0C1  F030         	movff	_peakToRMS$4048,i2___flmul@b
 30052  0158A0  C0C2  F031         	movff	_peakToRMS$4048+1,i2___flmul@b+1
 30053  0158A4  C0C3  F032         	movff	_peakToRMS$4048+2,i2___flmul@b+2
 30054  0158A8  C0C4  F033         	movff	_peakToRMS$4048+3,i2___flmul@b+3
 30055  0158AC  0E00               	movlw	0
 30056  0158AE  6E34               	movwf	i2___flmul@a,c
 30057  0158B0  0E00               	movlw	0
 30058  0158B2  6E35               	movwf	i2___flmul@a+1,c
 30059  0158B4  0E00               	movlw	0
 30060  0158B6  6E36               	movwf	i2___flmul@a+2,c
 30061  0158B8  0E40               	movlw	64
 30062  0158BA  6E37               	movwf	i2___flmul@a+3,c
 30063  0158BC  EC7B  F09D         	call	i2___flmul	;wreg free
 30064  0158C0  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 30065  0158C4  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 30066  0158C8  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 30067  0158CC  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 30068                           
 30069                           ;main.c: 110: RMS = RMS - (2.0 * Angle);
 30070  0158D0  0E00               	movlw	0
 30071  0158D2  6E34               	movwf	i2___flmul@a,c
 30072  0158D4  0E00               	movlw	0
 30073  0158D6  6E35               	movwf	i2___flmul@a+1,c
 30074  0158D8  0E00               	movlw	0
 30075  0158DA  6E36               	movwf	i2___flmul@a+2,c
 30076  0158DC  0E40               	movlw	64
 30077  0158DE  6E37               	movwf	i2___flmul@a+3,c
 30078  0158E0  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 30079  0158E4  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 30080  0158E8  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 30081  0158EC  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 30082  0158F0  EC7B  F09D         	call	i2___flmul	;wreg free
 30083  0158F4  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 30084  0158F8  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 30085  0158FC  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 30086  015900  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 30087  015904  EC2A  F0BF         	call	i2___flneg	;wreg free
 30088  015908  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30089  01590C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30090  015910  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30091  015914  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30092  015918  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 30093  01591C  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 30094  015920  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 30095  015924  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 30096  015928  ECC2  F0A0         	call	i2___fladd	;wreg free
 30097  01592C  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 30098  015930  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 30099  015934  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 30100  015938  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 30101                           
 30102                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 30103  01593C  0E00               	movlw	0
 30104  01593E  6E34               	movwf	i2___flmul@a,c
 30105  015940  0E00               	movlw	0
 30106  015942  6E35               	movwf	i2___flmul@a+1,c
 30107  015944  0E00               	movlw	0
 30108  015946  6E36               	movwf	i2___flmul@a+2,c
 30109  015948  0E40               	movlw	64
 30110  01594A  6E37               	movwf	i2___flmul@a+3,c
 30111  01594C  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 30112  015950  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 30113  015954  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 30114  015958  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 30115  01595C  EC7B  F09D         	call	i2___flmul	;wreg free
 30116  015960  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4049
 30117  015964  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4049+1
 30118  015968  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4049+2
 30119  01596C  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4049+3
 30120                           
 30121                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 30122  015970  C0B9  F07E         	movff	_peakToRMS$4049,sin@f
 30123  015974  C0BA  F07F         	movff	_peakToRMS$4049+1,sin@f+1
 30124  015978  C0BB  F080         	movff	_peakToRMS$4049+2,sin@f+2
 30125  01597C  C0BC  F081         	movff	_peakToRMS$4049+3,sin@f+3
 30126  015980  ECE3  F0A3         	call	_sin	;wreg free
 30127  015984  C07E  F0BD         	movff	?_sin,_peakToRMS$4050
 30128  015988  C07F  F0BE         	movff	?_sin+1,_peakToRMS$4050+1
 30129  01598C  C080  F0BF         	movff	?_sin+2,_peakToRMS$4050+2
 30130  015990  C081  F0C0         	movff	?_sin+3,_peakToRMS$4050+3
 30131                           
 30132                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 30133  015994  C0BD  F056         	movff	_peakToRMS$4050,i2___fladd@b
 30134  015998  C0BE  F057         	movff	_peakToRMS$4050+1,i2___fladd@b+1
 30135  01599C  C0BF  F058         	movff	_peakToRMS$4050+2,i2___fladd@b+2
 30136  0159A0  C0C0  F059         	movff	_peakToRMS$4050+3,i2___fladd@b+3
 30137  0159A4  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 30138  0159A8  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 30139  0159AC  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 30140  0159B0  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 30141  0159B4  ECC2  F0A0         	call	i2___fladd	;wreg free
 30142  0159B8  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 30143  0159BC  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 30144  0159C0  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 30145  0159C4  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 30146                           
 30147                           ;main.c: 112: RMS = RMS / (4.0 * acos(-1.0));
 30148  0159C8  0E00               	movlw	0
 30149  0159CA  0100               	movlb	0	; () banked
 30150  0159CC  6FA9               	movwf	acos@x& (0+255),b
 30151  0159CE  0E00               	movlw	0
 30152  0159D0  6FAA               	movwf	(acos@x+1)& (0+255),b
 30153  0159D2  0E80               	movlw	128
 30154  0159D4  6FAB               	movwf	(acos@x+2)& (0+255),b
 30155  0159D6  0EBF               	movlw	191
 30156  0159D8  6FAC               	movwf	(acos@x+3)& (0+255),b
 30157  0159DA  EC93  F0BA         	call	_acos	;wreg free
 30158  0159DE  C0A9  F0C1         	movff	?_acos,_peakToRMS$4048
 30159  0159E2  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4048+1
 30160  0159E6  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4048+2
 30161  0159EA  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4048+3
 30162                           
 30163                           ;main.c: 112: RMS = RMS / (4.0 * acos(-1.0));
 30164  0159EE  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 30165  0159F2  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 30166  0159F6  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 30167  0159FA  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 30168  0159FE  0E00               	movlw	0
 30169  015A00  6E34               	movwf	i2___flmul@a,c
 30170  015A02  0E00               	movlw	0
 30171  015A04  6E35               	movwf	i2___flmul@a+1,c
 30172  015A06  0E80               	movlw	128
 30173  015A08  6E36               	movwf	i2___flmul@a+2,c
 30174  015A0A  0E40               	movlw	64
 30175  015A0C  6E37               	movwf	i2___flmul@a+3,c
 30176  015A0E  C0C1  F030         	movff	_peakToRMS$4048,i2___flmul@b
 30177  015A12  C0C2  F031         	movff	_peakToRMS$4048+1,i2___flmul@b+1
 30178  015A16  C0C3  F032         	movff	_peakToRMS$4048+2,i2___flmul@b+2
 30179  015A1A  C0C4  F033         	movff	_peakToRMS$4048+3,i2___flmul@b+3
 30180  015A1E  EC7B  F09D         	call	i2___flmul	;wreg free
 30181  015A22  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 30182  015A26  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 30183  015A2A  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 30184  015A2E  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 30185  015A32  EC82  F0A9         	call	i2___fldiv	;wreg free
 30186  015A36  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 30187  015A3A  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 30188  015A3E  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 30189  015A42  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 30190                           
 30191                           ;main.c: 113: RMS = sqrt(RMS);
 30192  015A46  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 30193  015A4A  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 30194  015A4E  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 30195  015A52  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 30196  015A56  EC60  F0A5         	call	_sqrt	;wreg free
 30197  015A5A  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 30198  015A5E  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 30199  015A62  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 30200  015A66  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 30201                           
 30202                           ;main.c: 114: RMS = Peak * RMS;
 30203  015A6A  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 30204  015A6E  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 30205  015A72  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 30206  015A76  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 30207  015A7A  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 30208  015A7E  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 30209  015A82  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 30210  015A86  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 30211  015A8A  EC7B  F09D         	call	i2___flmul	;wreg free
 30212  015A8E  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 30213  015A92  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 30214  015A96  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 30215  015A9A  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 30216                           
 30217                           ;main.c: 115: return RMS;
 30218  015A9E  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 30219  015AA2  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 30220  015AA6  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 30221  015AAA  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 30222  015AAE  0012               	return	
 30223  015AB0                     __end_of_peakToRMS:
 30224                           	opt stack 0
 30225                           tosu	equ	0xFFF
 30226                           tosh	equ	0xFFE
 30227                           tosl	equ	0xFFD
 30228                           pclatu	equ	0xFFB
 30229                           pclath	equ	0xFFA
 30230                           tblptru	equ	0xFF8
 30231                           tblptrh	equ	0xFF7
 30232                           tblptrl	equ	0xFF6
 30233                           tablat	equ	0xFF5
 30234                           prodh	equ	0xFF4
 30235                           prodl	equ	0xFF3
 30236                           intcon	equ	0xFF2
 30237                           indf0	equ	0xFEF
 30238                           postinc0	equ	0xFEE
 30239                           fsr0h	equ	0xFEA
 30240                           fsr0l	equ	0xFE9
 30241                           wreg	equ	0xFE8
 30242                           indf1	equ	0xFE7
 30243                           postdec1	equ	0xFE5
 30244                           plusw1	equ	0xFE3
 30245                           fsr1h	equ	0xFE2
 30246                           fsr1l	equ	0xFE1
 30247                           bsr	equ	0xFE0
 30248                           indf2	equ	0xFDF
 30249                           postinc2	equ	0xFDE
 30250                           postdec2	equ	0xFDD
 30251                           plusw2	equ	0xFDB
 30252                           fsr2h	equ	0xFDA
 30253                           fsr2l	equ	0xFD9
 30254                           status	equ	0xFD8
 30255                           
 30256 ;; *************** function _acos *****************
 30257 ;; Defined at:
 30258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 30259 ;; Parameters:    Size  Location     Type
 30260 ;;  x               4   73[BANK0 ] void 
 30261 ;; Auto vars:     Size  Location     Type
 30262 ;;		None
 30263 ;; Return value:  Size  Location     Type
 30264 ;;                  4   73[BANK0 ] void 
 30265 ;; Registers used:
 30266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30267 ;; Tracked objects:
 30268 ;;		On entry : 0/0
 30269 ;;		On exit  : 0/0
 30270 ;;		Unchanged: 0/0
 30271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30273 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30275 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30276 ;;Total ram usage:        8 bytes
 30277 ;; Hardware stack levels used:    1
 30278 ;; Hardware stack levels required when called:    4
 30279 ;; This function calls:
 30280 ;;		_asin
 30281 ;;		i2___fladd
 30282 ;;		i2___flneg
 30283 ;; This function is called by:
 30284 ;;		_peakToRMS
 30285 ;; This function uses a non-reentrant model
 30286 ;;
 30287                           
 30288                           	psect	text103
 30289  017526                     __ptext103:
 30290                           	opt stack 0
 30291  017526                     _acos:
 30292                           	opt stack 11
 30293                           
 30294                           ;incstack = 0
 30295  017526  C0A9  F091         	movff	acos@x,asin@x
 30296  01752A  C0AA  F092         	movff	acos@x+1,asin@x+1
 30297  01752E  C0AB  F093         	movff	acos@x+2,asin@x+2
 30298  017532  C0AC  F094         	movff	acos@x+3,asin@x+3
 30299  017536  EC61  F0A2         	call	_asin	;wreg free
 30300  01753A  C091  F0AD         	movff	?_asin,_acos$4056
 30301  01753E  C092  F0AE         	movff	?_asin+1,_acos$4056+1
 30302  017542  C093  F0AF         	movff	?_asin+2,_acos$4056+2
 30303  017546  C094  F0B0         	movff	?_asin+3,_acos$4056+3
 30304  01754A  C0AD  F02C         	movff	_acos$4056,i2___flneg@f1
 30305  01754E  C0AE  F02D         	movff	_acos$4056+1,i2___flneg@f1+1
 30306  017552  C0AF  F02E         	movff	_acos$4056+2,i2___flneg@f1+2
 30307  017556  C0B0  F02F         	movff	_acos$4056+3,i2___flneg@f1+3
 30308  01755A  EC2A  F0BF         	call	i2___flneg	;wreg free
 30309  01755E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30310  017562  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30311  017566  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30312  01756A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30313  01756E  0EDB               	movlw	219
 30314  017570  6E5A               	movwf	i2___fladd@a,c
 30315  017572  0E0F               	movlw	15
 30316  017574  6E5B               	movwf	i2___fladd@a+1,c
 30317  017576  0EC9               	movlw	201
 30318  017578  6E5C               	movwf	i2___fladd@a+2,c
 30319  01757A  0E3F               	movlw	63
 30320  01757C  6E5D               	movwf	i2___fladd@a+3,c
 30321  01757E  ECC2  F0A0         	call	i2___fladd	;wreg free
 30322  017582  C056  F0A9         	movff	?i2___fladd,?_acos
 30323  017586  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 30324  01758A  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 30325  01758E  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 30326  017592  0012               	return	
 30327  017594                     __end_of_acos:
 30328                           	opt stack 0
 30329                           tosu	equ	0xFFF
 30330                           tosh	equ	0xFFE
 30331                           tosl	equ	0xFFD
 30332                           pclatu	equ	0xFFB
 30333                           pclath	equ	0xFFA
 30334                           tblptru	equ	0xFF8
 30335                           tblptrh	equ	0xFF7
 30336                           tblptrl	equ	0xFF6
 30337                           tablat	equ	0xFF5
 30338                           prodh	equ	0xFF4
 30339                           prodl	equ	0xFF3
 30340                           intcon	equ	0xFF2
 30341                           indf0	equ	0xFEF
 30342                           postinc0	equ	0xFEE
 30343                           fsr0h	equ	0xFEA
 30344                           fsr0l	equ	0xFE9
 30345                           wreg	equ	0xFE8
 30346                           indf1	equ	0xFE7
 30347                           postdec1	equ	0xFE5
 30348                           plusw1	equ	0xFE3
 30349                           fsr1h	equ	0xFE2
 30350                           fsr1l	equ	0xFE1
 30351                           bsr	equ	0xFE0
 30352                           indf2	equ	0xFDF
 30353                           postinc2	equ	0xFDE
 30354                           postdec2	equ	0xFDD
 30355                           plusw2	equ	0xFDB
 30356                           fsr2h	equ	0xFDA
 30357                           fsr2l	equ	0xFD9
 30358                           status	equ	0xFD8
 30359                           
 30360 ;; *************** function _asin *****************
 30361 ;; Defined at:
 30362 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 30363 ;; Parameters:    Size  Location     Type
 30364 ;;  x               4   49[BANK0 ] void 
 30365 ;; Auto vars:     Size  Location     Type
 30366 ;;  y               4   65[BANK0 ] void 
 30367 ;;  sgn             4   53[BANK0 ] void 
 30368 ;; Return value:  Size  Location     Type
 30369 ;;                  4   49[BANK0 ] void 
 30370 ;; Registers used:
 30371 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30372 ;; Tracked objects:
 30373 ;;		On entry : 0/0
 30374 ;;		On exit  : 0/0
 30375 ;;		Unchanged: 0/0
 30376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30378 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30380 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30381 ;;Total ram usage:       24 bytes
 30382 ;; Hardware stack levels used:    1
 30383 ;; Hardware stack levels required when called:    3
 30384 ;; This function calls:
 30385 ;;		_atan
 30386 ;;		_fabs
 30387 ;;		_sqrt
 30388 ;;		i2___fladd
 30389 ;;		i2___fldiv
 30390 ;;		i2___flge
 30391 ;;		i2___flmul
 30392 ;;		i2___flneg
 30393 ;; This function is called by:
 30394 ;;		_acos
 30395 ;; This function uses a non-reentrant model
 30396 ;;
 30397                           
 30398                           	psect	text104
 30399  0144C2                     __ptext104:
 30400                           	opt stack 0
 30401  0144C2                     _asin:
 30402                           	opt stack 11
 30403                           
 30404                           ;incstack = 0
 30405  0144C2  0E00               	movlw	0
 30406  0144C4  6E34               	movwf	i2___flge@ff1,c
 30407  0144C6  0E00               	movlw	0
 30408  0144C8  6E35               	movwf	i2___flge@ff1+1,c
 30409  0144CA  0E80               	movlw	128
 30410  0144CC  6E36               	movwf	i2___flge@ff1+2,c
 30411  0144CE  0E3F               	movlw	63
 30412  0144D0  6E37               	movwf	i2___flge@ff1+3,c
 30413  0144D2  C091  F030         	movff	asin@x,fabs@d
 30414  0144D6  C092  F031         	movff	asin@x+1,fabs@d+1
 30415  0144DA  C093  F032         	movff	asin@x+2,fabs@d+2
 30416  0144DE  C094  F033         	movff	asin@x+3,fabs@d+3
 30417  0144E2  EC26  F0BE         	call	_fabs	;wreg free
 30418  0144E6  C030  F038         	movff	?_fabs,i2___flge@ff2
 30419  0144EA  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 30420  0144EE  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 30421  0144F2  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 30422  0144F6  ECB2  F0B2         	call	i2___flge	;wreg free
 30423  0144FA  B0D8               	btfsc	status,0,c
 30424  0144FC  D00F               	goto	i2l1590
 30425  0144FE  0E00               	movlw	0
 30426  014500  0102               	movlb	2	; () banked
 30427  014502  6F73               	movwf	(_errno+1)& (0+255),b
 30428  014504  0E21               	movlw	33
 30429  014506  6F72               	movwf	_errno& (0+255),b
 30430  014508  0E00               	movlw	0
 30431  01450A  0100               	movlb	0	; () banked
 30432  01450C  6F91               	movwf	?_asin& (0+255),b
 30433  01450E  0E00               	movlw	0
 30434  014510  6F92               	movwf	(?_asin+1)& (0+255),b
 30435  014512  0E00               	movlw	0
 30436  014514  6F93               	movwf	(?_asin+2)& (0+255),b
 30437  014516  0E00               	movlw	0
 30438  014518  6F94               	movwf	(?_asin+3)& (0+255),b
 30439                           
 30440                           ; BSR set to: 0
 30441  01451A  0012               	return	
 30442  01451C                     i2l1590:
 30443                           
 30444                           ; BSR set to: 0
 30445  01451C  0E00               	movlw	0
 30446  01451E  0100               	movlb	0	; () banked
 30447  014520  6F95               	movwf	asin@sgn& (0+255),b
 30448  014522  0E00               	movlw	0
 30449  014524  6F96               	movwf	(asin@sgn+1)& (0+255),b
 30450  014526  0E80               	movlw	128
 30451  014528  6F97               	movwf	(asin@sgn+2)& (0+255),b
 30452  01452A  0E3F               	movlw	63
 30453  01452C  6F98               	movwf	(asin@sgn+3)& (0+255),b
 30454                           
 30455                           ; BSR set to: 0
 30456  01452E  C091  F034         	movff	asin@x,i2___flmul@a
 30457  014532  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 30458  014536  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 30459  01453A  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 30460  01453E  C091  F030         	movff	asin@x,i2___flmul@b
 30461  014542  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 30462  014546  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 30463  01454A  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 30464  01454E  EC7B  F09D         	call	i2___flmul	;wreg free
 30465  014552  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 30466  014556  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 30467  01455A  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 30468  01455E  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 30469  014562  EC2A  F0BF         	call	i2___flneg	;wreg free
 30470  014566  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30471  01456A  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30472  01456E  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30473  014572  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30474  014576  0E00               	movlw	0
 30475  014578  6E5A               	movwf	i2___fladd@a,c
 30476  01457A  0E00               	movlw	0
 30477  01457C  6E5B               	movwf	i2___fladd@a+1,c
 30478  01457E  0E80               	movlw	128
 30479  014580  6E5C               	movwf	i2___fladd@a+2,c
 30480  014582  0E3F               	movlw	63
 30481  014584  6E5D               	movwf	i2___fladd@a+3,c
 30482  014586  ECC2  F0A0         	call	i2___fladd	;wreg free
 30483  01458A  C056  F06C         	movff	?i2___fladd,sqrt@a
 30484  01458E  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 30485  014592  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 30486  014596  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 30487  01459A  EC60  F0A5         	call	_sqrt	;wreg free
 30488  01459E  C06C  F0A1         	movff	?_sqrt,asin@y
 30489  0145A2  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 30490  0145A6  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 30491  0145AA  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 30492  0145AE  C091  F030         	movff	asin@x,fabs@d
 30493  0145B2  C092  F031         	movff	asin@x+1,fabs@d+1
 30494  0145B6  C093  F032         	movff	asin@x+2,fabs@d+2
 30495  0145BA  C094  F033         	movff	asin@x+3,fabs@d+3
 30496  0145BE  EC26  F0BE         	call	_fabs	;wreg free
 30497  0145C2  C030  F034         	movff	?_fabs,i2___flge@ff1
 30498  0145C6  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 30499  0145CA  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 30500  0145CE  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 30501  0145D2  0E8F               	movlw	143
 30502  0145D4  6E38               	movwf	i2___flge@ff2,c
 30503  0145D6  0EC2               	movlw	194
 30504  0145D8  6E39               	movwf	i2___flge@ff2+1,c
 30505  0145DA  0E35               	movlw	53
 30506  0145DC  6E3A               	movwf	i2___flge@ff2+2,c
 30507  0145DE  0E3F               	movlw	63
 30508  0145E0  6E3B               	movwf	i2___flge@ff2+3,c
 30509  0145E2  ECB2  F0B2         	call	i2___flge	;wreg free
 30510  0145E6  B0D8               	btfsc	status,0,c
 30511  0145E8  D02D               	goto	i2l1592
 30512  0145EA  C091  F013         	movff	asin@x,i2___fldiv@b
 30513  0145EE  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 30514  0145F2  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 30515  0145F6  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 30516  0145FA  C0A1  F017         	movff	asin@y,i2___fldiv@a
 30517  0145FE  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 30518  014602  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 30519  014606  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 30520  01460A  EC82  F0A9         	call	i2___fldiv	;wreg free
 30521  01460E  C013  F0A5         	movff	?i2___fldiv,_asin$4057
 30522  014612  C014  F0A6         	movff	?i2___fldiv+1,_asin$4057+1
 30523  014616  C015  F0A7         	movff	?i2___fldiv+2,_asin$4057+2
 30524  01461A  C016  F0A8         	movff	?i2___fldiv+3,_asin$4057+3
 30525  01461E  C0A5  F07C         	movff	_asin$4057,atan@f
 30526  014622  C0A6  F07D         	movff	_asin$4057+1,atan@f+1
 30527  014626  C0A7  F07E         	movff	_asin$4057+2,atan@f+2
 30528  01462A  C0A8  F07F         	movff	_asin$4057+3,atan@f+3
 30529  01462E  EC58  F0AD         	call	_atan	;wreg free
 30530  014632  C07C  F091         	movff	?_atan,?_asin
 30531  014636  C07D  F092         	movff	?_atan+1,?_asin+1
 30532  01463A  C07E  F093         	movff	?_atan+2,?_asin+2
 30533  01463E  C07F  F094         	movff	?_atan+3,?_asin+3
 30534  014642  0012               	return	
 30535  014644                     i2l1592:
 30536  014644  0100               	movlb	0	; () banked
 30537  014646  AF94               	btfss	(asin@x+3)& (0+255),7,b
 30538  014648  D06D               	goto	i2l1593
 30539                           
 30540                           ; BSR set to: 0
 30541  01464A  C091  F017         	movff	asin@x,i2___fldiv@a
 30542  01464E  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 30543  014652  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 30544  014656  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 30545  01465A  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 30546  01465E  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 30547  014662  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 30548  014666  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 30549  01466A  EC2A  F0BF         	call	i2___flneg	;wreg free
 30550  01466E  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 30551  014672  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 30552  014676  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 30553  01467A  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 30554  01467E  EC82  F0A9         	call	i2___fldiv	;wreg free
 30555  014682  C013  F0A5         	movff	?i2___fldiv,_asin$4057
 30556  014686  C014  F0A6         	movff	?i2___fldiv+1,_asin$4057+1
 30557  01468A  C015  F0A7         	movff	?i2___fldiv+2,_asin$4057+2
 30558  01468E  C016  F0A8         	movff	?i2___fldiv+3,_asin$4057+3
 30559  014692  C0A5  F07C         	movff	_asin$4057,atan@f
 30560  014696  C0A6  F07D         	movff	_asin$4057+1,atan@f+1
 30561  01469A  C0A7  F07E         	movff	_asin$4057+2,atan@f+2
 30562  01469E  C0A8  F07F         	movff	_asin$4057+3,atan@f+3
 30563  0146A2  EC58  F0AD         	call	_atan	;wreg free
 30564  0146A6  C07C  F09D         	movff	?_atan,_asin$4058
 30565  0146AA  C07D  F09E         	movff	?_atan+1,_asin$4058+1
 30566  0146AE  C07E  F09F         	movff	?_atan+2,_asin$4058+2
 30567  0146B2  C07F  F0A0         	movff	?_atan+3,_asin$4058+3
 30568  0146B6  0EDB               	movlw	219
 30569  0146B8  6E5A               	movwf	i2___fladd@a,c
 30570  0146BA  0E0F               	movlw	15
 30571  0146BC  6E5B               	movwf	i2___fladd@a+1,c
 30572  0146BE  0EC9               	movlw	201
 30573  0146C0  6E5C               	movwf	i2___fladd@a+2,c
 30574  0146C2  0E3F               	movlw	63
 30575  0146C4  6E5D               	movwf	i2___fladd@a+3,c
 30576  0146C6  C09D  F02C         	movff	_asin$4058,i2___flneg@f1
 30577  0146CA  C09E  F02D         	movff	_asin$4058+1,i2___flneg@f1+1
 30578  0146CE  C09F  F02E         	movff	_asin$4058+2,i2___flneg@f1+2
 30579  0146D2  C0A0  F02F         	movff	_asin$4058+3,i2___flneg@f1+3
 30580  0146D6  EC2A  F0BF         	call	i2___flneg	;wreg free
 30581  0146DA  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30582  0146DE  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30583  0146E2  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30584  0146E6  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30585  0146EA  ECC2  F0A0         	call	i2___fladd	;wreg free
 30586  0146EE  C056  F099         	movff	?i2___fladd,_asin$4059
 30587  0146F2  C057  F09A         	movff	?i2___fladd+1,_asin$4059+1
 30588  0146F6  C058  F09B         	movff	?i2___fladd+2,_asin$4059+2
 30589  0146FA  C059  F09C         	movff	?i2___fladd+3,_asin$4059+3
 30590  0146FE  C099  F02C         	movff	_asin$4059,i2___flneg@f1
 30591  014702  C09A  F02D         	movff	_asin$4059+1,i2___flneg@f1+1
 30592  014706  C09B  F02E         	movff	_asin$4059+2,i2___flneg@f1+2
 30593  01470A  C09C  F02F         	movff	_asin$4059+3,i2___flneg@f1+3
 30594  01470E  EC2A  F0BF         	call	i2___flneg	;wreg free
 30595  014712  C02C  F091         	movff	?i2___flneg,?_asin
 30596  014716  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 30597  01471A  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 30598  01471E  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 30599  014722  0012               	return	
 30600  014724                     i2l1593:
 30601  014724  C091  F017         	movff	asin@x,i2___fldiv@a
 30602  014728  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 30603  01472C  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 30604  014730  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 30605  014734  C0A1  F013         	movff	asin@y,i2___fldiv@b
 30606  014738  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 30607  01473C  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 30608  014740  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 30609  014744  EC82  F0A9         	call	i2___fldiv	;wreg free
 30610  014748  C013  F0A5         	movff	?i2___fldiv,_asin$4057
 30611  01474C  C014  F0A6         	movff	?i2___fldiv+1,_asin$4057+1
 30612  014750  C015  F0A7         	movff	?i2___fldiv+2,_asin$4057+2
 30613  014754  C016  F0A8         	movff	?i2___fldiv+3,_asin$4057+3
 30614  014758  C0A5  F07C         	movff	_asin$4057,atan@f
 30615  01475C  C0A6  F07D         	movff	_asin$4057+1,atan@f+1
 30616  014760  C0A7  F07E         	movff	_asin$4057+2,atan@f+2
 30617  014764  C0A8  F07F         	movff	_asin$4057+3,atan@f+3
 30618  014768  EC58  F0AD         	call	_atan	;wreg free
 30619  01476C  C07C  F09D         	movff	?_atan,_asin$4058
 30620  014770  C07D  F09E         	movff	?_atan+1,_asin$4058+1
 30621  014774  C07E  F09F         	movff	?_atan+2,_asin$4058+2
 30622  014778  C07F  F0A0         	movff	?_atan+3,_asin$4058+3
 30623  01477C  C09D  F02C         	movff	_asin$4058,i2___flneg@f1
 30624  014780  C09E  F02D         	movff	_asin$4058+1,i2___flneg@f1+1
 30625  014784  C09F  F02E         	movff	_asin$4058+2,i2___flneg@f1+2
 30626  014788  C0A0  F02F         	movff	_asin$4058+3,i2___flneg@f1+3
 30627  01478C  EC2A  F0BF         	call	i2___flneg	;wreg free
 30628  014790  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30629  014794  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30630  014798  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30631  01479C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30632  0147A0  0EDB               	movlw	219
 30633  0147A2  6E5A               	movwf	i2___fladd@a,c
 30634  0147A4  0E0F               	movlw	15
 30635  0147A6  6E5B               	movwf	i2___fladd@a+1,c
 30636  0147A8  0EC9               	movlw	201
 30637  0147AA  6E5C               	movwf	i2___fladd@a+2,c
 30638  0147AC  0E3F               	movlw	63
 30639  0147AE  6E5D               	movwf	i2___fladd@a+3,c
 30640  0147B0  ECC2  F0A0         	call	i2___fladd	;wreg free
 30641  0147B4  C056  F091         	movff	?i2___fladd,?_asin
 30642  0147B8  C057  F092         	movff	?i2___fladd+1,?_asin+1
 30643  0147BC  C058  F093         	movff	?i2___fladd+2,?_asin+2
 30644  0147C0  C059  F094         	movff	?i2___fladd+3,?_asin+3
 30645  0147C4  0012               	return	
 30646  0147C6                     __end_of_asin:
 30647                           	opt stack 0
 30648                           tosu	equ	0xFFF
 30649                           tosh	equ	0xFFE
 30650                           tosl	equ	0xFFD
 30651                           pclatu	equ	0xFFB
 30652                           pclath	equ	0xFFA
 30653                           tblptru	equ	0xFF8
 30654                           tblptrh	equ	0xFF7
 30655                           tblptrl	equ	0xFF6
 30656                           tablat	equ	0xFF5
 30657                           prodh	equ	0xFF4
 30658                           prodl	equ	0xFF3
 30659                           intcon	equ	0xFF2
 30660                           indf0	equ	0xFEF
 30661                           postinc0	equ	0xFEE
 30662                           fsr0h	equ	0xFEA
 30663                           fsr0l	equ	0xFE9
 30664                           wreg	equ	0xFE8
 30665                           indf1	equ	0xFE7
 30666                           postdec1	equ	0xFE5
 30667                           plusw1	equ	0xFE3
 30668                           fsr1h	equ	0xFE2
 30669                           fsr1l	equ	0xFE1
 30670                           bsr	equ	0xFE0
 30671                           indf2	equ	0xFDF
 30672                           postinc2	equ	0xFDE
 30673                           postdec2	equ	0xFDD
 30674                           plusw2	equ	0xFDB
 30675                           fsr2h	equ	0xFDA
 30676                           fsr2l	equ	0xFD9
 30677                           status	equ	0xFD8
 30678                           
 30679 ;; *************** function _sqrt *****************
 30680 ;; Defined at:
 30681 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 30682 ;; Parameters:    Size  Location     Type
 30683 ;;  a               4   12[BANK0 ] void 
 30684 ;; Auto vars:     Size  Location     Type
 30685 ;;  frac            4   37[BANK0 ] unsigned long 
 30686 ;;  root            4   33[BANK0 ] struct .
 30687 ;;  grs             4   27[BANK0 ] unsigned long 
 30688 ;;  tfrac           4   22[BANK0 ] unsigned long 
 30689 ;;  exp             2   31[BANK0 ] int 
 30690 ;;  p               1   26[BANK0 ] unsigned char 
 30691 ;;  i               1   21[BANK0 ] unsigned char 
 30692 ;;  sign            1   20[BANK0 ] unsigned char 
 30693 ;; Return value:  Size  Location     Type
 30694 ;;                  4   12[BANK0 ] unsigned char 
 30695 ;; Registers used:
 30696 ;;		wreg, status,2, status,0
 30697 ;; Tracked objects:
 30698 ;;		On entry : 0/0
 30699 ;;		On exit  : 0/0
 30700 ;;		Unchanged: 0/0
 30701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30702 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30703 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30705 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30706 ;;Total ram usage:       29 bytes
 30707 ;; Hardware stack levels used:    1
 30708 ;; This function calls:
 30709 ;;		Nothing
 30710 ;; This function is called by:
 30711 ;;		_peakToRMS
 30712 ;;		_asin
 30713 ;; This function uses a non-reentrant model
 30714 ;;
 30715                           
 30716                           	psect	text105
 30717  014AC0                     __ptext105:
 30718                           	opt stack 0
 30719  014AC0                     _sqrt:
 30720                           	opt stack 15
 30721                           
 30722                           ;incstack = 0
 30723  014AC0  0100               	movlb	0	; () banked
 30724  014AC2  516F               	movf	(sqrt@a+3)& (0+255),w,b
 30725  014AC4  0B80               	andlw	128
 30726  014AC6  6F74               	movwf	sqrt@sign& (0+255),b
 30727  014AC8  516F               	movf	(sqrt@a+3)& (0+255),w,b
 30728  014ACA  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 30729  014ACC  6F7A               	movwf	sqrt@p& (0+255),b
 30730                           
 30731                           ; BSR set to: 0
 30732  014ACE  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 30733                           
 30734                           ; BSR set to: 0
 30735  014AD0  817A               	bsf	sqrt@p& (0+255),0,b
 30736                           
 30737                           ; BSR set to: 0
 30738                           
 30739                           ; BSR set to: 0
 30740  014AD2  C07A  F07F         	movff	sqrt@p,sqrt@exp
 30741  014AD6  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 30742                           
 30743                           ; BSR set to: 0
 30744  014AD8  0EFF               	movlw	255
 30745  014ADA  156C               	andwf	sqrt@a& (0+255),w,b
 30746  014ADC  6F85               	movwf	sqrt@frac& (0+255),b
 30747  014ADE  0EFF               	movlw	255
 30748  014AE0  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 30749  014AE2  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 30750  014AE4  0E7F               	movlw	127
 30751  014AE6  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 30752  014AE8  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 30753  014AEA  0E00               	movlw	0
 30754  014AEC  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 30755  014AEE  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 30756                           
 30757                           ; BSR set to: 0
 30758  014AF0  517F               	movf	sqrt@exp& (0+255),w,b
 30759  014AF2  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 30760  014AF4  B4D8               	btfsc	status,2,c
 30761  014AF6  D005               	goto	i2l2119
 30762                           
 30763                           ; BSR set to: 0
 30764  014AF8  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 30765                           
 30766                           ; BSR set to: 0
 30767  014AFA  297F               	incf	sqrt@exp& (0+255),w,b
 30768  014AFC  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 30769  014AFE  A4D8               	btfss	status,2,c
 30770  014B00  D008               	goto	i2l2121
 30771  014B02                     i2l2119:
 30772                           
 30773                           ; BSR set to: 0
 30774                           
 30775                           ; BSR set to: 0
 30776  014B02  0E00               	movlw	0
 30777  014B04  6F85               	movwf	sqrt@frac& (0+255),b
 30778  014B06  0E00               	movlw	0
 30779  014B08  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 30780  014B0A  0E00               	movlw	0
 30781  014B0C  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 30782  014B0E  0E00               	movlw	0
 30783  014B10  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 30784  014B12                     i2l2121:
 30785                           
 30786                           ; BSR set to: 0
 30787                           
 30788                           ; BSR set to: 0
 30789  014B12  517F               	movf	sqrt@exp& (0+255),w,b
 30790  014B14  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 30791  014B16  A4D8               	btfss	status,2,c
 30792  014B18  D009               	goto	i2l2122
 30793                           
 30794                           ; BSR set to: 0
 30795  014B1A  0E00               	movlw	0
 30796  014B1C  6F6C               	movwf	?_sqrt& (0+255),b
 30797  014B1E  0E00               	movlw	0
 30798  014B20  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 30799  014B22  0E00               	movlw	0
 30800  014B24  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 30801  014B26  0E00               	movlw	0
 30802  014B28  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 30803                           
 30804                           ; BSR set to: 0
 30805  014B2A  0012               	return	
 30806  014B2C                     i2l2122:
 30807                           
 30808                           ; BSR set to: 0
 30809                           
 30810                           ; BSR set to: 0
 30811  014B2C  5174               	movf	sqrt@sign& (0+255),w,b
 30812  014B2E  B4D8               	btfsc	status,2,c
 30813  014B30  D01A               	goto	i2l2124
 30814                           
 30815                           ; BSR set to: 0
 30816  014B32  0E00               	movlw	0
 30817  014B34  6F81               	movwf	sqrt@root& (0+255),b
 30818  014B36  0E00               	movlw	0
 30819  014B38  6F82               	movwf	(sqrt@root+1)& (0+255),b
 30820  014B3A  0E40               	movlw	64
 30821  014B3C  6F83               	movwf	(sqrt@root+2)& (0+255),b
 30822  014B3E  0E00               	movlw	0
 30823  014B40  6F84               	movwf	(sqrt@root+3)& (0+255),b
 30824                           
 30825                           ; BSR set to: 0
 30826  014B42  0E80               	movlw	128
 30827  014B44  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 30828  014B46  0EFF               	movlw	255
 30829  014B48  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 30830                           
 30831                           ; BSR set to: 0
 30832  014B4A  0E00               	movlw	0
 30833  014B4C  0102               	movlb	2	; () banked
 30834  014B4E  6F73               	movwf	(_errno+1)& (0+255),b
 30835  014B50  0E21               	movlw	33
 30836  014B52  6F72               	movwf	_errno& (0+255),b
 30837                           
 30838                           ; BSR set to: 2
 30839  014B54  C081  F06C         	movff	sqrt@root,?_sqrt
 30840  014B58  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 30841  014B5C  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 30842  014B60  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 30843                           
 30844                           ; BSR set to: 2
 30845  014B64  0012               	return	
 30846  014B66                     i2l2124:
 30847                           
 30848                           ; BSR set to: 2
 30849  014B66  0100               	movlb	0	; () banked
 30850  014B68  297F               	incf	sqrt@exp& (0+255),w,b
 30851  014B6A  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 30852  014B6C  A4D8               	btfss	status,2,c
 30853  014B6E  D011               	goto	i2l2125
 30854                           
 30855                           ; BSR set to: 0
 30856  014B70  0E00               	movlw	0
 30857  014B72  6F81               	movwf	sqrt@root& (0+255),b
 30858  014B74  0E00               	movlw	0
 30859  014B76  6F82               	movwf	(sqrt@root+1)& (0+255),b
 30860  014B78  0E80               	movlw	128
 30861  014B7A  6F83               	movwf	(sqrt@root+2)& (0+255),b
 30862  014B7C  0E7F               	movlw	127
 30863  014B7E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 30864                           
 30865                           ; BSR set to: 0
 30866  014B80  C081  F06C         	movff	sqrt@root,?_sqrt
 30867  014B84  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 30868  014B88  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 30869  014B8C  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 30870                           
 30871                           ; BSR set to: 0
 30872  014B90  0012               	return	
 30873  014B92                     i2l2125:
 30874                           
 30875                           ; BSR set to: 0
 30876                           
 30877                           ; BSR set to: 0
 30878  014B92  0E81               	movlw	129
 30879  014B94  277F               	addwf	sqrt@exp& (0+255),f,b
 30880  014B96  0EFF               	movlw	255
 30881  014B98  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 30882  014B9A  517F               	movf	sqrt@exp& (0+255),w,b
 30883  014B9C  0B01               	andlw	1
 30884  014B9E  6F7A               	movwf	sqrt@p& (0+255),b
 30885  014BA0  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 30886  014BA2  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 30887  014BA4  337F               	rrcf	sqrt@exp& (0+255),f,b
 30888  014BA6  0E7F               	movlw	127
 30889  014BA8  277F               	addwf	sqrt@exp& (0+255),f,b
 30890  014BAA  0E00               	movlw	0
 30891  014BAC  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 30892  014BAE  90D8               	bcf	status,0,c
 30893  014BB0  3585               	rlcf	sqrt@frac& (0+255),w,b
 30894  014BB2  6F76               	movwf	sqrt@tfrac& (0+255),b
 30895  014BB4  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 30896  014BB6  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 30897  014BB8  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 30898  014BBA  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 30899  014BBC  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 30900  014BBE  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 30901                           
 30902                           ; BSR set to: 0
 30903  014BC0  0E00               	movlw	0
 30904  014BC2  6F85               	movwf	sqrt@frac& (0+255),b
 30905  014BC4  0E00               	movlw	0
 30906  014BC6  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 30907  014BC8  0E00               	movlw	0
 30908  014BCA  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 30909  014BCC  0E00               	movlw	0
 30910  014BCE  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 30911                           
 30912                           ; BSR set to: 0
 30913  014BD0  0E00               	movlw	0
 30914  014BD2  6F7B               	movwf	sqrt@grs& (0+255),b
 30915  014BD4  0E00               	movlw	0
 30916  014BD6  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 30917  014BD8  0E00               	movlw	0
 30918  014BDA  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 30919  014BDC  0E01               	movlw	1
 30920  014BDE  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 30921                           
 30922                           ; BSR set to: 0
 30923  014BE0  517A               	movf	sqrt@p& (0+255),w,b
 30924  014BE2  B4D8               	btfsc	status,2,c
 30925  014BE4  D005               	goto	i2l2126
 30926                           
 30927                           ; BSR set to: 0
 30928  014BE6  90D8               	bcf	status,0,c
 30929  014BE8  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 30930  014BEA  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 30931  014BEC  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 30932  014BEE  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 30933  014BF0                     i2l2126:
 30934                           
 30935                           ; BSR set to: 0
 30936                           
 30937                           ; BSR set to: 0
 30938  014BF0  0E00               	movlw	0
 30939  014BF2  6F75               	movwf	sqrt@i& (0+255),b
 30940  014BF4  D052               	goto	i2l2127
 30941  014BF6                     
 30942                           ; BSR set to: 0
 30943                           
 30944                           ; BSR set to: 0
 30945  014BF6  517B               	movf	sqrt@grs& (0+255),w,b
 30946  014BF8  1385               	iorwf	sqrt@frac& (0+255),f,b
 30947  014BFA  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 30948  014BFC  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 30949  014BFE  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 30950  014C00  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 30951  014C02  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 30952  014C04  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 30953  014C06  5185               	movf	sqrt@frac& (0+255),w,b
 30954  014C08  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 30955  014C0A  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 30956  014C0C  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 30957  014C0E  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 30958  014C10  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 30959  014C12  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 30960  014C14  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 30961  014C16  A0D8               	btfss	status,0,c
 30962  014C18  D011               	goto	i2l2129
 30963                           
 30964                           ; BSR set to: 0
 30965  014C1A  5185               	movf	sqrt@frac& (0+255),w,b
 30966  014C1C  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 30967  014C1E  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 30968  014C20  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 30969  014C22  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 30970  014C24  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 30971  014C26  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 30972  014C28  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 30973  014C2A  517B               	movf	sqrt@grs& (0+255),w,b
 30974  014C2C  2785               	addwf	sqrt@frac& (0+255),f,b
 30975  014C2E  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 30976  014C30  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 30977  014C32  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 30978  014C34  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 30979  014C36  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 30980  014C38  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 30981  014C3A  D014               	goto	i2l2130
 30982  014C3C                     i2l2129:
 30983                           
 30984                           ; BSR set to: 0
 30985                           
 30986                           ; BSR set to: 0
 30987  014C3C  C07B  F070         	movff	sqrt@grs,??_sqrt
 30988  014C40  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 30989  014C44  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 30990  014C48  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 30991  014C4C  1F70               	comf	??_sqrt& (0+255),f,b
 30992  014C4E  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 30993  014C50  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 30994  014C52  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 30995  014C54  5170               	movf	??_sqrt& (0+255),w,b
 30996  014C56  1785               	andwf	sqrt@frac& (0+255),f,b
 30997  014C58  5171               	movf	(??_sqrt+1)& (0+255),w,b
 30998  014C5A  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 30999  014C5C  5172               	movf	(??_sqrt+2)& (0+255),w,b
 31000  014C5E  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 31001  014C60  5173               	movf	(??_sqrt+3)& (0+255),w,b
 31002  014C62  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 31003  014C64                     i2l2130:
 31004                           
 31005                           ; BSR set to: 0
 31006                           
 31007                           ; BSR set to: 0
 31008  014C64  C07B  F070         	movff	sqrt@grs,??_sqrt
 31009  014C68  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 31010  014C6C  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 31011  014C70  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 31012  014C74  90D8               	bcf	status,0,c
 31013  014C76  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31014  014C78  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31015  014C7A  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31016  014C7C  3370               	rrcf	??_sqrt& (0+255),f,b
 31017  014C7E  C070  F07B         	movff	??_sqrt,sqrt@grs
 31018  014C82  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 31019  014C86  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 31020  014C8A  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 31021                           
 31022                           ; BSR set to: 0
 31023  014C8E  90D8               	bcf	status,0,c
 31024  014C90  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 31025  014C92  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 31026  014C94  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 31027  014C96  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 31028                           
 31029                           ; BSR set to: 0
 31030  014C98  2B75               	incf	sqrt@i& (0+255),f,b
 31031  014C9A                     i2l2127:
 31032                           
 31033                           ; BSR set to: 0
 31034                           
 31035                           ; BSR set to: 0
 31036  014C9A  0E18               	movlw	24
 31037  014C9C  6575               	cpfsgt	sqrt@i& (0+255),b
 31038  014C9E  D7AB               	goto	i2l2128
 31039                           
 31040                           ; BSR set to: 0
 31041                           
 31042                           ; BSR set to: 0
 31043  014CA0  C085  F070         	movff	sqrt@frac,??_sqrt
 31044  014CA4  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31045  014CA8  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31046  014CAC  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31047  014CB0  90D8               	bcf	status,0,c
 31048  014CB2  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31049  014CB4  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31050  014CB6  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31051  014CB8  3370               	rrcf	??_sqrt& (0+255),f,b
 31052  014CBA  C070  F085         	movff	??_sqrt,sqrt@frac
 31053  014CBE  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31054  014CC2  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31055  014CC6  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31056                           
 31057                           ; BSR set to: 0
 31058  014CCA  0E01               	movlw	1
 31059  014CCC  1585               	andwf	sqrt@frac& (0+255),w,b
 31060  014CCE  6F7B               	movwf	sqrt@grs& (0+255),b
 31061  014CD0  0E00               	movlw	0
 31062  014CD2  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 31063  014CD4  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 31064  014CD6  0E00               	movlw	0
 31065  014CD8  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 31066  014CDA  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 31067  014CDC  0E00               	movlw	0
 31068  014CDE  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 31069  014CE0  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 31070                           
 31071                           ; BSR set to: 0
 31072  014CE2  C085  F070         	movff	sqrt@frac,??_sqrt
 31073  014CE6  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31074  014CEA  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31075  014CEE  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31076  014CF2  90D8               	bcf	status,0,c
 31077  014CF4  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31078  014CF6  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31079  014CF8  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31080  014CFA  3370               	rrcf	??_sqrt& (0+255),f,b
 31081  014CFC  C070  F085         	movff	??_sqrt,sqrt@frac
 31082  014D00  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31083  014D04  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31084  014D08  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31085  014D0C  517B               	movf	sqrt@grs& (0+255),w,b
 31086  014D0E  2785               	addwf	sqrt@frac& (0+255),f,b
 31087  014D10  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 31088  014D12  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 31089  014D14  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 31090  014D16  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 31091  014D18  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 31092  014D1A  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 31093                           
 31094                           ; BSR set to: 0
 31095  014D1C  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 31096  014D1E  D017               	goto	i2l2132
 31097                           
 31098                           ; BSR set to: 0
 31099  014D20  C085  F070         	movff	sqrt@frac,??_sqrt
 31100  014D24  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31101  014D28  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31102  014D2C  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31103  014D30  90D8               	bcf	status,0,c
 31104  014D32  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31105  014D34  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31106  014D36  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31107  014D38  3370               	rrcf	??_sqrt& (0+255),f,b
 31108  014D3A  C070  F085         	movff	??_sqrt,sqrt@frac
 31109  014D3E  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31110  014D42  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31111  014D46  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31112  014D4A  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 31113  014D4C  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 31114  014D4E                     i2l2132:
 31115                           
 31116                           ; BSR set to: 0
 31117                           
 31118                           ; BSR set to: 0
 31119  014D4E  0EFF               	movlw	255
 31120  014D50  1585               	andwf	sqrt@frac& (0+255),w,b
 31121  014D52  6F81               	movwf	sqrt@root& (0+255),b
 31122  014D54  0EFF               	movlw	255
 31123  014D56  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 31124  014D58  6F82               	movwf	(sqrt@root+1)& (0+255),b
 31125  014D5A  0E7F               	movlw	127
 31126  014D5C  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 31127  014D5E  6F83               	movwf	(sqrt@root+2)& (0+255),b
 31128  014D60  0E00               	movlw	0
 31129  014D62  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 31130  014D64  6F84               	movwf	(sqrt@root+3)& (0+255),b
 31131                           
 31132                           ; BSR set to: 0
 31133  014D66  C07F  F07A         	movff	sqrt@exp,sqrt@p
 31134                           
 31135                           ; BSR set to: 0
 31136  014D6A  B17A               	btfsc	sqrt@p& (0+255),0,b
 31137                           
 31138                           ; BSR set to: 0
 31139  014D6C  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 31140                           
 31141                           ; BSR set to: 0
 31142                           
 31143                           ; BSR set to: 0
 31144  014D6E  90D8               	bcf	status,0,c
 31145  014D70  317A               	rrcf	sqrt@p& (0+255),w,b
 31146  014D72  6F84               	movwf	(sqrt@root+3)& (0+255),b
 31147                           
 31148                           ; BSR set to: 0
 31149  014D74  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 31150                           
 31151                           ; BSR set to: 0
 31152  014D76  C081  F06C         	movff	sqrt@root,?_sqrt
 31153  014D7A  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 31154  014D7E  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 31155  014D82  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 31156  014D86  0012               	return	
 31157  014D88                     __end_of_sqrt:
 31158                           	opt stack 0
 31159                           tosu	equ	0xFFF
 31160                           tosh	equ	0xFFE
 31161                           tosl	equ	0xFFD
 31162                           pclatu	equ	0xFFB
 31163                           pclath	equ	0xFFA
 31164                           tblptru	equ	0xFF8
 31165                           tblptrh	equ	0xFF7
 31166                           tblptrl	equ	0xFF6
 31167                           tablat	equ	0xFF5
 31168                           prodh	equ	0xFF4
 31169                           prodl	equ	0xFF3
 31170                           intcon	equ	0xFF2
 31171                           indf0	equ	0xFEF
 31172                           postinc0	equ	0xFEE
 31173                           fsr0h	equ	0xFEA
 31174                           fsr0l	equ	0xFE9
 31175                           wreg	equ	0xFE8
 31176                           indf1	equ	0xFE7
 31177                           postdec1	equ	0xFE5
 31178                           plusw1	equ	0xFE3
 31179                           fsr1h	equ	0xFE2
 31180                           fsr1l	equ	0xFE1
 31181                           bsr	equ	0xFE0
 31182                           indf2	equ	0xFDF
 31183                           postinc2	equ	0xFDE
 31184                           postdec2	equ	0xFDD
 31185                           plusw2	equ	0xFDB
 31186                           fsr2h	equ	0xFDA
 31187                           fsr2l	equ	0xFD9
 31188                           status	equ	0xFD8
 31189                           
 31190 ;; *************** function _atan *****************
 31191 ;; Defined at:
 31192 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 31193 ;; Parameters:    Size  Location     Type
 31194 ;;  f               4   28[BANK0 ] unsigned char 
 31195 ;; Auto vars:     Size  Location     Type
 31196 ;;  val             4   45[BANK0 ] unsigned char 
 31197 ;;  val_squared     4   41[BANK0 ] unsigned char 
 31198 ;;  x               4   36[BANK0 ] unsigned char 
 31199 ;;  y               4   32[BANK0 ] unsigned char 
 31200 ;;  recip           1   40[BANK0 ] unsigned char 
 31201 ;; Return value:  Size  Location     Type
 31202 ;;                  4   28[BANK0 ] unsigned char 
 31203 ;; Registers used:
 31204 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31205 ;; Tracked objects:
 31206 ;;		On entry : 0/0
 31207 ;;		On exit  : 0/0
 31208 ;;		Unchanged: 0/0
 31209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31211 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31213 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31214 ;;Total ram usage:       21 bytes
 31215 ;; Hardware stack levels used:    1
 31216 ;; Hardware stack levels required when called:    2
 31217 ;; This function calls:
 31218 ;;		_eval_poly
 31219 ;;		_fabs
 31220 ;;		i2___fladd
 31221 ;;		i2___fldiv
 31222 ;;		i2___flge
 31223 ;;		i2___flmul
 31224 ;;		i2___flneg
 31225 ;; This function is called by:
 31226 ;;		_asin
 31227 ;; This function uses a non-reentrant model
 31228 ;;
 31229                           
 31230                           	psect	text106
 31231  015AB0                     __ptext106:
 31232                           	opt stack 0
 31233  015AB0                     _atan:
 31234                           	opt stack 11
 31235                           
 31236                           ;incstack = 0
 31237  015AB0  C07C  F030         	movff	atan@f,fabs@d
 31238  015AB4  C07D  F031         	movff	atan@f+1,fabs@d+1
 31239  015AB8  C07E  F032         	movff	atan@f+2,fabs@d+2
 31240  015ABC  C07F  F033         	movff	atan@f+3,fabs@d+3
 31241  015AC0  EC26  F0BE         	call	_fabs	;wreg free
 31242  015AC4  C030  F08D         	movff	?_fabs,atan@val
 31243  015AC8  C031  F08E         	movff	?_fabs+1,atan@val+1
 31244  015ACC  C032  F08F         	movff	?_fabs+2,atan@val+2
 31245  015AD0  C033  F090         	movff	?_fabs+3,atan@val+3
 31246  015AD4  0100               	movlb	0	; () banked
 31247  015AD6  518D               	movf	atan@val& (0+255),w,b
 31248  015AD8  118E               	iorwf	(atan@val+1)& (0+255),w,b
 31249  015ADA  118F               	iorwf	(atan@val+2)& (0+255),w,b
 31250  015ADC  1190               	iorwf	(atan@val+3)& (0+255),w,b
 31251  015ADE  A4D8               	btfss	status,2,c
 31252  015AE0  D009               	goto	i2l1609
 31253                           
 31254                           ; BSR set to: 0
 31255  015AE2  0E00               	movlw	0
 31256  015AE4  6F7C               	movwf	?_atan& (0+255),b
 31257  015AE6  0E00               	movlw	0
 31258  015AE8  6F7D               	movwf	(?_atan+1)& (0+255),b
 31259  015AEA  0E00               	movlw	0
 31260  015AEC  6F7E               	movwf	(?_atan+2)& (0+255),b
 31261  015AEE  0E00               	movlw	0
 31262  015AF0  6F7F               	movwf	(?_atan+3)& (0+255),b
 31263                           
 31264                           ; BSR set to: 0
 31265  015AF2  0012               	return	
 31266  015AF4                     i2l1609:
 31267                           
 31268                           ; BSR set to: 0
 31269                           
 31270                           ; BSR set to: 0
 31271  015AF4  0E00               	movlw	0
 31272  015AF6  6E34               	movwf	i2___flge@ff1,c
 31273  015AF8  0E00               	movlw	0
 31274  015AFA  6E35               	movwf	i2___flge@ff1+1,c
 31275  015AFC  0E80               	movlw	128
 31276  015AFE  6E36               	movwf	i2___flge@ff1+2,c
 31277  015B00  0E3F               	movlw	63
 31278  015B02  6E37               	movwf	i2___flge@ff1+3,c
 31279  015B04  C08D  F038         	movff	atan@val,i2___flge@ff2
 31280  015B08  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 31281  015B0C  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 31282  015B10  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 31283  015B14  ECB2  F0B2         	call	i2___flge	;wreg free
 31284  015B18  B0D8               	btfsc	status,0,c
 31285  015B1A  D002               	goto	i2u1341_40
 31286  015B1C  0E01               	movlw	1
 31287  015B1E  D001               	goto	i2u1342_40
 31288  015B20                     i2u1341_40:
 31289  015B20  0E00               	movlw	0
 31290  015B22                     i2u1342_40:
 31291  015B22  0100               	movlb	0	; () banked
 31292  015B24  6F88               	movwf	atan@recip& (0+255),b
 31293  015B26  5188               	movf	atan@recip& (0+255),w,b
 31294  015B28  B4D8               	btfsc	status,2,c
 31295  015B2A  D01A               	goto	i2l1611
 31296                           
 31297                           ; BSR set to: 0
 31298  015B2C  0E00               	movlw	0
 31299  015B2E  6E13               	movwf	i2___fldiv@b,c
 31300  015B30  0E00               	movlw	0
 31301  015B32  6E14               	movwf	i2___fldiv@b+1,c
 31302  015B34  0E80               	movlw	128
 31303  015B36  6E15               	movwf	i2___fldiv@b+2,c
 31304  015B38  0E3F               	movlw	63
 31305  015B3A  6E16               	movwf	i2___fldiv@b+3,c
 31306  015B3C  C08D  F017         	movff	atan@val,i2___fldiv@a
 31307  015B40  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 31308  015B44  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 31309  015B48  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 31310  015B4C  EC82  F0A9         	call	i2___fldiv	;wreg free
 31311  015B50  C013  F08D         	movff	?i2___fldiv,atan@val
 31312  015B54  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 31313  015B58  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 31314  015B5C  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 31315  015B60                     i2l1611:
 31316  015B60  C08D  F030         	movff	atan@val,i2___flmul@b
 31317  015B64  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 31318  015B68  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 31319  015B6C  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 31320  015B70  C08D  F034         	movff	atan@val,i2___flmul@a
 31321  015B74  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 31322  015B78  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 31323  015B7C  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 31324  015B80  EC7B  F09D         	call	i2___flmul	;wreg free
 31325  015B84  C030  F089         	movff	?i2___flmul,atan@val_squared
 31326  015B88  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 31327  015B8C  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 31328  015B90  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 31329  015B94  C089  F06C         	movff	atan@val_squared,eval_poly@x
 31330  015B98  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 31331  015B9C  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 31332  015BA0  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 31333  015BA4  0E99               	movlw	low atan@coeff_b
 31334  015BA6  0100               	movlb	0	; () banked
 31335  015BA8  6F70               	movwf	eval_poly@d& (0+255),b
 31336  015BAA  0EEC               	movlw	high atan@coeff_b
 31337  015BAC  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 31338  015BAE  0E00               	movlw	0
 31339  015BB0  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 31340  015BB2  0E04               	movlw	4
 31341  015BB4  6F72               	movwf	eval_poly@n& (0+255),b
 31342  015BB6  EC59  F0B4         	call	_eval_poly	;wreg free
 31343  015BBA  C06C  F080         	movff	?_eval_poly,atan@y
 31344  015BBE  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 31345  015BC2  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 31346  015BC6  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 31347  015BCA  C089  F06C         	movff	atan@val_squared,eval_poly@x
 31348  015BCE  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 31349  015BD2  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 31350  015BD6  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 31351  015BDA  0E6D               	movlw	low atan@coeff_a
 31352  015BDC  0100               	movlb	0	; () banked
 31353  015BDE  6F70               	movwf	eval_poly@d& (0+255),b
 31354  015BE0  0EEC               	movlw	high atan@coeff_a
 31355  015BE2  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 31356  015BE4  0E00               	movlw	0
 31357  015BE6  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 31358  015BE8  0E05               	movlw	5
 31359  015BEA  6F72               	movwf	eval_poly@n& (0+255),b
 31360  015BEC  EC59  F0B4         	call	_eval_poly	;wreg free
 31361  015BF0  C06C  F084         	movff	?_eval_poly,atan@x
 31362  015BF4  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 31363  015BF8  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 31364  015BFC  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 31365  015C00  C08D  F030         	movff	atan@val,i2___flmul@b
 31366  015C04  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 31367  015C08  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 31368  015C0C  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 31369  015C10  C080  F017         	movff	atan@y,i2___fldiv@a
 31370  015C14  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 31371  015C18  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 31372  015C1C  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 31373  015C20  C084  F013         	movff	atan@x,i2___fldiv@b
 31374  015C24  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 31375  015C28  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 31376  015C2C  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 31377  015C30  EC82  F0A9         	call	i2___fldiv	;wreg free
 31378  015C34  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 31379  015C38  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 31380  015C3C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 31381  015C40  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 31382  015C44  EC7B  F09D         	call	i2___flmul	;wreg free
 31383  015C48  C030  F08D         	movff	?i2___flmul,atan@val
 31384  015C4C  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 31385  015C50  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 31386  015C54  C033  F090         	movff	?i2___flmul+3,atan@val+3
 31387  015C58  0100               	movlb	0	; () banked
 31388  015C5A  5188               	movf	atan@recip& (0+255),w,b
 31389  015C5C  B4D8               	btfsc	status,2,c
 31390  015C5E  D024               	goto	i2l1612
 31391                           
 31392                           ; BSR set to: 0
 31393  015C60  C08D  F02C         	movff	atan@val,i2___flneg@f1
 31394  015C64  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 31395  015C68  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 31396  015C6C  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 31397  015C70  EC2A  F0BF         	call	i2___flneg	;wreg free
 31398  015C74  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31399  015C78  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31400  015C7C  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31401  015C80  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31402  015C84  0EDB               	movlw	219
 31403  015C86  6E5A               	movwf	i2___fladd@a,c
 31404  015C88  0E0F               	movlw	15
 31405  015C8A  6E5B               	movwf	i2___fladd@a+1,c
 31406  015C8C  0EC9               	movlw	201
 31407  015C8E  6E5C               	movwf	i2___fladd@a+2,c
 31408  015C90  0E3F               	movlw	63
 31409  015C92  6E5D               	movwf	i2___fladd@a+3,c
 31410  015C94  ECC2  F0A0         	call	i2___fladd	;wreg free
 31411  015C98  C056  F08D         	movff	?i2___fladd,atan@val
 31412  015C9C  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 31413  015CA0  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 31414  015CA4  C059  F090         	movff	?i2___fladd+3,atan@val+3
 31415  015CA8                     i2l1612:
 31416  015CA8  0100               	movlb	0	; () banked
 31417  015CAA  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 31418  015CAC  D009               	goto	i2l1614
 31419                           
 31420                           ; BSR set to: 0
 31421  015CAE  C08D  F07C         	movff	atan@val,?_atan
 31422  015CB2  C08E  F07D         	movff	atan@val+1,?_atan+1
 31423  015CB6  C08F  F07E         	movff	atan@val+2,?_atan+2
 31424  015CBA  C090  F07F         	movff	atan@val+3,?_atan+3
 31425  015CBE  0012               	return	
 31426  015CC0                     i2l1614:
 31427                           
 31428                           ; BSR set to: 0
 31429                           
 31430                           ; BSR set to: 0
 31431  015CC0  C08D  F02C         	movff	atan@val,i2___flneg@f1
 31432  015CC4  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 31433  015CC8  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 31434  015CCC  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 31435  015CD0  EC2A  F0BF         	call	i2___flneg	;wreg free
 31436  015CD4  C02C  F07C         	movff	?i2___flneg,?_atan
 31437  015CD8  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 31438  015CDC  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 31439  015CE0  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 31440  015CE4  0012               	return	
 31441  015CE6                     __end_of_atan:
 31442                           	opt stack 0
 31443                           tosu	equ	0xFFF
 31444                           tosh	equ	0xFFE
 31445                           tosl	equ	0xFFD
 31446                           pclatu	equ	0xFFB
 31447                           pclath	equ	0xFFA
 31448                           tblptru	equ	0xFF8
 31449                           tblptrh	equ	0xFF7
 31450                           tblptrl	equ	0xFF6
 31451                           tablat	equ	0xFF5
 31452                           prodh	equ	0xFF4
 31453                           prodl	equ	0xFF3
 31454                           intcon	equ	0xFF2
 31455                           indf0	equ	0xFEF
 31456                           postinc0	equ	0xFEE
 31457                           fsr0h	equ	0xFEA
 31458                           fsr0l	equ	0xFE9
 31459                           wreg	equ	0xFE8
 31460                           indf1	equ	0xFE7
 31461                           postdec1	equ	0xFE5
 31462                           plusw1	equ	0xFE3
 31463                           fsr1h	equ	0xFE2
 31464                           fsr1l	equ	0xFE1
 31465                           bsr	equ	0xFE0
 31466                           indf2	equ	0xFDF
 31467                           postinc2	equ	0xFDE
 31468                           postdec2	equ	0xFDD
 31469                           plusw2	equ	0xFDB
 31470                           fsr2h	equ	0xFDA
 31471                           fsr2l	equ	0xFD9
 31472                           status	equ	0xFD8
 31473                           
 31474 ;; *************** function _fabs *****************
 31475 ;; Defined at:
 31476 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 31477 ;; Parameters:    Size  Location     Type
 31478 ;;  d               4   47[COMRAM] unsigned char 
 31479 ;; Auto vars:     Size  Location     Type
 31480 ;;		None
 31481 ;; Return value:  Size  Location     Type
 31482 ;;                  4   47[COMRAM] unsigned char 
 31483 ;; Registers used:
 31484 ;;		wreg, status,2, status,0, cstack
 31485 ;; Tracked objects:
 31486 ;;		On entry : 0/0
 31487 ;;		On exit  : 0/0
 31488 ;;		Unchanged: 0/0
 31489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31493 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31494 ;;Total ram usage:        4 bytes
 31495 ;; Hardware stack levels used:    1
 31496 ;; Hardware stack levels required when called:    1
 31497 ;; This function calls:
 31498 ;;		i2___flneg
 31499 ;; This function is called by:
 31500 ;;		_asin
 31501 ;;		_atan
 31502 ;; This function uses a non-reentrant model
 31503 ;;
 31504                           
 31505                           	psect	text107
 31506  017C4C                     __ptext107:
 31507                           	opt stack 0
 31508  017C4C                     _fabs:
 31509                           	opt stack 12
 31510                           
 31511                           ;incstack = 0
 31512  017C4C  AE33               	btfss	fabs@d+3,7,c
 31513  017C4E  D013               	goto	i2l1706
 31514  017C50  C030  F02C         	movff	fabs@d,i2___flneg@f1
 31515  017C54  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 31516  017C58  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 31517  017C5C  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 31518  017C60  EC2A  F0BF         	call	i2___flneg	;wreg free
 31519  017C64  C02C  F030         	movff	?i2___flneg,?_fabs
 31520  017C68  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 31521  017C6C  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 31522  017C70  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 31523  017C74  0012               	return	
 31524  017C76                     i2l1706:
 31525  017C76  C030  F030         	movff	fabs@d,?_fabs
 31526  017C7A  C031  F031         	movff	fabs@d+1,?_fabs+1
 31527  017C7E  C032  F032         	movff	fabs@d+2,?_fabs+2
 31528  017C82  C033  F033         	movff	fabs@d+3,?_fabs+3
 31529  017C86  0012               	return		;funcret
 31530  017C88                     __end_of_fabs:
 31531                           	opt stack 0
 31532                           tosu	equ	0xFFF
 31533                           tosh	equ	0xFFE
 31534                           tosl	equ	0xFFD
 31535                           pclatu	equ	0xFFB
 31536                           pclath	equ	0xFFA
 31537                           tblptru	equ	0xFF8
 31538                           tblptrh	equ	0xFF7
 31539                           tblptrl	equ	0xFF6
 31540                           tablat	equ	0xFF5
 31541                           prodh	equ	0xFF4
 31542                           prodl	equ	0xFF3
 31543                           intcon	equ	0xFF2
 31544                           indf0	equ	0xFEF
 31545                           postinc0	equ	0xFEE
 31546                           fsr0h	equ	0xFEA
 31547                           fsr0l	equ	0xFE9
 31548                           wreg	equ	0xFE8
 31549                           indf1	equ	0xFE7
 31550                           postdec1	equ	0xFE5
 31551                           plusw1	equ	0xFE3
 31552                           fsr1h	equ	0xFE2
 31553                           fsr1l	equ	0xFE1
 31554                           bsr	equ	0xFE0
 31555                           indf2	equ	0xFDF
 31556                           postinc2	equ	0xFDE
 31557                           postdec2	equ	0xFDD
 31558                           plusw2	equ	0xFDB
 31559                           fsr2h	equ	0xFDA
 31560                           fsr2l	equ	0xFD9
 31561                           status	equ	0xFD8
 31562                           
 31563 ;; *************** function _currentMeasuredToPeak *****************
 31564 ;; Defined at:
 31565 ;;		line 120 in file "main.c"
 31566 ;; Parameters:    Size  Location     Type
 31567 ;;  Measured        4   47[BANK0 ] unsigned char 
 31568 ;;  Angle           4   51[BANK0 ] unsigned char 
 31569 ;; Auto vars:     Size  Location     Type
 31570 ;;  Peak            4   55[BANK0 ] unsigned char 
 31571 ;; Return value:  Size  Location     Type
 31572 ;;                  4   47[BANK0 ] unsigned char 
 31573 ;; Registers used:
 31574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31575 ;; Tracked objects:
 31576 ;;		On entry : 0/0
 31577 ;;		On exit  : 0/0
 31578 ;;		Unchanged: 0/0
 31579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31580 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31581 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31583 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31584 ;;Total ram usage:       12 bytes
 31585 ;; Hardware stack levels used:    1
 31586 ;; Hardware stack levels required when called:    3
 31587 ;; This function calls:
 31588 ;;		_sin
 31589 ;;		i2___fldiv
 31590 ;; This function is called by:
 31591 ;;		_ADCPostProcessingCallback
 31592 ;; This function uses a non-reentrant model
 31593 ;;
 31594                           
 31595                           	psect	text108
 31596  01734E                     __ptext108:
 31597                           	opt stack 0
 31598  01734E                     _currentMeasuredToPeak:
 31599                           	opt stack 13
 31600                           
 31601                           ;main.c: 123: double Peak = 0.0;
 31602                           
 31603                           ;incstack = 0
 31604  01734E  0E00               	movlw	0
 31605  017350  0100               	movlb	0	; () banked
 31606  017352  6F97               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 31607  017354  0E00               	movlw	0
 31608  017356  6F98               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 31609  017358  0E00               	movlw	0
 31610  01735A  6F99               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 31611  01735C  0E00               	movlw	0
 31612  01735E  6F9A               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 31613                           
 31614                           ; BSR set to: 0
 31615                           ;main.c: 126: Peak = sin(Angle);
 31616  017360  C093  F07E         	movff	currentMeasuredToPeak@Angle,sin@f
 31617  017364  C094  F07F         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 31618  017368  C095  F080         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 31619  01736C  C096  F081         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 31620  017370  ECE3  F0A3         	call	_sin	;wreg free
 31621  017374  C07E  F097         	movff	?_sin,currentMeasuredToPeak@Peak
 31622  017378  C07F  F098         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 31623  01737C  C080  F099         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 31624  017380  C081  F09A         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 31625                           
 31626                           ;main.c: 127: Peak = Measured / Peak;
 31627  017384  C08F  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 31628  017388  C090  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 31629  01738C  C091  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 31630  017390  C092  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 31631  017394  C097  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 31632  017398  C098  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 31633  01739C  C099  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 31634  0173A0  C09A  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 31635  0173A4  EC82  F0A9         	call	i2___fldiv	;wreg free
 31636  0173A8  C013  F097         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 31637  0173AC  C014  F098         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 31638  0173B0  C015  F099         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 31639  0173B4  C016  F09A         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 31640                           
 31641                           ;main.c: 128: return Peak;
 31642  0173B8  C097  F08F         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 31643  0173BC  C098  F090         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 31644  0173C0  C099  F091         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 31645  0173C4  C09A  F092         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 31646  0173C8  0012               	return	
 31647  0173CA                     __end_of_currentMeasuredToPeak:
 31648                           	opt stack 0
 31649                           tosu	equ	0xFFF
 31650                           tosh	equ	0xFFE
 31651                           tosl	equ	0xFFD
 31652                           pclatu	equ	0xFFB
 31653                           pclath	equ	0xFFA
 31654                           tblptru	equ	0xFF8
 31655                           tblptrh	equ	0xFF7
 31656                           tblptrl	equ	0xFF6
 31657                           tablat	equ	0xFF5
 31658                           prodh	equ	0xFF4
 31659                           prodl	equ	0xFF3
 31660                           intcon	equ	0xFF2
 31661                           indf0	equ	0xFEF
 31662                           postinc0	equ	0xFEE
 31663                           fsr0h	equ	0xFEA
 31664                           fsr0l	equ	0xFE9
 31665                           wreg	equ	0xFE8
 31666                           indf1	equ	0xFE7
 31667                           postdec1	equ	0xFE5
 31668                           plusw1	equ	0xFE3
 31669                           fsr1h	equ	0xFE2
 31670                           fsr1l	equ	0xFE1
 31671                           bsr	equ	0xFE0
 31672                           indf2	equ	0xFDF
 31673                           postinc2	equ	0xFDE
 31674                           postdec2	equ	0xFDD
 31675                           plusw2	equ	0xFDB
 31676                           fsr2h	equ	0xFDA
 31677                           fsr2l	equ	0xFD9
 31678                           status	equ	0xFD8
 31679                           
 31680 ;; *************** function _sin *****************
 31681 ;; Defined at:
 31682 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 31683 ;; Parameters:    Size  Location     Type
 31684 ;;  f               4   30[BANK0 ] unsigned char 
 31685 ;; Auto vars:     Size  Location     Type
 31686 ;;  x2              4   42[BANK0 ] unsigned char 
 31687 ;;  y               4   34[BANK0 ] unsigned char 
 31688 ;;  sgn             1   46[BANK0 ] unsigned char 
 31689 ;; Return value:  Size  Location     Type
 31690 ;;                  4   30[BANK0 ] unsigned char 
 31691 ;; Registers used:
 31692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31693 ;; Tracked objects:
 31694 ;;		On entry : 0/0
 31695 ;;		On exit  : 0/0
 31696 ;;		Unchanged: 0/0
 31697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31699 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31701 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31702 ;;Total ram usage:       17 bytes
 31703 ;; Hardware stack levels used:    1
 31704 ;; Hardware stack levels required when called:    2
 31705 ;; This function calls:
 31706 ;;		_eval_poly
 31707 ;;		_floor
 31708 ;;		i2___fladd
 31709 ;;		i2___fldiv
 31710 ;;		i2___flge
 31711 ;;		i2___flmul
 31712 ;;		i2___flneg
 31713 ;;		i2___flsub
 31714 ;; This function is called by:
 31715 ;;		_peakToRMS
 31716 ;;		_currentMeasuredToPeak
 31717 ;; This function uses a non-reentrant model
 31718 ;;
 31719                           
 31720                           	psect	text109
 31721  0147C6                     __ptext109:
 31722                           	opt stack 0
 31723  0147C6                     _sin:
 31724                           	opt stack 13
 31725                           
 31726                           ;incstack = 0
 31727  0147C6  0E00               	movlw	0
 31728  0147C8  0100               	movlb	0	; () banked
 31729  0147CA  6F8E               	movwf	sin@sgn& (0+255),b
 31730                           
 31731                           ; BSR set to: 0
 31732  0147CC  AF81               	btfss	(sin@f+3)& (0+255),7,b
 31733  0147CE  D015               	goto	i2l1989
 31734                           
 31735                           ; BSR set to: 0
 31736  0147D0  C07E  F02C         	movff	sin@f,i2___flneg@f1
 31737  0147D4  C07F  F02D         	movff	sin@f+1,i2___flneg@f1+1
 31738  0147D8  C080  F02E         	movff	sin@f+2,i2___flneg@f1+2
 31739  0147DC  C081  F02F         	movff	sin@f+3,i2___flneg@f1+3
 31740  0147E0  EC2A  F0BF         	call	i2___flneg	;wreg free
 31741  0147E4  C02C  F07E         	movff	?i2___flneg,sin@f
 31742  0147E8  C02D  F07F         	movff	?i2___flneg+1,sin@f+1
 31743  0147EC  C02E  F080         	movff	?i2___flneg+2,sin@f+2
 31744  0147F0  C02F  F081         	movff	?i2___flneg+3,sin@f+3
 31745  0147F4  0E01               	movlw	1
 31746  0147F6  0100               	movlb	0	; () banked
 31747  0147F8  6F8E               	movwf	sin@sgn& (0+255),b
 31748  0147FA                     i2l1989:
 31749                           
 31750                           ; BSR set to: 0
 31751                           
 31752                           ; BSR set to: 0
 31753  0147FA  C07E  F030         	movff	sin@f,i2___flmul@b
 31754  0147FE  C07F  F031         	movff	sin@f+1,i2___flmul@b+1
 31755  014802  C080  F032         	movff	sin@f+2,i2___flmul@b+2
 31756  014806  C081  F033         	movff	sin@f+3,i2___flmul@b+3
 31757  01480A  0E83               	movlw	131
 31758  01480C  6E34               	movwf	i2___flmul@a,c
 31759  01480E  0EF9               	movlw	249
 31760  014810  6E35               	movwf	i2___flmul@a+1,c
 31761  014812  0E22               	movlw	34
 31762  014814  6E36               	movwf	i2___flmul@a+2,c
 31763  014816  0E3E               	movlw	62
 31764  014818  6E37               	movwf	i2___flmul@a+3,c
 31765  01481A  EC7B  F09D         	call	i2___flmul	;wreg free
 31766  01481E  C030  F07E         	movff	?i2___flmul,sin@f
 31767  014822  C031  F07F         	movff	?i2___flmul+1,sin@f+1
 31768  014826  C032  F080         	movff	?i2___flmul+2,sin@f+2
 31769  01482A  C033  F081         	movff	?i2___flmul+3,sin@f+3
 31770  01482E  C07E  F076         	movff	sin@f,i2___flsub@b
 31771  014832  C07F  F077         	movff	sin@f+1,i2___flsub@b+1
 31772  014836  C080  F078         	movff	sin@f+2,i2___flsub@b+2
 31773  01483A  C081  F079         	movff	sin@f+3,i2___flsub@b+3
 31774  01483E  C07E  F06C         	movff	sin@f,floor@x
 31775  014842  C07F  F06D         	movff	sin@f+1,floor@x+1
 31776  014846  C080  F06E         	movff	sin@f+2,floor@x+2
 31777  01484A  C081  F06F         	movff	sin@f+3,floor@x+3
 31778  01484E  ECD0  F0B3         	call	_floor	;wreg free
 31779  014852  C06C  F07A         	movff	?_floor,i2___flsub@a
 31780  014856  C06D  F07B         	movff	?_floor+1,i2___flsub@a+1
 31781  01485A  C06E  F07C         	movff	?_floor+2,i2___flsub@a+2
 31782  01485E  C06F  F07D         	movff	?_floor+3,i2___flsub@a+3
 31783  014862  EC81  F0BD         	call	i2___flsub	;wreg free
 31784  014866  C076  F07E         	movff	?i2___flsub,sin@f
 31785  01486A  C077  F07F         	movff	?i2___flsub+1,sin@f+1
 31786  01486E  C078  F080         	movff	?i2___flsub+2,sin@f+2
 31787  014872  C079  F081         	movff	?i2___flsub+3,sin@f+3
 31788  014876  C07E  F030         	movff	sin@f,i2___flmul@b
 31789  01487A  C07F  F031         	movff	sin@f+1,i2___flmul@b+1
 31790  01487E  C080  F032         	movff	sin@f+2,i2___flmul@b+2
 31791  014882  C081  F033         	movff	sin@f+3,i2___flmul@b+3
 31792  014886  0E00               	movlw	0
 31793  014888  6E34               	movwf	i2___flmul@a,c
 31794  01488A  0E00               	movlw	0
 31795  01488C  6E35               	movwf	i2___flmul@a+1,c
 31796  01488E  0E80               	movlw	128
 31797  014890  6E36               	movwf	i2___flmul@a+2,c
 31798  014892  0E40               	movlw	64
 31799  014894  6E37               	movwf	i2___flmul@a+3,c
 31800  014896  EC7B  F09D         	call	i2___flmul	;wreg free
 31801  01489A  C030  F07E         	movff	?i2___flmul,sin@f
 31802  01489E  C031  F07F         	movff	?i2___flmul+1,sin@f+1
 31803  0148A2  C032  F080         	movff	?i2___flmul+2,sin@f+2
 31804  0148A6  C033  F081         	movff	?i2___flmul+3,sin@f+3
 31805  0148AA  0E00               	movlw	0
 31806  0148AC  6E34               	movwf	i2___flge@ff1,c
 31807  0148AE  0E00               	movlw	0
 31808  0148B0  6E35               	movwf	i2___flge@ff1+1,c
 31809  0148B2  0E00               	movlw	0
 31810  0148B4  6E36               	movwf	i2___flge@ff1+2,c
 31811  0148B6  0E40               	movlw	64
 31812  0148B8  6E37               	movwf	i2___flge@ff1+3,c
 31813  0148BA  C07E  F038         	movff	sin@f,i2___flge@ff2
 31814  0148BE  C07F  F039         	movff	sin@f+1,i2___flge@ff2+1
 31815  0148C2  C080  F03A         	movff	sin@f+2,i2___flge@ff2+2
 31816  0148C6  C081  F03B         	movff	sin@f+3,i2___flge@ff2+3
 31817  0148CA  ECB2  F0B2         	call	i2___flge	;wreg free
 31818  0148CE  B0D8               	btfsc	status,0,c
 31819  0148D0  D023               	goto	i2l1990
 31820  0148D2  C07E  F076         	movff	sin@f,i2___flsub@b
 31821  0148D6  C07F  F077         	movff	sin@f+1,i2___flsub@b+1
 31822  0148DA  C080  F078         	movff	sin@f+2,i2___flsub@b+2
 31823  0148DE  C081  F079         	movff	sin@f+3,i2___flsub@b+3
 31824  0148E2  0E00               	movlw	0
 31825  0148E4  0100               	movlb	0	; () banked
 31826  0148E6  6F7A               	movwf	i2___flsub@a& (0+255),b
 31827  0148E8  0E00               	movlw	0
 31828  0148EA  6F7B               	movwf	(i2___flsub@a+1)& (0+255),b
 31829  0148EC  0E00               	movlw	0
 31830  0148EE  6F7C               	movwf	(i2___flsub@a+2)& (0+255),b
 31831  0148F0  0E40               	movlw	64
 31832  0148F2  6F7D               	movwf	(i2___flsub@a+3)& (0+255),b
 31833  0148F4  EC81  F0BD         	call	i2___flsub	;wreg free
 31834  0148F8  C076  F07E         	movff	?i2___flsub,sin@f
 31835  0148FC  C077  F07F         	movff	?i2___flsub+1,sin@f+1
 31836  014900  C078  F080         	movff	?i2___flsub+2,sin@f+2
 31837  014904  C079  F081         	movff	?i2___flsub+3,sin@f+3
 31838  014908  0100               	movlb	0	; () banked
 31839  01490A  518E               	movf	sin@sgn& (0+255),w,b
 31840  01490C  A4D8               	btfss	status,2,c
 31841  01490E  D002               	goto	i2u1459_40
 31842  014910  0E01               	movlw	1
 31843  014912  D001               	goto	i2u1460_40
 31844  014914                     i2u1459_40:
 31845  014914  0E00               	movlw	0
 31846  014916                     i2u1460_40:
 31847  014916  6F8E               	movwf	sin@sgn& (0+255),b
 31848  014918                     i2l1990:
 31849                           
 31850                           ; BSR set to: 0
 31851  014918  0E00               	movlw	0
 31852  01491A  6E34               	movwf	i2___flge@ff1,c
 31853  01491C  0E00               	movlw	0
 31854  01491E  6E35               	movwf	i2___flge@ff1+1,c
 31855  014920  0E80               	movlw	128
 31856  014922  6E36               	movwf	i2___flge@ff1+2,c
 31857  014924  0E3F               	movlw	63
 31858  014926  6E37               	movwf	i2___flge@ff1+3,c
 31859  014928  C07E  F038         	movff	sin@f,i2___flge@ff2
 31860  01492C  C07F  F039         	movff	sin@f+1,i2___flge@ff2+1
 31861  014930  C080  F03A         	movff	sin@f+2,i2___flge@ff2+2
 31862  014934  C081  F03B         	movff	sin@f+3,i2___flge@ff2+3
 31863  014938  ECB2  F0B2         	call	i2___flge	;wreg free
 31864  01493C  B0D8               	btfsc	status,0,c
 31865  01493E  D024               	goto	i2l1991
 31866  014940  C07E  F02C         	movff	sin@f,i2___flneg@f1
 31867  014944  C07F  F02D         	movff	sin@f+1,i2___flneg@f1+1
 31868  014948  C080  F02E         	movff	sin@f+2,i2___flneg@f1+2
 31869  01494C  C081  F02F         	movff	sin@f+3,i2___flneg@f1+3
 31870  014950  EC2A  F0BF         	call	i2___flneg	;wreg free
 31871  014954  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31872  014958  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31873  01495C  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31874  014960  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31875  014964  0E00               	movlw	0
 31876  014966  6E5A               	movwf	i2___fladd@a,c
 31877  014968  0E00               	movlw	0
 31878  01496A  6E5B               	movwf	i2___fladd@a+1,c
 31879  01496C  0E00               	movlw	0
 31880  01496E  6E5C               	movwf	i2___fladd@a+2,c
 31881  014970  0E40               	movlw	64
 31882  014972  6E5D               	movwf	i2___fladd@a+3,c
 31883  014974  ECC2  F0A0         	call	i2___fladd	;wreg free
 31884  014978  C056  F07E         	movff	?i2___fladd,sin@f
 31885  01497C  C057  F07F         	movff	?i2___fladd+1,sin@f+1
 31886  014980  C058  F080         	movff	?i2___fladd+2,sin@f+2
 31887  014984  C059  F081         	movff	?i2___fladd+3,sin@f+3
 31888  014988                     i2l1991:
 31889  014988  C07E  F030         	movff	sin@f,i2___flmul@b
 31890  01498C  C07F  F031         	movff	sin@f+1,i2___flmul@b+1
 31891  014990  C080  F032         	movff	sin@f+2,i2___flmul@b+2
 31892  014994  C081  F033         	movff	sin@f+3,i2___flmul@b+3
 31893  014998  C07E  F034         	movff	sin@f,i2___flmul@a
 31894  01499C  C07F  F035         	movff	sin@f+1,i2___flmul@a+1
 31895  0149A0  C080  F036         	movff	sin@f+2,i2___flmul@a+2
 31896  0149A4  C081  F037         	movff	sin@f+3,i2___flmul@a+3
 31897  0149A8  EC7B  F09D         	call	i2___flmul	;wreg free
 31898  0149AC  C030  F08A         	movff	?i2___flmul,sin@x2
 31899  0149B0  C031  F08B         	movff	?i2___flmul+1,sin@x2+1
 31900  0149B4  C032  F08C         	movff	?i2___flmul+2,sin@x2+2
 31901  0149B8  C033  F08D         	movff	?i2___flmul+3,sin@x2+3
 31902  0149BC  C08A  F06C         	movff	sin@x2,eval_poly@x
 31903  0149C0  C08B  F06D         	movff	sin@x2+1,eval_poly@x+1
 31904  0149C4  C08C  F06E         	movff	sin@x2+2,eval_poly@x+2
 31905  0149C8  C08D  F06F         	movff	sin@x2+3,eval_poly@x+3
 31906  0149CC  0EAD               	movlw	low sin@coeff_b
 31907  0149CE  0100               	movlb	0	; () banked
 31908  0149D0  6F70               	movwf	eval_poly@d& (0+255),b
 31909  0149D2  0EEC               	movlw	high sin@coeff_b
 31910  0149D4  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 31911  0149D6  0E00               	movlw	0
 31912  0149D8  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 31913  0149DA  0E03               	movlw	3
 31914  0149DC  6F72               	movwf	eval_poly@n& (0+255),b
 31915  0149DE  EC59  F0B4         	call	_eval_poly	;wreg free
 31916  0149E2  C06C  F082         	movff	?_eval_poly,sin@y
 31917  0149E6  C06D  F083         	movff	?_eval_poly+1,sin@y+1
 31918  0149EA  C06E  F084         	movff	?_eval_poly+2,sin@y+2
 31919  0149EE  C06F  F085         	movff	?_eval_poly+3,sin@y+3
 31920  0149F2  C082  F017         	movff	sin@y,i2___fldiv@a
 31921  0149F6  C083  F018         	movff	sin@y+1,i2___fldiv@a+1
 31922  0149FA  C084  F019         	movff	sin@y+2,i2___fldiv@a+2
 31923  0149FE  C085  F01A         	movff	sin@y+3,i2___fldiv@a+3
 31924  014A02  0E00               	movlw	0
 31925  014A04  0100               	movlb	0	; () banked
 31926  014A06  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 31927  014A08  0E04               	movlw	4
 31928  014A0A  6F72               	movwf	eval_poly@n& (0+255),b
 31929  014A0C  0E85               	movlw	low sin@coeff_a
 31930  014A0E  6F70               	movwf	eval_poly@d& (0+255),b
 31931  014A10  0EEC               	movlw	high sin@coeff_a
 31932  014A12  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 31933  014A14  C08A  F06C         	movff	sin@x2,eval_poly@x
 31934  014A18  C08B  F06D         	movff	sin@x2+1,eval_poly@x+1
 31935  014A1C  C08C  F06E         	movff	sin@x2+2,eval_poly@x+2
 31936  014A20  C08D  F06F         	movff	sin@x2+3,eval_poly@x+3
 31937  014A24  EC59  F0B4         	call	_eval_poly	;wreg free
 31938  014A28  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 31939  014A2C  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 31940  014A30  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 31941  014A34  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 31942  014A38  EC82  F0A9         	call	i2___fldiv	;wreg free
 31943  014A3C  C013  F086         	movff	?i2___fldiv,_sin$4060
 31944  014A40  C014  F087         	movff	?i2___fldiv+1,_sin$4060+1
 31945  014A44  C015  F088         	movff	?i2___fldiv+2,_sin$4060+2
 31946  014A48  C016  F089         	movff	?i2___fldiv+3,_sin$4060+3
 31947  014A4C  C07E  F030         	movff	sin@f,i2___flmul@b
 31948  014A50  C07F  F031         	movff	sin@f+1,i2___flmul@b+1
 31949  014A54  C080  F032         	movff	sin@f+2,i2___flmul@b+2
 31950  014A58  C081  F033         	movff	sin@f+3,i2___flmul@b+3
 31951  014A5C  C086  F034         	movff	_sin$4060,i2___flmul@a
 31952  014A60  C087  F035         	movff	_sin$4060+1,i2___flmul@a+1
 31953  014A64  C088  F036         	movff	_sin$4060+2,i2___flmul@a+2
 31954  014A68  C089  F037         	movff	_sin$4060+3,i2___flmul@a+3
 31955  014A6C  EC7B  F09D         	call	i2___flmul	;wreg free
 31956  014A70  C030  F07E         	movff	?i2___flmul,sin@f
 31957  014A74  C031  F07F         	movff	?i2___flmul+1,sin@f+1
 31958  014A78  C032  F080         	movff	?i2___flmul+2,sin@f+2
 31959  014A7C  C033  F081         	movff	?i2___flmul+3,sin@f+3
 31960  014A80  0100               	movlb	0	; () banked
 31961  014A82  518E               	movf	sin@sgn& (0+255),w,b
 31962  014A84  B4D8               	btfsc	status,2,c
 31963  014A86  D013               	goto	i2l1992
 31964                           
 31965                           ; BSR set to: 0
 31966  014A88  C07E  F02C         	movff	sin@f,i2___flneg@f1
 31967  014A8C  C07F  F02D         	movff	sin@f+1,i2___flneg@f1+1
 31968  014A90  C080  F02E         	movff	sin@f+2,i2___flneg@f1+2
 31969  014A94  C081  F02F         	movff	sin@f+3,i2___flneg@f1+3
 31970  014A98  EC2A  F0BF         	call	i2___flneg	;wreg free
 31971  014A9C  C02C  F07E         	movff	?i2___flneg,?_sin
 31972  014AA0  C02D  F07F         	movff	?i2___flneg+1,?_sin+1
 31973  014AA4  C02E  F080         	movff	?i2___flneg+2,?_sin+2
 31974  014AA8  C02F  F081         	movff	?i2___flneg+3,?_sin+3
 31975  014AAC  0012               	return	
 31976  014AAE                     i2l1992:
 31977                           
 31978                           ; BSR set to: 0
 31979  014AAE  C07E  F07E         	movff	sin@f,?_sin
 31980  014AB2  C07F  F07F         	movff	sin@f+1,?_sin+1
 31981  014AB6  C080  F080         	movff	sin@f+2,?_sin+2
 31982  014ABA  C081  F081         	movff	sin@f+3,?_sin+3
 31983  014ABE  0012               	return		;funcret
 31984  014AC0                     __end_of_sin:
 31985                           	opt stack 0
 31986                           tosu	equ	0xFFF
 31987                           tosh	equ	0xFFE
 31988                           tosl	equ	0xFFD
 31989                           pclatu	equ	0xFFB
 31990                           pclath	equ	0xFFA
 31991                           tblptru	equ	0xFF8
 31992                           tblptrh	equ	0xFF7
 31993                           tblptrl	equ	0xFF6
 31994                           tablat	equ	0xFF5
 31995                           prodh	equ	0xFF4
 31996                           prodl	equ	0xFF3
 31997                           intcon	equ	0xFF2
 31998                           indf0	equ	0xFEF
 31999                           postinc0	equ	0xFEE
 32000                           fsr0h	equ	0xFEA
 32001                           fsr0l	equ	0xFE9
 32002                           wreg	equ	0xFE8
 32003                           indf1	equ	0xFE7
 32004                           postdec1	equ	0xFE5
 32005                           plusw1	equ	0xFE3
 32006                           fsr1h	equ	0xFE2
 32007                           fsr1l	equ	0xFE1
 32008                           bsr	equ	0xFE0
 32009                           indf2	equ	0xFDF
 32010                           postinc2	equ	0xFDE
 32011                           postdec2	equ	0xFDD
 32012                           plusw2	equ	0xFDB
 32013                           fsr2h	equ	0xFDA
 32014                           fsr2l	equ	0xFD9
 32015                           status	equ	0xFD8
 32016                           
 32017 ;; *************** function i2___flsub *****************
 32018 ;; Defined at:
 32019 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 32020 ;; Parameters:    Size  Location     Type
 32021 ;;  b               4   22[BANK0 ] unsigned char 
 32022 ;;  a               4   26[BANK0 ] unsigned char 
 32023 ;; Auto vars:     Size  Location     Type
 32024 ;;		None
 32025 ;; Return value:  Size  Location     Type
 32026 ;;                  4   22[BANK0 ] unsigned char 
 32027 ;; Registers used:
 32028 ;;		wreg, status,2, status,0, cstack
 32029 ;; Tracked objects:
 32030 ;;		On entry : 0/0
 32031 ;;		On exit  : 0/0
 32032 ;;		Unchanged: 0/0
 32033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32034 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32037 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32038 ;;Total ram usage:        8 bytes
 32039 ;; Hardware stack levels used:    1
 32040 ;; Hardware stack levels required when called:    1
 32041 ;; This function calls:
 32042 ;;		i2___fladd
 32043 ;; This function is called by:
 32044 ;;		_sin
 32045 ;;		i2_printf
 32046 ;; This function uses a non-reentrant model
 32047 ;;
 32048                           
 32049                           	psect	text110
 32050  017B02                     __ptext110:
 32051                           	opt stack 0
 32052  017B02                     i2___flsub:
 32053                           	opt stack 15
 32054                           
 32055                           ;incstack = 0
 32056  017B02  0E00               	movlw	0
 32057  017B04  0100               	movlb	0	; () banked
 32058  017B06  1B7A               	xorwf	i2___flsub@a& (0+255),f,b
 32059  017B08  0E00               	movlw	0
 32060  017B0A  1B7B               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 32061  017B0C  0E00               	movlw	0
 32062  017B0E  1B7C               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 32063  017B10  0E80               	movlw	128
 32064  017B12  1B7D               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 32065                           
 32066                           ; BSR set to: 0
 32067  017B14  C076  F056         	movff	i2___flsub@b,i2___fladd@b
 32068  017B18  C077  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 32069  017B1C  C078  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 32070  017B20  C079  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 32071  017B24  C07A  F05A         	movff	i2___flsub@a,i2___fladd@a
 32072  017B28  C07B  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 32073  017B2C  C07C  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 32074  017B30  C07D  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 32075  017B34  ECC2  F0A0         	call	i2___fladd	;wreg free
 32076  017B38  C056  F076         	movff	?i2___fladd,?i2___flsub
 32077  017B3C  C057  F077         	movff	?i2___fladd+1,?i2___flsub+1
 32078  017B40  C058  F078         	movff	?i2___fladd+2,?i2___flsub+2
 32079  017B44  C059  F079         	movff	?i2___fladd+3,?i2___flsub+3
 32080  017B48  0012               	return	
 32081  017B4A                     __end_ofi2___flsub:
 32082                           	opt stack 0
 32083                           tosu	equ	0xFFF
 32084                           tosh	equ	0xFFE
 32085                           tosl	equ	0xFFD
 32086                           pclatu	equ	0xFFB
 32087                           pclath	equ	0xFFA
 32088                           tblptru	equ	0xFF8
 32089                           tblptrh	equ	0xFF7
 32090                           tblptrl	equ	0xFF6
 32091                           tablat	equ	0xFF5
 32092                           prodh	equ	0xFF4
 32093                           prodl	equ	0xFF3
 32094                           intcon	equ	0xFF2
 32095                           indf0	equ	0xFEF
 32096                           postinc0	equ	0xFEE
 32097                           fsr0h	equ	0xFEA
 32098                           fsr0l	equ	0xFE9
 32099                           wreg	equ	0xFE8
 32100                           indf1	equ	0xFE7
 32101                           postdec1	equ	0xFE5
 32102                           plusw1	equ	0xFE3
 32103                           fsr1h	equ	0xFE2
 32104                           fsr1l	equ	0xFE1
 32105                           bsr	equ	0xFE0
 32106                           indf2	equ	0xFDF
 32107                           postinc2	equ	0xFDE
 32108                           postdec2	equ	0xFDD
 32109                           plusw2	equ	0xFDB
 32110                           fsr2h	equ	0xFDA
 32111                           fsr2l	equ	0xFD9
 32112                           status	equ	0xFD8
 32113                           
 32114 ;; *************** function i2___flneg *****************
 32115 ;; Defined at:
 32116 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 32117 ;; Parameters:    Size  Location     Type
 32118 ;;  f1              4   43[COMRAM] unsigned char 
 32119 ;; Auto vars:     Size  Location     Type
 32120 ;;		None
 32121 ;; Return value:  Size  Location     Type
 32122 ;;                  4   43[COMRAM] unsigned char 
 32123 ;; Registers used:
 32124 ;;		wreg, status,2, status,0
 32125 ;; Tracked objects:
 32126 ;;		On entry : 0/0
 32127 ;;		On exit  : 0/0
 32128 ;;		Unchanged: 0/0
 32129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32133 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32134 ;;Total ram usage:        4 bytes
 32135 ;; Hardware stack levels used:    1
 32136 ;; This function calls:
 32137 ;;		Nothing
 32138 ;; This function is called by:
 32139 ;;		_peakToRMS
 32140 ;;		_ADCPostProcessingCallback
 32141 ;;		_acos
 32142 ;;		_asin
 32143 ;;		_atan
 32144 ;;		_fabs
 32145 ;;		_sin
 32146 ;;		i2_printf
 32147 ;; This function uses a non-reentrant model
 32148 ;;
 32149                           
 32150                           	psect	text111
 32151  017E54                     __ptext111:
 32152                           	opt stack 0
 32153  017E54                     i2___flneg:
 32154                           	opt stack 16
 32155                           
 32156                           ;incstack = 0
 32157  017E54  502C               	movf	i2___flneg@f1,w,c
 32158  017E56  102D               	iorwf	i2___flneg@f1+1,w,c
 32159  017E58  102E               	iorwf	i2___flneg@f1+2,w,c
 32160  017E5A  102F               	iorwf	i2___flneg@f1+3,w,c
 32161  017E5C  B4D8               	btfsc	status,2,c
 32162  017E5E  D008               	goto	i2l1734
 32163  017E60  0E00               	movlw	0
 32164  017E62  1A2C               	xorwf	i2___flneg@f1,f,c
 32165  017E64  0E00               	movlw	0
 32166  017E66  1A2D               	xorwf	i2___flneg@f1+1,f,c
 32167  017E68  0E00               	movlw	0
 32168  017E6A  1A2E               	xorwf	i2___flneg@f1+2,f,c
 32169  017E6C  0E80               	movlw	128
 32170  017E6E  1A2F               	xorwf	i2___flneg@f1+3,f,c
 32171  017E70                     i2l1734:
 32172  017E70  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 32173  017E74  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 32174  017E78  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 32175  017E7C  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 32176  017E80  0012               	return	
 32177  017E82                     __end_ofi2___flneg:
 32178                           	opt stack 0
 32179                           tosu	equ	0xFFF
 32180                           tosh	equ	0xFFE
 32181                           tosl	equ	0xFFD
 32182                           pclatu	equ	0xFFB
 32183                           pclath	equ	0xFFA
 32184                           tblptru	equ	0xFF8
 32185                           tblptrh	equ	0xFF7
 32186                           tblptrl	equ	0xFF6
 32187                           tablat	equ	0xFF5
 32188                           prodh	equ	0xFF4
 32189                           prodl	equ	0xFF3
 32190                           intcon	equ	0xFF2
 32191                           indf0	equ	0xFEF
 32192                           postinc0	equ	0xFEE
 32193                           fsr0h	equ	0xFEA
 32194                           fsr0l	equ	0xFE9
 32195                           wreg	equ	0xFE8
 32196                           indf1	equ	0xFE7
 32197                           postdec1	equ	0xFE5
 32198                           plusw1	equ	0xFE3
 32199                           fsr1h	equ	0xFE2
 32200                           fsr1l	equ	0xFE1
 32201                           bsr	equ	0xFE0
 32202                           indf2	equ	0xFDF
 32203                           postinc2	equ	0xFDE
 32204                           postdec2	equ	0xFDD
 32205                           plusw2	equ	0xFDB
 32206                           fsr2h	equ	0xFDA
 32207                           fsr2l	equ	0xFD9
 32208                           status	equ	0xFD8
 32209                           
 32210 ;; *************** function i2___fldiv *****************
 32211 ;; Defined at:
 32212 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 32213 ;; Parameters:    Size  Location     Type
 32214 ;;  b               4   18[COMRAM] unsigned char 
 32215 ;;  a               4   22[COMRAM] unsigned char 
 32216 ;; Auto vars:     Size  Location     Type
 32217 ;;  __fldiv         4   37[COMRAM] unsigned long 
 32218 ;;  __fldiv         4   31[COMRAM] unsigned long 
 32219 ;;  __fldiv         2   35[COMRAM] int 
 32220 ;;  __fldiv         1   42[COMRAM] unsigned char 
 32221 ;;  __fldiv         1   41[COMRAM] unsigned char 
 32222 ;;  __fldiv         1   30[COMRAM] unsigned char 
 32223 ;; Return value:  Size  Location     Type
 32224 ;;                  4   18[COMRAM] unsigned char 
 32225 ;; Registers used:
 32226 ;;		wreg, status,2, status,0
 32227 ;; Tracked objects:
 32228 ;;		On entry : 0/0
 32229 ;;		On exit  : 0/0
 32230 ;;		Unchanged: 0/0
 32231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32232 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32233 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32234 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32235 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32236 ;;Total ram usage:       25 bytes
 32237 ;; Hardware stack levels used:    1
 32238 ;; This function calls:
 32239 ;;		Nothing
 32240 ;; This function is called by:
 32241 ;;		_peakToRMS
 32242 ;;		_currentMeasuredToPeak
 32243 ;;		_ADCPostProcessingCallback
 32244 ;;		_asin
 32245 ;;		_atan
 32246 ;;		_sin
 32247 ;; This function uses a non-reentrant model
 32248 ;;
 32249                           
 32250                           	psect	text112
 32251  015304                     __ptext112:
 32252                           	opt stack 0
 32253  015304                     i2___fldiv:
 32254                           	opt stack 16
 32255                           
 32256                           ;incstack = 0
 32257  015304  5016               	movf	i2___fldiv@b+3,w,c
 32258  015306  0B80               	andlw	128
 32259  015308  6E1F               	movwf	i2___fldiv@sign,c
 32260  01530A  5016               	movf	i2___fldiv@b+3,w,c
 32261  01530C  2416               	addwf	i2___fldiv@b+3,w,c
 32262  01530E  6E2A               	movwf	i2___fldiv@bexp,c
 32263  015310  BE15               	btfsc	i2___fldiv@b+2,7,c
 32264  015312  802A               	bsf	i2___fldiv@bexp,0,c
 32265  015314  502A               	movf	i2___fldiv@bexp,w,c
 32266  015316  B4D8               	btfsc	status,2,c
 32267  015318  D00D               	goto	i2l2054
 32268  01531A  282A               	incf	i2___fldiv@bexp,w,c
 32269  01531C  A4D8               	btfss	status,2,c
 32270  01531E  D008               	goto	i2l2055
 32271  015320  0E00               	movlw	0
 32272  015322  6E13               	movwf	i2___fldiv@b,c
 32273  015324  0E00               	movlw	0
 32274  015326  6E14               	movwf	i2___fldiv@b+1,c
 32275  015328  0E00               	movlw	0
 32276  01532A  6E15               	movwf	i2___fldiv@b+2,c
 32277  01532C  0E00               	movlw	0
 32278  01532E  6E16               	movwf	i2___fldiv@b+3,c
 32279  015330                     i2l2055:
 32280  015330  8E15               	bsf	i2___fldiv@b+2,7,c
 32281  015332  D006               	goto	L17
 32282  015334                     i2l2054:
 32283  015334  0E00               	movlw	0
 32284  015336  6E13               	movwf	i2___fldiv@b,c
 32285  015338  0E00               	movlw	0
 32286  01533A  6E14               	movwf	i2___fldiv@b+1,c
 32287  01533C  0E00               	movlw	0
 32288  01533E  6E15               	movwf	i2___fldiv@b+2,c
 32289  015340                     L17:
 32290  015340  0E00               	movlw	0
 32291  015342  6E16               	movwf	i2___fldiv@b+3,c
 32292  015344  501A               	movf	i2___fldiv@a+3,w,c
 32293  015346  0B80               	andlw	128
 32294  015348  1A1F               	xorwf	i2___fldiv@sign,f,c
 32295  01534A  501A               	movf	i2___fldiv@a+3,w,c
 32296  01534C  241A               	addwf	i2___fldiv@a+3,w,c
 32297  01534E  6E2B               	movwf	i2___fldiv@aexp,c
 32298  015350  BE19               	btfsc	i2___fldiv@a+2,7,c
 32299  015352  802B               	bsf	i2___fldiv@aexp,0,c
 32300  015354  502B               	movf	i2___fldiv@aexp,w,c
 32301  015356  B4D8               	btfsc	status,2,c
 32302  015358  D00D               	goto	i2l2058
 32303  01535A  282B               	incf	i2___fldiv@aexp,w,c
 32304  01535C  A4D8               	btfss	status,2,c
 32305  01535E  D008               	goto	i2l2059
 32306  015360  0E00               	movlw	0
 32307  015362  6E17               	movwf	i2___fldiv@a,c
 32308  015364  0E00               	movlw	0
 32309  015366  6E18               	movwf	i2___fldiv@a+1,c
 32310  015368  0E00               	movlw	0
 32311  01536A  6E19               	movwf	i2___fldiv@a+2,c
 32312  01536C  0E00               	movlw	0
 32313  01536E  6E1A               	movwf	i2___fldiv@a+3,c
 32314  015370                     i2l2059:
 32315  015370  8E19               	bsf	i2___fldiv@a+2,7,c
 32316  015372  D006               	goto	L18
 32317  015374                     i2l2058:
 32318  015374  0E00               	movlw	0
 32319  015376  6E17               	movwf	i2___fldiv@a,c
 32320  015378  0E00               	movlw	0
 32321  01537A  6E18               	movwf	i2___fldiv@a+1,c
 32322  01537C  0E00               	movlw	0
 32323  01537E  6E19               	movwf	i2___fldiv@a+2,c
 32324  015380                     L18:
 32325  015380  0E00               	movlw	0
 32326  015382  6E1A               	movwf	i2___fldiv@a+3,c
 32327  015384  5017               	movf	i2___fldiv@a,w,c
 32328  015386  1018               	iorwf	i2___fldiv@a+1,w,c
 32329  015388  1019               	iorwf	i2___fldiv@a+2,w,c
 32330  01538A  101A               	iorwf	i2___fldiv@a+3,w,c
 32331  01538C  A4D8               	btfss	status,2,c
 32332  01538E  D015               	goto	i2l2061
 32333  015390  0E00               	movlw	0
 32334  015392  6E13               	movwf	i2___fldiv@b,c
 32335  015394  0E00               	movlw	0
 32336  015396  6E14               	movwf	i2___fldiv@b+1,c
 32337  015398  0E00               	movlw	0
 32338  01539A  6E15               	movwf	i2___fldiv@b+2,c
 32339  01539C  0E00               	movlw	0
 32340  01539E  6E16               	movwf	i2___fldiv@b+3,c
 32341  0153A0  0E80               	movlw	128
 32342  0153A2  1215               	iorwf	i2___fldiv@b+2,f,c
 32343  0153A4  0E7F               	movlw	127
 32344  0153A6  1216               	iorwf	i2___fldiv@b+3,f,c
 32345  0153A8  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 32346  0153AC  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 32347  0153B0  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 32348  0153B4  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 32349  0153B8  0012               	return	
 32350  0153BA                     i2l2061:
 32351  0153BA  502A               	movf	i2___fldiv@bexp,w,c
 32352  0153BC  A4D8               	btfss	status,2,c
 32353  0153BE  D011               	goto	i2l2063
 32354  0153C0  0E00               	movlw	0
 32355  0153C2  6E13               	movwf	i2___fldiv@b,c
 32356  0153C4  0E00               	movlw	0
 32357  0153C6  6E14               	movwf	i2___fldiv@b+1,c
 32358  0153C8  0E00               	movlw	0
 32359  0153CA  6E15               	movwf	i2___fldiv@b+2,c
 32360  0153CC  0E00               	movlw	0
 32361  0153CE  6E16               	movwf	i2___fldiv@b+3,c
 32362  0153D0  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 32363  0153D4  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 32364  0153D8  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 32365  0153DC  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 32366  0153E0  0012               	return	
 32367  0153E2                     i2l2063:
 32368  0153E2  502B               	movf	i2___fldiv@aexp,w,c
 32369  0153E4  6E1B               	movwf	??i2___fldiv& (0+255),c
 32370  0153E6  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 32371  0153E8  1E1B               	comf	??i2___fldiv,f,c
 32372  0153EA  1E1C               	comf	??i2___fldiv+1,f,c
 32373  0153EC  4A1B               	infsnz	??i2___fldiv,f,c
 32374  0153EE  2A1C               	incf	??i2___fldiv+1,f,c
 32375  0153F0  502A               	movf	i2___fldiv@bexp,w,c
 32376  0153F2  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 32377  0153F4  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 32378  0153F6  501B               	movf	??i2___fldiv,w,c
 32379  0153F8  261D               	addwf	??i2___fldiv+2,f,c
 32380  0153FA  501C               	movf	??i2___fldiv+1,w,c
 32381  0153FC  221E               	addwfc	??i2___fldiv+3,f,c
 32382  0153FE  0E7F               	movlw	127
 32383  015400  241D               	addwf	??i2___fldiv+2,w,c
 32384  015402  6E24               	movwf	i2___fldiv@new_exp,c
 32385  015404  0E00               	movlw	0
 32386  015406  201E               	addwfc	??i2___fldiv+3,w,c
 32387  015408  6E25               	movwf	i2___fldiv@new_exp+1,c
 32388  01540A  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 32389  01540E  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 32390  015412  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 32391  015416  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 32392  01541A  0E00               	movlw	0
 32393  01541C  6E13               	movwf	i2___fldiv@b,c
 32394  01541E  0E00               	movlw	0
 32395  015420  6E14               	movwf	i2___fldiv@b+1,c
 32396  015422  0E00               	movlw	0
 32397  015424  6E15               	movwf	i2___fldiv@b+2,c
 32398  015426  0E00               	movlw	0
 32399  015428  6E16               	movwf	i2___fldiv@b+3,c
 32400  01542A  0E00               	movlw	0
 32401  01542C  6E26               	movwf	i2___fldiv@grs,c
 32402  01542E  0E00               	movlw	0
 32403  015430  6E27               	movwf	i2___fldiv@grs+1,c
 32404  015432  0E00               	movlw	0
 32405  015434  6E28               	movwf	i2___fldiv@grs+2,c
 32406  015436  0E00               	movlw	0
 32407  015438  6E29               	movwf	i2___fldiv@grs+3,c
 32408  01543A  0E00               	movlw	0
 32409  01543C  6E2B               	movwf	i2___fldiv@aexp,c
 32410  01543E  D028               	goto	i2l2064
 32411  015440  502B               	movf	i2___fldiv@aexp,w,c
 32412  015442  B4D8               	btfsc	status,2,c
 32413  015444  D011               	goto	i2l2066
 32414  015446  90D8               	bcf	status,0,c
 32415  015448  3620               	rlcf	i2___fldiv@rem,f,c
 32416  01544A  3621               	rlcf	i2___fldiv@rem+1,f,c
 32417  01544C  3622               	rlcf	i2___fldiv@rem+2,f,c
 32418  01544E  3623               	rlcf	i2___fldiv@rem+3,f,c
 32419  015450  90D8               	bcf	status,0,c
 32420  015452  3613               	rlcf	i2___fldiv@b,f,c
 32421  015454  3614               	rlcf	i2___fldiv@b+1,f,c
 32422  015456  3615               	rlcf	i2___fldiv@b+2,f,c
 32423  015458  3616               	rlcf	i2___fldiv@b+3,f,c
 32424  01545A  BE29               	btfsc	i2___fldiv@grs+3,7,c
 32425  01545C  8013               	bsf	i2___fldiv@b,0,c
 32426  01545E  90D8               	bcf	status,0,c
 32427  015460  3626               	rlcf	i2___fldiv@grs,f,c
 32428  015462  3627               	rlcf	i2___fldiv@grs+1,f,c
 32429  015464  3628               	rlcf	i2___fldiv@grs+2,f,c
 32430  015466  3629               	rlcf	i2___fldiv@grs+3,f,c
 32431  015468                     i2l2066:
 32432  015468  5017               	movf	i2___fldiv@a,w,c
 32433  01546A  5C20               	subwf	i2___fldiv@rem,w,c
 32434  01546C  5018               	movf	i2___fldiv@a+1,w,c
 32435  01546E  5821               	subwfb	i2___fldiv@rem+1,w,c
 32436  015470  5019               	movf	i2___fldiv@a+2,w,c
 32437  015472  5822               	subwfb	i2___fldiv@rem+2,w,c
 32438  015474  501A               	movf	i2___fldiv@a+3,w,c
 32439  015476  5823               	subwfb	i2___fldiv@rem+3,w,c
 32440  015478  A0D8               	btfss	status,0,c
 32441  01547A  D009               	goto	i2l2068
 32442  01547C  8C29               	bsf	i2___fldiv@grs+3,6,c
 32443  01547E  5017               	movf	i2___fldiv@a,w,c
 32444  015480  5E20               	subwf	i2___fldiv@rem,f,c
 32445  015482  5018               	movf	i2___fldiv@a+1,w,c
 32446  015484  5A21               	subwfb	i2___fldiv@rem+1,f,c
 32447  015486  5019               	movf	i2___fldiv@a+2,w,c
 32448  015488  5A22               	subwfb	i2___fldiv@rem+2,f,c
 32449  01548A  501A               	movf	i2___fldiv@a+3,w,c
 32450  01548C  5A23               	subwfb	i2___fldiv@rem+3,f,c
 32451  01548E                     i2l2068:
 32452  01548E  2A2B               	incf	i2___fldiv@aexp,f,c
 32453  015490                     i2l2064:
 32454  015490  0E19               	movlw	25
 32455  015492  642B               	cpfsgt	i2___fldiv@aexp,c
 32456  015494  D7D5               	goto	i2l2065
 32457  015496  5020               	movf	i2___fldiv@rem,w,c
 32458  015498  1021               	iorwf	i2___fldiv@rem+1,w,c
 32459  01549A  1022               	iorwf	i2___fldiv@rem+2,w,c
 32460  01549C  1023               	iorwf	i2___fldiv@rem+3,w,c
 32461  01549E  B4D8               	btfsc	status,2,c
 32462  0154A0  D011               	goto	i2l2071
 32463  0154A2  8026               	bsf	i2___fldiv@grs,0,c
 32464  0154A4  D00F               	goto	i2l2071
 32465  0154A6  90D8               	bcf	status,0,c
 32466  0154A8  3613               	rlcf	i2___fldiv@b,f,c
 32467  0154AA  3614               	rlcf	i2___fldiv@b+1,f,c
 32468  0154AC  3615               	rlcf	i2___fldiv@b+2,f,c
 32469  0154AE  3616               	rlcf	i2___fldiv@b+3,f,c
 32470  0154B0  BE29               	btfsc	i2___fldiv@grs+3,7,c
 32471  0154B2  8013               	bsf	i2___fldiv@b,0,c
 32472  0154B4  90D8               	bcf	status,0,c
 32473  0154B6  3626               	rlcf	i2___fldiv@grs,f,c
 32474  0154B8  3627               	rlcf	i2___fldiv@grs+1,f,c
 32475  0154BA  3628               	rlcf	i2___fldiv@grs+2,f,c
 32476  0154BC  3629               	rlcf	i2___fldiv@grs+3,f,c
 32477  0154BE  0624               	decf	i2___fldiv@new_exp,f,c
 32478  0154C0  A0D8               	btfss	status,0,c
 32479  0154C2  0625               	decf	i2___fldiv@new_exp+1,f,c
 32480  0154C4                     i2l2071:
 32481  0154C4  AE15               	btfss	i2___fldiv@b+2,7,c
 32482  0154C6  D7EF               	goto	i2l2072
 32483  0154C8  0E00               	movlw	0
 32484  0154CA  6E2B               	movwf	i2___fldiv@aexp,c
 32485  0154CC  AE29               	btfss	i2___fldiv@grs+3,7,c
 32486  0154CE  D016               	goto	i2l2078
 32487  0154D0  0EFF               	movlw	255
 32488  0154D2  1426               	andwf	i2___fldiv@grs,w,c
 32489  0154D4  6E1B               	movwf	??i2___fldiv& (0+255),c
 32490  0154D6  0EFF               	movlw	255
 32491  0154D8  1427               	andwf	i2___fldiv@grs+1,w,c
 32492  0154DA  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 32493  0154DC  0EFF               	movlw	255
 32494  0154DE  1428               	andwf	i2___fldiv@grs+2,w,c
 32495  0154E0  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 32496  0154E2  0E7F               	movlw	127
 32497  0154E4  1429               	andwf	i2___fldiv@grs+3,w,c
 32498  0154E6  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 32499  0154E8  501B               	movf	??i2___fldiv,w,c
 32500  0154EA  101C               	iorwf	??i2___fldiv+1,w,c
 32501  0154EC  101D               	iorwf	??i2___fldiv+2,w,c
 32502  0154EE  101E               	iorwf	??i2___fldiv+3,w,c
 32503  0154F0  A4D8               	btfss	status,2,c
 32504  0154F2  D002               	goto	i2u750_40
 32505  0154F4  A013               	btfss	i2___fldiv@b,0,c
 32506  0154F6  D002               	goto	i2l2078
 32507  0154F8                     i2u750_40:
 32508  0154F8  0E01               	movlw	1
 32509  0154FA  6E2B               	movwf	i2___fldiv@aexp,c
 32510  0154FC                     i2l2078:
 32511  0154FC  502B               	movf	i2___fldiv@aexp,w,c
 32512  0154FE  B4D8               	btfsc	status,2,c
 32513  015500  D01F               	goto	i2l2080
 32514  015502  0E01               	movlw	1
 32515  015504  2613               	addwf	i2___fldiv@b,f,c
 32516  015506  0E00               	movlw	0
 32517  015508  2214               	addwfc	i2___fldiv@b+1,f,c
 32518  01550A  2215               	addwfc	i2___fldiv@b+2,f,c
 32519  01550C  2216               	addwfc	i2___fldiv@b+3,f,c
 32520  01550E  A016               	btfss	i2___fldiv@b+3,0,c
 32521  015510  D017               	goto	i2l2080
 32522  015512  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 32523  015516  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 32524  01551A  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 32525  01551E  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 32526  015522  341E               	rlcf	??i2___fldiv+3,w,c
 32527  015524  321E               	rrcf	??i2___fldiv+3,f,c
 32528  015526  321D               	rrcf	??i2___fldiv+2,f,c
 32529  015528  321C               	rrcf	??i2___fldiv+1,f,c
 32530  01552A  321B               	rrcf	??i2___fldiv,f,c
 32531  01552C  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 32532  015530  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 32533  015534  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 32534  015538  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 32535  01553C  4A24               	infsnz	i2___fldiv@new_exp,f,c
 32536  01553E  2A25               	incf	i2___fldiv@new_exp+1,f,c
 32537  015540                     i2l2080:
 32538  015540  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 32539  015542  D010               	goto	i2l2081
 32540  015544  5025               	movf	i2___fldiv@new_exp+1,w,c
 32541  015546  E103               	bnz	i2u753_40
 32542  015548  2824               	incf	i2___fldiv@new_exp,w,c
 32543  01554A  A0D8               	btfss	status,0,c
 32544  01554C  D00B               	goto	i2l2081
 32545  01554E                     i2u753_40:
 32546  01554E  0E00               	movlw	0
 32547  015550  6E25               	movwf	i2___fldiv@new_exp+1,c
 32548  015552  6824               	setf	i2___fldiv@new_exp,c
 32549  015554  0E00               	movlw	0
 32550  015556  6E13               	movwf	i2___fldiv@b,c
 32551  015558  0E00               	movlw	0
 32552  01555A  6E14               	movwf	i2___fldiv@b+1,c
 32553  01555C  0E00               	movlw	0
 32554  01555E  6E15               	movwf	i2___fldiv@b+2,c
 32555  015560  0E00               	movlw	0
 32556  015562  6E16               	movwf	i2___fldiv@b+3,c
 32557  015564                     i2l2081:
 32558  015564  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 32559  015566  D005               	goto	i2u754_40
 32560  015568  5025               	movf	i2___fldiv@new_exp+1,w,c
 32561  01556A  E111               	bnz	i2l7452
 32562  01556C  0424               	decf	i2___fldiv@new_exp,w,c
 32563  01556E  B0D8               	btfsc	status,0,c
 32564  015570  D00E               	goto	i2l2082
 32565  015572                     i2u754_40:
 32566  015572  0E00               	movlw	0
 32567  015574  6E25               	movwf	i2___fldiv@new_exp+1,c
 32568  015576  0E00               	movlw	0
 32569  015578  6E24               	movwf	i2___fldiv@new_exp,c
 32570  01557A  0E00               	movlw	0
 32571  01557C  6E13               	movwf	i2___fldiv@b,c
 32572  01557E  0E00               	movlw	0
 32573  015580  6E14               	movwf	i2___fldiv@b+1,c
 32574  015582  0E00               	movlw	0
 32575  015584  6E15               	movwf	i2___fldiv@b+2,c
 32576  015586  0E00               	movlw	0
 32577  015588  6E16               	movwf	i2___fldiv@b+3,c
 32578  01558A  0E00               	movlw	0
 32579  01558C  6E1F               	movwf	i2___fldiv@sign,c
 32580  01558E                     i2l2082:
 32581  01558E                     i2l7452:
 32582  01558E  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 32583  015592  A02A               	btfss	i2___fldiv@bexp,0,c
 32584  015594  D002               	goto	i2l2083
 32585  015596  8E15               	bsf	i2___fldiv@b+2,7,c
 32586  015598  D001               	goto	i2l2084
 32587  01559A                     i2l2083:
 32588  01559A  9E15               	bcf	i2___fldiv@b+2,7,c
 32589  01559C                     i2l2084:
 32590  01559C  90D8               	bcf	status,0,c
 32591  01559E  302A               	rrcf	i2___fldiv@bexp,w,c
 32592  0155A0  6E16               	movwf	i2___fldiv@b+3,c
 32593  0155A2  501F               	movf	i2___fldiv@sign,w,c
 32594  0155A4  1216               	iorwf	i2___fldiv@b+3,f,c
 32595  0155A6  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 32596  0155AA  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 32597  0155AE  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 32598  0155B2  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 32599  0155B6  0012               	return	
 32600  0155B8                     __end_ofi2___fldiv:
 32601                           	opt stack 0
 32602                           tosu	equ	0xFFF
 32603                           tosh	equ	0xFFE
 32604                           tosl	equ	0xFFD
 32605                           pclatu	equ	0xFFB
 32606                           pclath	equ	0xFFA
 32607                           tblptru	equ	0xFF8
 32608                           tblptrh	equ	0xFF7
 32609                           tblptrl	equ	0xFF6
 32610                           tablat	equ	0xFF5
 32611                           prodh	equ	0xFF4
 32612                           prodl	equ	0xFF3
 32613                           intcon	equ	0xFF2
 32614                           indf0	equ	0xFEF
 32615                           postinc0	equ	0xFEE
 32616                           fsr0h	equ	0xFEA
 32617                           fsr0l	equ	0xFE9
 32618                           wreg	equ	0xFE8
 32619                           indf1	equ	0xFE7
 32620                           postdec1	equ	0xFE5
 32621                           plusw1	equ	0xFE3
 32622                           fsr1h	equ	0xFE2
 32623                           fsr1l	equ	0xFE1
 32624                           bsr	equ	0xFE0
 32625                           indf2	equ	0xFDF
 32626                           postinc2	equ	0xFDE
 32627                           postdec2	equ	0xFDD
 32628                           plusw2	equ	0xFDB
 32629                           fsr2h	equ	0xFDA
 32630                           fsr2l	equ	0xFD9
 32631                           status	equ	0xFD8
 32632                           
 32633 ;; *************** function _floor *****************
 32634 ;; Defined at:
 32635 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 32636 ;; Parameters:    Size  Location     Type
 32637 ;;  x               4   12[BANK0 ] unsigned char 
 32638 ;; Auto vars:     Size  Location     Type
 32639 ;;  i               4   16[BANK0 ] unsigned char 
 32640 ;;  expon           2   20[BANK0 ] int 
 32641 ;; Return value:  Size  Location     Type
 32642 ;;                  4   12[BANK0 ] int 
 32643 ;; Registers used:
 32644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32645 ;; Tracked objects:
 32646 ;;		On entry : 0/0
 32647 ;;		On exit  : 0/0
 32648 ;;		Unchanged: 0/0
 32649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32650 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32651 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32653 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32654 ;;Total ram usage:       10 bytes
 32655 ;; Hardware stack levels used:    1
 32656 ;; Hardware stack levels required when called:    1
 32657 ;; This function calls:
 32658 ;;		_frexp
 32659 ;;		i2___fladd
 32660 ;;		i2___flge
 32661 ;;		i2___fltol
 32662 ;;		i2___xxtofl
 32663 ;; This function is called by:
 32664 ;;		_sin
 32665 ;; This function uses a non-reentrant model
 32666 ;;
 32667                           
 32668                           	psect	text113
 32669  0167A0                     __ptext113:
 32670                           	opt stack 0
 32671  0167A0                     _floor:
 32672                           	opt stack 13
 32673                           
 32674                           ;incstack = 0
 32675  0167A0  C06C  F001         	movff	floor@x,frexp@value
 32676  0167A4  C06D  F002         	movff	floor@x+1,frexp@value+1
 32677  0167A8  C06E  F003         	movff	floor@x+2,frexp@value+2
 32678  0167AC  C06F  F004         	movff	floor@x+3,frexp@value+3
 32679  0167B0  0E74               	movlw	low floor@expon
 32680  0167B2  6E05               	movwf	frexp@eptr,c
 32681  0167B4  0E00               	movlw	high floor@expon
 32682  0167B6  6E06               	movwf	frexp@eptr+1,c
 32683  0167B8  ECE5  F0B9         	call	_frexp	;wreg free
 32684  0167BC  0100               	movlb	0	; () banked
 32685  0167BE  AF75               	btfss	(floor@expon+1)& (0+255),7,b
 32686  0167C0  D014               	goto	i2l2211
 32687                           
 32688                           ; BSR set to: 0
 32689  0167C2  AF6F               	btfss	(floor@x+3)& (0+255),7,b
 32690  0167C4  D009               	goto	i2l2212
 32691                           
 32692                           ; BSR set to: 0
 32693  0167C6  0E00               	movlw	0
 32694  0167C8  6F6C               	movwf	?_floor& (0+255),b
 32695  0167CA  0E00               	movlw	0
 32696  0167CC  6F6D               	movwf	(?_floor+1)& (0+255),b
 32697  0167CE  0E80               	movlw	128
 32698  0167D0  6F6E               	movwf	(?_floor+2)& (0+255),b
 32699  0167D2  0EBF               	movlw	191
 32700  0167D4  6F6F               	movwf	(?_floor+3)& (0+255),b
 32701                           
 32702                           ; BSR set to: 0
 32703  0167D6  0012               	return	
 32704  0167D8                     i2l2212:
 32705                           
 32706                           ; BSR set to: 0
 32707                           
 32708                           ; BSR set to: 0
 32709  0167D8  0E00               	movlw	0
 32710  0167DA  6F6C               	movwf	?_floor& (0+255),b
 32711  0167DC  0E00               	movlw	0
 32712  0167DE  6F6D               	movwf	(?_floor+1)& (0+255),b
 32713  0167E0  0E00               	movlw	0
 32714  0167E2  6F6E               	movwf	(?_floor+2)& (0+255),b
 32715  0167E4  0E00               	movlw	0
 32716  0167E6  6F6F               	movwf	(?_floor+3)& (0+255),b
 32717                           
 32718                           ; BSR set to: 0
 32719  0167E8  0012               	return	
 32720  0167EA                     i2l2211:
 32721                           
 32722                           ; BSR set to: 0
 32723                           
 32724                           ; BSR set to: 0
 32725  0167EA  5175               	movf	(floor@expon+1)& (0+255),w,b
 32726  0167EC  E104               	bnz	i2u1455_40
 32727  0167EE  0E1D               	movlw	29
 32728  0167F0  5D74               	subwf	floor@expon& (0+255),w,b
 32729  0167F2  A0D8               	btfss	status,0,c
 32730  0167F4  D009               	goto	i2l2214
 32731  0167F6                     i2u1455_40:
 32732                           
 32733                           ; BSR set to: 0
 32734  0167F6  C06C  F06C         	movff	floor@x,?_floor
 32735  0167FA  C06D  F06D         	movff	floor@x+1,?_floor+1
 32736  0167FE  C06E  F06E         	movff	floor@x+2,?_floor+2
 32737  016802  C06F  F06F         	movff	floor@x+3,?_floor+3
 32738  016806  0012               	return	
 32739  016808                     i2l2214:
 32740                           
 32741                           ; BSR set to: 0
 32742                           
 32743                           ; BSR set to: 0
 32744  016808  C06C  F049         	movff	floor@x,i2___fltol@f1
 32745  01680C  C06D  F04A         	movff	floor@x+1,i2___fltol@f1+1
 32746  016810  C06E  F04B         	movff	floor@x+2,i2___fltol@f1+2
 32747  016814  C06F  F04C         	movff	floor@x+3,i2___fltol@f1+3
 32748  016818  EC48  F0B5         	call	i2___fltol	;wreg free
 32749  01681C  C049  F005         	movff	?i2___fltol,i2___xxtofl@val
 32750  016820  C04A  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 32751  016824  C04B  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 32752  016828  C04C  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 32753  01682C  0E01               	movlw	1
 32754  01682E  EC1D  F0AF         	call	i2___xxtofl
 32755  016832  C005  F070         	movff	?i2___xxtofl,floor@i
 32756  016836  C006  F071         	movff	?i2___xxtofl+1,floor@i+1
 32757  01683A  C007  F072         	movff	?i2___xxtofl+2,floor@i+2
 32758  01683E  C008  F073         	movff	?i2___xxtofl+3,floor@i+3
 32759  016842  C06C  F034         	movff	floor@x,i2___flge@ff1
 32760  016846  C06D  F035         	movff	floor@x+1,i2___flge@ff1+1
 32761  01684A  C06E  F036         	movff	floor@x+2,i2___flge@ff1+2
 32762  01684E  C06F  F037         	movff	floor@x+3,i2___flge@ff1+3
 32763  016852  C070  F038         	movff	floor@i,i2___flge@ff2
 32764  016856  C071  F039         	movff	floor@i+1,i2___flge@ff2+1
 32765  01685A  C072  F03A         	movff	floor@i+2,i2___flge@ff2+2
 32766  01685E  C073  F03B         	movff	floor@i+3,i2___flge@ff2+3
 32767  016862  ECB2  F0B2         	call	i2___flge	;wreg free
 32768  016866  B0D8               	btfsc	status,0,c
 32769  016868  D01B               	goto	i2l2215
 32770  01686A  C070  F056         	movff	floor@i,i2___fladd@b
 32771  01686E  C071  F057         	movff	floor@i+1,i2___fladd@b+1
 32772  016872  C072  F058         	movff	floor@i+2,i2___fladd@b+2
 32773  016876  C073  F059         	movff	floor@i+3,i2___fladd@b+3
 32774  01687A  0E00               	movlw	0
 32775  01687C  6E5A               	movwf	i2___fladd@a,c
 32776  01687E  0E00               	movlw	0
 32777  016880  6E5B               	movwf	i2___fladd@a+1,c
 32778  016882  0E80               	movlw	128
 32779  016884  6E5C               	movwf	i2___fladd@a+2,c
 32780  016886  0EBF               	movlw	191
 32781  016888  6E5D               	movwf	i2___fladd@a+3,c
 32782  01688A  ECC2  F0A0         	call	i2___fladd	;wreg free
 32783  01688E  C056  F06C         	movff	?i2___fladd,?_floor
 32784  016892  C057  F06D         	movff	?i2___fladd+1,?_floor+1
 32785  016896  C058  F06E         	movff	?i2___fladd+2,?_floor+2
 32786  01689A  C059  F06F         	movff	?i2___fladd+3,?_floor+3
 32787  01689E  0012               	return	
 32788  0168A0                     i2l2215:
 32789  0168A0  C070  F06C         	movff	floor@i,?_floor
 32790  0168A4  C071  F06D         	movff	floor@i+1,?_floor+1
 32791  0168A8  C072  F06E         	movff	floor@i+2,?_floor+2
 32792  0168AC  C073  F06F         	movff	floor@i+3,?_floor+3
 32793  0168B0  0012               	return		;funcret
 32794  0168B2                     __end_of_floor:
 32795                           	opt stack 0
 32796                           tosu	equ	0xFFF
 32797                           tosh	equ	0xFFE
 32798                           tosl	equ	0xFFD
 32799                           pclatu	equ	0xFFB
 32800                           pclath	equ	0xFFA
 32801                           tblptru	equ	0xFF8
 32802                           tblptrh	equ	0xFF7
 32803                           tblptrl	equ	0xFF6
 32804                           tablat	equ	0xFF5
 32805                           prodh	equ	0xFF4
 32806                           prodl	equ	0xFF3
 32807                           intcon	equ	0xFF2
 32808                           indf0	equ	0xFEF
 32809                           postinc0	equ	0xFEE
 32810                           fsr0h	equ	0xFEA
 32811                           fsr0l	equ	0xFE9
 32812                           wreg	equ	0xFE8
 32813                           indf1	equ	0xFE7
 32814                           postdec1	equ	0xFE5
 32815                           plusw1	equ	0xFE3
 32816                           fsr1h	equ	0xFE2
 32817                           fsr1l	equ	0xFE1
 32818                           bsr	equ	0xFE0
 32819                           indf2	equ	0xFDF
 32820                           postinc2	equ	0xFDE
 32821                           postdec2	equ	0xFDD
 32822                           plusw2	equ	0xFDB
 32823                           fsr2h	equ	0xFDA
 32824                           fsr2l	equ	0xFD9
 32825                           status	equ	0xFD8
 32826                           
 32827 ;; *************** function i2___xxtofl *****************
 32828 ;; Defined at:
 32829 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 32830 ;; Parameters:    Size  Location     Type
 32831 ;;  sign            1    wreg     unsigned char 
 32832 ;;  val             4    4[COMRAM] long 
 32833 ;; Auto vars:     Size  Location     Type
 32834 ;;  sign            1   12[COMRAM] unsigned char 
 32835 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 32836 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 32837 ;; Return value:  Size  Location     Type
 32838 ;;                  4    4[COMRAM] unsigned char 
 32839 ;; Registers used:
 32840 ;;		wreg, status,2, status,0
 32841 ;; Tracked objects:
 32842 ;;		On entry : 0/0
 32843 ;;		On exit  : 0/0
 32844 ;;		Unchanged: 0/0
 32845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32847 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32849 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32850 ;;Total ram usage:       14 bytes
 32851 ;; Hardware stack levels used:    1
 32852 ;; This function calls:
 32853 ;;		Nothing
 32854 ;; This function is called by:
 32855 ;;		_ADCPostProcessingCallback
 32856 ;;		_floor
 32857 ;;		i2_printf
 32858 ;; This function uses a non-reentrant model
 32859 ;;
 32860                           
 32861                           	psect	text114
 32862  015E3A                     __ptext114:
 32863                           	opt stack 0
 32864  015E3A                     i2___xxtofl:
 32865                           	opt stack 16
 32866                           
 32867                           ;incstack = 0
 32868                           ;i2___xxtofl@sign stored from wreg
 32869  015E3A  6E0D               	movwf	i2___xxtofl@sign,c
 32870  015E3C  500D               	movf	i2___xxtofl@sign,w,c
 32871  015E3E  A4D8               	btfss	status,2,c
 32872  015E40  AE08               	btfss	i2___xxtofl@val+3,7,c
 32873  015E42  D01A               	goto	i2l2190
 32874  015E44  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 32875  015E48  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 32876  015E4C  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 32877  015E50  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 32878  015E54  1E09               	comf	??i2___xxtofl,f,c
 32879  015E56  1E0A               	comf	??i2___xxtofl+1,f,c
 32880  015E58  1E0B               	comf	??i2___xxtofl+2,f,c
 32881  015E5A  1E0C               	comf	??i2___xxtofl+3,f,c
 32882  015E5C  2A09               	incf	??i2___xxtofl,f,c
 32883  015E5E  0E00               	movlw	0
 32884  015E60  220A               	addwfc	??i2___xxtofl+1,f,c
 32885  015E62  220B               	addwfc	??i2___xxtofl+2,f,c
 32886  015E64  220C               	addwfc	??i2___xxtofl+3,f,c
 32887  015E66  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 32888  015E6A  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 32889  015E6E  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 32890  015E72  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 32891  015E76  D008               	goto	i2l2191
 32892  015E78                     i2l2190:
 32893  015E78  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 32894  015E7C  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 32895  015E80  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 32896  015E84  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 32897  015E88                     i2l2191:
 32898  015E88  5005               	movf	i2___xxtofl@val,w,c
 32899  015E8A  1006               	iorwf	i2___xxtofl@val+1,w,c
 32900  015E8C  1007               	iorwf	i2___xxtofl@val+2,w,c
 32901  015E8E  1008               	iorwf	i2___xxtofl@val+3,w,c
 32902  015E90  A4D8               	btfss	status,2,c
 32903  015E92  D009               	goto	i2l2192
 32904  015E94  0E00               	movlw	0
 32905  015E96  6E05               	movwf	?i2___xxtofl,c
 32906  015E98  0E00               	movlw	0
 32907  015E9A  6E06               	movwf	?i2___xxtofl+1,c
 32908  015E9C  0E00               	movlw	0
 32909  015E9E  6E07               	movwf	?i2___xxtofl+2,c
 32910  015EA0  0E00               	movlw	0
 32911  015EA2  6E08               	movwf	?i2___xxtofl+3,c
 32912  015EA4  0012               	return	
 32913  015EA6                     i2l2192:
 32914  015EA6  0E96               	movlw	150
 32915  015EA8  6E0E               	movwf	i2___xxtofl@exp,c
 32916  015EAA  D006               	goto	i2l2194
 32917  015EAC  2A0E               	incf	i2___xxtofl@exp,f,c
 32918  015EAE  90D8               	bcf	status,0,c
 32919  015EB0  3212               	rrcf	i2___xxtofl@arg+3,f,c
 32920  015EB2  3211               	rrcf	i2___xxtofl@arg+2,f,c
 32921  015EB4  3210               	rrcf	i2___xxtofl@arg+1,f,c
 32922  015EB6  320F               	rrcf	i2___xxtofl@arg,f,c
 32923  015EB8                     i2l2194:
 32924  015EB8  0E00               	movlw	0
 32925  015EBA  140F               	andwf	i2___xxtofl@arg,w,c
 32926  015EBC  6E09               	movwf	??i2___xxtofl& (0+255),c
 32927  015EBE  0E00               	movlw	0
 32928  015EC0  1410               	andwf	i2___xxtofl@arg+1,w,c
 32929  015EC2  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 32930  015EC4  0E00               	movlw	0
 32931  015EC6  1411               	andwf	i2___xxtofl@arg+2,w,c
 32932  015EC8  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 32933  015ECA  0EFE               	movlw	254
 32934  015ECC  1412               	andwf	i2___xxtofl@arg+3,w,c
 32935  015ECE  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 32936  015ED0  5009               	movf	??i2___xxtofl,w,c
 32937  015ED2  100A               	iorwf	??i2___xxtofl+1,w,c
 32938  015ED4  100B               	iorwf	??i2___xxtofl+2,w,c
 32939  015ED6  100C               	iorwf	??i2___xxtofl+3,w,c
 32940  015ED8  B4D8               	btfsc	status,2,c
 32941  015EDA  D00D               	goto	i2l2197
 32942  015EDC  D7E7               	goto	i2l2195
 32943  015EDE  2A0E               	incf	i2___xxtofl@exp,f,c
 32944  015EE0  0E01               	movlw	1
 32945  015EE2  260F               	addwf	i2___xxtofl@arg,f,c
 32946  015EE4  0E00               	movlw	0
 32947  015EE6  2210               	addwfc	i2___xxtofl@arg+1,f,c
 32948  015EE8  2211               	addwfc	i2___xxtofl@arg+2,f,c
 32949  015EEA  2212               	addwfc	i2___xxtofl@arg+3,f,c
 32950  015EEC  90D8               	bcf	status,0,c
 32951  015EEE  3212               	rrcf	i2___xxtofl@arg+3,f,c
 32952  015EF0  3211               	rrcf	i2___xxtofl@arg+2,f,c
 32953  015EF2  3210               	rrcf	i2___xxtofl@arg+1,f,c
 32954  015EF4  320F               	rrcf	i2___xxtofl@arg,f,c
 32955  015EF6                     i2l2197:
 32956  015EF6  0E00               	movlw	0
 32957  015EF8  140F               	andwf	i2___xxtofl@arg,w,c
 32958  015EFA  6E09               	movwf	??i2___xxtofl& (0+255),c
 32959  015EFC  0E00               	movlw	0
 32960  015EFE  1410               	andwf	i2___xxtofl@arg+1,w,c
 32961  015F00  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 32962  015F02  0E00               	movlw	0
 32963  015F04  1411               	andwf	i2___xxtofl@arg+2,w,c
 32964  015F06  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 32965  015F08  0EFF               	movlw	255
 32966  015F0A  1412               	andwf	i2___xxtofl@arg+3,w,c
 32967  015F0C  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 32968  015F0E  5009               	movf	??i2___xxtofl,w,c
 32969  015F10  100A               	iorwf	??i2___xxtofl+1,w,c
 32970  015F12  100B               	iorwf	??i2___xxtofl+2,w,c
 32971  015F14  100C               	iorwf	??i2___xxtofl+3,w,c
 32972  015F16  B4D8               	btfsc	status,2,c
 32973  015F18  D007               	goto	i2l2200
 32974  015F1A  D7E1               	goto	i2l2198
 32975  015F1C  060E               	decf	i2___xxtofl@exp,f,c
 32976  015F1E  90D8               	bcf	status,0,c
 32977  015F20  360F               	rlcf	i2___xxtofl@arg,f,c
 32978  015F22  3610               	rlcf	i2___xxtofl@arg+1,f,c
 32979  015F24  3611               	rlcf	i2___xxtofl@arg+2,f,c
 32980  015F26  3612               	rlcf	i2___xxtofl@arg+3,f,c
 32981  015F28                     i2l2200:
 32982  015F28  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 32983  015F2A  D003               	goto	i2u1388_40
 32984  015F2C  0E02               	movlw	2
 32985  015F2E  600E               	cpfslt	i2___xxtofl@exp,c
 32986  015F30  D7F5               	goto	i2l2201
 32987  015F32                     i2u1388_40:
 32988  015F32  B00E               	btfsc	i2___xxtofl@exp,0,c
 32989  015F34  D008               	goto	i2l2205
 32990  015F36  0EFF               	movlw	255
 32991  015F38  160F               	andwf	i2___xxtofl@arg,f,c
 32992  015F3A  0EFF               	movlw	255
 32993  015F3C  1610               	andwf	i2___xxtofl@arg+1,f,c
 32994  015F3E  0E7F               	movlw	127
 32995  015F40  1611               	andwf	i2___xxtofl@arg+2,f,c
 32996  015F42  0EFF               	movlw	255
 32997  015F44  1612               	andwf	i2___xxtofl@arg+3,f,c
 32998  015F46                     i2l2205:
 32999  015F46  90D8               	bcf	status,0,c
 33000  015F48  320E               	rrcf	i2___xxtofl@exp,f,c
 33001  015F4A  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 33002  015F4E  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 33003  015F50  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 33004  015F52  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 33005  015F54  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 33006  015F58  6A0B               	clrf	??i2___xxtofl+2,c
 33007  015F5A  6A0A               	clrf	??i2___xxtofl+1,c
 33008  015F5C  6A09               	clrf	??i2___xxtofl,c
 33009  015F5E  5009               	movf	??i2___xxtofl,w,c
 33010  015F60  120F               	iorwf	i2___xxtofl@arg,f,c
 33011  015F62  500A               	movf	??i2___xxtofl+1,w,c
 33012  015F64  1210               	iorwf	i2___xxtofl@arg+1,f,c
 33013  015F66  500B               	movf	??i2___xxtofl+2,w,c
 33014  015F68  1211               	iorwf	i2___xxtofl@arg+2,f,c
 33015  015F6A  500C               	movf	??i2___xxtofl+3,w,c
 33016  015F6C  1212               	iorwf	i2___xxtofl@arg+3,f,c
 33017  015F6E  500D               	movf	i2___xxtofl@sign,w,c
 33018  015F70  A4D8               	btfss	status,2,c
 33019  015F72  AE08               	btfss	i2___xxtofl@val+3,7,c
 33020  015F74  D001               	goto	i2l2206
 33021  015F76  8E12               	bsf	i2___xxtofl@arg+3,7,c
 33022  015F78                     i2l2206:
 33023  015F78  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 33024  015F7C  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 33025  015F80  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 33026  015F84  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 33027  015F88  0012               	return	
 33028  015F8A                     __end_ofi2___xxtofl:
 33029                           	opt stack 0
 33030                           tosu	equ	0xFFF
 33031                           tosh	equ	0xFFE
 33032                           tosl	equ	0xFFD
 33033                           pclatu	equ	0xFFB
 33034                           pclath	equ	0xFFA
 33035                           tblptru	equ	0xFF8
 33036                           tblptrh	equ	0xFF7
 33037                           tblptrl	equ	0xFF6
 33038                           tablat	equ	0xFF5
 33039                           prodh	equ	0xFF4
 33040                           prodl	equ	0xFF3
 33041                           intcon	equ	0xFF2
 33042                           indf0	equ	0xFEF
 33043                           postinc0	equ	0xFEE
 33044                           fsr0h	equ	0xFEA
 33045                           fsr0l	equ	0xFE9
 33046                           wreg	equ	0xFE8
 33047                           indf1	equ	0xFE7
 33048                           postdec1	equ	0xFE5
 33049                           plusw1	equ	0xFE3
 33050                           fsr1h	equ	0xFE2
 33051                           fsr1l	equ	0xFE1
 33052                           bsr	equ	0xFE0
 33053                           indf2	equ	0xFDF
 33054                           postinc2	equ	0xFDE
 33055                           postdec2	equ	0xFDD
 33056                           plusw2	equ	0xFDB
 33057                           fsr2h	equ	0xFDA
 33058                           fsr2l	equ	0xFD9
 33059                           status	equ	0xFD8
 33060                           
 33061 ;; *************** function i2___fltol *****************
 33062 ;; Defined at:
 33063 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 33064 ;; Parameters:    Size  Location     Type
 33065 ;;  f1              4   72[COMRAM] unsigned char 
 33066 ;; Auto vars:     Size  Location     Type
 33067 ;;  __fltol         1   81[COMRAM] unsigned char 
 33068 ;;  __fltol         1   80[COMRAM] unsigned char 
 33069 ;; Return value:  Size  Location     Type
 33070 ;;                  4   72[COMRAM] long 
 33071 ;; Registers used:
 33072 ;;		wreg, status,2, status,0
 33073 ;; Tracked objects:
 33074 ;;		On entry : 0/0
 33075 ;;		On exit  : 0/0
 33076 ;;		Unchanged: 0/0
 33077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33081 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33082 ;;Total ram usage:       10 bytes
 33083 ;; Hardware stack levels used:    1
 33084 ;; This function calls:
 33085 ;;		Nothing
 33086 ;; This function is called by:
 33087 ;;		_floor
 33088 ;;		i2_printf
 33089 ;; This function uses a non-reentrant model
 33090 ;;
 33091                           
 33092                           	psect	text115
 33093  016A90                     __ptext115:
 33094                           	opt stack 0
 33095  016A90                     i2___fltol:
 33096                           	opt stack 16
 33097                           
 33098                           ;incstack = 0
 33099  016A90  344B               	rlcf	i2___fltol@f1+2,w,c
 33100  016A92  344C               	rlcf	i2___fltol@f1+3,w,c
 33101  016A94  6E52               	movwf	i2___fltol@exp1,c
 33102  016A96  5052               	movf	i2___fltol@exp1,w,c
 33103  016A98  A4D8               	btfss	status,2,c
 33104  016A9A  D009               	goto	i2l1757
 33105  016A9C  0E00               	movlw	0
 33106  016A9E  6E49               	movwf	?i2___fltol,c
 33107  016AA0  0E00               	movlw	0
 33108  016AA2  6E4A               	movwf	?i2___fltol+1,c
 33109  016AA4  0E00               	movlw	0
 33110  016AA6  6E4B               	movwf	?i2___fltol+2,c
 33111  016AA8  0E00               	movlw	0
 33112  016AAA  6E4C               	movwf	?i2___fltol+3,c
 33113  016AAC  0012               	return	
 33114  016AAE                     i2l1757:
 33115  016AAE  C049  F04D         	movff	i2___fltol@f1,??i2___fltol
 33116  016AB2  C04A  F04E         	movff	i2___fltol@f1+1,??i2___fltol+1
 33117  016AB6  C04B  F04F         	movff	i2___fltol@f1+2,??i2___fltol+2
 33118  016ABA  C04C  F050         	movff	i2___fltol@f1+3,??i2___fltol+3
 33119  016ABE  0E20               	movlw	32
 33120  016AC0  D005               	goto	i2u1376_40
 33121  016AC2                     i2u1376_45:
 33122  016AC2  90D8               	bcf	status,0,c
 33123  016AC4  3250               	rrcf	??i2___fltol+3,f,c
 33124  016AC6  324F               	rrcf	??i2___fltol+2,f,c
 33125  016AC8  324E               	rrcf	??i2___fltol+1,f,c
 33126  016ACA  324D               	rrcf	??i2___fltol,f,c
 33127  016ACC                     i2u1376_40:
 33128  016ACC  2EE8               	decfsz	wreg,f,c
 33129  016ACE  D7F9               	goto	i2u1376_45
 33130  016AD0  504D               	movf	??i2___fltol,w,c
 33131  016AD2  6E51               	movwf	i2___fltol@sign1,c
 33132  016AD4  8E4B               	bsf	i2___fltol@f1+2,7,c
 33133  016AD6  0EFF               	movlw	255
 33134  016AD8  1649               	andwf	i2___fltol@f1,f,c
 33135  016ADA  0EFF               	movlw	255
 33136  016ADC  164A               	andwf	i2___fltol@f1+1,f,c
 33137  016ADE  0EFF               	movlw	255
 33138  016AE0  164B               	andwf	i2___fltol@f1+2,f,c
 33139  016AE2  0E00               	movlw	0
 33140  016AE4  164C               	andwf	i2___fltol@f1+3,f,c
 33141  016AE6  0E96               	movlw	150
 33142  016AE8  5E52               	subwf	i2___fltol@exp1,f,c
 33143  016AEA  AE52               	btfss	i2___fltol@exp1,7,c
 33144  016AEC  D016               	goto	i2l1759
 33145  016AEE  5052               	movf	i2___fltol@exp1,w,c
 33146  016AF0  0A80               	xorlw	128
 33147  016AF2  0F97               	addlw	151
 33148  016AF4  B0D8               	btfsc	status,0,c
 33149  016AF6  D009               	goto	i2l1760
 33150  016AF8  0E00               	movlw	0
 33151  016AFA  6E49               	movwf	?i2___fltol,c
 33152  016AFC  0E00               	movlw	0
 33153  016AFE  6E4A               	movwf	?i2___fltol+1,c
 33154  016B00  0E00               	movlw	0
 33155  016B02  6E4B               	movwf	?i2___fltol+2,c
 33156  016B04  0E00               	movlw	0
 33157  016B06  6E4C               	movwf	?i2___fltol+3,c
 33158  016B08  0012               	return	
 33159  016B0A                     i2l1760:
 33160  016B0A  90D8               	bcf	status,0,c
 33161  016B0C  324C               	rrcf	i2___fltol@f1+3,f,c
 33162  016B0E  324B               	rrcf	i2___fltol@f1+2,f,c
 33163  016B10  324A               	rrcf	i2___fltol@f1+1,f,c
 33164  016B12  3249               	rrcf	i2___fltol@f1,f,c
 33165  016B14  3E52               	incfsz	i2___fltol@exp1,f,c
 33166  016B16  D7F9               	goto	i2l1760
 33167  016B18  D015               	goto	i2u1380_40
 33168  016B1A                     i2l1759:
 33169  016B1A  0E1F               	movlw	31
 33170  016B1C  6452               	cpfsgt	i2___fltol@exp1,c
 33171  016B1E  D00F               	goto	i2l1765
 33172  016B20  0E00               	movlw	0
 33173  016B22  6E49               	movwf	?i2___fltol,c
 33174  016B24  0E00               	movlw	0
 33175  016B26  6E4A               	movwf	?i2___fltol+1,c
 33176  016B28  0E00               	movlw	0
 33177  016B2A  6E4B               	movwf	?i2___fltol+2,c
 33178  016B2C  0E00               	movlw	0
 33179  016B2E  6E4C               	movwf	?i2___fltol+3,c
 33180  016B30  0012               	return	
 33181  016B32  90D8               	bcf	status,0,c
 33182  016B34  3649               	rlcf	i2___fltol@f1,f,c
 33183  016B36  364A               	rlcf	i2___fltol@f1+1,f,c
 33184  016B38  364B               	rlcf	i2___fltol@f1+2,f,c
 33185  016B3A  364C               	rlcf	i2___fltol@f1+3,f,c
 33186  016B3C  0652               	decf	i2___fltol@exp1,f,c
 33187  016B3E                     i2l1765:
 33188  016B3E  5052               	movf	i2___fltol@exp1,w,c
 33189  016B40  A4D8               	btfss	status,2,c
 33190  016B42  D7F7               	goto	i2l1766
 33191  016B44                     i2u1380_40:
 33192  016B44  5051               	movf	i2___fltol@sign1,w,c
 33193  016B46  B4D8               	btfsc	status,2,c
 33194  016B48  D008               	goto	i2l1768
 33195  016B4A  1E4C               	comf	i2___fltol@f1+3,f,c
 33196  016B4C  1E4B               	comf	i2___fltol@f1+2,f,c
 33197  016B4E  1E4A               	comf	i2___fltol@f1+1,f,c
 33198  016B50  6C49               	negf	i2___fltol@f1,c
 33199  016B52  0E00               	movlw	0
 33200  016B54  224A               	addwfc	i2___fltol@f1+1,f,c
 33201  016B56  224B               	addwfc	i2___fltol@f1+2,f,c
 33202  016B58  224C               	addwfc	i2___fltol@f1+3,f,c
 33203  016B5A                     i2l1768:
 33204  016B5A  C049  F049         	movff	i2___fltol@f1,?i2___fltol
 33205  016B5E  C04A  F04A         	movff	i2___fltol@f1+1,?i2___fltol+1
 33206  016B62  C04B  F04B         	movff	i2___fltol@f1+2,?i2___fltol+2
 33207  016B66  C04C  F04C         	movff	i2___fltol@f1+3,?i2___fltol+3
 33208  016B6A  0012               	return	
 33209  016B6C                     __end_ofi2___fltol:
 33210                           	opt stack 0
 33211                           tosu	equ	0xFFF
 33212                           tosh	equ	0xFFE
 33213                           tosl	equ	0xFFD
 33214                           pclatu	equ	0xFFB
 33215                           pclath	equ	0xFFA
 33216                           tblptru	equ	0xFF8
 33217                           tblptrh	equ	0xFF7
 33218                           tblptrl	equ	0xFF6
 33219                           tablat	equ	0xFF5
 33220                           prodh	equ	0xFF4
 33221                           prodl	equ	0xFF3
 33222                           intcon	equ	0xFF2
 33223                           indf0	equ	0xFEF
 33224                           postinc0	equ	0xFEE
 33225                           fsr0h	equ	0xFEA
 33226                           fsr0l	equ	0xFE9
 33227                           wreg	equ	0xFE8
 33228                           indf1	equ	0xFE7
 33229                           postdec1	equ	0xFE5
 33230                           plusw1	equ	0xFE3
 33231                           fsr1h	equ	0xFE2
 33232                           fsr1l	equ	0xFE1
 33233                           bsr	equ	0xFE0
 33234                           indf2	equ	0xFDF
 33235                           postinc2	equ	0xFDE
 33236                           postdec2	equ	0xFDD
 33237                           plusw2	equ	0xFDB
 33238                           fsr2h	equ	0xFDA
 33239                           fsr2l	equ	0xFD9
 33240                           status	equ	0xFD8
 33241                           
 33242 ;; *************** function i2___flge *****************
 33243 ;; Defined at:
 33244 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 33245 ;; Parameters:    Size  Location     Type
 33246 ;;  ff1             4   51[COMRAM] long 
 33247 ;;  ff2             4   55[COMRAM] long 
 33248 ;; Auto vars:     Size  Location     Type
 33249 ;;		None
 33250 ;; Return value:  Size  Location     Type
 33251 ;;		None               void
 33252 ;; Registers used:
 33253 ;;		wreg, status,2, status,0
 33254 ;; Tracked objects:
 33255 ;;		On entry : 0/0
 33256 ;;		On exit  : 0/0
 33257 ;;		Unchanged: 0/0
 33258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33259 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33262 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33263 ;;Total ram usage:       12 bytes
 33264 ;; Hardware stack levels used:    1
 33265 ;; This function calls:
 33266 ;;		Nothing
 33267 ;; This function is called by:
 33268 ;;		_ADCPostProcessingCallback
 33269 ;;		_asin
 33270 ;;		_atan
 33271 ;;		_sin
 33272 ;;		_floor
 33273 ;;		i2_printf
 33274 ;; This function uses a non-reentrant model
 33275 ;;
 33276                           
 33277                           	psect	text116
 33278  016564                     __ptext116:
 33279                           	opt stack 0
 33280  016564                     i2___flge:
 33281                           	opt stack 16
 33282                           
 33283                           ;incstack = 0
 33284  016564  0E00               	movlw	0
 33285  016566  1434               	andwf	i2___flge@ff1,w,c
 33286  016568  6E3C               	movwf	??i2___flge& (0+255),c
 33287  01656A  0E00               	movlw	0
 33288  01656C  1435               	andwf	i2___flge@ff1+1,w,c
 33289  01656E  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 33290  016570  0E80               	movlw	128
 33291  016572  1436               	andwf	i2___flge@ff1+2,w,c
 33292  016574  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 33293  016576  0E7F               	movlw	127
 33294  016578  1437               	andwf	i2___flge@ff1+3,w,c
 33295  01657A  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 33296  01657C  503C               	movf	??i2___flge,w,c
 33297  01657E  103D               	iorwf	??i2___flge+1,w,c
 33298  016580  103E               	iorwf	??i2___flge+2,w,c
 33299  016582  103F               	iorwf	??i2___flge+3,w,c
 33300  016584  A4D8               	btfss	status,2,c
 33301  016586  D008               	goto	i2l1727
 33302  016588  0E00               	movlw	0
 33303  01658A  6E34               	movwf	i2___flge@ff1,c
 33304  01658C  0E00               	movlw	0
 33305  01658E  6E35               	movwf	i2___flge@ff1+1,c
 33306  016590  0E00               	movlw	0
 33307  016592  6E36               	movwf	i2___flge@ff1+2,c
 33308  016594  0E00               	movlw	0
 33309  016596  6E37               	movwf	i2___flge@ff1+3,c
 33310  016598                     i2l1727:
 33311  016598  0E00               	movlw	0
 33312  01659A  1438               	andwf	i2___flge@ff2,w,c
 33313  01659C  6E3C               	movwf	??i2___flge& (0+255),c
 33314  01659E  0E00               	movlw	0
 33315  0165A0  1439               	andwf	i2___flge@ff2+1,w,c
 33316  0165A2  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 33317  0165A4  0E80               	movlw	128
 33318  0165A6  143A               	andwf	i2___flge@ff2+2,w,c
 33319  0165A8  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 33320  0165AA  0E7F               	movlw	127
 33321  0165AC  143B               	andwf	i2___flge@ff2+3,w,c
 33322  0165AE  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 33323  0165B0  503C               	movf	??i2___flge,w,c
 33324  0165B2  103D               	iorwf	??i2___flge+1,w,c
 33325  0165B4  103E               	iorwf	??i2___flge+2,w,c
 33326  0165B6  103F               	iorwf	??i2___flge+3,w,c
 33327  0165B8  A4D8               	btfss	status,2,c
 33328  0165BA  D008               	goto	i2l1728
 33329  0165BC  0E00               	movlw	0
 33330  0165BE  6E38               	movwf	i2___flge@ff2,c
 33331  0165C0  0E00               	movlw	0
 33332  0165C2  6E39               	movwf	i2___flge@ff2+1,c
 33333  0165C4  0E00               	movlw	0
 33334  0165C6  6E3A               	movwf	i2___flge@ff2+2,c
 33335  0165C8  0E00               	movlw	0
 33336  0165CA  6E3B               	movwf	i2___flge@ff2+3,c
 33337  0165CC                     i2l1728:
 33338  0165CC  AE37               	btfss	i2___flge@ff1+3,7,c
 33339  0165CE  D01D               	goto	i2l1729
 33340  0165D0  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 33341  0165D4  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 33342  0165D8  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 33343  0165DC  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 33344  0165E0  1E3C               	comf	??i2___flge,f,c
 33345  0165E2  1E3D               	comf	??i2___flge+1,f,c
 33346  0165E4  1E3E               	comf	??i2___flge+2,f,c
 33347  0165E6  1E3F               	comf	??i2___flge+3,f,c
 33348  0165E8  2A3C               	incf	??i2___flge,f,c
 33349  0165EA  0E00               	movlw	0
 33350  0165EC  223D               	addwfc	??i2___flge+1,f,c
 33351  0165EE  223E               	addwfc	??i2___flge+2,f,c
 33352  0165F0  223F               	addwfc	??i2___flge+3,f,c
 33353  0165F2  0E00               	movlw	0
 33354  0165F4  243C               	addwf	??i2___flge,w,c
 33355  0165F6  6E34               	movwf	i2___flge@ff1,c
 33356  0165F8  0E00               	movlw	0
 33357  0165FA  203D               	addwfc	??i2___flge+1,w,c
 33358  0165FC  6E35               	movwf	i2___flge@ff1+1,c
 33359  0165FE  0E00               	movlw	0
 33360  016600  203E               	addwfc	??i2___flge+2,w,c
 33361  016602  6E36               	movwf	i2___flge@ff1+2,c
 33362  016604  0E80               	movlw	128
 33363  016606  203F               	addwfc	??i2___flge+3,w,c
 33364  016608  6E37               	movwf	i2___flge@ff1+3,c
 33365  01660A                     i2l1729:
 33366  01660A  AE3B               	btfss	i2___flge@ff2+3,7,c
 33367  01660C  D01D               	goto	i2l1730
 33368  01660E  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 33369  016612  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 33370  016616  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 33371  01661A  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 33372  01661E  1E3C               	comf	??i2___flge,f,c
 33373  016620  1E3D               	comf	??i2___flge+1,f,c
 33374  016622  1E3E               	comf	??i2___flge+2,f,c
 33375  016624  1E3F               	comf	??i2___flge+3,f,c
 33376  016626  2A3C               	incf	??i2___flge,f,c
 33377  016628  0E00               	movlw	0
 33378  01662A  223D               	addwfc	??i2___flge+1,f,c
 33379  01662C  223E               	addwfc	??i2___flge+2,f,c
 33380  01662E  223F               	addwfc	??i2___flge+3,f,c
 33381  016630  0E00               	movlw	0
 33382  016632  243C               	addwf	??i2___flge,w,c
 33383  016634  6E38               	movwf	i2___flge@ff2,c
 33384  016636  0E00               	movlw	0
 33385  016638  203D               	addwfc	??i2___flge+1,w,c
 33386  01663A  6E39               	movwf	i2___flge@ff2+1,c
 33387  01663C  0E00               	movlw	0
 33388  01663E  203E               	addwfc	??i2___flge+2,w,c
 33389  016640  6E3A               	movwf	i2___flge@ff2+2,c
 33390  016642  0E80               	movlw	128
 33391  016644  203F               	addwfc	??i2___flge+3,w,c
 33392  016646  6E3B               	movwf	i2___flge@ff2+3,c
 33393  016648                     i2l1730:
 33394  016648  0E00               	movlw	0
 33395  01664A  1A34               	xorwf	i2___flge@ff1,f,c
 33396  01664C  0E00               	movlw	0
 33397  01664E  1A35               	xorwf	i2___flge@ff1+1,f,c
 33398  016650  0E00               	movlw	0
 33399  016652  1A36               	xorwf	i2___flge@ff1+2,f,c
 33400  016654  0E80               	movlw	128
 33401  016656  1A37               	xorwf	i2___flge@ff1+3,f,c
 33402  016658  0E00               	movlw	0
 33403  01665A  1A38               	xorwf	i2___flge@ff2,f,c
 33404  01665C  0E00               	movlw	0
 33405  01665E  1A39               	xorwf	i2___flge@ff2+1,f,c
 33406  016660  0E00               	movlw	0
 33407  016662  1A3A               	xorwf	i2___flge@ff2+2,f,c
 33408  016664  0E80               	movlw	128
 33409  016666  1A3B               	xorwf	i2___flge@ff2+3,f,c
 33410  016668  5038               	movf	i2___flge@ff2,w,c
 33411  01666A  5C34               	subwf	i2___flge@ff1,w,c
 33412  01666C  5039               	movf	i2___flge@ff2+1,w,c
 33413  01666E  5835               	subwfb	i2___flge@ff1+1,w,c
 33414  016670  503A               	movf	i2___flge@ff2+2,w,c
 33415  016672  5836               	subwfb	i2___flge@ff1+2,w,c
 33416  016674  503B               	movf	i2___flge@ff2+3,w,c
 33417  016676  5837               	subwfb	i2___flge@ff1+3,w,c
 33418  016678  B0D8               	btfsc	status,0,c
 33419  01667A  D002               	goto	i2l10442
 33420  01667C  90D8               	bcf	status,0,c
 33421  01667E  0012               	return	
 33422  016680                     i2l10442:
 33423  016680  80D8               	bsf	status,0,c
 33424  016682  0012               	return	
 33425  016684                     __end_ofi2___flge:
 33426                           	opt stack 0
 33427                           tosu	equ	0xFFF
 33428                           tosh	equ	0xFFE
 33429                           tosl	equ	0xFFD
 33430                           pclatu	equ	0xFFB
 33431                           pclath	equ	0xFFA
 33432                           tblptru	equ	0xFF8
 33433                           tblptrh	equ	0xFF7
 33434                           tblptrl	equ	0xFF6
 33435                           tablat	equ	0xFF5
 33436                           prodh	equ	0xFF4
 33437                           prodl	equ	0xFF3
 33438                           intcon	equ	0xFF2
 33439                           indf0	equ	0xFEF
 33440                           postinc0	equ	0xFEE
 33441                           fsr0h	equ	0xFEA
 33442                           fsr0l	equ	0xFE9
 33443                           wreg	equ	0xFE8
 33444                           indf1	equ	0xFE7
 33445                           postdec1	equ	0xFE5
 33446                           plusw1	equ	0xFE3
 33447                           fsr1h	equ	0xFE2
 33448                           fsr1l	equ	0xFE1
 33449                           bsr	equ	0xFE0
 33450                           indf2	equ	0xFDF
 33451                           postinc2	equ	0xFDE
 33452                           postdec2	equ	0xFDD
 33453                           plusw2	equ	0xFDB
 33454                           fsr2h	equ	0xFDA
 33455                           fsr2l	equ	0xFD9
 33456                           status	equ	0xFD8
 33457                           
 33458 ;; *************** function _frexp *****************
 33459 ;; Defined at:
 33460 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 33461 ;; Parameters:    Size  Location     Type
 33462 ;;  value           4    0[COMRAM] long 
 33463 ;;  eptr            2    4[COMRAM] PTR int 
 33464 ;;		 -> floor@expon(2), 
 33465 ;; Auto vars:     Size  Location     Type
 33466 ;;		None
 33467 ;; Return value:  Size  Location     Type
 33468 ;;                  4    0[COMRAM] PTR int 
 33469 ;; Registers used:
 33470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33471 ;; Tracked objects:
 33472 ;;		On entry : 0/0
 33473 ;;		On exit  : 0/0
 33474 ;;		Unchanged: 0/0
 33475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33476 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33479 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33480 ;;Total ram usage:        8 bytes
 33481 ;; Hardware stack levels used:    1
 33482 ;; This function calls:
 33483 ;;		Nothing
 33484 ;; This function is called by:
 33485 ;;		_floor
 33486 ;; This function uses a non-reentrant model
 33487 ;;
 33488                           
 33489                           	psect	text117
 33490  0173CA                     __ptext117:
 33491                           	opt stack 0
 33492  0173CA                     _frexp:
 33493                           	opt stack 13
 33494                           
 33495                           ;incstack = 0
 33496  0173CA  5001               	movf	frexp@value,w,c
 33497  0173CC  1002               	iorwf	frexp@value+1,w,c
 33498  0173CE  1003               	iorwf	frexp@value+2,w,c
 33499  0173D0  1004               	iorwf	frexp@value+3,w,c
 33500  0173D2  A4D8               	btfss	status,2,c
 33501  0173D4  D009               	goto	i2l2220
 33502  0173D6  C005  FFD9         	movff	frexp@eptr,fsr2l
 33503  0173DA  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 33504  0173DE  0E00               	movlw	0
 33505  0173E0  6EDE               	movwf	postinc2,c
 33506  0173E2  0E00               	movlw	0
 33507  0173E4  6EDD               	movwf	postdec2,c
 33508                           
 33509                           ;	Return value of _frexp is never used
 33510  0173E6  0012               	return	
 33511  0173E8                     i2l2220:
 33512  0173E8  5004               	movf	frexp@value+3,w,c
 33513  0173EA  0B7F               	andlw	127
 33514  0173EC  6E07               	movwf	??_frexp& (0+255),c
 33515  0173EE  6A08               	clrf	(??_frexp+1)& (0+255),c
 33516  0173F0  90D8               	bcf	status,0,c
 33517  0173F2  3607               	rlcf	??_frexp,f,c
 33518  0173F4  3608               	rlcf	??_frexp+1,f,c
 33519  0173F6  C005  FFD9         	movff	frexp@eptr,fsr2l
 33520  0173FA  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 33521  0173FE  C007  FFDE         	movff	??_frexp,postinc2
 33522  017402  C008  FFDD         	movff	??_frexp+1,postdec2
 33523  017406  AE03               	btfss	frexp@value+2,7,c
 33524  017408  D003               	goto	i2u828_40
 33525  01740A  6A07               	clrf	??_frexp& (0+255),c
 33526  01740C  2A07               	incf	??_frexp& (0+255),f,c
 33527  01740E  D001               	goto	i2u828_48
 33528  017410                     i2u828_40:
 33529  017410  6A07               	clrf	??_frexp& (0+255),c
 33530  017412                     i2u828_48:
 33531  017412  5007               	movf	??_frexp,w,c
 33532  017414  C005  FFD9         	movff	frexp@eptr,fsr2l
 33533  017418  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 33534  01741C  12DE               	iorwf	postinc2,f,c
 33535  01741E  0E00               	movlw	0
 33536  017420  12DD               	iorwf	postdec2,f,c
 33537  017422  C005  FFD9         	movff	frexp@eptr,fsr2l
 33538  017426  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 33539  01742A  0E82               	movlw	130
 33540  01742C  26DE               	addwf	postinc2,f,c
 33541  01742E  0EFF               	movlw	255
 33542  017430  22DD               	addwfc	postdec2,f,c
 33543  017432  8004               	bsf	frexp@value+3,0,c
 33544  017434  8204               	bsf	frexp@value+3,1,c
 33545  017436  8404               	bsf	frexp@value+3,2,c
 33546  017438  8604               	bsf	frexp@value+3,3,c
 33547  01743A  8804               	bsf	frexp@value+3,4,c
 33548  01743C  8A04               	bsf	frexp@value+3,5,c
 33549  01743E  9C04               	bcf	frexp@value+3,6,c
 33550  017440  9E03               	bcf	frexp@value+2,7,c
 33551  017442  0012               	return	
 33552  017444                     __end_of_frexp:
 33553                           	opt stack 0
 33554                           tosu	equ	0xFFF
 33555                           tosh	equ	0xFFE
 33556                           tosl	equ	0xFFD
 33557                           pclatu	equ	0xFFB
 33558                           pclath	equ	0xFFA
 33559                           tblptru	equ	0xFF8
 33560                           tblptrh	equ	0xFF7
 33561                           tblptrl	equ	0xFF6
 33562                           tablat	equ	0xFF5
 33563                           prodh	equ	0xFF4
 33564                           prodl	equ	0xFF3
 33565                           intcon	equ	0xFF2
 33566                           indf0	equ	0xFEF
 33567                           postinc0	equ	0xFEE
 33568                           fsr0h	equ	0xFEA
 33569                           fsr0l	equ	0xFE9
 33570                           wreg	equ	0xFE8
 33571                           indf1	equ	0xFE7
 33572                           postdec1	equ	0xFE5
 33573                           plusw1	equ	0xFE3
 33574                           fsr1h	equ	0xFE2
 33575                           fsr1l	equ	0xFE1
 33576                           bsr	equ	0xFE0
 33577                           indf2	equ	0xFDF
 33578                           postinc2	equ	0xFDE
 33579                           postdec2	equ	0xFDD
 33580                           plusw2	equ	0xFDB
 33581                           fsr2h	equ	0xFDA
 33582                           fsr2l	equ	0xFD9
 33583                           status	equ	0xFD8
 33584                           
 33585 ;; *************** function _eval_poly *****************
 33586 ;; Defined at:
 33587 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 33588 ;; Parameters:    Size  Location     Type
 33589 ;;  x               4   12[BANK0 ] PTR int 
 33590 ;;  d               2   16[BANK0 ] PTR const 
 33591 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 33592 ;;  n               2   18[BANK0 ] int 
 33593 ;; Auto vars:     Size  Location     Type
 33594 ;;  res             4   24[BANK0 ] int 
 33595 ;; Return value:  Size  Location     Type
 33596 ;;                  4   12[BANK0 ] int 
 33597 ;; Registers used:
 33598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33599 ;; Tracked objects:
 33600 ;;		On entry : 0/0
 33601 ;;		On exit  : 0/0
 33602 ;;		Unchanged: 0/0
 33603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33604 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33606 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33607 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33608 ;;Total ram usage:       16 bytes
 33609 ;; Hardware stack levels used:    1
 33610 ;; Hardware stack levels required when called:    1
 33611 ;; This function calls:
 33612 ;;		i2___fladd
 33613 ;;		i2___flmul
 33614 ;; This function is called by:
 33615 ;;		_atan
 33616 ;;		_sin
 33617 ;; This function uses a non-reentrant model
 33618 ;;
 33619                           
 33620                           	psect	text118
 33621  0168B2                     __ptext118:
 33622                           	opt stack 0
 33623  0168B2                     _eval_poly:
 33624                           	opt stack 13
 33625                           
 33626                           ;incstack = 0
 33627  0168B2  C072  F074         	movff	eval_poly@n,??_eval_poly
 33628  0168B6  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 33629  0168BA  0100               	movlb	0	; () banked
 33630  0168BC  90D8               	bcf	status,0,c
 33631  0168BE  3774               	rlcf	??_eval_poly& (0+255),f,b
 33632  0168C0  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 33633  0168C2  90D8               	bcf	status,0,c
 33634  0168C4  3774               	rlcf	??_eval_poly& (0+255),f,b
 33635  0168C6  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 33636  0168C8  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 33637  0168CC  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 33638  0168D0  5174               	movf	??_eval_poly& (0+255),w,b
 33639  0168D2  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 33640  0168D4  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 33641  0168D6  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 33642  0168D8  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 33643  0168DC  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 33644  0168E0                     	if	0	;tblptru may be non-zero
 33645  0168E0                     	endif
 33646  0168E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33647  0168E0  0E00               	movlw	low (__mediumconst shr (0+16))
 33648  0168E2  6EF8               	movwf	tblptru,c
 33649  0168E4                     	endif
 33650  0168E4  0009               	tblrd		*+
 33651  0168E6  CFF5 F078          	movff	tablat,eval_poly@res
 33652  0168EA  0009               	tblrd		*+
 33653  0168EC  CFF5 F079          	movff	tablat,eval_poly@res+1
 33654  0168F0  0009               	tblrd		*+
 33655  0168F2  CFF5 F07A          	movff	tablat,eval_poly@res+2
 33656  0168F6  000A               	tblrd		*-
 33657  0168F8  CFF5 F07B          	movff	tablat,eval_poly@res+3
 33658  0168FC  D04C               	goto	i2l1700
 33659  0168FE                     
 33660                           ; BSR set to: 0
 33661                           
 33662                           ; BSR set to: 0
 33663  0168FE  C078  F034         	movff	eval_poly@res,i2___flmul@a
 33664  016902  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 33665  016906  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 33666  01690A  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 33667  01690E  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 33668  016912  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 33669  016916  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 33670  01691A  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 33671  01691E  EC7B  F09D         	call	i2___flmul	;wreg free
 33672  016922  C030  F056         	movff	?i2___flmul,i2___fladd@b
 33673  016926  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 33674  01692A  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 33675  01692E  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 33676  016932  0100               	movlb	0	; () banked
 33677  016934  0772               	decf	eval_poly@n& (0+255),f,b
 33678  016936  A0D8               	btfss	status,0,c
 33679  016938  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 33680  01693A  C072  F074         	movff	eval_poly@n,??_eval_poly
 33681  01693E  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 33682  016942  90D8               	bcf	status,0,c
 33683  016944  3774               	rlcf	??_eval_poly& (0+255),f,b
 33684  016946  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 33685  016948  90D8               	bcf	status,0,c
 33686  01694A  3774               	rlcf	??_eval_poly& (0+255),f,b
 33687  01694C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 33688  01694E  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 33689  016952  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 33690  016956  5174               	movf	??_eval_poly& (0+255),w,b
 33691  016958  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 33692  01695A  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 33693  01695C  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 33694  01695E  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 33695  016962  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 33696  016966                     	if	0	;tblptru may be non-zero
 33697  016966                     	endif
 33698  016966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33699  016966  0E00               	movlw	low (__mediumconst shr (0+16))
 33700  016968  6EF8               	movwf	tblptru,c
 33701  01696A                     	endif
 33702  01696A  0009               	tblrd		*+
 33703  01696C  CFF5 F05A          	movff	tablat,i2___fladd@a
 33704  016970  0009               	tblrd		*+
 33705  016972  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 33706  016976  0009               	tblrd		*+
 33707  016978  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 33708  01697C  000A               	tblrd		*-
 33709  01697E  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 33710  016982  ECC2  F0A0         	call	i2___fladd	;wreg free
 33711  016986  C056  F078         	movff	?i2___fladd,eval_poly@res
 33712  01698A  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 33713  01698E  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 33714  016992  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 33715  016996                     i2l1700:
 33716  016996  0100               	movlb	0	; () banked
 33717  016998  5172               	movf	eval_poly@n& (0+255),w,b
 33718  01699A  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 33719  01699C  A4D8               	btfss	status,2,c
 33720  01699E  D7AF               	goto	i2l1701
 33721                           
 33722                           ; BSR set to: 0
 33723  0169A0  C078  F06C         	movff	eval_poly@res,?_eval_poly
 33724  0169A4  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 33725  0169A8  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 33726  0169AC  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 33727                           
 33728                           ; BSR set to: 0
 33729  0169B0  0012               	return		;funcret
 33730  0169B2                     __end_of_eval_poly:
 33731                           	opt stack 0
 33732                           tosu	equ	0xFFF
 33733                           tosh	equ	0xFFE
 33734                           tosl	equ	0xFFD
 33735                           pclatu	equ	0xFFB
 33736                           pclath	equ	0xFFA
 33737                           tblptru	equ	0xFF8
 33738                           tblptrh	equ	0xFF7
 33739                           tblptrl	equ	0xFF6
 33740                           tablat	equ	0xFF5
 33741                           prodh	equ	0xFF4
 33742                           prodl	equ	0xFF3
 33743                           intcon	equ	0xFF2
 33744                           indf0	equ	0xFEF
 33745                           postinc0	equ	0xFEE
 33746                           fsr0h	equ	0xFEA
 33747                           fsr0l	equ	0xFE9
 33748                           wreg	equ	0xFE8
 33749                           indf1	equ	0xFE7
 33750                           postdec1	equ	0xFE5
 33751                           plusw1	equ	0xFE3
 33752                           fsr1h	equ	0xFE2
 33753                           fsr1l	equ	0xFE1
 33754                           bsr	equ	0xFE0
 33755                           indf2	equ	0xFDF
 33756                           postinc2	equ	0xFDE
 33757                           postdec2	equ	0xFDD
 33758                           plusw2	equ	0xFDB
 33759                           fsr2h	equ	0xFDA
 33760                           fsr2l	equ	0xFD9
 33761                           status	equ	0xFD8
 33762                           
 33763 ;; *************** function i2___flmul *****************
 33764 ;; Defined at:
 33765 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 33766 ;; Parameters:    Size  Location     Type
 33767 ;;  b               4   47[COMRAM] int 
 33768 ;;  a               4   51[COMRAM] int 
 33769 ;; Auto vars:     Size  Location     Type
 33770 ;;  __flmul         4   66[COMRAM] struct .
 33771 ;;  __flmul         4   61[COMRAM] unsigned long 
 33772 ;;  __flmul         2   70[COMRAM] struct .
 33773 ;;  __flmul         1   65[COMRAM] unsigned char 
 33774 ;;  __flmul         1   60[COMRAM] unsigned char 
 33775 ;;  __flmul         1   59[COMRAM] unsigned char 
 33776 ;; Return value:  Size  Location     Type
 33777 ;;                  4   47[COMRAM] unsigned char 
 33778 ;; Registers used:
 33779 ;;		wreg, status,2, status,0, prodl, prodh
 33780 ;; Tracked objects:
 33781 ;;		On entry : 0/0
 33782 ;;		On exit  : 0/0
 33783 ;;		Unchanged: 0/0
 33784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33786 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33788 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33789 ;;Total ram usage:       25 bytes
 33790 ;; Hardware stack levels used:    1
 33791 ;; This function calls:
 33792 ;;		Nothing
 33793 ;; This function is called by:
 33794 ;;		_peakToRMS
 33795 ;;		_ADCPostProcessingCallback
 33796 ;;		_asin
 33797 ;;		_atan
 33798 ;;		_eval_poly
 33799 ;;		_sin
 33800 ;;		i2_fround
 33801 ;;		i2_scale
 33802 ;;		i2_printf
 33803 ;; This function uses a non-reentrant model
 33804 ;;
 33805                           
 33806                           	psect	text119
 33807  013AF6                     __ptext119:
 33808                           	opt stack 0
 33809  013AF6                     i2___flmul:
 33810                           	opt stack 15
 33811                           
 33812                           ; BSR set to: 0
 33813                           ;incstack = 0
 33814  013AF6  5033               	movf	i2___flmul@b+3,w,c
 33815  013AF8  0B80               	andlw	128
 33816  013AFA  6E3C               	movwf	i2___flmul@sign,c
 33817  013AFC  5033               	movf	i2___flmul@b+3,w,c
 33818  013AFE  2433               	addwf	i2___flmul@b+3,w,c
 33819  013B00  6E42               	movwf	i2___flmul@bexp,c
 33820  013B02  BE32               	btfsc	i2___flmul@b+2,7,c
 33821  013B04  8042               	bsf	i2___flmul@bexp,0,c
 33822  013B06  5042               	movf	i2___flmul@bexp,w,c
 33823  013B08  B4D8               	btfsc	status,2,c
 33824  013B0A  D00D               	goto	i2l2088
 33825  013B0C  2842               	incf	i2___flmul@bexp,w,c
 33826  013B0E  A4D8               	btfss	status,2,c
 33827  013B10  D008               	goto	i2l2089
 33828  013B12  0E00               	movlw	0
 33829  013B14  6E30               	movwf	i2___flmul@b,c
 33830  013B16  0E00               	movlw	0
 33831  013B18  6E31               	movwf	i2___flmul@b+1,c
 33832  013B1A  0E00               	movlw	0
 33833  013B1C  6E32               	movwf	i2___flmul@b+2,c
 33834  013B1E  0E00               	movlw	0
 33835  013B20  6E33               	movwf	i2___flmul@b+3,c
 33836  013B22                     i2l2089:
 33837  013B22  8E32               	bsf	i2___flmul@b+2,7,c
 33838  013B24  D008               	goto	i2l2090
 33839  013B26                     i2l2088:
 33840  013B26  0E00               	movlw	0
 33841  013B28  6E30               	movwf	i2___flmul@b,c
 33842  013B2A  0E00               	movlw	0
 33843  013B2C  6E31               	movwf	i2___flmul@b+1,c
 33844  013B2E  0E00               	movlw	0
 33845  013B30  6E32               	movwf	i2___flmul@b+2,c
 33846  013B32  0E00               	movlw	0
 33847  013B34  6E33               	movwf	i2___flmul@b+3,c
 33848  013B36                     i2l2090:
 33849  013B36  5037               	movf	i2___flmul@a+3,w,c
 33850  013B38  0B80               	andlw	128
 33851  013B3A  1A3C               	xorwf	i2___flmul@sign,f,c
 33852  013B3C  5037               	movf	i2___flmul@a+3,w,c
 33853  013B3E  2437               	addwf	i2___flmul@a+3,w,c
 33854  013B40  6E3D               	movwf	i2___flmul@aexp,c
 33855  013B42  BE36               	btfsc	i2___flmul@a+2,7,c
 33856  013B44  803D               	bsf	i2___flmul@aexp,0,c
 33857  013B46  503D               	movf	i2___flmul@aexp,w,c
 33858  013B48  B4D8               	btfsc	status,2,c
 33859  013B4A  D00D               	goto	i2l2092
 33860  013B4C  283D               	incf	i2___flmul@aexp,w,c
 33861  013B4E  A4D8               	btfss	status,2,c
 33862  013B50  D008               	goto	i2l2093
 33863  013B52  0E00               	movlw	0
 33864  013B54  6E34               	movwf	i2___flmul@a,c
 33865  013B56  0E00               	movlw	0
 33866  013B58  6E35               	movwf	i2___flmul@a+1,c
 33867  013B5A  0E00               	movlw	0
 33868  013B5C  6E36               	movwf	i2___flmul@a+2,c
 33869  013B5E  0E00               	movlw	0
 33870  013B60  6E37               	movwf	i2___flmul@a+3,c
 33871  013B62                     i2l2093:
 33872  013B62  8E36               	bsf	i2___flmul@a+2,7,c
 33873  013B64  D008               	goto	i2l2094
 33874  013B66                     i2l2092:
 33875  013B66  0E00               	movlw	0
 33876  013B68  6E34               	movwf	i2___flmul@a,c
 33877  013B6A  0E00               	movlw	0
 33878  013B6C  6E35               	movwf	i2___flmul@a+1,c
 33879  013B6E  0E00               	movlw	0
 33880  013B70  6E36               	movwf	i2___flmul@a+2,c
 33881  013B72  0E00               	movlw	0
 33882  013B74  6E37               	movwf	i2___flmul@a+3,c
 33883  013B76                     i2l2094:
 33884  013B76  503D               	movf	i2___flmul@aexp,w,c
 33885  013B78  B4D8               	btfsc	status,2,c
 33886  013B7A  D003               	goto	i2u1223_40
 33887  013B7C  5042               	movf	i2___flmul@bexp,w,c
 33888  013B7E  A4D8               	btfss	status,2,c
 33889  013B80  D009               	goto	i2l2095
 33890  013B82                     i2u1223_40:
 33891  013B82  0E00               	movlw	0
 33892  013B84  6E30               	movwf	?i2___flmul,c
 33893  013B86  0E00               	movlw	0
 33894  013B88  6E31               	movwf	?i2___flmul+1,c
 33895  013B8A  0E00               	movlw	0
 33896  013B8C  6E32               	movwf	?i2___flmul+2,c
 33897  013B8E  0E00               	movlw	0
 33898  013B90  6E33               	movwf	?i2___flmul+3,c
 33899  013B92  0012               	return	
 33900  013B94                     i2l2095:
 33901  013B94  5036               	movf	i2___flmul@a+2,w,c
 33902  013B96  0230               	mulwf	i2___flmul@b,c
 33903  013B98  CFF3 F047          	movff	prodl,i2___flmul@temp
 33904  013B9C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33905  013BA0  5047               	movf	i2___flmul@temp,w,c
 33906  013BA2  6E3E               	movwf	i2___flmul@grs,c
 33907  013BA4  6A3F               	clrf	i2___flmul@grs+1,c
 33908  013BA6  6A40               	clrf	i2___flmul@grs+2,c
 33909  013BA8  6A41               	clrf	i2___flmul@grs+3,c
 33910  013BAA  5048               	movf	i2___flmul@temp+1,w,c
 33911  013BAC  6E43               	movwf	i2___flmul@prod,c
 33912  013BAE  6A44               	clrf	i2___flmul@prod+1,c
 33913  013BB0  6A45               	clrf	i2___flmul@prod+2,c
 33914  013BB2  6A46               	clrf	i2___flmul@prod+3,c
 33915  013BB4  5035               	movf	i2___flmul@a+1,w,c
 33916  013BB6  0231               	mulwf	i2___flmul@b+1,c
 33917  013BB8  CFF3 F047          	movff	prodl,i2___flmul@temp
 33918  013BBC  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33919  013BC0  5047               	movf	i2___flmul@temp,w,c
 33920  013BC2  263E               	addwf	i2___flmul@grs,f,c
 33921  013BC4  0E00               	movlw	0
 33922  013BC6  223F               	addwfc	i2___flmul@grs+1,f,c
 33923  013BC8  2240               	addwfc	i2___flmul@grs+2,f,c
 33924  013BCA  2241               	addwfc	i2___flmul@grs+3,f,c
 33925  013BCC  5048               	movf	i2___flmul@temp+1,w,c
 33926  013BCE  2643               	addwf	i2___flmul@prod,f,c
 33927  013BD0  0E00               	movlw	0
 33928  013BD2  2244               	addwfc	i2___flmul@prod+1,f,c
 33929  013BD4  2245               	addwfc	i2___flmul@prod+2,f,c
 33930  013BD6  2246               	addwfc	i2___flmul@prod+3,f,c
 33931  013BD8  5034               	movf	i2___flmul@a,w,c
 33932  013BDA  0232               	mulwf	i2___flmul@b+2,c
 33933  013BDC  CFF3 F047          	movff	prodl,i2___flmul@temp
 33934  013BE0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33935  013BE4  5047               	movf	i2___flmul@temp,w,c
 33936  013BE6  263E               	addwf	i2___flmul@grs,f,c
 33937  013BE8  0E00               	movlw	0
 33938  013BEA  223F               	addwfc	i2___flmul@grs+1,f,c
 33939  013BEC  2240               	addwfc	i2___flmul@grs+2,f,c
 33940  013BEE  2241               	addwfc	i2___flmul@grs+3,f,c
 33941  013BF0  5048               	movf	i2___flmul@temp+1,w,c
 33942  013BF2  2643               	addwf	i2___flmul@prod,f,c
 33943  013BF4  0E00               	movlw	0
 33944  013BF6  2244               	addwfc	i2___flmul@prod+1,f,c
 33945  013BF8  2245               	addwfc	i2___flmul@prod+2,f,c
 33946  013BFA  2246               	addwfc	i2___flmul@prod+3,f,c
 33947  013BFC  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 33948  013C00  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 33949  013C04  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 33950  013C08  6A3E               	clrf	i2___flmul@grs,c
 33951  013C0A  5034               	movf	i2___flmul@a,w,c
 33952  013C0C  0231               	mulwf	i2___flmul@b+1,c
 33953  013C0E  CFF3 F047          	movff	prodl,i2___flmul@temp
 33954  013C12  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33955  013C16  5047               	movf	i2___flmul@temp,w,c
 33956  013C18  263E               	addwf	i2___flmul@grs,f,c
 33957  013C1A  5048               	movf	i2___flmul@temp+1,w,c
 33958  013C1C  223F               	addwfc	i2___flmul@grs+1,f,c
 33959  013C1E  0E00               	movlw	0
 33960  013C20  2240               	addwfc	i2___flmul@grs+2,f,c
 33961  013C22  0E00               	movlw	0
 33962  013C24  2241               	addwfc	i2___flmul@grs+3,f,c
 33963  013C26  5035               	movf	i2___flmul@a+1,w,c
 33964  013C28  0230               	mulwf	i2___flmul@b,c
 33965  013C2A  CFF3 F047          	movff	prodl,i2___flmul@temp
 33966  013C2E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33967  013C32  5047               	movf	i2___flmul@temp,w,c
 33968  013C34  263E               	addwf	i2___flmul@grs,f,c
 33969  013C36  5048               	movf	i2___flmul@temp+1,w,c
 33970  013C38  223F               	addwfc	i2___flmul@grs+1,f,c
 33971  013C3A  0E00               	movlw	0
 33972  013C3C  2240               	addwfc	i2___flmul@grs+2,f,c
 33973  013C3E  0E00               	movlw	0
 33974  013C40  2241               	addwfc	i2___flmul@grs+3,f,c
 33975  013C42  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 33976  013C46  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 33977  013C4A  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 33978  013C4E  6A3E               	clrf	i2___flmul@grs,c
 33979  013C50  5034               	movf	i2___flmul@a,w,c
 33980  013C52  0230               	mulwf	i2___flmul@b,c
 33981  013C54  CFF3 F047          	movff	prodl,i2___flmul@temp
 33982  013C58  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33983  013C5C  5047               	movf	i2___flmul@temp,w,c
 33984  013C5E  263E               	addwf	i2___flmul@grs,f,c
 33985  013C60  5048               	movf	i2___flmul@temp+1,w,c
 33986  013C62  223F               	addwfc	i2___flmul@grs+1,f,c
 33987  013C64  0E00               	movlw	0
 33988  013C66  2240               	addwfc	i2___flmul@grs+2,f,c
 33989  013C68  0E00               	movlw	0
 33990  013C6A  2241               	addwfc	i2___flmul@grs+3,f,c
 33991  013C6C  5036               	movf	i2___flmul@a+2,w,c
 33992  013C6E  0231               	mulwf	i2___flmul@b+1,c
 33993  013C70  CFF3 F047          	movff	prodl,i2___flmul@temp
 33994  013C74  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 33995  013C78  5047               	movf	i2___flmul@temp,w,c
 33996  013C7A  2643               	addwf	i2___flmul@prod,f,c
 33997  013C7C  5048               	movf	i2___flmul@temp+1,w,c
 33998  013C7E  2244               	addwfc	i2___flmul@prod+1,f,c
 33999  013C80  0E00               	movlw	0
 34000  013C82  2245               	addwfc	i2___flmul@prod+2,f,c
 34001  013C84  0E00               	movlw	0
 34002  013C86  2246               	addwfc	i2___flmul@prod+3,f,c
 34003  013C88  5035               	movf	i2___flmul@a+1,w,c
 34004  013C8A  0232               	mulwf	i2___flmul@b+2,c
 34005  013C8C  CFF3 F047          	movff	prodl,i2___flmul@temp
 34006  013C90  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34007  013C94  5047               	movf	i2___flmul@temp,w,c
 34008  013C96  2643               	addwf	i2___flmul@prod,f,c
 34009  013C98  5048               	movf	i2___flmul@temp+1,w,c
 34010  013C9A  2244               	addwfc	i2___flmul@prod+1,f,c
 34011  013C9C  0E00               	movlw	0
 34012  013C9E  2245               	addwfc	i2___flmul@prod+2,f,c
 34013  013CA0  0E00               	movlw	0
 34014  013CA2  2246               	addwfc	i2___flmul@prod+3,f,c
 34015  013CA4  5036               	movf	i2___flmul@a+2,w,c
 34016  013CA6  0232               	mulwf	i2___flmul@b+2,c
 34017  013CA8  CFF3 F047          	movff	prodl,i2___flmul@temp
 34018  013CAC  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34019  013CB0  5047               	movf	i2___flmul@temp,w,c
 34020  013CB2  6E38               	movwf	??i2___flmul& (0+255),c
 34021  013CB4  5048               	movf	i2___flmul@temp+1,w,c
 34022  013CB6  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 34023  013CB8  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 34024  013CBA  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 34025  013CBC  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 34026  013CC0  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 34027  013CC4  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 34028  013CC8  6A38               	clrf	??i2___flmul,c
 34029  013CCA  5038               	movf	??i2___flmul,w,c
 34030  013CCC  2643               	addwf	i2___flmul@prod,f,c
 34031  013CCE  5039               	movf	??i2___flmul+1,w,c
 34032  013CD0  2244               	addwfc	i2___flmul@prod+1,f,c
 34033  013CD2  503A               	movf	??i2___flmul+2,w,c
 34034  013CD4  2245               	addwfc	i2___flmul@prod+2,f,c
 34035  013CD6  503B               	movf	??i2___flmul+3,w,c
 34036  013CD8  2246               	addwfc	i2___flmul@prod+3,f,c
 34037  013CDA  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 34038  013CDE  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 34039  013CE2  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 34040  013CE6  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 34041  013CEA  0E19               	movlw	25
 34042  013CEC  D005               	goto	i2u1224_40
 34043  013CEE                     i2u1224_45:
 34044  013CEE  90D8               	bcf	status,0,c
 34045  013CF0  323B               	rrcf	??i2___flmul+3,f,c
 34046  013CF2  323A               	rrcf	??i2___flmul+2,f,c
 34047  013CF4  3239               	rrcf	??i2___flmul+1,f,c
 34048  013CF6  3238               	rrcf	??i2___flmul,f,c
 34049  013CF8                     i2u1224_40:
 34050  013CF8  2EE8               	decfsz	wreg,f,c
 34051  013CFA  D7F9               	goto	i2u1224_45
 34052  013CFC  5038               	movf	??i2___flmul,w,c
 34053  013CFE  2643               	addwf	i2___flmul@prod,f,c
 34054  013D00  5039               	movf	??i2___flmul+1,w,c
 34055  013D02  2244               	addwfc	i2___flmul@prod+1,f,c
 34056  013D04  503A               	movf	??i2___flmul+2,w,c
 34057  013D06  2245               	addwfc	i2___flmul@prod+2,f,c
 34058  013D08  503B               	movf	??i2___flmul+3,w,c
 34059  013D0A  2246               	addwfc	i2___flmul@prod+3,f,c
 34060  013D0C  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 34061  013D10  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 34062  013D14  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 34063  013D18  6A3E               	clrf	i2___flmul@grs,c
 34064  013D1A  503D               	movf	i2___flmul@aexp,w,c
 34065  013D1C  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 34066  013D20  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 34067  013D22  2638               	addwf	??i2___flmul,f,c
 34068  013D24  0E00               	movlw	0
 34069  013D26  2239               	addwfc	??i2___flmul+1,f,c
 34070  013D28  0E82               	movlw	130
 34071  013D2A  2438               	addwf	??i2___flmul,w,c
 34072  013D2C  6E47               	movwf	i2___flmul@temp,c
 34073  013D2E  0EFF               	movlw	255
 34074  013D30  2039               	addwfc	??i2___flmul+1,w,c
 34075  013D32  6E48               	movwf	i2___flmul@temp+1,c
 34076  013D34  D00F               	goto	i2l2099
 34077  013D36  90D8               	bcf	status,0,c
 34078  013D38  3643               	rlcf	i2___flmul@prod,f,c
 34079  013D3A  3644               	rlcf	i2___flmul@prod+1,f,c
 34080  013D3C  3645               	rlcf	i2___flmul@prod+2,f,c
 34081  013D3E  3646               	rlcf	i2___flmul@prod+3,f,c
 34082  013D40  BE41               	btfsc	i2___flmul@grs+3,7,c
 34083  013D42  8043               	bsf	i2___flmul@prod,0,c
 34084  013D44  90D8               	bcf	status,0,c
 34085  013D46  363E               	rlcf	i2___flmul@grs,f,c
 34086  013D48  363F               	rlcf	i2___flmul@grs+1,f,c
 34087  013D4A  3640               	rlcf	i2___flmul@grs+2,f,c
 34088  013D4C  3641               	rlcf	i2___flmul@grs+3,f,c
 34089  013D4E  0647               	decf	i2___flmul@temp,f,c
 34090  013D50  A0D8               	btfss	status,0,c
 34091  013D52  0648               	decf	i2___flmul@temp+1,f,c
 34092  013D54                     i2l2099:
 34093  013D54  AE45               	btfss	i2___flmul@prod+2,7,c
 34094  013D56  D7EF               	goto	i2l2100
 34095  013D58  0E00               	movlw	0
 34096  013D5A  6E3D               	movwf	i2___flmul@aexp,c
 34097  013D5C  AE41               	btfss	i2___flmul@grs+3,7,c
 34098  013D5E  D016               	goto	i2l2106
 34099  013D60  0EFF               	movlw	255
 34100  013D62  143E               	andwf	i2___flmul@grs,w,c
 34101  013D64  6E38               	movwf	??i2___flmul& (0+255),c
 34102  013D66  0EFF               	movlw	255
 34103  013D68  143F               	andwf	i2___flmul@grs+1,w,c
 34104  013D6A  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 34105  013D6C  0EFF               	movlw	255
 34106  013D6E  1440               	andwf	i2___flmul@grs+2,w,c
 34107  013D70  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 34108  013D72  0E7F               	movlw	127
 34109  013D74  1441               	andwf	i2___flmul@grs+3,w,c
 34110  013D76  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 34111  013D78  5038               	movf	??i2___flmul,w,c
 34112  013D7A  1039               	iorwf	??i2___flmul+1,w,c
 34113  013D7C  103A               	iorwf	??i2___flmul+2,w,c
 34114  013D7E  103B               	iorwf	??i2___flmul+3,w,c
 34115  013D80  A4D8               	btfss	status,2,c
 34116  013D82  D002               	goto	i2u1229_40
 34117  013D84  A043               	btfss	i2___flmul@prod,0,c
 34118  013D86  D002               	goto	i2l2106
 34119  013D88                     i2u1229_40:
 34120  013D88  0E01               	movlw	1
 34121  013D8A  6E3D               	movwf	i2___flmul@aexp,c
 34122  013D8C                     i2l2106:
 34123  013D8C  503D               	movf	i2___flmul@aexp,w,c
 34124  013D8E  B4D8               	btfsc	status,2,c
 34125  013D90  D01F               	goto	i2l2108
 34126  013D92  0E01               	movlw	1
 34127  013D94  2643               	addwf	i2___flmul@prod,f,c
 34128  013D96  0E00               	movlw	0
 34129  013D98  2244               	addwfc	i2___flmul@prod+1,f,c
 34130  013D9A  2245               	addwfc	i2___flmul@prod+2,f,c
 34131  013D9C  2246               	addwfc	i2___flmul@prod+3,f,c
 34132  013D9E  A046               	btfss	i2___flmul@prod+3,0,c
 34133  013DA0  D017               	goto	i2l2108
 34134  013DA2  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 34135  013DA6  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 34136  013DAA  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 34137  013DAE  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 34138  013DB2  343B               	rlcf	??i2___flmul+3,w,c
 34139  013DB4  323B               	rrcf	??i2___flmul+3,f,c
 34140  013DB6  323A               	rrcf	??i2___flmul+2,f,c
 34141  013DB8  3239               	rrcf	??i2___flmul+1,f,c
 34142  013DBA  3238               	rrcf	??i2___flmul,f,c
 34143  013DBC  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 34144  013DC0  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 34145  013DC4  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 34146  013DC8  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 34147  013DCC  4A47               	infsnz	i2___flmul@temp,f,c
 34148  013DCE  2A48               	incf	i2___flmul@temp+1,f,c
 34149  013DD0                     i2l2108:
 34150  013DD0  BE48               	btfsc	i2___flmul@temp+1,7,c
 34151  013DD2  D00D               	goto	i2l2109
 34152  013DD4  5048               	movf	i2___flmul@temp+1,w,c
 34153  013DD6  E103               	bnz	i2u1232_40
 34154  013DD8  2847               	incf	i2___flmul@temp,w,c
 34155  013DDA  A0D8               	btfss	status,0,c
 34156  013DDC  D008               	goto	i2l2109
 34157  013DDE                     i2u1232_40:
 34158  013DDE  0E00               	movlw	0
 34159  013DE0  6E43               	movwf	i2___flmul@prod,c
 34160  013DE2  0E00               	movlw	0
 34161  013DE4  6E44               	movwf	i2___flmul@prod+1,c
 34162  013DE6  0E80               	movlw	128
 34163  013DE8  6E45               	movwf	i2___flmul@prod+2,c
 34164  013DEA  0E7F               	movlw	127
 34165  013DEC  D020               	goto	L19
 34166  013DEE                     i2l2109:
 34167  013DEE  BE48               	btfsc	i2___flmul@temp+1,7,c
 34168  013DF0  D005               	goto	i2u1233_40
 34169  013DF2  5048               	movf	i2___flmul@temp+1,w,c
 34170  013DF4  E10E               	bnz	i2l2111
 34171  013DF6  0447               	decf	i2___flmul@temp,w,c
 34172  013DF8  B0D8               	btfsc	status,0,c
 34173  013DFA  D00B               	goto	i2l2111
 34174  013DFC                     i2u1233_40:
 34175  013DFC  0E00               	movlw	0
 34176  013DFE  6E43               	movwf	i2___flmul@prod,c
 34177  013E00  0E00               	movlw	0
 34178  013E02  6E44               	movwf	i2___flmul@prod+1,c
 34179  013E04  0E00               	movlw	0
 34180  013E06  6E45               	movwf	i2___flmul@prod+2,c
 34181  013E08  0E00               	movlw	0
 34182  013E0A  6E46               	movwf	i2___flmul@prod+3,c
 34183  013E0C  0E00               	movlw	0
 34184  013E0E  6E3C               	movwf	i2___flmul@sign,c
 34185  013E10  D00F               	goto	i2l2112
 34186  013E12                     i2l2111:
 34187  013E12  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 34188  013E16  0EFF               	movlw	255
 34189  013E18  1643               	andwf	i2___flmul@prod,f,c
 34190  013E1A  0EFF               	movlw	255
 34191  013E1C  1644               	andwf	i2___flmul@prod+1,f,c
 34192  013E1E  0E7F               	movlw	127
 34193  013E20  1645               	andwf	i2___flmul@prod+2,f,c
 34194  013E22  0E00               	movlw	0
 34195  013E24  1646               	andwf	i2___flmul@prod+3,f,c
 34196  013E26  B042               	btfsc	i2___flmul@bexp,0,c
 34197  013E28  8E45               	bsf	i2___flmul@prod+2,7,c
 34198  013E2A  90D8               	bcf	status,0,c
 34199  013E2C  3042               	rrcf	i2___flmul@bexp,w,c
 34200  013E2E                     L19:
 34201  013E2E  6E46               	movwf	i2___flmul@prod+3,c
 34202  013E30                     i2l2112:
 34203  013E30  503C               	movf	i2___flmul@sign,w,c
 34204  013E32  1246               	iorwf	i2___flmul@prod+3,f,c
 34205  013E34  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 34206  013E38  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 34207  013E3C  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 34208  013E40  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 34209  013E44  0012               	return	
 34210  013E46                     __end_ofi2___flmul:
 34211                           	opt stack 0
 34212                           tosu	equ	0xFFF
 34213                           tosh	equ	0xFFE
 34214                           tosl	equ	0xFFD
 34215                           pclatu	equ	0xFFB
 34216                           pclath	equ	0xFFA
 34217                           tblptru	equ	0xFF8
 34218                           tblptrh	equ	0xFF7
 34219                           tblptrl	equ	0xFF6
 34220                           tablat	equ	0xFF5
 34221                           prodh	equ	0xFF4
 34222                           prodl	equ	0xFF3
 34223                           intcon	equ	0xFF2
 34224                           indf0	equ	0xFEF
 34225                           postinc0	equ	0xFEE
 34226                           fsr0h	equ	0xFEA
 34227                           fsr0l	equ	0xFE9
 34228                           wreg	equ	0xFE8
 34229                           indf1	equ	0xFE7
 34230                           postdec1	equ	0xFE5
 34231                           plusw1	equ	0xFE3
 34232                           fsr1h	equ	0xFE2
 34233                           fsr1l	equ	0xFE1
 34234                           bsr	equ	0xFE0
 34235                           indf2	equ	0xFDF
 34236                           postinc2	equ	0xFDE
 34237                           postdec2	equ	0xFDD
 34238                           plusw2	equ	0xFDB
 34239                           fsr2h	equ	0xFDA
 34240                           fsr2l	equ	0xFD9
 34241                           status	equ	0xFD8
 34242                           
 34243 ;; *************** function i2___fladd *****************
 34244 ;; Defined at:
 34245 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 34246 ;; Parameters:    Size  Location     Type
 34247 ;;  b               4   85[COMRAM] unsigned char 
 34248 ;;  a               4   89[COMRAM] unsigned char 
 34249 ;; Auto vars:     Size  Location     Type
 34250 ;;  __fladd         1   11[BANK0 ] unsigned char 
 34251 ;;  __fladd         1   10[BANK0 ] unsigned char 
 34252 ;;  __fladd         1    9[BANK0 ] unsigned char 
 34253 ;;  __fladd         1    8[BANK0 ] unsigned char 
 34254 ;; Return value:  Size  Location     Type
 34255 ;;                  4   85[COMRAM] unsigned char 
 34256 ;; Registers used:
 34257 ;;		wreg, status,2, status,0
 34258 ;; Tracked objects:
 34259 ;;		On entry : 0/0
 34260 ;;		On exit  : 0/0
 34261 ;;		Unchanged: 0/0
 34262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34263 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34264 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34265 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34266 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34267 ;;Total ram usage:       20 bytes
 34268 ;; Hardware stack levels used:    1
 34269 ;; This function calls:
 34270 ;;		Nothing
 34271 ;; This function is called by:
 34272 ;;		_peakToRMS
 34273 ;;		_ADCPostProcessingCallback
 34274 ;;		_acos
 34275 ;;		_asin
 34276 ;;		_atan
 34277 ;;		_eval_poly
 34278 ;;		_sin
 34279 ;;		_floor
 34280 ;;		i2_printf
 34281 ;;		i2___flsub
 34282 ;; This function uses a non-reentrant model
 34283 ;;
 34284                           
 34285                           	psect	text120
 34286  014184                     __ptext120:
 34287                           	opt stack 0
 34288  014184                     i2___fladd:
 34289                           	opt stack 15
 34290                           
 34291                           ;incstack = 0
 34292  014184  5059               	movf	i2___fladd@b+3,w,c
 34293  014186  0B80               	andlw	128
 34294  014188  0100               	movlb	0	; () banked
 34295  01418A  6F68               	movwf	i2___fladd@signs& (0+255),b
 34296  01418C  5059               	movf	i2___fladd@b+3,w,c
 34297  01418E  2459               	addwf	i2___fladd@b+3,w,c
 34298  014190  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 34299                           
 34300                           ; BSR set to: 0
 34301  014192  BE58               	btfsc	i2___fladd@b+2,7,c
 34302                           
 34303                           ; BSR set to: 0
 34304  014194  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 34305                           
 34306                           ; BSR set to: 0
 34307                           
 34308                           ; BSR set to: 0
 34309  014196  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34310  014198  B4D8               	btfsc	status,2,c
 34311  01419A  D00D               	goto	i2l1997
 34312                           
 34313                           ; BSR set to: 0
 34314  01419C  296A               	incf	i2___fladd@bexp& (0+255),w,b
 34315  01419E  A4D8               	btfss	status,2,c
 34316  0141A0  D008               	goto	i2l1998
 34317                           
 34318                           ; BSR set to: 0
 34319  0141A2  0E00               	movlw	0
 34320  0141A4  6E56               	movwf	i2___fladd@b,c
 34321  0141A6  0E00               	movlw	0
 34322  0141A8  6E57               	movwf	i2___fladd@b+1,c
 34323  0141AA  0E00               	movlw	0
 34324  0141AC  6E58               	movwf	i2___fladd@b+2,c
 34325  0141AE  0E00               	movlw	0
 34326  0141B0  6E59               	movwf	i2___fladd@b+3,c
 34327  0141B2                     i2l1998:
 34328                           
 34329                           ; BSR set to: 0
 34330                           
 34331                           ; BSR set to: 0
 34332  0141B2  8E58               	bsf	i2___fladd@b+2,7,c
 34333  0141B4  D006               	goto	L20
 34334  0141B6                     i2l1997:
 34335                           
 34336                           ; BSR set to: 0
 34337                           
 34338                           ; BSR set to: 0
 34339  0141B6  0E00               	movlw	0
 34340  0141B8  6E56               	movwf	i2___fladd@b,c
 34341  0141BA  0E00               	movlw	0
 34342  0141BC  6E57               	movwf	i2___fladd@b+1,c
 34343  0141BE  0E00               	movlw	0
 34344  0141C0  6E58               	movwf	i2___fladd@b+2,c
 34345  0141C2                     L20:
 34346  0141C2  0E00               	movlw	0
 34347  0141C4  6E59               	movwf	i2___fladd@b+3,c
 34348                           
 34349                           ; BSR set to: 0
 34350                           
 34351                           ; BSR set to: 0
 34352  0141C6  505D               	movf	i2___fladd@a+3,w,c
 34353  0141C8  0B80               	andlw	128
 34354  0141CA  6F69               	movwf	i2___fladd@aexp& (0+255),b
 34355                           
 34356                           ; BSR set to: 0
 34357  0141CC  5168               	movf	i2___fladd@signs& (0+255),w,b
 34358  0141CE  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 34359  0141D0  A4D8               	btfss	status,2,c
 34360                           
 34361                           ; BSR set to: 0
 34362  0141D2  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 34363                           
 34364                           ; BSR set to: 0
 34365                           
 34366                           ; BSR set to: 0
 34367  0141D4  505D               	movf	i2___fladd@a+3,w,c
 34368  0141D6  245D               	addwf	i2___fladd@a+3,w,c
 34369  0141D8  6F69               	movwf	i2___fladd@aexp& (0+255),b
 34370                           
 34371                           ; BSR set to: 0
 34372  0141DA  BE5C               	btfsc	i2___fladd@a+2,7,c
 34373                           
 34374                           ; BSR set to: 0
 34375  0141DC  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 34376                           
 34377                           ; BSR set to: 0
 34378                           
 34379                           ; BSR set to: 0
 34380  0141DE  5169               	movf	i2___fladd@aexp& (0+255),w,b
 34381  0141E0  B4D8               	btfsc	status,2,c
 34382  0141E2  D00D               	goto	i2l2002
 34383                           
 34384                           ; BSR set to: 0
 34385  0141E4  2969               	incf	i2___fladd@aexp& (0+255),w,b
 34386  0141E6  A4D8               	btfss	status,2,c
 34387  0141E8  D008               	goto	i2l2003
 34388                           
 34389                           ; BSR set to: 0
 34390  0141EA  0E00               	movlw	0
 34391  0141EC  6E5A               	movwf	i2___fladd@a,c
 34392  0141EE  0E00               	movlw	0
 34393  0141F0  6E5B               	movwf	i2___fladd@a+1,c
 34394  0141F2  0E00               	movlw	0
 34395  0141F4  6E5C               	movwf	i2___fladd@a+2,c
 34396  0141F6  0E00               	movlw	0
 34397  0141F8  6E5D               	movwf	i2___fladd@a+3,c
 34398  0141FA                     i2l2003:
 34399                           
 34400                           ; BSR set to: 0
 34401                           
 34402                           ; BSR set to: 0
 34403  0141FA  8E5C               	bsf	i2___fladd@a+2,7,c
 34404  0141FC  D006               	goto	L21
 34405  0141FE                     i2l2002:
 34406                           
 34407                           ; BSR set to: 0
 34408                           
 34409                           ; BSR set to: 0
 34410  0141FE  0E00               	movlw	0
 34411  014200  6E5A               	movwf	i2___fladd@a,c
 34412  014202  0E00               	movlw	0
 34413  014204  6E5B               	movwf	i2___fladd@a+1,c
 34414  014206  0E00               	movlw	0
 34415  014208  6E5C               	movwf	i2___fladd@a+2,c
 34416  01420A                     L21:
 34417  01420A  0E00               	movlw	0
 34418  01420C  6E5D               	movwf	i2___fladd@a+3,c
 34419                           
 34420                           ; BSR set to: 0
 34421                           
 34422                           ; BSR set to: 0
 34423  01420E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34424  014210  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 34425  014212  B0D8               	btfsc	status,0,c
 34426  014214  D022               	goto	i2l2005
 34427                           
 34428                           ; BSR set to: 0
 34429  014216  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 34430  014218  D002               	goto	i2l2006
 34431                           
 34432                           ; BSR set to: 0
 34433  01421A  0E80               	movlw	128
 34434  01421C  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 34435  01421E                     i2l2006:
 34436                           
 34437                           ; BSR set to: 0
 34438                           
 34439                           ; BSR set to: 0
 34440  01421E  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 34441                           
 34442                           ; BSR set to: 0
 34443  014222  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 34444                           
 34445                           ; BSR set to: 0
 34446  014226  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 34447                           
 34448                           ; BSR set to: 0
 34449  01422A  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 34450                           
 34451                           ; BSR set to: 0
 34452  01422E  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 34453                           
 34454                           ; BSR set to: 0
 34455  014232  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 34456                           
 34457                           ; BSR set to: 0
 34458  014236  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 34459                           
 34460                           ; BSR set to: 0
 34461  01423A  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 34462                           
 34463                           ; BSR set to: 0
 34464  01423E  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 34465                           
 34466                           ; BSR set to: 0
 34467  014242  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 34468                           
 34469                           ; BSR set to: 0
 34470  014246  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 34471                           
 34472                           ; BSR set to: 0
 34473  01424A  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 34474                           
 34475                           ; BSR set to: 0
 34476  01424E  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 34477                           
 34478                           ; BSR set to: 0
 34479  014252  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 34480                           
 34481                           ; BSR set to: 0
 34482  014256  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 34483  01425A                     i2l2005:
 34484                           
 34485                           ; BSR set to: 0
 34486                           
 34487                           ; BSR set to: 0
 34488  01425A  0E00               	movlw	0
 34489  01425C  6F6B               	movwf	i2___fladd@grs& (0+255),b
 34490                           
 34491                           ; BSR set to: 0
 34492  01425E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34493  014260  6F60               	movwf	??i2___fladd& (0+255),b
 34494  014262  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 34495  014264  1F60               	comf	??i2___fladd& (0+255),f,b
 34496  014266  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 34497  014268  4B60               	infsnz	??i2___fladd& (0+255),f,b
 34498  01426A  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 34499  01426C  5169               	movf	i2___fladd@aexp& (0+255),w,b
 34500  01426E  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 34501  014270  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 34502  014272  5160               	movf	??i2___fladd& (0+255),w,b
 34503  014274  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 34504  014276  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 34505  014278  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 34506  01427A  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 34507  01427C  D02C               	goto	i2l2009
 34508  01427E  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 34509  014280  E104               	bnz	i2u1186_40
 34510  014282  0E1A               	movlw	26
 34511  014284  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 34512  014286  A0D8               	btfss	status,0,c
 34513  014288  D026               	goto	i2l2009
 34514  01428A                     i2u1186_40:
 34515                           
 34516                           ; BSR set to: 0
 34517  01428A  5056               	movf	i2___fladd@b,w,c
 34518  01428C  1057               	iorwf	i2___fladd@b+1,w,c
 34519  01428E  1058               	iorwf	i2___fladd@b+2,w,c
 34520  014290  1059               	iorwf	i2___fladd@b+3,w,c
 34521  014292  B4D8               	btfsc	status,2,c
 34522  014294  D002               	goto	i2u1187_40
 34523  014296  0E01               	movlw	1
 34524  014298  D001               	goto	i2u1188_40
 34525  01429A                     i2u1187_40:
 34526  01429A  0E00               	movlw	0
 34527  01429C                     i2u1188_40:
 34528  01429C  6F6B               	movwf	i2___fladd@grs& (0+255),b
 34529                           
 34530                           ; BSR set to: 0
 34531  01429E  0E00               	movlw	0
 34532  0142A0  6E56               	movwf	i2___fladd@b,c
 34533  0142A2  0E00               	movlw	0
 34534  0142A4  6E57               	movwf	i2___fladd@b+1,c
 34535  0142A6  0E00               	movlw	0
 34536  0142A8  6E58               	movwf	i2___fladd@b+2,c
 34537  0142AA  0E00               	movlw	0
 34538  0142AC  6E59               	movwf	i2___fladd@b+3,c
 34539                           
 34540                           ; BSR set to: 0
 34541  0142AE  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 34542  0142B2  D015               	goto	i2u1191_40
 34543  0142B4                     i2l2010:
 34544                           
 34545                           ; BSR set to: 0
 34546  0142B4  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 34547  0142B6  D005               	goto	i2l2011
 34548                           
 34549                           ; BSR set to: 0
 34550  0142B8  90D8               	bcf	status,0,c
 34551  0142BA  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 34552  0142BC  0901               	iorlw	1
 34553  0142BE  6F6B               	movwf	i2___fladd@grs& (0+255),b
 34554  0142C0  D002               	goto	i2l2012
 34555  0142C2                     i2l2011:
 34556                           
 34557                           ; BSR set to: 0
 34558                           
 34559                           ; BSR set to: 0
 34560  0142C2  90D8               	bcf	status,0,c
 34561  0142C4  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 34562  0142C6                     i2l2012:
 34563                           
 34564                           ; BSR set to: 0
 34565                           
 34566                           ; BSR set to: 0
 34567  0142C6  B056               	btfsc	i2___fladd@b,0,c
 34568                           
 34569                           ; BSR set to: 0
 34570  0142C8  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 34571                           
 34572                           ; BSR set to: 0
 34573                           
 34574                           ; BSR set to: 0
 34575  0142CA  3459               	rlcf	i2___fladd@b+3,w,c
 34576  0142CC  3259               	rrcf	i2___fladd@b+3,f,c
 34577  0142CE  3258               	rrcf	i2___fladd@b+2,f,c
 34578  0142D0  3257               	rrcf	i2___fladd@b+1,f,c
 34579  0142D2  3256               	rrcf	i2___fladd@b,f,c
 34580                           
 34581                           ; BSR set to: 0
 34582  0142D4  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 34583  0142D6                     i2l2009:
 34584                           
 34585                           ; BSR set to: 0
 34586  0142D6  5169               	movf	i2___fladd@aexp& (0+255),w,b
 34587  0142D8  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 34588  0142DA  A0D8               	btfss	status,0,c
 34589  0142DC  D7EB               	goto	i2l2010
 34590  0142DE                     i2u1191_40:
 34591                           
 34592                           ; BSR set to: 0
 34593                           
 34594                           ; BSR set to: 0
 34595  0142DE  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 34596  0142E0  D029               	goto	i2l2015
 34597                           
 34598                           ; BSR set to: 0
 34599  0142E2  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34600  0142E4  A4D8               	btfss	status,2,c
 34601  0142E6  D009               	goto	i2l2016
 34602                           
 34603                           ; BSR set to: 0
 34604  0142E8  0E00               	movlw	0
 34605  0142EA  6E56               	movwf	?i2___fladd,c
 34606  0142EC  0E00               	movlw	0
 34607  0142EE  6E57               	movwf	?i2___fladd+1,c
 34608  0142F0  0E00               	movlw	0
 34609  0142F2  6E58               	movwf	?i2___fladd+2,c
 34610  0142F4  0E00               	movlw	0
 34611  0142F6  6E59               	movwf	?i2___fladd+3,c
 34612                           
 34613                           ; BSR set to: 0
 34614  0142F8  0012               	return	
 34615  0142FA                     i2l2016:
 34616                           
 34617                           ; BSR set to: 0
 34618                           
 34619                           ; BSR set to: 0
 34620  0142FA  505A               	movf	i2___fladd@a,w,c
 34621  0142FC  2656               	addwf	i2___fladd@b,f,c
 34622  0142FE  505B               	movf	i2___fladd@a+1,w,c
 34623  014300  2257               	addwfc	i2___fladd@b+1,f,c
 34624  014302  505C               	movf	i2___fladd@a+2,w,c
 34625  014304  2258               	addwfc	i2___fladd@b+2,f,c
 34626  014306  505D               	movf	i2___fladd@a+3,w,c
 34627  014308  2259               	addwfc	i2___fladd@b+3,f,c
 34628                           
 34629                           ; BSR set to: 0
 34630  01430A  A059               	btfss	i2___fladd@b+3,0,c
 34631  01430C  D083               	goto	i2u1204_40
 34632                           
 34633                           ; BSR set to: 0
 34634  01430E  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 34635  014310  D006               	goto	i2l2019
 34636                           
 34637                           ; BSR set to: 0
 34638  014312  90D8               	bcf	status,0,c
 34639  014314  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 34640  014316  516B               	movf	i2___fladd@grs& (0+255),w,b
 34641  014318  0901               	iorlw	1
 34642  01431A  6F6B               	movwf	i2___fladd@grs& (0+255),b
 34643  01431C  D002               	goto	i2l2020
 34644  01431E                     i2l2019:
 34645                           
 34646                           ; BSR set to: 0
 34647                           
 34648                           ; BSR set to: 0
 34649  01431E  90D8               	bcf	status,0,c
 34650  014320  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 34651  014322                     i2l2020:
 34652                           
 34653                           ; BSR set to: 0
 34654                           
 34655                           ; BSR set to: 0
 34656  014322  B056               	btfsc	i2___fladd@b,0,c
 34657                           
 34658                           ; BSR set to: 0
 34659  014324  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 34660                           
 34661                           ; BSR set to: 0
 34662                           
 34663                           ; BSR set to: 0
 34664  014326  3459               	rlcf	i2___fladd@b+3,w,c
 34665  014328  3259               	rrcf	i2___fladd@b+3,f,c
 34666  01432A  3258               	rrcf	i2___fladd@b+2,f,c
 34667  01432C  3257               	rrcf	i2___fladd@b+1,f,c
 34668  01432E  3256               	rrcf	i2___fladd@b,f,c
 34669                           
 34670                           ; BSR set to: 0
 34671  014330  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 34672                           
 34673                           ; BSR set to: 0
 34674  014332  D070               	goto	i2u1204_40
 34675  014334                     i2l2015:
 34676                           
 34677                           ; BSR set to: 0
 34678                           
 34679                           ; BSR set to: 0
 34680  014334  505A               	movf	i2___fladd@a,w,c
 34681  014336  5C56               	subwf	i2___fladd@b,w,c
 34682  014338  505B               	movf	i2___fladd@a+1,w,c
 34683  01433A  5857               	subwfb	i2___fladd@b+1,w,c
 34684  01433C  505C               	movf	i2___fladd@a+2,w,c
 34685  01433E  5858               	subwfb	i2___fladd@b+2,w,c
 34686  014340  5059               	movf	i2___fladd@b+3,w,c
 34687  014342  0A80               	xorlw	128
 34688  014344  6F60               	movwf	??i2___fladd& (0+255),b
 34689  014346  505D               	movf	i2___fladd@a+3,w,c
 34690  014348  0A80               	xorlw	128
 34691  01434A  5960               	subwfb	??i2___fladd& (0+255),w,b
 34692  01434C  B0D8               	btfsc	status,0,c
 34693  01434E  D036               	goto	i2l2023
 34694                           
 34695                           ; BSR set to: 0
 34696  014350  C056  F060         	movff	i2___fladd@b,??i2___fladd
 34697  014354  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 34698  014358  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 34699  01435C  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 34700  014360  1F60               	comf	??i2___fladd& (0+255),f,b
 34701  014362  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 34702  014364  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 34703  014366  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 34704  014368  2B60               	incf	??i2___fladd& (0+255),f,b
 34705  01436A  0E00               	movlw	0
 34706  01436C  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 34707  01436E  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 34708  014370  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 34709  014372  505A               	movf	i2___fladd@a,w,c
 34710  014374  2560               	addwf	??i2___fladd& (0+255),w,b
 34711  014376  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 34712  014378  505B               	movf	i2___fladd@a+1,w,c
 34713  01437A  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 34714  01437C  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 34715  01437E  505C               	movf	i2___fladd@a+2,w,c
 34716  014380  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 34717  014382  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 34718  014384  505D               	movf	i2___fladd@a+3,w,c
 34719  014386  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 34720  014388  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 34721  01438A  0EFF               	movlw	255
 34722  01438C  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 34723  01438E  6E56               	movwf	i2___fladd@b,c
 34724  014390  0EFF               	movlw	255
 34725  014392  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 34726  014394  6E57               	movwf	i2___fladd@b+1,c
 34727  014396  0EFF               	movlw	255
 34728  014398  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 34729  01439A  6E58               	movwf	i2___fladd@b+2,c
 34730  01439C  0EFF               	movlw	255
 34731  01439E  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 34732  0143A0  6E59               	movwf	i2___fladd@b+3,c
 34733  0143A2  0E80               	movlw	128
 34734  0143A4  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 34735                           
 34736                           ; BSR set to: 0
 34737  0143A6  6D6B               	negf	i2___fladd@grs& (0+255),b
 34738                           
 34739                           ; BSR set to: 0
 34740  0143A8  516B               	movf	i2___fladd@grs& (0+255),w,b
 34741  0143AA  A4D8               	btfss	status,2,c
 34742  0143AC  D00F               	goto	i2l2025
 34743                           
 34744                           ; BSR set to: 0
 34745  0143AE  0E01               	movlw	1
 34746  0143B0  2656               	addwf	i2___fladd@b,f,c
 34747  0143B2  0E00               	movlw	0
 34748  0143B4  2257               	addwfc	i2___fladd@b+1,f,c
 34749  0143B6  2258               	addwfc	i2___fladd@b+2,f,c
 34750  0143B8  2259               	addwfc	i2___fladd@b+3,f,c
 34751                           
 34752                           ; BSR set to: 0
 34753  0143BA  D008               	goto	i2l2025
 34754  0143BC                     i2l2023:
 34755                           
 34756                           ; BSR set to: 0
 34757                           
 34758                           ; BSR set to: 0
 34759  0143BC  505A               	movf	i2___fladd@a,w,c
 34760  0143BE  5E56               	subwf	i2___fladd@b,f,c
 34761  0143C0  505B               	movf	i2___fladd@a+1,w,c
 34762  0143C2  5A57               	subwfb	i2___fladd@b+1,f,c
 34763  0143C4  505C               	movf	i2___fladd@a+2,w,c
 34764  0143C6  5A58               	subwfb	i2___fladd@b+2,f,c
 34765  0143C8  505D               	movf	i2___fladd@a+3,w,c
 34766  0143CA  5A59               	subwfb	i2___fladd@b+3,f,c
 34767  0143CC                     i2l2025:
 34768                           
 34769                           ; BSR set to: 0
 34770  0143CC  5056               	movf	i2___fladd@b,w,c
 34771  0143CE  1057               	iorwf	i2___fladd@b+1,w,c
 34772  0143D0  1058               	iorwf	i2___fladd@b+2,w,c
 34773  0143D2  1059               	iorwf	i2___fladd@b+3,w,c
 34774  0143D4  A4D8               	btfss	status,2,c
 34775  0143D6  D01C               	goto	i2l2032
 34776                           
 34777                           ; BSR set to: 0
 34778  0143D8  516B               	movf	i2___fladd@grs& (0+255),w,b
 34779  0143DA  A4D8               	btfss	status,2,c
 34780  0143DC  D019               	goto	i2l2032
 34781                           
 34782                           ; BSR set to: 0
 34783  0143DE  0E00               	movlw	0
 34784  0143E0  6E56               	movwf	?i2___fladd,c
 34785  0143E2  0E00               	movlw	0
 34786  0143E4  6E57               	movwf	?i2___fladd+1,c
 34787  0143E6  0E00               	movlw	0
 34788  0143E8  6E58               	movwf	?i2___fladd+2,c
 34789  0143EA  0E00               	movlw	0
 34790  0143EC  6E59               	movwf	?i2___fladd+3,c
 34791                           
 34792                           ; BSR set to: 0
 34793  0143EE  0012               	return	
 34794  0143F0                     
 34795                           ; BSR set to: 0
 34796                           
 34797                           ; BSR set to: 0
 34798  0143F0  90D8               	bcf	status,0,c
 34799  0143F2  3656               	rlcf	i2___fladd@b,f,c
 34800  0143F4  3657               	rlcf	i2___fladd@b+1,f,c
 34801  0143F6  3658               	rlcf	i2___fladd@b+2,f,c
 34802  0143F8  3659               	rlcf	i2___fladd@b+3,f,c
 34803                           
 34804                           ; BSR set to: 0
 34805  0143FA  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 34806                           
 34807                           ; BSR set to: 0
 34808  0143FC  8056               	bsf	i2___fladd@b,0,c
 34809                           
 34810                           ; BSR set to: 0
 34811                           
 34812                           ; BSR set to: 0
 34813  0143FE  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 34814  014400  D002               	goto	i2l2030
 34815                           
 34816                           ; BSR set to: 0
 34817  014402  80D8               	bsf	status,0,c
 34818  014404  D001               	goto	L22
 34819  014406                     i2l2030:
 34820                           
 34821                           ; BSR set to: 0
 34822                           
 34823                           ; BSR set to: 0
 34824  014406  90D8               	bcf	status,0,c
 34825  014408                     L22:
 34826  014408  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 34827                           
 34828                           ; BSR set to: 0
 34829                           
 34830                           ; BSR set to: 0
 34831  01440A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34832  01440C  A4D8               	btfss	status,2,c
 34833                           
 34834                           ; BSR set to: 0
 34835  01440E  076A               	decf	i2___fladd@bexp& (0+255),f,b
 34836  014410                     i2l2032:
 34837                           
 34838                           ; BSR set to: 0
 34839                           
 34840                           ; BSR set to: 0
 34841                           
 34842                           ; BSR set to: 0
 34843  014410  AE58               	btfss	i2___fladd@b+2,7,c
 34844  014412  D7EE               	goto	i2l2028
 34845  014414                     i2u1204_40:
 34846                           
 34847                           ; BSR set to: 0
 34848                           
 34849                           ; BSR set to: 0
 34850                           
 34851                           ; BSR set to: 0
 34852  014414  0E00               	movlw	0
 34853  014416  6F69               	movwf	i2___fladd@aexp& (0+255),b
 34854                           
 34855                           ; BSR set to: 0
 34856  014418  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 34857  01441A  D00A               	goto	i2l2037
 34858                           
 34859                           ; BSR set to: 0
 34860  01441C  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 34861  014420  0E7F               	movlw	127
 34862  014422  1760               	andwf	??i2___fladd& (0+255),f,b
 34863  014424  A4D8               	btfss	status,2,c
 34864  014426  D002               	goto	i2u1207_40
 34865                           
 34866                           ; BSR set to: 0
 34867                           
 34868                           ; BSR set to: 0
 34869  014428  A056               	btfss	i2___fladd@b,0,c
 34870  01442A  D002               	goto	i2l2037
 34871  01442C                     i2u1207_40:
 34872                           
 34873                           ; BSR set to: 0
 34874  01442C  0E01               	movlw	1
 34875  01442E  6F69               	movwf	i2___fladd@aexp& (0+255),b
 34876  014430                     i2l2037:
 34877                           
 34878                           ; BSR set to: 0
 34879                           
 34880                           ; BSR set to: 0
 34881                           
 34882                           ; BSR set to: 0
 34883  014430  5169               	movf	i2___fladd@aexp& (0+255),w,b
 34884  014432  B4D8               	btfsc	status,2,c
 34885  014434  D020               	goto	i2l2040
 34886                           
 34887                           ; BSR set to: 0
 34888  014436  0E01               	movlw	1
 34889  014438  2656               	addwf	i2___fladd@b,f,c
 34890  01443A  0E00               	movlw	0
 34891  01443C  2257               	addwfc	i2___fladd@b+1,f,c
 34892  01443E  2258               	addwfc	i2___fladd@b+2,f,c
 34893  014440  2259               	addwfc	i2___fladd@b+3,f,c
 34894                           
 34895                           ; BSR set to: 0
 34896  014442  A059               	btfss	i2___fladd@b+3,0,c
 34897  014444  D018               	goto	i2l2040
 34898                           
 34899                           ; BSR set to: 0
 34900  014446  C056  F060         	movff	i2___fladd@b,??i2___fladd
 34901  01444A  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 34902  01444E  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 34903  014452  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 34904  014456  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 34905  014458  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 34906  01445A  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 34907  01445C  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 34908  01445E  3360               	rrcf	??i2___fladd& (0+255),f,b
 34909  014460  C060  F056         	movff	??i2___fladd,i2___fladd@b
 34910  014464  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 34911  014468  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 34912  01446C  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 34913  014470  296A               	incf	i2___fladd@bexp& (0+255),w,b
 34914  014472  A4D8               	btfss	status,2,c
 34915                           
 34916                           ; BSR set to: 0
 34917  014474  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 34918  014476                     i2l2040:
 34919                           
 34920                           ; BSR set to: 0
 34921                           
 34922                           ; BSR set to: 0
 34923                           
 34924                           ; BSR set to: 0
 34925                           
 34926                           ; BSR set to: 0
 34927  014476  296A               	incf	i2___fladd@bexp& (0+255),w,b
 34928  014478  B4D8               	btfsc	status,2,c
 34929  01447A  D003               	goto	i2u1212_40
 34930                           
 34931                           ; BSR set to: 0
 34932  01447C  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34933  01447E  A4D8               	btfss	status,2,c
 34934  014480  D00D               	goto	i2l2044
 34935  014482                     i2u1212_40:
 34936                           
 34937                           ; BSR set to: 0
 34938                           
 34939                           ; BSR set to: 0
 34940  014482  0E00               	movlw	0
 34941  014484  6E56               	movwf	i2___fladd@b,c
 34942  014486  0E00               	movlw	0
 34943  014488  6E57               	movwf	i2___fladd@b+1,c
 34944  01448A  0E00               	movlw	0
 34945  01448C  6E58               	movwf	i2___fladd@b+2,c
 34946  01448E  0E00               	movlw	0
 34947  014490  6E59               	movwf	i2___fladd@b+3,c
 34948  014492  516A               	movf	i2___fladd@bexp& (0+255),w,b
 34949  014494  A4D8               	btfss	status,2,c
 34950  014496  D002               	goto	i2l2044
 34951                           
 34952                           ; BSR set to: 0
 34953  014498  0E00               	movlw	0
 34954  01449A  6F68               	movwf	i2___fladd@signs& (0+255),b
 34955  01449C                     i2l2044:
 34956                           
 34957                           ; BSR set to: 0
 34958                           
 34959                           ; BSR set to: 0
 34960                           
 34961                           ; BSR set to: 0
 34962  01449C  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 34963  01449E  D002               	goto	i2l2045
 34964                           
 34965                           ; BSR set to: 0
 34966  0144A0  8E58               	bsf	i2___fladd@b+2,7,c
 34967  0144A2  D001               	goto	i2l2046
 34968  0144A4                     i2l2045:
 34969                           
 34970                           ; BSR set to: 0
 34971                           
 34972                           ; BSR set to: 0
 34973  0144A4  9E58               	bcf	i2___fladd@b+2,7,c
 34974  0144A6                     i2l2046:
 34975                           
 34976                           ; BSR set to: 0
 34977                           
 34978                           ; BSR set to: 0
 34979  0144A6  90D8               	bcf	status,0,c
 34980  0144A8  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 34981  0144AA  6E59               	movwf	i2___fladd@b+3,c
 34982                           
 34983                           ; BSR set to: 0
 34984  0144AC  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 34985                           
 34986                           ; BSR set to: 0
 34987  0144AE  8E59               	bsf	i2___fladd@b+3,7,c
 34988                           
 34989                           ; BSR set to: 0
 34990                           
 34991                           ; BSR set to: 0
 34992  0144B0  C056  F056         	movff	i2___fladd@b,?i2___fladd
 34993  0144B4  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 34994  0144B8  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 34995  0144BC  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 34996  0144C0  0012               	return	
 34997  0144C2                     __end_ofi2___fladd:
 34998                           	opt stack 0
 34999                           tosu	equ	0xFFF
 35000                           tosh	equ	0xFFE
 35001                           tosl	equ	0xFFD
 35002                           pclatu	equ	0xFFB
 35003                           pclath	equ	0xFFA
 35004                           tblptru	equ	0xFF8
 35005                           tblptrh	equ	0xFF7
 35006                           tblptrl	equ	0xFF6
 35007                           tablat	equ	0xFF5
 35008                           prodh	equ	0xFF4
 35009                           prodl	equ	0xFF3
 35010                           intcon	equ	0xFF2
 35011                           indf0	equ	0xFEF
 35012                           postinc0	equ	0xFEE
 35013                           fsr0h	equ	0xFEA
 35014                           fsr0l	equ	0xFE9
 35015                           wreg	equ	0xFE8
 35016                           indf1	equ	0xFE7
 35017                           postdec1	equ	0xFE5
 35018                           plusw1	equ	0xFE3
 35019                           fsr1h	equ	0xFE2
 35020                           fsr1l	equ	0xFE1
 35021                           bsr	equ	0xFE0
 35022                           indf2	equ	0xFDF
 35023                           postinc2	equ	0xFDE
 35024                           postdec2	equ	0xFDD
 35025                           plusw2	equ	0xFDB
 35026                           fsr2h	equ	0xFDA
 35027                           fsr2l	equ	0xFD9
 35028                           status	equ	0xFD8
 35029                           
 35030 ;; *************** function _ADCC_GetConversionResult *****************
 35031 ;; Defined at:
 35032 ;;		line 130 in file "mcc_generated_files/adcc.c"
 35033 ;; Parameters:    Size  Location     Type
 35034 ;;		None
 35035 ;; Auto vars:     Size  Location     Type
 35036 ;;		None
 35037 ;; Return value:  Size  Location     Type
 35038 ;;                  2    0[COMRAM] unsigned int 
 35039 ;; Registers used:
 35040 ;;		wreg, status,2, status,0
 35041 ;; Tracked objects:
 35042 ;;		On entry : 0/0
 35043 ;;		On exit  : 0/0
 35044 ;;		Unchanged: 0/0
 35045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35050 ;;Total ram usage:        4 bytes
 35051 ;; Hardware stack levels used:    1
 35052 ;; This function calls:
 35053 ;;		Nothing
 35054 ;; This function is called by:
 35055 ;;		_ADCPostProcessingCallback
 35056 ;; This function uses a non-reentrant model
 35057 ;;
 35058                           
 35059                           	psect	text121
 35060  018072                     __ptext121:
 35061                           	opt stack 0
 35062  018072                     _ADCC_GetConversionResult:
 35063                           	opt stack 16
 35064                           
 35065                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 35066                           
 35067                           ; BSR set to: 0
 35068                           ;incstack = 0
 35069  018072  5064               	movf	3940,w,c	;volatile
 35070  018074  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 35071  018076  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 35072  018078  5063               	movf	3939,w,c	;volatile
 35073  01807A  2403               	addwf	??_ADCC_GetConversionResult,w,c
 35074  01807C  6E01               	movwf	?_ADCC_GetConversionResult,c
 35075  01807E  0E00               	movlw	0
 35076  018080  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 35077  018082  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 35078  018084  0012               	return	
 35079  018086                     __end_of_ADCC_GetConversionResult:
 35080                           	opt stack 0
 35081                           tosu	equ	0xFFF
 35082                           tosh	equ	0xFFE
 35083                           tosl	equ	0xFFD
 35084                           pclatu	equ	0xFFB
 35085                           pclath	equ	0xFFA
 35086                           tblptru	equ	0xFF8
 35087                           tblptrh	equ	0xFF7
 35088                           tblptrl	equ	0xFF6
 35089                           tablat	equ	0xFF5
 35090                           prodh	equ	0xFF4
 35091                           prodl	equ	0xFF3
 35092                           intcon	equ	0xFF2
 35093                           indf0	equ	0xFEF
 35094                           postinc0	equ	0xFEE
 35095                           fsr0h	equ	0xFEA
 35096                           fsr0l	equ	0xFE9
 35097                           wreg	equ	0xFE8
 35098                           indf1	equ	0xFE7
 35099                           postdec1	equ	0xFE5
 35100                           plusw1	equ	0xFE3
 35101                           fsr1h	equ	0xFE2
 35102                           fsr1l	equ	0xFE1
 35103                           bsr	equ	0xFE0
 35104                           indf2	equ	0xFDF
 35105                           postinc2	equ	0xFDE
 35106                           postdec2	equ	0xFDD
 35107                           plusw2	equ	0xFDB
 35108                           fsr2h	equ	0xFDA
 35109                           fsr2l	equ	0xFD9
 35110                           status	equ	0xFD8
 35111                           tosu	equ	0xFFF
 35112                           tosh	equ	0xFFE
 35113                           tosl	equ	0xFFD
 35114                           pclatu	equ	0xFFB
 35115                           pclath	equ	0xFFA
 35116                           tblptru	equ	0xFF8
 35117                           tblptrh	equ	0xFF7
 35118                           tblptrl	equ	0xFF6
 35119                           tablat	equ	0xFF5
 35120                           prodh	equ	0xFF4
 35121                           prodl	equ	0xFF3
 35122                           intcon	equ	0xFF2
 35123                           indf0	equ	0xFEF
 35124                           postinc0	equ	0xFEE
 35125                           fsr0h	equ	0xFEA
 35126                           fsr0l	equ	0xFE9
 35127                           wreg	equ	0xFE8
 35128                           indf1	equ	0xFE7
 35129                           postdec1	equ	0xFE5
 35130                           plusw1	equ	0xFE3
 35131                           fsr1h	equ	0xFE2
 35132                           fsr1l	equ	0xFE1
 35133                           bsr	equ	0xFE0
 35134                           indf2	equ	0xFDF
 35135                           postinc2	equ	0xFDE
 35136                           postdec2	equ	0xFDD
 35137                           plusw2	equ	0xFDB
 35138                           fsr2h	equ	0xFDA
 35139                           fsr2l	equ	0xFD9
 35140                           status	equ	0xFD8
 35141                           
 35142                           	psect	text122
 35143  000000                     __ptext122:
 35144                           	opt stack 0
 35145                           tosu	equ	0xFFF
 35146                           tosh	equ	0xFFE
 35147                           tosl	equ	0xFFD
 35148                           pclatu	equ	0xFFB
 35149                           pclath	equ	0xFFA
 35150                           tblptru	equ	0xFF8
 35151                           tblptrh	equ	0xFF7
 35152                           tblptrl	equ	0xFF6
 35153                           tablat	equ	0xFF5
 35154                           prodh	equ	0xFF4
 35155                           prodl	equ	0xFF3
 35156                           intcon	equ	0xFF2
 35157                           indf0	equ	0xFEF
 35158                           postinc0	equ	0xFEE
 35159                           fsr0h	equ	0xFEA
 35160                           fsr0l	equ	0xFE9
 35161                           wreg	equ	0xFE8
 35162                           indf1	equ	0xFE7
 35163                           postdec1	equ	0xFE5
 35164                           plusw1	equ	0xFE3
 35165                           fsr1h	equ	0xFE2
 35166                           fsr1l	equ	0xFE1
 35167                           bsr	equ	0xFE0
 35168                           indf2	equ	0xFDF
 35169                           postinc2	equ	0xFDE
 35170                           postdec2	equ	0xFDD
 35171                           plusw2	equ	0xFDB
 35172                           fsr2h	equ	0xFDA
 35173                           fsr2l	equ	0xFD9
 35174                           status	equ	0xFD8
 35175                           
 35176                           	psect	rparam
 35177  0000                     tosu	equ	0xFFF
 35178                           tosh	equ	0xFFE
 35179                           tosl	equ	0xFFD
 35180                           pclatu	equ	0xFFB
 35181                           pclath	equ	0xFFA
 35182                           tblptru	equ	0xFF8
 35183                           tblptrh	equ	0xFF7
 35184                           tblptrl	equ	0xFF6
 35185                           tablat	equ	0xFF5
 35186                           prodh	equ	0xFF4
 35187                           prodl	equ	0xFF3
 35188                           intcon	equ	0xFF2
 35189                           indf0	equ	0xFEF
 35190                           postinc0	equ	0xFEE
 35191                           fsr0h	equ	0xFEA
 35192                           fsr0l	equ	0xFE9
 35193                           wreg	equ	0xFE8
 35194                           indf1	equ	0xFE7
 35195                           postdec1	equ	0xFE5
 35196                           plusw1	equ	0xFE3
 35197                           fsr1h	equ	0xFE2
 35198                           fsr1l	equ	0xFE1
 35199                           bsr	equ	0xFE0
 35200                           indf2	equ	0xFDF
 35201                           postinc2	equ	0xFDE
 35202                           postdec2	equ	0xFDD
 35203                           plusw2	equ	0xFDB
 35204                           fsr2h	equ	0xFDA
 35205                           fsr2l	equ	0xFD9
 35206                           status	equ	0xFD8
 35207                           
 35208                           	psect	temp
 35209  00005F                     btemp:
 35210                           	opt stack 0
 35211  00005F                     	ds	1
 35212  0000                     int$flags	set	btemp
 35213  0000                     wtemp6	set	btemp+1
 35214                           tosu	equ	0xFFF
 35215                           tosh	equ	0xFFE
 35216                           tosl	equ	0xFFD
 35217                           pclatu	equ	0xFFB
 35218                           pclath	equ	0xFFA
 35219                           tblptru	equ	0xFF8
 35220                           tblptrh	equ	0xFF7
 35221                           tblptrl	equ	0xFF6
 35222                           tablat	equ	0xFF5
 35223                           prodh	equ	0xFF4
 35224                           prodl	equ	0xFF3
 35225                           intcon	equ	0xFF2
 35226                           indf0	equ	0xFEF
 35227                           postinc0	equ	0xFEE
 35228                           fsr0h	equ	0xFEA
 35229                           fsr0l	equ	0xFE9
 35230                           wreg	equ	0xFE8
 35231                           indf1	equ	0xFE7
 35232                           postdec1	equ	0xFE5
 35233                           plusw1	equ	0xFE3
 35234                           fsr1h	equ	0xFE2
 35235                           fsr1l	equ	0xFE1
 35236                           bsr	equ	0xFE0
 35237                           indf2	equ	0xFDF
 35238                           postinc2	equ	0xFDE
 35239                           postdec2	equ	0xFDD
 35240                           plusw2	equ	0xFDB
 35241                           fsr2h	equ	0xFDA
 35242                           fsr2l	equ	0xFD9
 35243                           status	equ	0xFD8


Data Sizes:
    Strings     4930
    Constant    256
    Data        42
    BSS         346
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     160
    BANK1           256    203     227
    BANK2           256      0     222
    BANK3           256     35     163
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_102(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_102(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_102(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_102(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_113(CODE[5]), STR_111(CODE[14]), STR_109(CODE[16]), STR_100(CODE[13]), 
		 -> STR_98(CODE[12]), STR_96(CODE[16]), STR_94(CODE[15]), STR_92(CODE[15]), 
		 -> STR_90(CODE[21]), STR_88(CODE[21]), STR_86(CODE[26]), STR_84(CODE[14]), 
		 -> STR_82(CODE[13]), STR_80(CODE[18]), STR_78(CODE[15]), STR_76(CODE[16]), 
		 -> STR_73(CODE[17]), STR_71(CODE[16]), STR_60(CODE[11]), STR_57(CODE[10]), 
		 -> STR_55(CODE[13]), STR_53(CODE[11]), STR_50(CODE[4]), STR_49(CODE[6]), 
		 -> STR_47(CODE[16]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK3[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_133(CODE[7]), printf@c(BANK1[1]), STR_132(CODE[16]), STR_131(CODE[22]), 
		 -> STR_130(CODE[21]), STR_129(CODE[27]), STR_128(CODE[41]), STR_127(CODE[32]), 
		 -> STR_126(CODE[19]), STR_125(CODE[16]), STR_124(CODE[15]), STR_123(CODE[16]), 
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), ringBufferLUT@channel_name(BANK3[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2023
		 -> STR_119(CODE[30]), STR_118(CODE[23]), STR_117(CODE[39]), STR_116(CODE[36]), 
		 -> STR_115(CODE[33]), STR_114(CODE[2023]), STR_112(CODE[53]), STR_110(CODE[58]), 
		 -> STR_108(CODE[71]), STR_107(CODE[63]), STR_106(CODE[37]), STR_105(CODE[46]), 
		 -> STR_104(CODE[102]), STR_103(CODE[86]), STR_101(CODE[25]), STR_99(CODE[42]), 
		 -> STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), STR_91(CODE[34]), 
		 -> STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), STR_83(CODE[56]), 
		 -> STR_81(CODE[34]), STR_79(CODE[34]), STR_77(CODE[35]), STR_75(CODE[45]), 
		 -> STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), STR_69(CODE[48]), 
		 -> STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[57]), STR_54(CODE[85]), 
		 -> STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), STR_46(CODE[4]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), 
		 -> terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_131(CODE[22]), STR_130(CODE[21]), STR_129(CODE[27]), STR_128(CODE[41]), 
		 -> STR_127(CODE[32]), STR_126(CODE[19]), STR_125(CODE[16]), STR_124(CODE[15]), 
		 -> STR_123(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_132(CODE[16]), STR_131(CODE[22]), STR_130(CODE[21]), STR_129(CODE[27]), 
		 -> STR_128(CODE[41]), STR_127(CODE[32]), STR_126(CODE[19]), STR_125(CODE[16]), 
		 -> STR_124(CODE[15]), STR_123(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___fltol->i2___flmul
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fladd
    _eval_poly->i2___fladd

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->_fround
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _terminal_ringBufferPull->_ringBufferLUT

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  534668
                                            201 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   65502
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  323809
                                            192 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       39    37      2  323081
                                            188 BANK1      4     2      2
                                              0 BANK3     35    35      0
                    _TMR7_StartTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   78171
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   78171
                                            170 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   65502
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    1549
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    4993
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     223
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1701
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3535
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   65502
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10   65502
                                            124 BANK1     46    36     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   12861
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   12582
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7934
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     634
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1041
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1178
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     662
                                            111 BANK1     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    6205
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    5600
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1070
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    2236
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                     _TMR7_StopTimer
 ---------------------------------------------------------------------------------
 (11) _TMR7_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  185619
                                            126 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   38965
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   38965
                                             30 BANK0     38    36      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     366
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ISR                                            0     0      0  146414
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  146414
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   94616
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   45173
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   40139
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1033
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   24747
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   38006
                                             47 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   35910
                                             30 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4439
                                             22 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    1783
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7601
                                             12 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     756
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     477
                                             72 COMRAM    10     6      4
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     360
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10270
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4164
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StartTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion
       _TMR7_StopTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fltol
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___fltol
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___fltol
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
               i2___fltol
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
           i2___fltol
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___fltol
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     23      A3      12       63.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      DE      10       86.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CB      E3       7       88.7%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     362       8        0.0%
DATA                 0      0     362       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 05 23:42:00 2018

                           ??i2_TMR7_StopTimer 0001                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
             __end_of_TMR5_SetInterruptHandler 8110                                   ___fldiv@sign 0149  
                                  __CFG_CP$OFF 000000                                             l57 8022  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize 8166  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback 7C10                                            l381 7A7E  
                                          l382 7A7A                                            l391 79FC  
                                          l392 7A22                                            l384 7AA8  
                                          l393 7A20                                            l388 79E6  
                                          l389 79E2                                            l996 7342  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                                          _Ipk 024C                                            _Vpk 0250  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString 77F8                                            _sin 47C6  
                   currentMeasuredToPeak@Angle 0093                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 5E3A                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0034  
                                  i2___flmul@b 0030                                    i2___flsub@a 007A  
                                  i2___flsub@b 0076                               ??_TMR7_StopTimer 0100  
                                 ___flmul@aexp 0163                                   ___flmul@bexp 0168  
                 ?_ADCC_SetADIInterruptHandler 0117                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___fltol@exp1 0178                                           l1040 6728  
                                         l1041 66FA                                           l2010 3F76  
                                         l2002 3EC0                                           l1202 0408  
                                         l1210 0338                                           l2011 3F84  
                                         l2003 3EBC                                           l1203 03E4  
                                         l1211 0350                                           l1035 66A4  
                                         l1300 7880                                           l2020 3FE4  
                                         l2012 3F88                                           l2100 39E6  
                                         l1204 0398                                           l1212 0368  
                                         l2005 3F1C                                           l1213 0380  
                                         l1205 02D8                                           l1037 66E0  
                                         l1302 7888                                           l2030 40C8  
                                         l2006 3EE0                                           l1070 34C0  
                                         l1230 065E                                           l1222 0516  
                                         l1206 03C8                                           l1038 66C4  
                                         l2023 407E                                           l2015 3FF6  
                                         l2111 3AC2                                           l1071 34D8  
                                         l1207 02F0                                           l2040 4138  
                                         l2032 40D2                                           l2016 3FBC  
                                         l2200 5DD8                                           l2112 3AE0  
                                         l1080 35C2                                           l1064 3508  
                                         l1072 34F0                                           l1240 07EA  
                                         l1232 06B0                                           l1224 0568  
                                         l1216 0458                                           l1208 0308  
                                         l2025 408E                                           l2009 3F98  
                                         l2201 5DCC                                           l1073 3622  
                                         l1081 35DA                                           l1065 3460  
                                         l1209 0320                                           l2106 3A3C  
                                         l1410 135A                                           l1090 36D0  
                                         l1082 35F2                                           l1074 354A  
                                         l1066 3532                                           l1242 082E  
                                         l1234 0702                                           l1226 05BA  
                                         l1218 04C4                                           l2019 3FE0  
                                         l1411 1372                                           l1403 1318  
                                         l1091 36E8                                           l1075 3658  
                                         l1083 360A                                           l1067 3478  
                                         l1251 09B4                                           l1219 04A0  
                                         l2044 415E                                           l2028 40B2  
                                         l2108 3A80                                           l1340 2D70  
                                         l1420 1554                                           l1412 14BC  
                                         l1404 1284                                           l2140 79B0  
                                         l1084 3748                                           l1092 3700  
                                         l1076 3562                                           l1068 3490  
                                         l1244 0876                                           l1236 0754  
                                         l1228 060C                                           l2045 4166  
                                         l2037 40F2                                           l2205 5DF6  
                                         l2109 3A9E                                           l1341 2C78  
                                         l1413 13D4                                           l2061 5106  
                                         l1309 7DEC                                           l1093 3718  
                                         l1085 3670                                           l1077 357A  
                                         l1069 34A8                                           l2046 4168  
                                         l2206 5E28                                           l1334 4F08  
                                         l1422 15F2                                           l1406 1332  
                                         l2054 5080                                           l1086 377E  
                                         l1094 3730                                           l1078 3592  
                                         l1246 08BE                                           l1238 07A6  
                                         l1190 013A                                           l1423 156E  
                                         l1415 14D6                                           l1407 1324  
                                         l1351 0CB2                                           l2071 5210  
                                         l2063 512E                                           l2055 507C  
                                         l1087 3688                                           l1079 35AA  
                                         l1344 2D3E                                           l1440 1660  
                                         l1416 14C8                                           l1352 0CC4  
                                         l2080 528C                                           l2072 51F2  
                                         l2064 51DC                                           l2160 7802  
                                         l2240 6F96                                           l2136 79A0  
                                         l1088 36A0                                           l1256 0B92  
                                         l1248 0B40                                           l1184 003E  
                                         l1337 4FF8                                           l1345 2EC4  
                                         l1433 1624                                           l1409 1356  
                                         l1361 0D96                                           l1353 0D88  
                                         l2081 52B0                                           l2065 518C  
                                         l1281 77B6                                           l2145 78AE  
                                         l2153 7CD4                                           l2241 6F24  
                                         l2137 799A                                           l1089 36B8  
                                         l1249 08F8                                           l1290 7858  
                                         l2090 37E6                                           l1442 1774  
                                         l1418 1530                                           l1362 0F04  
                                         l1370 0DD0                                           l1354 0D5C  
                                         l2082 52DA                                           l2066 51B4  
                                         l2058 50C0                                           l1282 77C0  
                                         l2146 78A4                                           l2154 7CCA  
                                         l2242 6F8E                                           l2170 7644  
                                         l1258 0BE4                                           l1194 01A0  
                                         l1186 007A                                           l1347 2F8A  
                                         l1443 16E4                                           l1435 1644  
                                         l1355 0D08                                           l2083 52E6  
                                         l2059 50BC                                           l2235 7CA4  
                                         l2139 79BA                                           l1292 7860  
                                         l2092 3816                                           l1428 1608  
                                         l1380 14E0                                           l2084 52E8  
                                         l2068 51DA                                           l1196 0204  
                                         l1188 00CC                                           l2093 3812  
                                         l1437 177A                                           l1429 15B0  
                                         l1381 0F18                                           l1365 0D9A  
                                         l1277 77CA                                           l2181 701C  
                                         l1294 7868                                           l2190 5D28  
                                         l1710 6210                                           l2094 3826  
                                         l1382 0F66                                           l1358 0E96  
                                         l1374 0E56                                           l2078 5248  
                                         l1278 77AC                                           l2182 6FB4  
                                         l2166 7608                                           l1198 02A0  
                                         l2191 5D38                                           l2095 3844  
                                         l1439 175C                                           l1375 0E2A  
                                         l1367 0D9E                                           l2159 7808  
                                         l2183 6FF0                                           l2167 7638  
                                         l1199 025A                                           l1296 7870  
                                         l2192 5D56                                           l1712 622E  
                                         l2088 37D6                                           l1392 1148  
                                         l1384 0FD4                                           l1368 0DC6  
                                         l1713 6270                                           l2089 37D2  
                                         l1385 1054                                           l1377 0E6A  
                                         l1369 0DD6                                           l2169 7654  
                                         l1298 7878                                           l1730 6528  
                                         l2194 5D68                                           l1722 6302  
                                         l1714 62A0                                           l1378 0E7E  
                                         l1650 6BB6                                           l2195 5D5C  
                                         l1723 62F6                                           l2099 3A04  
                                         l1387 1082                                           l1379 0E90  
                                         l1900 70F4                                           l1716 62DE  
                                         l1820 6082                                           l1388 10CC  
                                         l1901 70E8                                           l2197 5DA6  
                                         l1717 62CE                                           l1821 6072  
                                         l1389 11AE                                           l1653 6C06  
                                         l1734 7E14                                           l1910 7686  
                                         l2198 5D8E                                           l1814 5FB8  
                                         l1670 707A                                           l1398 1226  
                                         l1654 6BC8                                           l1727 6478  
                                         l1911 767A                                           l1647 6B74  
                                         l1728 64AC                                           l1760 6A2E  
                                         l1904 7128                                           l1816 5FE4  
                                         l1680 7466                                           l1656 6C3A  
                                         l1648 6B6E                                           l1729 64EA  
                                         l1905 7136                                           l1817 601E  
                                         l1673 70A2                                           l1914 76AE  
                                         l1826 60A6                                           l1818 6046  
                                         l1674 70AC                                           l1666 7054  
                                         l1682 747C                                           l1915 76BC  
                                         l1827 609A                                           l1675 70BA  
                                         l1667 7064                                           l1683 7474  
                                         l1765 6A62                                           l1757 69D2  
                                         l1669 7082                                           l1766 6A56  
                                         l1686 7494                           _ADCC_StartConversion 813A  
                                         l1759 6A3E                                           l1687 749E  
                                         l1679 745A                                           l1768 6A7E  
                                         l1688 74AC                                           l1874 7FAA  
                                         l1997 3E78                                           l1998 3E74  
                                         ?_sin 007E                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC5                                           STR_2 FFB0  
                                         STR_3 FFB9                                           STR_4 F4A4  
                                         STR_6 FFB0                                           STR_7 FFB9  
                                         STR_9 FFBD                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 019B  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           _PLLR 007230  
                                         _TMR6 000FAF                              ??_TMR7_StartTimer 0117  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                               __end_of_ADCC_ISR 7EFA  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                         _Irms 01CF                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 79DC                                           _Vrms 01CB  
                                         _acos 7526                                           _fabs 7C4C  
                                         _atan 5AB0                                           _asin 44C2  
                                         _atoi 6B6C                                           _main 72CE  
                                         _line 0279                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
                                         _sqrt 4AC0                                   i2___flneg@f1 002C  
                                         sin@f 007E                                           sin@y 0082  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 010A                                _timer5ReloadVal 0274  
                                 i2___fltol@f1 0049                                ___fldiv@new_exp 014E  
                              __end_ofi2_scale 343C                   __end_of_EUSART2_Transmit_ISR 7D2C  
                              __end_ofi2_putch 815E                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
                     __size_ofi2_EUSART2_Write 004A                                _timer7ReloadVal 01DB  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0128                               __end_of_HLVD_ISR 816E  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 8028  
                     ?_terminal_textAttributes 01AA                              ??_TMR7_WriteTimer 0102  
                                        l12000 175C                                          l12028 7644  
                                        l10438 6560                                          l12244 6F24  
                                        l13228 024A                                          l13238 029A  
                                        l13360 08E8                                          l11770 0E2A  
                                        l13370 092E                                          l12548 6C02  
                                        l11950 1572                                          l11846 111A  
                                        l11838 10CC                                          l13376 0964  
                                        l11890 1324                                          l11866 122A  
                                        l13378 09B4                                          l11964 15B4  
                                        l12676 52DA                                          l14276 77E4  
                                        l14278 77EE                                          l13818 6694  
                                        l13828 66BA                                          ?_acos 00A9  
                                        ?_fabs 0030                                  ___fltol@sign1 0177  
                                        ?_atan 007C                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 4184                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 5304  
                                        _ADREF 000F58                                __end_of___awdiv 70C4  
                              __end_of___flneg 7E26                                          _ADPRE 000F5E  
                                        STR_10 FFC1                                          STR_11 FFF6  
                                        STR_12 FFCA                                          STR_20 FFC9  
                                        STR_13 FD70                                          STR_21 FFCC  
                                        STR_30 FF4D                                          STR_14 FFDF  
                                        STR_22 FFD2                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_40 F76D                                          STR_16 FFF1  
                                        STR_24 FFDE                                          STR_32 FFD5  
                                        STR_41 FE28                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_18 FFCA                                          STR_42 FFB0  
                                        STR_26 FFEA                                          STR_34 FFE1  
                                        STR_50 FFB5                                          STR_43 FFB9  
                                        STR_19 FFFB                                          STR_27 FFF0  
                                        STR_35 FFE7                                          STR_51 FDFC  
                                        STR_28 FFF0                                          STR_36 FFED  
                                        STR_44 FFA0                                          STR_60 FF67  
                                        STR_52 F9E3                                __end_of___awmod 74B6  
                                        STR_29 FFFB                                          STR_45 FFB0  
                                        STR_37 FFF3                                          STR_61 FFA6  
                                        STR_53 FF5C                                          STR_38 FFF3  
                                        STR_46 FFB9                                          STR_62 FF94  
                                        STR_70 FD17                                          STR_54 F6D4  
                                        STR_39 FFFD                                          STR_63 FF8D  
                                        STR_55 FF1D                                          STR_71 FE7E  
                                        STR_47 FE5E                                          STR_64 FEF4  
                                        STR_80 FDD9                                          STR_72 FD87  
                                        STR_48 F97F                                          STR_56 F86B  
                                        _ADRPT 000F66                                          STR_49 FF9A  
                                        STR_57 FF72                                          STR_65 FF02  
                                        STR_73 FE0D                                          STR_81 FBC9  
                                        STR_82 FF2A                                          STR_66 FECA  
                                        STR_90 FD9C                                          STR_58 F7B2  
                                        STR_74 F770                                          STR_67 FD5C  
                                        STR_91 FC0D                                          STR_75 FA40  
                                        STR_59 F914                                          STR_83 F8DC  
                                        STR_68 FF7C                                          STR_84 FED8  
                                        STR_92 FEAC                                          STR_76 FE3E  
                                        STR_77 FBA6                                          STR_85 FB38  
                                        STR_69 F9B3                                          STR_93 F8A4  
                                        STR_94 FEBB                                          STR_78 FE9D  
                                        STR_86 FCCB                                          STR_87 FC72  
                                        STR_79 FC2F                                          STR_95 FAE9  
                                        STR_96 FE6E                                          STR_88 FDB1  
                              __end_of___flmul 3AF6                                          STR_89 FBEB  
                                        STR_97 FAC0                                          STR_98 FF50  
                                        STR_99 FA6D                                __end_of___flsub 7B02  
                              __end_of___fltol 6A90                                __end_of___lldiv 7148  
                                        ?_sqrt 006C                                          u13010 7086  
                              ___awdiv@divisor 011F                                          u14000 0E0A  
                              __end_of___llmod 76CE                                          u13070 7480  
                                        u14030 0E4C                                          u12520 3FA0  
                                        u13320 60AC                                          u13241 5F9C  
                                        u14210 1268                                          u14130 1092  
                                        u14050 0EC6                                          u14140 10DE  
                                        u13261 5FC8                                          u14037 0E42  
                                        u12470 3F4C                                          u12480 3F5C  
                                        u13600 70F8                                          u14240 1340  
                                        u15200 529A                                          u14057 0EBC  
                                        u12730 4144                                          u12650 40D6  
                                        u12490 3F5E                                          u13530 69F0  
                                        u14250 1350                                          u14170 111A  
                                        u15210 52BE                                          u12900 3A38  
                                        u14420 178C                                          u13630 768A  
                                        u13710 5DE2                                          u13390 6308  
                                        u14430 17BC                                          u13535 69E6  
                                        _T5CLK 000FC6                                          u12680 40EE  
                                        u12840 3832                                          u13570 6A68  
                                        u12930 3A8E                                          u12850 39A8  
                                        u15170 5244                                          u12940 3AAC  
                                        u14437 17B2                                          u14630 782A  
                                        u12855 399E                                          _T5CON 000FC3  
                                        u13930 0CF0                                          u14660 6F56  
                                        u14637 7820                                          u13950 0D40  
                                        u15710 010A                                          _T7CLK 000F33  
                                        u13960 0D7E                                          _T6CON 000FB1  
                                        u13937 0CE6                                          u14930 7034  
                                        u14860 78E6                                          u13957 0D36  
                                        u13990 0E04                                 __CFG_DEBUG$OFF 000000  
                                        u13967 0D74                                          u15760 029A  
                                        _T7CON 000F30                                          u14881 77A2  
                                        u13997 0DFA                                          u14895 7C3C  
                                        u15970 092E                                          u15980 0956  
                                        u16780 66BA                                          _T6HLT 000FB2  
                                        u15990 0964                                          u17737 72E2  
                                        i1l223 007C                                          i1l225 009C  
                                        i1l403 7D26                                          i1l227 00A8  
                                        i1l404 7D22                                          i1l229 00B2  
                                        i2l212 6CAE                                          i2l214 6CBA  
                                        i2l216 6CC4                                          i1l640 7F38  
                                        i2l410 6E02                                          i2l411 6E24  
                                        i2l414 6E28                                          i2l416 6E78  
                                        i2l409 6DDE                                          _T6TMR 000FAF  
                                        i2l391 7A46                                          i2l392 7A6C  
                                        i2l393 7A6A                                          i1l937 7C0C  
                                        i2l714 803A                                          _T6RST 000FB4  
                                        i2l388 7A30                                          i2l389 7A2C  
                                        i1l981 6D78                                          i1l973 6D38  
                                        i1l990 6DC6                                          i1l982 6D86  
                                        i1l974 6D46                                          i1l968 6D18  
                                        i1l985 6D98                                          i1l977 6D58  
                                        i1l969 6D26                                          i1l986 6DA6  
                                        i1l978 6D66                                          i2l941 2AEC  
                                        i1l989 6DB8                                          i2l950 2470  
                                        i2l942 22F0                                          i2l960 2832  
                                        i2l952 2524                                          i2l953 2718  
                                        i2l962 290A                                          i2l954 2634  
                                        i2l946 2370                                          i2l955 25EE  
                                        i2l964 2ADE                                          i2l956 2622  
                              ___awdiv@counter 0121                                          i2l957 2656  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 631A  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a EC99                             __end_ofsin@coeff_b ECBD  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 01D3  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  i2___fladd@grs 006B  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0100                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 7D94  
                             __end_of_TMR6_ISR 7ED2                               __end_of_TMR7_ISR 7D60  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                    ??_terminal_ringBufferPull 01C0                                __end_of_dpowers EC4D  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 67A0  
                                        _frexp 73CA                                          _errno 0272  
                        ?_ADCC_StartConversion 0001                                          _scale 2B18  
                              __end_of_isdigit 7FB2                                          atan@f 007C  
                                        atan@x 0084                                          atan@y 0080  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 0020                                          asin@x 0091  
                                        asin@y 00A1                                          atoi@a 0122  
                                        atoi@s 011D                                          _putch 80D8  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge 6684  
                                        sin@x2 008A                                          tablat 000FF5  
                             __end_ofi2___wmul 7F6C                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                                        sqrt@a 006C                                          sqrt@i 0075  
                                        sqrt@p 007A                                          status 000FD8  
                                        wtemp6 0060                                  i2___flmul@grs 003E  
                              __end_of_strncmp 6FB2                                __end_of_strncpy 7666  
                             __end_ofi2_fround 5866                 ?_INTERRUPT_InterruptManagerLow 0001  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DC                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf 22EA                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 811E  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 8110  
                              _TMR5_Initialize 78F2                                __initialization 724E  
                            i2___lldiv@divisor 0005                                   __end_of_acos 7594  
                                 __end_of_fabs 7C88                                   __end_of_atan 5CE6  
                                 __end_of_asin 47C6                                   __end_of_atoi 6C44  
                                 __end_of_main 734E                              i2___lldiv@counter 000D  
                                 __end_of_sqrt 4D88                                     i2printf@ap 008F  
                                   i2printf@cp 008D                          __end_of_ringBufferLUT 0CA4  
                               __CFG_SCANE$OFF 000000                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                       ??_acos 005E                                         ??_fabs 0034  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 01C9  
                     _TMR5_SetInterruptHandler 8102                                         ??_sqrt 0070  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0124                                _TMR6_Initialize 7D94  
                           _TRIAC_Firing_Angle 00FB                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 75FE  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01E0                                         ?_floor 006C  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 FF37                                         _ADLTHL 000F6A  
                                       STR_101 FCE5                                         STR_102 FCFE  
                                       STR_110 F831                                         STR_111 FEE6  
                                       STR_103 F67E                                         STR_112 F94A  
                                       STR_104 F618                                         STR_120 FF44  
                                       STR_113 FFAB                                         STR_105 FA12  
                                       STR_121 FF10                                         STR_106 FB5D  
                                       STR_114 ECBD                                         _ADRESH 000F64  
                                       STR_122 FF7C                                         STR_130 FD72  
                                       STR_115 FC51                                         STR_107 F7F2  
                                       STR_131 FD46                                         STR_123 FE1E  
                                       STR_132 FE1E                                         STR_116 FB82  
                                       STR_108 F729                                         STR_124 FE8E  
                                       STR_133 FF86                                         STR_109 FE4E  
                                       STR_117 FB11                                         STR_125 FE2E  
                                       STR_134 FDEB                                         STR_118 FD2F  
                                       _ADRESL 000F63                                         STR_126 FDC6  
                                       STR_119 FC92                                         STR_127 FAA0  
                                       STR_128 FA97                                         STR_129 FCB0  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l2010 42B4  
                                       i2l2002 41FE                                         i2l2011 42C2  
                                       i2l2003 41FA                                         i2l2020 4322  
                                       i2l2012 42C6                                         i2l2100 3D36  
                                       i2l2005 425A                                         i2l2030 4406  
                                       i2l2006 421E                                         i2l2023 43BC  
                                       i2l2015 4334                                         i2l2111 3E12  
                                       i2l2040 4476                                         i2l2032 4410  
                                       i2l2016 42FA                                         i2l2112 3E30  
                                       i2l2200 5F28                                         i2l2025 43CC  
                                       i2l2009 42D6                                         i2l2201 5F1C  
                                       i2l2121 4B12                                         i2l2106 3D8C  
                                       i2l2130 4C64                                         i2l2122 4B2C  
                                       i2l1410 1E7E                                         i2l2019 431E  
                                       i2l2211 67EA                                         i2l1411 1E96  
                                       i2l1403 1E3C                                         i2l2044 449C  
                                       i2l2028 43F0                                         i2l2108 3DD0  
                                       i2l2220 73E8                                         i2l2212 67D8  
                                       i2l2132 4D4E                                         i2l2124 4B66  
                                       i2l1340 3200                                         i2l1420 2076  
                                       i2l1412 1FDE                                         i2l1404 1DAA  
                                       i2l2045 44A4                                         i2l2037 4430  
                                       i2l2109 3DEE                                         i2l2205 5F46  
                                       i2l2061 53BA                                         i2l2125 4B92  
                                       i2l1341 3110                                         i2l1413 1EF8  
                                       i2l2046 44A6                                         i2l2206 5F78  
                                       i2l2214 6808                                         i2l2054 5334  
                                       i2l2126 4BF0                                         i2l1334 572A  
                                       i2l1422 2114                                         i2l1406 1E56  
                                       i2l2215 68A0                                         i2l2071 54C4  
                                       i2l2063 53E2                                         i2l2055 5330  
                                       i2l2127 4C9A                                         i2l2119 4B02  
                                       i2l1423 2090                                         i2l1415 1FF8  
                                       i2l1407 1E48                                         i2l1351 17D8  
                                       i2l2080 5540                                         i2l2072 54A6  
                                       i2l2064 5490                                         i2l2128 4BF6  
                                       i2l1344 31D0                                         i2l1440 2182  
                                       i2l1416 1FEA                                         i2l1352 17EA  
                                       i2l2081 5564                                         i2l2065 5440  
                                       i2l2129 4C3C                                         i2l1337 5812  
                                       i2l1345 334C                                         i2l1433 2146  
                                       i2l1409 1E7A                                         i2l1361 18BA  
                                       i2l1353 18AC                                         i2l2090 3B36  
                                       i2l2082 558E                                         i2l2066 5468  
                                       i2l2058 5374                                         i2l1442 2294  
                                       i2l1418 2052                                         i2l1362 1A28  
                                       i2l1370 18F4                                         i2l1354 1880  
                                       i2l2083 559A                                         i2l2059 5370  
                                       i2l1611 5B60                                         i2l1347 340C  
                                       i2l1443 2204                                         i2l1435 2166  
                                       i2l1355 182E                                         i2l2092 3B66  
                                       i2l1700 6996                                         i2l2084 559C  
                                       i2l2068 548E                                         i2l1612 5CA8  
                                       i2l1428 212A                                         i2l1380 2002  
                                       i2l2093 3B62                                         i2l1701 68FE  
                                       i2l1437 229A                                         i2l1429 20D2  
                                       i2l1381 1A3C                                         i2l1365 18BE  
                                       i2l2094 3B76                                         i2l2190 5E78  
                                       i2l2078 54FC                                         i2l1614 5CC0  
                                       i2l1710 6338                                         i2l1382 1A8A  
                                       i2l1358 19BA                                         i2l1374 197A  
                                       i2l2095 3B94                                         i2l2191 5E88  
                                       i2l1439 227C                                         i2l1375 194E  
                                       i2l1367 18C2                                         i2l2088 3B26  
                                       i2l2192 5EA6                                         i2l1712 6356  
                                       i2l1392 1C6C                                         i2l1384 1AF6  
                                       i2l1368 18EA                                         i2l2089 3B22  
                                       i2l1609 5AF4                                         i2l1713 6398  
                                       i2l1385 1B74                                         i2l1377 198E  
                                       i2l1369 18FA                                         i2l1730 6648  
                                       i2l2194 5EB8                                         i2l1706 7C76  
                                       i2l1722 642A                                         i2l1714 63C8  
                                       i2l1378 19A2                                         i2l2099 3D54  
                                       i2l2195 5EAC                                         i2l1723 641E  
                                       i2l1387 1BA2                                         i2l1379 19B4  
                                       i2l1900 71FA                                         i2l1716 6406  
                                       i2l1820 61B4                                         i2l1388 1BEE  
                                       i2l2197 5EF6                                         i2l1901 71EE  
                                       i2l1717 63F6                                         i2l1821 61A4  
                                       i2l1389 1CD4                                         i2l2198 5EDE  
                                       i2l1734 7E70                                         i2l1590 451C  
                                       i2l1910 76EC                                         i2l1814 60EA  
                                       i2l1670 7182                                         i2l1398 1D4C  
                                       i2l1727 6598                                         i2l1911 76E0  
                                       i2l1728 65CC                                         i2l1760 6B0A  
                                       i2l1592 4644                                         i2l1904 722E  
                                       i2l1816 6116                                         i2l1680 74D6  
                                       i2l1729 660A                                         i2l1593 4724  
                                       i2l1905 723C                                         i2l1817 6150  
                                       i2l1673 71AA                                         i2l1914 7714  
                                       i2l1826 61D8                                         i2l1818 6178  
                                       i2l1674 71B4                                         i2l1666 715C  
                                       i2l1682 74EC                                         i2l1915 7722  
                                       i2l1827 61CC                                         i2l1675 71C2  
                                       i2l1667 716C                                         i2l1683 74E4  
                                       i2l1765 6B3E                                         i2l1757 6AAE  
                                       i2l1669 718A                                         i2l1766 6B32  
                                       i2l1686 7504                                         i2l1759 6B1A  
                                       i2l1687 750E                                         i2l1679 74CA  
                                       i2l1768 6B5A                                         i2l1688 751C  
                                       i2l1874 7FE8                                         i2l1990 4918  
                                       i2l1991 4988                                         i2l1992 4AAE  
                                       i2l1997 41B6                                         i2l1989 47FA  
                                       i2l1998 41B2                                         _RG7PPS 000E89  
                                       i2l7452 558E                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 004D                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                             __end_of___xxtofl 5E3A                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 7942                                   i2_scale$4063 004D  
                             __end_of__powers_ EBF1           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 67A0                                         ___flge 6442  
                                    ??___fladd 0131                                         ___wmul 7E82  
                                    ??___fldiv 0145                                      ??___awdiv 0121  
                                    ??___flneg 0129                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___flmul 015E  
                                    ??___flsub 0145                                      ??___fltol 0173  
                                    ??___lldiv 011F                                      ??___llmod 012C  
                     ??_terminal_setCursorHome 01AA                                         _fround 4D88  
                                       clear_0 7294                                         clear_1 72A0  
                                       clear_2 72AC                                         clear_3 72BC  
                         _eusart2RxStringReady 07F8                               ___awdiv@quotient 0123  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0119                                 i2___fldiv@sign 001F  
                              ___awmod@counter 011B                                         _printf 0CA4  
                                       _strcat 7990                                         _strchr 7C88  
                                       _strcmp 78A2                                         _strcpy 7CC0  
                                    ?_ADCC_ISR 0001                                         _strlen 77F8  
                               i2___awdiv@sign 000C                                         _strstr 6FB2  
                                       floor@i 0070                                         floor@x 006C  
                 getCauseOfResetString@strings 02B9                               _background_color 0276  
                              _ADCC_Initialize 7734                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 22EA                                 _PMD_Initialize 7FF0  
                      FLASH_ReadWord@flashAddr 011B                              __end_ofi2___fladd 44C2  
                                    ??_isdigit 0117                              __end_ofi2___fldiv 55B8  
                            __end_ofi2___awdiv 71CC                              __end_ofi2___flneg 7E82  
                            __end_ofi2___awmod 7526                              __end_ofi2___flmul 3E46  
                            __end_ofi2___flsub 7B4A                              __end_ofi2___fltol 6B6C  
                            __end_ofi2___lldiv 724E                                         sin@sgn 008E  
                            __end_ofi2___llmod 7734                                   __mediumconst EBBC  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 7CF6  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117    ADCC_SetADIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01AA                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 0014                                _eusart2RxBuffer 0200  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                      __end_of_TMR5_Initialize 7942                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit 7FF0                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize 7E26                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler 8188          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 8186                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 72C4  
                               i2___fltol@exp1 0052                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 0095  
                           ?_SYSTEM_Initialize 0001                                   eval_poly@res 0078  
                                ___rparam_used 000001                                     ___fltol@f1 016F  
                              _TMR5_WriteTimer 8028                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                            i2___llmod@counter 0016                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 01C3                            __size_ofi2___xxtofl 0150  
                   __end_of_getMajorRevisionID 7C4C                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01AA  
                                 __pidataBANK0 816E                                   __pidataBANK2 7F6C  
                          ??_SYSTEM_Initialize 011C                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 68B2                                  __end_of_frexp 7444  
                                __end_of_scale 2FBC                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 80E6                              ??_HLVD_Initialize 0117  
                                  i2printf@idx 008A                       ??_terminal_clearTerminal 01AA  
                                  i2printf@len 008B                                    i2printf@exp 0093  
                                  i2printf@val 0099                        __end_of_TMR6_Initialize 7DC6  
                     __size_of_getCauseOfReset 0052                         __end_of_PMD_Initialize 800C  
                        _getCauseOfResetString 7DC6                                      ?i2___flge 0034  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 7ABA  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 60BE  
                                   __div_to_l_ 61F0                                _TMR7_StartTimer 8174  
                    __size_ofi2_TMR7_StopTimer 0006                             __size_of_getUserID 0044  
                                    ?i2_fround 0049                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                                      ?i2_printf 007E  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0124  
                                      ??_floor 005E                                __div_to_l_@cntr 0123  
                                      ??_frexp 0007                                        ??_scale 0173  
                    __end_of_SYSTEM_Initialize 7E54                                __div_to_l_@quot 011F  
                                      ??_putch 0118                                   peakToRMS@RMS 00C5  
                           i2___lldiv@quotient 0009                                  _eusart2RxHead 00F4  
                                _eusart2TxHead 01E2                                     __pbssBANK0 00F0  
                                   __pbssBANK1 01CB                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                  _eusart2RxTail 01DF  
                                _eusart2TxTail 01E1                             __size_of_eval_poly 0100  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 7990                             __size_of_peakToRMS 024A  
                                   ??_HLVD_ISR 0100                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011B  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 7F20  
                             ??_FVR_Initialize 0117                                 _peakToRMS$4050 00BD  
                               _peakToRMS$4048 00C1                                 _peakToRMS$4049 00B9  
                        ringBufferLUT@arg_buff 039A                                    _Irms_offset 02D1  
                                      ?___flge 0117              terminal_ringBufferPull@index_2365 01C5  
                                      ?___wmul 0117                          _currentMeasuredToPeak 734E  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 8102  
                      __end_of_ADCC_Initialize 7798                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 017C                                ?_PMD_Initialize 0001  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte 8044  
                                      ?_strstr 0126                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 7B8E                                        u1537_41 60CE  
                                      u1539_41 60FA                                        i2l10442 6680  
                                      i2l13450 194E                                        i2l13630 2094  
                                      i2l13526 1C3E                                        i2l13518 1BEE  
                                      i2l13570 1E48                                        i2l13546 1D50  
                                      i2l13644 20D6                                        i2l13680 227C  
                                    ?___xxtofl 0117                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 6E80                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 0080                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                 __size_of_ADCC_IsConversionDone 000C  
                __end_of_ADCC_IsConversionDone 8154                       _acquisitionTimerCallback 6D10  
                      __end_of_TMR5_WriteTimer 8044               __size_of_terminal_textAttributes 0368  
                                      i2_scale 2FBC                               ?_TMR5_Initialize 0001  
                                      i2_putch 8154                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset 8098          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 8086                              __end_of__npowers_ EC25  
                                      __Hparam 0000                                     _scale$3860 0173  
                                      __Lparam 0000                              __end_of_getUserID 7B8E  
                   ??_TMR5_SetInterruptHandler 011A                                 _adc_error_flag 02F0  
                              __size_of___flge 0122                                        ___fladd 3E46  
                                      ___fldiv 504E                                        ___awdiv 703E  
                                      ___flneg 7DF6                                        ___awmod 7444  
                                      ___flmul 37A4                                        ___flsub 7ABA  
                                      ___fltol 69B2                        __end_of_TMR7_StartTimer 817A  
                                      ___lldiv 70C4                                __size_of___wmul 0028  
                                      ___llmod 7666                         __end_of_FLASH_ReadByte 805E  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord 7BD0  
                                      __pcinit 724E                              __end_of_eval_poly 69B2  
                              __size_of_fround 02C6                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                      __ptext0 72CE                                        __ptext1 8098  
                                      __ptext2 6684                                        __ptext3 0000  
                                      __ptext4 8086                                        __ptext5 343C  
                                      __ptext6 75FE                                        __ptext7 7990  
                                      __ptext8 80A8                                        __ptext9 6FB2  
                            __end_of_peakToRMS 5AB0                                __size_of_printf 0B26  
                currentMeasuredToPeak@Measured 008F                     ringBufferLUT@angle_degrees 0396  
                              __size_of_strcat 004C                                  i2_fround$4061 0051  
                                i2_fround$4062 004D                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers EC6D  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers EC25  
                        _OSCILLATOR_Initialize 800C                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 0055                                        _isdigit 7F90  
                              atan@val_squared 0089                                   __size_of_sin 02FA  
                                 ??i2___xxtofl 0009                                     ??___xxtofl 011B  
                             ___awmod@dividend 0117                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 008D                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 039F                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002E                          i2EUSART2_Write@txData 0001  
                                      _strncmp 6F22                                 __pintcode_body 6C44  
                                      _strncpy 75FE                           end_of_initialization 72C4  
                      __end_of_TMR7_WriteTimer 7F46                        getDeviceIDString@F17550 02CB  
                       _terminal_setCursorHome 8098                                      _PCON0bits 000FD7  
                             ?_TMR7_Initialize 0001                                      i1u1015_20 7BDC  
                                    i1u1016_28 7BE0                                        int_func 6C44  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                                    i1u1754_28 7EBE                                      i2u1212_40 4482  
                                    i2u1204_40 4414                                      i1u1756_28 7D4C  
                      __size_of_TMR7_StopTimer 0006                                      i2u1207_40 442C  
                                    i2u1223_40 3B82                                      i2u1232_40 3DDE  
                                    i2u1224_40 3CF8                                      i1u1768_28 0086  
                                    i2u1224_45 3CEE                                      i2u1233_40 3DFC  
                               i2___xxtofl@arg 000F                                      i2u1229_40 3D88  
                                    i2u1341_40 5B20                                      i2u1342_40 5B22  
                                    i2u1191_40 42DE                                 i2___xxtofl@exp 000E  
                               i2___xxtofl@val 0005                                      i2u1186_40 428A  
                                    i2u1610_40 1928                                      i2u1610_47 191E  
                                    i2u1187_40 429A                                      i2u1611_40 192E  
                                    i2u1188_40 429C                                      i2u1380_40 6B44  
                                    i2u1460_40 4916                                      i2u1604_40 1816  
                                    i2u1604_47 180C                                      i2u1614_40 1970  
                                    i2u1606_40 1864                                      i2u1614_47 1966  
                                    i2u1606_47 185A                                      i2u1455_40 67F6  
                                    i2u1607_40 18A2                                      i2u1607_47 1898  
                                    i2u1376_40 6ACC                                      i2u1552_40 76F0  
                                    i2u1536_40 6430                                      i2u1632_40 1D8E  
                                    i2u1624_40 1BB4                                      i2u1616_40 19EA  
                                    i2u1376_45 6AC2                                      i2u1616_47 19E0  
                                    i2u1545_40 61DE                                      i2u1625_40 1C00  
                                    i2u1482_40 74F0                                      i2u1459_40 4914  
                                    i2u1635_40 1E64                                      i2u1388_40 5F32  
                                    i2u1476_40 718E                                      i2u1636_40 1E74  
                                    i2u1628_40 1C3E                                      i2u1549_40 71FE  
                                    i2u1653_40 22AC                                      i2u1654_40 22DC  
                                    i2u1654_47 22D2                                      i2u1559_40 2462  
                                    i2u1750_48 7D80                                      i2u1752_48 7EE6  
                                    i2u1667_40 6E18                                      i2u1759_48 6C98  
                              ___lldiv@divisor 011B                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 7594                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 008F                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 7A28                                  ??_getDeviceID 0124  
                                      printf@c 01A9                                        printf@f 017C  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 5F8A  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
               _ADCPostProcessingCallback$4051 00DA                 _ADCPostProcessingCallback$4052 00D6  
               _ADCPostProcessingCallback$4053 00C9                 _ADCPostProcessingCallback$4054 00CD  
               _ADCPostProcessingCallback$4055 00D1                               ?_ADCC_Initialize 0001  
                                      sqrt@grs 007B                                        sqrt@exp 007F  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01C7  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler 80F4                          _TMR5_InterruptHandler 0260  
                             i2_TMR7_StopTimer 8180                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 013C                           __CFG_WDTCCS$LFINTOSC 000000  
                            __size_of_ADCC_ISR 0028            __end_of_ADCC_SetADIInterruptHandler 813A  
                  _ADCC_SetADIInterruptHandler 812C                                  ___xxtofl@sign 011F  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0051                                      i2___fladd 4184  
                                    i2___fldiv 5304                                      i2___awdiv 7148  
                                    i2___flneg 7E54                                      i2___awmod 74B6  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 3AF6  
                                    i2___flsub 7B02                                      i2___fltol 6A90  
                                    i2___lldiv 71CC                                      i2___llmod 76CE  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 80B8                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 0CA4                                    ___flmul@grs 0164  
                ??_ADCC_SetADIInterruptHandler 011A                                   _EUSART2_Read 7A72  
                           i2___llmod@dividend 000E                                _HLVD_Initialize 80C8  
                           i2___awdiv@dividend 0007                                      i2_isdigit 7FD2  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0008  
                                    _Avg_Power 0248                   __end_of_INTERRUPT_Initialize 8072  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                             ?_TMR7_StartTimer 0001                                 __end_of___flge 6564  
                __end_of_terminal_printNewline 80B8                                 __end_of___wmul 7EAA  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07F8                            __end_of_getDeviceID 7FD2  
                               __end_of_fround 504E              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 0074  
                             i2___wmul@product 0005                                 __end_of_printf 17CA  
                                i2_printf$4064 0086                             _getMajorRevisionID 7C10  
                               __end_of_strcat 79DC                                 __end_of_strchr 7CC0  
                               __end_of_strcmp 78F2                                   i2printf@flag 0091  
                               __end_of_strcpy 7CF6                                 __end_of_strlen 7850  
                                 i2printf@fval 009D                                 __end_of_strstr 703E  
                                 i2printf@prec 00A1                              __size_ofi2___flge 0120  
                          start_initialization 724E                                     eval_poly@d 0070  
                                   eval_poly@n 0072                                     eval_poly@x 006C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 818C          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 818A                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 60BE                                    __end_of_sin 4AC0  
                                    i2printf@c 00A3                                      i2printf@f 007E  
                      _terminal_textAttributes 343C                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0076                                     ?i2___fltol 0049  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                              __size_ofi2_printf 0B20  
                        __end_of_EUSART2_Write 7A28                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 01AD  
                      __end_ofi2_EUSART2_Write 7A72                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 00F5                               __CFG_LPBOREN$OFF 000000  
                                     ??___flge 011F                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                    __pdataBANK0 00F9  
                                  __pdataBANK2 02B9                                       ??_fround 0173  
                                _ringBufferLUT 0000                 ??_terminal_textAttributesReset 01BC  
                                     ??_printf 0186              getCauseOfReset@return_reset_cause 0117  
                            _POS3P3_ADC_Result 00F0                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 00B1  
                   __end_of_getMinorRevisionID 7F20                                       ??_strstr 012A  
                                    ___fladd@a 012D                                      ___fladd@b 0129  
                                    _Vpk_const 02D5                                     fround@prec 017B  
                               _eusart2RxCount 01DE                                  ?i2__div_to_l_ 0001  
                                    ___fldiv@a 0141                                      ___fldiv@b 013D  
                                    _acos$4056 00AD                                      ___flmul@a 015A  
                                    ___flmul@b 0156                                      ___flsub@a 0141  
                                    ___flsub@b 013D                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK3 0380  
                            __size_of___xxtofl 0154                                   _isdigit$3141 0118  
                ?_TMR5_DefaultInterruptHandler 0001                        __end_of_HLVD_Initialize 80D8  
                          EUSART2_Write@txData 0117                                   _load_on_time 0240  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                                    _asin$4057 00A5                                      _asin$4058 009D  
                                    _asin$4059 0099                                       ?i2_putch 0001  
                                   sin@coeff_a EC85                                     sin@coeff_b ECAD  
                               _TMR7_StopTimer 817A                          _TMR6_InterruptHandler 0269  
                                    __pnvBANK2 02DD                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 6E80                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 7FB2  
                                __pmediumconst EBBC                                       ?___fladd 0129  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                                    __ptext100 22EA                                      __ptext101 8180  
                                    __ptext110 7B02                                      __ptext102 5866  
                                     ?___flneg 0125                                      __ptext111 7E54  
                                    __ptext103 7526                                      __ptext120 4184  
                                    __ptext112 5304                                      __ptext104 44C2  
                                    __ptext121 8072                                      __ptext113 67A0  
                                    __ptext105 4AC0                                      __ptext122 0000  
                                    __ptext114 5E3A                                      __ptext106 5AB0  
                                    __ptext115 6A90                                      __ptext107 7C4C  
                                    __ptext116 6564                                      __ptext108 734E  
                                    __ptext117 73CA                                      __ptext109 47C6  
                                    __ptext118 68B2                                      __ptext119 3AF6  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 016F  
             __end_of_TMR7_SetInterruptHandler 80F4                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ EBF1  
                              _getCauseOfReset 7850                                 ?_ringBufferLUT 01BC  
                                    _getUserID 7B4A              _EUSART2_TxDefaultInterruptHandler 026F  
                                  __pintcodelo 0018                           _VCC_overvoltage_flag 02F2  
                                  __tdiv_to_l_ 5F8A                                       _ADCC_ISR 7ED2  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 0258                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                    _dev_on_time 0244  
                                    _eval_poly 68B2                      ??_terminal_textAttributes 01AC  
                                    _attribute 0278                                      _peakToRMS 5866  
                             __CFG_WDTE$NSLEEP 000000                        ?_terminal_setCursorHome 0001  
                                    _hexpowers EC4D                         _heartbeatTimerCallback 7BD0  
                               _dimming_period 00F9                                    ??i2___fladd 0060  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0030                                    ??i2___awmod 0005  
                                  ??i2___flmul 0038                                 __size_of_floor 0112  
                                  ??i2___flsub 005E                                    ??i2___fltol 004D  
                               __size_of_frexp 007A                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 805E  
                       __end_of_TMR7_StopTimer 8180                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 8148         terminal_textAttributes@input_attribute 01AB  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00AE                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 0097                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR 8166                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0088  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                     __end_ofi2_TMR7_StopTimer 8186                                       _PIE2bits 000E2B  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 631A                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       i1u939_20 8150  
                                     i2u750_40 54F8                                       _PIR8bits 000E3B  
                                     i2u753_40 554E                                       i2u754_40 5572  
                             ??_FLASH_ReadWord 011F                                       i2u828_40 7410  
                   ??_TMR6_SetInterruptHandler 011A                                       i2u828_48 7412  
                     __size_of_TMR5_Initialize 0050                              i2___fldiv@new_exp 0024  
                                     _TMR5_ISR 7D60                                       _TMR6_ISR 7EAA  
                                     _TMR7_ISR 7D2C                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 0122  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 6564  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul 7F46                        __size_of_FVR_Initialize 0008  
                                   printf@flag 0197                                     printf@fval 01A3  
                                   printf@prec 01A7                                     ?_eval_poly 006C  
               __end_of_terminal_setCursorHome 80A8                              i2___awdiv@divisor 0009  
                                     i2_fround 55B8              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 00B1                              i2___awdiv@counter 000B  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 17CA                            __end_ofatan@coeff_a EC85  
                          __end_ofatan@coeff_b ECAD                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                                      copy_data0 7262  
                                    copy_data1 7282                               ?_HLVD_Initialize 0001  
                        ?_INTERRUPT_Initialize 0001                            _current_adc_channel 01DD  
                           i2___awmod@dividend 0001                                ?_TMR7_StopTimer 0001  
             __size_of_terminal_ringBufferPull 011C                               __size_ofi2_scale 0480  
               ??_TMR5_DefaultInterruptHandler 0001                               __size_ofi2_putch 000A  
                                    frexp@eptr 0005                        __end_of_getCauseOfReset 78A2  
              __end_of_terminal_textAttributes 37A4                                     _ADSTATbits 000F65  
 ADCPostProcessingCallback@current_adc_channel 00D5                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 8086                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 812C         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 811E                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01BE  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 0277  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                                  _load_enable 02F1               __end_of_acquisitionTimerCallback 6DD2  
                                  _fround$3858 0177                                    _fround$3859 0173  
                        __end_ofi2__tdiv_to_l_ 61F0                       _TMR7_SetInterruptHandler 80E6  
                        _TMR7_InterruptHandler 0263                             _ADC_Result_Scaling 025C  
      terminal_textAttributes@foreground_color 01AC                                       ___xxtofl 5CE6  
                     __size_of_ADCC_Initialize 0064                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 80C8  
                             __size_of_isdigit 0022                                       __ptext10 6F22  
                                     __ptext11 77F8                                       __ptext20 7B8E  
                                     __ptext12 7C88                                       __ptext21 8044  
                                     __ptext13 7CC0                                       __ptext30 80D8  
                                     __ptext22 7DC6                                       __ptext14 78A2  
                                     __ptext31 79DC                                       __ptext23 6B6C  
                                     __ptext15 7B4A                                       __ptext40 7E82  
                                     __ptext32 7F90                                       __ptext24 504E  
                                     __ptext16 7EFA                                       __ptext41 7666  
                                     __ptext33 4D88                                       __ptext25 8174  
                                     __ptext17 7C10                                       __ptext50 7942  
                                     __ptext42 70C4                                       __ptext34 37A4  
                                     __ptext26 7A72                                       __ptext18 7798  
                                     __ptext51 80E6                                       __ptext43 69B2  
                                     __ptext35 7444                                       __ptext27 80B8  
                                     __ptext19 7FB2                                       __ptext60 80C8  
                                     __ptext52 7D94                                       __ptext44 7ABA  
                                     __ptext36 703E                                       __ptext28 0CA4  
                                     __ptext61 815E                                       __ptext53 80F4  
                                     __ptext45 3E46                                       __ptext37 5F8A  
                                     __ptext29 2B18                                       __ptext70 6D10  
                                     __ptext62 7594                                       __ptext54 78F2  
                                     __ptext46 7DF6                                       __ptext38 61F0  
                                     __ptext71 817A                                       __ptext63 8110  
                                     __ptext55 8102                                       __ptext47 6442  
                                     __ptext39 5CE6                                       __ptext72 813A  
                                     __ptext64 811E                                       __ptext56 7FF0  
                                     __ptext48 7850                                       __ptext81 7D60  
                                     __ptext73 8148                                       __ptext65 7734  
                                     __ptext57 6E80                                       __ptext49 7E26  
                                     __ptext90 55B8                                       __ptext82 8028  
                                     __ptext74 7F20                                       __ptext66 812C  
                                     __ptext58 800C                                       __ptext91 74B6  
                                     __ptext83 818A                                       __ptext75 7EAA  
                                     __ptext59 805E                                       __ptext92 7148  
                                     __ptext84 6DD2                                       __ptext76 8188  
                                     __ptext68 7D2C                                       __ptext93 60BE  
                                     __ptext85 17CA                                       __ptext77 7BD0  
                                     __ptext69 8186                                       __ptext94 631A  
                                     __ptext86 2FBC                                       __ptext78 8166  
                                     __ptext95 7F46                                       __ptext87 8154  
                                     __ptext79 7CF6                                       __ptext96 76CE  
                                     __ptext88 7A28                                       __ptext97 71CC  
                                     __ptext89 7FD2                                       __ptext98 7ED2  
                                     __ptext99 818C                                       _sin$4060 0086  
                                     __powers_ EBBD                         ?_ADCC_IsConversionDone 0001  
                          ringBufferLUT@userID 03A1                                _Temp_ADC_Offset 02D9  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 006A                                     strcpy@from 0119  
                               i2_isdigit$3141 0002                                _Temp_ADC_Result 0254  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 0080  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 082E                           __end_ofi2__div_to_l_ 6442  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                       __size_of_TMR5_WriteTimer 001C  
                    ringBufferLUT@channel_name 0380                      _ADCC_ADI_InterruptHandler 0266  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 8148  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                      printf@idx 0190  
                                    printf@len 0191                                      printf@exp 0199  
                                    printf@val 019F                                    atan@coeff_a EC6D  
                                  atan@coeff_b EC99                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 80A8                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                       __size_of_TMR7_StartTimer 0006  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 0177  
                                    sqrt@tfrac 0076           __end_of_TMR6_DefaultInterruptHandler 818A  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 8188  
         __end_of_ADCC_DefaultInterruptHandler 818E          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler 818C                                       intlevel1 0000  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                             _getMinorRevisionID 7EFA  
                             __tdiv_to_l_@quot 0120                                i2___xxtofl@sign 000D  
                                    strchr@chr 0119                                      strchr@ptr 0117  
                           ringBufferLUT@index 039D                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                            __CFG_CLKOUTEN$OFF 000000                                    _reset_cause 02DD  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 01D7  
            __end_of_ADCPostProcessingCallback 2B18                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                   ?_getDeviceID 0122  
                                     printf@ap 0195                                       printf@cp 0193  
               __size_of_getCauseOfResetString 0030                  __end_of_getCauseOfResetString 7DF6  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult 8072  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 6DD2  
                                     sqrt@frac 0085         __end_of_INTERRUPT_InterruptManagerHigh 6D10  
      __size_of_INTERRUPT_InterruptManagerHigh 6D08                 _INTERRUPT_InterruptManagerHigh 0008  
                                     sqrt@sign 0074                    getMajorRevisionID@REVID_RAW 0125  
                                     sqrt@root 0081                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 815E                                    _printf$3861 018C  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01BC  
                             ___lldiv@quotient 011F                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                              _getDeviceIDString 7798  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 0139  
                           ?_getDeviceIDString 0124          __end_of_INTERRUPT_InterruptManagerLow 010A  
       __size_of_INTERRUPT_InterruptManagerLow 00F2                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 6F22                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 6684                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 00C2  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                          ??_getDeviceIDString 0126                              ?i2_TMR7_StopTimer 0001  
            _EUSART2_RxDefaultInterruptHandler 026C                 __size_of_currentMeasuredToPeak 007C  
                __end_of_currentMeasuredToPeak 73CA  
