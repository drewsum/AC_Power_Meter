

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 06 23:11:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   160                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   161  0000                     
   162                           ; Version 1.45 (B)
   163                           ; Generated 30/01/2018 GMT
   164                           ; 
   165                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   166                           ; All rights reserved.
   167                           ; 
   168                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   169                           ; 
   170                           ; Redistribution and use in source and binary forms, with or without modification, are
   171                           ; permitted provided that the following conditions are met:
   172                           ; 
   173                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   174                           ;        conditions and the following disclaimer.
   175                           ; 
   176                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   177                           ;        of conditions and the following disclaimer in the documentation and/or other
   178                           ;        materials provided with the distribution.
   179                           ; 
   180                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   181                           ;        software without specific prior written permission.
   182                           ; 
   183                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   184                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   185                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   186                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   187                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   188                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   189                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   190                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   191                           ; 
   192                           ; 
   193                           ; Code-generator required, PIC18LF67K40 Definitions
   194                           ; 
   195                           ; SFR Addresses
   196  0000                     
   197                           	psect	idataBANK0
   198  01938C                     __pidataBANK0:
   199                           	opt stack 0
   200                           
   201                           ;initializer for _dimming_period
   202  01938C  7FEE               	dw	32750
   203                           
   204                           ;initializer for _TRIAC_Firing_Angle
   205                           ;main.c: 72: volatile double FVR_ADC_Result;
   206                           ;main.c: 73: volatile double AVSS_ADC_Result;
   207                           ;main.c: 74: volatile double ADC_Result_Scaling;
   208                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   209                           ;main.c: 76: volatile double POS12_ADC_Result;
   210                           ;main.c: 77: volatile double Temp_ADC_Result;
   211                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   212                           ;main.c: 79: double Vpk_const = 169.7056274847714;
   213                           ;main.c: 80: volatile double Vpk;
   214                           ;main.c: 81: volatile double Ipk;
   215                           ;main.c: 82: volatile double Imeas;
   216                           ;main.c: 83: double Irms_offset = -0.113;
   217  01938E  0000               	dw	0
   218  019390  42B4               	dw	17076
   219                           
   220                           	psect	idataBANK1
   221  0193B0                     __pidataBANK1:
   222                           	opt stack 0
   223                           
   224                           ;initializer for _next_channel
   225  0193B0  3C                 	db	60
   226                           
   227                           	psect	idataBANK2
   228  019142                     __pidataBANK2:
   229                           	opt stack 0
   230                           
   231                           ;initializer for getCauseOfResetString@strings
   232  019142  EE                 	db	low STR_154
   233  019143  FD                 	db	high STR_154
   234  019144  5E                 	db	low STR_155
   235  019145  FE                 	db	high STR_155
   236  019146  FE                 	db	low STR_156
   237  019147  FD                 	db	high STR_156
   238  019148  3F                 	db	low STR_157
   239  019149  FD                 	db	high STR_157
   240  01914A  86                 	db	low (STR_159+9)
   241  01914B  F9                 	db	high (STR_159+9)
   242  01914C  7D                 	db	low STR_159
   243  01914D  F9                 	db	high STR_159
   244  01914E  2C                 	db	low STR_160
   245  01914F  FC                 	db	high STR_160
   246  019150  D7                 	db	low STR_161
   247  019151  FC                 	db	high STR_161
   248  019152  AB                 	db	low STR_162
   249  019153  FC                 	db	high STR_162
   250                           
   251                           ;initializer for getDeviceIDString@F17550
   252  019154  30                 	db	low STR_151
   253  019155  FF                 	db	high STR_151
   254  019156  FC                 	db	low STR_152
   255  019157  FE                 	db	high STR_152
   256  019158  73                 	db	low STR_68
   257  019159  FF                 	db	high STR_68
   258                           
   259                           ;initializer for _Irms_offset
   260  01915A  6C8B               	dw	27787
   261  01915C  BDE7               	dw	48615
   262                           
   263                           ;initializer for _Vpk_const
   264                           ;main.c: 72: volatile double FVR_ADC_Result;
   265                           ;main.c: 73: volatile double AVSS_ADC_Result;
   266                           ;main.c: 74: volatile double ADC_Result_Scaling;
   267                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   268                           ;main.c: 76: volatile double POS12_ADC_Result;
   269                           ;main.c: 77: volatile double Temp_ADC_Result;
   270                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   271  01915E  B4A4               	dw	46244
   272  019160  4329               	dw	17193
   273                           
   274                           ;initializer for _Temp_ADC_Offset
   275                           ;main.c: 72: volatile double FVR_ADC_Result;
   276                           ;main.c: 73: volatile double AVSS_ADC_Result;
   277                           ;main.c: 74: volatile double ADC_Result_Scaling;
   278                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   279                           ;main.c: 76: volatile double POS12_ADC_Result;
   280                           ;main.c: 77: volatile double Temp_ADC_Result;
   281  019162  FF99               	dw	65433
   282  019164  441D               	dw	17437
   283                           
   284                           	psect	mediumconst
   285  00D842                     __pmediumconst:
   286                           	opt stack 0
   287  00D842  00                 	db	0
   288  00D843                     __powers_:
   289                           	opt stack 0
   290  00D843  0000               	dw	0
   291  00D845  3F80               	dw	16256
   292  00D847  0000               	dw	0
   293  00D849  4120               	dw	16672
   294  00D84B  0000               	dw	0
   295  00D84D  42C8               	dw	17096
   296  00D84F  0000               	dw	0
   297  00D851  447A               	dw	17530
   298  00D853  4000               	dw	16384
   299  00D855  461C               	dw	17948
   300  00D857  5000               	dw	20480
   301  00D859  47C3               	dw	18371
   302  00D85B  2400               	dw	9216
   303  00D85D  4974               	dw	18804
   304  00D85F  9680               	dw	38528
   305  00D861  4B18               	dw	19224
   306  00D863  BC20               	dw	48160
   307  00D865  4CBE               	dw	19646
   308  00D867  6B28               	dw	27432
   309  00D869  4E6E               	dw	20078
   310  00D86B  02F9               	dw	761
   311  00D86D  5015               	dw	20501
   312  00D86F  78EC               	dw	30956
   313  00D871  60AD               	dw	24749
   314  00D873  F2CA               	dw	62154
   315  00D875  7149               	dw	29001
   316  00D877                     __end_of__powers_:
   317                           	opt stack 0
   318  00D877                     __npowers_:
   319                           	opt stack 0
   320  00D877  0000               	dw	0
   321  00D879  3F80               	dw	16256
   322  00D87B  CCCD               	dw	52429
   323  00D87D  3DCC               	dw	15820
   324  00D87F  D70A               	dw	55050
   325  00D881  3C23               	dw	15395
   326  00D883  126F               	dw	4719
   327  00D885  3A83               	dw	14979
   328  00D887  B717               	dw	46871
   329  00D889  38D1               	dw	14545
   330  00D88B  C5AC               	dw	50604
   331  00D88D  3727               	dw	14119
   332  00D88F  37BD               	dw	14269
   333  00D891  3586               	dw	13702
   334  00D893  BF95               	dw	49045
   335  00D895  33D6               	dw	13270
   336  00D897  CC77               	dw	52343
   337  00D899  322B               	dw	12843
   338  00D89B  705F               	dw	28767
   339  00D89D  3089               	dw	12425
   340  00D89F  E6FF               	dw	59135
   341  00D8A1  2EDB               	dw	11995
   342  00D8A3  E508               	dw	58632
   343  00D8A5  1E3C               	dw	7740
   344  00D8A7  4260               	dw	16992
   345  00D8A9  0DA2               	dw	3490
   346  00D8AB                     __end_of__npowers_:
   347                           	opt stack 0
   348  00D8AB                     _dpowers:
   349                           	opt stack 0
   350  00D8AB  0001               	dw	1
   351  00D8AD  0000               	dw	0
   352  00D8AF  000A               	dw	10
   353  00D8B1  0000               	dw	0
   354  00D8B3  0064               	dw	100
   355  00D8B5  0000               	dw	0
   356  00D8B7  03E8               	dw	1000
   357  00D8B9  0000               	dw	0
   358  00D8BB  2710               	dw	10000
   359  00D8BD  0000               	dw	0
   360  00D8BF  86A0               	dw	34464
   361  00D8C1  0001               	dw	1
   362  00D8C3  4240               	dw	16960
   363  00D8C5  000F               	dw	15
   364  00D8C7  9680               	dw	38528
   365  00D8C9  0098               	dw	152
   366  00D8CB  E100               	dw	57600
   367  00D8CD  05F5               	dw	1525
   368  00D8CF  CA00               	dw	51712
   369  00D8D1  3B9A               	dw	15258
   370  00D8D3                     __end_of_dpowers:
   371                           	opt stack 0
   372  00D8D3                     _hexpowers:
   373                           	opt stack 0
   374  00D8D3  0001               	dw	1
   375  00D8D5  0000               	dw	0
   376  00D8D7  0010               	dw	16
   377  00D8D9  0000               	dw	0
   378  00D8DB  0100               	dw	256
   379  00D8DD  0000               	dw	0
   380  00D8DF  1000               	dw	4096
   381  00D8E1  0000               	dw	0
   382  00D8E3  0000               	dw	0
   383  00D8E5  0001               	dw	1
   384  00D8E7  0000               	dw	0
   385  00D8E9  0010               	dw	16
   386  00D8EB  0000               	dw	0
   387  00D8ED  0100               	dw	256
   388  00D8EF  0000               	dw	0
   389  00D8F1  1000               	dw	4096
   390  00D8F3                     __end_of_hexpowers:
   391                           	opt stack 0
   392  00D8F3                     _max_FVR_ADC_Result_address:
   393                           	opt stack 0
   394  00D8F3  0014               	dw	20
   395  00D8F5                     __end_of_max_FVR_ADC_Result_address:
   396                           	opt stack 0
   397  00D8F5                     _max_Temp_ADC_Result_address:
   398                           	opt stack 0
   399  00D8F5  0010               	dw	16
   400  00D8F7                     __end_of_max_Temp_ADC_Result_address:
   401                           	opt stack 0
   402  00D8F7                     _max_POS12_ADC_Result_address:
   403                           	opt stack 0
   404  00D8F7  000C               	dw	12
   405  00D8F9                     __end_of_max_POS12_ADC_Result_address:
   406                           	opt stack 0
   407  00D8F9                     _max_POS3P3_ADC_Result_address:
   408                           	opt stack 0
   409  00D8F9  0008               	dw	8
   410  00D8FB                     __end_of_max_POS3P3_ADC_Result_address:
   411                           	opt stack 0
   412  00D8FB                     _max_Power_address:
   413                           	opt stack 0
   414  00D8FB  0004               	dw	4
   415  00D8FD                     __end_of_max_Power_address:
   416                           	opt stack 0
   417  00D8FD                     _max_Irms_address:
   418                           	opt stack 0
   419  00D8FD  0000               	dw	0
   420  00D8FF                     __end_of_max_Irms_address:
   421                           	opt stack 0
   422  00D8FF                     atan@coeff_a:
   423                           	opt stack 0
   424  00D8FF  3C06               	dw	15366
   425  00D901  4204               	dw	16900
   426  00D903  9F7D               	dw	40829
   427  00D905  426A               	dw	17002
   428  00D907  905C               	dw	36956
   429  00D909  4201               	dw	16897
   430  00D90B  4D60               	dw	19808
   431  00D90D  40BB               	dw	16571
   432  00D90F  EC51               	dw	60497
   433  00D911  3E47               	dw	15943
   434  00D913  8DDE               	dw	36318
   435  00D915  BB1F               	dw	47903
   436  00D917                     __end_ofatan@coeff_a:
   437                           	opt stack 0
   438  00D917                     sin@coeff_a:
   439                           	opt stack 0
   440  00D917  F3EC               	dw	62444
   441  00D919  484A               	dw	18506
   442  00D91B  9535               	dw	38197
   443  00D91D  C795               	dw	51093
   444  00D91F  C117               	dw	49431
   445  00D921  45DC               	dw	17884
   446  00D923  DBFD               	dw	56317
   447  00D925  C36D               	dw	50029
   448  00D927  B372               	dw	45938
   449  00D929  4033               	dw	16435
   450  00D92B                     __end_ofsin@coeff_a:
   451                           	opt stack 0
   452  00D92B                     atan@coeff_b:
   453                           	opt stack 0
   454  00D92B  3C06               	dw	15366
   455  00D92D  4204               	dw	16900
   456  00D92F  59C0               	dw	22976
   457  00D931  428B               	dw	17035
   458  00D933  0474               	dw	1140
   459  00D935  4244               	dw	16964
   460  00D937  9BF9               	dw	39929
   461  00D939  414F               	dw	16719
   462  00D93B  0000               	dw	0
   463  00D93D  3F80               	dw	16256
   464  00D93F                     __end_ofatan@coeff_b:
   465                           	opt stack 0
   466  00D93F                     sin@coeff_b:
   467                           	opt stack 0
   468  00D93F  342B               	dw	13355
   469  00D941  4801               	dw	18433
   470  00D943  9D7F               	dw	40319
   471  00D945  45B0               	dw	17840
   472  00D947  FFE7               	dw	65511
   473  00D949  42D9               	dw	17113
   474  00D94B  0000               	dw	0
   475  00D94D  3F80               	dw	16256
   476  00D94F                     __end_ofsin@coeff_b:
   477                           	opt stack 0
   478  00D94F                     STR_143:
   479  00D94F  4C                 	db	76	;'L'
   480  00D950  69                 	db	105	;'i'
   481  00D951  73                 	db	115	;'s'
   482  00D952  74                 	db	116	;'t'
   483  00D953  20                 	db	32
   484  00D954  6F                 	db	111	;'o'
   485  00D955  66                 	db	102	;'f'
   486  00D956  20                 	db	32
   487  00D957  61                 	db	97	;'a'
   488  00D958  6C                 	db	108	;'l'
   489  00D959  6C                 	db	108	;'l'
   490  00D95A  20                 	db	32
   491  00D95B  73                 	db	115	;'s'
   492  00D95C  75                 	db	117	;'u'
   493  00D95D  70                 	db	112	;'p'
   494  00D95E  70                 	db	112	;'p'
   495  00D95F  6F                 	db	111	;'o'
   496  00D960  72                 	db	114	;'r'
   497  00D961  74                 	db	116	;'t'
   498  00D962  65                 	db	101	;'e'
   499  00D963  64                 	db	100	;'d'
   500  00D964  20                 	db	32
   501  00D965  63                 	db	99	;'c'
   502  00D966  6F                 	db	111	;'o'
   503  00D967  6D                 	db	109	;'m'
   504  00D968  6D                 	db	109	;'m'
   505  00D969  61                 	db	97	;'a'
   506  00D96A  6E                 	db	110	;'n'
   507  00D96B  64                 	db	100	;'d'
   508  00D96C  73                 	db	115	;'s'
   509  00D96D  3A                 	db	58	;':'
   510  00D96E  0A                 	db	10
   511  00D96F  0D                 	db	13
   512  00D970  44                 	db	68	;'D'
   513  00D971  65                 	db	101	;'e'
   514  00D972  76                 	db	118	;'v'
   515  00D973  69                 	db	105	;'i'
   516  00D974  63                 	db	99	;'c'
   517  00D975  65                 	db	101	;'e'
   518  00D976  20                 	db	32
   519  00D977  43                 	db	67	;'C'
   520  00D978  6F                 	db	111	;'o'
   521  00D979  6E                 	db	110	;'n'
   522  00D97A  74                 	db	116	;'t'
   523  00D97B  72                 	db	114	;'r'
   524  00D97C  6F                 	db	111	;'o'
   525  00D97D  6C                 	db	108	;'l'
   526  00D97E  20                 	db	32
   527  00D97F  43                 	db	67	;'C'
   528  00D980  6F                 	db	111	;'o'
   529  00D981  6D                 	db	109	;'m'
   530  00D982  6D                 	db	109	;'m'
   531  00D983  61                 	db	97	;'a'
   532  00D984  6E                 	db	110	;'n'
   533  00D985  64                 	db	100	;'d'
   534  00D986  73                 	db	115	;'s'
   535  00D987  3A                 	db	58	;':'
   536  00D988  20                 	db	32
   537  00D989  43                 	db	67	;'C'
   538  00D98A  6F                 	db	111	;'o'
   539  00D98B  6D                 	db	109	;'m'
   540  00D98C  6D                 	db	109	;'m'
   541  00D98D  61                 	db	97	;'a'
   542  00D98E  6E                 	db	110	;'n'
   543  00D98F  64                 	db	100	;'d'
   544  00D990  73                 	db	115	;'s'
   545  00D991  20                 	db	32
   546  00D992  74                 	db	116	;'t'
   547  00D993  6F                 	db	111	;'o'
   548  00D994  20                 	db	32
   549  00D995  76                 	db	118	;'v'
   550  00D996  69                 	db	105	;'i'
   551  00D997  65                 	db	101	;'e'
   552  00D998  77                 	db	119	;'w'
   553  00D999  20                 	db	32
   554  00D99A  61                 	db	97	;'a'
   555  00D99B  6E                 	db	110	;'n'
   556  00D99C  64                 	db	100	;'d'
   557  00D99D  20                 	db	32
   558  00D99E  63                 	db	99	;'c'
   559  00D99F  6F                 	db	111	;'o'
   560  00D9A0  6E                 	db	110	;'n'
   561  00D9A1  74                 	db	116	;'t'
   562  00D9A2  72                 	db	114	;'r'
   563  00D9A3  6F                 	db	111	;'o'
   564  00D9A4  6C                 	db	108	;'l'
   565  00D9A5  20                 	db	32
   566  00D9A6  6C                 	db	108	;'l'
   567  00D9A7  6F                 	db	111	;'o'
   568  00D9A8  77                 	db	119	;'w'
   569  00D9A9  20                 	db	32
   570  00D9AA  6C                 	db	108	;'l'
   571  00D9AB  65                 	db	101	;'e'
   572  00D9AC  76                 	db	118	;'v'
   573  00D9AD  65                 	db	101	;'e'
   574  00D9AE  6C                 	db	108	;'l'
   575  00D9AF  20                 	db	32
   576  00D9B0  73                 	db	115	;'s'
   577  00D9B1  79                 	db	121	;'y'
   578  00D9B2  73                 	db	115	;'s'
   579  00D9B3  74                 	db	116	;'t'
   580  00D9B4  65                 	db	101	;'e'
   581  00D9B5  6D                 	db	109	;'m'
   582  00D9B6  20                 	db	32
   583  00D9B7  66                 	db	102	;'f'
   584  00D9B8  75                 	db	117	;'u'
   585  00D9B9  6E                 	db	110	;'n'
   586  00D9BA  63                 	db	99	;'c'
   587  00D9BB  74                 	db	116	;'t'
   588  00D9BC  69                 	db	105	;'i'
   589  00D9BD  6F                 	db	111	;'o'
   590  00D9BE  6E                 	db	110	;'n'
   591  00D9BF  61                 	db	97	;'a'
   592  00D9C0  6C                 	db	108	;'l'
   593  00D9C1  69                 	db	105	;'i'
   594  00D9C2  74                 	db	116	;'t'
   595  00D9C3  79                 	db	121	;'y'
   596  00D9C4  0A                 	db	10
   597  00D9C5  0D                 	db	13
   598  00D9C6  20                 	db	32
   599  00D9C7  20                 	db	32
   600  00D9C8  20                 	db	32
   601  00D9C9  52                 	db	82	;'R'
   602  00D9CA  65                 	db	101	;'e'
   603  00D9CB  73                 	db	115	;'s'
   604  00D9CC  65                 	db	101	;'e'
   605  00D9CD  74                 	db	116	;'t'
   606  00D9CE  3A                 	db	58	;':'
   607  00D9CF  20                 	db	32
   608  00D9D0  43                 	db	67	;'C'
   609  00D9D1  6C                 	db	108	;'l'
   610  00D9D2  65                 	db	101	;'e'
   611  00D9D3  61                 	db	97	;'a'
   612  00D9D4  72                 	db	114	;'r'
   613  00D9D5  73                 	db	115	;'s'
   614  00D9D6  20                 	db	32
   615  00D9D7  74                 	db	116	;'t'
   616  00D9D8  68                 	db	104	;'h'
   617  00D9D9  65                 	db	101	;'e'
   618  00D9DA  20                 	db	32
   619  00D9DB  74                 	db	116	;'t'
   620  00D9DC  65                 	db	101	;'e'
   621  00D9DD  72                 	db	114	;'r'
   622  00D9DE  6D                 	db	109	;'m'
   623  00D9DF  69                 	db	105	;'i'
   624  00D9E0  6E                 	db	110	;'n'
   625  00D9E1  61                 	db	97	;'a'
   626  00D9E2  6C                 	db	108	;'l'
   627  00D9E3  20                 	db	32
   628  00D9E4  61                 	db	97	;'a'
   629  00D9E5  6E                 	db	110	;'n'
   630  00D9E6  64                 	db	100	;'d'
   631  00D9E7  20                 	db	32
   632  00D9E8  72                 	db	114	;'r'
   633  00D9E9  65                 	db	101	;'e'
   634  00D9EA  73                 	db	115	;'s'
   635  00D9EB  65                 	db	101	;'e'
   636  00D9EC  74                 	db	116	;'t'
   637  00D9ED  73                 	db	115	;'s'
   638  00D9EE  20                 	db	32
   639  00D9EF  74                 	db	116	;'t'
   640  00D9F0  68                 	db	104	;'h'
   641  00D9F1  65                 	db	101	;'e'
   642  00D9F2  20                 	db	32
   643  00D9F3  6D                 	db	109	;'m'
   644  00D9F4  69                 	db	105	;'i'
   645  00D9F5  63                 	db	99	;'c'
   646  00D9F6  72                 	db	114	;'r'
   647  00D9F7  6F                 	db	111	;'o'
   648  00D9F8  0A                 	db	10
   649  00D9F9  0D                 	db	13
   650  00D9FA  20                 	db	32
   651  00D9FB  20                 	db	32
   652  00D9FC  20                 	db	32
   653  00D9FD  43                 	db	67	;'C'
   654  00D9FE  6C                 	db	108	;'l'
   655  00D9FF  65                 	db	101	;'e'
   656  00DA00  61                 	db	97	;'a'
   657  00DA01  72                 	db	114	;'r'
   658  00DA02  3A                 	db	58	;':'
   659  00DA03  20                 	db	32
   660  00DA04  43                 	db	67	;'C'
   661  00DA05  6C                 	db	108	;'l'
   662  00DA06  65                 	db	101	;'e'
   663  00DA07  61                 	db	97	;'a'
   664  00DA08  72                 	db	114	;'r'
   665  00DA09  73                 	db	115	;'s'
   666  00DA0A  20                 	db	32
   667  00DA0B  74                 	db	116	;'t'
   668  00DA0C  68                 	db	104	;'h'
   669  00DA0D  65                 	db	101	;'e'
   670  00DA0E  20                 	db	32
   671  00DA0F  74                 	db	116	;'t'
   672  00DA10  65                 	db	101	;'e'
   673  00DA11  72                 	db	114	;'r'
   674  00DA12  6D                 	db	109	;'m'
   675  00DA13  69                 	db	105	;'i'
   676  00DA14  6E                 	db	110	;'n'
   677  00DA15  61                 	db	97	;'a'
   678  00DA16  6C                 	db	108	;'l'
   679  00DA17  20                 	db	32
   680  00DA18  62                 	db	98	;'b'
   681  00DA19  75                 	db	117	;'u'
   682  00DA1A  74                 	db	116	;'t'
   683  00DA1B  20                 	db	32
   684  00DA1C  64                 	db	100	;'d'
   685  00DA1D  6F                 	db	111	;'o'
   686  00DA1E  65                 	db	101	;'e'
   687  00DA1F  73                 	db	115	;'s'
   688  00DA20  6E                 	db	110	;'n'
   689  00DA21  27                 	db	39
   690  00DA22  74                 	db	116	;'t'
   691  00DA23  20                 	db	32
   692  00DA24  72                 	db	114	;'r'
   693  00DA25  65                 	db	101	;'e'
   694  00DA26  73                 	db	115	;'s'
   695  00DA27  65                 	db	101	;'e'
   696  00DA28  74                 	db	116	;'t'
   697  00DA29  20                 	db	32
   698  00DA2A  74                 	db	116	;'t'
   699  00DA2B  68                 	db	104	;'h'
   700  00DA2C  65                 	db	101	;'e'
   701  00DA2D  20                 	db	32
   702  00DA2E  6D                 	db	109	;'m'
   703  00DA2F  69                 	db	105	;'i'
   704  00DA30  63                 	db	99	;'c'
   705  00DA31  72                 	db	114	;'r'
   706  00DA32  6F                 	db	111	;'o'
   707  00DA33  0A                 	db	10
   708  00DA34  0D                 	db	13
   709  00DA35  20                 	db	32
   710  00DA36  20                 	db	32
   711  00DA37  20                 	db	32
   712  00DA38  43                 	db	67	;'C'
   713  00DA39  61                 	db	97	;'a'
   714  00DA3A  75                 	db	117	;'u'
   715  00DA3B  73                 	db	115	;'s'
   716  00DA3C  65                 	db	101	;'e'
   717  00DA3D  20                 	db	32
   718  00DA3E  6F                 	db	111	;'o'
   719  00DA3F  66                 	db	102	;'f'
   720  00DA40  20                 	db	32
   721  00DA41  52                 	db	82	;'R'
   722  00DA42  65                 	db	101	;'e'
   723  00DA43  73                 	db	115	;'s'
   724  00DA44  65                 	db	101	;'e'
   725  00DA45  74                 	db	116	;'t'
   726  00DA46  3F                 	db	63	;'?'
   727  00DA47  3A                 	db	58	;':'
   728  00DA48  20                 	db	32
   729  00DA49  52                 	db	82	;'R'
   730  00DA4A  65                 	db	101	;'e'
   731  00DA4B  74                 	db	116	;'t'
   732  00DA4C  75                 	db	117	;'u'
   733  00DA4D  72                 	db	114	;'r'
   734  00DA4E  6E                 	db	110	;'n'
   735  00DA4F  73                 	db	115	;'s'
   736  00DA50  20                 	db	32
   737  00DA51  74                 	db	116	;'t'
   738  00DA52  68                 	db	104	;'h'
   739  00DA53  65                 	db	101	;'e'
   740  00DA54  20                 	db	32
   741  00DA55  63                 	db	99	;'c'
   742  00DA56  61                 	db	97	;'a'
   743  00DA57  75                 	db	117	;'u'
   744  00DA58  73                 	db	115	;'s'
   745  00DA59  65                 	db	101	;'e'
   746  00DA5A  20                 	db	32
   747  00DA5B  6F                 	db	111	;'o'
   748  00DA5C  66                 	db	102	;'f'
   749  00DA5D  20                 	db	32
   750  00DA5E  74                 	db	116	;'t'
   751  00DA5F  68                 	db	104	;'h'
   752  00DA60  65                 	db	101	;'e'
   753  00DA61  20                 	db	32
   754  00DA62  6D                 	db	109	;'m'
   755  00DA63  6F                 	db	111	;'o'
   756  00DA64  73                 	db	115	;'s'
   757  00DA65  74                 	db	116	;'t'
   758  00DA66  20                 	db	32
   759  00DA67  72                 	db	114	;'r'
   760  00DA68  65                 	db	101	;'e'
   761  00DA69  63                 	db	99	;'c'
   762  00DA6A  65                 	db	101	;'e'
   763  00DA6B  6E                 	db	110	;'n'
   764  00DA6C  74                 	db	116	;'t'
   765  00DA6D  20                 	db	32
   766  00DA6E  64                 	db	100	;'d'
   767  00DA6F  65                 	db	101	;'e'
   768  00DA70  76                 	db	118	;'v'
   769  00DA71  69                 	db	105	;'i'
   770  00DA72  63                 	db	99	;'c'
   771  00DA73  65                 	db	101	;'e'
   772  00DA74  20                 	db	32
   773  00DA75  72                 	db	114	;'r'
   774  00DA76  65                 	db	101	;'e'
   775  00DA77  73                 	db	115	;'s'
   776  00DA78  65                 	db	101	;'e'
   777  00DA79  74                 	db	116	;'t'
   778  00DA7A  0A                 	db	10
   779  00DA7B  0D                 	db	13
   780  00DA7C  20                 	db	32
   781  00DA7D  20                 	db	32
   782  00DA7E  20                 	db	32
   783  00DA7F  2A                 	db	42
   784  00DA80  49                 	db	73	;'I'
   785  00DA81  44                 	db	68	;'D'
   786  00DA82  4E                 	db	78	;'N'
   787  00DA83  3F                 	db	63	;'?'
   788  00DA84  3A                 	db	58	;':'
   789  00DA85  20                 	db	32
   790  00DA86  52                 	db	82	;'R'
   791  00DA87  65                 	db	101	;'e'
   792  00DA88  74                 	db	116	;'t'
   793  00DA89  75                 	db	117	;'u'
   794  00DA8A  72                 	db	114	;'r'
   795  00DA8B  6E                 	db	110	;'n'
   796  00DA8C  73                 	db	115	;'s'
   797  00DA8D  20                 	db	32
   798  00DA8E  64                 	db	100	;'d'
   799  00DA8F  65                 	db	101	;'e'
   800  00DA90  76                 	db	118	;'v'
   801  00DA91  69                 	db	105	;'i'
   802  00DA92  63                 	db	99	;'c'
   803  00DA93  65                 	db	101	;'e'
   804  00DA94  20                 	db	32
   805  00DA95  69                 	db	105	;'i'
   806  00DA96  64                 	db	100	;'d'
   807  00DA97  65                 	db	101	;'e'
   808  00DA98  6E                 	db	110	;'n'
   809  00DA99  74                 	db	116	;'t'
   810  00DA9A  69                 	db	105	;'i'
   811  00DA9B  66                 	db	102	;'f'
   812  00DA9C  69                 	db	105	;'i'
   813  00DA9D  63                 	db	99	;'c'
   814  00DA9E  61                 	db	97	;'a'
   815  00DA9F  74                 	db	116	;'t'
   816  00DAA0  69                 	db	105	;'i'
   817  00DAA1  6F                 	db	111	;'o'
   818  00DAA2  6E                 	db	110	;'n'
   819  00DAA3  20                 	db	32
   820  00DAA4  73                 	db	115	;'s'
   821  00DAA5  74                 	db	116	;'t'
   822  00DAA6  72                 	db	114	;'r'
   823  00DAA7  69                 	db	105	;'i'
   824  00DAA8  6E                 	db	110	;'n'
   825  00DAA9  67                 	db	103	;'g'
   826  00DAAA  0A                 	db	10
   827  00DAAB  0D                 	db	13
   828  00DAAC  20                 	db	32
   829  00DAAD  20                 	db	32
   830  00DAAE  20                 	db	32
   831  00DAAF  44                 	db	68	;'D'
   832  00DAB0  65                 	db	101	;'e'
   833  00DAB1  76                 	db	118	;'v'
   834  00DAB2  69                 	db	105	;'i'
   835  00DAB3  63                 	db	99	;'c'
   836  00DAB4  65                 	db	101	;'e'
   837  00DAB5  20                 	db	32
   838  00DAB6  4F                 	db	79	;'O'
   839  00DAB7  6E                 	db	110	;'n'
   840  00DAB8  20                 	db	32
   841  00DAB9  54                 	db	84	;'T'
   842  00DABA  69                 	db	105	;'i'
   843  00DABB  6D                 	db	109	;'m'
   844  00DABC  65                 	db	101	;'e'
   845  00DABD  3F                 	db	63	;'?'
   846  00DABE  3A                 	db	58	;':'
   847  00DABF  20                 	db	32
   848  00DAC0  52                 	db	82	;'R'
   849  00DAC1  65                 	db	101	;'e'
   850  00DAC2  74                 	db	116	;'t'
   851  00DAC3  75                 	db	117	;'u'
   852  00DAC4  72                 	db	114	;'r'
   853  00DAC5  6E                 	db	110	;'n'
   854  00DAC6  73                 	db	115	;'s'
   855  00DAC7  20                 	db	32
   856  00DAC8  64                 	db	100	;'d'
   857  00DAC9  65                 	db	101	;'e'
   858  00DACA  76                 	db	118	;'v'
   859  00DACB  69                 	db	105	;'i'
   860  00DACC  63                 	db	99	;'c'
   861  00DACD  65                 	db	101	;'e'
   862  00DACE  20                 	db	32
   863  00DACF  6F                 	db	111	;'o'
   864  00DAD0  6E                 	db	110	;'n'
   865  00DAD1  20                 	db	32
   866  00DAD2  74                 	db	116	;'t'
   867  00DAD3  69                 	db	105	;'i'
   868  00DAD4  6D                 	db	109	;'m'
   869  00DAD5  65                 	db	101	;'e'
   870  00DAD6  20                 	db	32
   871  00DAD7  73                 	db	115	;'s'
   872  00DAD8  69                 	db	105	;'i'
   873  00DAD9  6E                 	db	110	;'n'
   874  00DADA  63                 	db	99	;'c'
   875  00DADB  65                 	db	101	;'e'
   876  00DADC  20                 	db	32
   877  00DADD  6C                 	db	108	;'l'
   878  00DADE  61                 	db	97	;'a'
   879  00DADF  73                 	db	115	;'s'
   880  00DAE0  74                 	db	116	;'t'
   881  00DAE1  20                 	db	32
   882  00DAE2  64                 	db	100	;'d'
   883  00DAE3  65                 	db	101	;'e'
   884  00DAE4  76                 	db	118	;'v'
   885  00DAE5  69                 	db	105	;'i'
   886  00DAE6  63                 	db	99	;'c'
   887  00DAE7  65                 	db	101	;'e'
   888  00DAE8  20                 	db	32
   889  00DAE9  72                 	db	114	;'r'
   890  00DAEA  65                 	db	101	;'e'
   891  00DAEB  73                 	db	115	;'s'
   892  00DAEC  65                 	db	101	;'e'
   893  00DAED  74                 	db	116	;'t'
   894  00DAEE  0A                 	db	10
   895  00DAEF  0D                 	db	13
   896  00DAF0  20                 	db	32
   897  00DAF1  20                 	db	32
   898  00DAF2  20                 	db	32
   899  00DAF3  44                 	db	68	;'D'
   900  00DAF4  65                 	db	101	;'e'
   901  00DAF5  76                 	db	118	;'v'
   902  00DAF6  69                 	db	105	;'i'
   903  00DAF7  63                 	db	99	;'c'
   904  00DAF8  65                 	db	101	;'e'
   905  00DAF9  20                 	db	32
   906  00DAFA  49                 	db	73	;'I'
   907  00DAFB  44                 	db	68	;'D'
   908  00DAFC  3F                 	db	63	;'?'
   909  00DAFD  3A                 	db	58	;':'
   910  00DAFE  20                 	db	32
   911  00DAFF  52                 	db	82	;'R'
   912  00DB00  65                 	db	101	;'e'
   913  00DB01  74                 	db	116	;'t'
   914  00DB02  75                 	db	117	;'u'
   915  00DB03  72                 	db	114	;'r'
   916  00DB04  6E                 	db	110	;'n'
   917  00DB05  73                 	db	115	;'s'
   918  00DB06  20                 	db	32
   919  00DB07  64                 	db	100	;'d'
   920  00DB08  65                 	db	101	;'e'
   921  00DB09  76                 	db	118	;'v'
   922  00DB0A  69                 	db	105	;'i'
   923  00DB0B  63                 	db	99	;'c'
   924  00DB0C  65                 	db	101	;'e'
   925  00DB0D  20                 	db	32
   926  00DB0E  49                 	db	73	;'I'
   927  00DB0F  44                 	db	68	;'D'
   928  00DB10  20                 	db	32
   929  00DB11  61                 	db	97	;'a'
   930  00DB12  73                 	db	115	;'s'
   931  00DB13  20                 	db	32
   932  00DB14  70                 	db	112	;'p'
   933  00DB15  72                 	db	114	;'r'
   934  00DB16  65                 	db	101	;'e'
   935  00DB17  2D                 	db	45
   936  00DB18  70                 	db	112	;'p'
   937  00DB19  72                 	db	114	;'r'
   938  00DB1A  6F                 	db	111	;'o'
   939  00DB1B  67                 	db	103	;'g'
   940  00DB1C  72                 	db	114	;'r'
   941  00DB1D  61                 	db	97	;'a'
   942  00DB1E  6D                 	db	109	;'m'
   943  00DB1F  6D                 	db	109	;'m'
   944  00DB20  65                 	db	101	;'e'
   945  00DB21  64                 	db	100	;'d'
   946  00DB22  20                 	db	32
   947  00DB23  69                 	db	105	;'i'
   948  00DB24  6E                 	db	110	;'n'
   949  00DB25  20                 	db	32
   950  00DB26  66                 	db	102	;'f'
   951  00DB27  6C                 	db	108	;'l'
   952  00DB28  61                 	db	97	;'a'
   953  00DB29  73                 	db	115	;'s'
   954  00DB2A  68                 	db	104	;'h'
   955  00DB2B  20                 	db	32
   956  00DB2C  6D                 	db	109	;'m'
   957  00DB2D  65                 	db	101	;'e'
   958  00DB2E  6D                 	db	109	;'m'
   959  00DB2F  6F                 	db	111	;'o'
   960  00DB30  72                 	db	114	;'r'
   961  00DB31  79                 	db	121	;'y'
   962  00DB32  0A                 	db	10
   963  00DB33  0D                 	db	13
   964  00DB34  20                 	db	32
   965  00DB35  20                 	db	32
   966  00DB36  20                 	db	32
   967  00DB37  52                 	db	82	;'R'
   968  00DB38  65                 	db	101	;'e'
   969  00DB39  76                 	db	118	;'v'
   970  00DB3A  69                 	db	105	;'i'
   971  00DB3B  73                 	db	115	;'s'
   972  00DB3C  69                 	db	105	;'i'
   973  00DB3D  6F                 	db	111	;'o'
   974  00DB3E  6E                 	db	110	;'n'
   975  00DB3F  20                 	db	32
   976  00DB40  49                 	db	73	;'I'
   977  00DB41  44                 	db	68	;'D'
   978  00DB42  3F                 	db	63	;'?'
   979  00DB43  3A                 	db	58	;':'
   980  00DB44  20                 	db	32
   981  00DB45  52                 	db	82	;'R'
   982  00DB46  65                 	db	101	;'e'
   983  00DB47  74                 	db	116	;'t'
   984  00DB48  75                 	db	117	;'u'
   985  00DB49  72                 	db	114	;'r'
   986  00DB4A  6E                 	db	110	;'n'
   987  00DB4B  73                 	db	115	;'s'
   988  00DB4C  20                 	db	32
   989  00DB4D  64                 	db	100	;'d'
   990  00DB4E  65                 	db	101	;'e'
   991  00DB4F  76                 	db	118	;'v'
   992  00DB50  69                 	db	105	;'i'
   993  00DB51  63                 	db	99	;'c'
   994  00DB52  65                 	db	101	;'e'
   995  00DB53  20                 	db	32
   996  00DB54  73                 	db	115	;'s'
   997  00DB55  69                 	db	105	;'i'
   998  00DB56  6C                 	db	108	;'l'
   999  00DB57  69                 	db	105	;'i'
  1000  00DB58  63                 	db	99	;'c'
  1001  00DB59  6F                 	db	111	;'o'
  1002  00DB5A  6E                 	db	110	;'n'
  1003  00DB5B  20                 	db	32
  1004  00DB5C  72                 	db	114	;'r'
  1005  00DB5D  65                 	db	101	;'e'
  1006  00DB5E  76                 	db	118	;'v'
  1007  00DB5F  69                 	db	105	;'i'
  1008  00DB60  73                 	db	115	;'s'
  1009  00DB61  69                 	db	105	;'i'
  1010  00DB62  6F                 	db	111	;'o'
  1011  00DB63  6E                 	db	110	;'n'
  1012  00DB64  20                 	db	32
  1013  00DB65  49                 	db	73	;'I'
  1014  00DB66  44                 	db	68	;'D'
  1015  00DB67  20                 	db	32
  1016  00DB68  61                 	db	97	;'a'
  1017  00DB69  73                 	db	115	;'s'
  1018  00DB6A  20                 	db	32
  1019  00DB6B  70                 	db	112	;'p'
  1020  00DB6C  72                 	db	114	;'r'
  1021  00DB6D  65                 	db	101	;'e'
  1022  00DB6E  2D                 	db	45
  1023  00DB6F  70                 	db	112	;'p'
  1024  00DB70  72                 	db	114	;'r'
  1025  00DB71  6F                 	db	111	;'o'
  1026  00DB72  67                 	db	103	;'g'
  1027  00DB73  72                 	db	114	;'r'
  1028  00DB74  61                 	db	97	;'a'
  1029  00DB75  6D                 	db	109	;'m'
  1030  00DB76  6D                 	db	109	;'m'
  1031  00DB77  65                 	db	101	;'e'
  1032  00DB78  64                 	db	100	;'d'
  1033  00DB79  20                 	db	32
  1034  00DB7A  69                 	db	105	;'i'
  1035  00DB7B  6E                 	db	110	;'n'
  1036  00DB7C  20                 	db	32
  1037  00DB7D  66                 	db	102	;'f'
  1038  00DB7E  6C                 	db	108	;'l'
  1039  00DB7F  61                 	db	97	;'a'
  1040  00DB80  73                 	db	115	;'s'
  1041  00DB81  68                 	db	104	;'h'
  1042  00DB82  20                 	db	32
  1043  00DB83  6D                 	db	109	;'m'
  1044  00DB84  65                 	db	101	;'e'
  1045  00DB85  6D                 	db	109	;'m'
  1046  00DB86  6F                 	db	111	;'o'
  1047  00DB87  72                 	db	114	;'r'
  1048  00DB88  79                 	db	121	;'y'
  1049  00DB89  0A                 	db	10
  1050  00DB8A  0D                 	db	13
  1051  00DB8B  20                 	db	32
  1052  00DB8C  20                 	db	32
  1053  00DB8D  20                 	db	32
  1054  00DB8E  55                 	db	85	;'U'
  1055  00DB8F  73                 	db	115	;'s'
  1056  00DB90  65                 	db	101	;'e'
  1057  00DB91  72                 	db	114	;'r'
  1058  00DB92  20                 	db	32
  1059  00DB93  49                 	db	73	;'I'
  1060  00DB94  44                 	db	68	;'D'
  1061  00DB95  73                 	db	115	;'s'
  1062  00DB96  3F                 	db	63	;'?'
  1063  00DB97  3A                 	db	58	;':'
  1064  00DB98  20                 	db	32
  1065  00DB99  52                 	db	82	;'R'
  1066  00DB9A  65                 	db	101	;'e'
  1067  00DB9B  74                 	db	116	;'t'
  1068  00DB9C  75                 	db	117	;'u'
  1069  00DB9D  72                 	db	114	;'r'
  1070  00DB9E  6E                 	db	110	;'n'
  1071  00DB9F  73                 	db	115	;'s'
  1072  00DBA0  20                 	db	32
  1073  00DBA1  61                 	db	97	;'a'
  1074  00DBA2  20                 	db	32
  1075  00DBA3  6C                 	db	108	;'l'
  1076  00DBA4  69                 	db	105	;'i'
  1077  00DBA5  73                 	db	115	;'s'
  1078  00DBA6  74                 	db	116	;'t'
  1079  00DBA7  20                 	db	32
  1080  00DBA8  6F                 	db	111	;'o'
  1081  00DBA9  66                 	db	102	;'f'
  1082  00DBAA  20                 	db	32
  1083  00DBAB  75                 	db	117	;'u'
  1084  00DBAC  73                 	db	115	;'s'
  1085  00DBAD  65                 	db	101	;'e'
  1086  00DBAE  72                 	db	114	;'r'
  1087  00DBAF  20                 	db	32
  1088  00DBB0  49                 	db	73	;'I'
  1089  00DBB1  44                 	db	68	;'D'
  1090  00DBB2  73                 	db	115	;'s'
  1091  00DBB3  20                 	db	32
  1092  00DBB4  28                 	db	40
  1093  00DBB5  64                 	db	100	;'d'
  1094  00DBB6  69                 	db	105	;'i'
  1095  00DBB7  73                 	db	115	;'s'
  1096  00DBB8  70                 	db	112	;'p'
  1097  00DBB9  6C                 	db	108	;'l'
  1098  00DBBA  61                 	db	97	;'a'
  1099  00DBBB  79                 	db	121	;'y'
  1100  00DBBC  65                 	db	101	;'e'
  1101  00DBBD  64                 	db	100	;'d'
  1102  00DBBE  20                 	db	32
  1103  00DBBF  69                 	db	105	;'i'
  1104  00DBC0  6E                 	db	110	;'n'
  1105  00DBC1  20                 	db	32
  1106  00DBC2  68                 	db	104	;'h'
  1107  00DBC3  65                 	db	101	;'e'
  1108  00DBC4  78                 	db	120	;'x'
  1109  00DBC5  29                 	db	41
  1110  00DBC6  20                 	db	32
  1111  00DBC7  61                 	db	97	;'a'
  1112  00DBC8  73                 	db	115	;'s'
  1113  00DBC9  20                 	db	32
  1114  00DBCA  73                 	db	115	;'s'
  1115  00DBCB  74                 	db	116	;'t'
  1116  00DBCC  6F                 	db	111	;'o'
  1117  00DBCD  72                 	db	114	;'r'
  1118  00DBCE  65                 	db	101	;'e'
  1119  00DBCF  64                 	db	100	;'d'
  1120  00DBD0  20                 	db	32
  1121  00DBD1  69                 	db	105	;'i'
  1122  00DBD2  6E                 	db	110	;'n'
  1123  00DBD3  20                 	db	32
  1124  00DBD4  66                 	db	102	;'f'
  1125  00DBD5  6C                 	db	108	;'l'
  1126  00DBD6  61                 	db	97	;'a'
  1127  00DBD7  73                 	db	115	;'s'
  1128  00DBD8  68                 	db	104	;'h'
  1129  00DBD9  20                 	db	32
  1130  00DBDA  6D                 	db	109	;'m'
  1131  00DBDB  65                 	db	101	;'e'
  1132  00DBDC  6D                 	db	109	;'m'
  1133  00DBDD  6F                 	db	111	;'o'
  1134  00DBDE  72                 	db	114	;'r'
  1135  00DBDF  79                 	db	121	;'y'
  1136  00DBE0  0A                 	db	10
  1137  00DBE1  0D                 	db	13
  1138  00DBE2  20                 	db	32
  1139  00DBE3  20                 	db	32
  1140  00DBE4  20                 	db	32
  1141  00DBE5  41                 	db	65	;'A'
  1142  00DBE6  44                 	db	68	;'D'
  1143  00DBE7  43                 	db	67	;'C'
  1144  00DBE8  20                 	db	32
  1145  00DBE9  45                 	db	69	;'E'
  1146  00DBEA  72                 	db	114	;'r'
  1147  00DBEB  72                 	db	114	;'r'
  1148  00DBEC  6F                 	db	111	;'o'
  1149  00DBED  72                 	db	114	;'r'
  1150  00DBEE  3F                 	db	63	;'?'
  1151  00DBEF  3A                 	db	58	;':'
  1152  00DBF0  20                 	db	32
  1153  00DBF1  52                 	db	82	;'R'
  1154  00DBF2  65                 	db	101	;'e'
  1155  00DBF3  74                 	db	116	;'t'
  1156  00DBF4  75                 	db	117	;'u'
  1157  00DBF5  72                 	db	114	;'r'
  1158  00DBF6  6E                 	db	110	;'n'
  1159  00DBF7  73                 	db	115	;'s'
  1160  00DBF8  20                 	db	32
  1161  00DBF9  74                 	db	116	;'t'
  1162  00DBFA  68                 	db	104	;'h'
  1163  00DBFB  65                 	db	101	;'e'
  1164  00DBFC  20                 	db	32
  1165  00DBFD  63                 	db	99	;'c'
  1166  00DBFE  61                 	db	97	;'a'
  1167  00DBFF  75                 	db	117	;'u'
  1168  00DC00  73                 	db	115	;'s'
  1169  00DC01  65                 	db	101	;'e'
  1170  00DC02  20                 	db	32
  1171  00DC03  6F                 	db	111	;'o'
  1172  00DC04  66                 	db	102	;'f'
  1173  00DC05  20                 	db	32
  1174  00DC06  61                 	db	97	;'a'
  1175  00DC07  6E                 	db	110	;'n'
  1176  00DC08  20                 	db	32
  1177  00DC09  41                 	db	65	;'A'
  1178  00DC0A  44                 	db	68	;'D'
  1179  00DC0B  43                 	db	67	;'C'
  1180  00DC0C  20                 	db	32
  1181  00DC0D  65                 	db	101	;'e'
  1182  00DC0E  72                 	db	114	;'r'
  1183  00DC0F  72                 	db	114	;'r'
  1184  00DC10  6F                 	db	111	;'o'
  1185  00DC11  72                 	db	114	;'r'
  1186  00DC12  20                 	db	32
  1187  00DC13  69                 	db	105	;'i'
  1188  00DC14  66                 	db	102	;'f'
  1189  00DC15  20                 	db	32
  1190  00DC16  61                 	db	97	;'a'
  1191  00DC17  6E                 	db	110	;'n'
  1192  00DC18  20                 	db	32
  1193  00DC19  65                 	db	101	;'e'
  1194  00DC1A  72                 	db	114	;'r'
  1195  00DC1B  72                 	db	114	;'r'
  1196  00DC1C  6F                 	db	111	;'o'
  1197  00DC1D  72                 	db	114	;'r'
  1198  00DC1E  20                 	db	32
  1199  00DC1F  6F                 	db	111	;'o'
  1200  00DC20  63                 	db	99	;'c'
  1201  00DC21  63                 	db	99	;'c'
  1202  00DC22  75                 	db	117	;'u'
  1203  00DC23  72                 	db	114	;'r'
  1204  00DC24  72                 	db	114	;'r'
  1205  00DC25  65                 	db	101	;'e'
  1206  00DC26  64                 	db	100	;'d'
  1207  00DC27  0A                 	db	10
  1208  00DC28  0D                 	db	13
  1209  00DC29  20                 	db	32
  1210  00DC2A  20                 	db	32
  1211  00DC2B  20                 	db	32
  1212  00DC2C  43                 	db	67	;'C'
  1213  00DC2D  6C                 	db	108	;'l'
  1214  00DC2E  65                 	db	101	;'e'
  1215  00DC2F  61                 	db	97	;'a'
  1216  00DC30  72                 	db	114	;'r'
  1217  00DC31  20                 	db	32
  1218  00DC32  41                 	db	65	;'A'
  1219  00DC33  44                 	db	68	;'D'
  1220  00DC34  43                 	db	67	;'C'
  1221  00DC35  20                 	db	32
  1222  00DC36  45                 	db	69	;'E'
  1223  00DC37  72                 	db	114	;'r'
  1224  00DC38  72                 	db	114	;'r'
  1225  00DC39  6F                 	db	111	;'o'
  1226  00DC3A  72                 	db	114	;'r'
  1227  00DC3B  3A                 	db	58	;':'
  1228  00DC3C  20                 	db	32
  1229  00DC3D  43                 	db	67	;'C'
  1230  00DC3E  6C                 	db	108	;'l'
  1231  00DC3F  65                 	db	101	;'e'
  1232  00DC40  61                 	db	97	;'a'
  1233  00DC41  72                 	db	114	;'r'
  1234  00DC42  73                 	db	115	;'s'
  1235  00DC43  20                 	db	32
  1236  00DC44  74                 	db	116	;'t'
  1237  00DC45  68                 	db	104	;'h'
  1238  00DC46  65                 	db	101	;'e'
  1239  00DC47  20                 	db	32
  1240  00DC48  41                 	db	65	;'A'
  1241  00DC49  44                 	db	68	;'D'
  1242  00DC4A  43                 	db	67	;'C'
  1243  00DC4B  20                 	db	32
  1244  00DC4C  65                 	db	101	;'e'
  1245  00DC4D  72                 	db	114	;'r'
  1246  00DC4E  72                 	db	114	;'r'
  1247  00DC4F  6F                 	db	111	;'o'
  1248  00DC50  72                 	db	114	;'r'
  1249  00DC51  20                 	db	32
  1250  00DC52  61                 	db	97	;'a'
  1251  00DC53  6E                 	db	110	;'n'
  1252  00DC54  64                 	db	100	;'d'
  1253  00DC55  20                 	db	32
  1254  00DC56  72                 	db	114	;'r'
  1255  00DC57  65                 	db	101	;'e'
  1256  00DC58  73                 	db	115	;'s'
  1257  00DC59  75                 	db	117	;'u'
  1258  00DC5A  6D                 	db	109	;'m'
  1259  00DC5B  65                 	db	101	;'e'
  1260  00DC5C  73                 	db	115	;'s'
  1261  00DC5D  20                 	db	32
  1262  00DC5E  41                 	db	65	;'A'
  1263  00DC5F  44                 	db	68	;'D'
  1264  00DC60  43                 	db	67	;'C'
  1265  00DC61  20                 	db	32
  1266  00DC62  63                 	db	99	;'c'
  1267  00DC63  6F                 	db	111	;'o'
  1268  00DC64  6E                 	db	110	;'n'
  1269  00DC65  76                 	db	118	;'v'
  1270  00DC66  65                 	db	101	;'e'
  1271  00DC67  72                 	db	114	;'r'
  1272  00DC68  73                 	db	115	;'s'
  1273  00DC69  69                 	db	105	;'i'
  1274  00DC6A  6F                 	db	111	;'o'
  1275  00DC6B  6E                 	db	110	;'n'
  1276  00DC6C  73                 	db	115	;'s'
  1277  00DC6D  0A                 	db	10
  1278  00DC6E  0D                 	db	13
  1279  00DC6F  20                 	db	32
  1280  00DC70  20                 	db	32
  1281  00DC71  20                 	db	32
  1282  00DC72  56                 	db	86	;'V'
  1283  00DC73  43                 	db	67	;'C'
  1284  00DC74  43                 	db	67	;'C'
  1285  00DC75  20                 	db	32
  1286  00DC76  4F                 	db	79	;'O'
  1287  00DC77  76                 	db	118	;'v'
  1288  00DC78  65                 	db	101	;'e'
  1289  00DC79  72                 	db	114	;'r'
  1290  00DC7A  76                 	db	118	;'v'
  1291  00DC7B  6F                 	db	111	;'o'
  1292  00DC7C  6C                 	db	108	;'l'
  1293  00DC7D  74                 	db	116	;'t'
  1294  00DC7E  61                 	db	97	;'a'
  1295  00DC7F  67                 	db	103	;'g'
  1296  00DC80  65                 	db	101	;'e'
  1297  00DC81  3F                 	db	63	;'?'
  1298  00DC82  3A                 	db	58	;':'
  1299  00DC83  20                 	db	32
  1300  00DC84  53                 	db	83	;'S'
  1301  00DC85  74                 	db	116	;'t'
  1302  00DC86  61                 	db	97	;'a'
  1303  00DC87  74                 	db	116	;'t'
  1304  00DC88  65                 	db	101	;'e'
  1305  00DC89  73                 	db	115	;'s'
  1306  00DC8A  20                 	db	32
  1307  00DC8B  69                 	db	105	;'i'
  1308  00DC8C  66                 	db	102	;'f'
  1309  00DC8D  20                 	db	32
  1310  00DC8E  61                 	db	97	;'a'
  1311  00DC8F  20                 	db	32
  1312  00DC90  56                 	db	86	;'V'
  1313  00DC91  43                 	db	67	;'C'
  1314  00DC92  43                 	db	67	;'C'
  1315  00DC93  20                 	db	32
  1316  00DC94  6F                 	db	111	;'o'
  1317  00DC95  76                 	db	118	;'v'
  1318  00DC96  65                 	db	101	;'e'
  1319  00DC97  72                 	db	114	;'r'
  1320  00DC98  76                 	db	118	;'v'
  1321  00DC99  6F                 	db	111	;'o'
  1322  00DC9A  6C                 	db	108	;'l'
  1323  00DC9B  74                 	db	116	;'t'
  1324  00DC9C  61                 	db	97	;'a'
  1325  00DC9D  67                 	db	103	;'g'
  1326  00DC9E  65                 	db	101	;'e'
  1327  00DC9F  20                 	db	32
  1328  00DCA0  63                 	db	99	;'c'
  1329  00DCA1  6F                 	db	111	;'o'
  1330  00DCA2  6E                 	db	110	;'n'
  1331  00DCA3  64                 	db	100	;'d'
  1332  00DCA4  69                 	db	105	;'i'
  1333  00DCA5  74                 	db	116	;'t'
  1334  00DCA6  69                 	db	105	;'i'
  1335  00DCA7  6F                 	db	111	;'o'
  1336  00DCA8  6E                 	db	110	;'n'
  1337  00DCA9  20                 	db	32
  1338  00DCAA  68                 	db	104	;'h'
  1339  00DCAB  61                 	db	97	;'a'
  1340  00DCAC  73                 	db	115	;'s'
  1341  00DCAD  20                 	db	32
  1342  00DCAE  6F                 	db	111	;'o'
  1343  00DCAF  63                 	db	99	;'c'
  1344  00DCB0  63                 	db	99	;'c'
  1345  00DCB1  75                 	db	117	;'u'
  1346  00DCB2  72                 	db	114	;'r'
  1347  00DCB3  72                 	db	114	;'r'
  1348  00DCB4  65                 	db	101	;'e'
  1349  00DCB5  64                 	db	100	;'d'
  1350  00DCB6  20                 	db	32
  1351  00DCB7  6F                 	db	111	;'o'
  1352  00DCB8  72                 	db	114	;'r'
  1353  00DCB9  20                 	db	32
  1354  00DCBA  6E                 	db	110	;'n'
  1355  00DCBB  6F                 	db	111	;'o'
  1356  00DCBC  74                 	db	116	;'t'
  1357  00DCBD  0A                 	db	10
  1358  00DCBE  0D                 	db	13
  1359  00DCBF  20                 	db	32
  1360  00DCC0  20                 	db	32
  1361  00DCC1  20                 	db	32
  1362  00DCC2  43                 	db	67	;'C'
  1363  00DCC3  6C                 	db	108	;'l'
  1364  00DCC4  65                 	db	101	;'e'
  1365  00DCC5  61                 	db	97	;'a'
  1366  00DCC6  72                 	db	114	;'r'
  1367  00DCC7  20                 	db	32
  1368  00DCC8  4D                 	db	77	;'M'
  1369  00DCC9  61                 	db	97	;'a'
  1370  00DCCA  78                 	db	120	;'x'
  1371  00DCCB  20                 	db	32
  1372  00DCCC  56                 	db	86	;'V'
  1373  00DCCD  61                 	db	97	;'a'
  1374  00DCCE  6C                 	db	108	;'l'
  1375  00DCCF  75                 	db	117	;'u'
  1376  00DCD0  65                 	db	101	;'e'
  1377  00DCD1  73                 	db	115	;'s'
  1378  00DCD2  3A                 	db	58	;':'
  1379  00DCD3  20                 	db	32
  1380  00DCD4  45                 	db	69	;'E'
  1381  00DCD5  72                 	db	114	;'r'
  1382  00DCD6  61                 	db	97	;'a'
  1383  00DCD7  73                 	db	115	;'s'
  1384  00DCD8  65                 	db	101	;'e'
  1385  00DCD9  73                 	db	115	;'s'
  1386  00DCDA  20                 	db	32
  1387  00DCDB  6D                 	db	109	;'m'
  1388  00DCDC  61                 	db	97	;'a'
  1389  00DCDD  78                 	db	120	;'x'
  1390  00DCDE  69                 	db	105	;'i'
  1391  00DCDF  6D                 	db	109	;'m'
  1392  00DCE0  75                 	db	117	;'u'
  1393  00DCE1  6D                 	db	109	;'m'
  1394  00DCE2  20                 	db	32
  1395  00DCE3  72                 	db	114	;'r'
  1396  00DCE4  65                 	db	101	;'e'
  1397  00DCE5  63                 	db	99	;'c'
  1398  00DCE6  6F                 	db	111	;'o'
  1399  00DCE7  72                 	db	114	;'r'
  1400  00DCE8  64                 	db	100	;'d'
  1401  00DCE9  65                 	db	101	;'e'
  1402  00DCEA  64                 	db	100	;'d'
  1403  00DCEB  20                 	db	32
  1404  00DCEC  76                 	db	118	;'v'
  1405  00DCED  61                 	db	97	;'a'
  1406  00DCEE  6C                 	db	108	;'l'
  1407  00DCEF  75                 	db	117	;'u'
  1408  00DCF0  65                 	db	101	;'e'
  1409  00DCF1  73                 	db	115	;'s'
  1410  00DCF2  20                 	db	32
  1411  00DCF3  66                 	db	102	;'f'
  1412  00DCF4  72                 	db	114	;'r'
  1413  00DCF5  6F                 	db	111	;'o'
  1414  00DCF6  6D                 	db	109	;'m'
  1415  00DCF7  20                 	db	32
  1416  00DCF8  45                 	db	69	;'E'
  1417  00DCF9  45                 	db	69	;'E'
  1418  00DCFA  50                 	db	80	;'P'
  1419  00DCFB  52                 	db	82	;'R'
  1420  00DCFC  4F                 	db	79	;'O'
  1421  00DCFD  4D                 	db	77	;'M'
  1422  00DCFE  0A                 	db	10
  1423  00DCFF  0D                 	db	13
  1424  00DD00  20                 	db	32
  1425  00DD01  20                 	db	32
  1426  00DD02  20                 	db	32
  1427  00DD03  48                 	db	72	;'H'
  1428  00DD04  65                 	db	101	;'e'
  1429  00DD05  6C                 	db	108	;'l'
  1430  00DD06  70                 	db	112	;'p'
  1431  00DD07  3A                 	db	58	;':'
  1432  00DD08  20                 	db	32
  1433  00DD09  54                 	db	84	;'T'
  1434  00DD0A  68                 	db	104	;'h'
  1435  00DD0B  69                 	db	105	;'i'
  1436  00DD0C  73                 	db	115	;'s'
  1437  00DD0D  20                 	db	32
  1438  00DD0E  6D                 	db	109	;'m'
  1439  00DD0F  65                 	db	101	;'e'
  1440  00DD10  73                 	db	115	;'s'
  1441  00DD11  73                 	db	115	;'s'
  1442  00DD12  61                 	db	97	;'a'
  1443  00DD13  67                 	db	103	;'g'
  1444  00DD14  65                 	db	101	;'e'
  1445  00DD15  2C                 	db	44
  1446  00DD16  20                 	db	32
  1447  00DD17  6C                 	db	108	;'l'
  1448  00DD18  69                 	db	105	;'i'
  1449  00DD19  73                 	db	115	;'s'
  1450  00DD1A  74                 	db	116	;'t'
  1451  00DD1B  73                 	db	115	;'s'
  1452  00DD1C  20                 	db	32
  1453  00DD1D  73                 	db	115	;'s'
  1454  00DD1E  75                 	db	117	;'u'
  1455  00DD1F  70                 	db	112	;'p'
  1456  00DD20  70                 	db	112	;'p'
  1457  00DD21  6F                 	db	111	;'o'
  1458  00DD22  72                 	db	114	;'r'
  1459  00DD23  74                 	db	116	;'t'
  1460  00DD24  65                 	db	101	;'e'
  1461  00DD25  64                 	db	100	;'d'
  1462  00DD26  20                 	db	32
  1463  00DD27  63                 	db	99	;'c'
  1464  00DD28  6F                 	db	111	;'o'
  1465  00DD29  6D                 	db	109	;'m'
  1466  00DD2A  6D                 	db	109	;'m'
  1467  00DD2B  61                 	db	97	;'a'
  1468  00DD2C  6E                 	db	110	;'n'
  1469  00DD2D  64                 	db	100	;'d'
  1470  00DD2E  73                 	db	115	;'s'
  1471  00DD2F  0A                 	db	10
  1472  00DD30  0D                 	db	13
  1473  00DD31  0A                 	db	10
  1474  00DD32  0D                 	db	13
  1475  00DD33  44                 	db	68	;'D'
  1476  00DD34  65                 	db	101	;'e'
  1477  00DD35  76                 	db	118	;'v'
  1478  00DD36  69                 	db	105	;'i'
  1479  00DD37  63                 	db	99	;'c'
  1480  00DD38  65                 	db	101	;'e'
  1481  00DD39  20                 	db	32
  1482  00DD3A  4D                 	db	77	;'M'
  1483  00DD3B  65                 	db	101	;'e'
  1484  00DD3C  61                 	db	97	;'a'
  1485  00DD3D  73                 	db	115	;'s'
  1486  00DD3E  75                 	db	117	;'u'
  1487  00DD3F  72                 	db	114	;'r'
  1488  00DD40  65                 	db	101	;'e'
  1489  00DD41  6D                 	db	109	;'m'
  1490  00DD42  65                 	db	101	;'e'
  1491  00DD43  6E                 	db	110	;'n'
  1492  00DD44  74                 	db	116	;'t'
  1493  00DD45  20                 	db	32
  1494  00DD46  43                 	db	67	;'C'
  1495  00DD47  6F                 	db	111	;'o'
  1496  00DD48  6D                 	db	109	;'m'
  1497  00DD49  6D                 	db	109	;'m'
  1498  00DD4A  61                 	db	97	;'a'
  1499  00DD4B  6E                 	db	110	;'n'
  1500  00DD4C  64                 	db	100	;'d'
  1501  00DD4D  73                 	db	115	;'s'
  1502  00DD4E  3A                 	db	58	;':'
  1503  00DD4F  20                 	db	32
  1504  00DD50  56                 	db	86	;'V'
  1505  00DD51  69                 	db	105	;'i'
  1506  00DD52  65                 	db	101	;'e'
  1507  00DD53  77                 	db	119	;'w'
  1508  00DD54  20                 	db	32
  1509  00DD55  6C                 	db	108	;'l'
  1510  00DD56  6F                 	db	111	;'o'
  1511  00DD57  77                 	db	119	;'w'
  1512  00DD58  20                 	db	32
  1513  00DD59  6C                 	db	108	;'l'
  1514  00DD5A  65                 	db	101	;'e'
  1515  00DD5B  76                 	db	118	;'v'
  1516  00DD5C  65                 	db	101	;'e'
  1517  00DD5D  6C                 	db	108	;'l'
  1518  00DD5E  20                 	db	32
  1519  00DD5F  73                 	db	115	;'s'
  1520  00DD60  79                 	db	121	;'y'
  1521  00DD61  73                 	db	115	;'s'
  1522  00DD62  74                 	db	116	;'t'
  1523  00DD63  65                 	db	101	;'e'
  1524  00DD64  6D                 	db	109	;'m'
  1525  00DD65  20                 	db	32
  1526  00DD66  6D                 	db	109	;'m'
  1527  00DD67  65                 	db	101	;'e'
  1528  00DD68  61                 	db	97	;'a'
  1529  00DD69  73                 	db	115	;'s'
  1530  00DD6A  75                 	db	117	;'u'
  1531  00DD6B  72                 	db	114	;'r'
  1532  00DD6C  65                 	db	101	;'e'
  1533  00DD6D  6D                 	db	109	;'m'
  1534  00DD6E  65                 	db	101	;'e'
  1535  00DD6F  6E                 	db	110	;'n'
  1536  00DD70  74                 	db	116	;'t'
  1537  00DD71  73                 	db	115	;'s'
  1538  00DD72  0A                 	db	10
  1539  00DD73  0D                 	db	13
  1540  00DD74  20                 	db	32
  1541  00DD75  20                 	db	32
  1542  00DD76  20                 	db	32
  1543  00DD77  4D                 	db	77	;'M'
  1544  00DD78  65                 	db	101	;'e'
  1545  00DD79  61                 	db	97	;'a'
  1546  00DD7A  73                 	db	115	;'s'
  1547  00DD7B  75                 	db	117	;'u'
  1548  00DD7C  72                 	db	114	;'r'
  1549  00DD7D  65                 	db	101	;'e'
  1550  00DD7E  20                 	db	32
  1551  00DD7F  50                 	db	80	;'P'
  1552  00DD80  4F                 	db	79	;'O'
  1553  00DD81  53                 	db	83	;'S'
  1554  00DD82  33                 	db	51	;'3'
  1555  00DD83  50                 	db	80	;'P'
  1556  00DD84  33                 	db	51	;'3'
  1557  00DD85  3F                 	db	63	;'?'
  1558  00DD86  3A                 	db	58	;':'
  1559  00DD87  20                 	db	32
  1560  00DD88  52                 	db	82	;'R'
  1561  00DD89  65                 	db	101	;'e'
  1562  00DD8A  74                 	db	116	;'t'
  1563  00DD8B  75                 	db	117	;'u'
  1564  00DD8C  72                 	db	114	;'r'
  1565  00DD8D  6E                 	db	110	;'n'
  1566  00DD8E  73                 	db	115	;'s'
  1567  00DD8F  20                 	db	32
  1568  00DD90  2B                 	db	43
  1569  00DD91  33                 	db	51	;'3'
  1570  00DD92  2E                 	db	46
  1571  00DD93  33                 	db	51	;'3'
  1572  00DD94  56                 	db	86	;'V'
  1573  00DD95  20                 	db	32
  1574  00DD96  41                 	db	65	;'A'
  1575  00DD97  44                 	db	68	;'D'
  1576  00DD98  43                 	db	67	;'C'
  1577  00DD99  20                 	db	32
  1578  00DD9A  43                 	db	67	;'C'
  1579  00DD9B  6F                 	db	111	;'o'
  1580  00DD9C  6E                 	db	110	;'n'
  1581  00DD9D  76                 	db	118	;'v'
  1582  00DD9E  65                 	db	101	;'e'
  1583  00DD9F  72                 	db	114	;'r'
  1584  00DDA0  73                 	db	115	;'s'
  1585  00DDA1  69                 	db	105	;'i'
  1586  00DDA2  6F                 	db	111	;'o'
  1587  00DDA3  6E                 	db	110	;'n'
  1588  00DDA4  20                 	db	32
  1589  00DDA5  69                 	db	105	;'i'
  1590  00DDA6  6E                 	db	110	;'n'
  1591  00DDA7  20                 	db	32
  1592  00DDA8  76                 	db	118	;'v'
  1593  00DDA9  6F                 	db	111	;'o'
  1594  00DDAA  6C                 	db	108	;'l'
  1595  00DDAB  74                 	db	116	;'t'
  1596  00DDAC  73                 	db	115	;'s'
  1597  00DDAD  0A                 	db	10
  1598  00DDAE  0D                 	db	13
  1599  00DDAF  20                 	db	32
  1600  00DDB0  20                 	db	32
  1601  00DDB1  20                 	db	32
  1602  00DDB2  4D                 	db	77	;'M'
  1603  00DDB3  65                 	db	101	;'e'
  1604  00DDB4  61                 	db	97	;'a'
  1605  00DDB5  73                 	db	115	;'s'
  1606  00DDB6  75                 	db	117	;'u'
  1607  00DDB7  72                 	db	114	;'r'
  1608  00DDB8  65                 	db	101	;'e'
  1609  00DDB9  20                 	db	32
  1610  00DDBA  50                 	db	80	;'P'
  1611  00DDBB  4F                 	db	79	;'O'
  1612  00DDBC  53                 	db	83	;'S'
  1613  00DDBD  31                 	db	49	;'1'
  1614  00DDBE  32                 	db	50	;'2'
  1615  00DDBF  3F                 	db	63	;'?'
  1616  00DDC0  3A                 	db	58	;':'
  1617  00DDC1  20                 	db	32
  1618  00DDC2  52                 	db	82	;'R'
  1619  00DDC3  65                 	db	101	;'e'
  1620  00DDC4  74                 	db	116	;'t'
  1621  00DDC5  75                 	db	117	;'u'
  1622  00DDC6  72                 	db	114	;'r'
  1623  00DDC7  6E                 	db	110	;'n'
  1624  00DDC8  73                 	db	115	;'s'
  1625  00DDC9  20                 	db	32
  1626  00DDCA  2B                 	db	43
  1627  00DDCB  31                 	db	49	;'1'
  1628  00DDCC  32                 	db	50	;'2'
  1629  00DDCD  56                 	db	86	;'V'
  1630  00DDCE  20                 	db	32
  1631  00DDCF  41                 	db	65	;'A'
  1632  00DDD0  44                 	db	68	;'D'
  1633  00DDD1  43                 	db	67	;'C'
  1634  00DDD2  20                 	db	32
  1635  00DDD3  43                 	db	67	;'C'
  1636  00DDD4  6F                 	db	111	;'o'
  1637  00DDD5  6E                 	db	110	;'n'
  1638  00DDD6  76                 	db	118	;'v'
  1639  00DDD7  65                 	db	101	;'e'
  1640  00DDD8  72                 	db	114	;'r'
  1641  00DDD9  73                 	db	115	;'s'
  1642  00DDDA  69                 	db	105	;'i'
  1643  00DDDB  6F                 	db	111	;'o'
  1644  00DDDC  6E                 	db	110	;'n'
  1645  00DDDD  20                 	db	32
  1646  00DDDE  69                 	db	105	;'i'
  1647  00DDDF  6E                 	db	110	;'n'
  1648  00DDE0  20                 	db	32
  1649  00DDE1  76                 	db	118	;'v'
  1650  00DDE2  6F                 	db	111	;'o'
  1651  00DDE3  6C                 	db	108	;'l'
  1652  00DDE4  74                 	db	116	;'t'
  1653  00DDE5  73                 	db	115	;'s'
  1654  00DDE6  0A                 	db	10
  1655  00DDE7  0D                 	db	13
  1656  00DDE8  20                 	db	32
  1657  00DDE9  20                 	db	32
  1658  00DDEA  20                 	db	32
  1659  00DDEB  4D                 	db	77	;'M'
  1660  00DDEC  65                 	db	101	;'e'
  1661  00DDED  61                 	db	97	;'a'
  1662  00DDEE  73                 	db	115	;'s'
  1663  00DDEF  75                 	db	117	;'u'
  1664  00DDF0  72                 	db	114	;'r'
  1665  00DDF1  65                 	db	101	;'e'
  1666  00DDF2  20                 	db	32
  1667  00DDF3  44                 	db	68	;'D'
  1668  00DDF4  69                 	db	105	;'i'
  1669  00DDF5  65                 	db	101	;'e'
  1670  00DDF6  20                 	db	32
  1671  00DDF7  54                 	db	84	;'T'
  1672  00DDF8  65                 	db	101	;'e'
  1673  00DDF9  6D                 	db	109	;'m'
  1674  00DDFA  70                 	db	112	;'p'
  1675  00DDFB  3F                 	db	63	;'?'
  1676  00DDFC  3A                 	db	58	;':'
  1677  00DDFD  20                 	db	32
  1678  00DDFE  52                 	db	82	;'R'
  1679  00DDFF  65                 	db	101	;'e'
  1680  00DE00  74                 	db	116	;'t'
  1681  00DE01  75                 	db	117	;'u'
  1682  00DE02  72                 	db	114	;'r'
  1683  00DE03  6E                 	db	110	;'n'
  1684  00DE04  73                 	db	115	;'s'
  1685  00DE05  20                 	db	32
  1686  00DE06  74                 	db	116	;'t'
  1687  00DE07  68                 	db	104	;'h'
  1688  00DE08  65                 	db	101	;'e'
  1689  00DE09  20                 	db	32
  1690  00DE0A  6D                 	db	109	;'m'
  1691  00DE0B  69                 	db	105	;'i'
  1692  00DE0C  63                 	db	99	;'c'
  1693  00DE0D  72                 	db	114	;'r'
  1694  00DE0E  6F                 	db	111	;'o'
  1695  00DE0F  63                 	db	99	;'c'
  1696  00DE10  6F                 	db	111	;'o'
  1697  00DE11  6E                 	db	110	;'n'
  1698  00DE12  74                 	db	116	;'t'
  1699  00DE13  72                 	db	114	;'r'
  1700  00DE14  6F                 	db	111	;'o'
  1701  00DE15  6C                 	db	108	;'l'
  1702  00DE16  6C                 	db	108	;'l'
  1703  00DE17  65                 	db	101	;'e'
  1704  00DE18  72                 	db	114	;'r'
  1705  00DE19  20                 	db	32
  1706  00DE1A  64                 	db	100	;'d'
  1707  00DE1B  69                 	db	105	;'i'
  1708  00DE1C  65                 	db	101	;'e'
  1709  00DE1D  20                 	db	32
  1710  00DE1E  74                 	db	116	;'t'
  1711  00DE1F  65                 	db	101	;'e'
  1712  00DE20  6D                 	db	109	;'m'
  1713  00DE21  70                 	db	112	;'p'
  1714  00DE22  65                 	db	101	;'e'
  1715  00DE23  72                 	db	114	;'r'
  1716  00DE24  61                 	db	97	;'a'
  1717  00DE25  74                 	db	116	;'t'
  1718  00DE26  75                 	db	117	;'u'
  1719  00DE27  72                 	db	114	;'r'
  1720  00DE28  65                 	db	101	;'e'
  1721  00DE29  20                 	db	32
  1722  00DE2A  69                 	db	105	;'i'
  1723  00DE2B  6E                 	db	110	;'n'
  1724  00DE2C  20                 	db	32
  1725  00DE2D  64                 	db	100	;'d'
  1726  00DE2E  65                 	db	101	;'e'
  1727  00DE2F  67                 	db	103	;'g'
  1728  00DE30  72                 	db	114	;'r'
  1729  00DE31  65                 	db	101	;'e'
  1730  00DE32  65                 	db	101	;'e'
  1731  00DE33  73                 	db	115	;'s'
  1732  00DE34  20                 	db	32
  1733  00DE35  43                 	db	67	;'C'
  1734  00DE36  0A                 	db	10
  1735  00DE37  0D                 	db	13
  1736  00DE38  20                 	db	32
  1737  00DE39  20                 	db	32
  1738  00DE3A  20                 	db	32
  1739  00DE3B  4D                 	db	77	;'M'
  1740  00DE3C  65                 	db	101	;'e'
  1741  00DE3D  61                 	db	97	;'a'
  1742  00DE3E  73                 	db	115	;'s'
  1743  00DE3F  75                 	db	117	;'u'
  1744  00DE40  72                 	db	114	;'r'
  1745  00DE41  65                 	db	101	;'e'
  1746  00DE42  20                 	db	32
  1747  00DE43  46                 	db	70	;'F'
  1748  00DE44  56                 	db	86	;'V'
  1749  00DE45  52                 	db	82	;'R'
  1750  00DE46  3F                 	db	63	;'?'
  1751  00DE47  3A                 	db	58	;':'
  1752  00DE48  20                 	db	32
  1753  00DE49  52                 	db	82	;'R'
  1754  00DE4A  65                 	db	101	;'e'
  1755  00DE4B  74                 	db	116	;'t'
  1756  00DE4C  75                 	db	117	;'u'
  1757  00DE4D  72                 	db	114	;'r'
  1758  00DE4E  6E                 	db	110	;'n'
  1759  00DE4F  73                 	db	115	;'s'
  1760  00DE50  20                 	db	32
  1761  00DE51  74                 	db	116	;'t'
  1762  00DE52  68                 	db	104	;'h'
  1763  00DE53  65                 	db	101	;'e'
  1764  00DE54  20                 	db	32
  1765  00DE55  69                 	db	105	;'i'
  1766  00DE56  6E                 	db	110	;'n'
  1767  00DE57  74                 	db	116	;'t'
  1768  00DE58  65                 	db	101	;'e'
  1769  00DE59  72                 	db	114	;'r'
  1770  00DE5A  6E                 	db	110	;'n'
  1771  00DE5B  61                 	db	97	;'a'
  1772  00DE5C  6C                 	db	108	;'l'
  1773  00DE5D  20                 	db	32
  1774  00DE5E  66                 	db	102	;'f'
  1775  00DE5F  69                 	db	105	;'i'
  1776  00DE60  78                 	db	120	;'x'
  1777  00DE61  65                 	db	101	;'e'
  1778  00DE62  64                 	db	100	;'d'
  1779  00DE63  20                 	db	32
  1780  00DE64  76                 	db	118	;'v'
  1781  00DE65  6F                 	db	111	;'o'
  1782  00DE66  6C                 	db	108	;'l'
  1783  00DE67  74                 	db	116	;'t'
  1784  00DE68  61                 	db	97	;'a'
  1785  00DE69  67                 	db	103	;'g'
  1786  00DE6A  65                 	db	101	;'e'
  1787  00DE6B  20                 	db	32
  1788  00DE6C  72                 	db	114	;'r'
  1789  00DE6D  65                 	db	101	;'e'
  1790  00DE6E  66                 	db	102	;'f'
  1791  00DE6F  65                 	db	101	;'e'
  1792  00DE70  72                 	db	114	;'r'
  1793  00DE71  65                 	db	101	;'e'
  1794  00DE72  6E                 	db	110	;'n'
  1795  00DE73  63                 	db	99	;'c'
  1796  00DE74  65                 	db	101	;'e'
  1797  00DE75  20                 	db	32
  1798  00DE76  62                 	db	98	;'b'
  1799  00DE77  75                 	db	117	;'u'
  1800  00DE78  66                 	db	102	;'f'
  1801  00DE79  66                 	db	102	;'f'
  1802  00DE7A  65                 	db	101	;'e'
  1803  00DE7B  72                 	db	114	;'r'
  1804  00DE7C  20                 	db	32
  1805  00DE7D  31                 	db	49	;'1'
  1806  00DE7E  20                 	db	32
  1807  00DE7F  6F                 	db	111	;'o'
  1808  00DE80  75                 	db	117	;'u'
  1809  00DE81  74                 	db	116	;'t'
  1810  00DE82  70                 	db	112	;'p'
  1811  00DE83  75                 	db	117	;'u'
  1812  00DE84  74                 	db	116	;'t'
  1813  00DE85  20                 	db	32
  1814  00DE86  69                 	db	105	;'i'
  1815  00DE87  6E                 	db	110	;'n'
  1816  00DE88  20                 	db	32
  1817  00DE89  76                 	db	118	;'v'
  1818  00DE8A  6F                 	db	111	;'o'
  1819  00DE8B  6C                 	db	108	;'l'
  1820  00DE8C  74                 	db	116	;'t'
  1821  00DE8D  73                 	db	115	;'s'
  1822  00DE8E  0A                 	db	10
  1823  00DE8F  0D                 	db	13
  1824  00DE90  20                 	db	32
  1825  00DE91  20                 	db	32
  1826  00DE92  20                 	db	32
  1827  00DE93  4D                 	db	77	;'M'
  1828  00DE94  65                 	db	101	;'e'
  1829  00DE95  61                 	db	97	;'a'
  1830  00DE96  73                 	db	115	;'s'
  1831  00DE97  75                 	db	117	;'u'
  1832  00DE98  72                 	db	114	;'r'
  1833  00DE99  65                 	db	101	;'e'
  1834  00DE9A  20                 	db	32
  1835  00DE9B  41                 	db	65	;'A'
  1836  00DE9C  56                 	db	86	;'V'
  1837  00DE9D  53                 	db	83	;'S'
  1838  00DE9E  53                 	db	83	;'S'
  1839  00DE9F  3F                 	db	63	;'?'
  1840  00DEA0  3A                 	db	58	;':'
  1841  00DEA1  20                 	db	32
  1842  00DEA2  52                 	db	82	;'R'
  1843  00DEA3  65                 	db	101	;'e'
  1844  00DEA4  74                 	db	116	;'t'
  1845  00DEA5  75                 	db	117	;'u'
  1846  00DEA6  72                 	db	114	;'r'
  1847  00DEA7  6E                 	db	110	;'n'
  1848  00DEA8  73                 	db	115	;'s'
  1849  00DEA9  20                 	db	32
  1850  00DEAA  74                 	db	116	;'t'
  1851  00DEAB  68                 	db	104	;'h'
  1852  00DEAC  65                 	db	101	;'e'
  1853  00DEAD  20                 	db	32
  1854  00DEAE  6D                 	db	109	;'m'
  1855  00DEAF  65                 	db	101	;'e'
  1856  00DEB0  61                 	db	97	;'a'
  1857  00DEB1  73                 	db	115	;'s'
  1858  00DEB2  75                 	db	117	;'u'
  1859  00DEB3  72                 	db	114	;'r'
  1860  00DEB4  65                 	db	101	;'e'
  1861  00DEB5  64                 	db	100	;'d'
  1862  00DEB6  20                 	db	32
  1863  00DEB7  76                 	db	118	;'v'
  1864  00DEB8  61                 	db	97	;'a'
  1865  00DEB9  6C                 	db	108	;'l'
  1866  00DEBA  75                 	db	117	;'u'
  1867  00DEBB  65                 	db	101	;'e'
  1868  00DEBC  20                 	db	32
  1869  00DEBD  6F                 	db	111	;'o'
  1870  00DEBE  66                 	db	102	;'f'
  1871  00DEBF  20                 	db	32
  1872  00DEC0  41                 	db	65	;'A'
  1873  00DEC1  6E                 	db	110	;'n'
  1874  00DEC2  61                 	db	97	;'a'
  1875  00DEC3  6C                 	db	108	;'l'
  1876  00DEC4  6F                 	db	111	;'o'
  1877  00DEC5  67                 	db	103	;'g'
  1878  00DEC6  20                 	db	32
  1879  00DEC7  56                 	db	86	;'V'
  1880  00DEC8  53                 	db	83	;'S'
  1881  00DEC9  53                 	db	83	;'S'
  1882  00DECA  20                 	db	32
  1883  00DECB  69                 	db	105	;'i'
  1884  00DECC  6E                 	db	110	;'n'
  1885  00DECD  20                 	db	32
  1886  00DECE  76                 	db	118	;'v'
  1887  00DECF  6F                 	db	111	;'o'
  1888  00DED0  6C                 	db	108	;'l'
  1889  00DED1  74                 	db	116	;'t'
  1890  00DED2  73                 	db	115	;'s'
  1891  00DED3  0A                 	db	10
  1892  00DED4  0D                 	db	13
  1893  00DED5  20                 	db	32
  1894  00DED6  20                 	db	32
  1895  00DED7  20                 	db	32
  1896  00DED8  4D                 	db	77	;'M'
  1897  00DED9  61                 	db	97	;'a'
  1898  00DEDA  78                 	db	120	;'x'
  1899  00DEDB  20                 	db	32
  1900  00DEDC  50                 	db	80	;'P'
  1901  00DEDD  4F                 	db	79	;'O'
  1902  00DEDE  53                 	db	83	;'S'
  1903  00DEDF  33                 	db	51	;'3'
  1904  00DEE0  50                 	db	80	;'P'
  1905  00DEE1  33                 	db	51	;'3'
  1906  00DEE2  20                 	db	32
  1907  00DEE3  56                 	db	86	;'V'
  1908  00DEE4  6F                 	db	111	;'o'
  1909  00DEE5  6C                 	db	108	;'l'
  1910  00DEE6  74                 	db	116	;'t'
  1911  00DEE7  61                 	db	97	;'a'
  1912  00DEE8  67                 	db	103	;'g'
  1913  00DEE9  65                 	db	101	;'e'
  1914  00DEEA  3F                 	db	63	;'?'
  1915  00DEEB  3A                 	db	58	;':'
  1916  00DEEC  20                 	db	32
  1917  00DEED  52                 	db	82	;'R'
  1918  00DEEE  65                 	db	101	;'e'
  1919  00DEEF  74                 	db	116	;'t'
  1920  00DEF0  75                 	db	117	;'u'
  1921  00DEF1  72                 	db	114	;'r'
  1922  00DEF2  6E                 	db	110	;'n'
  1923  00DEF3  73                 	db	115	;'s'
  1924  00DEF4  20                 	db	32
  1925  00DEF5  74                 	db	116	;'t'
  1926  00DEF6  68                 	db	104	;'h'
  1927  00DEF7  65                 	db	101	;'e'
  1928  00DEF8  20                 	db	32
  1929  00DEF9  6D                 	db	109	;'m'
  1930  00DEFA  61                 	db	97	;'a'
  1931  00DEFB  78                 	db	120	;'x'
  1932  00DEFC  69                 	db	105	;'i'
  1933  00DEFD  6D                 	db	109	;'m'
  1934  00DEFE  75                 	db	117	;'u'
  1935  00DEFF  6D                 	db	109	;'m'
  1936  00DF00  20                 	db	32
  1937  00DF01  72                 	db	114	;'r'
  1938  00DF02  65                 	db	101	;'e'
  1939  00DF03  63                 	db	99	;'c'
  1940  00DF04  6F                 	db	111	;'o'
  1941  00DF05  72                 	db	114	;'r'
  1942  00DF06  64                 	db	100	;'d'
  1943  00DF07  65                 	db	101	;'e'
  1944  00DF08  64                 	db	100	;'d'
  1945  00DF09  20                 	db	32
  1946  00DF0A  2B                 	db	43
  1947  00DF0B  33                 	db	51	;'3'
  1948  00DF0C  2E                 	db	46
  1949  00DF0D  33                 	db	51	;'3'
  1950  00DF0E  56                 	db	86	;'V'
  1951  00DF0F  20                 	db	32
  1952  00DF10  52                 	db	82	;'R'
  1953  00DF11  61                 	db	97	;'a'
  1954  00DF12  69                 	db	105	;'i'
  1955  00DF13  6C                 	db	108	;'l'
  1956  00DF14  20                 	db	32
  1957  00DF15  56                 	db	86	;'V'
  1958  00DF16  6F                 	db	111	;'o'
  1959  00DF17  6C                 	db	108	;'l'
  1960  00DF18  74                 	db	116	;'t'
  1961  00DF19  61                 	db	97	;'a'
  1962  00DF1A  67                 	db	103	;'g'
  1963  00DF1B  65                 	db	101	;'e'
  1964  00DF1C  20                 	db	32
  1965  00DF1D  6D                 	db	109	;'m'
  1966  00DF1E  65                 	db	101	;'e'
  1967  00DF1F  61                 	db	97	;'a'
  1968  00DF20  73                 	db	115	;'s'
  1969  00DF21  75                 	db	117	;'u'
  1970  00DF22  72                 	db	114	;'r'
  1971  00DF23  65                 	db	101	;'e'
  1972  00DF24  64                 	db	100	;'d'
  1973  00DF25  0A                 	db	10
  1974  00DF26  0D                 	db	13
  1975  00DF27  20                 	db	32
  1976  00DF28  20                 	db	32
  1977  00DF29  20                 	db	32
  1978  00DF2A  4D                 	db	77	;'M'
  1979  00DF2B  61                 	db	97	;'a'
  1980  00DF2C  78                 	db	120	;'x'
  1981  00DF2D  20                 	db	32
  1982  00DF2E  50                 	db	80	;'P'
  1983  00DF2F  4F                 	db	79	;'O'
  1984  00DF30  53                 	db	83	;'S'
  1985  00DF31  31                 	db	49	;'1'
  1986  00DF32  32                 	db	50	;'2'
  1987  00DF33  20                 	db	32
  1988  00DF34  56                 	db	86	;'V'
  1989  00DF35  6F                 	db	111	;'o'
  1990  00DF36  6C                 	db	108	;'l'
  1991  00DF37  74                 	db	116	;'t'
  1992  00DF38  61                 	db	97	;'a'
  1993  00DF39  67                 	db	103	;'g'
  1994  00DF3A  65                 	db	101	;'e'
  1995  00DF3B  3F                 	db	63	;'?'
  1996  00DF3C  3A                 	db	58	;':'
  1997  00DF3D  20                 	db	32
  1998  00DF3E  52                 	db	82	;'R'
  1999  00DF3F  65                 	db	101	;'e'
  2000  00DF40  74                 	db	116	;'t'
  2001  00DF41  75                 	db	117	;'u'
  2002  00DF42  72                 	db	114	;'r'
  2003  00DF43  6E                 	db	110	;'n'
  2004  00DF44  73                 	db	115	;'s'
  2005  00DF45  20                 	db	32
  2006  00DF46  74                 	db	116	;'t'
  2007  00DF47  68                 	db	104	;'h'
  2008  00DF48  65                 	db	101	;'e'
  2009  00DF49  20                 	db	32
  2010  00DF4A  6D                 	db	109	;'m'
  2011  00DF4B  61                 	db	97	;'a'
  2012  00DF4C  78                 	db	120	;'x'
  2013  00DF4D  69                 	db	105	;'i'
  2014  00DF4E  6D                 	db	109	;'m'
  2015  00DF4F  75                 	db	117	;'u'
  2016  00DF50  6D                 	db	109	;'m'
  2017  00DF51  20                 	db	32
  2018  00DF52  72                 	db	114	;'r'
  2019  00DF53  65                 	db	101	;'e'
  2020  00DF54  63                 	db	99	;'c'
  2021  00DF55  6F                 	db	111	;'o'
  2022  00DF56  72                 	db	114	;'r'
  2023  00DF57  64                 	db	100	;'d'
  2024  00DF58  65                 	db	101	;'e'
  2025  00DF59  64                 	db	100	;'d'
  2026  00DF5A  20                 	db	32
  2027  00DF5B  2B                 	db	43
  2028  00DF5C  31                 	db	49	;'1'
  2029  00DF5D  32                 	db	50	;'2'
  2030  00DF5E  56                 	db	86	;'V'
  2031  00DF5F  20                 	db	32
  2032  00DF60  52                 	db	82	;'R'
  2033  00DF61  61                 	db	97	;'a'
  2034  00DF62  69                 	db	105	;'i'
  2035  00DF63  6C                 	db	108	;'l'
  2036  00DF64  20                 	db	32
  2037  00DF65  56                 	db	86	;'V'
  2038  00DF66  6F                 	db	111	;'o'
  2039  00DF67  6C                 	db	108	;'l'
  2040  00DF68  74                 	db	116	;'t'
  2041  00DF69  61                 	db	97	;'a'
  2042  00DF6A  67                 	db	103	;'g'
  2043  00DF6B  65                 	db	101	;'e'
  2044  00DF6C  20                 	db	32
  2045  00DF6D  6D                 	db	109	;'m'
  2046  00DF6E  65                 	db	101	;'e'
  2047  00DF6F  61                 	db	97	;'a'
  2048  00DF70  73                 	db	115	;'s'
  2049  00DF71  75                 	db	117	;'u'
  2050  00DF72  72                 	db	114	;'r'
  2051  00DF73  65                 	db	101	;'e'
  2052  00DF74  64                 	db	100	;'d'
  2053  00DF75  0A                 	db	10
  2054  00DF76  0D                 	db	13
  2055  00DF77  20                 	db	32
  2056  00DF78  20                 	db	32
  2057  00DF79  20                 	db	32
  2058  00DF7A  4D                 	db	77	;'M'
  2059  00DF7B  61                 	db	97	;'a'
  2060  00DF7C  78                 	db	120	;'x'
  2061  00DF7D  20                 	db	32
  2062  00DF7E  44                 	db	68	;'D'
  2063  00DF7F  69                 	db	105	;'i'
  2064  00DF80  65                 	db	101	;'e'
  2065  00DF81  20                 	db	32
  2066  00DF82  54                 	db	84	;'T'
  2067  00DF83  65                 	db	101	;'e'
  2068  00DF84  6D                 	db	109	;'m'
  2069  00DF85  70                 	db	112	;'p'
  2070  00DF86  3F                 	db	63	;'?'
  2071  00DF87  3A                 	db	58	;':'
  2072  00DF88  20                 	db	32
  2073  00DF89  52                 	db	82	;'R'
  2074  00DF8A  65                 	db	101	;'e'
  2075  00DF8B  74                 	db	116	;'t'
  2076  00DF8C  75                 	db	117	;'u'
  2077  00DF8D  72                 	db	114	;'r'
  2078  00DF8E  6E                 	db	110	;'n'
  2079  00DF8F  73                 	db	115	;'s'
  2080  00DF90  20                 	db	32
  2081  00DF91  74                 	db	116	;'t'
  2082  00DF92  68                 	db	104	;'h'
  2083  00DF93  65                 	db	101	;'e'
  2084  00DF94  20                 	db	32
  2085  00DF95  6D                 	db	109	;'m'
  2086  00DF96  61                 	db	97	;'a'
  2087  00DF97  78                 	db	120	;'x'
  2088  00DF98  69                 	db	105	;'i'
  2089  00DF99  6D                 	db	109	;'m'
  2090  00DF9A  75                 	db	117	;'u'
  2091  00DF9B  6D                 	db	109	;'m'
  2092  00DF9C  20                 	db	32
  2093  00DF9D  72                 	db	114	;'r'
  2094  00DF9E  65                 	db	101	;'e'
  2095  00DF9F  63                 	db	99	;'c'
  2096  00DFA0  6F                 	db	111	;'o'
  2097  00DFA1  72                 	db	114	;'r'
  2098  00DFA2  64                 	db	100	;'d'
  2099  00DFA3  65                 	db	101	;'e'
  2100  00DFA4  64                 	db	100	;'d'
  2101  00DFA5  20                 	db	32
  2102  00DFA6  64                 	db	100	;'d'
  2103  00DFA7  69                 	db	105	;'i'
  2104  00DFA8  65                 	db	101	;'e'
  2105  00DFA9  20                 	db	32
  2106  00DFAA  74                 	db	116	;'t'
  2107  00DFAB  65                 	db	101	;'e'
  2108  00DFAC  6D                 	db	109	;'m'
  2109  00DFAD  70                 	db	112	;'p'
  2110  00DFAE  65                 	db	101	;'e'
  2111  00DFAF  72                 	db	114	;'r'
  2112  00DFB0  61                 	db	97	;'a'
  2113  00DFB1  74                 	db	116	;'t'
  2114  00DFB2  75                 	db	117	;'u'
  2115  00DFB3  72                 	db	114	;'r'
  2116  00DFB4  65                 	db	101	;'e'
  2117  00DFB5  20                 	db	32
  2118  00DFB6  6D                 	db	109	;'m'
  2119  00DFB7  65                 	db	101	;'e'
  2120  00DFB8  61                 	db	97	;'a'
  2121  00DFB9  73                 	db	115	;'s'
  2122  00DFBA  75                 	db	117	;'u'
  2123  00DFBB  72                 	db	114	;'r'
  2124  00DFBC  65                 	db	101	;'e'
  2125  00DFBD  64                 	db	100	;'d'
  2126  00DFBE  0A                 	db	10
  2127  00DFBF  0D                 	db	13
  2128  00DFC0  20                 	db	32
  2129  00DFC1  20                 	db	32
  2130  00DFC2  20                 	db	32
  2131  00DFC3  4D                 	db	77	;'M'
  2132  00DFC4  61                 	db	97	;'a'
  2133  00DFC5  78                 	db	120	;'x'
  2134  00DFC6  20                 	db	32
  2135  00DFC7  46                 	db	70	;'F'
  2136  00DFC8  56                 	db	86	;'V'
  2137  00DFC9  52                 	db	82	;'R'
  2138  00DFCA  20                 	db	32
  2139  00DFCB  56                 	db	86	;'V'
  2140  00DFCC  6F                 	db	111	;'o'
  2141  00DFCD  6C                 	db	108	;'l'
  2142  00DFCE  74                 	db	116	;'t'
  2143  00DFCF  61                 	db	97	;'a'
  2144  00DFD0  67                 	db	103	;'g'
  2145  00DFD1  65                 	db	101	;'e'
  2146  00DFD2  3F                 	db	63	;'?'
  2147  00DFD3  3A                 	db	58	;':'
  2148  00DFD4  20                 	db	32
  2149  00DFD5  52                 	db	82	;'R'
  2150  00DFD6  65                 	db	101	;'e'
  2151  00DFD7  74                 	db	116	;'t'
  2152  00DFD8  75                 	db	117	;'u'
  2153  00DFD9  72                 	db	114	;'r'
  2154  00DFDA  6E                 	db	110	;'n'
  2155  00DFDB  73                 	db	115	;'s'
  2156  00DFDC  20                 	db	32
  2157  00DFDD  74                 	db	116	;'t'
  2158  00DFDE  68                 	db	104	;'h'
  2159  00DFDF  65                 	db	101	;'e'
  2160  00DFE0  20                 	db	32
  2161  00DFE1  6D                 	db	109	;'m'
  2162  00DFE2  61                 	db	97	;'a'
  2163  00DFE3  78                 	db	120	;'x'
  2164  00DFE4  69                 	db	105	;'i'
  2165  00DFE5  6D                 	db	109	;'m'
  2166  00DFE6  75                 	db	117	;'u'
  2167  00DFE7  6D                 	db	109	;'m'
  2168  00DFE8  20                 	db	32
  2169  00DFE9  72                 	db	114	;'r'
  2170  00DFEA  65                 	db	101	;'e'
  2171  00DFEB  63                 	db	99	;'c'
  2172  00DFEC  6F                 	db	111	;'o'
  2173  00DFED  72                 	db	114	;'r'
  2174  00DFEE  64                 	db	100	;'d'
  2175  00DFEF  65                 	db	101	;'e'
  2176  00DFF0  64                 	db	100	;'d'
  2177  00DFF1  20                 	db	32
  2178  00DFF2  46                 	db	70	;'F'
  2179  00DFF3  56                 	db	86	;'V'
  2180  00DFF4  52                 	db	82	;'R'
  2181  00DFF5  20                 	db	32
  2182  00DFF6  42                 	db	66	;'B'
  2183  00DFF7  75                 	db	117	;'u'
  2184  00DFF8  66                 	db	102	;'f'
  2185  00DFF9  66                 	db	102	;'f'
  2186  00DFFA  65                 	db	101	;'e'
  2187  00DFFB  72                 	db	114	;'r'
  2188  00DFFC  20                 	db	32
  2189  00DFFD  31                 	db	49	;'1'
  2190  00DFFE  20                 	db	32
  2191  00DFFF  56                 	db	86	;'V'
  2192  00E000  6F                 	db	111	;'o'
  2193  00E001  6C                 	db	108	;'l'
  2194  00E002  74                 	db	116	;'t'
  2195  00E003  61                 	db	97	;'a'
  2196  00E004  67                 	db	103	;'g'
  2197  00E005  65                 	db	101	;'e'
  2198  00E006  20                 	db	32
  2199  00E007  6D                 	db	109	;'m'
  2200  00E008  65                 	db	101	;'e'
  2201  00E009  61                 	db	97	;'a'
  2202  00E00A  73                 	db	115	;'s'
  2203  00E00B  75                 	db	117	;'u'
  2204  00E00C  72                 	db	114	;'r'
  2205  00E00D  65                 	db	101	;'e'
  2206  00E00E  64                 	db	100	;'d'
  2207  00E00F  0A                 	db	10
  2208  00E010  0D                 	db	13
  2209  00E011  0A                 	db	10
  2210  00E012  0D                 	db	13
  2211  00E013  50                 	db	80	;'P'
  2212  00E014  72                 	db	114	;'r'
  2213  00E015  69                 	db	105	;'i'
  2214  00E016  6D                 	db	109	;'m'
  2215  00E017  61                 	db	97	;'a'
  2216  00E018  72                 	db	114	;'r'
  2217  00E019  79                 	db	121	;'y'
  2218  00E01A  20                 	db	32
  2219  00E01B  4D                 	db	77	;'M'
  2220  00E01C  65                 	db	101	;'e'
  2221  00E01D  61                 	db	97	;'a'
  2222  00E01E  73                 	db	115	;'s'
  2223  00E01F  75                 	db	117	;'u'
  2224  00E020  72                 	db	114	;'r'
  2225  00E021  65                 	db	101	;'e'
  2226  00E022  6D                 	db	109	;'m'
  2227  00E023  65                 	db	101	;'e'
  2228  00E024  6E                 	db	110	;'n'
  2229  00E025  74                 	db	116	;'t'
  2230  00E026  20                 	db	32
  2231  00E027  43                 	db	67	;'C'
  2232  00E028  6F                 	db	111	;'o'
  2233  00E029  6D                 	db	109	;'m'
  2234  00E02A  6D                 	db	109	;'m'
  2235  00E02B  61                 	db	97	;'a'
  2236  00E02C  6E                 	db	110	;'n'
  2237  00E02D  64                 	db	100	;'d'
  2238  00E02E  73                 	db	115	;'s'
  2239  00E02F  3A                 	db	58	;':'
  2240  00E030  20                 	db	32
  2241  00E031  56                 	db	86	;'V'
  2242  00E032  69                 	db	105	;'i'
  2243  00E033  65                 	db	101	;'e'
  2244  00E034  77                 	db	119	;'w'
  2245  00E035  20                 	db	32
  2246  00E036  68                 	db	104	;'h'
  2247  00E037  69                 	db	105	;'i'
  2248  00E038  67                 	db	103	;'g'
  2249  00E039  68                 	db	104	;'h'
  2250  00E03A  20                 	db	32
  2251  00E03B  6C                 	db	108	;'l'
  2252  00E03C  65                 	db	101	;'e'
  2253  00E03D  76                 	db	118	;'v'
  2254  00E03E  65                 	db	101	;'e'
  2255  00E03F  6C                 	db	108	;'l'
  2256  00E040  20                 	db	32
  2257  00E041  6F                 	db	111	;'o'
  2258  00E042  75                 	db	117	;'u'
  2259  00E043  74                 	db	116	;'t'
  2260  00E044  70                 	db	112	;'p'
  2261  00E045  75                 	db	117	;'u'
  2262  00E046  74                 	db	116	;'t'
  2263  00E047  20                 	db	32
  2264  00E048  6D                 	db	109	;'m'
  2265  00E049  65                 	db	101	;'e'
  2266  00E04A  61                 	db	97	;'a'
  2267  00E04B  73                 	db	115	;'s'
  2268  00E04C  75                 	db	117	;'u'
  2269  00E04D  72                 	db	114	;'r'
  2270  00E04E  65                 	db	101	;'e'
  2271  00E04F  6D                 	db	109	;'m'
  2272  00E050  65                 	db	101	;'e'
  2273  00E051  6E                 	db	110	;'n'
  2274  00E052  74                 	db	116	;'t'
  2275  00E053  73                 	db	115	;'s'
  2276  00E054  20                 	db	32
  2277  00E055  61                 	db	97	;'a'
  2278  00E056  6E                 	db	110	;'n'
  2279  00E057  64                 	db	100	;'d'
  2280  00E058  20                 	db	32
  2281  00E059  63                 	db	99	;'c'
  2282  00E05A  61                 	db	97	;'a'
  2283  00E05B  6C                 	db	108	;'l'
  2284  00E05C  63                 	db	99	;'c'
  2285  00E05D  75                 	db	117	;'u'
  2286  00E05E  6C                 	db	108	;'l'
  2287  00E05F  61                 	db	97	;'a'
  2288  00E060  74                 	db	116	;'t'
  2289  00E061  69                 	db	105	;'i'
  2290  00E062  6F                 	db	111	;'o'
  2291  00E063  6E                 	db	110	;'n'
  2292  00E064  73                 	db	115	;'s'
  2293  00E065  0A                 	db	10
  2294  00E066  0D                 	db	13
  2295  00E067  20                 	db	32
  2296  00E068  20                 	db	32
  2297  00E069  20                 	db	32
  2298  00E06A  4D                 	db	77	;'M'
  2299  00E06B  65                 	db	101	;'e'
  2300  00E06C  61                 	db	97	;'a'
  2301  00E06D  73                 	db	115	;'s'
  2302  00E06E  75                 	db	117	;'u'
  2303  00E06F  72                 	db	114	;'r'
  2304  00E070  65                 	db	101	;'e'
  2305  00E071  20                 	db	32
  2306  00E072  44                 	db	68	;'D'
  2307  00E073  65                 	db	101	;'e'
  2308  00E074  74                 	db	116	;'t'
  2309  00E075  65                 	db	101	;'e'
  2310  00E076  63                 	db	99	;'c'
  2311  00E077  74                 	db	116	;'t'
  2312  00E078  65                 	db	101	;'e'
  2313  00E079  64                 	db	100	;'d'
  2314  00E07A  20                 	db	32
  2315  00E07B  43                 	db	67	;'C'
  2316  00E07C  75                 	db	117	;'u'
  2317  00E07D  72                 	db	114	;'r'
  2318  00E07E  72                 	db	114	;'r'
  2319  00E07F  65                 	db	101	;'e'
  2320  00E080  6E                 	db	110	;'n'
  2321  00E081  74                 	db	116	;'t'
  2322  00E082  3F                 	db	63	;'?'
  2323  00E083  3A                 	db	58	;':'
  2324  00E084  20                 	db	32
  2325  00E085  52                 	db	82	;'R'
  2326  00E086  65                 	db	101	;'e'
  2327  00E087  74                 	db	116	;'t'
  2328  00E088  75                 	db	117	;'u'
  2329  00E089  72                 	db	114	;'r'
  2330  00E08A  6E                 	db	110	;'n'
  2331  00E08B  73                 	db	115	;'s'
  2332  00E08C  20                 	db	32
  2333  00E08D  6D                 	db	109	;'m'
  2334  00E08E  65                 	db	101	;'e'
  2335  00E08F  61                 	db	97	;'a'
  2336  00E090  73                 	db	115	;'s'
  2337  00E091  75                 	db	117	;'u'
  2338  00E092  72                 	db	114	;'r'
  2339  00E093  65                 	db	101	;'e'
  2340  00E094  64                 	db	100	;'d'
  2341  00E095  20                 	db	32
  2342  00E096  6F                 	db	111	;'o'
  2343  00E097  75                 	db	117	;'u'
  2344  00E098  74                 	db	116	;'t'
  2345  00E099  70                 	db	112	;'p'
  2346  00E09A  75                 	db	117	;'u'
  2347  00E09B  74                 	db	116	;'t'
  2348  00E09C  20                 	db	32
  2349  00E09D  63                 	db	99	;'c'
  2350  00E09E  75                 	db	117	;'u'
  2351  00E09F  72                 	db	114	;'r'
  2352  00E0A0  72                 	db	114	;'r'
  2353  00E0A1  65                 	db	101	;'e'
  2354  00E0A2  6E                 	db	110	;'n'
  2355  00E0A3  74                 	db	116	;'t'
  2356  00E0A4  20                 	db	32
  2357  00E0A5  69                 	db	105	;'i'
  2358  00E0A6  6E                 	db	110	;'n'
  2359  00E0A7  20                 	db	32
  2360  00E0A8  61                 	db	97	;'a'
  2361  00E0A9  6D                 	db	109	;'m'
  2362  00E0AA  70                 	db	112	;'p'
  2363  00E0AB  73                 	db	115	;'s'
  2364  00E0AC  20                 	db	32
  2365  00E0AD  61                 	db	97	;'a'
  2366  00E0AE  73                 	db	115	;'s'
  2367  00E0AF  20                 	db	32
  2368  00E0B0  73                 	db	115	;'s'
  2369  00E0B1  65                 	db	101	;'e'
  2370  00E0B2  65                 	db	101	;'e'
  2371  00E0B3  6E                 	db	110	;'n'
  2372  00E0B4  20                 	db	32
  2373  00E0B5  62                 	db	98	;'b'
  2374  00E0B6  79                 	db	121	;'y'
  2375  00E0B7  20                 	db	32
  2376  00E0B8  41                 	db	65	;'A'
  2377  00E0B9  44                 	db	68	;'D'
  2378  00E0BA  43                 	db	67	;'C'
  2379  00E0BB  0A                 	db	10
  2380  00E0BC  0D                 	db	13
  2381  00E0BD  20                 	db	32
  2382  00E0BE  20                 	db	32
  2383  00E0BF  20                 	db	32
  2384  00E0C0  4D                 	db	77	;'M'
  2385  00E0C1  65                 	db	101	;'e'
  2386  00E0C2  61                 	db	97	;'a'
  2387  00E0C3  73                 	db	115	;'s'
  2388  00E0C4  75                 	db	117	;'u'
  2389  00E0C5  72                 	db	114	;'r'
  2390  00E0C6  65                 	db	101	;'e'
  2391  00E0C7  20                 	db	32
  2392  00E0C8  52                 	db	82	;'R'
  2393  00E0C9  4D                 	db	77	;'M'
  2394  00E0CA  53                 	db	83	;'S'
  2395  00E0CB  20                 	db	32
  2396  00E0CC  43                 	db	67	;'C'
  2397  00E0CD  75                 	db	117	;'u'
  2398  00E0CE  72                 	db	114	;'r'
  2399  00E0CF  72                 	db	114	;'r'
  2400  00E0D0  65                 	db	101	;'e'
  2401  00E0D1  6E                 	db	110	;'n'
  2402  00E0D2  74                 	db	116	;'t'
  2403  00E0D3  3F                 	db	63	;'?'
  2404  00E0D4  3A                 	db	58	;':'
  2405  00E0D5  20                 	db	32
  2406  00E0D6  52                 	db	82	;'R'
  2407  00E0D7  65                 	db	101	;'e'
  2408  00E0D8  74                 	db	116	;'t'
  2409  00E0D9  75                 	db	117	;'u'
  2410  00E0DA  72                 	db	114	;'r'
  2411  00E0DB  6E                 	db	110	;'n'
  2412  00E0DC  73                 	db	115	;'s'
  2413  00E0DD  20                 	db	32
  2414  00E0DE  74                 	db	116	;'t'
  2415  00E0DF  68                 	db	104	;'h'
  2416  00E0E0  65                 	db	101	;'e'
  2417  00E0E1  20                 	db	32
  2418  00E0E2  63                 	db	99	;'c'
  2419  00E0E3  61                 	db	97	;'a'
  2420  00E0E4  6C                 	db	108	;'l'
  2421  00E0E5  63                 	db	99	;'c'
  2422  00E0E6  75                 	db	117	;'u'
  2423  00E0E7  6C                 	db	108	;'l'
  2424  00E0E8  61                 	db	97	;'a'
  2425  00E0E9  74                 	db	116	;'t'
  2426  00E0EA  65                 	db	101	;'e'
  2427  00E0EB  64                 	db	100	;'d'
  2428  00E0EC  20                 	db	32
  2429  00E0ED  52                 	db	82	;'R'
  2430  00E0EE  4D                 	db	77	;'M'
  2431  00E0EF  53                 	db	83	;'S'
  2432  00E0F0  20                 	db	32
  2433  00E0F1  6F                 	db	111	;'o'
  2434  00E0F2  75                 	db	117	;'u'
  2435  00E0F3  74                 	db	116	;'t'
  2436  00E0F4  70                 	db	112	;'p'
  2437  00E0F5  75                 	db	117	;'u'
  2438  00E0F6  74                 	db	116	;'t'
  2439  00E0F7  20                 	db	32
  2440  00E0F8  63                 	db	99	;'c'
  2441  00E0F9  75                 	db	117	;'u'
  2442  00E0FA  72                 	db	114	;'r'
  2443  00E0FB  72                 	db	114	;'r'
  2444  00E0FC  65                 	db	101	;'e'
  2445  00E0FD  6E                 	db	110	;'n'
  2446  00E0FE  74                 	db	116	;'t'
  2447  00E0FF  20                 	db	32
  2448  00E100  66                 	db	102	;'f'
  2449  00E101  72                 	db	114	;'r'
  2450  00E102  6F                 	db	111	;'o'
  2451  00E103  6D                 	db	109	;'m'
  2452  00E104  20                 	db	32
  2453  00E105  6D                 	db	109	;'m'
  2454  00E106  65                 	db	101	;'e'
  2455  00E107  61                 	db	97	;'a'
  2456  00E108  73                 	db	115	;'s'
  2457  00E109  75                 	db	117	;'u'
  2458  00E10A  72                 	db	114	;'r'
  2459  00E10B  65                 	db	101	;'e'
  2460  00E10C  6D                 	db	109	;'m'
  2461  00E10D  65                 	db	101	;'e'
  2462  00E10E  6E                 	db	110	;'n'
  2463  00E10F  74                 	db	116	;'t'
  2464  00E110  73                 	db	115	;'s'
  2465  00E111  20                 	db	32
  2466  00E112  61                 	db	97	;'a'
  2467  00E113  6E                 	db	110	;'n'
  2468  00E114  64                 	db	100	;'d'
  2469  00E115  20                 	db	32
  2470  00E116  54                 	db	84	;'T'
  2471  00E117  52                 	db	82	;'R'
  2472  00E118  49                 	db	73	;'I'
  2473  00E119  41                 	db	65	;'A'
  2474  00E11A  43                 	db	67	;'C'
  2475  00E11B  20                 	db	32
  2476  00E11C  66                 	db	102	;'f'
  2477  00E11D  69                 	db	105	;'i'
  2478  00E11E  72                 	db	114	;'r'
  2479  00E11F  69                 	db	105	;'i'
  2480  00E120  6E                 	db	110	;'n'
  2481  00E121  67                 	db	103	;'g'
  2482  00E122  20                 	db	32
  2483  00E123  61                 	db	97	;'a'
  2484  00E124  6E                 	db	110	;'n'
  2485  00E125  67                 	db	103	;'g'
  2486  00E126  6C                 	db	108	;'l'
  2487  00E127  65                 	db	101	;'e'
  2488  00E128  0A                 	db	10
  2489  00E129  0D                 	db	13
  2490  00E12A  20                 	db	32
  2491  00E12B  20                 	db	32
  2492  00E12C  20                 	db	32
  2493  00E12D  4D                 	db	77	;'M'
  2494  00E12E  65                 	db	101	;'e'
  2495  00E12F  61                 	db	97	;'a'
  2496  00E130  73                 	db	115	;'s'
  2497  00E131  75                 	db	117	;'u'
  2498  00E132  72                 	db	114	;'r'
  2499  00E133  65                 	db	101	;'e'
  2500  00E134  20                 	db	32
  2501  00E135  52                 	db	82	;'R'
  2502  00E136  4D                 	db	77	;'M'
  2503  00E137  53                 	db	83	;'S'
  2504  00E138  20                 	db	32
  2505  00E139  56                 	db	86	;'V'
  2506  00E13A  6F                 	db	111	;'o'
  2507  00E13B  6C                 	db	108	;'l'
  2508  00E13C  74                 	db	116	;'t'
  2509  00E13D  61                 	db	97	;'a'
  2510  00E13E  67                 	db	103	;'g'
  2511  00E13F  65                 	db	101	;'e'
  2512  00E140  3F                 	db	63	;'?'
  2513  00E141  3A                 	db	58	;':'
  2514  00E142  20                 	db	32
  2515  00E143  52                 	db	82	;'R'
  2516  00E144  65                 	db	101	;'e'
  2517  00E145  74                 	db	116	;'t'
  2518  00E146  75                 	db	117	;'u'
  2519  00E147  72                 	db	114	;'r'
  2520  00E148  6E                 	db	110	;'n'
  2521  00E149  73                 	db	115	;'s'
  2522  00E14A  20                 	db	32
  2523  00E14B  74                 	db	116	;'t'
  2524  00E14C  68                 	db	104	;'h'
  2525  00E14D  65                 	db	101	;'e'
  2526  00E14E  20                 	db	32
  2527  00E14F  63                 	db	99	;'c'
  2528  00E150  61                 	db	97	;'a'
  2529  00E151  6C                 	db	108	;'l'
  2530  00E152  63                 	db	99	;'c'
  2531  00E153  75                 	db	117	;'u'
  2532  00E154  6C                 	db	108	;'l'
  2533  00E155  61                 	db	97	;'a'
  2534  00E156  74                 	db	116	;'t'
  2535  00E157  65                 	db	101	;'e'
  2536  00E158  64                 	db	100	;'d'
  2537  00E159  20                 	db	32
  2538  00E15A  52                 	db	82	;'R'
  2539  00E15B  4D                 	db	77	;'M'
  2540  00E15C  53                 	db	83	;'S'
  2541  00E15D  20                 	db	32
  2542  00E15E  6F                 	db	111	;'o'
  2543  00E15F  75                 	db	117	;'u'
  2544  00E160  74                 	db	116	;'t'
  2545  00E161  70                 	db	112	;'p'
  2546  00E162  75                 	db	117	;'u'
  2547  00E163  74                 	db	116	;'t'
  2548  00E164  20                 	db	32
  2549  00E165  76                 	db	118	;'v'
  2550  00E166  6F                 	db	111	;'o'
  2551  00E167  6C                 	db	108	;'l'
  2552  00E168  74                 	db	116	;'t'
  2553  00E169  61                 	db	97	;'a'
  2554  00E16A  67                 	db	103	;'g'
  2555  00E16B  65                 	db	101	;'e'
  2556  00E16C  20                 	db	32
  2557  00E16D  66                 	db	102	;'f'
  2558  00E16E  72                 	db	114	;'r'
  2559  00E16F  6F                 	db	111	;'o'
  2560  00E170  6D                 	db	109	;'m'
  2561  00E171  20                 	db	32
  2562  00E172  54                 	db	84	;'T'
  2563  00E173  52                 	db	82	;'R'
  2564  00E174  49                 	db	73	;'I'
  2565  00E175  41                 	db	65	;'A'
  2566  00E176  43                 	db	67	;'C'
  2567  00E177  20                 	db	32
  2568  00E178  66                 	db	102	;'f'
  2569  00E179  69                 	db	105	;'i'
  2570  00E17A  72                 	db	114	;'r'
  2571  00E17B  69                 	db	105	;'i'
  2572  00E17C  6E                 	db	110	;'n'
  2573  00E17D  67                 	db	103	;'g'
  2574  00E17E  20                 	db	32
  2575  00E17F  61                 	db	97	;'a'
  2576  00E180  6E                 	db	110	;'n'
  2577  00E181  67                 	db	103	;'g'
  2578  00E182  6C                 	db	108	;'l'
  2579  00E183  65                 	db	101	;'e'
  2580  00E184  0A                 	db	10
  2581  00E185  0D                 	db	13
  2582  00E186  20                 	db	32
  2583  00E187  20                 	db	32
  2584  00E188  20                 	db	32
  2585  00E189  4D                 	db	77	;'M'
  2586  00E18A  65                 	db	101	;'e'
  2587  00E18B  61                 	db	97	;'a'
  2588  00E18C  73                 	db	115	;'s'
  2589  00E18D  75                 	db	117	;'u'
  2590  00E18E  72                 	db	114	;'r'
  2591  00E18F  65                 	db	101	;'e'
  2592  00E190  20                 	db	32
  2593  00E191  50                 	db	80	;'P'
  2594  00E192  6F                 	db	111	;'o'
  2595  00E193  77                 	db	119	;'w'
  2596  00E194  65                 	db	101	;'e'
  2597  00E195  72                 	db	114	;'r'
  2598  00E196  3F                 	db	63	;'?'
  2599  00E197  3A                 	db	58	;':'
  2600  00E198  20                 	db	32
  2601  00E199  52                 	db	82	;'R'
  2602  00E19A  65                 	db	101	;'e'
  2603  00E19B  74                 	db	116	;'t'
  2604  00E19C  75                 	db	117	;'u'
  2605  00E19D  72                 	db	114	;'r'
  2606  00E19E  6E                 	db	110	;'n'
  2607  00E19F  73                 	db	115	;'s'
  2608  00E1A0  20                 	db	32
  2609  00E1A1  74                 	db	116	;'t'
  2610  00E1A2  68                 	db	104	;'h'
  2611  00E1A3  65                 	db	101	;'e'
  2612  00E1A4  20                 	db	32
  2613  00E1A5  63                 	db	99	;'c'
  2614  00E1A6  61                 	db	97	;'a'
  2615  00E1A7  6C                 	db	108	;'l'
  2616  00E1A8  63                 	db	99	;'c'
  2617  00E1A9  75                 	db	117	;'u'
  2618  00E1AA  6C                 	db	108	;'l'
  2619  00E1AB  61                 	db	97	;'a'
  2620  00E1AC  74                 	db	116	;'t'
  2621  00E1AD  65                 	db	101	;'e'
  2622  00E1AE  64                 	db	100	;'d'
  2623  00E1AF  20                 	db	32
  2624  00E1B0  6F                 	db	111	;'o'
  2625  00E1B1  75                 	db	117	;'u'
  2626  00E1B2  74                 	db	116	;'t'
  2627  00E1B3  70                 	db	112	;'p'
  2628  00E1B4  75                 	db	117	;'u'
  2629  00E1B5  74                 	db	116	;'t'
  2630  00E1B6  20                 	db	32
  2631  00E1B7  70                 	db	112	;'p'
  2632  00E1B8  6F                 	db	111	;'o'
  2633  00E1B9  77                 	db	119	;'w'
  2634  00E1BA  65                 	db	101	;'e'
  2635  00E1BB  72                 	db	114	;'r'
  2636  00E1BC  20                 	db	32
  2637  00E1BD  69                 	db	105	;'i'
  2638  00E1BE  6E                 	db	110	;'n'
  2639  00E1BF  20                 	db	32
  2640  00E1C0  57                 	db	87	;'W'
  2641  00E1C1  61                 	db	97	;'a'
  2642  00E1C2  74                 	db	116	;'t'
  2643  00E1C3  74                 	db	116	;'t'
  2644  00E1C4  73                 	db	115	;'s'
  2645  00E1C5  0A                 	db	10
  2646  00E1C6  0D                 	db	13
  2647  00E1C7  20                 	db	32
  2648  00E1C8  20                 	db	32
  2649  00E1C9  20                 	db	32
  2650  00E1CA  4C                 	db	76	;'L'
  2651  00E1CB  6F                 	db	111	;'o'
  2652  00E1CC  61                 	db	97	;'a'
  2653  00E1CD  64                 	db	100	;'d'
  2654  00E1CE  20                 	db	32
  2655  00E1CF  4F                 	db	79	;'O'
  2656  00E1D0  6E                 	db	110	;'n'
  2657  00E1D1  20                 	db	32
  2658  00E1D2  54                 	db	84	;'T'
  2659  00E1D3  69                 	db	105	;'i'
  2660  00E1D4  6D                 	db	109	;'m'
  2661  00E1D5  65                 	db	101	;'e'
  2662  00E1D6  3F                 	db	63	;'?'
  2663  00E1D7  3A                 	db	58	;':'
  2664  00E1D8  20                 	db	32
  2665  00E1D9  52                 	db	82	;'R'
  2666  00E1DA  65                 	db	101	;'e'
  2667  00E1DB  74                 	db	116	;'t'
  2668  00E1DC  75                 	db	117	;'u'
  2669  00E1DD  72                 	db	114	;'r'
  2670  00E1DE  6E                 	db	110	;'n'
  2671  00E1DF  73                 	db	115	;'s'
  2672  00E1E0  20                 	db	32
  2673  00E1E1  6C                 	db	108	;'l'
  2674  00E1E2  6F                 	db	111	;'o'
  2675  00E1E3  61                 	db	97	;'a'
  2676  00E1E4  64                 	db	100	;'d'
  2677  00E1E5  20                 	db	32
  2678  00E1E6  6F                 	db	111	;'o'
  2679  00E1E7  6E                 	db	110	;'n'
  2680  00E1E8  20                 	db	32
  2681  00E1E9  74                 	db	116	;'t'
  2682  00E1EA  69                 	db	105	;'i'
  2683  00E1EB  6D                 	db	109	;'m'
  2684  00E1EC  65                 	db	101	;'e'
  2685  00E1ED  20                 	db	32
  2686  00E1EE  73                 	db	115	;'s'
  2687  00E1EF  69                 	db	105	;'i'
  2688  00E1F0  6E                 	db	110	;'n'
  2689  00E1F1  63                 	db	99	;'c'
  2690  00E1F2  65                 	db	101	;'e'
  2691  00E1F3  20                 	db	32
  2692  00E1F4  6C                 	db	108	;'l'
  2693  00E1F5  61                 	db	97	;'a'
  2694  00E1F6  73                 	db	115	;'s'
  2695  00E1F7  74                 	db	116	;'t'
  2696  00E1F8  20                 	db	32
  2697  00E1F9  64                 	db	100	;'d'
  2698  00E1FA  65                 	db	101	;'e'
  2699  00E1FB  76                 	db	118	;'v'
  2700  00E1FC  69                 	db	105	;'i'
  2701  00E1FD  63                 	db	99	;'c'
  2702  00E1FE  65                 	db	101	;'e'
  2703  00E1FF  20                 	db	32
  2704  00E200  72                 	db	114	;'r'
  2705  00E201  65                 	db	101	;'e'
  2706  00E202  73                 	db	115	;'s'
  2707  00E203  65                 	db	101	;'e'
  2708  00E204  74                 	db	116	;'t'
  2709  00E205  20                 	db	32
  2710  00E206  69                 	db	105	;'i'
  2711  00E207  6E                 	db	110	;'n'
  2712  00E208  20                 	db	32
  2713  00E209  73                 	db	115	;'s'
  2714  00E20A  65                 	db	101	;'e'
  2715  00E20B  63                 	db	99	;'c'
  2716  00E20C  6F                 	db	111	;'o'
  2717  00E20D  6E                 	db	110	;'n'
  2718  00E20E  64                 	db	100	;'d'
  2719  00E20F  73                 	db	115	;'s'
  2720  00E210  0A                 	db	10
  2721  00E211  0D                 	db	13
  2722  00E212  20                 	db	32
  2723  00E213  20                 	db	32
  2724  00E214  20                 	db	32
  2725  00E215  4D                 	db	77	;'M'
  2726  00E216  61                 	db	97	;'a'
  2727  00E217  78                 	db	120	;'x'
  2728  00E218  20                 	db	32
  2729  00E219  52                 	db	82	;'R'
  2730  00E21A  4D                 	db	77	;'M'
  2731  00E21B  53                 	db	83	;'S'
  2732  00E21C  20                 	db	32
  2733  00E21D  43                 	db	67	;'C'
  2734  00E21E  75                 	db	117	;'u'
  2735  00E21F  72                 	db	114	;'r'
  2736  00E220  72                 	db	114	;'r'
  2737  00E221  65                 	db	101	;'e'
  2738  00E222  6E                 	db	110	;'n'
  2739  00E223  74                 	db	116	;'t'
  2740  00E224  3F                 	db	63	;'?'
  2741  00E225  3A                 	db	58	;':'
  2742  00E226  20                 	db	32
  2743  00E227  50                 	db	80	;'P'
  2744  00E228  72                 	db	114	;'r'
  2745  00E229  69                 	db	105	;'i'
  2746  00E22A  6E                 	db	110	;'n'
  2747  00E22B  74                 	db	116	;'t'
  2748  00E22C  73                 	db	115	;'s'
  2749  00E22D  20                 	db	32
  2750  00E22E  74                 	db	116	;'t'
  2751  00E22F  68                 	db	104	;'h'
  2752  00E230  65                 	db	101	;'e'
  2753  00E231  20                 	db	32
  2754  00E232  6D                 	db	109	;'m'
  2755  00E233  61                 	db	97	;'a'
  2756  00E234  78                 	db	120	;'x'
  2757  00E235  69                 	db	105	;'i'
  2758  00E236  6D                 	db	109	;'m'
  2759  00E237  75                 	db	117	;'u'
  2760  00E238  6D                 	db	109	;'m'
  2761  00E239  20                 	db	32
  2762  00E23A  72                 	db	114	;'r'
  2763  00E23B  65                 	db	101	;'e'
  2764  00E23C  63                 	db	99	;'c'
  2765  00E23D  6F                 	db	111	;'o'
  2766  00E23E  72                 	db	114	;'r'
  2767  00E23F  64                 	db	100	;'d'
  2768  00E240  65                 	db	101	;'e'
  2769  00E241  64                 	db	100	;'d'
  2770  00E242  20                 	db	32
  2771  00E243  52                 	db	82	;'R'
  2772  00E244  4D                 	db	77	;'M'
  2773  00E245  53                 	db	83	;'S'
  2774  00E246  20                 	db	32
  2775  00E247  6F                 	db	111	;'o'
  2776  00E248  75                 	db	117	;'u'
  2777  00E249  74                 	db	116	;'t'
  2778  00E24A  70                 	db	112	;'p'
  2779  00E24B  75                 	db	117	;'u'
  2780  00E24C  74                 	db	116	;'t'
  2781  00E24D  20                 	db	32
  2782  00E24E  63                 	db	99	;'c'
  2783  00E24F  75                 	db	117	;'u'
  2784  00E250  72                 	db	114	;'r'
  2785  00E251  72                 	db	114	;'r'
  2786  00E252  65                 	db	101	;'e'
  2787  00E253  6E                 	db	110	;'n'
  2788  00E254  74                 	db	116	;'t'
  2789  00E255  0A                 	db	10
  2790  00E256  0D                 	db	13
  2791  00E257  20                 	db	32
  2792  00E258  20                 	db	32
  2793  00E259  20                 	db	32
  2794  00E25A  4D                 	db	77	;'M'
  2795  00E25B  61                 	db	97	;'a'
  2796  00E25C  78                 	db	120	;'x'
  2797  00E25D  20                 	db	32
  2798  00E25E  50                 	db	80	;'P'
  2799  00E25F  6F                 	db	111	;'o'
  2800  00E260  77                 	db	119	;'w'
  2801  00E261  65                 	db	101	;'e'
  2802  00E262  72                 	db	114	;'r'
  2803  00E263  3F                 	db	63	;'?'
  2804  00E264  3A                 	db	58	;':'
  2805  00E265  20                 	db	32
  2806  00E266  50                 	db	80	;'P'
  2807  00E267  72                 	db	114	;'r'
  2808  00E268  69                 	db	105	;'i'
  2809  00E269  6E                 	db	110	;'n'
  2810  00E26A  74                 	db	116	;'t'
  2811  00E26B  73                 	db	115	;'s'
  2812  00E26C  20                 	db	32
  2813  00E26D  74                 	db	116	;'t'
  2814  00E26E  68                 	db	104	;'h'
  2815  00E26F  65                 	db	101	;'e'
  2816  00E270  20                 	db	32
  2817  00E271  6D                 	db	109	;'m'
  2818  00E272  61                 	db	97	;'a'
  2819  00E273  78                 	db	120	;'x'
  2820  00E274  69                 	db	105	;'i'
  2821  00E275  6D                 	db	109	;'m'
  2822  00E276  75                 	db	117	;'u'
  2823  00E277  6D                 	db	109	;'m'
  2824  00E278  20                 	db	32
  2825  00E279  72                 	db	114	;'r'
  2826  00E27A  65                 	db	101	;'e'
  2827  00E27B  63                 	db	99	;'c'
  2828  00E27C  6F                 	db	111	;'o'
  2829  00E27D  72                 	db	114	;'r'
  2830  00E27E  64                 	db	100	;'d'
  2831  00E27F  65                 	db	101	;'e'
  2832  00E280  64                 	db	100	;'d'
  2833  00E281  20                 	db	32
  2834  00E282  6F                 	db	111	;'o'
  2835  00E283  75                 	db	117	;'u'
  2836  00E284  74                 	db	116	;'t'
  2837  00E285  70                 	db	112	;'p'
  2838  00E286  75                 	db	117	;'u'
  2839  00E287  74                 	db	116	;'t'
  2840  00E288  20                 	db	32
  2841  00E289  70                 	db	112	;'p'
  2842  00E28A  6F                 	db	111	;'o'
  2843  00E28B  77                 	db	119	;'w'
  2844  00E28C  65                 	db	101	;'e'
  2845  00E28D  72                 	db	114	;'r'
  2846  00E28E  0A                 	db	10
  2847  00E28F  0D                 	db	13
  2848  00E290  0A                 	db	10
  2849  00E291  0D                 	db	13
  2850  00E292  4F                 	db	79	;'O'
  2851  00E293  75                 	db	117	;'u'
  2852  00E294  74                 	db	116	;'t'
  2853  00E295  70                 	db	112	;'p'
  2854  00E296  75                 	db	117	;'u'
  2855  00E297  74                 	db	116	;'t'
  2856  00E298  20                 	db	32
  2857  00E299  43                 	db	67	;'C'
  2858  00E29A  6F                 	db	111	;'o'
  2859  00E29B  6E                 	db	110	;'n'
  2860  00E29C  74                 	db	116	;'t'
  2861  00E29D  72                 	db	114	;'r'
  2862  00E29E  6F                 	db	111	;'o'
  2863  00E29F  6C                 	db	108	;'l'
  2864  00E2A0  20                 	db	32
  2865  00E2A1  43                 	db	67	;'C'
  2866  00E2A2  6F                 	db	111	;'o'
  2867  00E2A3  6D                 	db	109	;'m'
  2868  00E2A4  6D                 	db	109	;'m'
  2869  00E2A5  61                 	db	97	;'a'
  2870  00E2A6  6E                 	db	110	;'n'
  2871  00E2A7  64                 	db	100	;'d'
  2872  00E2A8  73                 	db	115	;'s'
  2873  00E2A9  3A                 	db	58	;':'
  2874  00E2AA  20                 	db	32
  2875  00E2AB  43                 	db	67	;'C'
  2876  00E2AC  6F                 	db	111	;'o'
  2877  00E2AD  6E                 	db	110	;'n'
  2878  00E2AE  74                 	db	116	;'t'
  2879  00E2AF  72                 	db	114	;'r'
  2880  00E2B0  6F                 	db	111	;'o'
  2881  00E2B1  6C                 	db	108	;'l'
  2882  00E2B2  20                 	db	32
  2883  00E2B3  74                 	db	116	;'t'
  2884  00E2B4  68                 	db	104	;'h'
  2885  00E2B5  65                 	db	101	;'e'
  2886  00E2B6  20                 	db	32
  2887  00E2B7  6F                 	db	111	;'o'
  2888  00E2B8  75                 	db	117	;'u'
  2889  00E2B9  74                 	db	116	;'t'
  2890  00E2BA  70                 	db	112	;'p'
  2891  00E2BB  75                 	db	117	;'u'
  2892  00E2BC  74                 	db	116	;'t'
  2893  00E2BD  20                 	db	32
  2894  00E2BE  73                 	db	115	;'s'
  2895  00E2BF  74                 	db	116	;'t'
  2896  00E2C0  61                 	db	97	;'a'
  2897  00E2C1  74                 	db	116	;'t'
  2898  00E2C2  65                 	db	101	;'e'
  2899  00E2C3  20                 	db	32
  2900  00E2C4  61                 	db	97	;'a'
  2901  00E2C5  6E                 	db	110	;'n'
  2902  00E2C6  64                 	db	100	;'d'
  2903  00E2C7  20                 	db	32
  2904  00E2C8  64                 	db	100	;'d'
  2905  00E2C9  69                 	db	105	;'i'
  2906  00E2CA  6D                 	db	109	;'m'
  2907  00E2CB  6D                 	db	109	;'m'
  2908  00E2CC  69                 	db	105	;'i'
  2909  00E2CD  6E                 	db	110	;'n'
  2910  00E2CE  67                 	db	103	;'g'
  2911  00E2CF  20                 	db	32
  2912  00E2D0  66                 	db	102	;'f'
  2913  00E2D1  65                 	db	101	;'e'
  2914  00E2D2  61                 	db	97	;'a'
  2915  00E2D3  74                 	db	116	;'t'
  2916  00E2D4  75                 	db	117	;'u'
  2917  00E2D5  72                 	db	114	;'r'
  2918  00E2D6  65                 	db	101	;'e'
  2919  00E2D7  73                 	db	115	;'s'
  2920  00E2D8  0A                 	db	10
  2921  00E2D9  0D                 	db	13
  2922  00E2DA  20                 	db	32
  2923  00E2DB  20                 	db	32
  2924  00E2DC  20                 	db	32
  2925  00E2DD  45                 	db	69	;'E'
  2926  00E2DE  6E                 	db	110	;'n'
  2927  00E2DF  61                 	db	97	;'a'
  2928  00E2E0  62                 	db	98	;'b'
  2929  00E2E1  6C                 	db	108	;'l'
  2930  00E2E2  65                 	db	101	;'e'
  2931  00E2E3  20                 	db	32
  2932  00E2E4  44                 	db	68	;'D'
  2933  00E2E5  69                 	db	105	;'i'
  2934  00E2E6  6D                 	db	109	;'m'
  2935  00E2E7  6D                 	db	109	;'m'
  2936  00E2E8  69                 	db	105	;'i'
  2937  00E2E9  6E                 	db	110	;'n'
  2938  00E2EA  67                 	db	103	;'g'
  2939  00E2EB  3A                 	db	58	;':'
  2940  00E2EC  20                 	db	32
  2941  00E2ED  45                 	db	69	;'E'
  2942  00E2EE  6E                 	db	110	;'n'
  2943  00E2EF  61                 	db	97	;'a'
  2944  00E2F0  62                 	db	98	;'b'
  2945  00E2F1  6C                 	db	108	;'l'
  2946  00E2F2  65                 	db	101	;'e'
  2947  00E2F3  20                 	db	32
  2948  00E2F4  54                 	db	84	;'T'
  2949  00E2F5  52                 	db	82	;'R'
  2950  00E2F6  49                 	db	73	;'I'
  2951  00E2F7  41                 	db	65	;'A'
  2952  00E2F8  43                 	db	67	;'C'
  2953  00E2F9  20                 	db	32
  2954  00E2FA  6F                 	db	111	;'o'
  2955  00E2FB  75                 	db	117	;'u'
  2956  00E2FC  74                 	db	116	;'t'
  2957  00E2FD  70                 	db	112	;'p'
  2958  00E2FE  75                 	db	117	;'u'
  2959  00E2FF  74                 	db	116	;'t'
  2960  00E300  20                 	db	32
  2961  00E301  64                 	db	100	;'d'
  2962  00E302  69                 	db	105	;'i'
  2963  00E303  6D                 	db	109	;'m'
  2964  00E304  6D                 	db	109	;'m'
  2965  00E305  69                 	db	105	;'i'
  2966  00E306  6E                 	db	110	;'n'
  2967  00E307  67                 	db	103	;'g'
  2968  00E308  0A                 	db	10
  2969  00E309  0D                 	db	13
  2970  00E30A  20                 	db	32
  2971  00E30B  20                 	db	32
  2972  00E30C  20                 	db	32
  2973  00E30D  44                 	db	68	;'D'
  2974  00E30E  69                 	db	105	;'i'
  2975  00E30F  73                 	db	115	;'s'
  2976  00E310  61                 	db	97	;'a'
  2977  00E311  62                 	db	98	;'b'
  2978  00E312  6C                 	db	108	;'l'
  2979  00E313  65                 	db	101	;'e'
  2980  00E314  20                 	db	32
  2981  00E315  44                 	db	68	;'D'
  2982  00E316  69                 	db	105	;'i'
  2983  00E317  6D                 	db	109	;'m'
  2984  00E318  6D                 	db	109	;'m'
  2985  00E319  69                 	db	105	;'i'
  2986  00E31A  6E                 	db	110	;'n'
  2987  00E31B  67                 	db	103	;'g'
  2988  00E31C  3A                 	db	58	;':'
  2989  00E31D  20                 	db	32
  2990  00E31E  44                 	db	68	;'D'
  2991  00E31F  69                 	db	105	;'i'
  2992  00E320  73                 	db	115	;'s'
  2993  00E321  61                 	db	97	;'a'
  2994  00E322  62                 	db	98	;'b'
  2995  00E323  6C                 	db	108	;'l'
  2996  00E324  65                 	db	101	;'e'
  2997  00E325  20                 	db	32
  2998  00E326  54                 	db	84	;'T'
  2999  00E327  52                 	db	82	;'R'
  3000  00E328  49                 	db	73	;'I'
  3001  00E329  41                 	db	65	;'A'
  3002  00E32A  43                 	db	67	;'C'
  3003  00E32B  20                 	db	32
  3004  00E32C  6F                 	db	111	;'o'
  3005  00E32D  75                 	db	117	;'u'
  3006  00E32E  74                 	db	116	;'t'
  3007  00E32F  70                 	db	112	;'p'
  3008  00E330  75                 	db	117	;'u'
  3009  00E331  74                 	db	116	;'t'
  3010  00E332  20                 	db	32
  3011  00E333  64                 	db	100	;'d'
  3012  00E334  69                 	db	105	;'i'
  3013  00E335  6D                 	db	109	;'m'
  3014  00E336  6D                 	db	109	;'m'
  3015  00E337  69                 	db	105	;'i'
  3016  00E338  6E                 	db	110	;'n'
  3017  00E339  67                 	db	103	;'g'
  3018  00E33A  0A                 	db	10
  3019  00E33B  0D                 	db	13
  3020  00E33C  20                 	db	32
  3021  00E33D  20                 	db	32
  3022  00E33E  20                 	db	32
  3023  00E33F  45                 	db	69	;'E'
  3024  00E340  6E                 	db	110	;'n'
  3025  00E341  61                 	db	97	;'a'
  3026  00E342  62                 	db	98	;'b'
  3027  00E343  6C                 	db	108	;'l'
  3028  00E344  65                 	db	101	;'e'
  3029  00E345  20                 	db	32
  3030  00E346  4C                 	db	76	;'L'
  3031  00E347  6F                 	db	111	;'o'
  3032  00E348  61                 	db	97	;'a'
  3033  00E349  64                 	db	100	;'d'
  3034  00E34A  3A                 	db	58	;':'
  3035  00E34B  20                 	db	32
  3036  00E34C  45                 	db	69	;'E'
  3037  00E34D  6E                 	db	110	;'n'
  3038  00E34E  61                 	db	97	;'a'
  3039  00E34F  62                 	db	98	;'b'
  3040  00E350  6C                 	db	108	;'l'
  3041  00E351  65                 	db	101	;'e'
  3042  00E352  73                 	db	115	;'s'
  3043  00E353  20                 	db	32
  3044  00E354  74                 	db	116	;'t'
  3045  00E355  68                 	db	104	;'h'
  3046  00E356  65                 	db	101	;'e'
  3047  00E357  20                 	db	32
  3048  00E358  6F                 	db	111	;'o'
  3049  00E359  75                 	db	117	;'u'
  3050  00E35A  74                 	db	116	;'t'
  3051  00E35B  70                 	db	112	;'p'
  3052  00E35C  75                 	db	117	;'u'
  3053  00E35D  74                 	db	116	;'t'
  3054  00E35E  20                 	db	32
  3055  00E35F  54                 	db	84	;'T'
  3056  00E360  52                 	db	82	;'R'
  3057  00E361  49                 	db	73	;'I'
  3058  00E362  41                 	db	65	;'A'
  3059  00E363  43                 	db	67	;'C'
  3060  00E364  20                 	db	32
  3061  00E365  77                 	db	119	;'w'
  3062  00E366  69                 	db	105	;'i'
  3063  00E367  74                 	db	116	;'t'
  3064  00E368  68                 	db	104	;'h'
  3065  00E369  20                 	db	32
  3066  00E36A  64                 	db	100	;'d'
  3067  00E36B  69                 	db	105	;'i'
  3068  00E36C  6D                 	db	109	;'m'
  3069  00E36D  6D                 	db	109	;'m'
  3070  00E36E  69                 	db	105	;'i'
  3071  00E36F  6E                 	db	110	;'n'
  3072  00E370  67                 	db	103	;'g'
  3073  00E371  20                 	db	32
  3074  00E372  64                 	db	100	;'d'
  3075  00E373  69                 	db	105	;'i'
  3076  00E374  73                 	db	115	;'s'
  3077  00E375  61                 	db	97	;'a'
  3078  00E376  62                 	db	98	;'b'
  3079  00E377  6C                 	db	108	;'l'
  3080  00E378  65                 	db	101	;'e'
  3081  00E379  64                 	db	100	;'d'
  3082  00E37A  0A                 	db	10
  3083  00E37B  0D                 	db	13
  3084  00E37C  20                 	db	32
  3085  00E37D  20                 	db	32
  3086  00E37E  20                 	db	32
  3087  00E37F  44                 	db	68	;'D'
  3088  00E380  69                 	db	105	;'i'
  3089  00E381  73                 	db	115	;'s'
  3090  00E382  61                 	db	97	;'a'
  3091  00E383  62                 	db	98	;'b'
  3092  00E384  6C                 	db	108	;'l'
  3093  00E385  65                 	db	101	;'e'
  3094  00E386  20                 	db	32
  3095  00E387  4C                 	db	76	;'L'
  3096  00E388  6F                 	db	111	;'o'
  3097  00E389  61                 	db	97	;'a'
  3098  00E38A  64                 	db	100	;'d'
  3099  00E38B  3A                 	db	58	;':'
  3100  00E38C  20                 	db	32
  3101  00E38D  44                 	db	68	;'D'
  3102  00E38E  69                 	db	105	;'i'
  3103  00E38F  73                 	db	115	;'s'
  3104  00E390  61                 	db	97	;'a'
  3105  00E391  62                 	db	98	;'b'
  3106  00E392  6C                 	db	108	;'l'
  3107  00E393  65                 	db	101	;'e'
  3108  00E394  73                 	db	115	;'s'
  3109  00E395  20                 	db	32
  3110  00E396  74                 	db	116	;'t'
  3111  00E397  68                 	db	104	;'h'
  3112  00E398  65                 	db	101	;'e'
  3113  00E399  20                 	db	32
  3114  00E39A  6F                 	db	111	;'o'
  3115  00E39B  75                 	db	117	;'u'
  3116  00E39C  74                 	db	116	;'t'
  3117  00E39D  70                 	db	112	;'p'
  3118  00E39E  75                 	db	117	;'u'
  3119  00E39F  74                 	db	116	;'t'
  3120  00E3A0  20                 	db	32
  3121  00E3A1  54                 	db	84	;'T'
  3122  00E3A2  52                 	db	82	;'R'
  3123  00E3A3  49                 	db	73	;'I'
  3124  00E3A4  41                 	db	65	;'A'
  3125  00E3A5  43                 	db	67	;'C'
  3126  00E3A6  20                 	db	32
  3127  00E3A7  63                 	db	99	;'c'
  3128  00E3A8  6F                 	db	111	;'o'
  3129  00E3A9  6D                 	db	109	;'m'
  3130  00E3AA  70                 	db	112	;'p'
  3131  00E3AB  6C                 	db	108	;'l'
  3132  00E3AC  65                 	db	101	;'e'
  3133  00E3AD  74                 	db	116	;'t'
  3134  00E3AE  65                 	db	101	;'e'
  3135  00E3AF  6C                 	db	108	;'l'
  3136  00E3B0  79                 	db	121	;'y'
  3137  00E3B1  0A                 	db	10
  3138  00E3B2  0D                 	db	13
  3139  00E3B3  20                 	db	32
  3140  00E3B4  20                 	db	32
  3141  00E3B5  20                 	db	32
  3142  00E3B6  4C                 	db	76	;'L'
  3143  00E3B7  6F                 	db	111	;'o'
  3144  00E3B8  61                 	db	97	;'a'
  3145  00E3B9  64                 	db	100	;'d'
  3146  00E3BA  20                 	db	32
  3147  00E3BB  45                 	db	69	;'E'
  3148  00E3BC  6E                 	db	110	;'n'
  3149  00E3BD  61                 	db	97	;'a'
  3150  00E3BE  62                 	db	98	;'b'
  3151  00E3BF  6C                 	db	108	;'l'
  3152  00E3C0  65                 	db	101	;'e'
  3153  00E3C1  64                 	db	100	;'d'
  3154  00E3C2  3F                 	db	63	;'?'
  3155  00E3C3  3A                 	db	58	;':'
  3156  00E3C4  20                 	db	32
  3157  00E3C5  52                 	db	82	;'R'
  3158  00E3C6  65                 	db	101	;'e'
  3159  00E3C7  74                 	db	116	;'t'
  3160  00E3C8  75                 	db	117	;'u'
  3161  00E3C9  72                 	db	114	;'r'
  3162  00E3CA  6E                 	db	110	;'n'
  3163  00E3CB  73                 	db	115	;'s'
  3164  00E3CC  20                 	db	32
  3165  00E3CD  69                 	db	105	;'i'
  3166  00E3CE  66                 	db	102	;'f'
  3167  00E3CF  20                 	db	32
  3168  00E3D0  74                 	db	116	;'t'
  3169  00E3D1  68                 	db	104	;'h'
  3170  00E3D2  65                 	db	101	;'e'
  3171  00E3D3  20                 	db	32
  3172  00E3D4  6F                 	db	111	;'o'
  3173  00E3D5  75                 	db	117	;'u'
  3174  00E3D6  74                 	db	116	;'t'
  3175  00E3D7  70                 	db	112	;'p'
  3176  00E3D8  75                 	db	117	;'u'
  3177  00E3D9  74                 	db	116	;'t'
  3178  00E3DA  20                 	db	32
  3179  00E3DB  6C                 	db	108	;'l'
  3180  00E3DC  6F                 	db	111	;'o'
  3181  00E3DD  61                 	db	97	;'a'
  3182  00E3DE  64                 	db	100	;'d'
  3183  00E3DF  20                 	db	32
  3184  00E3E0  69                 	db	105	;'i'
  3185  00E3E1  73                 	db	115	;'s'
  3186  00E3E2  20                 	db	32
  3187  00E3E3  65                 	db	101	;'e'
  3188  00E3E4  6E                 	db	110	;'n'
  3189  00E3E5  61                 	db	97	;'a'
  3190  00E3E6  62                 	db	98	;'b'
  3191  00E3E7  6C                 	db	108	;'l'
  3192  00E3E8  65                 	db	101	;'e'
  3193  00E3E9  64                 	db	100	;'d'
  3194  00E3EA  20                 	db	32
  3195  00E3EB  6F                 	db	111	;'o'
  3196  00E3EC  72                 	db	114	;'r'
  3197  00E3ED  20                 	db	32
  3198  00E3EE  64                 	db	100	;'d'
  3199  00E3EF  69                 	db	105	;'i'
  3200  00E3F0  73                 	db	115	;'s'
  3201  00E3F1  61                 	db	97	;'a'
  3202  00E3F2  62                 	db	98	;'b'
  3203  00E3F3  6C                 	db	108	;'l'
  3204  00E3F4  65                 	db	101	;'e'
  3205  00E3F5  64                 	db	100	;'d'
  3206  00E3F6  0A                 	db	10
  3207  00E3F7  0D                 	db	13
  3208  00E3F8  20                 	db	32
  3209  00E3F9  20                 	db	32
  3210  00E3FA  20                 	db	32
  3211  00E3FB  44                 	db	68	;'D'
  3212  00E3FC  69                 	db	105	;'i'
  3213  00E3FD  6D                 	db	109	;'m'
  3214  00E3FE  6D                 	db	109	;'m'
  3215  00E3FF  69                 	db	105	;'i'
  3216  00E400  6E                 	db	110	;'n'
  3217  00E401  67                 	db	103	;'g'
  3218  00E402  20                 	db	32
  3219  00E403  45                 	db	69	;'E'
  3220  00E404  6E                 	db	110	;'n'
  3221  00E405  61                 	db	97	;'a'
  3222  00E406  62                 	db	98	;'b'
  3223  00E407  6C                 	db	108	;'l'
  3224  00E408  65                 	db	101	;'e'
  3225  00E409  64                 	db	100	;'d'
  3226  00E40A  3F                 	db	63	;'?'
  3227  00E40B  3A                 	db	58	;':'
  3228  00E40C  20                 	db	32
  3229  00E40D  52                 	db	82	;'R'
  3230  00E40E  65                 	db	101	;'e'
  3231  00E40F  74                 	db	116	;'t'
  3232  00E410  75                 	db	117	;'u'
  3233  00E411  72                 	db	114	;'r'
  3234  00E412  6E                 	db	110	;'n'
  3235  00E413  73                 	db	115	;'s'
  3236  00E414  20                 	db	32
  3237  00E415  69                 	db	105	;'i'
  3238  00E416  66                 	db	102	;'f'
  3239  00E417  20                 	db	32
  3240  00E418  64                 	db	100	;'d'
  3241  00E419  69                 	db	105	;'i'
  3242  00E41A  6D                 	db	109	;'m'
  3243  00E41B  6D                 	db	109	;'m'
  3244  00E41C  69                 	db	105	;'i'
  3245  00E41D  6E                 	db	110	;'n'
  3246  00E41E  67                 	db	103	;'g'
  3247  00E41F  20                 	db	32
  3248  00E420  6F                 	db	111	;'o'
  3249  00E421  66                 	db	102	;'f'
  3250  00E422  20                 	db	32
  3251  00E423  74                 	db	116	;'t'
  3252  00E424  68                 	db	104	;'h'
  3253  00E425  65                 	db	101	;'e'
  3254  00E426  20                 	db	32
  3255  00E427  6F                 	db	111	;'o'
  3256  00E428  75                 	db	117	;'u'
  3257  00E429  74                 	db	116	;'t'
  3258  00E42A  70                 	db	112	;'p'
  3259  00E42B  75                 	db	117	;'u'
  3260  00E42C  74                 	db	116	;'t'
  3261  00E42D  20                 	db	32
  3262  00E42E  6C                 	db	108	;'l'
  3263  00E42F  6F                 	db	111	;'o'
  3264  00E430  61                 	db	97	;'a'
  3265  00E431  64                 	db	100	;'d'
  3266  00E432  20                 	db	32
  3267  00E433  69                 	db	105	;'i'
  3268  00E434  73                 	db	115	;'s'
  3269  00E435  20                 	db	32
  3270  00E436  65                 	db	101	;'e'
  3271  00E437  6E                 	db	110	;'n'
  3272  00E438  61                 	db	97	;'a'
  3273  00E439  62                 	db	98	;'b'
  3274  00E43A  6C                 	db	108	;'l'
  3275  00E43B  65                 	db	101	;'e'
  3276  00E43C  64                 	db	100	;'d'
  3277  00E43D  20                 	db	32
  3278  00E43E  6F                 	db	111	;'o'
  3279  00E43F  72                 	db	114	;'r'
  3280  00E440  20                 	db	32
  3281  00E441  6E                 	db	110	;'n'
  3282  00E442  6F                 	db	111	;'o'
  3283  00E443  74                 	db	116	;'t'
  3284  00E444  0A                 	db	10
  3285  00E445  0D                 	db	13
  3286  00E446  20                 	db	32
  3287  00E447  20                 	db	32
  3288  00E448  20                 	db	32
  3289  00E449  53                 	db	83	;'S'
  3290  00E44A  65                 	db	101	;'e'
  3291  00E44B  74                 	db	116	;'t'
  3292  00E44C  20                 	db	32
  3293  00E44D  44                 	db	68	;'D'
  3294  00E44E  69                 	db	105	;'i'
  3295  00E44F  6D                 	db	109	;'m'
  3296  00E450  6D                 	db	109	;'m'
  3297  00E451  69                 	db	105	;'i'
  3298  00E452  6E                 	db	110	;'n'
  3299  00E453  67                 	db	103	;'g'
  3300  00E454  20                 	db	32
  3301  00E455  50                 	db	80	;'P'
  3302  00E456  65                 	db	101	;'e'
  3303  00E457  72                 	db	114	;'r'
  3304  00E458  63                 	db	99	;'c'
  3305  00E459  65                 	db	101	;'e'
  3306  00E45A  6E                 	db	110	;'n'
  3307  00E45B  74                 	db	116	;'t'
  3308  00E45C  61                 	db	97	;'a'
  3309  00E45D  67                 	db	103	;'g'
  3310  00E45E  65                 	db	101	;'e'
  3311  00E45F  3A                 	db	58	;':'
  3312  00E460  20                 	db	32
  3313  00E461  3C                 	db	60	;'<'
  3314  00E462  78                 	db	120	;'x'
  3315  00E463  3E                 	db	62	;'>'
  3316  00E464  3A                 	db	58	;':'
  3317  00E465  20                 	db	32
  3318  00E466  53                 	db	83	;'S'
  3319  00E467  65                 	db	101	;'e'
  3320  00E468  74                 	db	116	;'t'
  3321  00E469  73                 	db	115	;'s'
  3322  00E46A  20                 	db	32
  3323  00E46B  74                 	db	116	;'t'
  3324  00E46C  68                 	db	104	;'h'
  3325  00E46D  65                 	db	101	;'e'
  3326  00E46E  20                 	db	32
  3327  00E46F  6F                 	db	111	;'o'
  3328  00E470  75                 	db	117	;'u'
  3329  00E471  74                 	db	116	;'t'
  3330  00E472  70                 	db	112	;'p'
  3331  00E473  75                 	db	117	;'u'
  3332  00E474  74                 	db	116	;'t'
  3333  00E475  20                 	db	32
  3334  00E476  64                 	db	100	;'d'
  3335  00E477  69                 	db	105	;'i'
  3336  00E478  6D                 	db	109	;'m'
  3337  00E479  6D                 	db	109	;'m'
  3338  00E47A  69                 	db	105	;'i'
  3339  00E47B  6E                 	db	110	;'n'
  3340  00E47C  67                 	db	103	;'g'
  3341  00E47D  20                 	db	32
  3342  00E47E  70                 	db	112	;'p'
  3343  00E47F  65                 	db	101	;'e'
  3344  00E480  72                 	db	114	;'r'
  3345  00E481  63                 	db	99	;'c'
  3346  00E482  65                 	db	101	;'e'
  3347  00E483  6E                 	db	110	;'n'
  3348  00E484  74                 	db	116	;'t'
  3349  00E485  61                 	db	97	;'a'
  3350  00E486  67                 	db	103	;'g'
  3351  00E487  65                 	db	101	;'e'
  3352  00E488  20                 	db	32
  3353  00E489  61                 	db	97	;'a'
  3354  00E48A  73                 	db	115	;'s'
  3355  00E48B  20                 	db	32
  3356  00E48C  78                 	db	120	;'x'
  3357  00E48D  20                 	db	32
  3358  00E48E  70                 	db	112	;'p'
  3359  00E48F  65                 	db	101	;'e'
  3360  00E490  72                 	db	114	;'r'
  3361  00E491  63                 	db	99	;'c'
  3362  00E492  65                 	db	101	;'e'
  3363  00E493  6E                 	db	110	;'n'
  3364  00E494  74                 	db	116	;'t'
  3365  00E495  0A                 	db	10
  3366  00E496  0D                 	db	13
  3367  00E497  0A                 	db	10
  3368  00E498  0D                 	db	13
  3369  00E499  00                 	db	0
  3370  00E49A                     STR_135:
  3371  00E49A  4C                 	db	76	;'L'
  3372  00E49B  69                 	db	105	;'i'
  3373  00E49C  73                 	db	115	;'s'
  3374  00E49D  74                 	db	116	;'t'
  3375  00E49E  20                 	db	32
  3376  00E49F  6F                 	db	111	;'o'
  3377  00E4A0  66                 	db	102	;'f'
  3378  00E4A1  20                 	db	32
  3379  00E4A2  73                 	db	115	;'s'
  3380  00E4A3  75                 	db	117	;'u'
  3381  00E4A4  70                 	db	112	;'p'
  3382  00E4A5  70                 	db	112	;'p'
  3383  00E4A6  6F                 	db	111	;'o'
  3384  00E4A7  72                 	db	114	;'r'
  3385  00E4A8  74                 	db	116	;'t'
  3386  00E4A9  65                 	db	101	;'e'
  3387  00E4AA  64                 	db	100	;'d'
  3388  00E4AB  20                 	db	32
  3389  00E4AC  44                 	db	68	;'D'
  3390  00E4AD  65                 	db	101	;'e'
  3391  00E4AE  76                 	db	118	;'v'
  3392  00E4AF  69                 	db	105	;'i'
  3393  00E4B0  63                 	db	99	;'c'
  3394  00E4B1  65                 	db	101	;'e'
  3395  00E4B2  20                 	db	32
  3396  00E4B3  43                 	db	67	;'C'
  3397  00E4B4  6F                 	db	111	;'o'
  3398  00E4B5  6E                 	db	110	;'n'
  3399  00E4B6  74                 	db	116	;'t'
  3400  00E4B7  72                 	db	114	;'r'
  3401  00E4B8  6F                 	db	111	;'o'
  3402  00E4B9  6C                 	db	108	;'l'
  3403  00E4BA  20                 	db	32
  3404  00E4BB  43                 	db	67	;'C'
  3405  00E4BC  6F                 	db	111	;'o'
  3406  00E4BD  6D                 	db	109	;'m'
  3407  00E4BE  6D                 	db	109	;'m'
  3408  00E4BF  61                 	db	97	;'a'
  3409  00E4C0  6E                 	db	110	;'n'
  3410  00E4C1  64                 	db	100	;'d'
  3411  00E4C2  73                 	db	115	;'s'
  3412  00E4C3  3A                 	db	58	;':'
  3413  00E4C4  0A                 	db	10
  3414  00E4C5  0D                 	db	13
  3415  00E4C6  20                 	db	32
  3416  00E4C7  20                 	db	32
  3417  00E4C8  20                 	db	32
  3418  00E4C9  52                 	db	82	;'R'
  3419  00E4CA  65                 	db	101	;'e'
  3420  00E4CB  73                 	db	115	;'s'
  3421  00E4CC  65                 	db	101	;'e'
  3422  00E4CD  74                 	db	116	;'t'
  3423  00E4CE  3A                 	db	58	;':'
  3424  00E4CF  20                 	db	32
  3425  00E4D0  43                 	db	67	;'C'
  3426  00E4D1  6C                 	db	108	;'l'
  3427  00E4D2  65                 	db	101	;'e'
  3428  00E4D3  61                 	db	97	;'a'
  3429  00E4D4  72                 	db	114	;'r'
  3430  00E4D5  73                 	db	115	;'s'
  3431  00E4D6  20                 	db	32
  3432  00E4D7  74                 	db	116	;'t'
  3433  00E4D8  68                 	db	104	;'h'
  3434  00E4D9  65                 	db	101	;'e'
  3435  00E4DA  20                 	db	32
  3436  00E4DB  74                 	db	116	;'t'
  3437  00E4DC  65                 	db	101	;'e'
  3438  00E4DD  72                 	db	114	;'r'
  3439  00E4DE  6D                 	db	109	;'m'
  3440  00E4DF  69                 	db	105	;'i'
  3441  00E4E0  6E                 	db	110	;'n'
  3442  00E4E1  61                 	db	97	;'a'
  3443  00E4E2  6C                 	db	108	;'l'
  3444  00E4E3  20                 	db	32
  3445  00E4E4  61                 	db	97	;'a'
  3446  00E4E5  6E                 	db	110	;'n'
  3447  00E4E6  64                 	db	100	;'d'
  3448  00E4E7  20                 	db	32
  3449  00E4E8  72                 	db	114	;'r'
  3450  00E4E9  65                 	db	101	;'e'
  3451  00E4EA  73                 	db	115	;'s'
  3452  00E4EB  65                 	db	101	;'e'
  3453  00E4EC  74                 	db	116	;'t'
  3454  00E4ED  73                 	db	115	;'s'
  3455  00E4EE  20                 	db	32
  3456  00E4EF  74                 	db	116	;'t'
  3457  00E4F0  68                 	db	104	;'h'
  3458  00E4F1  65                 	db	101	;'e'
  3459  00E4F2  20                 	db	32
  3460  00E4F3  6D                 	db	109	;'m'
  3461  00E4F4  69                 	db	105	;'i'
  3462  00E4F5  63                 	db	99	;'c'
  3463  00E4F6  72                 	db	114	;'r'
  3464  00E4F7  6F                 	db	111	;'o'
  3465  00E4F8  0A                 	db	10
  3466  00E4F9  0D                 	db	13
  3467  00E4FA  20                 	db	32
  3468  00E4FB  20                 	db	32
  3469  00E4FC  20                 	db	32
  3470  00E4FD  43                 	db	67	;'C'
  3471  00E4FE  6C                 	db	108	;'l'
  3472  00E4FF  65                 	db	101	;'e'
  3473  00E500  61                 	db	97	;'a'
  3474  00E501  72                 	db	114	;'r'
  3475  00E502  3A                 	db	58	;':'
  3476  00E503  20                 	db	32
  3477  00E504  43                 	db	67	;'C'
  3478  00E505  6C                 	db	108	;'l'
  3479  00E506  65                 	db	101	;'e'
  3480  00E507  61                 	db	97	;'a'
  3481  00E508  72                 	db	114	;'r'
  3482  00E509  73                 	db	115	;'s'
  3483  00E50A  20                 	db	32
  3484  00E50B  74                 	db	116	;'t'
  3485  00E50C  68                 	db	104	;'h'
  3486  00E50D  65                 	db	101	;'e'
  3487  00E50E  20                 	db	32
  3488  00E50F  74                 	db	116	;'t'
  3489  00E510  65                 	db	101	;'e'
  3490  00E511  72                 	db	114	;'r'
  3491  00E512  6D                 	db	109	;'m'
  3492  00E513  69                 	db	105	;'i'
  3493  00E514  6E                 	db	110	;'n'
  3494  00E515  61                 	db	97	;'a'
  3495  00E516  6C                 	db	108	;'l'
  3496  00E517  20                 	db	32
  3497  00E518  62                 	db	98	;'b'
  3498  00E519  75                 	db	117	;'u'
  3499  00E51A  74                 	db	116	;'t'
  3500  00E51B  20                 	db	32
  3501  00E51C  64                 	db	100	;'d'
  3502  00E51D  6F                 	db	111	;'o'
  3503  00E51E  65                 	db	101	;'e'
  3504  00E51F  73                 	db	115	;'s'
  3505  00E520  6E                 	db	110	;'n'
  3506  00E521  27                 	db	39
  3507  00E522  74                 	db	116	;'t'
  3508  00E523  20                 	db	32
  3509  00E524  72                 	db	114	;'r'
  3510  00E525  65                 	db	101	;'e'
  3511  00E526  73                 	db	115	;'s'
  3512  00E527  65                 	db	101	;'e'
  3513  00E528  74                 	db	116	;'t'
  3514  00E529  20                 	db	32
  3515  00E52A  74                 	db	116	;'t'
  3516  00E52B  68                 	db	104	;'h'
  3517  00E52C  65                 	db	101	;'e'
  3518  00E52D  20                 	db	32
  3519  00E52E  6D                 	db	109	;'m'
  3520  00E52F  69                 	db	105	;'i'
  3521  00E530  63                 	db	99	;'c'
  3522  00E531  72                 	db	114	;'r'
  3523  00E532  6F                 	db	111	;'o'
  3524  00E533  0A                 	db	10
  3525  00E534  0D                 	db	13
  3526  00E535  20                 	db	32
  3527  00E536  20                 	db	32
  3528  00E537  20                 	db	32
  3529  00E538  43                 	db	67	;'C'
  3530  00E539  61                 	db	97	;'a'
  3531  00E53A  75                 	db	117	;'u'
  3532  00E53B  73                 	db	115	;'s'
  3533  00E53C  65                 	db	101	;'e'
  3534  00E53D  20                 	db	32
  3535  00E53E  6F                 	db	111	;'o'
  3536  00E53F  66                 	db	102	;'f'
  3537  00E540  20                 	db	32
  3538  00E541  52                 	db	82	;'R'
  3539  00E542  65                 	db	101	;'e'
  3540  00E543  73                 	db	115	;'s'
  3541  00E544  65                 	db	101	;'e'
  3542  00E545  74                 	db	116	;'t'
  3543  00E546  3F                 	db	63	;'?'
  3544  00E547  3A                 	db	58	;':'
  3545  00E548  20                 	db	32
  3546  00E549  52                 	db	82	;'R'
  3547  00E54A  65                 	db	101	;'e'
  3548  00E54B  74                 	db	116	;'t'
  3549  00E54C  75                 	db	117	;'u'
  3550  00E54D  72                 	db	114	;'r'
  3551  00E54E  6E                 	db	110	;'n'
  3552  00E54F  73                 	db	115	;'s'
  3553  00E550  20                 	db	32
  3554  00E551  74                 	db	116	;'t'
  3555  00E552  68                 	db	104	;'h'
  3556  00E553  65                 	db	101	;'e'
  3557  00E554  20                 	db	32
  3558  00E555  63                 	db	99	;'c'
  3559  00E556  61                 	db	97	;'a'
  3560  00E557  75                 	db	117	;'u'
  3561  00E558  73                 	db	115	;'s'
  3562  00E559  65                 	db	101	;'e'
  3563  00E55A  20                 	db	32
  3564  00E55B  6F                 	db	111	;'o'
  3565  00E55C  66                 	db	102	;'f'
  3566  00E55D  20                 	db	32
  3567  00E55E  74                 	db	116	;'t'
  3568  00E55F  68                 	db	104	;'h'
  3569  00E560  65                 	db	101	;'e'
  3570  00E561  20                 	db	32
  3571  00E562  6D                 	db	109	;'m'
  3572  00E563  6F                 	db	111	;'o'
  3573  00E564  73                 	db	115	;'s'
  3574  00E565  74                 	db	116	;'t'
  3575  00E566  20                 	db	32
  3576  00E567  72                 	db	114	;'r'
  3577  00E568  65                 	db	101	;'e'
  3578  00E569  63                 	db	99	;'c'
  3579  00E56A  65                 	db	101	;'e'
  3580  00E56B  6E                 	db	110	;'n'
  3581  00E56C  74                 	db	116	;'t'
  3582  00E56D  20                 	db	32
  3583  00E56E  64                 	db	100	;'d'
  3584  00E56F  65                 	db	101	;'e'
  3585  00E570  76                 	db	118	;'v'
  3586  00E571  69                 	db	105	;'i'
  3587  00E572  63                 	db	99	;'c'
  3588  00E573  65                 	db	101	;'e'
  3589  00E574  20                 	db	32
  3590  00E575  72                 	db	114	;'r'
  3591  00E576  65                 	db	101	;'e'
  3592  00E577  73                 	db	115	;'s'
  3593  00E578  65                 	db	101	;'e'
  3594  00E579  74                 	db	116	;'t'
  3595  00E57A  0A                 	db	10
  3596  00E57B  0D                 	db	13
  3597  00E57C  20                 	db	32
  3598  00E57D  20                 	db	32
  3599  00E57E  20                 	db	32
  3600  00E57F  2A                 	db	42
  3601  00E580  49                 	db	73	;'I'
  3602  00E581  44                 	db	68	;'D'
  3603  00E582  4E                 	db	78	;'N'
  3604  00E583  3F                 	db	63	;'?'
  3605  00E584  3A                 	db	58	;':'
  3606  00E585  20                 	db	32
  3607  00E586  52                 	db	82	;'R'
  3608  00E587  65                 	db	101	;'e'
  3609  00E588  74                 	db	116	;'t'
  3610  00E589  75                 	db	117	;'u'
  3611  00E58A  72                 	db	114	;'r'
  3612  00E58B  6E                 	db	110	;'n'
  3613  00E58C  73                 	db	115	;'s'
  3614  00E58D  20                 	db	32
  3615  00E58E  64                 	db	100	;'d'
  3616  00E58F  65                 	db	101	;'e'
  3617  00E590  76                 	db	118	;'v'
  3618  00E591  69                 	db	105	;'i'
  3619  00E592  63                 	db	99	;'c'
  3620  00E593  65                 	db	101	;'e'
  3621  00E594  20                 	db	32
  3622  00E595  69                 	db	105	;'i'
  3623  00E596  64                 	db	100	;'d'
  3624  00E597  65                 	db	101	;'e'
  3625  00E598  6E                 	db	110	;'n'
  3626  00E599  74                 	db	116	;'t'
  3627  00E59A  69                 	db	105	;'i'
  3628  00E59B  66                 	db	102	;'f'
  3629  00E59C  69                 	db	105	;'i'
  3630  00E59D  63                 	db	99	;'c'
  3631  00E59E  61                 	db	97	;'a'
  3632  00E59F  74                 	db	116	;'t'
  3633  00E5A0  69                 	db	105	;'i'
  3634  00E5A1  6F                 	db	111	;'o'
  3635  00E5A2  6E                 	db	110	;'n'
  3636  00E5A3  20                 	db	32
  3637  00E5A4  73                 	db	115	;'s'
  3638  00E5A5  74                 	db	116	;'t'
  3639  00E5A6  72                 	db	114	;'r'
  3640  00E5A7  69                 	db	105	;'i'
  3641  00E5A8  6E                 	db	110	;'n'
  3642  00E5A9  67                 	db	103	;'g'
  3643  00E5AA  0A                 	db	10
  3644  00E5AB  0D                 	db	13
  3645  00E5AC  20                 	db	32
  3646  00E5AD  20                 	db	32
  3647  00E5AE  20                 	db	32
  3648  00E5AF  44                 	db	68	;'D'
  3649  00E5B0  65                 	db	101	;'e'
  3650  00E5B1  76                 	db	118	;'v'
  3651  00E5B2  69                 	db	105	;'i'
  3652  00E5B3  63                 	db	99	;'c'
  3653  00E5B4  65                 	db	101	;'e'
  3654  00E5B5  20                 	db	32
  3655  00E5B6  4F                 	db	79	;'O'
  3656  00E5B7  6E                 	db	110	;'n'
  3657  00E5B8  20                 	db	32
  3658  00E5B9  54                 	db	84	;'T'
  3659  00E5BA  69                 	db	105	;'i'
  3660  00E5BB  6D                 	db	109	;'m'
  3661  00E5BC  65                 	db	101	;'e'
  3662  00E5BD  3F                 	db	63	;'?'
  3663  00E5BE  3A                 	db	58	;':'
  3664  00E5BF  20                 	db	32
  3665  00E5C0  52                 	db	82	;'R'
  3666  00E5C1  65                 	db	101	;'e'
  3667  00E5C2  74                 	db	116	;'t'
  3668  00E5C3  75                 	db	117	;'u'
  3669  00E5C4  72                 	db	114	;'r'
  3670  00E5C5  6E                 	db	110	;'n'
  3671  00E5C6  73                 	db	115	;'s'
  3672  00E5C7  20                 	db	32
  3673  00E5C8  64                 	db	100	;'d'
  3674  00E5C9  65                 	db	101	;'e'
  3675  00E5CA  76                 	db	118	;'v'
  3676  00E5CB  69                 	db	105	;'i'
  3677  00E5CC  63                 	db	99	;'c'
  3678  00E5CD  65                 	db	101	;'e'
  3679  00E5CE  20                 	db	32
  3680  00E5CF  6F                 	db	111	;'o'
  3681  00E5D0  6E                 	db	110	;'n'
  3682  00E5D1  20                 	db	32
  3683  00E5D2  74                 	db	116	;'t'
  3684  00E5D3  69                 	db	105	;'i'
  3685  00E5D4  6D                 	db	109	;'m'
  3686  00E5D5  65                 	db	101	;'e'
  3687  00E5D6  20                 	db	32
  3688  00E5D7  73                 	db	115	;'s'
  3689  00E5D8  69                 	db	105	;'i'
  3690  00E5D9  6E                 	db	110	;'n'
  3691  00E5DA  63                 	db	99	;'c'
  3692  00E5DB  65                 	db	101	;'e'
  3693  00E5DC  20                 	db	32
  3694  00E5DD  6C                 	db	108	;'l'
  3695  00E5DE  61                 	db	97	;'a'
  3696  00E5DF  73                 	db	115	;'s'
  3697  00E5E0  74                 	db	116	;'t'
  3698  00E5E1  20                 	db	32
  3699  00E5E2  64                 	db	100	;'d'
  3700  00E5E3  65                 	db	101	;'e'
  3701  00E5E4  76                 	db	118	;'v'
  3702  00E5E5  69                 	db	105	;'i'
  3703  00E5E6  63                 	db	99	;'c'
  3704  00E5E7  65                 	db	101	;'e'
  3705  00E5E8  20                 	db	32
  3706  00E5E9  72                 	db	114	;'r'
  3707  00E5EA  65                 	db	101	;'e'
  3708  00E5EB  73                 	db	115	;'s'
  3709  00E5EC  65                 	db	101	;'e'
  3710  00E5ED  74                 	db	116	;'t'
  3711  00E5EE  0A                 	db	10
  3712  00E5EF  0D                 	db	13
  3713  00E5F0  20                 	db	32
  3714  00E5F1  20                 	db	32
  3715  00E5F2  20                 	db	32
  3716  00E5F3  44                 	db	68	;'D'
  3717  00E5F4  65                 	db	101	;'e'
  3718  00E5F5  76                 	db	118	;'v'
  3719  00E5F6  69                 	db	105	;'i'
  3720  00E5F7  63                 	db	99	;'c'
  3721  00E5F8  65                 	db	101	;'e'
  3722  00E5F9  20                 	db	32
  3723  00E5FA  49                 	db	73	;'I'
  3724  00E5FB  44                 	db	68	;'D'
  3725  00E5FC  3F                 	db	63	;'?'
  3726  00E5FD  3A                 	db	58	;':'
  3727  00E5FE  20                 	db	32
  3728  00E5FF  52                 	db	82	;'R'
  3729  00E600  65                 	db	101	;'e'
  3730  00E601  74                 	db	116	;'t'
  3731  00E602  75                 	db	117	;'u'
  3732  00E603  72                 	db	114	;'r'
  3733  00E604  6E                 	db	110	;'n'
  3734  00E605  73                 	db	115	;'s'
  3735  00E606  20                 	db	32
  3736  00E607  64                 	db	100	;'d'
  3737  00E608  65                 	db	101	;'e'
  3738  00E609  76                 	db	118	;'v'
  3739  00E60A  69                 	db	105	;'i'
  3740  00E60B  63                 	db	99	;'c'
  3741  00E60C  65                 	db	101	;'e'
  3742  00E60D  20                 	db	32
  3743  00E60E  49                 	db	73	;'I'
  3744  00E60F  44                 	db	68	;'D'
  3745  00E610  20                 	db	32
  3746  00E611  61                 	db	97	;'a'
  3747  00E612  73                 	db	115	;'s'
  3748  00E613  20                 	db	32
  3749  00E614  70                 	db	112	;'p'
  3750  00E615  72                 	db	114	;'r'
  3751  00E616  65                 	db	101	;'e'
  3752  00E617  2D                 	db	45
  3753  00E618  70                 	db	112	;'p'
  3754  00E619  72                 	db	114	;'r'
  3755  00E61A  6F                 	db	111	;'o'
  3756  00E61B  67                 	db	103	;'g'
  3757  00E61C  72                 	db	114	;'r'
  3758  00E61D  61                 	db	97	;'a'
  3759  00E61E  6D                 	db	109	;'m'
  3760  00E61F  6D                 	db	109	;'m'
  3761  00E620  65                 	db	101	;'e'
  3762  00E621  64                 	db	100	;'d'
  3763  00E622  20                 	db	32
  3764  00E623  69                 	db	105	;'i'
  3765  00E624  6E                 	db	110	;'n'
  3766  00E625  20                 	db	32
  3767  00E626  66                 	db	102	;'f'
  3768  00E627  6C                 	db	108	;'l'
  3769  00E628  61                 	db	97	;'a'
  3770  00E629  73                 	db	115	;'s'
  3771  00E62A  68                 	db	104	;'h'
  3772  00E62B  20                 	db	32
  3773  00E62C  6D                 	db	109	;'m'
  3774  00E62D  65                 	db	101	;'e'
  3775  00E62E  6D                 	db	109	;'m'
  3776  00E62F  6F                 	db	111	;'o'
  3777  00E630  72                 	db	114	;'r'
  3778  00E631  79                 	db	121	;'y'
  3779  00E632  0A                 	db	10
  3780  00E633  0D                 	db	13
  3781  00E634  20                 	db	32
  3782  00E635  20                 	db	32
  3783  00E636  20                 	db	32
  3784  00E637  52                 	db	82	;'R'
  3785  00E638  65                 	db	101	;'e'
  3786  00E639  76                 	db	118	;'v'
  3787  00E63A  69                 	db	105	;'i'
  3788  00E63B  73                 	db	115	;'s'
  3789  00E63C  69                 	db	105	;'i'
  3790  00E63D  6F                 	db	111	;'o'
  3791  00E63E  6E                 	db	110	;'n'
  3792  00E63F  20                 	db	32
  3793  00E640  49                 	db	73	;'I'
  3794  00E641  44                 	db	68	;'D'
  3795  00E642  3F                 	db	63	;'?'
  3796  00E643  3A                 	db	58	;':'
  3797  00E644  20                 	db	32
  3798  00E645  52                 	db	82	;'R'
  3799  00E646  65                 	db	101	;'e'
  3800  00E647  74                 	db	116	;'t'
  3801  00E648  75                 	db	117	;'u'
  3802  00E649  72                 	db	114	;'r'
  3803  00E64A  6E                 	db	110	;'n'
  3804  00E64B  73                 	db	115	;'s'
  3805  00E64C  20                 	db	32
  3806  00E64D  64                 	db	100	;'d'
  3807  00E64E  65                 	db	101	;'e'
  3808  00E64F  76                 	db	118	;'v'
  3809  00E650  69                 	db	105	;'i'
  3810  00E651  63                 	db	99	;'c'
  3811  00E652  65                 	db	101	;'e'
  3812  00E653  20                 	db	32
  3813  00E654  73                 	db	115	;'s'
  3814  00E655  69                 	db	105	;'i'
  3815  00E656  6C                 	db	108	;'l'
  3816  00E657  69                 	db	105	;'i'
  3817  00E658  63                 	db	99	;'c'
  3818  00E659  6F                 	db	111	;'o'
  3819  00E65A  6E                 	db	110	;'n'
  3820  00E65B  20                 	db	32
  3821  00E65C  72                 	db	114	;'r'
  3822  00E65D  65                 	db	101	;'e'
  3823  00E65E  76                 	db	118	;'v'
  3824  00E65F  69                 	db	105	;'i'
  3825  00E660  73                 	db	115	;'s'
  3826  00E661  69                 	db	105	;'i'
  3827  00E662  6F                 	db	111	;'o'
  3828  00E663  6E                 	db	110	;'n'
  3829  00E664  20                 	db	32
  3830  00E665  49                 	db	73	;'I'
  3831  00E666  44                 	db	68	;'D'
  3832  00E667  20                 	db	32
  3833  00E668  61                 	db	97	;'a'
  3834  00E669  73                 	db	115	;'s'
  3835  00E66A  20                 	db	32
  3836  00E66B  70                 	db	112	;'p'
  3837  00E66C  72                 	db	114	;'r'
  3838  00E66D  65                 	db	101	;'e'
  3839  00E66E  2D                 	db	45
  3840  00E66F  70                 	db	112	;'p'
  3841  00E670  72                 	db	114	;'r'
  3842  00E671  6F                 	db	111	;'o'
  3843  00E672  67                 	db	103	;'g'
  3844  00E673  72                 	db	114	;'r'
  3845  00E674  61                 	db	97	;'a'
  3846  00E675  6D                 	db	109	;'m'
  3847  00E676  6D                 	db	109	;'m'
  3848  00E677  65                 	db	101	;'e'
  3849  00E678  64                 	db	100	;'d'
  3850  00E679  20                 	db	32
  3851  00E67A  69                 	db	105	;'i'
  3852  00E67B  6E                 	db	110	;'n'
  3853  00E67C  20                 	db	32
  3854  00E67D  66                 	db	102	;'f'
  3855  00E67E  6C                 	db	108	;'l'
  3856  00E67F  61                 	db	97	;'a'
  3857  00E680  73                 	db	115	;'s'
  3858  00E681  68                 	db	104	;'h'
  3859  00E682  20                 	db	32
  3860  00E683  6D                 	db	109	;'m'
  3861  00E684  65                 	db	101	;'e'
  3862  00E685  6D                 	db	109	;'m'
  3863  00E686  6F                 	db	111	;'o'
  3864  00E687  72                 	db	114	;'r'
  3865  00E688  79                 	db	121	;'y'
  3866  00E689  0A                 	db	10
  3867  00E68A  0D                 	db	13
  3868  00E68B  20                 	db	32
  3869  00E68C  20                 	db	32
  3870  00E68D  20                 	db	32
  3871  00E68E  55                 	db	85	;'U'
  3872  00E68F  73                 	db	115	;'s'
  3873  00E690  65                 	db	101	;'e'
  3874  00E691  72                 	db	114	;'r'
  3875  00E692  20                 	db	32
  3876  00E693  49                 	db	73	;'I'
  3877  00E694  44                 	db	68	;'D'
  3878  00E695  73                 	db	115	;'s'
  3879  00E696  3F                 	db	63	;'?'
  3880  00E697  3A                 	db	58	;':'
  3881  00E698  20                 	db	32
  3882  00E699  52                 	db	82	;'R'
  3883  00E69A  65                 	db	101	;'e'
  3884  00E69B  74                 	db	116	;'t'
  3885  00E69C  75                 	db	117	;'u'
  3886  00E69D  72                 	db	114	;'r'
  3887  00E69E  6E                 	db	110	;'n'
  3888  00E69F  73                 	db	115	;'s'
  3889  00E6A0  20                 	db	32
  3890  00E6A1  61                 	db	97	;'a'
  3891  00E6A2  20                 	db	32
  3892  00E6A3  6C                 	db	108	;'l'
  3893  00E6A4  69                 	db	105	;'i'
  3894  00E6A5  73                 	db	115	;'s'
  3895  00E6A6  74                 	db	116	;'t'
  3896  00E6A7  20                 	db	32
  3897  00E6A8  6F                 	db	111	;'o'
  3898  00E6A9  66                 	db	102	;'f'
  3899  00E6AA  20                 	db	32
  3900  00E6AB  75                 	db	117	;'u'
  3901  00E6AC  73                 	db	115	;'s'
  3902  00E6AD  65                 	db	101	;'e'
  3903  00E6AE  72                 	db	114	;'r'
  3904  00E6AF  20                 	db	32
  3905  00E6B0  49                 	db	73	;'I'
  3906  00E6B1  44                 	db	68	;'D'
  3907  00E6B2  73                 	db	115	;'s'
  3908  00E6B3  20                 	db	32
  3909  00E6B4  28                 	db	40
  3910  00E6B5  64                 	db	100	;'d'
  3911  00E6B6  69                 	db	105	;'i'
  3912  00E6B7  73                 	db	115	;'s'
  3913  00E6B8  70                 	db	112	;'p'
  3914  00E6B9  6C                 	db	108	;'l'
  3915  00E6BA  61                 	db	97	;'a'
  3916  00E6BB  79                 	db	121	;'y'
  3917  00E6BC  65                 	db	101	;'e'
  3918  00E6BD  64                 	db	100	;'d'
  3919  00E6BE  20                 	db	32
  3920  00E6BF  69                 	db	105	;'i'
  3921  00E6C0  6E                 	db	110	;'n'
  3922  00E6C1  20                 	db	32
  3923  00E6C2  68                 	db	104	;'h'
  3924  00E6C3  65                 	db	101	;'e'
  3925  00E6C4  78                 	db	120	;'x'
  3926  00E6C5  29                 	db	41
  3927  00E6C6  20                 	db	32
  3928  00E6C7  61                 	db	97	;'a'
  3929  00E6C8  73                 	db	115	;'s'
  3930  00E6C9  20                 	db	32
  3931  00E6CA  73                 	db	115	;'s'
  3932  00E6CB  74                 	db	116	;'t'
  3933  00E6CC  6F                 	db	111	;'o'
  3934  00E6CD  72                 	db	114	;'r'
  3935  00E6CE  65                 	db	101	;'e'
  3936  00E6CF  64                 	db	100	;'d'
  3937  00E6D0  20                 	db	32
  3938  00E6D1  69                 	db	105	;'i'
  3939  00E6D2  6E                 	db	110	;'n'
  3940  00E6D3  20                 	db	32
  3941  00E6D4  66                 	db	102	;'f'
  3942  00E6D5  6C                 	db	108	;'l'
  3943  00E6D6  61                 	db	97	;'a'
  3944  00E6D7  73                 	db	115	;'s'
  3945  00E6D8  68                 	db	104	;'h'
  3946  00E6D9  20                 	db	32
  3947  00E6DA  6D                 	db	109	;'m'
  3948  00E6DB  65                 	db	101	;'e'
  3949  00E6DC  6D                 	db	109	;'m'
  3950  00E6DD  6F                 	db	111	;'o'
  3951  00E6DE  72                 	db	114	;'r'
  3952  00E6DF  79                 	db	121	;'y'
  3953  00E6E0  0A                 	db	10
  3954  00E6E1  0D                 	db	13
  3955  00E6E2  20                 	db	32
  3956  00E6E3  20                 	db	32
  3957  00E6E4  20                 	db	32
  3958  00E6E5  41                 	db	65	;'A'
  3959  00E6E6  44                 	db	68	;'D'
  3960  00E6E7  43                 	db	67	;'C'
  3961  00E6E8  20                 	db	32
  3962  00E6E9  45                 	db	69	;'E'
  3963  00E6EA  72                 	db	114	;'r'
  3964  00E6EB  72                 	db	114	;'r'
  3965  00E6EC  6F                 	db	111	;'o'
  3966  00E6ED  72                 	db	114	;'r'
  3967  00E6EE  3F                 	db	63	;'?'
  3968  00E6EF  3A                 	db	58	;':'
  3969  00E6F0  20                 	db	32
  3970  00E6F1  52                 	db	82	;'R'
  3971  00E6F2  65                 	db	101	;'e'
  3972  00E6F3  74                 	db	116	;'t'
  3973  00E6F4  75                 	db	117	;'u'
  3974  00E6F5  72                 	db	114	;'r'
  3975  00E6F6  6E                 	db	110	;'n'
  3976  00E6F7  73                 	db	115	;'s'
  3977  00E6F8  20                 	db	32
  3978  00E6F9  74                 	db	116	;'t'
  3979  00E6FA  68                 	db	104	;'h'
  3980  00E6FB  65                 	db	101	;'e'
  3981  00E6FC  20                 	db	32
  3982  00E6FD  63                 	db	99	;'c'
  3983  00E6FE  61                 	db	97	;'a'
  3984  00E6FF  75                 	db	117	;'u'
  3985  00E700  73                 	db	115	;'s'
  3986  00E701  65                 	db	101	;'e'
  3987  00E702  20                 	db	32
  3988  00E703  6F                 	db	111	;'o'
  3989  00E704  66                 	db	102	;'f'
  3990  00E705  20                 	db	32
  3991  00E706  61                 	db	97	;'a'
  3992  00E707  6E                 	db	110	;'n'
  3993  00E708  20                 	db	32
  3994  00E709  41                 	db	65	;'A'
  3995  00E70A  44                 	db	68	;'D'
  3996  00E70B  43                 	db	67	;'C'
  3997  00E70C  20                 	db	32
  3998  00E70D  65                 	db	101	;'e'
  3999  00E70E  72                 	db	114	;'r'
  4000  00E70F  72                 	db	114	;'r'
  4001  00E710  6F                 	db	111	;'o'
  4002  00E711  72                 	db	114	;'r'
  4003  00E712  20                 	db	32
  4004  00E713  69                 	db	105	;'i'
  4005  00E714  66                 	db	102	;'f'
  4006  00E715  20                 	db	32
  4007  00E716  61                 	db	97	;'a'
  4008  00E717  6E                 	db	110	;'n'
  4009  00E718  20                 	db	32
  4010  00E719  65                 	db	101	;'e'
  4011  00E71A  72                 	db	114	;'r'
  4012  00E71B  72                 	db	114	;'r'
  4013  00E71C  6F                 	db	111	;'o'
  4014  00E71D  72                 	db	114	;'r'
  4015  00E71E  20                 	db	32
  4016  00E71F  6F                 	db	111	;'o'
  4017  00E720  63                 	db	99	;'c'
  4018  00E721  63                 	db	99	;'c'
  4019  00E722  75                 	db	117	;'u'
  4020  00E723  72                 	db	114	;'r'
  4021  00E724  72                 	db	114	;'r'
  4022  00E725  65                 	db	101	;'e'
  4023  00E726  64                 	db	100	;'d'
  4024  00E727  0A                 	db	10
  4025  00E728  0D                 	db	13
  4026  00E729  20                 	db	32
  4027  00E72A  20                 	db	32
  4028  00E72B  20                 	db	32
  4029  00E72C  43                 	db	67	;'C'
  4030  00E72D  6C                 	db	108	;'l'
  4031  00E72E  65                 	db	101	;'e'
  4032  00E72F  61                 	db	97	;'a'
  4033  00E730  72                 	db	114	;'r'
  4034  00E731  20                 	db	32
  4035  00E732  41                 	db	65	;'A'
  4036  00E733  44                 	db	68	;'D'
  4037  00E734  43                 	db	67	;'C'
  4038  00E735  20                 	db	32
  4039  00E736  45                 	db	69	;'E'
  4040  00E737  72                 	db	114	;'r'
  4041  00E738  72                 	db	114	;'r'
  4042  00E739  6F                 	db	111	;'o'
  4043  00E73A  72                 	db	114	;'r'
  4044  00E73B  3A                 	db	58	;':'
  4045  00E73C  20                 	db	32
  4046  00E73D  43                 	db	67	;'C'
  4047  00E73E  6C                 	db	108	;'l'
  4048  00E73F  65                 	db	101	;'e'
  4049  00E740  61                 	db	97	;'a'
  4050  00E741  72                 	db	114	;'r'
  4051  00E742  73                 	db	115	;'s'
  4052  00E743  20                 	db	32
  4053  00E744  74                 	db	116	;'t'
  4054  00E745  68                 	db	104	;'h'
  4055  00E746  65                 	db	101	;'e'
  4056  00E747  20                 	db	32
  4057  00E748  41                 	db	65	;'A'
  4058  00E749  44                 	db	68	;'D'
  4059  00E74A  43                 	db	67	;'C'
  4060  00E74B  20                 	db	32
  4061  00E74C  65                 	db	101	;'e'
  4062  00E74D  72                 	db	114	;'r'
  4063  00E74E  72                 	db	114	;'r'
  4064  00E74F  6F                 	db	111	;'o'
  4065  00E750  72                 	db	114	;'r'
  4066  00E751  20                 	db	32
  4067  00E752  61                 	db	97	;'a'
  4068  00E753  6E                 	db	110	;'n'
  4069  00E754  64                 	db	100	;'d'
  4070  00E755  20                 	db	32
  4071  00E756  72                 	db	114	;'r'
  4072  00E757  65                 	db	101	;'e'
  4073  00E758  73                 	db	115	;'s'
  4074  00E759  75                 	db	117	;'u'
  4075  00E75A  6D                 	db	109	;'m'
  4076  00E75B  65                 	db	101	;'e'
  4077  00E75C  73                 	db	115	;'s'
  4078  00E75D  20                 	db	32
  4079  00E75E  41                 	db	65	;'A'
  4080  00E75F  44                 	db	68	;'D'
  4081  00E760  43                 	db	67	;'C'
  4082  00E761  20                 	db	32
  4083  00E762  63                 	db	99	;'c'
  4084  00E763  6F                 	db	111	;'o'
  4085  00E764  6E                 	db	110	;'n'
  4086  00E765  76                 	db	118	;'v'
  4087  00E766  65                 	db	101	;'e'
  4088  00E767  72                 	db	114	;'r'
  4089  00E768  73                 	db	115	;'s'
  4090  00E769  69                 	db	105	;'i'
  4091  00E76A  6F                 	db	111	;'o'
  4092  00E76B  6E                 	db	110	;'n'
  4093  00E76C  73                 	db	115	;'s'
  4094  00E76D  0A                 	db	10
  4095  00E76E  0D                 	db	13
  4096  00E76F  20                 	db	32
  4097  00E770  20                 	db	32
  4098  00E771  20                 	db	32
  4099  00E772  56                 	db	86	;'V'
  4100  00E773  43                 	db	67	;'C'
  4101  00E774  43                 	db	67	;'C'
  4102  00E775  20                 	db	32
  4103  00E776  4F                 	db	79	;'O'
  4104  00E777  76                 	db	118	;'v'
  4105  00E778  65                 	db	101	;'e'
  4106  00E779  72                 	db	114	;'r'
  4107  00E77A  76                 	db	118	;'v'
  4108  00E77B  6F                 	db	111	;'o'
  4109  00E77C  6C                 	db	108	;'l'
  4110  00E77D  74                 	db	116	;'t'
  4111  00E77E  61                 	db	97	;'a'
  4112  00E77F  67                 	db	103	;'g'
  4113  00E780  65                 	db	101	;'e'
  4114  00E781  3F                 	db	63	;'?'
  4115  00E782  3A                 	db	58	;':'
  4116  00E783  20                 	db	32
  4117  00E784  53                 	db	83	;'S'
  4118  00E785  74                 	db	116	;'t'
  4119  00E786  61                 	db	97	;'a'
  4120  00E787  74                 	db	116	;'t'
  4121  00E788  65                 	db	101	;'e'
  4122  00E789  73                 	db	115	;'s'
  4123  00E78A  20                 	db	32
  4124  00E78B  69                 	db	105	;'i'
  4125  00E78C  66                 	db	102	;'f'
  4126  00E78D  20                 	db	32
  4127  00E78E  61                 	db	97	;'a'
  4128  00E78F  20                 	db	32
  4129  00E790  56                 	db	86	;'V'
  4130  00E791  43                 	db	67	;'C'
  4131  00E792  43                 	db	67	;'C'
  4132  00E793  20                 	db	32
  4133  00E794  6F                 	db	111	;'o'
  4134  00E795  76                 	db	118	;'v'
  4135  00E796  65                 	db	101	;'e'
  4136  00E797  72                 	db	114	;'r'
  4137  00E798  76                 	db	118	;'v'
  4138  00E799  6F                 	db	111	;'o'
  4139  00E79A  6C                 	db	108	;'l'
  4140  00E79B  74                 	db	116	;'t'
  4141  00E79C  61                 	db	97	;'a'
  4142  00E79D  67                 	db	103	;'g'
  4143  00E79E  65                 	db	101	;'e'
  4144  00E79F  20                 	db	32
  4145  00E7A0  63                 	db	99	;'c'
  4146  00E7A1  6F                 	db	111	;'o'
  4147  00E7A2  6E                 	db	110	;'n'
  4148  00E7A3  64                 	db	100	;'d'
  4149  00E7A4  69                 	db	105	;'i'
  4150  00E7A5  74                 	db	116	;'t'
  4151  00E7A6  69                 	db	105	;'i'
  4152  00E7A7  6F                 	db	111	;'o'
  4153  00E7A8  6E                 	db	110	;'n'
  4154  00E7A9  20                 	db	32
  4155  00E7AA  68                 	db	104	;'h'
  4156  00E7AB  61                 	db	97	;'a'
  4157  00E7AC  73                 	db	115	;'s'
  4158  00E7AD  20                 	db	32
  4159  00E7AE  6F                 	db	111	;'o'
  4160  00E7AF  63                 	db	99	;'c'
  4161  00E7B0  63                 	db	99	;'c'
  4162  00E7B1  75                 	db	117	;'u'
  4163  00E7B2  72                 	db	114	;'r'
  4164  00E7B3  72                 	db	114	;'r'
  4165  00E7B4  65                 	db	101	;'e'
  4166  00E7B5  64                 	db	100	;'d'
  4167  00E7B6  20                 	db	32
  4168  00E7B7  6F                 	db	111	;'o'
  4169  00E7B8  72                 	db	114	;'r'
  4170  00E7B9  20                 	db	32
  4171  00E7BA  6E                 	db	110	;'n'
  4172  00E7BB  6F                 	db	111	;'o'
  4173  00E7BC  74                 	db	116	;'t'
  4174  00E7BD  0A                 	db	10
  4175  00E7BE  0D                 	db	13
  4176  00E7BF  20                 	db	32
  4177  00E7C0  20                 	db	32
  4178  00E7C1  20                 	db	32
  4179  00E7C2  43                 	db	67	;'C'
  4180  00E7C3  6C                 	db	108	;'l'
  4181  00E7C4  65                 	db	101	;'e'
  4182  00E7C5  61                 	db	97	;'a'
  4183  00E7C6  72                 	db	114	;'r'
  4184  00E7C7  20                 	db	32
  4185  00E7C8  4D                 	db	77	;'M'
  4186  00E7C9  61                 	db	97	;'a'
  4187  00E7CA  78                 	db	120	;'x'
  4188  00E7CB  20                 	db	32
  4189  00E7CC  56                 	db	86	;'V'
  4190  00E7CD  61                 	db	97	;'a'
  4191  00E7CE  6C                 	db	108	;'l'
  4192  00E7CF  75                 	db	117	;'u'
  4193  00E7D0  65                 	db	101	;'e'
  4194  00E7D1  73                 	db	115	;'s'
  4195  00E7D2  3A                 	db	58	;':'
  4196  00E7D3  20                 	db	32
  4197  00E7D4  45                 	db	69	;'E'
  4198  00E7D5  72                 	db	114	;'r'
  4199  00E7D6  61                 	db	97	;'a'
  4200  00E7D7  73                 	db	115	;'s'
  4201  00E7D8  65                 	db	101	;'e'
  4202  00E7D9  73                 	db	115	;'s'
  4203  00E7DA  20                 	db	32
  4204  00E7DB  6D                 	db	109	;'m'
  4205  00E7DC  61                 	db	97	;'a'
  4206  00E7DD  78                 	db	120	;'x'
  4207  00E7DE  69                 	db	105	;'i'
  4208  00E7DF  6D                 	db	109	;'m'
  4209  00E7E0  75                 	db	117	;'u'
  4210  00E7E1  6D                 	db	109	;'m'
  4211  00E7E2  20                 	db	32
  4212  00E7E3  72                 	db	114	;'r'
  4213  00E7E4  65                 	db	101	;'e'
  4214  00E7E5  63                 	db	99	;'c'
  4215  00E7E6  6F                 	db	111	;'o'
  4216  00E7E7  72                 	db	114	;'r'
  4217  00E7E8  64                 	db	100	;'d'
  4218  00E7E9  65                 	db	101	;'e'
  4219  00E7EA  64                 	db	100	;'d'
  4220  00E7EB  20                 	db	32
  4221  00E7EC  76                 	db	118	;'v'
  4222  00E7ED  61                 	db	97	;'a'
  4223  00E7EE  6C                 	db	108	;'l'
  4224  00E7EF  75                 	db	117	;'u'
  4225  00E7F0  65                 	db	101	;'e'
  4226  00E7F1  73                 	db	115	;'s'
  4227  00E7F2  20                 	db	32
  4228  00E7F3  66                 	db	102	;'f'
  4229  00E7F4  72                 	db	114	;'r'
  4230  00E7F5  6F                 	db	111	;'o'
  4231  00E7F6  6D                 	db	109	;'m'
  4232  00E7F7  20                 	db	32
  4233  00E7F8  45                 	db	69	;'E'
  4234  00E7F9  45                 	db	69	;'E'
  4235  00E7FA  50                 	db	80	;'P'
  4236  00E7FB  52                 	db	82	;'R'
  4237  00E7FC  4F                 	db	79	;'O'
  4238  00E7FD  4D                 	db	77	;'M'
  4239  00E7FE  0A                 	db	10
  4240  00E7FF  0D                 	db	13
  4241  00E800  20                 	db	32
  4242  00E801  20                 	db	32
  4243  00E802  20                 	db	32
  4244  00E803  48                 	db	72	;'H'
  4245  00E804  65                 	db	101	;'e'
  4246  00E805  6C                 	db	108	;'l'
  4247  00E806  70                 	db	112	;'p'
  4248  00E807  3A                 	db	58	;':'
  4249  00E808  20                 	db	32
  4250  00E809  54                 	db	84	;'T'
  4251  00E80A  68                 	db	104	;'h'
  4252  00E80B  69                 	db	105	;'i'
  4253  00E80C  73                 	db	115	;'s'
  4254  00E80D  20                 	db	32
  4255  00E80E  6D                 	db	109	;'m'
  4256  00E80F  65                 	db	101	;'e'
  4257  00E810  73                 	db	115	;'s'
  4258  00E811  73                 	db	115	;'s'
  4259  00E812  61                 	db	97	;'a'
  4260  00E813  67                 	db	103	;'g'
  4261  00E814  65                 	db	101	;'e'
  4262  00E815  2C                 	db	44
  4263  00E816  20                 	db	32
  4264  00E817  6C                 	db	108	;'l'
  4265  00E818  69                 	db	105	;'i'
  4266  00E819  73                 	db	115	;'s'
  4267  00E81A  74                 	db	116	;'t'
  4268  00E81B  73                 	db	115	;'s'
  4269  00E81C  20                 	db	32
  4270  00E81D  73                 	db	115	;'s'
  4271  00E81E  75                 	db	117	;'u'
  4272  00E81F  70                 	db	112	;'p'
  4273  00E820  70                 	db	112	;'p'
  4274  00E821  6F                 	db	111	;'o'
  4275  00E822  72                 	db	114	;'r'
  4276  00E823  74                 	db	116	;'t'
  4277  00E824  65                 	db	101	;'e'
  4278  00E825  64                 	db	100	;'d'
  4279  00E826  20                 	db	32
  4280  00E827  63                 	db	99	;'c'
  4281  00E828  6F                 	db	111	;'o'
  4282  00E829  6D                 	db	109	;'m'
  4283  00E82A  6D                 	db	109	;'m'
  4284  00E82B  61                 	db	97	;'a'
  4285  00E82C  6E                 	db	110	;'n'
  4286  00E82D  64                 	db	100	;'d'
  4287  00E82E  73                 	db	115	;'s'
  4288  00E82F  0A                 	db	10
  4289  00E830  0D                 	db	13
  4290  00E831  0A                 	db	10
  4291  00E832  0D                 	db	13
  4292  00E833  00                 	db	0
  4293  00E834                     STR_137:
  4294  00E834  4C                 	db	76	;'L'
  4295  00E835  69                 	db	105	;'i'
  4296  00E836  73                 	db	115	;'s'
  4297  00E837  74                 	db	116	;'t'
  4298  00E838  20                 	db	32
  4299  00E839  6F                 	db	111	;'o'
  4300  00E83A  66                 	db	102	;'f'
  4301  00E83B  20                 	db	32
  4302  00E83C  73                 	db	115	;'s'
  4303  00E83D  75                 	db	117	;'u'
  4304  00E83E  70                 	db	112	;'p'
  4305  00E83F  70                 	db	112	;'p'
  4306  00E840  6F                 	db	111	;'o'
  4307  00E841  72                 	db	114	;'r'
  4308  00E842  74                 	db	116	;'t'
  4309  00E843  65                 	db	101	;'e'
  4310  00E844  64                 	db	100	;'d'
  4311  00E845  20                 	db	32
  4312  00E846  44                 	db	68	;'D'
  4313  00E847  65                 	db	101	;'e'
  4314  00E848  76                 	db	118	;'v'
  4315  00E849  69                 	db	105	;'i'
  4316  00E84A  63                 	db	99	;'c'
  4317  00E84B  65                 	db	101	;'e'
  4318  00E84C  20                 	db	32
  4319  00E84D  4D                 	db	77	;'M'
  4320  00E84E  65                 	db	101	;'e'
  4321  00E84F  61                 	db	97	;'a'
  4322  00E850  73                 	db	115	;'s'
  4323  00E851  75                 	db	117	;'u'
  4324  00E852  72                 	db	114	;'r'
  4325  00E853  65                 	db	101	;'e'
  4326  00E854  6D                 	db	109	;'m'
  4327  00E855  65                 	db	101	;'e'
  4328  00E856  6E                 	db	110	;'n'
  4329  00E857  74                 	db	116	;'t'
  4330  00E858  20                 	db	32
  4331  00E859  43                 	db	67	;'C'
  4332  00E85A  6F                 	db	111	;'o'
  4333  00E85B  6D                 	db	109	;'m'
  4334  00E85C  6D                 	db	109	;'m'
  4335  00E85D  61                 	db	97	;'a'
  4336  00E85E  6E                 	db	110	;'n'
  4337  00E85F  64                 	db	100	;'d'
  4338  00E860  73                 	db	115	;'s'
  4339  00E861  3A                 	db	58	;':'
  4340  00E862  0A                 	db	10
  4341  00E863  0D                 	db	13
  4342  00E864  20                 	db	32
  4343  00E865  20                 	db	32
  4344  00E866  20                 	db	32
  4345  00E867  4D                 	db	77	;'M'
  4346  00E868  65                 	db	101	;'e'
  4347  00E869  61                 	db	97	;'a'
  4348  00E86A  73                 	db	115	;'s'
  4349  00E86B  75                 	db	117	;'u'
  4350  00E86C  72                 	db	114	;'r'
  4351  00E86D  65                 	db	101	;'e'
  4352  00E86E  20                 	db	32
  4353  00E86F  50                 	db	80	;'P'
  4354  00E870  4F                 	db	79	;'O'
  4355  00E871  53                 	db	83	;'S'
  4356  00E872  33                 	db	51	;'3'
  4357  00E873  50                 	db	80	;'P'
  4358  00E874  33                 	db	51	;'3'
  4359  00E875  3F                 	db	63	;'?'
  4360  00E876  3A                 	db	58	;':'
  4361  00E877  20                 	db	32
  4362  00E878  52                 	db	82	;'R'
  4363  00E879  65                 	db	101	;'e'
  4364  00E87A  74                 	db	116	;'t'
  4365  00E87B  75                 	db	117	;'u'
  4366  00E87C  72                 	db	114	;'r'
  4367  00E87D  6E                 	db	110	;'n'
  4368  00E87E  73                 	db	115	;'s'
  4369  00E87F  20                 	db	32
  4370  00E880  2B                 	db	43
  4371  00E881  33                 	db	51	;'3'
  4372  00E882  2E                 	db	46
  4373  00E883  33                 	db	51	;'3'
  4374  00E884  56                 	db	86	;'V'
  4375  00E885  20                 	db	32
  4376  00E886  41                 	db	65	;'A'
  4377  00E887  44                 	db	68	;'D'
  4378  00E888  43                 	db	67	;'C'
  4379  00E889  20                 	db	32
  4380  00E88A  43                 	db	67	;'C'
  4381  00E88B  6F                 	db	111	;'o'
  4382  00E88C  6E                 	db	110	;'n'
  4383  00E88D  76                 	db	118	;'v'
  4384  00E88E  65                 	db	101	;'e'
  4385  00E88F  72                 	db	114	;'r'
  4386  00E890  73                 	db	115	;'s'
  4387  00E891  69                 	db	105	;'i'
  4388  00E892  6F                 	db	111	;'o'
  4389  00E893  6E                 	db	110	;'n'
  4390  00E894  20                 	db	32
  4391  00E895  69                 	db	105	;'i'
  4392  00E896  6E                 	db	110	;'n'
  4393  00E897  20                 	db	32
  4394  00E898  76                 	db	118	;'v'
  4395  00E899  6F                 	db	111	;'o'
  4396  00E89A  6C                 	db	108	;'l'
  4397  00E89B  74                 	db	116	;'t'
  4398  00E89C  73                 	db	115	;'s'
  4399  00E89D  0A                 	db	10
  4400  00E89E  0D                 	db	13
  4401  00E89F  20                 	db	32
  4402  00E8A0  20                 	db	32
  4403  00E8A1  20                 	db	32
  4404  00E8A2  4D                 	db	77	;'M'
  4405  00E8A3  65                 	db	101	;'e'
  4406  00E8A4  61                 	db	97	;'a'
  4407  00E8A5  73                 	db	115	;'s'
  4408  00E8A6  75                 	db	117	;'u'
  4409  00E8A7  72                 	db	114	;'r'
  4410  00E8A8  65                 	db	101	;'e'
  4411  00E8A9  20                 	db	32
  4412  00E8AA  50                 	db	80	;'P'
  4413  00E8AB  4F                 	db	79	;'O'
  4414  00E8AC  53                 	db	83	;'S'
  4415  00E8AD  31                 	db	49	;'1'
  4416  00E8AE  32                 	db	50	;'2'
  4417  00E8AF  3F                 	db	63	;'?'
  4418  00E8B0  3A                 	db	58	;':'
  4419  00E8B1  20                 	db	32
  4420  00E8B2  52                 	db	82	;'R'
  4421  00E8B3  65                 	db	101	;'e'
  4422  00E8B4  74                 	db	116	;'t'
  4423  00E8B5  75                 	db	117	;'u'
  4424  00E8B6  72                 	db	114	;'r'
  4425  00E8B7  6E                 	db	110	;'n'
  4426  00E8B8  73                 	db	115	;'s'
  4427  00E8B9  20                 	db	32
  4428  00E8BA  2B                 	db	43
  4429  00E8BB  31                 	db	49	;'1'
  4430  00E8BC  32                 	db	50	;'2'
  4431  00E8BD  56                 	db	86	;'V'
  4432  00E8BE  20                 	db	32
  4433  00E8BF  41                 	db	65	;'A'
  4434  00E8C0  44                 	db	68	;'D'
  4435  00E8C1  43                 	db	67	;'C'
  4436  00E8C2  20                 	db	32
  4437  00E8C3  43                 	db	67	;'C'
  4438  00E8C4  6F                 	db	111	;'o'
  4439  00E8C5  6E                 	db	110	;'n'
  4440  00E8C6  76                 	db	118	;'v'
  4441  00E8C7  65                 	db	101	;'e'
  4442  00E8C8  72                 	db	114	;'r'
  4443  00E8C9  73                 	db	115	;'s'
  4444  00E8CA  69                 	db	105	;'i'
  4445  00E8CB  6F                 	db	111	;'o'
  4446  00E8CC  6E                 	db	110	;'n'
  4447  00E8CD  20                 	db	32
  4448  00E8CE  69                 	db	105	;'i'
  4449  00E8CF  6E                 	db	110	;'n'
  4450  00E8D0  20                 	db	32
  4451  00E8D1  76                 	db	118	;'v'
  4452  00E8D2  6F                 	db	111	;'o'
  4453  00E8D3  6C                 	db	108	;'l'
  4454  00E8D4  74                 	db	116	;'t'
  4455  00E8D5  73                 	db	115	;'s'
  4456  00E8D6  0A                 	db	10
  4457  00E8D7  0D                 	db	13
  4458  00E8D8  20                 	db	32
  4459  00E8D9  20                 	db	32
  4460  00E8DA  20                 	db	32
  4461  00E8DB  4D                 	db	77	;'M'
  4462  00E8DC  65                 	db	101	;'e'
  4463  00E8DD  61                 	db	97	;'a'
  4464  00E8DE  73                 	db	115	;'s'
  4465  00E8DF  75                 	db	117	;'u'
  4466  00E8E0  72                 	db	114	;'r'
  4467  00E8E1  65                 	db	101	;'e'
  4468  00E8E2  20                 	db	32
  4469  00E8E3  44                 	db	68	;'D'
  4470  00E8E4  69                 	db	105	;'i'
  4471  00E8E5  65                 	db	101	;'e'
  4472  00E8E6  20                 	db	32
  4473  00E8E7  54                 	db	84	;'T'
  4474  00E8E8  65                 	db	101	;'e'
  4475  00E8E9  6D                 	db	109	;'m'
  4476  00E8EA  70                 	db	112	;'p'
  4477  00E8EB  3F                 	db	63	;'?'
  4478  00E8EC  3A                 	db	58	;':'
  4479  00E8ED  20                 	db	32
  4480  00E8EE  52                 	db	82	;'R'
  4481  00E8EF  65                 	db	101	;'e'
  4482  00E8F0  74                 	db	116	;'t'
  4483  00E8F1  75                 	db	117	;'u'
  4484  00E8F2  72                 	db	114	;'r'
  4485  00E8F3  6E                 	db	110	;'n'
  4486  00E8F4  73                 	db	115	;'s'
  4487  00E8F5  20                 	db	32
  4488  00E8F6  74                 	db	116	;'t'
  4489  00E8F7  68                 	db	104	;'h'
  4490  00E8F8  65                 	db	101	;'e'
  4491  00E8F9  20                 	db	32
  4492  00E8FA  6D                 	db	109	;'m'
  4493  00E8FB  69                 	db	105	;'i'
  4494  00E8FC  63                 	db	99	;'c'
  4495  00E8FD  72                 	db	114	;'r'
  4496  00E8FE  6F                 	db	111	;'o'
  4497  00E8FF  63                 	db	99	;'c'
  4498  00E900  6F                 	db	111	;'o'
  4499  00E901  6E                 	db	110	;'n'
  4500  00E902  74                 	db	116	;'t'
  4501  00E903  72                 	db	114	;'r'
  4502  00E904  6F                 	db	111	;'o'
  4503  00E905  6C                 	db	108	;'l'
  4504  00E906  6C                 	db	108	;'l'
  4505  00E907  65                 	db	101	;'e'
  4506  00E908  72                 	db	114	;'r'
  4507  00E909  20                 	db	32
  4508  00E90A  64                 	db	100	;'d'
  4509  00E90B  69                 	db	105	;'i'
  4510  00E90C  65                 	db	101	;'e'
  4511  00E90D  20                 	db	32
  4512  00E90E  74                 	db	116	;'t'
  4513  00E90F  65                 	db	101	;'e'
  4514  00E910  6D                 	db	109	;'m'
  4515  00E911  70                 	db	112	;'p'
  4516  00E912  65                 	db	101	;'e'
  4517  00E913  72                 	db	114	;'r'
  4518  00E914  61                 	db	97	;'a'
  4519  00E915  74                 	db	116	;'t'
  4520  00E916  75                 	db	117	;'u'
  4521  00E917  72                 	db	114	;'r'
  4522  00E918  65                 	db	101	;'e'
  4523  00E919  20                 	db	32
  4524  00E91A  69                 	db	105	;'i'
  4525  00E91B  6E                 	db	110	;'n'
  4526  00E91C  20                 	db	32
  4527  00E91D  64                 	db	100	;'d'
  4528  00E91E  65                 	db	101	;'e'
  4529  00E91F  67                 	db	103	;'g'
  4530  00E920  72                 	db	114	;'r'
  4531  00E921  65                 	db	101	;'e'
  4532  00E922  65                 	db	101	;'e'
  4533  00E923  73                 	db	115	;'s'
  4534  00E924  20                 	db	32
  4535  00E925  43                 	db	67	;'C'
  4536  00E926  0A                 	db	10
  4537  00E927  0D                 	db	13
  4538  00E928  20                 	db	32
  4539  00E929  20                 	db	32
  4540  00E92A  20                 	db	32
  4541  00E92B  4D                 	db	77	;'M'
  4542  00E92C  65                 	db	101	;'e'
  4543  00E92D  61                 	db	97	;'a'
  4544  00E92E  73                 	db	115	;'s'
  4545  00E92F  75                 	db	117	;'u'
  4546  00E930  72                 	db	114	;'r'
  4547  00E931  65                 	db	101	;'e'
  4548  00E932  20                 	db	32
  4549  00E933  46                 	db	70	;'F'
  4550  00E934  56                 	db	86	;'V'
  4551  00E935  52                 	db	82	;'R'
  4552  00E936  3F                 	db	63	;'?'
  4553  00E937  3A                 	db	58	;':'
  4554  00E938  20                 	db	32
  4555  00E939  52                 	db	82	;'R'
  4556  00E93A  65                 	db	101	;'e'
  4557  00E93B  74                 	db	116	;'t'
  4558  00E93C  75                 	db	117	;'u'
  4559  00E93D  72                 	db	114	;'r'
  4560  00E93E  6E                 	db	110	;'n'
  4561  00E93F  73                 	db	115	;'s'
  4562  00E940  20                 	db	32
  4563  00E941  74                 	db	116	;'t'
  4564  00E942  68                 	db	104	;'h'
  4565  00E943  65                 	db	101	;'e'
  4566  00E944  20                 	db	32
  4567  00E945  69                 	db	105	;'i'
  4568  00E946  6E                 	db	110	;'n'
  4569  00E947  74                 	db	116	;'t'
  4570  00E948  65                 	db	101	;'e'
  4571  00E949  72                 	db	114	;'r'
  4572  00E94A  6E                 	db	110	;'n'
  4573  00E94B  61                 	db	97	;'a'
  4574  00E94C  6C                 	db	108	;'l'
  4575  00E94D  20                 	db	32
  4576  00E94E  66                 	db	102	;'f'
  4577  00E94F  69                 	db	105	;'i'
  4578  00E950  78                 	db	120	;'x'
  4579  00E951  65                 	db	101	;'e'
  4580  00E952  64                 	db	100	;'d'
  4581  00E953  20                 	db	32
  4582  00E954  76                 	db	118	;'v'
  4583  00E955  6F                 	db	111	;'o'
  4584  00E956  6C                 	db	108	;'l'
  4585  00E957  74                 	db	116	;'t'
  4586  00E958  61                 	db	97	;'a'
  4587  00E959  67                 	db	103	;'g'
  4588  00E95A  65                 	db	101	;'e'
  4589  00E95B  20                 	db	32
  4590  00E95C  72                 	db	114	;'r'
  4591  00E95D  65                 	db	101	;'e'
  4592  00E95E  66                 	db	102	;'f'
  4593  00E95F  65                 	db	101	;'e'
  4594  00E960  72                 	db	114	;'r'
  4595  00E961  65                 	db	101	;'e'
  4596  00E962  6E                 	db	110	;'n'
  4597  00E963  63                 	db	99	;'c'
  4598  00E964  65                 	db	101	;'e'
  4599  00E965  20                 	db	32
  4600  00E966  62                 	db	98	;'b'
  4601  00E967  75                 	db	117	;'u'
  4602  00E968  66                 	db	102	;'f'
  4603  00E969  66                 	db	102	;'f'
  4604  00E96A  65                 	db	101	;'e'
  4605  00E96B  72                 	db	114	;'r'
  4606  00E96C  20                 	db	32
  4607  00E96D  31                 	db	49	;'1'
  4608  00E96E  20                 	db	32
  4609  00E96F  6F                 	db	111	;'o'
  4610  00E970  75                 	db	117	;'u'
  4611  00E971  74                 	db	116	;'t'
  4612  00E972  70                 	db	112	;'p'
  4613  00E973  75                 	db	117	;'u'
  4614  00E974  74                 	db	116	;'t'
  4615  00E975  20                 	db	32
  4616  00E976  69                 	db	105	;'i'
  4617  00E977  6E                 	db	110	;'n'
  4618  00E978  20                 	db	32
  4619  00E979  76                 	db	118	;'v'
  4620  00E97A  6F                 	db	111	;'o'
  4621  00E97B  6C                 	db	108	;'l'
  4622  00E97C  74                 	db	116	;'t'
  4623  00E97D  73                 	db	115	;'s'
  4624  00E97E  0A                 	db	10
  4625  00E97F  0D                 	db	13
  4626  00E980  20                 	db	32
  4627  00E981  20                 	db	32
  4628  00E982  20                 	db	32
  4629  00E983  4D                 	db	77	;'M'
  4630  00E984  65                 	db	101	;'e'
  4631  00E985  61                 	db	97	;'a'
  4632  00E986  73                 	db	115	;'s'
  4633  00E987  75                 	db	117	;'u'
  4634  00E988  72                 	db	114	;'r'
  4635  00E989  65                 	db	101	;'e'
  4636  00E98A  20                 	db	32
  4637  00E98B  41                 	db	65	;'A'
  4638  00E98C  56                 	db	86	;'V'
  4639  00E98D  53                 	db	83	;'S'
  4640  00E98E  53                 	db	83	;'S'
  4641  00E98F  3F                 	db	63	;'?'
  4642  00E990  3A                 	db	58	;':'
  4643  00E991  20                 	db	32
  4644  00E992  52                 	db	82	;'R'
  4645  00E993  65                 	db	101	;'e'
  4646  00E994  74                 	db	116	;'t'
  4647  00E995  75                 	db	117	;'u'
  4648  00E996  72                 	db	114	;'r'
  4649  00E997  6E                 	db	110	;'n'
  4650  00E998  73                 	db	115	;'s'
  4651  00E999  20                 	db	32
  4652  00E99A  74                 	db	116	;'t'
  4653  00E99B  68                 	db	104	;'h'
  4654  00E99C  65                 	db	101	;'e'
  4655  00E99D  20                 	db	32
  4656  00E99E  6D                 	db	109	;'m'
  4657  00E99F  65                 	db	101	;'e'
  4658  00E9A0  61                 	db	97	;'a'
  4659  00E9A1  73                 	db	115	;'s'
  4660  00E9A2  75                 	db	117	;'u'
  4661  00E9A3  72                 	db	114	;'r'
  4662  00E9A4  65                 	db	101	;'e'
  4663  00E9A5  64                 	db	100	;'d'
  4664  00E9A6  20                 	db	32
  4665  00E9A7  76                 	db	118	;'v'
  4666  00E9A8  61                 	db	97	;'a'
  4667  00E9A9  6C                 	db	108	;'l'
  4668  00E9AA  75                 	db	117	;'u'
  4669  00E9AB  65                 	db	101	;'e'
  4670  00E9AC  20                 	db	32
  4671  00E9AD  6F                 	db	111	;'o'
  4672  00E9AE  66                 	db	102	;'f'
  4673  00E9AF  20                 	db	32
  4674  00E9B0  41                 	db	65	;'A'
  4675  00E9B1  6E                 	db	110	;'n'
  4676  00E9B2  61                 	db	97	;'a'
  4677  00E9B3  6C                 	db	108	;'l'
  4678  00E9B4  6F                 	db	111	;'o'
  4679  00E9B5  67                 	db	103	;'g'
  4680  00E9B6  20                 	db	32
  4681  00E9B7  56                 	db	86	;'V'
  4682  00E9B8  53                 	db	83	;'S'
  4683  00E9B9  53                 	db	83	;'S'
  4684  00E9BA  20                 	db	32
  4685  00E9BB  69                 	db	105	;'i'
  4686  00E9BC  6E                 	db	110	;'n'
  4687  00E9BD  20                 	db	32
  4688  00E9BE  76                 	db	118	;'v'
  4689  00E9BF  6F                 	db	111	;'o'
  4690  00E9C0  6C                 	db	108	;'l'
  4691  00E9C1  74                 	db	116	;'t'
  4692  00E9C2  73                 	db	115	;'s'
  4693  00E9C3  0A                 	db	10
  4694  00E9C4  0D                 	db	13
  4695  00E9C5  20                 	db	32
  4696  00E9C6  20                 	db	32
  4697  00E9C7  20                 	db	32
  4698  00E9C8  4D                 	db	77	;'M'
  4699  00E9C9  61                 	db	97	;'a'
  4700  00E9CA  78                 	db	120	;'x'
  4701  00E9CB  20                 	db	32
  4702  00E9CC  50                 	db	80	;'P'
  4703  00E9CD  4F                 	db	79	;'O'
  4704  00E9CE  53                 	db	83	;'S'
  4705  00E9CF  33                 	db	51	;'3'
  4706  00E9D0  50                 	db	80	;'P'
  4707  00E9D1  33                 	db	51	;'3'
  4708  00E9D2  20                 	db	32
  4709  00E9D3  56                 	db	86	;'V'
  4710  00E9D4  6F                 	db	111	;'o'
  4711  00E9D5  6C                 	db	108	;'l'
  4712  00E9D6  74                 	db	116	;'t'
  4713  00E9D7  61                 	db	97	;'a'
  4714  00E9D8  67                 	db	103	;'g'
  4715  00E9D9  65                 	db	101	;'e'
  4716  00E9DA  3F                 	db	63	;'?'
  4717  00E9DB  3A                 	db	58	;':'
  4718  00E9DC  20                 	db	32
  4719  00E9DD  52                 	db	82	;'R'
  4720  00E9DE  65                 	db	101	;'e'
  4721  00E9DF  74                 	db	116	;'t'
  4722  00E9E0  75                 	db	117	;'u'
  4723  00E9E1  72                 	db	114	;'r'
  4724  00E9E2  6E                 	db	110	;'n'
  4725  00E9E3  73                 	db	115	;'s'
  4726  00E9E4  20                 	db	32
  4727  00E9E5  74                 	db	116	;'t'
  4728  00E9E6  68                 	db	104	;'h'
  4729  00E9E7  65                 	db	101	;'e'
  4730  00E9E8  20                 	db	32
  4731  00E9E9  6D                 	db	109	;'m'
  4732  00E9EA  61                 	db	97	;'a'
  4733  00E9EB  78                 	db	120	;'x'
  4734  00E9EC  69                 	db	105	;'i'
  4735  00E9ED  6D                 	db	109	;'m'
  4736  00E9EE  75                 	db	117	;'u'
  4737  00E9EF  6D                 	db	109	;'m'
  4738  00E9F0  20                 	db	32
  4739  00E9F1  72                 	db	114	;'r'
  4740  00E9F2  65                 	db	101	;'e'
  4741  00E9F3  63                 	db	99	;'c'
  4742  00E9F4  6F                 	db	111	;'o'
  4743  00E9F5  72                 	db	114	;'r'
  4744  00E9F6  64                 	db	100	;'d'
  4745  00E9F7  65                 	db	101	;'e'
  4746  00E9F8  64                 	db	100	;'d'
  4747  00E9F9  20                 	db	32
  4748  00E9FA  2B                 	db	43
  4749  00E9FB  33                 	db	51	;'3'
  4750  00E9FC  2E                 	db	46
  4751  00E9FD  33                 	db	51	;'3'
  4752  00E9FE  56                 	db	86	;'V'
  4753  00E9FF  20                 	db	32
  4754  00EA00  52                 	db	82	;'R'
  4755  00EA01  61                 	db	97	;'a'
  4756  00EA02  69                 	db	105	;'i'
  4757  00EA03  6C                 	db	108	;'l'
  4758  00EA04  20                 	db	32
  4759  00EA05  56                 	db	86	;'V'
  4760  00EA06  6F                 	db	111	;'o'
  4761  00EA07  6C                 	db	108	;'l'
  4762  00EA08  74                 	db	116	;'t'
  4763  00EA09  61                 	db	97	;'a'
  4764  00EA0A  67                 	db	103	;'g'
  4765  00EA0B  65                 	db	101	;'e'
  4766  00EA0C  20                 	db	32
  4767  00EA0D  6D                 	db	109	;'m'
  4768  00EA0E  65                 	db	101	;'e'
  4769  00EA0F  61                 	db	97	;'a'
  4770  00EA10  73                 	db	115	;'s'
  4771  00EA11  75                 	db	117	;'u'
  4772  00EA12  72                 	db	114	;'r'
  4773  00EA13  65                 	db	101	;'e'
  4774  00EA14  64                 	db	100	;'d'
  4775  00EA15  0A                 	db	10
  4776  00EA16  0D                 	db	13
  4777  00EA17  20                 	db	32
  4778  00EA18  20                 	db	32
  4779  00EA19  20                 	db	32
  4780  00EA1A  4D                 	db	77	;'M'
  4781  00EA1B  61                 	db	97	;'a'
  4782  00EA1C  78                 	db	120	;'x'
  4783  00EA1D  20                 	db	32
  4784  00EA1E  50                 	db	80	;'P'
  4785  00EA1F  4F                 	db	79	;'O'
  4786  00EA20  53                 	db	83	;'S'
  4787  00EA21  31                 	db	49	;'1'
  4788  00EA22  32                 	db	50	;'2'
  4789  00EA23  20                 	db	32
  4790  00EA24  56                 	db	86	;'V'
  4791  00EA25  6F                 	db	111	;'o'
  4792  00EA26  6C                 	db	108	;'l'
  4793  00EA27  74                 	db	116	;'t'
  4794  00EA28  61                 	db	97	;'a'
  4795  00EA29  67                 	db	103	;'g'
  4796  00EA2A  65                 	db	101	;'e'
  4797  00EA2B  3F                 	db	63	;'?'
  4798  00EA2C  3A                 	db	58	;':'
  4799  00EA2D  20                 	db	32
  4800  00EA2E  52                 	db	82	;'R'
  4801  00EA2F  65                 	db	101	;'e'
  4802  00EA30  74                 	db	116	;'t'
  4803  00EA31  75                 	db	117	;'u'
  4804  00EA32  72                 	db	114	;'r'
  4805  00EA33  6E                 	db	110	;'n'
  4806  00EA34  73                 	db	115	;'s'
  4807  00EA35  20                 	db	32
  4808  00EA36  74                 	db	116	;'t'
  4809  00EA37  68                 	db	104	;'h'
  4810  00EA38  65                 	db	101	;'e'
  4811  00EA39  20                 	db	32
  4812  00EA3A  6D                 	db	109	;'m'
  4813  00EA3B  61                 	db	97	;'a'
  4814  00EA3C  78                 	db	120	;'x'
  4815  00EA3D  69                 	db	105	;'i'
  4816  00EA3E  6D                 	db	109	;'m'
  4817  00EA3F  75                 	db	117	;'u'
  4818  00EA40  6D                 	db	109	;'m'
  4819  00EA41  20                 	db	32
  4820  00EA42  72                 	db	114	;'r'
  4821  00EA43  65                 	db	101	;'e'
  4822  00EA44  63                 	db	99	;'c'
  4823  00EA45  6F                 	db	111	;'o'
  4824  00EA46  72                 	db	114	;'r'
  4825  00EA47  64                 	db	100	;'d'
  4826  00EA48  65                 	db	101	;'e'
  4827  00EA49  64                 	db	100	;'d'
  4828  00EA4A  20                 	db	32
  4829  00EA4B  2B                 	db	43
  4830  00EA4C  31                 	db	49	;'1'
  4831  00EA4D  32                 	db	50	;'2'
  4832  00EA4E  56                 	db	86	;'V'
  4833  00EA4F  20                 	db	32
  4834  00EA50  52                 	db	82	;'R'
  4835  00EA51  61                 	db	97	;'a'
  4836  00EA52  69                 	db	105	;'i'
  4837  00EA53  6C                 	db	108	;'l'
  4838  00EA54  20                 	db	32
  4839  00EA55  56                 	db	86	;'V'
  4840  00EA56  6F                 	db	111	;'o'
  4841  00EA57  6C                 	db	108	;'l'
  4842  00EA58  74                 	db	116	;'t'
  4843  00EA59  61                 	db	97	;'a'
  4844  00EA5A  67                 	db	103	;'g'
  4845  00EA5B  65                 	db	101	;'e'
  4846  00EA5C  20                 	db	32
  4847  00EA5D  6D                 	db	109	;'m'
  4848  00EA5E  65                 	db	101	;'e'
  4849  00EA5F  61                 	db	97	;'a'
  4850  00EA60  73                 	db	115	;'s'
  4851  00EA61  75                 	db	117	;'u'
  4852  00EA62  72                 	db	114	;'r'
  4853  00EA63  65                 	db	101	;'e'
  4854  00EA64  64                 	db	100	;'d'
  4855  00EA65  0A                 	db	10
  4856  00EA66  0D                 	db	13
  4857  00EA67  20                 	db	32
  4858  00EA68  20                 	db	32
  4859  00EA69  20                 	db	32
  4860  00EA6A  4D                 	db	77	;'M'
  4861  00EA6B  61                 	db	97	;'a'
  4862  00EA6C  78                 	db	120	;'x'
  4863  00EA6D  20                 	db	32
  4864  00EA6E  44                 	db	68	;'D'
  4865  00EA6F  69                 	db	105	;'i'
  4866  00EA70  65                 	db	101	;'e'
  4867  00EA71  20                 	db	32
  4868  00EA72  54                 	db	84	;'T'
  4869  00EA73  65                 	db	101	;'e'
  4870  00EA74  6D                 	db	109	;'m'
  4871  00EA75  70                 	db	112	;'p'
  4872  00EA76  3F                 	db	63	;'?'
  4873  00EA77  3A                 	db	58	;':'
  4874  00EA78  20                 	db	32
  4875  00EA79  52                 	db	82	;'R'
  4876  00EA7A  65                 	db	101	;'e'
  4877  00EA7B  74                 	db	116	;'t'
  4878  00EA7C  75                 	db	117	;'u'
  4879  00EA7D  72                 	db	114	;'r'
  4880  00EA7E  6E                 	db	110	;'n'
  4881  00EA7F  73                 	db	115	;'s'
  4882  00EA80  20                 	db	32
  4883  00EA81  74                 	db	116	;'t'
  4884  00EA82  68                 	db	104	;'h'
  4885  00EA83  65                 	db	101	;'e'
  4886  00EA84  20                 	db	32
  4887  00EA85  6D                 	db	109	;'m'
  4888  00EA86  61                 	db	97	;'a'
  4889  00EA87  78                 	db	120	;'x'
  4890  00EA88  69                 	db	105	;'i'
  4891  00EA89  6D                 	db	109	;'m'
  4892  00EA8A  75                 	db	117	;'u'
  4893  00EA8B  6D                 	db	109	;'m'
  4894  00EA8C  20                 	db	32
  4895  00EA8D  72                 	db	114	;'r'
  4896  00EA8E  65                 	db	101	;'e'
  4897  00EA8F  63                 	db	99	;'c'
  4898  00EA90  6F                 	db	111	;'o'
  4899  00EA91  72                 	db	114	;'r'
  4900  00EA92  64                 	db	100	;'d'
  4901  00EA93  65                 	db	101	;'e'
  4902  00EA94  64                 	db	100	;'d'
  4903  00EA95  20                 	db	32
  4904  00EA96  64                 	db	100	;'d'
  4905  00EA97  69                 	db	105	;'i'
  4906  00EA98  65                 	db	101	;'e'
  4907  00EA99  20                 	db	32
  4908  00EA9A  74                 	db	116	;'t'
  4909  00EA9B  65                 	db	101	;'e'
  4910  00EA9C  6D                 	db	109	;'m'
  4911  00EA9D  70                 	db	112	;'p'
  4912  00EA9E  65                 	db	101	;'e'
  4913  00EA9F  72                 	db	114	;'r'
  4914  00EAA0  61                 	db	97	;'a'
  4915  00EAA1  74                 	db	116	;'t'
  4916  00EAA2  75                 	db	117	;'u'
  4917  00EAA3  72                 	db	114	;'r'
  4918  00EAA4  65                 	db	101	;'e'
  4919  00EAA5  20                 	db	32
  4920  00EAA6  6D                 	db	109	;'m'
  4921  00EAA7  65                 	db	101	;'e'
  4922  00EAA8  61                 	db	97	;'a'
  4923  00EAA9  73                 	db	115	;'s'
  4924  00EAAA  75                 	db	117	;'u'
  4925  00EAAB  72                 	db	114	;'r'
  4926  00EAAC  65                 	db	101	;'e'
  4927  00EAAD  64                 	db	100	;'d'
  4928  00EAAE  0A                 	db	10
  4929  00EAAF  0D                 	db	13
  4930  00EAB0  20                 	db	32
  4931  00EAB1  20                 	db	32
  4932  00EAB2  20                 	db	32
  4933  00EAB3  4D                 	db	77	;'M'
  4934  00EAB4  61                 	db	97	;'a'
  4935  00EAB5  78                 	db	120	;'x'
  4936  00EAB6  20                 	db	32
  4937  00EAB7  46                 	db	70	;'F'
  4938  00EAB8  56                 	db	86	;'V'
  4939  00EAB9  52                 	db	82	;'R'
  4940  00EABA  20                 	db	32
  4941  00EABB  56                 	db	86	;'V'
  4942  00EABC  6F                 	db	111	;'o'
  4943  00EABD  6C                 	db	108	;'l'
  4944  00EABE  74                 	db	116	;'t'
  4945  00EABF  61                 	db	97	;'a'
  4946  00EAC0  67                 	db	103	;'g'
  4947  00EAC1  65                 	db	101	;'e'
  4948  00EAC2  3F                 	db	63	;'?'
  4949  00EAC3  3A                 	db	58	;':'
  4950  00EAC4  20                 	db	32
  4951  00EAC5  52                 	db	82	;'R'
  4952  00EAC6  65                 	db	101	;'e'
  4953  00EAC7  74                 	db	116	;'t'
  4954  00EAC8  75                 	db	117	;'u'
  4955  00EAC9  72                 	db	114	;'r'
  4956  00EACA  6E                 	db	110	;'n'
  4957  00EACB  73                 	db	115	;'s'
  4958  00EACC  20                 	db	32
  4959  00EACD  74                 	db	116	;'t'
  4960  00EACE  68                 	db	104	;'h'
  4961  00EACF  65                 	db	101	;'e'
  4962  00EAD0  20                 	db	32
  4963  00EAD1  6D                 	db	109	;'m'
  4964  00EAD2  61                 	db	97	;'a'
  4965  00EAD3  78                 	db	120	;'x'
  4966  00EAD4  69                 	db	105	;'i'
  4967  00EAD5  6D                 	db	109	;'m'
  4968  00EAD6  75                 	db	117	;'u'
  4969  00EAD7  6D                 	db	109	;'m'
  4970  00EAD8  20                 	db	32
  4971  00EAD9  72                 	db	114	;'r'
  4972  00EADA  65                 	db	101	;'e'
  4973  00EADB  63                 	db	99	;'c'
  4974  00EADC  6F                 	db	111	;'o'
  4975  00EADD  72                 	db	114	;'r'
  4976  00EADE  64                 	db	100	;'d'
  4977  00EADF  65                 	db	101	;'e'
  4978  00EAE0  64                 	db	100	;'d'
  4979  00EAE1  20                 	db	32
  4980  00EAE2  46                 	db	70	;'F'
  4981  00EAE3  56                 	db	86	;'V'
  4982  00EAE4  52                 	db	82	;'R'
  4983  00EAE5  20                 	db	32
  4984  00EAE6  42                 	db	66	;'B'
  4985  00EAE7  75                 	db	117	;'u'
  4986  00EAE8  66                 	db	102	;'f'
  4987  00EAE9  66                 	db	102	;'f'
  4988  00EAEA  65                 	db	101	;'e'
  4989  00EAEB  72                 	db	114	;'r'
  4990  00EAEC  20                 	db	32
  4991  00EAED  31                 	db	49	;'1'
  4992  00EAEE  20                 	db	32
  4993  00EAEF  56                 	db	86	;'V'
  4994  00EAF0  6F                 	db	111	;'o'
  4995  00EAF1  6C                 	db	108	;'l'
  4996  00EAF2  74                 	db	116	;'t'
  4997  00EAF3  61                 	db	97	;'a'
  4998  00EAF4  67                 	db	103	;'g'
  4999  00EAF5  65                 	db	101	;'e'
  5000  00EAF6  20                 	db	32
  5001  00EAF7  6D                 	db	109	;'m'
  5002  00EAF8  65                 	db	101	;'e'
  5003  00EAF9  61                 	db	97	;'a'
  5004  00EAFA  73                 	db	115	;'s'
  5005  00EAFB  75                 	db	117	;'u'
  5006  00EAFC  72                 	db	114	;'r'
  5007  00EAFD  65                 	db	101	;'e'
  5008  00EAFE  64                 	db	100	;'d'
  5009  00EAFF  0A                 	db	10
  5010  00EB00  0D                 	db	13
  5011  00EB01  0A                 	db	10
  5012  00EB02  0D                 	db	13
  5013  00EB03  00                 	db	0
  5014  00EB04                     STR_139:
  5015  00EB04  4C                 	db	76	;'L'
  5016  00EB05  69                 	db	105	;'i'
  5017  00EB06  73                 	db	115	;'s'
  5018  00EB07  74                 	db	116	;'t'
  5019  00EB08  20                 	db	32
  5020  00EB09  6F                 	db	111	;'o'
  5021  00EB0A  66                 	db	102	;'f'
  5022  00EB0B  20                 	db	32
  5023  00EB0C  73                 	db	115	;'s'
  5024  00EB0D  75                 	db	117	;'u'
  5025  00EB0E  70                 	db	112	;'p'
  5026  00EB0F  70                 	db	112	;'p'
  5027  00EB10  6F                 	db	111	;'o'
  5028  00EB11  72                 	db	114	;'r'
  5029  00EB12  74                 	db	116	;'t'
  5030  00EB13  65                 	db	101	;'e'
  5031  00EB14  64                 	db	100	;'d'
  5032  00EB15  20                 	db	32
  5033  00EB16  50                 	db	80	;'P'
  5034  00EB17  72                 	db	114	;'r'
  5035  00EB18  69                 	db	105	;'i'
  5036  00EB19  6D                 	db	109	;'m'
  5037  00EB1A  61                 	db	97	;'a'
  5038  00EB1B  72                 	db	114	;'r'
  5039  00EB1C  79                 	db	121	;'y'
  5040  00EB1D  20                 	db	32
  5041  00EB1E  4D                 	db	77	;'M'
  5042  00EB1F  65                 	db	101	;'e'
  5043  00EB20  61                 	db	97	;'a'
  5044  00EB21  73                 	db	115	;'s'
  5045  00EB22  75                 	db	117	;'u'
  5046  00EB23  72                 	db	114	;'r'
  5047  00EB24  65                 	db	101	;'e'
  5048  00EB25  6D                 	db	109	;'m'
  5049  00EB26  65                 	db	101	;'e'
  5050  00EB27  6E                 	db	110	;'n'
  5051  00EB28  74                 	db	116	;'t'
  5052  00EB29  20                 	db	32
  5053  00EB2A  43                 	db	67	;'C'
  5054  00EB2B  6F                 	db	111	;'o'
  5055  00EB2C  6D                 	db	109	;'m'
  5056  00EB2D  6D                 	db	109	;'m'
  5057  00EB2E  61                 	db	97	;'a'
  5058  00EB2F  6E                 	db	110	;'n'
  5059  00EB30  64                 	db	100	;'d'
  5060  00EB31  73                 	db	115	;'s'
  5061  00EB32  3A                 	db	58	;':'
  5062  00EB33  0A                 	db	10
  5063  00EB34  0D                 	db	13
  5064  00EB35  20                 	db	32
  5065  00EB36  20                 	db	32
  5066  00EB37  20                 	db	32
  5067  00EB38  4D                 	db	77	;'M'
  5068  00EB39  65                 	db	101	;'e'
  5069  00EB3A  61                 	db	97	;'a'
  5070  00EB3B  73                 	db	115	;'s'
  5071  00EB3C  75                 	db	117	;'u'
  5072  00EB3D  72                 	db	114	;'r'
  5073  00EB3E  65                 	db	101	;'e'
  5074  00EB3F  20                 	db	32
  5075  00EB40  44                 	db	68	;'D'
  5076  00EB41  65                 	db	101	;'e'
  5077  00EB42  74                 	db	116	;'t'
  5078  00EB43  65                 	db	101	;'e'
  5079  00EB44  63                 	db	99	;'c'
  5080  00EB45  74                 	db	116	;'t'
  5081  00EB46  65                 	db	101	;'e'
  5082  00EB47  64                 	db	100	;'d'
  5083  00EB48  20                 	db	32
  5084  00EB49  43                 	db	67	;'C'
  5085  00EB4A  75                 	db	117	;'u'
  5086  00EB4B  72                 	db	114	;'r'
  5087  00EB4C  72                 	db	114	;'r'
  5088  00EB4D  65                 	db	101	;'e'
  5089  00EB4E  6E                 	db	110	;'n'
  5090  00EB4F  74                 	db	116	;'t'
  5091  00EB50  3F                 	db	63	;'?'
  5092  00EB51  3A                 	db	58	;':'
  5093  00EB52  20                 	db	32
  5094  00EB53  52                 	db	82	;'R'
  5095  00EB54  65                 	db	101	;'e'
  5096  00EB55  74                 	db	116	;'t'
  5097  00EB56  75                 	db	117	;'u'
  5098  00EB57  72                 	db	114	;'r'
  5099  00EB58  6E                 	db	110	;'n'
  5100  00EB59  73                 	db	115	;'s'
  5101  00EB5A  20                 	db	32
  5102  00EB5B  6D                 	db	109	;'m'
  5103  00EB5C  65                 	db	101	;'e'
  5104  00EB5D  61                 	db	97	;'a'
  5105  00EB5E  73                 	db	115	;'s'
  5106  00EB5F  75                 	db	117	;'u'
  5107  00EB60  72                 	db	114	;'r'
  5108  00EB61  65                 	db	101	;'e'
  5109  00EB62  64                 	db	100	;'d'
  5110  00EB63  20                 	db	32
  5111  00EB64  6F                 	db	111	;'o'
  5112  00EB65  75                 	db	117	;'u'
  5113  00EB66  74                 	db	116	;'t'
  5114  00EB67  70                 	db	112	;'p'
  5115  00EB68  75                 	db	117	;'u'
  5116  00EB69  74                 	db	116	;'t'
  5117  00EB6A  20                 	db	32
  5118  00EB6B  63                 	db	99	;'c'
  5119  00EB6C  75                 	db	117	;'u'
  5120  00EB6D  72                 	db	114	;'r'
  5121  00EB6E  72                 	db	114	;'r'
  5122  00EB6F  65                 	db	101	;'e'
  5123  00EB70  6E                 	db	110	;'n'
  5124  00EB71  74                 	db	116	;'t'
  5125  00EB72  20                 	db	32
  5126  00EB73  69                 	db	105	;'i'
  5127  00EB74  6E                 	db	110	;'n'
  5128  00EB75  20                 	db	32
  5129  00EB76  61                 	db	97	;'a'
  5130  00EB77  6D                 	db	109	;'m'
  5131  00EB78  70                 	db	112	;'p'
  5132  00EB79  73                 	db	115	;'s'
  5133  00EB7A  20                 	db	32
  5134  00EB7B  61                 	db	97	;'a'
  5135  00EB7C  73                 	db	115	;'s'
  5136  00EB7D  20                 	db	32
  5137  00EB7E  73                 	db	115	;'s'
  5138  00EB7F  65                 	db	101	;'e'
  5139  00EB80  65                 	db	101	;'e'
  5140  00EB81  6E                 	db	110	;'n'
  5141  00EB82  20                 	db	32
  5142  00EB83  62                 	db	98	;'b'
  5143  00EB84  79                 	db	121	;'y'
  5144  00EB85  20                 	db	32
  5145  00EB86  41                 	db	65	;'A'
  5146  00EB87  44                 	db	68	;'D'
  5147  00EB88  43                 	db	67	;'C'
  5148  00EB89  0A                 	db	10
  5149  00EB8A  0D                 	db	13
  5150  00EB8B  20                 	db	32
  5151  00EB8C  20                 	db	32
  5152  00EB8D  20                 	db	32
  5153  00EB8E  4D                 	db	77	;'M'
  5154  00EB8F  65                 	db	101	;'e'
  5155  00EB90  61                 	db	97	;'a'
  5156  00EB91  73                 	db	115	;'s'
  5157  00EB92  75                 	db	117	;'u'
  5158  00EB93  72                 	db	114	;'r'
  5159  00EB94  65                 	db	101	;'e'
  5160  00EB95  20                 	db	32
  5161  00EB96  52                 	db	82	;'R'
  5162  00EB97  4D                 	db	77	;'M'
  5163  00EB98  53                 	db	83	;'S'
  5164  00EB99  20                 	db	32
  5165  00EB9A  43                 	db	67	;'C'
  5166  00EB9B  75                 	db	117	;'u'
  5167  00EB9C  72                 	db	114	;'r'
  5168  00EB9D  72                 	db	114	;'r'
  5169  00EB9E  65                 	db	101	;'e'
  5170  00EB9F  6E                 	db	110	;'n'
  5171  00EBA0  74                 	db	116	;'t'
  5172  00EBA1  3F                 	db	63	;'?'
  5173  00EBA2  3A                 	db	58	;':'
  5174  00EBA3  20                 	db	32
  5175  00EBA4  52                 	db	82	;'R'
  5176  00EBA5  65                 	db	101	;'e'
  5177  00EBA6  74                 	db	116	;'t'
  5178  00EBA7  75                 	db	117	;'u'
  5179  00EBA8  72                 	db	114	;'r'
  5180  00EBA9  6E                 	db	110	;'n'
  5181  00EBAA  73                 	db	115	;'s'
  5182  00EBAB  20                 	db	32
  5183  00EBAC  74                 	db	116	;'t'
  5184  00EBAD  68                 	db	104	;'h'
  5185  00EBAE  65                 	db	101	;'e'
  5186  00EBAF  20                 	db	32
  5187  00EBB0  63                 	db	99	;'c'
  5188  00EBB1  61                 	db	97	;'a'
  5189  00EBB2  6C                 	db	108	;'l'
  5190  00EBB3  63                 	db	99	;'c'
  5191  00EBB4  75                 	db	117	;'u'
  5192  00EBB5  6C                 	db	108	;'l'
  5193  00EBB6  61                 	db	97	;'a'
  5194  00EBB7  74                 	db	116	;'t'
  5195  00EBB8  65                 	db	101	;'e'
  5196  00EBB9  64                 	db	100	;'d'
  5197  00EBBA  20                 	db	32
  5198  00EBBB  52                 	db	82	;'R'
  5199  00EBBC  4D                 	db	77	;'M'
  5200  00EBBD  53                 	db	83	;'S'
  5201  00EBBE  20                 	db	32
  5202  00EBBF  6F                 	db	111	;'o'
  5203  00EBC0  75                 	db	117	;'u'
  5204  00EBC1  74                 	db	116	;'t'
  5205  00EBC2  70                 	db	112	;'p'
  5206  00EBC3  75                 	db	117	;'u'
  5207  00EBC4  74                 	db	116	;'t'
  5208  00EBC5  20                 	db	32
  5209  00EBC6  63                 	db	99	;'c'
  5210  00EBC7  75                 	db	117	;'u'
  5211  00EBC8  72                 	db	114	;'r'
  5212  00EBC9  72                 	db	114	;'r'
  5213  00EBCA  65                 	db	101	;'e'
  5214  00EBCB  6E                 	db	110	;'n'
  5215  00EBCC  74                 	db	116	;'t'
  5216  00EBCD  20                 	db	32
  5217  00EBCE  66                 	db	102	;'f'
  5218  00EBCF  72                 	db	114	;'r'
  5219  00EBD0  6F                 	db	111	;'o'
  5220  00EBD1  6D                 	db	109	;'m'
  5221  00EBD2  20                 	db	32
  5222  00EBD3  6D                 	db	109	;'m'
  5223  00EBD4  65                 	db	101	;'e'
  5224  00EBD5  61                 	db	97	;'a'
  5225  00EBD6  73                 	db	115	;'s'
  5226  00EBD7  75                 	db	117	;'u'
  5227  00EBD8  72                 	db	114	;'r'
  5228  00EBD9  65                 	db	101	;'e'
  5229  00EBDA  6D                 	db	109	;'m'
  5230  00EBDB  65                 	db	101	;'e'
  5231  00EBDC  6E                 	db	110	;'n'
  5232  00EBDD  74                 	db	116	;'t'
  5233  00EBDE  73                 	db	115	;'s'
  5234  00EBDF  20                 	db	32
  5235  00EBE0  61                 	db	97	;'a'
  5236  00EBE1  6E                 	db	110	;'n'
  5237  00EBE2  64                 	db	100	;'d'
  5238  00EBE3  20                 	db	32
  5239  00EBE4  54                 	db	84	;'T'
  5240  00EBE5  52                 	db	82	;'R'
  5241  00EBE6  49                 	db	73	;'I'
  5242  00EBE7  41                 	db	65	;'A'
  5243  00EBE8  43                 	db	67	;'C'
  5244  00EBE9  20                 	db	32
  5245  00EBEA  66                 	db	102	;'f'
  5246  00EBEB  69                 	db	105	;'i'
  5247  00EBEC  72                 	db	114	;'r'
  5248  00EBED  69                 	db	105	;'i'
  5249  00EBEE  6E                 	db	110	;'n'
  5250  00EBEF  67                 	db	103	;'g'
  5251  00EBF0  20                 	db	32
  5252  00EBF1  61                 	db	97	;'a'
  5253  00EBF2  6E                 	db	110	;'n'
  5254  00EBF3  67                 	db	103	;'g'
  5255  00EBF4  6C                 	db	108	;'l'
  5256  00EBF5  65                 	db	101	;'e'
  5257  00EBF6  0A                 	db	10
  5258  00EBF7  0D                 	db	13
  5259  00EBF8  20                 	db	32
  5260  00EBF9  20                 	db	32
  5261  00EBFA  20                 	db	32
  5262  00EBFB  4D                 	db	77	;'M'
  5263  00EBFC  65                 	db	101	;'e'
  5264  00EBFD  61                 	db	97	;'a'
  5265  00EBFE  73                 	db	115	;'s'
  5266  00EBFF  75                 	db	117	;'u'
  5267  00EC00  72                 	db	114	;'r'
  5268  00EC01  65                 	db	101	;'e'
  5269  00EC02  20                 	db	32
  5270  00EC03  52                 	db	82	;'R'
  5271  00EC04  4D                 	db	77	;'M'
  5272  00EC05  53                 	db	83	;'S'
  5273  00EC06  20                 	db	32
  5274  00EC07  56                 	db	86	;'V'
  5275  00EC08  6F                 	db	111	;'o'
  5276  00EC09  6C                 	db	108	;'l'
  5277  00EC0A  74                 	db	116	;'t'
  5278  00EC0B  61                 	db	97	;'a'
  5279  00EC0C  67                 	db	103	;'g'
  5280  00EC0D  65                 	db	101	;'e'
  5281  00EC0E  3F                 	db	63	;'?'
  5282  00EC0F  3A                 	db	58	;':'
  5283  00EC10  20                 	db	32
  5284  00EC11  52                 	db	82	;'R'
  5285  00EC12  65                 	db	101	;'e'
  5286  00EC13  74                 	db	116	;'t'
  5287  00EC14  75                 	db	117	;'u'
  5288  00EC15  72                 	db	114	;'r'
  5289  00EC16  6E                 	db	110	;'n'
  5290  00EC17  73                 	db	115	;'s'
  5291  00EC18  20                 	db	32
  5292  00EC19  74                 	db	116	;'t'
  5293  00EC1A  68                 	db	104	;'h'
  5294  00EC1B  65                 	db	101	;'e'
  5295  00EC1C  20                 	db	32
  5296  00EC1D  63                 	db	99	;'c'
  5297  00EC1E  61                 	db	97	;'a'
  5298  00EC1F  6C                 	db	108	;'l'
  5299  00EC20  63                 	db	99	;'c'
  5300  00EC21  75                 	db	117	;'u'
  5301  00EC22  6C                 	db	108	;'l'
  5302  00EC23  61                 	db	97	;'a'
  5303  00EC24  74                 	db	116	;'t'
  5304  00EC25  65                 	db	101	;'e'
  5305  00EC26  64                 	db	100	;'d'
  5306  00EC27  20                 	db	32
  5307  00EC28  52                 	db	82	;'R'
  5308  00EC29  4D                 	db	77	;'M'
  5309  00EC2A  53                 	db	83	;'S'
  5310  00EC2B  20                 	db	32
  5311  00EC2C  6F                 	db	111	;'o'
  5312  00EC2D  75                 	db	117	;'u'
  5313  00EC2E  74                 	db	116	;'t'
  5314  00EC2F  70                 	db	112	;'p'
  5315  00EC30  75                 	db	117	;'u'
  5316  00EC31  74                 	db	116	;'t'
  5317  00EC32  20                 	db	32
  5318  00EC33  76                 	db	118	;'v'
  5319  00EC34  6F                 	db	111	;'o'
  5320  00EC35  6C                 	db	108	;'l'
  5321  00EC36  74                 	db	116	;'t'
  5322  00EC37  61                 	db	97	;'a'
  5323  00EC38  67                 	db	103	;'g'
  5324  00EC39  65                 	db	101	;'e'
  5325  00EC3A  20                 	db	32
  5326  00EC3B  66                 	db	102	;'f'
  5327  00EC3C  72                 	db	114	;'r'
  5328  00EC3D  6F                 	db	111	;'o'
  5329  00EC3E  6D                 	db	109	;'m'
  5330  00EC3F  20                 	db	32
  5331  00EC40  54                 	db	84	;'T'
  5332  00EC41  52                 	db	82	;'R'
  5333  00EC42  49                 	db	73	;'I'
  5334  00EC43  41                 	db	65	;'A'
  5335  00EC44  43                 	db	67	;'C'
  5336  00EC45  20                 	db	32
  5337  00EC46  66                 	db	102	;'f'
  5338  00EC47  69                 	db	105	;'i'
  5339  00EC48  72                 	db	114	;'r'
  5340  00EC49  69                 	db	105	;'i'
  5341  00EC4A  6E                 	db	110	;'n'
  5342  00EC4B  67                 	db	103	;'g'
  5343  00EC4C  20                 	db	32
  5344  00EC4D  61                 	db	97	;'a'
  5345  00EC4E  6E                 	db	110	;'n'
  5346  00EC4F  67                 	db	103	;'g'
  5347  00EC50  6C                 	db	108	;'l'
  5348  00EC51  65                 	db	101	;'e'
  5349  00EC52  0A                 	db	10
  5350  00EC53  0D                 	db	13
  5351  00EC54  20                 	db	32
  5352  00EC55  20                 	db	32
  5353  00EC56  20                 	db	32
  5354  00EC57  4D                 	db	77	;'M'
  5355  00EC58  65                 	db	101	;'e'
  5356  00EC59  61                 	db	97	;'a'
  5357  00EC5A  73                 	db	115	;'s'
  5358  00EC5B  75                 	db	117	;'u'
  5359  00EC5C  72                 	db	114	;'r'
  5360  00EC5D  65                 	db	101	;'e'
  5361  00EC5E  20                 	db	32
  5362  00EC5F  50                 	db	80	;'P'
  5363  00EC60  6F                 	db	111	;'o'
  5364  00EC61  77                 	db	119	;'w'
  5365  00EC62  65                 	db	101	;'e'
  5366  00EC63  72                 	db	114	;'r'
  5367  00EC64  3F                 	db	63	;'?'
  5368  00EC65  3A                 	db	58	;':'
  5369  00EC66  20                 	db	32
  5370  00EC67  52                 	db	82	;'R'
  5371  00EC68  65                 	db	101	;'e'
  5372  00EC69  74                 	db	116	;'t'
  5373  00EC6A  75                 	db	117	;'u'
  5374  00EC6B  72                 	db	114	;'r'
  5375  00EC6C  6E                 	db	110	;'n'
  5376  00EC6D  73                 	db	115	;'s'
  5377  00EC6E  20                 	db	32
  5378  00EC6F  74                 	db	116	;'t'
  5379  00EC70  68                 	db	104	;'h'
  5380  00EC71  65                 	db	101	;'e'
  5381  00EC72  20                 	db	32
  5382  00EC73  63                 	db	99	;'c'
  5383  00EC74  61                 	db	97	;'a'
  5384  00EC75  6C                 	db	108	;'l'
  5385  00EC76  63                 	db	99	;'c'
  5386  00EC77  75                 	db	117	;'u'
  5387  00EC78  6C                 	db	108	;'l'
  5388  00EC79  61                 	db	97	;'a'
  5389  00EC7A  74                 	db	116	;'t'
  5390  00EC7B  65                 	db	101	;'e'
  5391  00EC7C  64                 	db	100	;'d'
  5392  00EC7D  20                 	db	32
  5393  00EC7E  6F                 	db	111	;'o'
  5394  00EC7F  75                 	db	117	;'u'
  5395  00EC80  74                 	db	116	;'t'
  5396  00EC81  70                 	db	112	;'p'
  5397  00EC82  75                 	db	117	;'u'
  5398  00EC83  74                 	db	116	;'t'
  5399  00EC84  20                 	db	32
  5400  00EC85  70                 	db	112	;'p'
  5401  00EC86  6F                 	db	111	;'o'
  5402  00EC87  77                 	db	119	;'w'
  5403  00EC88  65                 	db	101	;'e'
  5404  00EC89  72                 	db	114	;'r'
  5405  00EC8A  20                 	db	32
  5406  00EC8B  69                 	db	105	;'i'
  5407  00EC8C  6E                 	db	110	;'n'
  5408  00EC8D  20                 	db	32
  5409  00EC8E  57                 	db	87	;'W'
  5410  00EC8F  61                 	db	97	;'a'
  5411  00EC90  74                 	db	116	;'t'
  5412  00EC91  74                 	db	116	;'t'
  5413  00EC92  73                 	db	115	;'s'
  5414  00EC93  0A                 	db	10
  5415  00EC94  0D                 	db	13
  5416  00EC95  20                 	db	32
  5417  00EC96  20                 	db	32
  5418  00EC97  20                 	db	32
  5419  00EC98  4C                 	db	76	;'L'
  5420  00EC99  6F                 	db	111	;'o'
  5421  00EC9A  61                 	db	97	;'a'
  5422  00EC9B  64                 	db	100	;'d'
  5423  00EC9C  20                 	db	32
  5424  00EC9D  4F                 	db	79	;'O'
  5425  00EC9E  6E                 	db	110	;'n'
  5426  00EC9F  20                 	db	32
  5427  00ECA0  54                 	db	84	;'T'
  5428  00ECA1  69                 	db	105	;'i'
  5429  00ECA2  6D                 	db	109	;'m'
  5430  00ECA3  65                 	db	101	;'e'
  5431  00ECA4  3F                 	db	63	;'?'
  5432  00ECA5  3A                 	db	58	;':'
  5433  00ECA6  20                 	db	32
  5434  00ECA7  52                 	db	82	;'R'
  5435  00ECA8  65                 	db	101	;'e'
  5436  00ECA9  74                 	db	116	;'t'
  5437  00ECAA  75                 	db	117	;'u'
  5438  00ECAB  72                 	db	114	;'r'
  5439  00ECAC  6E                 	db	110	;'n'
  5440  00ECAD  73                 	db	115	;'s'
  5441  00ECAE  20                 	db	32
  5442  00ECAF  6C                 	db	108	;'l'
  5443  00ECB0  6F                 	db	111	;'o'
  5444  00ECB1  61                 	db	97	;'a'
  5445  00ECB2  64                 	db	100	;'d'
  5446  00ECB3  20                 	db	32
  5447  00ECB4  6F                 	db	111	;'o'
  5448  00ECB5  6E                 	db	110	;'n'
  5449  00ECB6  20                 	db	32
  5450  00ECB7  74                 	db	116	;'t'
  5451  00ECB8  69                 	db	105	;'i'
  5452  00ECB9  6D                 	db	109	;'m'
  5453  00ECBA  65                 	db	101	;'e'
  5454  00ECBB  20                 	db	32
  5455  00ECBC  73                 	db	115	;'s'
  5456  00ECBD  69                 	db	105	;'i'
  5457  00ECBE  6E                 	db	110	;'n'
  5458  00ECBF  63                 	db	99	;'c'
  5459  00ECC0  65                 	db	101	;'e'
  5460  00ECC1  20                 	db	32
  5461  00ECC2  6C                 	db	108	;'l'
  5462  00ECC3  61                 	db	97	;'a'
  5463  00ECC4  73                 	db	115	;'s'
  5464  00ECC5  74                 	db	116	;'t'
  5465  00ECC6  20                 	db	32
  5466  00ECC7  64                 	db	100	;'d'
  5467  00ECC8  65                 	db	101	;'e'
  5468  00ECC9  76                 	db	118	;'v'
  5469  00ECCA  69                 	db	105	;'i'
  5470  00ECCB  63                 	db	99	;'c'
  5471  00ECCC  65                 	db	101	;'e'
  5472  00ECCD  20                 	db	32
  5473  00ECCE  72                 	db	114	;'r'
  5474  00ECCF  65                 	db	101	;'e'
  5475  00ECD0  73                 	db	115	;'s'
  5476  00ECD1  65                 	db	101	;'e'
  5477  00ECD2  74                 	db	116	;'t'
  5478  00ECD3  20                 	db	32
  5479  00ECD4  69                 	db	105	;'i'
  5480  00ECD5  6E                 	db	110	;'n'
  5481  00ECD6  20                 	db	32
  5482  00ECD7  73                 	db	115	;'s'
  5483  00ECD8  65                 	db	101	;'e'
  5484  00ECD9  63                 	db	99	;'c'
  5485  00ECDA  6F                 	db	111	;'o'
  5486  00ECDB  6E                 	db	110	;'n'
  5487  00ECDC  64                 	db	100	;'d'
  5488  00ECDD  73                 	db	115	;'s'
  5489  00ECDE  0A                 	db	10
  5490  00ECDF  0D                 	db	13
  5491  00ECE0  20                 	db	32
  5492  00ECE1  20                 	db	32
  5493  00ECE2  20                 	db	32
  5494  00ECE3  4D                 	db	77	;'M'
  5495  00ECE4  61                 	db	97	;'a'
  5496  00ECE5  78                 	db	120	;'x'
  5497  00ECE6  20                 	db	32
  5498  00ECE7  52                 	db	82	;'R'
  5499  00ECE8  4D                 	db	77	;'M'
  5500  00ECE9  53                 	db	83	;'S'
  5501  00ECEA  20                 	db	32
  5502  00ECEB  43                 	db	67	;'C'
  5503  00ECEC  75                 	db	117	;'u'
  5504  00ECED  72                 	db	114	;'r'
  5505  00ECEE  72                 	db	114	;'r'
  5506  00ECEF  65                 	db	101	;'e'
  5507  00ECF0  6E                 	db	110	;'n'
  5508  00ECF1  74                 	db	116	;'t'
  5509  00ECF2  3F                 	db	63	;'?'
  5510  00ECF3  3A                 	db	58	;':'
  5511  00ECF4  20                 	db	32
  5512  00ECF5  50                 	db	80	;'P'
  5513  00ECF6  72                 	db	114	;'r'
  5514  00ECF7  69                 	db	105	;'i'
  5515  00ECF8  6E                 	db	110	;'n'
  5516  00ECF9  74                 	db	116	;'t'
  5517  00ECFA  73                 	db	115	;'s'
  5518  00ECFB  20                 	db	32
  5519  00ECFC  74                 	db	116	;'t'
  5520  00ECFD  68                 	db	104	;'h'
  5521  00ECFE  65                 	db	101	;'e'
  5522  00ECFF  20                 	db	32
  5523  00ED00  6D                 	db	109	;'m'
  5524  00ED01  61                 	db	97	;'a'
  5525  00ED02  78                 	db	120	;'x'
  5526  00ED03  69                 	db	105	;'i'
  5527  00ED04  6D                 	db	109	;'m'
  5528  00ED05  75                 	db	117	;'u'
  5529  00ED06  6D                 	db	109	;'m'
  5530  00ED07  20                 	db	32
  5531  00ED08  72                 	db	114	;'r'
  5532  00ED09  65                 	db	101	;'e'
  5533  00ED0A  63                 	db	99	;'c'
  5534  00ED0B  6F                 	db	111	;'o'
  5535  00ED0C  72                 	db	114	;'r'
  5536  00ED0D  64                 	db	100	;'d'
  5537  00ED0E  65                 	db	101	;'e'
  5538  00ED0F  64                 	db	100	;'d'
  5539  00ED10  20                 	db	32
  5540  00ED11  52                 	db	82	;'R'
  5541  00ED12  4D                 	db	77	;'M'
  5542  00ED13  53                 	db	83	;'S'
  5543  00ED14  20                 	db	32
  5544  00ED15  6F                 	db	111	;'o'
  5545  00ED16  75                 	db	117	;'u'
  5546  00ED17  74                 	db	116	;'t'
  5547  00ED18  70                 	db	112	;'p'
  5548  00ED19  75                 	db	117	;'u'
  5549  00ED1A  74                 	db	116	;'t'
  5550  00ED1B  20                 	db	32
  5551  00ED1C  63                 	db	99	;'c'
  5552  00ED1D  75                 	db	117	;'u'
  5553  00ED1E  72                 	db	114	;'r'
  5554  00ED1F  72                 	db	114	;'r'
  5555  00ED20  65                 	db	101	;'e'
  5556  00ED21  6E                 	db	110	;'n'
  5557  00ED22  74                 	db	116	;'t'
  5558  00ED23  0A                 	db	10
  5559  00ED24  0D                 	db	13
  5560  00ED25  20                 	db	32
  5561  00ED26  20                 	db	32
  5562  00ED27  20                 	db	32
  5563  00ED28  4D                 	db	77	;'M'
  5564  00ED29  61                 	db	97	;'a'
  5565  00ED2A  78                 	db	120	;'x'
  5566  00ED2B  20                 	db	32
  5567  00ED2C  50                 	db	80	;'P'
  5568  00ED2D  6F                 	db	111	;'o'
  5569  00ED2E  77                 	db	119	;'w'
  5570  00ED2F  65                 	db	101	;'e'
  5571  00ED30  72                 	db	114	;'r'
  5572  00ED31  3F                 	db	63	;'?'
  5573  00ED32  3A                 	db	58	;':'
  5574  00ED33  20                 	db	32
  5575  00ED34  50                 	db	80	;'P'
  5576  00ED35  72                 	db	114	;'r'
  5577  00ED36  69                 	db	105	;'i'
  5578  00ED37  6E                 	db	110	;'n'
  5579  00ED38  74                 	db	116	;'t'
  5580  00ED39  73                 	db	115	;'s'
  5581  00ED3A  20                 	db	32
  5582  00ED3B  74                 	db	116	;'t'
  5583  00ED3C  68                 	db	104	;'h'
  5584  00ED3D  65                 	db	101	;'e'
  5585  00ED3E  20                 	db	32
  5586  00ED3F  6D                 	db	109	;'m'
  5587  00ED40  61                 	db	97	;'a'
  5588  00ED41  78                 	db	120	;'x'
  5589  00ED42  69                 	db	105	;'i'
  5590  00ED43  6D                 	db	109	;'m'
  5591  00ED44  75                 	db	117	;'u'
  5592  00ED45  6D                 	db	109	;'m'
  5593  00ED46  20                 	db	32
  5594  00ED47  72                 	db	114	;'r'
  5595  00ED48  65                 	db	101	;'e'
  5596  00ED49  63                 	db	99	;'c'
  5597  00ED4A  6F                 	db	111	;'o'
  5598  00ED4B  72                 	db	114	;'r'
  5599  00ED4C  64                 	db	100	;'d'
  5600  00ED4D  65                 	db	101	;'e'
  5601  00ED4E  64                 	db	100	;'d'
  5602  00ED4F  20                 	db	32
  5603  00ED50  6F                 	db	111	;'o'
  5604  00ED51  75                 	db	117	;'u'
  5605  00ED52  74                 	db	116	;'t'
  5606  00ED53  70                 	db	112	;'p'
  5607  00ED54  75                 	db	117	;'u'
  5608  00ED55  74                 	db	116	;'t'
  5609  00ED56  20                 	db	32
  5610  00ED57  70                 	db	112	;'p'
  5611  00ED58  6F                 	db	111	;'o'
  5612  00ED59  77                 	db	119	;'w'
  5613  00ED5A  65                 	db	101	;'e'
  5614  00ED5B  72                 	db	114	;'r'
  5615  00ED5C  0A                 	db	10
  5616  00ED5D  0D                 	db	13
  5617  00ED5E  0A                 	db	10
  5618  00ED5F  0D                 	db	13
  5619  00ED60  00                 	db	0
  5620  00ED61                     STR_141:
  5621  00ED61  4C                 	db	76	;'L'
  5622  00ED62  69                 	db	105	;'i'
  5623  00ED63  73                 	db	115	;'s'
  5624  00ED64  74                 	db	116	;'t'
  5625  00ED65  20                 	db	32
  5626  00ED66  6F                 	db	111	;'o'
  5627  00ED67  66                 	db	102	;'f'
  5628  00ED68  20                 	db	32
  5629  00ED69  73                 	db	115	;'s'
  5630  00ED6A  75                 	db	117	;'u'
  5631  00ED6B  70                 	db	112	;'p'
  5632  00ED6C  70                 	db	112	;'p'
  5633  00ED6D  6F                 	db	111	;'o'
  5634  00ED6E  72                 	db	114	;'r'
  5635  00ED6F  74                 	db	116	;'t'
  5636  00ED70  65                 	db	101	;'e'
  5637  00ED71  64                 	db	100	;'d'
  5638  00ED72  20                 	db	32
  5639  00ED73  4F                 	db	79	;'O'
  5640  00ED74  75                 	db	117	;'u'
  5641  00ED75  74                 	db	116	;'t'
  5642  00ED76  70                 	db	112	;'p'
  5643  00ED77  75                 	db	117	;'u'
  5644  00ED78  74                 	db	116	;'t'
  5645  00ED79  20                 	db	32
  5646  00ED7A  43                 	db	67	;'C'
  5647  00ED7B  6F                 	db	111	;'o'
  5648  00ED7C  6E                 	db	110	;'n'
  5649  00ED7D  74                 	db	116	;'t'
  5650  00ED7E  72                 	db	114	;'r'
  5651  00ED7F  6F                 	db	111	;'o'
  5652  00ED80  6C                 	db	108	;'l'
  5653  00ED81  20                 	db	32
  5654  00ED82  43                 	db	67	;'C'
  5655  00ED83  6F                 	db	111	;'o'
  5656  00ED84  6D                 	db	109	;'m'
  5657  00ED85  6D                 	db	109	;'m'
  5658  00ED86  61                 	db	97	;'a'
  5659  00ED87  6E                 	db	110	;'n'
  5660  00ED88  64                 	db	100	;'d'
  5661  00ED89  73                 	db	115	;'s'
  5662  00ED8A  3A                 	db	58	;':'
  5663  00ED8B  0A                 	db	10
  5664  00ED8C  0D                 	db	13
  5665  00ED8D  20                 	db	32
  5666  00ED8E  20                 	db	32
  5667  00ED8F  20                 	db	32
  5668  00ED90  45                 	db	69	;'E'
  5669  00ED91  6E                 	db	110	;'n'
  5670  00ED92  61                 	db	97	;'a'
  5671  00ED93  62                 	db	98	;'b'
  5672  00ED94  6C                 	db	108	;'l'
  5673  00ED95  65                 	db	101	;'e'
  5674  00ED96  20                 	db	32
  5675  00ED97  44                 	db	68	;'D'
  5676  00ED98  69                 	db	105	;'i'
  5677  00ED99  6D                 	db	109	;'m'
  5678  00ED9A  6D                 	db	109	;'m'
  5679  00ED9B  69                 	db	105	;'i'
  5680  00ED9C  6E                 	db	110	;'n'
  5681  00ED9D  67                 	db	103	;'g'
  5682  00ED9E  3A                 	db	58	;':'
  5683  00ED9F  20                 	db	32
  5684  00EDA0  45                 	db	69	;'E'
  5685  00EDA1  6E                 	db	110	;'n'
  5686  00EDA2  61                 	db	97	;'a'
  5687  00EDA3  62                 	db	98	;'b'
  5688  00EDA4  6C                 	db	108	;'l'
  5689  00EDA5  65                 	db	101	;'e'
  5690  00EDA6  20                 	db	32
  5691  00EDA7  54                 	db	84	;'T'
  5692  00EDA8  52                 	db	82	;'R'
  5693  00EDA9  49                 	db	73	;'I'
  5694  00EDAA  41                 	db	65	;'A'
  5695  00EDAB  43                 	db	67	;'C'
  5696  00EDAC  20                 	db	32
  5697  00EDAD  6F                 	db	111	;'o'
  5698  00EDAE  75                 	db	117	;'u'
  5699  00EDAF  74                 	db	116	;'t'
  5700  00EDB0  70                 	db	112	;'p'
  5701  00EDB1  75                 	db	117	;'u'
  5702  00EDB2  74                 	db	116	;'t'
  5703  00EDB3  20                 	db	32
  5704  00EDB4  64                 	db	100	;'d'
  5705  00EDB5  69                 	db	105	;'i'
  5706  00EDB6  6D                 	db	109	;'m'
  5707  00EDB7  6D                 	db	109	;'m'
  5708  00EDB8  69                 	db	105	;'i'
  5709  00EDB9  6E                 	db	110	;'n'
  5710  00EDBA  67                 	db	103	;'g'
  5711  00EDBB  0A                 	db	10
  5712  00EDBC  0D                 	db	13
  5713  00EDBD  20                 	db	32
  5714  00EDBE  20                 	db	32
  5715  00EDBF  20                 	db	32
  5716  00EDC0  44                 	db	68	;'D'
  5717  00EDC1  69                 	db	105	;'i'
  5718  00EDC2  73                 	db	115	;'s'
  5719  00EDC3  61                 	db	97	;'a'
  5720  00EDC4  62                 	db	98	;'b'
  5721  00EDC5  6C                 	db	108	;'l'
  5722  00EDC6  65                 	db	101	;'e'
  5723  00EDC7  20                 	db	32
  5724  00EDC8  44                 	db	68	;'D'
  5725  00EDC9  69                 	db	105	;'i'
  5726  00EDCA  6D                 	db	109	;'m'
  5727  00EDCB  6D                 	db	109	;'m'
  5728  00EDCC  69                 	db	105	;'i'
  5729  00EDCD  6E                 	db	110	;'n'
  5730  00EDCE  67                 	db	103	;'g'
  5731  00EDCF  3A                 	db	58	;':'
  5732  00EDD0  20                 	db	32
  5733  00EDD1  44                 	db	68	;'D'
  5734  00EDD2  69                 	db	105	;'i'
  5735  00EDD3  73                 	db	115	;'s'
  5736  00EDD4  61                 	db	97	;'a'
  5737  00EDD5  62                 	db	98	;'b'
  5738  00EDD6  6C                 	db	108	;'l'
  5739  00EDD7  65                 	db	101	;'e'
  5740  00EDD8  20                 	db	32
  5741  00EDD9  54                 	db	84	;'T'
  5742  00EDDA  52                 	db	82	;'R'
  5743  00EDDB  49                 	db	73	;'I'
  5744  00EDDC  41                 	db	65	;'A'
  5745  00EDDD  43                 	db	67	;'C'
  5746  00EDDE  20                 	db	32
  5747  00EDDF  6F                 	db	111	;'o'
  5748  00EDE0  75                 	db	117	;'u'
  5749  00EDE1  74                 	db	116	;'t'
  5750  00EDE2  70                 	db	112	;'p'
  5751  00EDE3  75                 	db	117	;'u'
  5752  00EDE4  74                 	db	116	;'t'
  5753  00EDE5  20                 	db	32
  5754  00EDE6  64                 	db	100	;'d'
  5755  00EDE7  69                 	db	105	;'i'
  5756  00EDE8  6D                 	db	109	;'m'
  5757  00EDE9  6D                 	db	109	;'m'
  5758  00EDEA  69                 	db	105	;'i'
  5759  00EDEB  6E                 	db	110	;'n'
  5760  00EDEC  67                 	db	103	;'g'
  5761  00EDED  0A                 	db	10
  5762  00EDEE  0D                 	db	13
  5763  00EDEF  20                 	db	32
  5764  00EDF0  20                 	db	32
  5765  00EDF1  20                 	db	32
  5766  00EDF2  45                 	db	69	;'E'
  5767  00EDF3  6E                 	db	110	;'n'
  5768  00EDF4  61                 	db	97	;'a'
  5769  00EDF5  62                 	db	98	;'b'
  5770  00EDF6  6C                 	db	108	;'l'
  5771  00EDF7  65                 	db	101	;'e'
  5772  00EDF8  20                 	db	32
  5773  00EDF9  4C                 	db	76	;'L'
  5774  00EDFA  6F                 	db	111	;'o'
  5775  00EDFB  61                 	db	97	;'a'
  5776  00EDFC  64                 	db	100	;'d'
  5777  00EDFD  3A                 	db	58	;':'
  5778  00EDFE  20                 	db	32
  5779  00EDFF  45                 	db	69	;'E'
  5780  00EE00  6E                 	db	110	;'n'
  5781  00EE01  61                 	db	97	;'a'
  5782  00EE02  62                 	db	98	;'b'
  5783  00EE03  6C                 	db	108	;'l'
  5784  00EE04  65                 	db	101	;'e'
  5785  00EE05  73                 	db	115	;'s'
  5786  00EE06  20                 	db	32
  5787  00EE07  74                 	db	116	;'t'
  5788  00EE08  68                 	db	104	;'h'
  5789  00EE09  65                 	db	101	;'e'
  5790  00EE0A  20                 	db	32
  5791  00EE0B  6F                 	db	111	;'o'
  5792  00EE0C  75                 	db	117	;'u'
  5793  00EE0D  74                 	db	116	;'t'
  5794  00EE0E  70                 	db	112	;'p'
  5795  00EE0F  75                 	db	117	;'u'
  5796  00EE10  74                 	db	116	;'t'
  5797  00EE11  20                 	db	32
  5798  00EE12  54                 	db	84	;'T'
  5799  00EE13  52                 	db	82	;'R'
  5800  00EE14  49                 	db	73	;'I'
  5801  00EE15  41                 	db	65	;'A'
  5802  00EE16  43                 	db	67	;'C'
  5803  00EE17  20                 	db	32
  5804  00EE18  77                 	db	119	;'w'
  5805  00EE19  69                 	db	105	;'i'
  5806  00EE1A  74                 	db	116	;'t'
  5807  00EE1B  68                 	db	104	;'h'
  5808  00EE1C  20                 	db	32
  5809  00EE1D  64                 	db	100	;'d'
  5810  00EE1E  69                 	db	105	;'i'
  5811  00EE1F  6D                 	db	109	;'m'
  5812  00EE20  6D                 	db	109	;'m'
  5813  00EE21  69                 	db	105	;'i'
  5814  00EE22  6E                 	db	110	;'n'
  5815  00EE23  67                 	db	103	;'g'
  5816  00EE24  20                 	db	32
  5817  00EE25  64                 	db	100	;'d'
  5818  00EE26  69                 	db	105	;'i'
  5819  00EE27  73                 	db	115	;'s'
  5820  00EE28  61                 	db	97	;'a'
  5821  00EE29  62                 	db	98	;'b'
  5822  00EE2A  6C                 	db	108	;'l'
  5823  00EE2B  65                 	db	101	;'e'
  5824  00EE2C  64                 	db	100	;'d'
  5825  00EE2D  0A                 	db	10
  5826  00EE2E  0D                 	db	13
  5827  00EE2F  20                 	db	32
  5828  00EE30  20                 	db	32
  5829  00EE31  20                 	db	32
  5830  00EE32  44                 	db	68	;'D'
  5831  00EE33  69                 	db	105	;'i'
  5832  00EE34  73                 	db	115	;'s'
  5833  00EE35  61                 	db	97	;'a'
  5834  00EE36  62                 	db	98	;'b'
  5835  00EE37  6C                 	db	108	;'l'
  5836  00EE38  65                 	db	101	;'e'
  5837  00EE39  20                 	db	32
  5838  00EE3A  4C                 	db	76	;'L'
  5839  00EE3B  6F                 	db	111	;'o'
  5840  00EE3C  61                 	db	97	;'a'
  5841  00EE3D  64                 	db	100	;'d'
  5842  00EE3E  3A                 	db	58	;':'
  5843  00EE3F  20                 	db	32
  5844  00EE40  44                 	db	68	;'D'
  5845  00EE41  69                 	db	105	;'i'
  5846  00EE42  73                 	db	115	;'s'
  5847  00EE43  61                 	db	97	;'a'
  5848  00EE44  62                 	db	98	;'b'
  5849  00EE45  6C                 	db	108	;'l'
  5850  00EE46  65                 	db	101	;'e'
  5851  00EE47  73                 	db	115	;'s'
  5852  00EE48  20                 	db	32
  5853  00EE49  74                 	db	116	;'t'
  5854  00EE4A  68                 	db	104	;'h'
  5855  00EE4B  65                 	db	101	;'e'
  5856  00EE4C  20                 	db	32
  5857  00EE4D  6F                 	db	111	;'o'
  5858  00EE4E  75                 	db	117	;'u'
  5859  00EE4F  74                 	db	116	;'t'
  5860  00EE50  70                 	db	112	;'p'
  5861  00EE51  75                 	db	117	;'u'
  5862  00EE52  74                 	db	116	;'t'
  5863  00EE53  20                 	db	32
  5864  00EE54  54                 	db	84	;'T'
  5865  00EE55  52                 	db	82	;'R'
  5866  00EE56  49                 	db	73	;'I'
  5867  00EE57  41                 	db	65	;'A'
  5868  00EE58  43                 	db	67	;'C'
  5869  00EE59  20                 	db	32
  5870  00EE5A  63                 	db	99	;'c'
  5871  00EE5B  6F                 	db	111	;'o'
  5872  00EE5C  6D                 	db	109	;'m'
  5873  00EE5D  70                 	db	112	;'p'
  5874  00EE5E  6C                 	db	108	;'l'
  5875  00EE5F  65                 	db	101	;'e'
  5876  00EE60  74                 	db	116	;'t'
  5877  00EE61  65                 	db	101	;'e'
  5878  00EE62  6C                 	db	108	;'l'
  5879  00EE63  79                 	db	121	;'y'
  5880  00EE64  0A                 	db	10
  5881  00EE65  0D                 	db	13
  5882  00EE66  20                 	db	32
  5883  00EE67  20                 	db	32
  5884  00EE68  20                 	db	32
  5885  00EE69  4C                 	db	76	;'L'
  5886  00EE6A  6F                 	db	111	;'o'
  5887  00EE6B  61                 	db	97	;'a'
  5888  00EE6C  64                 	db	100	;'d'
  5889  00EE6D  20                 	db	32
  5890  00EE6E  45                 	db	69	;'E'
  5891  00EE6F  6E                 	db	110	;'n'
  5892  00EE70  61                 	db	97	;'a'
  5893  00EE71  62                 	db	98	;'b'
  5894  00EE72  6C                 	db	108	;'l'
  5895  00EE73  65                 	db	101	;'e'
  5896  00EE74  64                 	db	100	;'d'
  5897  00EE75  3F                 	db	63	;'?'
  5898  00EE76  3A                 	db	58	;':'
  5899  00EE77  20                 	db	32
  5900  00EE78  52                 	db	82	;'R'
  5901  00EE79  65                 	db	101	;'e'
  5902  00EE7A  74                 	db	116	;'t'
  5903  00EE7B  75                 	db	117	;'u'
  5904  00EE7C  72                 	db	114	;'r'
  5905  00EE7D  6E                 	db	110	;'n'
  5906  00EE7E  73                 	db	115	;'s'
  5907  00EE7F  20                 	db	32
  5908  00EE80  69                 	db	105	;'i'
  5909  00EE81  66                 	db	102	;'f'
  5910  00EE82  20                 	db	32
  5911  00EE83  74                 	db	116	;'t'
  5912  00EE84  68                 	db	104	;'h'
  5913  00EE85  65                 	db	101	;'e'
  5914  00EE86  20                 	db	32
  5915  00EE87  6F                 	db	111	;'o'
  5916  00EE88  75                 	db	117	;'u'
  5917  00EE89  74                 	db	116	;'t'
  5918  00EE8A  70                 	db	112	;'p'
  5919  00EE8B  75                 	db	117	;'u'
  5920  00EE8C  74                 	db	116	;'t'
  5921  00EE8D  20                 	db	32
  5922  00EE8E  6C                 	db	108	;'l'
  5923  00EE8F  6F                 	db	111	;'o'
  5924  00EE90  61                 	db	97	;'a'
  5925  00EE91  64                 	db	100	;'d'
  5926  00EE92  20                 	db	32
  5927  00EE93  69                 	db	105	;'i'
  5928  00EE94  73                 	db	115	;'s'
  5929  00EE95  20                 	db	32
  5930  00EE96  65                 	db	101	;'e'
  5931  00EE97  6E                 	db	110	;'n'
  5932  00EE98  61                 	db	97	;'a'
  5933  00EE99  62                 	db	98	;'b'
  5934  00EE9A  6C                 	db	108	;'l'
  5935  00EE9B  65                 	db	101	;'e'
  5936  00EE9C  64                 	db	100	;'d'
  5937  00EE9D  20                 	db	32
  5938  00EE9E  6F                 	db	111	;'o'
  5939  00EE9F  72                 	db	114	;'r'
  5940  00EEA0  20                 	db	32
  5941  00EEA1  64                 	db	100	;'d'
  5942  00EEA2  69                 	db	105	;'i'
  5943  00EEA3  73                 	db	115	;'s'
  5944  00EEA4  61                 	db	97	;'a'
  5945  00EEA5  62                 	db	98	;'b'
  5946  00EEA6  6C                 	db	108	;'l'
  5947  00EEA7  65                 	db	101	;'e'
  5948  00EEA8  64                 	db	100	;'d'
  5949  00EEA9  0A                 	db	10
  5950  00EEAA  0D                 	db	13
  5951  00EEAB  20                 	db	32
  5952  00EEAC  20                 	db	32
  5953  00EEAD  20                 	db	32
  5954  00EEAE  44                 	db	68	;'D'
  5955  00EEAF  69                 	db	105	;'i'
  5956  00EEB0  6D                 	db	109	;'m'
  5957  00EEB1  6D                 	db	109	;'m'
  5958  00EEB2  69                 	db	105	;'i'
  5959  00EEB3  6E                 	db	110	;'n'
  5960  00EEB4  67                 	db	103	;'g'
  5961  00EEB5  20                 	db	32
  5962  00EEB6  45                 	db	69	;'E'
  5963  00EEB7  6E                 	db	110	;'n'
  5964  00EEB8  61                 	db	97	;'a'
  5965  00EEB9  62                 	db	98	;'b'
  5966  00EEBA  6C                 	db	108	;'l'
  5967  00EEBB  65                 	db	101	;'e'
  5968  00EEBC  64                 	db	100	;'d'
  5969  00EEBD  3F                 	db	63	;'?'
  5970  00EEBE  3A                 	db	58	;':'
  5971  00EEBF  20                 	db	32
  5972  00EEC0  52                 	db	82	;'R'
  5973  00EEC1  65                 	db	101	;'e'
  5974  00EEC2  74                 	db	116	;'t'
  5975  00EEC3  75                 	db	117	;'u'
  5976  00EEC4  72                 	db	114	;'r'
  5977  00EEC5  6E                 	db	110	;'n'
  5978  00EEC6  73                 	db	115	;'s'
  5979  00EEC7  20                 	db	32
  5980  00EEC8  69                 	db	105	;'i'
  5981  00EEC9  66                 	db	102	;'f'
  5982  00EECA  20                 	db	32
  5983  00EECB  64                 	db	100	;'d'
  5984  00EECC  69                 	db	105	;'i'
  5985  00EECD  6D                 	db	109	;'m'
  5986  00EECE  6D                 	db	109	;'m'
  5987  00EECF  69                 	db	105	;'i'
  5988  00EED0  6E                 	db	110	;'n'
  5989  00EED1  67                 	db	103	;'g'
  5990  00EED2  20                 	db	32
  5991  00EED3  6F                 	db	111	;'o'
  5992  00EED4  66                 	db	102	;'f'
  5993  00EED5  20                 	db	32
  5994  00EED6  74                 	db	116	;'t'
  5995  00EED7  68                 	db	104	;'h'
  5996  00EED8  65                 	db	101	;'e'
  5997  00EED9  20                 	db	32
  5998  00EEDA  6F                 	db	111	;'o'
  5999  00EEDB  75                 	db	117	;'u'
  6000  00EEDC  74                 	db	116	;'t'
  6001  00EEDD  70                 	db	112	;'p'
  6002  00EEDE  75                 	db	117	;'u'
  6003  00EEDF  74                 	db	116	;'t'
  6004  00EEE0  20                 	db	32
  6005  00EEE1  6C                 	db	108	;'l'
  6006  00EEE2  6F                 	db	111	;'o'
  6007  00EEE3  61                 	db	97	;'a'
  6008  00EEE4  64                 	db	100	;'d'
  6009  00EEE5  20                 	db	32
  6010  00EEE6  69                 	db	105	;'i'
  6011  00EEE7  73                 	db	115	;'s'
  6012  00EEE8  20                 	db	32
  6013  00EEE9  65                 	db	101	;'e'
  6014  00EEEA  6E                 	db	110	;'n'
  6015  00EEEB  61                 	db	97	;'a'
  6016  00EEEC  62                 	db	98	;'b'
  6017  00EEED  6C                 	db	108	;'l'
  6018  00EEEE  65                 	db	101	;'e'
  6019  00EEEF  64                 	db	100	;'d'
  6020  00EEF0  20                 	db	32
  6021  00EEF1  6F                 	db	111	;'o'
  6022  00EEF2  72                 	db	114	;'r'
  6023  00EEF3  20                 	db	32
  6024  00EEF4  6E                 	db	110	;'n'
  6025  00EEF5  6F                 	db	111	;'o'
  6026  00EEF6  74                 	db	116	;'t'
  6027  00EEF7  0A                 	db	10
  6028  00EEF8  0D                 	db	13
  6029  00EEF9  20                 	db	32
  6030  00EEFA  20                 	db	32
  6031  00EEFB  20                 	db	32
  6032  00EEFC  53                 	db	83	;'S'
  6033  00EEFD  65                 	db	101	;'e'
  6034  00EEFE  74                 	db	116	;'t'
  6035  00EEFF  20                 	db	32
  6036  00EF00  44                 	db	68	;'D'
  6037  00EF01  69                 	db	105	;'i'
  6038  00EF02  6D                 	db	109	;'m'
  6039  00EF03  6D                 	db	109	;'m'
  6040  00EF04  69                 	db	105	;'i'
  6041  00EF05  6E                 	db	110	;'n'
  6042  00EF06  67                 	db	103	;'g'
  6043  00EF07  20                 	db	32
  6044  00EF08  50                 	db	80	;'P'
  6045  00EF09  65                 	db	101	;'e'
  6046  00EF0A  72                 	db	114	;'r'
  6047  00EF0B  63                 	db	99	;'c'
  6048  00EF0C  65                 	db	101	;'e'
  6049  00EF0D  6E                 	db	110	;'n'
  6050  00EF0E  74                 	db	116	;'t'
  6051  00EF0F  61                 	db	97	;'a'
  6052  00EF10  67                 	db	103	;'g'
  6053  00EF11  65                 	db	101	;'e'
  6054  00EF12  3A                 	db	58	;':'
  6055  00EF13  20                 	db	32
  6056  00EF14  3C                 	db	60	;'<'
  6057  00EF15  78                 	db	120	;'x'
  6058  00EF16  3E                 	db	62	;'>'
  6059  00EF17  3A                 	db	58	;':'
  6060  00EF18  20                 	db	32
  6061  00EF19  53                 	db	83	;'S'
  6062  00EF1A  65                 	db	101	;'e'
  6063  00EF1B  74                 	db	116	;'t'
  6064  00EF1C  73                 	db	115	;'s'
  6065  00EF1D  20                 	db	32
  6066  00EF1E  74                 	db	116	;'t'
  6067  00EF1F  68                 	db	104	;'h'
  6068  00EF20  65                 	db	101	;'e'
  6069  00EF21  20                 	db	32
  6070  00EF22  6F                 	db	111	;'o'
  6071  00EF23  75                 	db	117	;'u'
  6072  00EF24  74                 	db	116	;'t'
  6073  00EF25  70                 	db	112	;'p'
  6074  00EF26  75                 	db	117	;'u'
  6075  00EF27  74                 	db	116	;'t'
  6076  00EF28  20                 	db	32
  6077  00EF29  64                 	db	100	;'d'
  6078  00EF2A  69                 	db	105	;'i'
  6079  00EF2B  6D                 	db	109	;'m'
  6080  00EF2C  6D                 	db	109	;'m'
  6081  00EF2D  69                 	db	105	;'i'
  6082  00EF2E  6E                 	db	110	;'n'
  6083  00EF2F  67                 	db	103	;'g'
  6084  00EF30  20                 	db	32
  6085  00EF31  70                 	db	112	;'p'
  6086  00EF32  65                 	db	101	;'e'
  6087  00EF33  72                 	db	114	;'r'
  6088  00EF34  63                 	db	99	;'c'
  6089  00EF35  65                 	db	101	;'e'
  6090  00EF36  6E                 	db	110	;'n'
  6091  00EF37  74                 	db	116	;'t'
  6092  00EF38  61                 	db	97	;'a'
  6093  00EF39  67                 	db	103	;'g'
  6094  00EF3A  65                 	db	101	;'e'
  6095  00EF3B  20                 	db	32
  6096  00EF3C  61                 	db	97	;'a'
  6097  00EF3D  73                 	db	115	;'s'
  6098  00EF3E  20                 	db	32
  6099  00EF3F  78                 	db	120	;'x'
  6100  00EF40  20                 	db	32
  6101  00EF41  70                 	db	112	;'p'
  6102  00EF42  65                 	db	101	;'e'
  6103  00EF43  72                 	db	114	;'r'
  6104  00EF44  63                 	db	99	;'c'
  6105  00EF45  65                 	db	101	;'e'
  6106  00EF46  6E                 	db	110	;'n'
  6107  00EF47  74                 	db	116	;'t'
  6108  00EF48  0A                 	db	10
  6109  00EF49  0D                 	db	13
  6110  00EF4A  0A                 	db	10
  6111  00EF4B  0D                 	db	13
  6112  00EF4C  00                 	db	0
  6113  00EF4D                     STR_145:
  6114  00EF4D  50                 	db	80	;'P'
  6115  00EF4E  6C                 	db	108	;'l'
  6116  00EF4F  65                 	db	101	;'e'
  6117  00EF50  61                 	db	97	;'a'
  6118  00EF51  73                 	db	115	;'s'
  6119  00EF52  65                 	db	101	;'e'
  6120  00EF53  20                 	db	32
  6121  00EF54  73                 	db	115	;'s'
  6122  00EF55  70                 	db	112	;'p'
  6123  00EF56  65                 	db	101	;'e'
  6124  00EF57  63                 	db	99	;'c'
  6125  00EF58  69                 	db	105	;'i'
  6126  00EF59  66                 	db	102	;'f'
  6127  00EF5A  79                 	db	121	;'y'
  6128  00EF5B  20                 	db	32
  6129  00EF5C  77                 	db	119	;'w'
  6130  00EF5D  68                 	db	104	;'h'
  6131  00EF5E  61                 	db	97	;'a'
  6132  00EF5F  74                 	db	116	;'t'
  6133  00EF60  20                 	db	32
  6134  00EF61  74                 	db	116	;'t'
  6135  00EF62  79                 	db	121	;'y'
  6136  00EF63  70                 	db	112	;'p'
  6137  00EF64  65                 	db	101	;'e'
  6138  00EF65  20                 	db	32
  6139  00EF66  6F                 	db	111	;'o'
  6140  00EF67  66                 	db	102	;'f'
  6141  00EF68  20                 	db	32
  6142  00EF69  63                 	db	99	;'c'
  6143  00EF6A  6F                 	db	111	;'o'
  6144  00EF6B  6D                 	db	109	;'m'
  6145  00EF6C  6D                 	db	109	;'m'
  6146  00EF6D  61                 	db	97	;'a'
  6147  00EF6E  6E                 	db	110	;'n'
  6148  00EF6F  64                 	db	100	;'d'
  6149  00EF70  73                 	db	115	;'s'
  6150  00EF71  20                 	db	32
  6151  00EF72  79                 	db	121	;'y'
  6152  00EF73  6F                 	db	111	;'o'
  6153  00EF74  75                 	db	117	;'u'
  6154  00EF75  27                 	db	39
  6155  00EF76  64                 	db	100	;'d'
  6156  00EF77  20                 	db	32
  6157  00EF78  6C                 	db	108	;'l'
  6158  00EF79  69                 	db	105	;'i'
  6159  00EF7A  6B                 	db	107	;'k'
  6160  00EF7B  65                 	db	101	;'e'
  6161  00EF7C  20                 	db	32
  6162  00EF7D  68                 	db	104	;'h'
  6163  00EF7E  65                 	db	101	;'e'
  6164  00EF7F  6C                 	db	108	;'l'
  6165  00EF80  70                 	db	112	;'p'
  6166  00EF81  20                 	db	32
  6167  00EF82  77                 	db	119	;'w'
  6168  00EF83  69                 	db	105	;'i'
  6169  00EF84  74                 	db	116	;'t'
  6170  00EF85  68                 	db	104	;'h'
  6171  00EF86  3A                 	db	58	;':'
  6172  00EF87  0A                 	db	10
  6173  00EF88  0D                 	db	13
  6174  00EF89  54                 	db	84	;'T'
  6175  00EF8A  72                 	db	114	;'r'
  6176  00EF8B  79                 	db	121	;'y'
  6177  00EF8C  20                 	db	32
  6178  00EF8D  27                 	db	39
  6179  00EF8E  48                 	db	72	;'H'
  6180  00EF8F  65                 	db	101	;'e'
  6181  00EF90  6C                 	db	108	;'l'
  6182  00EF91  70                 	db	112	;'p'
  6183  00EF92  20                 	db	32
  6184  00EF93  3C                 	db	60	;'<'
  6185  00EF94  63                 	db	99	;'c'
  6186  00EF95  6F                 	db	111	;'o'
  6187  00EF96  6D                 	db	109	;'m'
  6188  00EF97  6D                 	db	109	;'m'
  6189  00EF98  61                 	db	97	;'a'
  6190  00EF99  6E                 	db	110	;'n'
  6191  00EF9A  64                 	db	100	;'d'
  6192  00EF9B  20                 	db	32
  6193  00EF9C  73                 	db	115	;'s'
  6194  00EF9D  65                 	db	101	;'e'
  6195  00EF9E  74                 	db	116	;'t'
  6196  00EF9F  3E                 	db	62	;'>'
  6197  00EFA0  27                 	db	39
  6198  00EFA1  0A                 	db	10
  6199  00EFA2  0D                 	db	13
  6200  00EFA3  0A                 	db	10
  6201  00EFA4  0D                 	db	13
  6202  00EFA5  53                 	db	83	;'S'
  6203  00EFA6  75                 	db	117	;'u'
  6204  00EFA7  70                 	db	112	;'p'
  6205  00EFA8  70                 	db	112	;'p'
  6206  00EFA9  6F                 	db	111	;'o'
  6207  00EFAA  72                 	db	114	;'r'
  6208  00EFAB  74                 	db	116	;'t'
  6209  00EFAC  65                 	db	101	;'e'
  6210  00EFAD  64                 	db	100	;'d'
  6211  00EFAE  20                 	db	32
  6212  00EFAF  43                 	db	67	;'C'
  6213  00EFB0  6F                 	db	111	;'o'
  6214  00EFB1  6D                 	db	109	;'m'
  6215  00EFB2  6D                 	db	109	;'m'
  6216  00EFB3  61                 	db	97	;'a'
  6217  00EFB4  6E                 	db	110	;'n'
  6218  00EFB5  64                 	db	100	;'d'
  6219  00EFB6  20                 	db	32
  6220  00EFB7  53                 	db	83	;'S'
  6221  00EFB8  65                 	db	101	;'e'
  6222  00EFB9  74                 	db	116	;'t'
  6223  00EFBA  73                 	db	115	;'s'
  6224  00EFBB  3A                 	db	58	;':'
  6225  00EFBC  0A                 	db	10
  6226  00EFBD  0D                 	db	13
  6227  00EFBE  20                 	db	32
  6228  00EFBF  20                 	db	32
  6229  00EFC0  20                 	db	32
  6230  00EFC1  44                 	db	68	;'D'
  6231  00EFC2  65                 	db	101	;'e'
  6232  00EFC3  76                 	db	118	;'v'
  6233  00EFC4  69                 	db	105	;'i'
  6234  00EFC5  63                 	db	99	;'c'
  6235  00EFC6  65                 	db	101	;'e'
  6236  00EFC7  20                 	db	32
  6237  00EFC8  43                 	db	67	;'C'
  6238  00EFC9  6F                 	db	111	;'o'
  6239  00EFCA  6E                 	db	110	;'n'
  6240  00EFCB  74                 	db	116	;'t'
  6241  00EFCC  72                 	db	114	;'r'
  6242  00EFCD  6F                 	db	111	;'o'
  6243  00EFCE  6C                 	db	108	;'l'
  6244  00EFCF  20                 	db	32
  6245  00EFD0  43                 	db	67	;'C'
  6246  00EFD1  6F                 	db	111	;'o'
  6247  00EFD2  6D                 	db	109	;'m'
  6248  00EFD3  6D                 	db	109	;'m'
  6249  00EFD4  61                 	db	97	;'a'
  6250  00EFD5  6E                 	db	110	;'n'
  6251  00EFD6  64                 	db	100	;'d'
  6252  00EFD7  73                 	db	115	;'s'
  6253  00EFD8  3A                 	db	58	;':'
  6254  00EFD9  20                 	db	32
  6255  00EFDA  43                 	db	67	;'C'
  6256  00EFDB  6F                 	db	111	;'o'
  6257  00EFDC  6D                 	db	109	;'m'
  6258  00EFDD  6D                 	db	109	;'m'
  6259  00EFDE  61                 	db	97	;'a'
  6260  00EFDF  6E                 	db	110	;'n'
  6261  00EFE0  64                 	db	100	;'d'
  6262  00EFE1  73                 	db	115	;'s'
  6263  00EFE2  20                 	db	32
  6264  00EFE3  74                 	db	116	;'t'
  6265  00EFE4  6F                 	db	111	;'o'
  6266  00EFE5  20                 	db	32
  6267  00EFE6  76                 	db	118	;'v'
  6268  00EFE7  69                 	db	105	;'i'
  6269  00EFE8  65                 	db	101	;'e'
  6270  00EFE9  77                 	db	119	;'w'
  6271  00EFEA  20                 	db	32
  6272  00EFEB  61                 	db	97	;'a'
  6273  00EFEC  6E                 	db	110	;'n'
  6274  00EFED  64                 	db	100	;'d'
  6275  00EFEE  20                 	db	32
  6276  00EFEF  63                 	db	99	;'c'
  6277  00EFF0  6F                 	db	111	;'o'
  6278  00EFF1  6E                 	db	110	;'n'
  6279  00EFF2  74                 	db	116	;'t'
  6280  00EFF3  72                 	db	114	;'r'
  6281  00EFF4  6F                 	db	111	;'o'
  6282  00EFF5  6C                 	db	108	;'l'
  6283  00EFF6  20                 	db	32
  6284  00EFF7  6C                 	db	108	;'l'
  6285  00EFF8  6F                 	db	111	;'o'
  6286  00EFF9  77                 	db	119	;'w'
  6287  00EFFA  20                 	db	32
  6288  00EFFB  6C                 	db	108	;'l'
  6289  00EFFC  65                 	db	101	;'e'
  6290  00EFFD  76                 	db	118	;'v'
  6291  00EFFE  65                 	db	101	;'e'
  6292  00EFFF  6C                 	db	108	;'l'
  6293  00F000  20                 	db	32
  6294  00F001  73                 	db	115	;'s'
  6295  00F002  79                 	db	121	;'y'
  6296  00F003  73                 	db	115	;'s'
  6297  00F004  74                 	db	116	;'t'
  6298  00F005  65                 	db	101	;'e'
  6299  00F006  6D                 	db	109	;'m'
  6300  00F007  20                 	db	32
  6301  00F008  66                 	db	102	;'f'
  6302  00F009  75                 	db	117	;'u'
  6303  00F00A  6E                 	db	110	;'n'
  6304  00F00B  63                 	db	99	;'c'
  6305  00F00C  74                 	db	116	;'t'
  6306  00F00D  69                 	db	105	;'i'
  6307  00F00E  6F                 	db	111	;'o'
  6308  00F00F  6E                 	db	110	;'n'
  6309  00F010  61                 	db	97	;'a'
  6310  00F011  6C                 	db	108	;'l'
  6311  00F012  69                 	db	105	;'i'
  6312  00F013  74                 	db	116	;'t'
  6313  00F014  79                 	db	121	;'y'
  6314  00F015  0A                 	db	10
  6315  00F016  0D                 	db	13
  6316  00F017  20                 	db	32
  6317  00F018  20                 	db	32
  6318  00F019  20                 	db	32
  6319  00F01A  44                 	db	68	;'D'
  6320  00F01B  65                 	db	101	;'e'
  6321  00F01C  76                 	db	118	;'v'
  6322  00F01D  69                 	db	105	;'i'
  6323  00F01E  63                 	db	99	;'c'
  6324  00F01F  65                 	db	101	;'e'
  6325  00F020  20                 	db	32
  6326  00F021  4D                 	db	77	;'M'
  6327  00F022  65                 	db	101	;'e'
  6328  00F023  61                 	db	97	;'a'
  6329  00F024  73                 	db	115	;'s'
  6330  00F025  75                 	db	117	;'u'
  6331  00F026  72                 	db	114	;'r'
  6332  00F027  65                 	db	101	;'e'
  6333  00F028  6D                 	db	109	;'m'
  6334  00F029  65                 	db	101	;'e'
  6335  00F02A  6E                 	db	110	;'n'
  6336  00F02B  74                 	db	116	;'t'
  6337  00F02C  20                 	db	32
  6338  00F02D  43                 	db	67	;'C'
  6339  00F02E  6F                 	db	111	;'o'
  6340  00F02F  6D                 	db	109	;'m'
  6341  00F030  6D                 	db	109	;'m'
  6342  00F031  61                 	db	97	;'a'
  6343  00F032  6E                 	db	110	;'n'
  6344  00F033  64                 	db	100	;'d'
  6345  00F034  73                 	db	115	;'s'
  6346  00F035  3A                 	db	58	;':'
  6347  00F036  20                 	db	32
  6348  00F037  56                 	db	86	;'V'
  6349  00F038  69                 	db	105	;'i'
  6350  00F039  65                 	db	101	;'e'
  6351  00F03A  77                 	db	119	;'w'
  6352  00F03B  20                 	db	32
  6353  00F03C  6C                 	db	108	;'l'
  6354  00F03D  6F                 	db	111	;'o'
  6355  00F03E  77                 	db	119	;'w'
  6356  00F03F  20                 	db	32
  6357  00F040  6C                 	db	108	;'l'
  6358  00F041  65                 	db	101	;'e'
  6359  00F042  76                 	db	118	;'v'
  6360  00F043  65                 	db	101	;'e'
  6361  00F044  6C                 	db	108	;'l'
  6362  00F045  20                 	db	32
  6363  00F046  73                 	db	115	;'s'
  6364  00F047  79                 	db	121	;'y'
  6365  00F048  73                 	db	115	;'s'
  6366  00F049  74                 	db	116	;'t'
  6367  00F04A  65                 	db	101	;'e'
  6368  00F04B  6D                 	db	109	;'m'
  6369  00F04C  20                 	db	32
  6370  00F04D  6D                 	db	109	;'m'
  6371  00F04E  65                 	db	101	;'e'
  6372  00F04F  61                 	db	97	;'a'
  6373  00F050  73                 	db	115	;'s'
  6374  00F051  75                 	db	117	;'u'
  6375  00F052  72                 	db	114	;'r'
  6376  00F053  65                 	db	101	;'e'
  6377  00F054  6D                 	db	109	;'m'
  6378  00F055  65                 	db	101	;'e'
  6379  00F056  6E                 	db	110	;'n'
  6380  00F057  74                 	db	116	;'t'
  6381  00F058  73                 	db	115	;'s'
  6382  00F059  0A                 	db	10
  6383  00F05A  0D                 	db	13
  6384  00F05B  20                 	db	32
  6385  00F05C  20                 	db	32
  6386  00F05D  20                 	db	32
  6387  00F05E  50                 	db	80	;'P'
  6388  00F05F  72                 	db	114	;'r'
  6389  00F060  69                 	db	105	;'i'
  6390  00F061  6D                 	db	109	;'m'
  6391  00F062  61                 	db	97	;'a'
  6392  00F063  72                 	db	114	;'r'
  6393  00F064  79                 	db	121	;'y'
  6394  00F065  20                 	db	32
  6395  00F066  4D                 	db	77	;'M'
  6396  00F067  65                 	db	101	;'e'
  6397  00F068  61                 	db	97	;'a'
  6398  00F069  73                 	db	115	;'s'
  6399  00F06A  75                 	db	117	;'u'
  6400  00F06B  72                 	db	114	;'r'
  6401  00F06C  65                 	db	101	;'e'
  6402  00F06D  6D                 	db	109	;'m'
  6403  00F06E  65                 	db	101	;'e'
  6404  00F06F  6E                 	db	110	;'n'
  6405  00F070  74                 	db	116	;'t'
  6406  00F071  20                 	db	32
  6407  00F072  43                 	db	67	;'C'
  6408  00F073  6F                 	db	111	;'o'
  6409  00F074  6D                 	db	109	;'m'
  6410  00F075  6D                 	db	109	;'m'
  6411  00F076  61                 	db	97	;'a'
  6412  00F077  6E                 	db	110	;'n'
  6413  00F078  64                 	db	100	;'d'
  6414  00F079  73                 	db	115	;'s'
  6415  00F07A  3A                 	db	58	;':'
  6416  00F07B  20                 	db	32
  6417  00F07C  56                 	db	86	;'V'
  6418  00F07D  69                 	db	105	;'i'
  6419  00F07E  65                 	db	101	;'e'
  6420  00F07F  77                 	db	119	;'w'
  6421  00F080  20                 	db	32
  6422  00F081  68                 	db	104	;'h'
  6423  00F082  69                 	db	105	;'i'
  6424  00F083  67                 	db	103	;'g'
  6425  00F084  68                 	db	104	;'h'
  6426  00F085  20                 	db	32
  6427  00F086  6C                 	db	108	;'l'
  6428  00F087  65                 	db	101	;'e'
  6429  00F088  76                 	db	118	;'v'
  6430  00F089  65                 	db	101	;'e'
  6431  00F08A  6C                 	db	108	;'l'
  6432  00F08B  20                 	db	32
  6433  00F08C  6F                 	db	111	;'o'
  6434  00F08D  75                 	db	117	;'u'
  6435  00F08E  74                 	db	116	;'t'
  6436  00F08F  70                 	db	112	;'p'
  6437  00F090  75                 	db	117	;'u'
  6438  00F091  74                 	db	116	;'t'
  6439  00F092  20                 	db	32
  6440  00F093  6D                 	db	109	;'m'
  6441  00F094  65                 	db	101	;'e'
  6442  00F095  61                 	db	97	;'a'
  6443  00F096  73                 	db	115	;'s'
  6444  00F097  75                 	db	117	;'u'
  6445  00F098  72                 	db	114	;'r'
  6446  00F099  65                 	db	101	;'e'
  6447  00F09A  6D                 	db	109	;'m'
  6448  00F09B  65                 	db	101	;'e'
  6449  00F09C  6E                 	db	110	;'n'
  6450  00F09D  74                 	db	116	;'t'
  6451  00F09E  73                 	db	115	;'s'
  6452  00F09F  20                 	db	32
  6453  00F0A0  61                 	db	97	;'a'
  6454  00F0A1  6E                 	db	110	;'n'
  6455  00F0A2  64                 	db	100	;'d'
  6456  00F0A3  20                 	db	32
  6457  00F0A4  63                 	db	99	;'c'
  6458  00F0A5  61                 	db	97	;'a'
  6459  00F0A6  6C                 	db	108	;'l'
  6460  00F0A7  63                 	db	99	;'c'
  6461  00F0A8  75                 	db	117	;'u'
  6462  00F0A9  6C                 	db	108	;'l'
  6463  00F0AA  61                 	db	97	;'a'
  6464  00F0AB  74                 	db	116	;'t'
  6465  00F0AC  69                 	db	105	;'i'
  6466  00F0AD  6F                 	db	111	;'o'
  6467  00F0AE  6E                 	db	110	;'n'
  6468  00F0AF  73                 	db	115	;'s'
  6469  00F0B0  0A                 	db	10
  6470  00F0B1  0D                 	db	13
  6471  00F0B2  20                 	db	32
  6472  00F0B3  20                 	db	32
  6473  00F0B4  20                 	db	32
  6474  00F0B5  4F                 	db	79	;'O'
  6475  00F0B6  75                 	db	117	;'u'
  6476  00F0B7  74                 	db	116	;'t'
  6477  00F0B8  70                 	db	112	;'p'
  6478  00F0B9  75                 	db	117	;'u'
  6479  00F0BA  74                 	db	116	;'t'
  6480  00F0BB  20                 	db	32
  6481  00F0BC  43                 	db	67	;'C'
  6482  00F0BD  6F                 	db	111	;'o'
  6483  00F0BE  6E                 	db	110	;'n'
  6484  00F0BF  74                 	db	116	;'t'
  6485  00F0C0  72                 	db	114	;'r'
  6486  00F0C1  6F                 	db	111	;'o'
  6487  00F0C2  6C                 	db	108	;'l'
  6488  00F0C3  20                 	db	32
  6489  00F0C4  43                 	db	67	;'C'
  6490  00F0C5  6F                 	db	111	;'o'
  6491  00F0C6  6D                 	db	109	;'m'
  6492  00F0C7  6D                 	db	109	;'m'
  6493  00F0C8  61                 	db	97	;'a'
  6494  00F0C9  6E                 	db	110	;'n'
  6495  00F0CA  64                 	db	100	;'d'
  6496  00F0CB  73                 	db	115	;'s'
  6497  00F0CC  3A                 	db	58	;':'
  6498  00F0CD  20                 	db	32
  6499  00F0CE  43                 	db	67	;'C'
  6500  00F0CF  6F                 	db	111	;'o'
  6501  00F0D0  6E                 	db	110	;'n'
  6502  00F0D1  74                 	db	116	;'t'
  6503  00F0D2  72                 	db	114	;'r'
  6504  00F0D3  6F                 	db	111	;'o'
  6505  00F0D4  6C                 	db	108	;'l'
  6506  00F0D5  20                 	db	32
  6507  00F0D6  74                 	db	116	;'t'
  6508  00F0D7  68                 	db	104	;'h'
  6509  00F0D8  65                 	db	101	;'e'
  6510  00F0D9  20                 	db	32
  6511  00F0DA  6F                 	db	111	;'o'
  6512  00F0DB  75                 	db	117	;'u'
  6513  00F0DC  74                 	db	116	;'t'
  6514  00F0DD  70                 	db	112	;'p'
  6515  00F0DE  75                 	db	117	;'u'
  6516  00F0DF  74                 	db	116	;'t'
  6517  00F0E0  20                 	db	32
  6518  00F0E1  73                 	db	115	;'s'
  6519  00F0E2  74                 	db	116	;'t'
  6520  00F0E3  61                 	db	97	;'a'
  6521  00F0E4  74                 	db	116	;'t'
  6522  00F0E5  65                 	db	101	;'e'
  6523  00F0E6  20                 	db	32
  6524  00F0E7  61                 	db	97	;'a'
  6525  00F0E8  6E                 	db	110	;'n'
  6526  00F0E9  64                 	db	100	;'d'
  6527  00F0EA  20                 	db	32
  6528  00F0EB  64                 	db	100	;'d'
  6529  00F0EC  69                 	db	105	;'i'
  6530  00F0ED  6D                 	db	109	;'m'
  6531  00F0EE  6D                 	db	109	;'m'
  6532  00F0EF  69                 	db	105	;'i'
  6533  00F0F0  6E                 	db	110	;'n'
  6534  00F0F1  67                 	db	103	;'g'
  6535  00F0F2  20                 	db	32
  6536  00F0F3  66                 	db	102	;'f'
  6537  00F0F4  65                 	db	101	;'e'
  6538  00F0F5  61                 	db	97	;'a'
  6539  00F0F6  74                 	db	116	;'t'
  6540  00F0F7  75                 	db	117	;'u'
  6541  00F0F8  72                 	db	114	;'r'
  6542  00F0F9  65                 	db	101	;'e'
  6543  00F0FA  73                 	db	115	;'s'
  6544  00F0FB  0A                 	db	10
  6545  00F0FC  0D                 	db	13
  6546  00F0FD  0A                 	db	10
  6547  00F0FE  0D                 	db	13
  6548  00F0FF  27                 	db	39
  6549  00F100  48                 	db	72	;'H'
  6550  00F101  65                 	db	101	;'e'
  6551  00F102  6C                 	db	108	;'l'
  6552  00F103  70                 	db	112	;'p'
  6553  00F104  20                 	db	32
  6554  00F105  41                 	db	65	;'A'
  6555  00F106  6C                 	db	108	;'l'
  6556  00F107  6C                 	db	108	;'l'
  6557  00F108  27                 	db	39
  6558  00F109  20                 	db	32
  6559  00F10A  77                 	db	119	;'w'
  6560  00F10B  69                 	db	105	;'i'
  6561  00F10C  6C                 	db	108	;'l'
  6562  00F10D  6C                 	db	108	;'l'
  6563  00F10E  20                 	db	32
  6564  00F10F  6C                 	db	108	;'l'
  6565  00F110  69                 	db	105	;'i'
  6566  00F111  73                 	db	115	;'s'
  6567  00F112  74                 	db	116	;'t'
  6568  00F113  20                 	db	32
  6569  00F114  61                 	db	97	;'a'
  6570  00F115  6C                 	db	108	;'l'
  6571  00F116  6C                 	db	108	;'l'
  6572  00F117  20                 	db	32
  6573  00F118  63                 	db	99	;'c'
  6574  00F119  6F                 	db	111	;'o'
  6575  00F11A  6D                 	db	109	;'m'
  6576  00F11B  6D                 	db	109	;'m'
  6577  00F11C  61                 	db	97	;'a'
  6578  00F11D  6E                 	db	110	;'n'
  6579  00F11E  64                 	db	100	;'d'
  6580  00F11F  73                 	db	115	;'s'
  6581  00F120  0A                 	db	10
  6582  00F121  0D                 	db	13
  6583  00F122  00                 	db	0
  6584  00F123  20                 	db	32
  6585  00F124  20                 	db	32
  6586  00F125  20                 	db	32
  6587  00F126  20                 	db	32
  6588  00F127  42                 	db	66	;'B'
  6589  00F128  6F                 	db	111	;'o'
  6590  00F129  6F                 	db	111	;'o'
  6591  00F12A  74                 	db	116	;'t'
  6592  00F12B  20                 	db	32
  6593  00F12C  63                 	db	99	;'c'
  6594  00F12D  6F                 	db	111	;'o'
  6595  00F12E  6D                 	db	109	;'m'
  6596  00F12F  70                 	db	112	;'p'
  6597  00F130  6C                 	db	108	;'l'
  6598  00F131  65                 	db	101	;'e'
  6599  00F132  74                 	db	116	;'t'
  6600  00F133  65                 	db	101	;'e'
  6601  00F134  0A                 	db	10
  6602  00F135  0D                 	db	13
  6603  00F136  20                 	db	32
  6604  00F137  20                 	db	32
  6605  00F138  20                 	db	32
  6606  00F139  20                 	db	32
  6607  00F13A  50                 	db	80	;'P'
  6608  00F13B  49                 	db	73	;'I'
  6609  00F13C  43                 	db	67	;'C'
  6610  00F13D  31                 	db	49	;'1'
  6611  00F13E  38                 	db	56	;'8'
  6612  00F13F  46                 	db	70	;'F'
  6613  00F140  36                 	db	54	;'6'
  6614  00F141  37                 	db	55	;'7'
  6615  00F142  4B                 	db	75	;'K'
  6616  00F143  34                 	db	52	;'4'
  6617  00F144  30                 	db	48	;'0'
  6618  00F145  20                 	db	32
  6619  00F146  6D                 	db	109	;'m'
  6620  00F147  54                 	db	84	;'T'
  6621  00F148  6F                 	db	111	;'o'
  6622  00F149  75                 	db	117	;'u'
  6623  00F14A  63                 	db	99	;'c'
  6624  00F14B  68                 	db	104	;'h'
  6625  00F14C  20                 	db	32
  6626  00F14D  54                 	db	84	;'T'
  6627  00F14E  65                 	db	101	;'e'
  6628  00F14F  73                 	db	115	;'s'
  6629  00F150  74                 	db	116	;'t'
  6630  00F151  20                 	db	32
  6631  00F152  42                 	db	66	;'B'
  6632  00F153  6F                 	db	111	;'o'
  6633  00F154  61                 	db	97	;'a'
  6634  00F155  72                 	db	114	;'r'
  6635  00F156  64                 	db	100	;'d'
  6636  00F157  0A                 	db	10
  6637  00F158  0D                 	db	13
  6638  00F159  20                 	db	32
  6639  00F15A  20                 	db	32
  6640  00F15B  20                 	db	32
  6641  00F15C  20                 	db	32
  6642  00F15D  45                 	db	69	;'E'
  6643  00F15E  76                 	db	118	;'v'
  6644  00F15F  61                 	db	97	;'a'
  6645  00F160  6C                 	db	108	;'l'
  6646  00F161  75                 	db	117	;'u'
  6647  00F162  61                 	db	97	;'a'
  6648  00F163  74                 	db	116	;'t'
  6649  00F164  65                 	db	101	;'e'
  6650  00F165  73                 	db	115	;'s'
  6651  00F166  20                 	db	32
  6652  00F167  74                 	db	116	;'t'
  6653  00F168  68                 	db	104	;'h'
  6654  00F169  65                 	db	101	;'e'
  6655  00F16A  20                 	db	32
  6656  00F16B  6D                 	db	109	;'m'
  6657  00F16C  54                 	db	84	;'T'
  6658  00F16D  6F                 	db	111	;'o'
  6659  00F16E  75                 	db	117	;'u'
  6660  00F16F  63                 	db	99	;'c'
  6661  00F170  68                 	db	104	;'h'
  6662  00F171  20                 	db	32
  6663  00F172  63                 	db	99	;'c'
  6664  00F173  61                 	db	97	;'a'
  6665  00F174  70                 	db	112	;'p'
  6666  00F175  61                 	db	97	;'a'
  6667  00F176  63                 	db	99	;'c'
  6668  00F177  69                 	db	105	;'i'
  6669  00F178  74                 	db	116	;'t'
  6670  00F179  69                 	db	105	;'i'
  6671  00F17A  76                 	db	118	;'v'
  6672  00F17B  65                 	db	101	;'e'
  6673  00F17C  20                 	db	32
  6674  00F17D  74                 	db	116	;'t'
  6675  00F17E  6F                 	db	111	;'o'
  6676  00F17F  75                 	db	117	;'u'
  6677  00F180  63                 	db	99	;'c'
  6678  00F181  68                 	db	104	;'h'
  6679  00F182  20                 	db	32
  6680  00F183  6C                 	db	108	;'l'
  6681  00F184  69                 	db	105	;'i'
  6682  00F185  62                 	db	98	;'b'
  6683  00F186  72                 	db	114	;'r'
  6684  00F187  61                 	db	97	;'a'
  6685  00F188  72                 	db	114	;'r'
  6686  00F189  79                 	db	121	;'y'
  6687  00F18A  20                 	db	32
  6688  00F18B  64                 	db	100	;'d'
  6689  00F18C  69                 	db	105	;'i'
  6690  00F18D  73                 	db	115	;'s'
  6691  00F18E  74                 	db	116	;'t'
  6692  00F18F  72                 	db	114	;'r'
  6693  00F190  69                 	db	105	;'i'
  6694  00F191  62                 	db	98	;'b'
  6695  00F192  75                 	db	117	;'u'
  6696  00F193  74                 	db	116	;'t'
  6697  00F194  65                 	db	101	;'e'
  6698  00F195  64                 	db	100	;'d'
  6699  00F196  20                 	db	32
  6700  00F197  62                 	db	98	;'b'
  6701  00F198  79                 	db	121	;'y'
  6702  00F199  20                 	db	32
  6703  00F19A  4D                 	db	77	;'M'
  6704  00F19B  69                 	db	105	;'i'
  6705  00F19C  63                 	db	99	;'c'
  6706  00F19D  72                 	db	114	;'r'
  6707  00F19E  6F                 	db	111	;'o'
  6708  00F19F  63                 	db	99	;'c'
  6709  00F1A0  68                 	db	104	;'h'
  6710  00F1A1  69                 	db	105	;'i'
  6711  00F1A2  70                 	db	112	;'p'
  6712  00F1A3  0A                 	db	10
  6713  00F1A4  0D                 	db	13
  6714  00F1A5  20                 	db	32
  6715  00F1A6  20                 	db	32
  6716  00F1A7  20                 	db	32
  6717  00F1A8  20                 	db	32
  6718  00F1A9  53                 	db	83	;'S'
  6719  00F1AA  65                 	db	101	;'e'
  6720  00F1AB  74                 	db	116	;'t'
  6721  00F1AC  73                 	db	115	;'s'
  6722  00F1AD  20                 	db	32
  6723  00F1AE  74                 	db	116	;'t'
  6724  00F1AF  68                 	db	104	;'h'
  6725  00F1B0  65                 	db	101	;'e'
  6726  00F1B1  20                 	db	32
  6727  00F1B2  73                 	db	115	;'s'
  6728  00F1B3  74                 	db	116	;'t'
  6729  00F1B4  61                 	db	97	;'a'
  6730  00F1B5  74                 	db	116	;'t'
  6731  00F1B6  65                 	db	101	;'e'
  6732  00F1B7  20                 	db	32
  6733  00F1B8  6F                 	db	111	;'o'
  6734  00F1B9  66                 	db	102	;'f'
  6735  00F1BA  20                 	db	32
  6736  00F1BB  66                 	db	102	;'f'
  6737  00F1BC  69                 	db	105	;'i'
  6738  00F1BD  76                 	db	118	;'v'
  6739  00F1BE  65                 	db	101	;'e'
  6740  00F1BF  20                 	db	32
  6741  00F1C0  4C                 	db	76	;'L'
  6742  00F1C1  45                 	db	69	;'E'
  6743  00F1C2  44                 	db	68	;'D'
  6744  00F1C3  73                 	db	115	;'s'
  6745  00F1C4  20                 	db	32
  6746  00F1C5  62                 	db	98	;'b'
  6747  00F1C6  61                 	db	97	;'a'
  6748  00F1C7  73                 	db	115	;'s'
  6749  00F1C8  65                 	db	101	;'e'
  6750  00F1C9  64                 	db	100	;'d'
  6751  00F1CA  20                 	db	32
  6752  00F1CB  6F                 	db	111	;'o'
  6753  00F1CC  6E                 	db	110	;'n'
  6754  00F1CD  20                 	db	32
  6755  00F1CE  6D                 	db	109	;'m'
  6756  00F1CF  54                 	db	84	;'T'
  6757  00F1D0  6F                 	db	111	;'o'
  6758  00F1D1  75                 	db	117	;'u'
  6759  00F1D2  63                 	db	99	;'c'
  6760  00F1D3  68                 	db	104	;'h'
  6761  00F1D4  20                 	db	32
  6762  00F1D5  63                 	db	99	;'c'
  6763  00F1D6  61                 	db	97	;'a'
  6764  00F1D7  70                 	db	112	;'p'
  6765  00F1D8  61                 	db	97	;'a'
  6766  00F1D9  63                 	db	99	;'c'
  6767  00F1DA  69                 	db	105	;'i'
  6768  00F1DB  74                 	db	116	;'t'
  6769  00F1DC  69                 	db	105	;'i'
  6770  00F1DD  76                 	db	118	;'v'
  6771  00F1DE  65                 	db	101	;'e'
  6772  00F1DF  20                 	db	32
  6773  00F1E0  70                 	db	112	;'p'
  6774  00F1E1  75                 	db	117	;'u'
  6775  00F1E2  73                 	db	115	;'s'
  6776  00F1E3  68                 	db	104	;'h'
  6777  00F1E4  62                 	db	98	;'b'
  6778  00F1E5  75                 	db	117	;'u'
  6779  00F1E6  74                 	db	116	;'t'
  6780  00F1E7  74                 	db	116	;'t'
  6781  00F1E8  6F                 	db	111	;'o'
  6782  00F1E9  6E                 	db	110	;'n'
  6783  00F1EA  73                 	db	115	;'s'
  6784  00F1EB  0A                 	db	10
  6785  00F1EC  0D                 	db	13
  6786  00F1ED  20                 	db	32
  6787  00F1EE  20                 	db	32
  6788  00F1EF  20                 	db	32
  6789  00F1F0  20                 	db	32
  6790  00F1F1  42                 	db	66	;'B'
  6791  00F1F2  61                 	db	97	;'a'
  6792  00F1F3  75                 	db	117	;'u'
  6793  00F1F4  64                 	db	100	;'d'
  6794  00F1F5  20                 	db	32
  6795  00F1F6  72                 	db	114	;'r'
  6796  00F1F7  61                 	db	97	;'a'
  6797  00F1F8  74                 	db	116	;'t'
  6798  00F1F9  65                 	db	101	;'e'
  6799  00F1FA  3A                 	db	58	;':'
  6800  00F1FB  20                 	db	32
  6801  00F1FC  31                 	db	49	;'1'
  6802  00F1FD  31                 	db	49	;'1'
  6803  00F1FE  35                 	db	53	;'5'
  6804  00F1FF  32                 	db	50	;'2'
  6805  00F200  30                 	db	48	;'0'
  6806  00F201  30                 	db	48	;'0'
  6807  00F202  20                 	db	32
  6808  00F203  62                 	db	98	;'b'
  6809  00F204  70                 	db	112	;'p'
  6810  00F205  73                 	db	115	;'s'
  6811  00F206  0A                 	db	10
  6812  00F207  0D                 	db	13
  6813  00F208  20                 	db	32
  6814  00F209  20                 	db	32
  6815  00F20A  20                 	db	32
  6816  00F20B  20                 	db	32
  6817  00F20C  4E                 	db	78	;'N'
  6818  00F20D  6F                 	db	111	;'o'
  6819  00F20E  20                 	db	32
  6820  00F20F  70                 	db	112	;'p'
  6821  00F210  61                 	db	97	;'a'
  6822  00F211  72                 	db	114	;'r'
  6823  00F212  69                 	db	105	;'i'
  6824  00F213  74                 	db	116	;'t'
  6825  00F214  79                 	db	121	;'y'
  6826  00F215  2C                 	db	44
  6827  00F216  20                 	db	32
  6828  00F217  38                 	db	56	;'8'
  6829  00F218  20                 	db	32
  6830  00F219  62                 	db	98	;'b'
  6831  00F21A  69                 	db	105	;'i'
  6832  00F21B  74                 	db	116	;'t'
  6833  00F21C  73                 	db	115	;'s'
  6834  00F21D  2C                 	db	44
  6835  00F21E  20                 	db	32
  6836  00F21F  6E                 	db	110	;'n'
  6837  00F220  6F                 	db	111	;'o'
  6838  00F221  20                 	db	32
  6839  00F222  66                 	db	102	;'f'
  6840  00F223  6C                 	db	108	;'l'
  6841  00F224  6F                 	db	111	;'o'
  6842  00F225  77                 	db	119	;'w'
  6843  00F226  20                 	db	32
  6844  00F227  63                 	db	99	;'c'
  6845  00F228  6F                 	db	111	;'o'
  6846  00F229  6E                 	db	110	;'n'
  6847  00F22A  74                 	db	116	;'t'
  6848  00F22B  72                 	db	114	;'r'
  6849  00F22C  6F                 	db	111	;'o'
  6850  00F22D  6C                 	db	108	;'l'
  6851  00F22E  2C                 	db	44
  6852  00F22F  20                 	db	32
  6853  00F230  31                 	db	49	;'1'
  6854  00F231  20                 	db	32
  6855  00F232  73                 	db	115	;'s'
  6856  00F233  74                 	db	116	;'t'
  6857  00F234  6F                 	db	111	;'o'
  6858  00F235  70                 	db	112	;'p'
  6859  00F236  20                 	db	32
  6860  00F237  62                 	db	98	;'b'
  6861  00F238  69                 	db	105	;'i'
  6862  00F239  74                 	db	116	;'t'
  6863  00F23A  0A                 	db	10
  6864  00F23B  0D                 	db	13
  6865  00F23C  20                 	db	32
  6866  00F23D  20                 	db	32
  6867  00F23E  20                 	db	32
  6868  00F23F  20                 	db	32
  6869  00F240  43                 	db	67	;'C'
  6870  00F241  6F                 	db	111	;'o'
  6871  00F242  6D                 	db	109	;'m'
  6872  00F243  6D                 	db	109	;'m'
  6873  00F244  61                 	db	97	;'a'
  6874  00F245  6E                 	db	110	;'n'
  6875  00F246  64                 	db	100	;'d'
  6876  00F247  73                 	db	115	;'s'
  6877  00F248  20                 	db	32
  6878  00F249  61                 	db	97	;'a'
  6879  00F24A  72                 	db	114	;'r'
  6880  00F24B  65                 	db	101	;'e'
  6881  00F24C  20                 	db	32
  6882  00F24D  63                 	db	99	;'c'
  6883  00F24E  61                 	db	97	;'a'
  6884  00F24F  73                 	db	115	;'s'
  6885  00F250  65                 	db	101	;'e'
  6886  00F251  20                 	db	32
  6887  00F252  73                 	db	115	;'s'
  6888  00F253  65                 	db	101	;'e'
  6889  00F254  6E                 	db	110	;'n'
  6890  00F255  73                 	db	115	;'s'
  6891  00F256  69                 	db	105	;'i'
  6892  00F257  74                 	db	116	;'t'
  6893  00F258  69                 	db	105	;'i'
  6894  00F259  76                 	db	118	;'v'
  6895  00F25A  65                 	db	101	;'e'
  6896  00F25B  0A                 	db	10
  6897  00F25C  0D                 	db	13
  6898  00F25D  20                 	db	32
  6899  00F25E  20                 	db	32
  6900  00F25F  20                 	db	32
  6901  00F260  20                 	db	32
  6902  00F261  45                 	db	69	;'E'
  6903  00F262  6E                 	db	110	;'n'
  6904  00F263  74                 	db	116	;'t'
  6905  00F264  65                 	db	101	;'e'
  6906  00F265  72                 	db	114	;'r'
  6907  00F266  20                 	db	32
  6908  00F267  61                 	db	97	;'a'
  6909  00F268  20                 	db	32
  6910  00F269  63                 	db	99	;'c'
  6911  00F26A  6F                 	db	111	;'o'
  6912  00F26B  6D                 	db	109	;'m'
  6913  00F26C  6D                 	db	109	;'m'
  6914  00F26D  61                 	db	97	;'a'
  6915  00F26E  6E                 	db	110	;'n'
  6916  00F26F  64                 	db	100	;'d'
  6917  00F270  2C                 	db	44
  6918  00F271  20                 	db	32
  6919  00F272  6F                 	db	111	;'o'
  6920  00F273  72                 	db	114	;'r'
  6921  00F274  20                 	db	32
  6922  00F275  65                 	db	101	;'e'
  6923  00F276  6E                 	db	110	;'n'
  6924  00F277  74                 	db	116	;'t'
  6925  00F278  65                 	db	101	;'e'
  6926  00F279  72                 	db	114	;'r'
  6927  00F27A  20                 	db	32
  6928  00F27B  48                 	db	72	;'H'
  6929  00F27C  65                 	db	101	;'e'
  6930  00F27D  6C                 	db	108	;'l'
  6931  00F27E  70                 	db	112	;'p'
  6932  00F27F  20                 	db	32
  6933  00F280  66                 	db	102	;'f'
  6934  00F281  6F                 	db	111	;'o'
  6935  00F282  72                 	db	114	;'r'
  6936  00F283  20                 	db	32
  6937  00F284  6C                 	db	108	;'l'
  6938  00F285  69                 	db	105	;'i'
  6939  00F286  73                 	db	115	;'s'
  6940  00F287  74                 	db	116	;'t'
  6941  00F288  20                 	db	32
  6942  00F289  6F                 	db	111	;'o'
  6943  00F28A  66                 	db	102	;'f'
  6944  00F28B  20                 	db	32
  6945  00F28C  63                 	db	99	;'c'
  6946  00F28D  6F                 	db	111	;'o'
  6947  00F28E  6D                 	db	109	;'m'
  6948  00F28F  6D                 	db	109	;'m'
  6949  00F290  61                 	db	97	;'a'
  6950  00F291  6E                 	db	110	;'n'
  6951  00F292  64                 	db	100	;'d'
  6952  00F293  73                 	db	115	;'s'
  6953  00F294  0A                 	db	10
  6954  00F295  0D                 	db	13
  6955  00F296  00                 	db	0
  6956  00F297                     STR_111:
  6957  00F297  49                 	db	73	;'I'
  6958  00F298  66                 	db	102	;'f'
  6959  00F299  20                 	db	32
  6960  00F29A  79                 	db	121	;'y'
  6961  00F29B  6F                 	db	111	;'o'
  6962  00F29C  75                 	db	117	;'u'
  6963  00F29D  27                 	db	39
  6964  00F29E  64                 	db	100	;'d'
  6965  00F29F  20                 	db	32
  6966  00F2A0  6C                 	db	108	;'l'
  6967  00F2A1  69                 	db	105	;'i'
  6968  00F2A2  6B                 	db	107	;'k'
  6969  00F2A3  65                 	db	101	;'e'
  6970  00F2A4  20                 	db	32
  6971  00F2A5  74                 	db	116	;'t'
  6972  00F2A6  6F                 	db	111	;'o'
  6973  00F2A7  20                 	db	32
  6974  00F2A8  63                 	db	99	;'c'
  6975  00F2A9  6F                 	db	111	;'o'
  6976  00F2AA  6D                 	db	109	;'m'
  6977  00F2AB  70                 	db	112	;'p'
  6978  00F2AC  6C                 	db	108	;'l'
  6979  00F2AD  65                 	db	101	;'e'
  6980  00F2AE  74                 	db	116	;'t'
  6981  00F2AF  65                 	db	101	;'e'
  6982  00F2B0  6C                 	db	108	;'l'
  6983  00F2B1  79                 	db	121	;'y'
  6984  00F2B2  20                 	db	32
  6985  00F2B3  65                 	db	101	;'e'
  6986  00F2B4  6E                 	db	110	;'n'
  6987  00F2B5  61                 	db	97	;'a'
  6988  00F2B6  62                 	db	98	;'b'
  6989  00F2B7  6C                 	db	108	;'l'
  6990  00F2B8  65                 	db	101	;'e'
  6991  00F2B9  20                 	db	32
  6992  00F2BA  6F                 	db	111	;'o'
  6993  00F2BB  72                 	db	114	;'r'
  6994  00F2BC  20                 	db	32
  6995  00F2BD  64                 	db	100	;'d'
  6996  00F2BE  69                 	db	105	;'i'
  6997  00F2BF  73                 	db	115	;'s'
  6998  00F2C0  61                 	db	97	;'a'
  6999  00F2C1  62                 	db	98	;'b'
  7000  00F2C2  6C                 	db	108	;'l'
  7001  00F2C3  65                 	db	101	;'e'
  7002  00F2C4  20                 	db	32
  7003  00F2C5  74                 	db	116	;'t'
  7004  00F2C6  68                 	db	104	;'h'
  7005  00F2C7  65                 	db	101	;'e'
  7006  00F2C8  20                 	db	32
  7007  00F2C9  6C                 	db	108	;'l'
  7008  00F2CA  6F                 	db	111	;'o'
  7009  00F2CB  61                 	db	97	;'a'
  7010  00F2CC  64                 	db	100	;'d'
  7011  00F2CD  2C                 	db	44
  7012  00F2CE  20                 	db	32
  7013  00F2CF  64                 	db	100	;'d'
  7014  00F2D0  69                 	db	105	;'i'
  7015  00F2D1  73                 	db	115	;'s'
  7016  00F2D2  61                 	db	97	;'a'
  7017  00F2D3  62                 	db	98	;'b'
  7018  00F2D4  6C                 	db	108	;'l'
  7019  00F2D5  65                 	db	101	;'e'
  7020  00F2D6  20                 	db	32
  7021  00F2D7  64                 	db	100	;'d'
  7022  00F2D8  69                 	db	105	;'i'
  7023  00F2D9  6D                 	db	109	;'m'
  7024  00F2DA  6D                 	db	109	;'m'
  7025  00F2DB  69                 	db	105	;'i'
  7026  00F2DC  6E                 	db	110	;'n'
  7027  00F2DD  67                 	db	103	;'g'
  7028  00F2DE  20                 	db	32
  7029  00F2DF  61                 	db	97	;'a'
  7030  00F2E0  6E                 	db	110	;'n'
  7031  00F2E1  64                 	db	100	;'d'
  7032  00F2E2  20                 	db	32
  7033  00F2E3  75                 	db	117	;'u'
  7034  00F2E4  73                 	db	115	;'s'
  7035  00F2E5  65                 	db	101	;'e'
  7036  00F2E6  20                 	db	32
  7037  00F2E7  72                 	db	114	;'r'
  7038  00F2E8  65                 	db	101	;'e'
  7039  00F2E9  73                 	db	115	;'s'
  7040  00F2EA  70                 	db	112	;'p'
  7041  00F2EB  65                 	db	101	;'e'
  7042  00F2EC  63                 	db	99	;'c'
  7043  00F2ED  74                 	db	116	;'t'
  7044  00F2EE  69                 	db	105	;'i'
  7045  00F2EF  76                 	db	118	;'v'
  7046  00F2F0  65                 	db	101	;'e'
  7047  00F2F1  20                 	db	32
  7048  00F2F2  63                 	db	99	;'c'
  7049  00F2F3  6F                 	db	111	;'o'
  7050  00F2F4  6D                 	db	109	;'m'
  7051  00F2F5  6D                 	db	109	;'m'
  7052  00F2F6  61                 	db	97	;'a'
  7053  00F2F7  6E                 	db	110	;'n'
  7054  00F2F8  64                 	db	100	;'d'
  7055  00F2F9  73                 	db	115	;'s'
  7056  00F2FA  0A                 	db	10
  7057  00F2FB  0D                 	db	13
  7058  00F2FC  00                 	db	0
  7059  00F2FD                     STR_110:
  7060  00F2FD  45                 	db	69	;'E'
  7061  00F2FE  52                 	db	82	;'R'
  7062  00F2FF  52                 	db	82	;'R'
  7063  00F300  4F                 	db	79	;'O'
  7064  00F301  52                 	db	82	;'R'
  7065  00F302  3A                 	db	58	;':'
  7066  00F303  20                 	db	32
  7067  00F304  50                 	db	80	;'P'
  7068  00F305  6C                 	db	108	;'l'
  7069  00F306  65                 	db	101	;'e'
  7070  00F307  61                 	db	97	;'a'
  7071  00F308  73                 	db	115	;'s'
  7072  00F309  65                 	db	101	;'e'
  7073  00F30A  20                 	db	32
  7074  00F30B  73                 	db	115	;'s'
  7075  00F30C  65                 	db	101	;'e'
  7076  00F30D  74                 	db	116	;'t'
  7077  00F30E  20                 	db	32
  7078  00F30F  64                 	db	100	;'d'
  7079  00F310  69                 	db	105	;'i'
  7080  00F311  6D                 	db	109	;'m'
  7081  00F312  6D                 	db	109	;'m'
  7082  00F313  69                 	db	105	;'i'
  7083  00F314  6E                 	db	110	;'n'
  7084  00F315  67                 	db	103	;'g'
  7085  00F316  20                 	db	32
  7086  00F317  70                 	db	112	;'p'
  7087  00F318  65                 	db	101	;'e'
  7088  00F319  72                 	db	114	;'r'
  7089  00F31A  63                 	db	99	;'c'
  7090  00F31B  65                 	db	101	;'e'
  7091  00F31C  6E                 	db	110	;'n'
  7092  00F31D  74                 	db	116	;'t'
  7093  00F31E  61                 	db	97	;'a'
  7094  00F31F  67                 	db	103	;'g'
  7095  00F320  65                 	db	101	;'e'
  7096  00F321  20                 	db	32
  7097  00F322  74                 	db	116	;'t'
  7098  00F323  6F                 	db	111	;'o'
  7099  00F324  20                 	db	32
  7100  00F325  61                 	db	97	;'a'
  7101  00F326  6E                 	db	110	;'n'
  7102  00F327  20                 	db	32
  7103  00F328  69                 	db	105	;'i'
  7104  00F329  6E                 	db	110	;'n'
  7105  00F32A  74                 	db	116	;'t'
  7106  00F32B  65                 	db	101	;'e'
  7107  00F32C  67                 	db	103	;'g'
  7108  00F32D  65                 	db	101	;'e'
  7109  00F32E  72                 	db	114	;'r'
  7110  00F32F  20                 	db	32
  7111  00F330  67                 	db	103	;'g'
  7112  00F331  72                 	db	114	;'r'
  7113  00F332  65                 	db	101	;'e'
  7114  00F333  61                 	db	97	;'a'
  7115  00F334  74                 	db	116	;'t'
  7116  00F335  65                 	db	101	;'e'
  7117  00F336  72                 	db	114	;'r'
  7118  00F337  20                 	db	32
  7119  00F338  74                 	db	116	;'t'
  7120  00F339  68                 	db	104	;'h'
  7121  00F33A  61                 	db	97	;'a'
  7122  00F33B  6E                 	db	110	;'n'
  7123  00F33C  20                 	db	32
  7124  00F33D  30                 	db	48	;'0'
  7125  00F33E  20                 	db	32
  7126  00F33F  61                 	db	97	;'a'
  7127  00F340  6E                 	db	110	;'n'
  7128  00F341  64                 	db	100	;'d'
  7129  00F342  20                 	db	32
  7130  00F343  6C                 	db	108	;'l'
  7131  00F344  65                 	db	101	;'e'
  7132  00F345  73                 	db	115	;'s'
  7133  00F346  73                 	db	115	;'s'
  7134  00F347  20                 	db	32
  7135  00F348  74                 	db	116	;'t'
  7136  00F349  68                 	db	104	;'h'
  7137  00F34A  61                 	db	97	;'a'
  7138  00F34B  6E                 	db	110	;'n'
  7139  00F34C  20                 	db	32
  7140  00F34D  31                 	db	49	;'1'
  7141  00F34E  30                 	db	48	;'0'
  7142  00F34F  30                 	db	48	;'0'
  7143  00F350  0A                 	db	10
  7144  00F351  0D                 	db	13
  7145  00F352  00                 	db	0
  7146  00F353                     STR_54:
  7147  00F353  44                 	db	68	;'D'
  7148  00F354  65                 	db	101	;'e'
  7149  00F355  76                 	db	118	;'v'
  7150  00F356  69                 	db	105	;'i'
  7151  00F357  63                 	db	99	;'c'
  7152  00F358  65                 	db	101	;'e'
  7153  00F359  20                 	db	32
  7154  00F35A  49                 	db	73	;'I'
  7155  00F35B  44                 	db	68	;'D'
  7156  00F35C  20                 	db	32
  7157  00F35D  73                 	db	115	;'s'
  7158  00F35E  74                 	db	116	;'t'
  7159  00F35F  6F                 	db	111	;'o'
  7160  00F360  72                 	db	114	;'r'
  7161  00F361  65                 	db	101	;'e'
  7162  00F362  64                 	db	100	;'d'
  7163  00F363  20                 	db	32
  7164  00F364  69                 	db	105	;'i'
  7165  00F365  6E                 	db	110	;'n'
  7166  00F366  20                 	db	32
  7167  00F367  46                 	db	70	;'F'
  7168  00F368  6C                 	db	108	;'l'
  7169  00F369  61                 	db	97	;'a'
  7170  00F36A  73                 	db	115	;'s'
  7171  00F36B  68                 	db	104	;'h'
  7172  00F36C  20                 	db	32
  7173  00F36D  69                 	db	105	;'i'
  7174  00F36E  73                 	db	115	;'s'
  7175  00F36F  3A                 	db	58	;':'
  7176  00F370  20                 	db	32
  7177  00F371  30                 	db	48	;'0'
  7178  00F372  78                 	db	120	;'x'
  7179  00F373  25                 	db	37
  7180  00F374  58                 	db	88	;'X'
  7181  00F375  2E                 	db	46
  7182  00F376  20                 	db	32
  7183  00F377  54                 	db	84	;'T'
  7184  00F378  68                 	db	104	;'h'
  7185  00F379  69                 	db	105	;'i'
  7186  00F37A  73                 	db	115	;'s'
  7187  00F37B  20                 	db	32
  7188  00F37C  63                 	db	99	;'c'
  7189  00F37D  6F                 	db	111	;'o'
  7190  00F37E  72                 	db	114	;'r'
  7191  00F37F  72                 	db	114	;'r'
  7192  00F380  65                 	db	101	;'e'
  7193  00F381  73                 	db	115	;'s'
  7194  00F382  70                 	db	112	;'p'
  7195  00F383  6F                 	db	111	;'o'
  7196  00F384  6E                 	db	110	;'n'
  7197  00F385  64                 	db	100	;'d'
  7198  00F386  73                 	db	115	;'s'
  7199  00F387  20                 	db	32
  7200  00F388  74                 	db	116	;'t'
  7201  00F389  6F                 	db	111	;'o'
  7202  00F38A  20                 	db	32
  7203  00F38B  61                 	db	97	;'a'
  7204  00F38C  20                 	db	32
  7205  00F38D  64                 	db	100	;'d'
  7206  00F38E  65                 	db	101	;'e'
  7207  00F38F  76                 	db	118	;'v'
  7208  00F390  69                 	db	105	;'i'
  7209  00F391  63                 	db	99	;'c'
  7210  00F392  65                 	db	101	;'e'
  7211  00F393  20                 	db	32
  7212  00F394  70                 	db	112	;'p'
  7213  00F395  61                 	db	97	;'a'
  7214  00F396  72                 	db	114	;'r'
  7215  00F397  74                 	db	116	;'t'
  7216  00F398  20                 	db	32
  7217  00F399  6E                 	db	110	;'n'
  7218  00F39A  75                 	db	117	;'u'
  7219  00F39B  6D                 	db	109	;'m'
  7220  00F39C  62                 	db	98	;'b'
  7221  00F39D  65                 	db	101	;'e'
  7222  00F39E  72                 	db	114	;'r'
  7223  00F39F  20                 	db	32
  7224  00F3A0  6F                 	db	111	;'o'
  7225  00F3A1  66                 	db	102	;'f'
  7226  00F3A2  20                 	db	32
  7227  00F3A3  25                 	db	37
  7228  00F3A4  73                 	db	115	;'s'
  7229  00F3A5  0A                 	db	10
  7230  00F3A6  0D                 	db	13
  7231  00F3A7  00                 	db	0
  7232  00F3A8                     STR_115:
  7233  00F3A8  54                 	db	84	;'T'
  7234  00F3A9  68                 	db	104	;'h'
  7235  00F3AA  69                 	db	105	;'i'
  7236  00F3AB  73                 	db	115	;'s'
  7237  00F3AC  20                 	db	32
  7238  00F3AD  63                 	db	99	;'c'
  7239  00F3AE  6F                 	db	111	;'o'
  7240  00F3AF  72                 	db	114	;'r'
  7241  00F3B0  72                 	db	114	;'r'
  7242  00F3B1  65                 	db	101	;'e'
  7243  00F3B2  73                 	db	115	;'s'
  7244  00F3B3  70                 	db	112	;'p'
  7245  00F3B4  6F                 	db	111	;'o'
  7246  00F3B5  6E                 	db	110	;'n'
  7247  00F3B6  64                 	db	100	;'d'
  7248  00F3B7  73                 	db	115	;'s'
  7249  00F3B8  20                 	db	32
  7250  00F3B9  74                 	db	116	;'t'
  7251  00F3BA  6F                 	db	111	;'o'
  7252  00F3BB  20                 	db	32
  7253  00F3BC  61                 	db	97	;'a'
  7254  00F3BD  20                 	db	32
  7255  00F3BE  31                 	db	49	;'1'
  7256  00F3BF  36                 	db	54	;'6'
  7257  00F3C0  20                 	db	32
  7258  00F3C1  62                 	db	98	;'b'
  7259  00F3C2  69                 	db	105	;'i'
  7260  00F3C3  74                 	db	116	;'t'
  7261  00F3C4  20                 	db	32
  7262  00F3C5  74                 	db	116	;'t'
  7263  00F3C6  69                 	db	105	;'i'
  7264  00F3C7  6D                 	db	109	;'m'
  7265  00F3C8  65                 	db	101	;'e'
  7266  00F3C9  72                 	db	114	;'r'
  7267  00F3CA  20                 	db	32
  7268  00F3CB  70                 	db	112	;'p'
  7269  00F3CC  72                 	db	114	;'r'
  7270  00F3CD  65                 	db	101	;'e'
  7271  00F3CE  2D                 	db	45
  7272  00F3CF  6C                 	db	108	;'l'
  7273  00F3D0  6F                 	db	111	;'o'
  7274  00F3D1  61                 	db	97	;'a'
  7275  00F3D2  64                 	db	100	;'d'
  7276  00F3D3  20                 	db	32
  7277  00F3D4  76                 	db	118	;'v'
  7278  00F3D5  61                 	db	97	;'a'
  7279  00F3D6  6C                 	db	108	;'l'
  7280  00F3D7  75                 	db	117	;'u'
  7281  00F3D8  65                 	db	101	;'e'
  7282  00F3D9  20                 	db	32
  7283  00F3DA  6F                 	db	111	;'o'
  7284  00F3DB  66                 	db	102	;'f'
  7285  00F3DC  20                 	db	32
  7286  00F3DD  30                 	db	48	;'0'
  7287  00F3DE  78                 	db	120	;'x'
  7288  00F3DF  25                 	db	37
  7289  00F3E0  58                 	db	88	;'X'
  7290  00F3E1  20                 	db	32
  7291  00F3E2  28                 	db	40
  7292  00F3E3  25                 	db	37
  7293  00F3E4  75                 	db	117	;'u'
  7294  00F3E5  20                 	db	32
  7295  00F3E6  4C                 	db	76	;'L'
  7296  00F3E7  53                 	db	83	;'S'
  7297  00F3E8  42                 	db	66	;'B'
  7298  00F3E9  73                 	db	115	;'s'
  7299  00F3EA  29                 	db	41
  7300  00F3EB  20                 	db	32
  7301  00F3EC  0A                 	db	10
  7302  00F3ED  0D                 	db	13
  7303  00F3EE  00                 	db	0
  7304  00F3EF                     STR_74:
  7305  00F3EF  56                 	db	86	;'V'
  7306  00F3F0  43                 	db	67	;'C'
  7307  00F3F1  43                 	db	67	;'C'
  7308  00F3F2  20                 	db	32
  7309  00F3F3  4F                 	db	79	;'O'
  7310  00F3F4  76                 	db	118	;'v'
  7311  00F3F5  65                 	db	101	;'e'
  7312  00F3F6  72                 	db	114	;'r'
  7313  00F3F7  76                 	db	118	;'v'
  7314  00F3F8  6F                 	db	111	;'o'
  7315  00F3F9  6C                 	db	108	;'l'
  7316  00F3FA  74                 	db	116	;'t'
  7317  00F3FB  61                 	db	97	;'a'
  7318  00F3FC  67                 	db	103	;'g'
  7319  00F3FD  65                 	db	101	;'e'
  7320  00F3FE  20                 	db	32
  7321  00F3FF  63                 	db	99	;'c'
  7322  00F400  6F                 	db	111	;'o'
  7323  00F401  6E                 	db	110	;'n'
  7324  00F402  64                 	db	100	;'d'
  7325  00F403  69                 	db	105	;'i'
  7326  00F404  74                 	db	116	;'t'
  7327  00F405  69                 	db	105	;'i'
  7328  00F406  6F                 	db	111	;'o'
  7329  00F407  6E                 	db	110	;'n'
  7330  00F408  20                 	db	32
  7331  00F409  68                 	db	104	;'h'
  7332  00F40A  61                 	db	97	;'a'
  7333  00F40B  73                 	db	115	;'s'
  7334  00F40C  20                 	db	32
  7335  00F40D  6F                 	db	111	;'o'
  7336  00F40E  63                 	db	99	;'c'
  7337  00F40F  63                 	db	99	;'c'
  7338  00F410  75                 	db	117	;'u'
  7339  00F411  72                 	db	114	;'r'
  7340  00F412  72                 	db	114	;'r'
  7341  00F413  65                 	db	101	;'e'
  7342  00F414  64                 	db	100	;'d'
  7343  00F415  20                 	db	32
  7344  00F416  28                 	db	40
  7345  00F417  56                 	db	86	;'V'
  7346  00F418  43                 	db	67	;'C'
  7347  00F419  43                 	db	67	;'C'
  7348  00F41A  20                 	db	32
  7349  00F41B  68                 	db	104	;'h'
  7350  00F41C  61                 	db	97	;'a'
  7351  00F41D  73                 	db	115	;'s'
  7352  00F41E  20                 	db	32
  7353  00F41F  65                 	db	101	;'e'
  7354  00F420  78                 	db	120	;'x'
  7355  00F421  63                 	db	99	;'c'
  7356  00F422  65                 	db	101	;'e'
  7357  00F423  65                 	db	101	;'e'
  7358  00F424  64                 	db	100	;'d'
  7359  00F425  65                 	db	101	;'e'
  7360  00F426  64                 	db	100	;'d'
  7361  00F427  20                 	db	32
  7362  00F428  33                 	db	51	;'3'
  7363  00F429  2E                 	db	46
  7364  00F42A  36                 	db	54	;'6'
  7365  00F42B  30                 	db	48	;'0'
  7366  00F42C  56                 	db	86	;'V'
  7367  00F42D  29                 	db	41
  7368  00F42E  0A                 	db	10
  7369  00F42F  0D                 	db	13
  7370  00F430  00                 	db	0
  7371  00F431                     STR_58:
  7372  00F431  54                 	db	84	;'T'
  7373  00F432  68                 	db	104	;'h'
  7374  00F433  65                 	db	101	;'e'
  7375  00F434  20                 	db	32
  7376  00F435  66                 	db	102	;'f'
  7377  00F436  6F                 	db	111	;'o'
  7378  00F437  6C                 	db	108	;'l'
  7379  00F438  6C                 	db	108	;'l'
  7380  00F439  6F                 	db	111	;'o'
  7381  00F43A  77                 	db	119	;'w'
  7382  00F43B  69                 	db	105	;'i'
  7383  00F43C  6E                 	db	110	;'n'
  7384  00F43D  67                 	db	103	;'g'
  7385  00F43E  20                 	db	32
  7386  00F43F  55                 	db	85	;'U'
  7387  00F440  73                 	db	115	;'s'
  7388  00F441  65                 	db	101	;'e'
  7389  00F442  72                 	db	114	;'r'
  7390  00F443  20                 	db	32
  7391  00F444  49                 	db	73	;'I'
  7392  00F445  44                 	db	68	;'D'
  7393  00F446  73                 	db	115	;'s'
  7394  00F447  20                 	db	32
  7395  00F448  68                 	db	104	;'h'
  7396  00F449  61                 	db	97	;'a'
  7397  00F44A  76                 	db	118	;'v'
  7398  00F44B  65                 	db	101	;'e'
  7399  00F44C  20                 	db	32
  7400  00F44D  62                 	db	98	;'b'
  7401  00F44E  65                 	db	101	;'e'
  7402  00F44F  65                 	db	101	;'e'
  7403  00F450  6E                 	db	110	;'n'
  7404  00F451  20                 	db	32
  7405  00F452  72                 	db	114	;'r'
  7406  00F453  65                 	db	101	;'e'
  7407  00F454  74                 	db	116	;'t'
  7408  00F455  72                 	db	114	;'r'
  7409  00F456  69                 	db	105	;'i'
  7410  00F457  65                 	db	101	;'e'
  7411  00F458  76                 	db	118	;'v'
  7412  00F459  65                 	db	101	;'e'
  7413  00F45A  64                 	db	100	;'d'
  7414  00F45B  20                 	db	32
  7415  00F45C  66                 	db	102	;'f'
  7416  00F45D  72                 	db	114	;'r'
  7417  00F45E  6F                 	db	111	;'o'
  7418  00F45F  6D                 	db	109	;'m'
  7419  00F460  20                 	db	32
  7420  00F461  66                 	db	102	;'f'
  7421  00F462  6C                 	db	108	;'l'
  7422  00F463  61                 	db	97	;'a'
  7423  00F464  73                 	db	115	;'s'
  7424  00F465  68                 	db	104	;'h'
  7425  00F466  20                 	db	32
  7426  00F467  6D                 	db	109	;'m'
  7427  00F468  65                 	db	101	;'e'
  7428  00F469  6D                 	db	109	;'m'
  7429  00F46A  6F                 	db	111	;'o'
  7430  00F46B  72                 	db	114	;'r'
  7431  00F46C  79                 	db	121	;'y'
  7432  00F46D  3A                 	db	58	;':'
  7433  00F46E  0A                 	db	10
  7434  00F46F  0D                 	db	13
  7435  00F470  00                 	db	0
  7436  00F471                     STR_114:
  7437  00F471  43                 	db	67	;'C'
  7438  00F472  61                 	db	97	;'a'
  7439  00F473  6C                 	db	108	;'l'
  7440  00F474  63                 	db	99	;'c'
  7441  00F475  75                 	db	117	;'u'
  7442  00F476  6C                 	db	108	;'l'
  7443  00F477  61                 	db	97	;'a'
  7444  00F478  74                 	db	116	;'t'
  7445  00F479  65                 	db	101	;'e'
  7446  00F47A  64                 	db	100	;'d'
  7447  00F47B  20                 	db	32
  7448  00F47C  54                 	db	84	;'T'
  7449  00F47D  52                 	db	82	;'R'
  7450  00F47E  49                 	db	73	;'I'
  7451  00F47F  41                 	db	65	;'A'
  7452  00F480  43                 	db	67	;'C'
  7453  00F481  20                 	db	32
  7454  00F482  66                 	db	102	;'f'
  7455  00F483  69                 	db	105	;'i'
  7456  00F484  72                 	db	114	;'r'
  7457  00F485  69                 	db	105	;'i'
  7458  00F486  6E                 	db	110	;'n'
  7459  00F487  67                 	db	103	;'g'
  7460  00F488  20                 	db	32
  7461  00F489  61                 	db	97	;'a'
  7462  00F48A  6E                 	db	110	;'n'
  7463  00F48B  67                 	db	103	;'g'
  7464  00F48C  6C                 	db	108	;'l'
  7465  00F48D  65                 	db	101	;'e'
  7466  00F48E  20                 	db	32
  7467  00F48F  69                 	db	105	;'i'
  7468  00F490  73                 	db	115	;'s'
  7469  00F491  20                 	db	32
  7470  00F492  25                 	db	37
  7471  00F493  2E                 	db	46
  7472  00F494  33                 	db	51	;'3'
  7473  00F495  66                 	db	102	;'f'
  7474  00F496  20                 	db	32
  7475  00F497  72                 	db	114	;'r'
  7476  00F498  61                 	db	97	;'a'
  7477  00F499  64                 	db	100	;'d'
  7478  00F49A  69                 	db	105	;'i'
  7479  00F49B  61                 	db	97	;'a'
  7480  00F49C  6E                 	db	110	;'n'
  7481  00F49D  73                 	db	115	;'s'
  7482  00F49E  20                 	db	32
  7483  00F49F  28                 	db	40
  7484  00F4A0  25                 	db	37
  7485  00F4A1  2E                 	db	46
  7486  00F4A2  33                 	db	51	;'3'
  7487  00F4A3  66                 	db	102	;'f'
  7488  00F4A4  20                 	db	32
  7489  00F4A5  64                 	db	100	;'d'
  7490  00F4A6  65                 	db	101	;'e'
  7491  00F4A7  67                 	db	103	;'g'
  7492  00F4A8  72                 	db	114	;'r'
  7493  00F4A9  65                 	db	101	;'e'
  7494  00F4AA  65                 	db	101	;'e'
  7495  00F4AB  73                 	db	115	;'s'
  7496  00F4AC  29                 	db	41
  7497  00F4AD  0A                 	db	10
  7498  00F4AE  0D                 	db	13
  7499  00F4AF  00                 	db	0
  7500  00F4B0                     STR_147:
  7501  00F4B0  53                 	db	83	;'S'
  7502  00F4B1  79                 	db	121	;'y'
  7503  00F4B2  73                 	db	115	;'s'
  7504  00F4B3  74                 	db	116	;'t'
  7505  00F4B4  65                 	db	101	;'e'
  7506  00F4B5  6D                 	db	109	;'m'
  7507  00F4B6  20                 	db	32
  7508  00F4B7  70                 	db	112	;'p'
  7509  00F4B8  61                 	db	97	;'a'
  7510  00F4B9  72                 	db	114	;'r'
  7511  00F4BA  61                 	db	97	;'a'
  7512  00F4BB  6D                 	db	109	;'m'
  7513  00F4BC  65                 	db	101	;'e'
  7514  00F4BD  74                 	db	116	;'t'
  7515  00F4BE  65                 	db	101	;'e'
  7516  00F4BF  72                 	db	114	;'r'
  7517  00F4C0  73                 	db	115	;'s'
  7518  00F4C1  20                 	db	32
  7519  00F4C2  61                 	db	97	;'a'
  7520  00F4C3  6E                 	db	110	;'n'
  7521  00F4C4  64                 	db	100	;'d'
  7522  00F4C5  20                 	db	32
  7523  00F4C6  61                 	db	97	;'a'
  7524  00F4C7  66                 	db	102	;'f'
  7525  00F4C8  66                 	db	102	;'f'
  7526  00F4C9  69                 	db	105	;'i'
  7527  00F4CA  72                 	db	114	;'r'
  7528  00F4CB  6D                 	db	109	;'m'
  7529  00F4CC  61                 	db	97	;'a'
  7530  00F4CD  74                 	db	116	;'t'
  7531  00F4CE  69                 	db	105	;'i'
  7532  00F4CF  76                 	db	118	;'v'
  7533  00F4D0  65                 	db	101	;'e'
  7534  00F4D1  20                 	db	32
  7535  00F4D2  72                 	db	114	;'r'
  7536  00F4D3  65                 	db	101	;'e'
  7537  00F4D4  73                 	db	115	;'s'
  7538  00F4D5  70                 	db	112	;'p'
  7539  00F4D6  6F                 	db	111	;'o'
  7540  00F4D7  6E                 	db	110	;'n'
  7541  00F4D8  73                 	db	115	;'s'
  7542  00F4D9  65                 	db	101	;'e'
  7543  00F4DA  73                 	db	115	;'s'
  7544  00F4DB  20                 	db	32
  7545  00F4DC  61                 	db	97	;'a'
  7546  00F4DD  70                 	db	112	;'p'
  7547  00F4DE  70                 	db	112	;'p'
  7548  00F4DF  65                 	db	101	;'e'
  7549  00F4E0  61                 	db	97	;'a'
  7550  00F4E1  72                 	db	114	;'r'
  7551  00F4E2  20                 	db	32
  7552  00F4E3  69                 	db	105	;'i'
  7553  00F4E4  6E                 	db	110	;'n'
  7554  00F4E5  20                 	db	32
  7555  00F4E6  67                 	db	103	;'g'
  7556  00F4E7  72                 	db	114	;'r'
  7557  00F4E8  65                 	db	101	;'e'
  7558  00F4E9  65                 	db	101	;'e'
  7559  00F4EA  6E                 	db	110	;'n'
  7560  00F4EB  0A                 	db	10
  7561  00F4EC  0D                 	db	13
  7562  00F4ED  00                 	db	0
  7563  00F4EE                     STR_56:
  7564  00F4EE  44                 	db	68	;'D'
  7565  00F4EF  65                 	db	101	;'e'
  7566  00F4F0  76                 	db	118	;'v'
  7567  00F4F1  69                 	db	105	;'i'
  7568  00F4F2  63                 	db	99	;'c'
  7569  00F4F3  65                 	db	101	;'e'
  7570  00F4F4  20                 	db	32
  7571  00F4F5  73                 	db	115	;'s'
  7572  00F4F6  69                 	db	105	;'i'
  7573  00F4F7  6C                 	db	108	;'l'
  7574  00F4F8  69                 	db	105	;'i'
  7575  00F4F9  63                 	db	99	;'c'
  7576  00F4FA  6F                 	db	111	;'o'
  7577  00F4FB  6E                 	db	110	;'n'
  7578  00F4FC  20                 	db	32
  7579  00F4FD  72                 	db	114	;'r'
  7580  00F4FE  65                 	db	101	;'e'
  7581  00F4FF  76                 	db	118	;'v'
  7582  00F500  69                 	db	105	;'i'
  7583  00F501  73                 	db	115	;'s'
  7584  00F502  69                 	db	105	;'i'
  7585  00F503  6F                 	db	111	;'o'
  7586  00F504  6E                 	db	110	;'n'
  7587  00F505  20                 	db	32
  7588  00F506  49                 	db	73	;'I'
  7589  00F507  44                 	db	68	;'D'
  7590  00F508  20                 	db	32
  7591  00F509  61                 	db	97	;'a'
  7592  00F50A  73                 	db	115	;'s'
  7593  00F50B  20                 	db	32
  7594  00F50C  73                 	db	115	;'s'
  7595  00F50D  74                 	db	116	;'t'
  7596  00F50E  6F                 	db	111	;'o'
  7597  00F50F  72                 	db	114	;'r'
  7598  00F510  65                 	db	101	;'e'
  7599  00F511  64                 	db	100	;'d'
  7600  00F512  20                 	db	32
  7601  00F513  69                 	db	105	;'i'
  7602  00F514  6E                 	db	110	;'n'
  7603  00F515  20                 	db	32
  7604  00F516  46                 	db	70	;'F'
  7605  00F517  6C                 	db	108	;'l'
  7606  00F518  61                 	db	97	;'a'
  7607  00F519  73                 	db	115	;'s'
  7608  00F51A  68                 	db	104	;'h'
  7609  00F51B  20                 	db	32
  7610  00F51C  69                 	db	105	;'i'
  7611  00F51D  73                 	db	115	;'s'
  7612  00F51E  3A                 	db	58	;':'
  7613  00F51F  20                 	db	32
  7614  00F520  25                 	db	37
  7615  00F521  63                 	db	99	;'c'
  7616  00F522  25                 	db	37
  7617  00F523  30                 	db	48	;'0'
  7618  00F524  33                 	db	51	;'3'
  7619  00F525  64                 	db	100	;'d'
  7620  00F526  0A                 	db	10
  7621  00F527  0D                 	db	13
  7622  00F528  00                 	db	0
  7623  00F529                     STR_117:
  7624  00F529  44                 	db	68	;'D'
  7625  00F52A  65                 	db	101	;'e'
  7626  00F52B  76                 	db	118	;'v'
  7627  00F52C  69                 	db	105	;'i'
  7628  00F52D  63                 	db	99	;'c'
  7629  00F52E  65                 	db	101	;'e'
  7630  00F52F  20                 	db	32
  7631  00F530  6F                 	db	111	;'o'
  7632  00F531  6E                 	db	110	;'n'
  7633  00F532  20                 	db	32
  7634  00F533  74                 	db	116	;'t'
  7635  00F534  69                 	db	105	;'i'
  7636  00F535  6D                 	db	109	;'m'
  7637  00F536  65                 	db	101	;'e'
  7638  00F537  20                 	db	32
  7639  00F538  73                 	db	115	;'s'
  7640  00F539  69                 	db	105	;'i'
  7641  00F53A  6E                 	db	110	;'n'
  7642  00F53B  63                 	db	99	;'c'
  7643  00F53C  65                 	db	101	;'e'
  7644  00F53D  20                 	db	32
  7645  00F53E  6C                 	db	108	;'l'
  7646  00F53F  61                 	db	97	;'a'
  7647  00F540  73                 	db	115	;'s'
  7648  00F541  74                 	db	116	;'t'
  7649  00F542  20                 	db	32
  7650  00F543  72                 	db	114	;'r'
  7651  00F544  65                 	db	101	;'e'
  7652  00F545  73                 	db	115	;'s'
  7653  00F546  65                 	db	101	;'e'
  7654  00F547  74                 	db	116	;'t'
  7655  00F548  20                 	db	32
  7656  00F549  63                 	db	99	;'c'
  7657  00F54A  6F                 	db	111	;'o'
  7658  00F54B  6E                 	db	110	;'n'
  7659  00F54C  64                 	db	100	;'d'
  7660  00F54D  69                 	db	105	;'i'
  7661  00F54E  74                 	db	116	;'t'
  7662  00F54F  69                 	db	105	;'i'
  7663  00F550  6F                 	db	111	;'o'
  7664  00F551  6E                 	db	110	;'n'
  7665  00F552  20                 	db	32
  7666  00F553  69                 	db	105	;'i'
  7667  00F554  73                 	db	115	;'s'
  7668  00F555  20                 	db	32
  7669  00F556  25                 	db	37
  7670  00F557  64                 	db	100	;'d'
  7671  00F558  20                 	db	32
  7672  00F559  73                 	db	115	;'s'
  7673  00F55A  65                 	db	101	;'e'
  7674  00F55B  63                 	db	99	;'c'
  7675  00F55C  6F                 	db	111	;'o'
  7676  00F55D  6E                 	db	110	;'n'
  7677  00F55E  64                 	db	100	;'d'
  7678  00F55F  73                 	db	115	;'s'
  7679  00F560  0A                 	db	10
  7680  00F561  0D                 	db	13
  7681  00F562  00                 	db	0
  7682  00F563                     STR_83:
  7683  00F563  46                 	db	70	;'F'
  7684  00F564  69                 	db	105	;'i'
  7685  00F565  78                 	db	120	;'x'
  7686  00F566  65                 	db	101	;'e'
  7687  00F567  64                 	db	100	;'d'
  7688  00F568  20                 	db	32
  7689  00F569  56                 	db	86	;'V'
  7690  00F56A  6F                 	db	111	;'o'
  7691  00F56B  6C                 	db	108	;'l'
  7692  00F56C  74                 	db	116	;'t'
  7693  00F56D  61                 	db	97	;'a'
  7694  00F56E  67                 	db	103	;'g'
  7695  00F56F  65                 	db	101	;'e'
  7696  00F570  20                 	db	32
  7697  00F571  52                 	db	82	;'R'
  7698  00F572  65                 	db	101	;'e'
  7699  00F573  66                 	db	102	;'f'
  7700  00F574  65                 	db	101	;'e'
  7701  00F575  72                 	db	114	;'r'
  7702  00F576  65                 	db	101	;'e'
  7703  00F577  6E                 	db	110	;'n'
  7704  00F578  63                 	db	99	;'c'
  7705  00F579  65                 	db	101	;'e'
  7706  00F57A  20                 	db	32
  7707  00F57B  42                 	db	66	;'B'
  7708  00F57C  75                 	db	117	;'u'
  7709  00F57D  66                 	db	102	;'f'
  7710  00F57E  66                 	db	102	;'f'
  7711  00F57F  65                 	db	101	;'e'
  7712  00F580  72                 	db	114	;'r'
  7713  00F581  20                 	db	32
  7714  00F582  31                 	db	49	;'1'
  7715  00F583  20                 	db	32
  7716  00F584  6D                 	db	109	;'m'
  7717  00F585  65                 	db	101	;'e'
  7718  00F586  61                 	db	97	;'a'
  7719  00F587  73                 	db	115	;'s'
  7720  00F588  75                 	db	117	;'u'
  7721  00F589  72                 	db	114	;'r'
  7722  00F58A  65                 	db	101	;'e'
  7723  00F58B  64                 	db	100	;'d'
  7724  00F58C  20                 	db	32
  7725  00F58D  61                 	db	97	;'a'
  7726  00F58E  73                 	db	115	;'s'
  7727  00F58F  20                 	db	32
  7728  00F590  25                 	db	37
  7729  00F591  2E                 	db	46
  7730  00F592  33                 	db	51	;'3'
  7731  00F593  66                 	db	102	;'f'
  7732  00F594  20                 	db	32
  7733  00F595  56                 	db	86	;'V'
  7734  00F596  6F                 	db	111	;'o'
  7735  00F597  6C                 	db	108	;'l'
  7736  00F598  74                 	db	116	;'t'
  7737  00F599  73                 	db	115	;'s'
  7738  00F59A  0A                 	db	10
  7739  00F59B  0D                 	db	13
  7740  00F59C  00                 	db	0
  7741  00F59D                     STR_93:
  7742  00F59D  4F                 	db	79	;'O'
  7743  00F59E  75                 	db	117	;'u'
  7744  00F59F  74                 	db	116	;'t'
  7745  00F5A0  70                 	db	112	;'p'
  7746  00F5A1  75                 	db	117	;'u'
  7747  00F5A2  74                 	db	116	;'t'
  7748  00F5A3  20                 	db	32
  7749  00F5A4  70                 	db	112	;'p'
  7750  00F5A5  6F                 	db	111	;'o'
  7751  00F5A6  77                 	db	119	;'w'
  7752  00F5A7  65                 	db	101	;'e'
  7753  00F5A8  72                 	db	114	;'r'
  7754  00F5A9  20                 	db	32
  7755  00F5AA  63                 	db	99	;'c'
  7756  00F5AB  61                 	db	97	;'a'
  7757  00F5AC  6C                 	db	108	;'l'
  7758  00F5AD  63                 	db	99	;'c'
  7759  00F5AE  75                 	db	117	;'u'
  7760  00F5AF  6C                 	db	108	;'l'
  7761  00F5B0  61                 	db	97	;'a'
  7762  00F5B1  74                 	db	116	;'t'
  7763  00F5B2  65                 	db	101	;'e'
  7764  00F5B3  64                 	db	100	;'d'
  7765  00F5B4  20                 	db	32
  7766  00F5B5  61                 	db	97	;'a'
  7767  00F5B6  73                 	db	115	;'s'
  7768  00F5B7  20                 	db	32
  7769  00F5B8  25                 	db	37
  7770  00F5B9  2E                 	db	46
  7771  00F5BA  33                 	db	51	;'3'
  7772  00F5BB  66                 	db	102	;'f'
  7773  00F5BC  20                 	db	32
  7774  00F5BD  57                 	db	87	;'W'
  7775  00F5BE  61                 	db	97	;'a'
  7776  00F5BF  74                 	db	116	;'t'
  7777  00F5C0  74                 	db	116	;'t'
  7778  00F5C1  73                 	db	115	;'s'
  7779  00F5C2  20                 	db	32
  7780  00F5C3  66                 	db	102	;'f'
  7781  00F5C4  72                 	db	114	;'r'
  7782  00F5C5  6F                 	db	111	;'o'
  7783  00F5C6  6D                 	db	109	;'m'
  7784  00F5C7  20                 	db	32
  7785  00F5C8  52                 	db	82	;'R'
  7786  00F5C9  4D                 	db	77	;'M'
  7787  00F5CA  53                 	db	83	;'S'
  7788  00F5CB  20                 	db	32
  7789  00F5CC  76                 	db	118	;'v'
  7790  00F5CD  61                 	db	97	;'a'
  7791  00F5CE  6C                 	db	108	;'l'
  7792  00F5CF  75                 	db	117	;'u'
  7793  00F5D0  65                 	db	101	;'e'
  7794  00F5D1  73                 	db	115	;'s'
  7795  00F5D2  0A                 	db	10
  7796  00F5D3  0D                 	db	13
  7797  00F5D4  00                 	db	0
  7798  00F5D5                     STR_146:
  7799  00F5D5  48                 	db	72	;'H'
  7800  00F5D6  65                 	db	101	;'e'
  7801  00F5D7  6C                 	db	108	;'l'
  7802  00F5D8  70                 	db	112	;'p'
  7803  00F5D9  20                 	db	32
  7804  00F5DA  6D                 	db	109	;'m'
  7805  00F5DB  65                 	db	101	;'e'
  7806  00F5DC  73                 	db	115	;'s'
  7807  00F5DD  73                 	db	115	;'s'
  7808  00F5DE  61                 	db	97	;'a'
  7809  00F5DF  67                 	db	103	;'g'
  7810  00F5E0  65                 	db	101	;'e'
  7811  00F5E1  73                 	db	115	;'s'
  7812  00F5E2  20                 	db	32
  7813  00F5E3  61                 	db	97	;'a'
  7814  00F5E4  6E                 	db	110	;'n'
  7815  00F5E5  64                 	db	100	;'d'
  7816  00F5E6  20                 	db	32
  7817  00F5E7  6E                 	db	110	;'n'
  7818  00F5E8  65                 	db	101	;'e'
  7819  00F5E9  75                 	db	117	;'u'
  7820  00F5EA  74                 	db	116	;'t'
  7821  00F5EB  72                 	db	114	;'r'
  7822  00F5EC  61                 	db	97	;'a'
  7823  00F5ED  6C                 	db	108	;'l'
  7824  00F5EE  20                 	db	32
  7825  00F5EF  72                 	db	114	;'r'
  7826  00F5F0  65                 	db	101	;'e'
  7827  00F5F1  73                 	db	115	;'s'
  7828  00F5F2  70                 	db	112	;'p'
  7829  00F5F3  6F                 	db	111	;'o'
  7830  00F5F4  6E                 	db	110	;'n'
  7831  00F5F5  73                 	db	115	;'s'
  7832  00F5F6  65                 	db	101	;'e'
  7833  00F5F7  73                 	db	115	;'s'
  7834  00F5F8  20                 	db	32
  7835  00F5F9  61                 	db	97	;'a'
  7836  00F5FA  70                 	db	112	;'p'
  7837  00F5FB  70                 	db	112	;'p'
  7838  00F5FC  65                 	db	101	;'e'
  7839  00F5FD  61                 	db	97	;'a'
  7840  00F5FE  72                 	db	114	;'r'
  7841  00F5FF  20                 	db	32
  7842  00F600  69                 	db	105	;'i'
  7843  00F601  6E                 	db	110	;'n'
  7844  00F602  20                 	db	32
  7845  00F603  79                 	db	121	;'y'
  7846  00F604  65                 	db	101	;'e'
  7847  00F605  6C                 	db	108	;'l'
  7848  00F606  6C                 	db	108	;'l'
  7849  00F607  6F                 	db	111	;'o'
  7850  00F608  77                 	db	119	;'w'
  7851  00F609  0A                 	db	10
  7852  00F60A  0D                 	db	13
  7853  00F60B  00                 	db	0
  7854  00F60C                     STR_133:
  7855  00F60C  4D                 	db	77	;'M'
  7856  00F60D  61                 	db	97	;'a'
  7857  00F60E  78                 	db	120	;'x'
  7858  00F60F  69                 	db	105	;'i'
  7859  00F610  6D                 	db	109	;'m'
  7860  00F611  75                 	db	117	;'u'
  7861  00F612  6D                 	db	109	;'m'
  7862  00F613  20                 	db	32
  7863  00F614  72                 	db	114	;'r'
  7864  00F615  65                 	db	101	;'e'
  7865  00F616  63                 	db	99	;'c'
  7866  00F617  6F                 	db	111	;'o'
  7867  00F618  72                 	db	114	;'r'
  7868  00F619  64                 	db	100	;'d'
  7869  00F61A  65                 	db	101	;'e'
  7870  00F61B  64                 	db	100	;'d'
  7871  00F61C  20                 	db	32
  7872  00F61D  76                 	db	118	;'v'
  7873  00F61E  61                 	db	97	;'a'
  7874  00F61F  6C                 	db	108	;'l'
  7875  00F620  75                 	db	117	;'u'
  7876  00F621  65                 	db	101	;'e'
  7877  00F622  73                 	db	115	;'s'
  7878  00F623  20                 	db	32
  7879  00F624  65                 	db	101	;'e'
  7880  00F625  72                 	db	114	;'r'
  7881  00F626  61                 	db	97	;'a'
  7882  00F627  73                 	db	115	;'s'
  7883  00F628  65                 	db	101	;'e'
  7884  00F629  64                 	db	100	;'d'
  7885  00F62A  20                 	db	32
  7886  00F62B  66                 	db	102	;'f'
  7887  00F62C  72                 	db	114	;'r'
  7888  00F62D  6F                 	db	111	;'o'
  7889  00F62E  6D                 	db	109	;'m'
  7890  00F62F  20                 	db	32
  7891  00F630  53                 	db	83	;'S'
  7892  00F631  52                 	db	82	;'R'
  7893  00F632  41                 	db	65	;'A'
  7894  00F633  4D                 	db	77	;'M'
  7895  00F634  20                 	db	32
  7896  00F635  61                 	db	97	;'a'
  7897  00F636  6E                 	db	110	;'n'
  7898  00F637  64                 	db	100	;'d'
  7899  00F638  20                 	db	32
  7900  00F639  45                 	db	69	;'E'
  7901  00F63A  45                 	db	69	;'E'
  7902  00F63B  50                 	db	80	;'P'
  7903  00F63C  52                 	db	82	;'R'
  7904  00F63D  4F                 	db	79	;'O'
  7905  00F63E  4D                 	db	77	;'M'
  7906  00F63F  0A                 	db	10
  7907  00F640  0D                 	db	13
  7908  00F641  00                 	db	0
  7909  00F642                     STR_59:
  7910  00F642  20                 	db	32
  7911  00F643  20                 	db	32
  7912  00F644  20                 	db	32
  7913  00F645  20                 	db	32
  7914  00F646  55                 	db	85	;'U'
  7915  00F647  73                 	db	115	;'s'
  7916  00F648  65                 	db	101	;'e'
  7917  00F649  72                 	db	114	;'r'
  7918  00F64A  20                 	db	32
  7919  00F64B  49                 	db	73	;'I'
  7920  00F64C  44                 	db	68	;'D'
  7921  00F64D  20                 	db	32
  7922  00F64E  57                 	db	87	;'W'
  7923  00F64F  6F                 	db	111	;'o'
  7924  00F650  72                 	db	114	;'r'
  7925  00F651  64                 	db	100	;'d'
  7926  00F652  20                 	db	32
  7927  00F653  25                 	db	37
  7928  00F654  64                 	db	100	;'d'
  7929  00F655  20                 	db	32
  7930  00F656  28                 	db	40
  7931  00F657  46                 	db	70	;'F'
  7932  00F658  6C                 	db	108	;'l'
  7933  00F659  61                 	db	97	;'a'
  7934  00F65A  73                 	db	115	;'s'
  7935  00F65B  68                 	db	104	;'h'
  7936  00F65C  20                 	db	32
  7937  00F65D  61                 	db	97	;'a'
  7938  00F65E  64                 	db	100	;'d'
  7939  00F65F  64                 	db	100	;'d'
  7940  00F660  72                 	db	114	;'r'
  7941  00F661  65                 	db	101	;'e'
  7942  00F662  73                 	db	115	;'s'
  7943  00F663  73                 	db	115	;'s'
  7944  00F664  20                 	db	32
  7945  00F665  30                 	db	48	;'0'
  7946  00F666  78                 	db	120	;'x'
  7947  00F667  32                 	db	50	;'2'
  7948  00F668  30                 	db	48	;'0'
  7949  00F669  30                 	db	48	;'0'
  7950  00F66A  30                 	db	48	;'0'
  7951  00F66B  30                 	db	48	;'0'
  7952  00F66C  25                 	db	37
  7953  00F66D  58                 	db	88	;'X'
  7954  00F66E  29                 	db	41
  7955  00F66F  3A                 	db	58	;':'
  7956  00F670  20                 	db	32
  7957  00F671  30                 	db	48	;'0'
  7958  00F672  78                 	db	120	;'x'
  7959  00F673  25                 	db	37
  7960  00F674  58                 	db	88	;'X'
  7961  00F675  0A                 	db	10
  7962  00F676  0D                 	db	13
  7963  00F677  00                 	db	0
  7964  00F678                     STR_131:
  7965  00F678  4D                 	db	77	;'M'
  7966  00F679  61                 	db	97	;'a'
  7967  00F67A  78                 	db	120	;'x'
  7968  00F67B  69                 	db	105	;'i'
  7969  00F67C  6D                 	db	109	;'m'
  7970  00F67D  75                 	db	117	;'u'
  7971  00F67E  6D                 	db	109	;'m'
  7972  00F67F  20                 	db	32
  7973  00F680  72                 	db	114	;'r'
  7974  00F681  65                 	db	101	;'e'
  7975  00F682  63                 	db	99	;'c'
  7976  00F683  6F                 	db	111	;'o'
  7977  00F684  72                 	db	114	;'r'
  7978  00F685  64                 	db	100	;'d'
  7979  00F686  65                 	db	101	;'e'
  7980  00F687  64                 	db	100	;'d'
  7981  00F688  20                 	db	32
  7982  00F689  46                 	db	70	;'F'
  7983  00F68A  56                 	db	86	;'V'
  7984  00F68B  52                 	db	82	;'R'
  7985  00F68C  20                 	db	32
  7986  00F68D  62                 	db	98	;'b'
  7987  00F68E  75                 	db	117	;'u'
  7988  00F68F  66                 	db	102	;'f'
  7989  00F690  66                 	db	102	;'f'
  7990  00F691  65                 	db	101	;'e'
  7991  00F692  72                 	db	114	;'r'
  7992  00F693  20                 	db	32
  7993  00F694  31                 	db	49	;'1'
  7994  00F695  20                 	db	32
  7995  00F696  76                 	db	118	;'v'
  7996  00F697  6F                 	db	111	;'o'
  7997  00F698  6C                 	db	108	;'l'
  7998  00F699  74                 	db	116	;'t'
  7999  00F69A  61                 	db	97	;'a'
  8000  00F69B  67                 	db	103	;'g'
  8001  00F69C  65                 	db	101	;'e'
  8002  00F69D  20                 	db	32
  8003  00F69E  69                 	db	105	;'i'
  8004  00F69F  73                 	db	115	;'s'
  8005  00F6A0  20                 	db	32
  8006  00F6A1  25                 	db	37
  8007  00F6A2  2E                 	db	46
  8008  00F6A3  33                 	db	51	;'3'
  8009  00F6A4  66                 	db	102	;'f'
  8010  00F6A5  20                 	db	32
  8011  00F6A6  56                 	db	86	;'V'
  8012  00F6A7  6F                 	db	111	;'o'
  8013  00F6A8  6C                 	db	108	;'l'
  8014  00F6A9  74                 	db	116	;'t'
  8015  00F6AA  73                 	db	115	;'s'
  8016  00F6AB  0A                 	db	10
  8017  00F6AC  0D                 	db	13
  8018  00F6AD  00                 	db	0
  8019  00F6AE                     STR_105:
  8020  00F6AE  4C                 	db	76	;'L'
  8021  00F6AF  6F                 	db	111	;'o'
  8022  00F6B0  61                 	db	97	;'a'
  8023  00F6B1  64                 	db	100	;'d'
  8024  00F6B2  20                 	db	32
  8025  00F6B3  69                 	db	105	;'i'
  8026  00F6B4  73                 	db	115	;'s'
  8027  00F6B5  20                 	db	32
  8028  00F6B6  63                 	db	99	;'c'
  8029  00F6B7  75                 	db	117	;'u'
  8030  00F6B8  72                 	db	114	;'r'
  8031  00F6B9  72                 	db	114	;'r'
  8032  00F6BA  65                 	db	101	;'e'
  8033  00F6BB  6E                 	db	110	;'n'
  8034  00F6BC  74                 	db	116	;'t'
  8035  00F6BD  6C                 	db	108	;'l'
  8036  00F6BE  79                 	db	121	;'y'
  8037  00F6BF  20                 	db	32
  8038  00F6C0  65                 	db	101	;'e'
  8039  00F6C1  6E                 	db	110	;'n'
  8040  00F6C2  61                 	db	97	;'a'
  8041  00F6C3  62                 	db	98	;'b'
  8042  00F6C4  6C                 	db	108	;'l'
  8043  00F6C5  65                 	db	101	;'e'
  8044  00F6C6  64                 	db	100	;'d'
  8045  00F6C7  2C                 	db	44
  8046  00F6C8  20                 	db	32
  8047  00F6C9  62                 	db	98	;'b'
  8048  00F6CA  75                 	db	117	;'u'
  8049  00F6CB  74                 	db	116	;'t'
  8050  00F6CC  20                 	db	32
  8051  00F6CD  64                 	db	100	;'d'
  8052  00F6CE  69                 	db	105	;'i'
  8053  00F6CF  6D                 	db	109	;'m'
  8054  00F6D0  6D                 	db	109	;'m'
  8055  00F6D1  69                 	db	105	;'i'
  8056  00F6D2  6E                 	db	110	;'n'
  8057  00F6D3  67                 	db	103	;'g'
  8058  00F6D4  20                 	db	32
  8059  00F6D5  69                 	db	105	;'i'
  8060  00F6D6  73                 	db	115	;'s'
  8061  00F6D7  20                 	db	32
  8062  00F6D8  64                 	db	100	;'d'
  8063  00F6D9  69                 	db	105	;'i'
  8064  00F6DA  73                 	db	115	;'s'
  8065  00F6DB  61                 	db	97	;'a'
  8066  00F6DC  62                 	db	98	;'b'
  8067  00F6DD  6C                 	db	108	;'l'
  8068  00F6DE  65                 	db	101	;'e'
  8069  00F6DF  64                 	db	100	;'d'
  8070  00F6E0  0A                 	db	10
  8071  00F6E1  0D                 	db	13
  8072  00F6E2  00                 	db	0
  8073  00F6E3                     STR_119:
  8074  00F6E3  4C                 	db	76	;'L'
  8075  00F6E4  6F                 	db	111	;'o'
  8076  00F6E5  61                 	db	97	;'a'
  8077  00F6E6  64                 	db	100	;'d'
  8078  00F6E7  20                 	db	32
  8079  00F6E8  6F                 	db	111	;'o'
  8080  00F6E9  6E                 	db	110	;'n'
  8081  00F6EA  20                 	db	32
  8082  00F6EB  74                 	db	116	;'t'
  8083  00F6EC  69                 	db	105	;'i'
  8084  00F6ED  6D                 	db	109	;'m'
  8085  00F6EE  65                 	db	101	;'e'
  8086  00F6EF  20                 	db	32
  8087  00F6F0  73                 	db	115	;'s'
  8088  00F6F1  69                 	db	105	;'i'
  8089  00F6F2  6E                 	db	110	;'n'
  8090  00F6F3  63                 	db	99	;'c'
  8091  00F6F4  65                 	db	101	;'e'
  8092  00F6F5  20                 	db	32
  8093  00F6F6  6C                 	db	108	;'l'
  8094  00F6F7  61                 	db	97	;'a'
  8095  00F6F8  73                 	db	115	;'s'
  8096  00F6F9  74                 	db	116	;'t'
  8097  00F6FA  20                 	db	32
  8098  00F6FB  64                 	db	100	;'d'
  8099  00F6FC  65                 	db	101	;'e'
  8100  00F6FD  76                 	db	118	;'v'
  8101  00F6FE  69                 	db	105	;'i'
  8102  00F6FF  63                 	db	99	;'c'
  8103  00F700  65                 	db	101	;'e'
  8104  00F701  20                 	db	32
  8105  00F702  72                 	db	114	;'r'
  8106  00F703  65                 	db	101	;'e'
  8107  00F704  73                 	db	115	;'s'
  8108  00F705  65                 	db	101	;'e'
  8109  00F706  74                 	db	116	;'t'
  8110  00F707  20                 	db	32
  8111  00F708  69                 	db	105	;'i'
  8112  00F709  73                 	db	115	;'s'
  8113  00F70A  20                 	db	32
  8114  00F70B  25                 	db	37
  8115  00F70C  64                 	db	100	;'d'
  8116  00F70D  20                 	db	32
  8117  00F70E  73                 	db	115	;'s'
  8118  00F70F  65                 	db	101	;'e'
  8119  00F710  63                 	db	99	;'c'
  8120  00F711  6F                 	db	111	;'o'
  8121  00F712  6E                 	db	110	;'n'
  8122  00F713  64                 	db	100	;'d'
  8123  00F714  73                 	db	115	;'s'
  8124  00F715  0A                 	db	10
  8125  00F716  0D                 	db	13
  8126  00F717  00                 	db	0
  8127  00F718                     STR_48:
  8128  00F718  54                 	db	84	;'T'
  8129  00F719  68                 	db	104	;'h'
  8130  00F71A  65                 	db	101	;'e'
  8131  00F71B  20                 	db	32
  8132  00F71C  63                 	db	99	;'c'
  8133  00F71D  61                 	db	97	;'a'
  8134  00F71E  75                 	db	117	;'u'
  8135  00F71F  73                 	db	115	;'s'
  8136  00F720  65                 	db	101	;'e'
  8137  00F721  20                 	db	32
  8138  00F722  6F                 	db	111	;'o'
  8139  00F723  66                 	db	102	;'f'
  8140  00F724  20                 	db	32
  8141  00F725  74                 	db	116	;'t'
  8142  00F726  68                 	db	104	;'h'
  8143  00F727  65                 	db	101	;'e'
  8144  00F728  20                 	db	32
  8145  00F729  6D                 	db	109	;'m'
  8146  00F72A  6F                 	db	111	;'o'
  8147  00F72B  73                 	db	115	;'s'
  8148  00F72C  74                 	db	116	;'t'
  8149  00F72D  20                 	db	32
  8150  00F72E  72                 	db	114	;'r'
  8151  00F72F  65                 	db	101	;'e'
  8152  00F730  63                 	db	99	;'c'
  8153  00F731  65                 	db	101	;'e'
  8154  00F732  6E                 	db	110	;'n'
  8155  00F733  74                 	db	116	;'t'
  8156  00F734  20                 	db	32
  8157  00F735  64                 	db	100	;'d'
  8158  00F736  65                 	db	101	;'e'
  8159  00F737  76                 	db	118	;'v'
  8160  00F738  69                 	db	105	;'i'
  8161  00F739  63                 	db	99	;'c'
  8162  00F73A  65                 	db	101	;'e'
  8163  00F73B  20                 	db	32
  8164  00F73C  72                 	db	114	;'r'
  8165  00F73D  65                 	db	101	;'e'
  8166  00F73E  73                 	db	115	;'s'
  8167  00F73F  65                 	db	101	;'e'
  8168  00F740  74                 	db	116	;'t'
  8169  00F741  20                 	db	32
  8170  00F742  77                 	db	119	;'w'
  8171  00F743  61                 	db	97	;'a'
  8172  00F744  73                 	db	115	;'s'
  8173  00F745  3A                 	db	58	;':'
  8174  00F746  20                 	db	32
  8175  00F747  25                 	db	37
  8176  00F748  73                 	db	115	;'s'
  8177  00F749  0A                 	db	10
  8178  00F74A  0D                 	db	13
  8179  00F74B  00                 	db	0
  8180  00F74C                     STR_125:
  8181  00F74C  4D                 	db	77	;'M'
  8182  00F74D  61                 	db	97	;'a'
  8183  00F74E  78                 	db	120	;'x'
  8184  00F74F  69                 	db	105	;'i'
  8185  00F750  6D                 	db	109	;'m'
  8186  00F751  75                 	db	117	;'u'
  8187  00F752  6D                 	db	109	;'m'
  8188  00F753  20                 	db	32
  8189  00F754  72                 	db	114	;'r'
  8190  00F755  65                 	db	101	;'e'
  8191  00F756  63                 	db	99	;'c'
  8192  00F757  6F                 	db	111	;'o'
  8193  00F758  72                 	db	114	;'r'
  8194  00F759  64                 	db	100	;'d'
  8195  00F75A  65                 	db	101	;'e'
  8196  00F75B  64                 	db	100	;'d'
  8197  00F75C  20                 	db	32
  8198  00F75D  2B                 	db	43
  8199  00F75E  33                 	db	51	;'3'
  8200  00F75F  2E                 	db	46
  8201  00F760  33                 	db	51	;'3'
  8202  00F761  56                 	db	86	;'V'
  8203  00F762  20                 	db	32
  8204  00F763  72                 	db	114	;'r'
  8205  00F764  61                 	db	97	;'a'
  8206  00F765  69                 	db	105	;'i'
  8207  00F766  6C                 	db	108	;'l'
  8208  00F767  20                 	db	32
  8209  00F768  76                 	db	118	;'v'
  8210  00F769  6F                 	db	111	;'o'
  8211  00F76A  6C                 	db	108	;'l'
  8212  00F76B  74                 	db	116	;'t'
  8213  00F76C  61                 	db	97	;'a'
  8214  00F76D  67                 	db	103	;'g'
  8215  00F76E  65                 	db	101	;'e'
  8216  00F76F  20                 	db	32
  8217  00F770  69                 	db	105	;'i'
  8218  00F771  73                 	db	115	;'s'
  8219  00F772  20                 	db	32
  8220  00F773  25                 	db	37
  8221  00F774  2E                 	db	46
  8222  00F775  33                 	db	51	;'3'
  8223  00F776  66                 	db	102	;'f'
  8224  00F777  20                 	db	32
  8225  00F778  56                 	db	86	;'V'
  8226  00F779  6F                 	db	111	;'o'
  8227  00F77A  6C                 	db	108	;'l'
  8228  00F77B  74                 	db	116	;'t'
  8229  00F77C  73                 	db	115	;'s'
  8230  00F77D  0A                 	db	10
  8231  00F77E  0D                 	db	13
  8232  00F77F  00                 	db	0
  8233  00F780                     STR_121:
  8234  00F780  4D                 	db	77	;'M'
  8235  00F781  61                 	db	97	;'a'
  8236  00F782  78                 	db	120	;'x'
  8237  00F783  69                 	db	105	;'i'
  8238  00F784  6D                 	db	109	;'m'
  8239  00F785  75                 	db	117	;'u'
  8240  00F786  6D                 	db	109	;'m'
  8241  00F787  20                 	db	32
  8242  00F788  72                 	db	114	;'r'
  8243  00F789  65                 	db	101	;'e'
  8244  00F78A  63                 	db	99	;'c'
  8245  00F78B  6F                 	db	111	;'o'
  8246  00F78C  72                 	db	114	;'r'
  8247  00F78D  64                 	db	100	;'d'
  8248  00F78E  65                 	db	101	;'e'
  8249  00F78F  64                 	db	100	;'d'
  8250  00F790  20                 	db	32
  8251  00F791  52                 	db	82	;'R'
  8252  00F792  4D                 	db	77	;'M'
  8253  00F793  53                 	db	83	;'S'
  8254  00F794  20                 	db	32
  8255  00F795  6F                 	db	111	;'o'
  8256  00F796  75                 	db	117	;'u'
  8257  00F797  74                 	db	116	;'t'
  8258  00F798  70                 	db	112	;'p'
  8259  00F799  75                 	db	117	;'u'
  8260  00F79A  74                 	db	116	;'t'
  8261  00F79B  20                 	db	32
  8262  00F79C  63                 	db	99	;'c'
  8263  00F79D  75                 	db	117	;'u'
  8264  00F79E  72                 	db	114	;'r'
  8265  00F79F  72                 	db	114	;'r'
  8266  00F7A0  65                 	db	101	;'e'
  8267  00F7A1  6E                 	db	110	;'n'
  8268  00F7A2  74                 	db	116	;'t'
  8269  00F7A3  20                 	db	32
  8270  00F7A4  69                 	db	105	;'i'
  8271  00F7A5  73                 	db	115	;'s'
  8272  00F7A6  20                 	db	32
  8273  00F7A7  25                 	db	37
  8274  00F7A8  2E                 	db	46
  8275  00F7A9  33                 	db	51	;'3'
  8276  00F7AA  66                 	db	102	;'f'
  8277  00F7AB  20                 	db	32
  8278  00F7AC  41                 	db	65	;'A'
  8279  00F7AD  72                 	db	114	;'r'
  8280  00F7AE  6D                 	db	109	;'m'
  8281  00F7AF  73                 	db	115	;'s'
  8282  00F7B0  0A                 	db	10
  8283  00F7B1  0D                 	db	13
  8284  00F7B2  00                 	db	0
  8285  00F7B3                     STR_127:
  8286  00F7B3  4D                 	db	77	;'M'
  8287  00F7B4  61                 	db	97	;'a'
  8288  00F7B5  78                 	db	120	;'x'
  8289  00F7B6  69                 	db	105	;'i'
  8290  00F7B7  6D                 	db	109	;'m'
  8291  00F7B8  75                 	db	117	;'u'
  8292  00F7B9  6D                 	db	109	;'m'
  8293  00F7BA  20                 	db	32
  8294  00F7BB  72                 	db	114	;'r'
  8295  00F7BC  65                 	db	101	;'e'
  8296  00F7BD  63                 	db	99	;'c'
  8297  00F7BE  6F                 	db	111	;'o'
  8298  00F7BF  72                 	db	114	;'r'
  8299  00F7C0  64                 	db	100	;'d'
  8300  00F7C1  65                 	db	101	;'e'
  8301  00F7C2  64                 	db	100	;'d'
  8302  00F7C3  20                 	db	32
  8303  00F7C4  2B                 	db	43
  8304  00F7C5  31                 	db	49	;'1'
  8305  00F7C6  32                 	db	50	;'2'
  8306  00F7C7  56                 	db	86	;'V'
  8307  00F7C8  20                 	db	32
  8308  00F7C9  72                 	db	114	;'r'
  8309  00F7CA  61                 	db	97	;'a'
  8310  00F7CB  69                 	db	105	;'i'
  8311  00F7CC  6C                 	db	108	;'l'
  8312  00F7CD  20                 	db	32
  8313  00F7CE  76                 	db	118	;'v'
  8314  00F7CF  6F                 	db	111	;'o'
  8315  00F7D0  6C                 	db	108	;'l'
  8316  00F7D1  74                 	db	116	;'t'
  8317  00F7D2  61                 	db	97	;'a'
  8318  00F7D3  67                 	db	103	;'g'
  8319  00F7D4  65                 	db	101	;'e'
  8320  00F7D5  20                 	db	32
  8321  00F7D6  69                 	db	105	;'i'
  8322  00F7D7  73                 	db	115	;'s'
  8323  00F7D8  20                 	db	32
  8324  00F7D9  25                 	db	37
  8325  00F7DA  2E                 	db	46
  8326  00F7DB  33                 	db	51	;'3'
  8327  00F7DC  66                 	db	102	;'f'
  8328  00F7DD  20                 	db	32
  8329  00F7DE  56                 	db	86	;'V'
  8330  00F7DF  6F                 	db	111	;'o'
  8331  00F7E0  6C                 	db	108	;'l'
  8332  00F7E1  74                 	db	116	;'t'
  8333  00F7E2  73                 	db	115	;'s'
  8334  00F7E3  0A                 	db	10
  8335  00F7E4  0D                 	db	13
  8336  00F7E5  00                 	db	0
  8337  00F7E6                     STR_69:
  8338  00F7E6  54                 	db	84	;'T'
  8339  00F7E7  68                 	db	104	;'h'
  8340  00F7E8  65                 	db	101	;'e'
  8341  00F7E9  20                 	db	32
  8342  00F7EA  66                 	db	102	;'f'
  8343  00F7EB  6F                 	db	111	;'o'
  8344  00F7EC  6C                 	db	108	;'l'
  8345  00F7ED  6C                 	db	108	;'l'
  8346  00F7EE  6F                 	db	111	;'o'
  8347  00F7EF  77                 	db	119	;'w'
  8348  00F7F0  69                 	db	105	;'i'
  8349  00F7F1  6E                 	db	110	;'n'
  8350  00F7F2  67                 	db	103	;'g'
  8351  00F7F3  20                 	db	32
  8352  00F7F4  63                 	db	99	;'c'
  8353  00F7F5  68                 	db	104	;'h'
  8354  00F7F6  61                 	db	97	;'a'
  8355  00F7F7  6E                 	db	110	;'n'
  8356  00F7F8  6E                 	db	110	;'n'
  8357  00F7F9  65                 	db	101	;'e'
  8358  00F7FA  6C                 	db	108	;'l'
  8359  00F7FB  20                 	db	32
  8360  00F7FC  63                 	db	99	;'c'
  8361  00F7FD  61                 	db	97	;'a'
  8362  00F7FE  75                 	db	117	;'u'
  8363  00F7FF  73                 	db	115	;'s'
  8364  00F800  65                 	db	101	;'e'
  8365  00F801  64                 	db	100	;'d'
  8366  00F802  20                 	db	32
  8367  00F803  61                 	db	97	;'a'
  8368  00F804  6E                 	db	110	;'n'
  8369  00F805  20                 	db	32
  8370  00F806  41                 	db	65	;'A'
  8371  00F807  44                 	db	68	;'D'
  8372  00F808  43                 	db	67	;'C'
  8373  00F809  20                 	db	32
  8374  00F80A  65                 	db	101	;'e'
  8375  00F80B  72                 	db	114	;'r'
  8376  00F80C  72                 	db	114	;'r'
  8377  00F80D  6F                 	db	111	;'o'
  8378  00F80E  72                 	db	114	;'r'
  8379  00F80F  3A                 	db	58	;':'
  8380  00F810  20                 	db	32
  8381  00F811  25                 	db	37
  8382  00F812  73                 	db	115	;'s'
  8383  00F813  0A                 	db	10
  8384  00F814  0D                 	db	13
  8385  00F815  00                 	db	0
  8386  00F816                     STR_52:
  8387  00F816  4D                 	db	77	;'M'
  8388  00F817  61                 	db	97	;'a'
  8389  00F818  72                 	db	114	;'r'
  8390  00F819  71                 	db	113	;'q'
  8391  00F81A  75                 	db	117	;'u'
  8392  00F81B  65                 	db	101	;'e'
  8393  00F81C  74                 	db	116	;'t'
  8394  00F81D  74                 	db	116	;'t'
  8395  00F81E  65                 	db	101	;'e'
  8396  00F81F  20                 	db	32
  8397  00F820  55                 	db	85	;'U'
  8398  00F821  6E                 	db	110	;'n'
  8399  00F822  69                 	db	105	;'i'
  8400  00F823  76                 	db	118	;'v'
  8401  00F824  65                 	db	101	;'e'
  8402  00F825  72                 	db	114	;'r'
  8403  00F826  73                 	db	115	;'s'
  8404  00F827  69                 	db	105	;'i'
  8405  00F828  74                 	db	116	;'t'
  8406  00F829  79                 	db	121	;'y'
  8407  00F82A  20                 	db	32
  8408  00F82B  45                 	db	69	;'E'
  8409  00F82C  4C                 	db	76	;'L'
  8410  00F82D  45                 	db	69	;'E'
  8411  00F82E  4E                 	db	78	;'N'
  8412  00F82F  20                 	db	32
  8413  00F830  33                 	db	51	;'3'
  8414  00F831  30                 	db	48	;'0'
  8415  00F832  33                 	db	51	;'3'
  8416  00F833  35                 	db	53	;'5'
  8417  00F834  20                 	db	32
  8418  00F835  46                 	db	70	;'F'
  8419  00F836  69                 	db	105	;'i'
  8420  00F837  6E                 	db	110	;'n'
  8421  00F838  61                 	db	97	;'a'
  8422  00F839  6C                 	db	108	;'l'
  8423  00F83A  20                 	db	32
  8424  00F83B  50                 	db	80	;'P'
  8425  00F83C  72                 	db	114	;'r'
  8426  00F83D  6F                 	db	111	;'o'
  8427  00F83E  6A                 	db	106	;'j'
  8428  00F83F  65                 	db	101	;'e'
  8429  00F840  63                 	db	99	;'c'
  8430  00F841  74                 	db	116	;'t'
  8431  00F842  0A                 	db	10
  8432  00F843  0D                 	db	13
  8433  00F844  00                 	db	0
  8434  00F845                     STR_149:
  8435  00F845  45                 	db	69	;'E'
  8436  00F846  72                 	db	114	;'r'
  8437  00F847  72                 	db	114	;'r'
  8438  00F848  6F                 	db	111	;'o'
  8439  00F849  72                 	db	114	;'r'
  8440  00F84A  73                 	db	115	;'s'
  8441  00F84B  20                 	db	32
  8442  00F84C  61                 	db	97	;'a'
  8443  00F84D  6E                 	db	110	;'n'
  8444  00F84E  64                 	db	100	;'d'
  8445  00F84F  20                 	db	32
  8446  00F850  6E                 	db	110	;'n'
  8447  00F851  65                 	db	101	;'e'
  8448  00F852  67                 	db	103	;'g'
  8449  00F853  61                 	db	97	;'a'
  8450  00F854  74                 	db	116	;'t'
  8451  00F855  69                 	db	105	;'i'
  8452  00F856  76                 	db	118	;'v'
  8453  00F857  65                 	db	101	;'e'
  8454  00F858  20                 	db	32
  8455  00F859  72                 	db	114	;'r'
  8456  00F85A  65                 	db	101	;'e'
  8457  00F85B  73                 	db	115	;'s'
  8458  00F85C  70                 	db	112	;'p'
  8459  00F85D  6F                 	db	111	;'o'
  8460  00F85E  6E                 	db	110	;'n'
  8461  00F85F  73                 	db	115	;'s'
  8462  00F860  65                 	db	101	;'e'
  8463  00F861  73                 	db	115	;'s'
  8464  00F862  20                 	db	32
  8465  00F863  61                 	db	97	;'a'
  8466  00F864  70                 	db	112	;'p'
  8467  00F865  70                 	db	112	;'p'
  8468  00F866  65                 	db	101	;'e'
  8469  00F867  61                 	db	97	;'a'
  8470  00F868  72                 	db	114	;'r'
  8471  00F869  20                 	db	32
  8472  00F86A  69                 	db	105	;'i'
  8473  00F86B  6E                 	db	110	;'n'
  8474  00F86C  20                 	db	32
  8475  00F86D  72                 	db	114	;'r'
  8476  00F86E  65                 	db	101	;'e'
  8477  00F86F  64                 	db	100	;'d'
  8478  00F870  0A                 	db	10
  8479  00F871  0D                 	db	13
  8480  00F872  00                 	db	0
  8481  00F873                     STR_112:
  8482  00F873  45                 	db	69	;'E'
  8483  00F874  6E                 	db	110	;'n'
  8484  00F875  74                 	db	116	;'t'
  8485  00F876  65                 	db	101	;'e'
  8486  00F877  72                 	db	114	;'r'
  8487  00F878  20                 	db	32
  8488  00F879  27                 	db	39
  8489  00F87A  48                 	db	72	;'H'
  8490  00F87B  65                 	db	101	;'e'
  8491  00F87C  6C                 	db	108	;'l'
  8492  00F87D  70                 	db	112	;'p'
  8493  00F87E  27                 	db	39
  8494  00F87F  20                 	db	32
  8495  00F880  66                 	db	102	;'f'
  8496  00F881  6F                 	db	111	;'o'
  8497  00F882  72                 	db	114	;'r'
  8498  00F883  20                 	db	32
  8499  00F884  6C                 	db	108	;'l'
  8500  00F885  69                 	db	105	;'i'
  8501  00F886  73                 	db	115	;'s'
  8502  00F887  74                 	db	116	;'t'
  8503  00F888  20                 	db	32
  8504  00F889  6F                 	db	111	;'o'
  8505  00F88A  66                 	db	102	;'f'
  8506  00F88B  20                 	db	32
  8507  00F88C  61                 	db	97	;'a'
  8508  00F88D  76                 	db	118	;'v'
  8509  00F88E  61                 	db	97	;'a'
  8510  00F88F  69                 	db	105	;'i'
  8511  00F890  6C                 	db	108	;'l'
  8512  00F891  61                 	db	97	;'a'
  8513  00F892  62                 	db	98	;'b'
  8514  00F893  6C                 	db	108	;'l'
  8515  00F894  65                 	db	101	;'e'
  8516  00F895  20                 	db	32
  8517  00F896  63                 	db	99	;'c'
  8518  00F897  6F                 	db	111	;'o'
  8519  00F898  6D                 	db	109	;'m'
  8520  00F899  6D                 	db	109	;'m'
  8521  00F89A  61                 	db	97	;'a'
  8522  00F89B  6E                 	db	110	;'n'
  8523  00F89C  64                 	db	100	;'d'
  8524  00F89D  73                 	db	115	;'s'
  8525  00F89E  0A                 	db	10
  8526  00F89F  0D                 	db	13
  8527  00F8A0  00                 	db	0
  8528  00F8A1                     STR_123:
  8529  00F8A1  4D                 	db	77	;'M'
  8530  00F8A2  61                 	db	97	;'a'
  8531  00F8A3  78                 	db	120	;'x'
  8532  00F8A4  69                 	db	105	;'i'
  8533  00F8A5  6D                 	db	109	;'m'
  8534  00F8A6  75                 	db	117	;'u'
  8535  00F8A7  6D                 	db	109	;'m'
  8536  00F8A8  20                 	db	32
  8537  00F8A9  72                 	db	114	;'r'
  8538  00F8AA  65                 	db	101	;'e'
  8539  00F8AB  63                 	db	99	;'c'
  8540  00F8AC  6F                 	db	111	;'o'
  8541  00F8AD  72                 	db	114	;'r'
  8542  00F8AE  64                 	db	100	;'d'
  8543  00F8AF  65                 	db	101	;'e'
  8544  00F8B0  64                 	db	100	;'d'
  8545  00F8B1  20                 	db	32
  8546  00F8B2  6F                 	db	111	;'o'
  8547  00F8B3  75                 	db	117	;'u'
  8548  00F8B4  74                 	db	116	;'t'
  8549  00F8B5  70                 	db	112	;'p'
  8550  00F8B6  75                 	db	117	;'u'
  8551  00F8B7  74                 	db	116	;'t'
  8552  00F8B8  20                 	db	32
  8553  00F8B9  70                 	db	112	;'p'
  8554  00F8BA  6F                 	db	111	;'o'
  8555  00F8BB  77                 	db	119	;'w'
  8556  00F8BC  65                 	db	101	;'e'
  8557  00F8BD  72                 	db	114	;'r'
  8558  00F8BE  20                 	db	32
  8559  00F8BF  69                 	db	105	;'i'
  8560  00F8C0  73                 	db	115	;'s'
  8561  00F8C1  20                 	db	32
  8562  00F8C2  25                 	db	37
  8563  00F8C3  2E                 	db	46
  8564  00F8C4  33                 	db	51	;'3'
  8565  00F8C5  66                 	db	102	;'f'
  8566  00F8C6  20                 	db	32
  8567  00F8C7  57                 	db	87	;'W'
  8568  00F8C8  61                 	db	97	;'a'
  8569  00F8C9  74                 	db	116	;'t'
  8570  00F8CA  74                 	db	116	;'t'
  8571  00F8CB  73                 	db	115	;'s'
  8572  00F8CC  0A                 	db	10
  8573  00F8CD  0D                 	db	13
  8574  00F8CE  00                 	db	0
  8575  00F8CF                     STR_129:
  8576  00F8CF  4D                 	db	77	;'M'
  8577  00F8D0  61                 	db	97	;'a'
  8578  00F8D1  78                 	db	120	;'x'
  8579  00F8D2  69                 	db	105	;'i'
  8580  00F8D3  6D                 	db	109	;'m'
  8581  00F8D4  75                 	db	117	;'u'
  8582  00F8D5  6D                 	db	109	;'m'
  8583  00F8D6  20                 	db	32
  8584  00F8D7  72                 	db	114	;'r'
  8585  00F8D8  65                 	db	101	;'e'
  8586  00F8D9  63                 	db	99	;'c'
  8587  00F8DA  6F                 	db	111	;'o'
  8588  00F8DB  72                 	db	114	;'r'
  8589  00F8DC  64                 	db	100	;'d'
  8590  00F8DD  65                 	db	101	;'e'
  8591  00F8DE  64                 	db	100	;'d'
  8592  00F8DF  20                 	db	32
  8593  00F8E0  64                 	db	100	;'d'
  8594  00F8E1  69                 	db	105	;'i'
  8595  00F8E2  65                 	db	101	;'e'
  8596  00F8E3  20                 	db	32
  8597  00F8E4  74                 	db	116	;'t'
  8598  00F8E5  65                 	db	101	;'e'
  8599  00F8E6  6D                 	db	109	;'m'
  8600  00F8E7  70                 	db	112	;'p'
  8601  00F8E8  65                 	db	101	;'e'
  8602  00F8E9  72                 	db	114	;'r'
  8603  00F8EA  61                 	db	97	;'a'
  8604  00F8EB  74                 	db	116	;'t'
  8605  00F8EC  75                 	db	117	;'u'
  8606  00F8ED  72                 	db	114	;'r'
  8607  00F8EE  65                 	db	101	;'e'
  8608  00F8EF  20                 	db	32
  8609  00F8F0  69                 	db	105	;'i'
  8610  00F8F1  73                 	db	115	;'s'
  8611  00F8F2  20                 	db	32
  8612  00F8F3  25                 	db	37
  8613  00F8F4  2E                 	db	46
  8614  00F8F5  33                 	db	51	;'3'
  8615  00F8F6  66                 	db	102	;'f'
  8616  00F8F7  20                 	db	32
  8617  00F8F8  43                 	db	67	;'C'
  8618  00F8F9  0A                 	db	10
  8619  00F8FA  0D                 	db	13
  8620  00F8FB  00                 	db	0
  8621  00F8FC                     STR_75:
  8622  00F8FC  56                 	db	86	;'V'
  8623  00F8FD  43                 	db	67	;'C'
  8624  00F8FE  43                 	db	67	;'C'
  8625  00F8FF  20                 	db	32
  8626  00F900  4F                 	db	79	;'O'
  8627  00F901  76                 	db	118	;'v'
  8628  00F902  65                 	db	101	;'e'
  8629  00F903  72                 	db	114	;'r'
  8630  00F904  76                 	db	118	;'v'
  8631  00F905  6F                 	db	111	;'o'
  8632  00F906  6C                 	db	108	;'l'
  8633  00F907  74                 	db	116	;'t'
  8634  00F908  61                 	db	97	;'a'
  8635  00F909  67                 	db	103	;'g'
  8636  00F90A  65                 	db	101	;'e'
  8637  00F90B  20                 	db	32
  8638  00F90C  63                 	db	99	;'c'
  8639  00F90D  6F                 	db	111	;'o'
  8640  00F90E  6E                 	db	110	;'n'
  8641  00F90F  64                 	db	100	;'d'
  8642  00F910  69                 	db	105	;'i'
  8643  00F911  74                 	db	116	;'t'
  8644  00F912  69                 	db	105	;'i'
  8645  00F913  6F                 	db	111	;'o'
  8646  00F914  6E                 	db	110	;'n'
  8647  00F915  20                 	db	32
  8648  00F916  68                 	db	104	;'h'
  8649  00F917  61                 	db	97	;'a'
  8650  00F918  73                 	db	115	;'s'
  8651  00F919  20                 	db	32
  8652  00F91A  6E                 	db	110	;'n'
  8653  00F91B  6F                 	db	111	;'o'
  8654  00F91C  74                 	db	116	;'t'
  8655  00F91D  20                 	db	32
  8656  00F91E  6F                 	db	111	;'o'
  8657  00F91F  63                 	db	99	;'c'
  8658  00F920  63                 	db	99	;'c'
  8659  00F921  75                 	db	117	;'u'
  8660  00F922  72                 	db	114	;'r'
  8661  00F923  72                 	db	114	;'r'
  8662  00F924  65                 	db	101	;'e'
  8663  00F925  64                 	db	100	;'d'
  8664  00F926  0A                 	db	10
  8665  00F927  0D                 	db	13
  8666  00F928  00                 	db	0
  8667  00F929                     STR_99:
  8668  00F929  4C                 	db	76	;'L'
  8669  00F92A  6F                 	db	111	;'o'
  8670  00F92B  61                 	db	97	;'a'
  8671  00F92C  64                 	db	100	;'d'
  8672  00F92D  20                 	db	32
  8673  00F92E  68                 	db	104	;'h'
  8674  00F92F  61                 	db	97	;'a'
  8675  00F930  73                 	db	115	;'s'
  8676  00F931  20                 	db	32
  8677  00F932  62                 	db	98	;'b'
  8678  00F933  65                 	db	101	;'e'
  8679  00F934  65                 	db	101	;'e'
  8680  00F935  6E                 	db	110	;'n'
  8681  00F936  20                 	db	32
  8682  00F937  65                 	db	101	;'e'
  8683  00F938  6E                 	db	110	;'n'
  8684  00F939  61                 	db	97	;'a'
  8685  00F93A  62                 	db	98	;'b'
  8686  00F93B  6C                 	db	108	;'l'
  8687  00F93C  65                 	db	101	;'e'
  8688  00F93D  64                 	db	100	;'d'
  8689  00F93E  2C                 	db	44
  8690  00F93F  20                 	db	32
  8691  00F940  64                 	db	100	;'d'
  8692  00F941  69                 	db	105	;'i'
  8693  00F942  6D                 	db	109	;'m'
  8694  00F943  6D                 	db	109	;'m'
  8695  00F944  69                 	db	105	;'i'
  8696  00F945  6E                 	db	110	;'n'
  8697  00F946  67                 	db	103	;'g'
  8698  00F947  20                 	db	32
  8699  00F948  64                 	db	100	;'d'
  8700  00F949  69                 	db	105	;'i'
  8701  00F94A  73                 	db	115	;'s'
  8702  00F94B  61                 	db	97	;'a'
  8703  00F94C  62                 	db	98	;'b'
  8704  00F94D  6C                 	db	108	;'l'
  8705  00F94E  65                 	db	101	;'e'
  8706  00F94F  64                 	db	100	;'d'
  8707  00F950  0A                 	db	10
  8708  00F951  0D                 	db	13
  8709  00F952  00                 	db	0
  8710  00F953                     STR_106:
  8711  00F953  4C                 	db	76	;'L'
  8712  00F954  6F                 	db	111	;'o'
  8713  00F955  61                 	db	97	;'a'
  8714  00F956  64                 	db	100	;'d'
  8715  00F957  20                 	db	32
  8716  00F958  61                 	db	97	;'a'
  8717  00F959  6E                 	db	110	;'n'
  8718  00F95A  64                 	db	100	;'d'
  8719  00F95B  20                 	db	32
  8720  00F95C  64                 	db	100	;'d'
  8721  00F95D  69                 	db	105	;'i'
  8722  00F95E  6D                 	db	109	;'m'
  8723  00F95F  6D                 	db	109	;'m'
  8724  00F960  69                 	db	105	;'i'
  8725  00F961  6E                 	db	110	;'n'
  8726  00F962  67                 	db	103	;'g'
  8727  00F963  20                 	db	32
  8728  00F964  61                 	db	97	;'a'
  8729  00F965  72                 	db	114	;'r'
  8730  00F966  65                 	db	101	;'e'
  8731  00F967  20                 	db	32
  8732  00F968  63                 	db	99	;'c'
  8733  00F969  75                 	db	117	;'u'
  8734  00F96A  72                 	db	114	;'r'
  8735  00F96B  72                 	db	114	;'r'
  8736  00F96C  65                 	db	101	;'e'
  8737  00F96D  6E                 	db	110	;'n'
  8738  00F96E  74                 	db	116	;'t'
  8739  00F96F  6C                 	db	108	;'l'
  8740  00F970  79                 	db	121	;'y'
  8741  00F971  20                 	db	32
  8742  00F972  64                 	db	100	;'d'
  8743  00F973  69                 	db	105	;'i'
  8744  00F974  73                 	db	115	;'s'
  8745  00F975  61                 	db	97	;'a'
  8746  00F976  62                 	db	98	;'b'
  8747  00F977  6C                 	db	108	;'l'
  8748  00F978  65                 	db	101	;'e'
  8749  00F979  64                 	db	100	;'d'
  8750  00F97A  0A                 	db	10
  8751  00F97B  0D                 	db	13
  8752  00F97C  00                 	db	0
  8753  00F97D                     STR_159:
  8754  00F97D  57                 	db	87	;'W'
  8755  00F97E  69                 	db	105	;'i'
  8756  00F97F  6E                 	db	110	;'n'
  8757  00F980  64                 	db	100	;'d'
  8758  00F981  6F                 	db	111	;'o'
  8759  00F982  77                 	db	119	;'w'
  8760  00F983  65                 	db	101	;'e'
  8761  00F984  64                 	db	100	;'d'
  8762  00F985  20                 	db	32
  8763  00F986  57                 	db	87	;'W'
  8764  00F987  61                 	db	97	;'a'
  8765  00F988  74                 	db	116	;'t'
  8766  00F989  63                 	db	99	;'c'
  8767  00F98A  68                 	db	104	;'h'
  8768  00F98B  20                 	db	32
  8769  00F98C  44                 	db	68	;'D'
  8770  00F98D  6F                 	db	111	;'o'
  8771  00F98E  67                 	db	103	;'g'
  8772  00F98F  20                 	db	32
  8773  00F990  54                 	db	84	;'T'
  8774  00F991  69                 	db	105	;'i'
  8775  00F992  6D                 	db	109	;'m'
  8776  00F993  65                 	db	101	;'e'
  8777  00F994  72                 	db	114	;'r'
  8778  00F995  20                 	db	32
  8779  00F996  56                 	db	86	;'V'
  8780  00F997  69                 	db	105	;'i'
  8781  00F998  6F                 	db	111	;'o'
  8782  00F999  6C                 	db	108	;'l'
  8783  00F99A  61                 	db	97	;'a'
  8784  00F99B  74                 	db	116	;'t'
  8785  00F99C  69                 	db	105	;'i'
  8786  00F99D  6F                 	db	111	;'o'
  8787  00F99E  6E                 	db	110	;'n'
  8788  00F99F  20                 	db	32
  8789  00F9A0  52                 	db	82	;'R'
  8790  00F9A1  65                 	db	101	;'e'
  8791  00F9A2  73                 	db	115	;'s'
  8792  00F9A3  65                 	db	101	;'e'
  8793  00F9A4  74                 	db	116	;'t'
  8794  00F9A5  00                 	db	0
  8795  00F9A6                     STR_97:
  8796  00F9A6  54                 	db	84	;'T'
  8797  00F9A7  52                 	db	82	;'R'
  8798  00F9A8  49                 	db	73	;'I'
  8799  00F9A9  41                 	db	65	;'A'
  8800  00F9AA  43                 	db	67	;'C'
  8801  00F9AB  20                 	db	32
  8802  00F9AC  6F                 	db	111	;'o'
  8803  00F9AD  75                 	db	117	;'u'
  8804  00F9AE  74                 	db	116	;'t'
  8805  00F9AF  70                 	db	112	;'p'
  8806  00F9B0  75                 	db	117	;'u'
  8807  00F9B1  74                 	db	116	;'t'
  8808  00F9B2  20                 	db	32
  8809  00F9B3  64                 	db	100	;'d'
  8810  00F9B4  69                 	db	105	;'i'
  8811  00F9B5  6D                 	db	109	;'m'
  8812  00F9B6  6D                 	db	109	;'m'
  8813  00F9B7  69                 	db	105	;'i'
  8814  00F9B8  6E                 	db	110	;'n'
  8815  00F9B9  67                 	db	103	;'g'
  8816  00F9BA  20                 	db	32
  8817  00F9BB  68                 	db	104	;'h'
  8818  00F9BC  61                 	db	97	;'a'
  8819  00F9BD  73                 	db	115	;'s'
  8820  00F9BE  20                 	db	32
  8821  00F9BF  62                 	db	98	;'b'
  8822  00F9C0  65                 	db	101	;'e'
  8823  00F9C1  65                 	db	101	;'e'
  8824  00F9C2  6E                 	db	110	;'n'
  8825  00F9C3  20                 	db	32
  8826  00F9C4  64                 	db	100	;'d'
  8827  00F9C5  69                 	db	105	;'i'
  8828  00F9C6  73                 	db	115	;'s'
  8829  00F9C7  61                 	db	97	;'a'
  8830  00F9C8  62                 	db	98	;'b'
  8831  00F9C9  6C                 	db	108	;'l'
  8832  00F9CA  65                 	db	101	;'e'
  8833  00F9CB  64                 	db	100	;'d'
  8834  00F9CC  0A                 	db	10
  8835  00F9CD  0D                 	db	13
  8836  00F9CE  00                 	db	0
  8837  00F9CF                     STR_95:
  8838  00F9CF  54                 	db	84	;'T'
  8839  00F9D0  52                 	db	82	;'R'
  8840  00F9D1  49                 	db	73	;'I'
  8841  00F9D2  41                 	db	65	;'A'
  8842  00F9D3  43                 	db	67	;'C'
  8843  00F9D4  20                 	db	32
  8844  00F9D5  6F                 	db	111	;'o'
  8845  00F9D6  75                 	db	117	;'u'
  8846  00F9D7  74                 	db	116	;'t'
  8847  00F9D8  70                 	db	112	;'p'
  8848  00F9D9  75                 	db	117	;'u'
  8849  00F9DA  74                 	db	116	;'t'
  8850  00F9DB  20                 	db	32
  8851  00F9DC  64                 	db	100	;'d'
  8852  00F9DD  69                 	db	105	;'i'
  8853  00F9DE  6D                 	db	109	;'m'
  8854  00F9DF  6D                 	db	109	;'m'
  8855  00F9E0  69                 	db	105	;'i'
  8856  00F9E1  6E                 	db	110	;'n'
  8857  00F9E2  67                 	db	103	;'g'
  8858  00F9E3  20                 	db	32
  8859  00F9E4  68                 	db	104	;'h'
  8860  00F9E5  61                 	db	97	;'a'
  8861  00F9E6  73                 	db	115	;'s'
  8862  00F9E7  20                 	db	32
  8863  00F9E8  62                 	db	98	;'b'
  8864  00F9E9  65                 	db	101	;'e'
  8865  00F9EA  65                 	db	101	;'e'
  8866  00F9EB  6E                 	db	110	;'n'
  8867  00F9EC  20                 	db	32
  8868  00F9ED  65                 	db	101	;'e'
  8869  00F9EE  6E                 	db	110	;'n'
  8870  00F9EF  61                 	db	97	;'a'
  8871  00F9F0  62                 	db	98	;'b'
  8872  00F9F1  6C                 	db	108	;'l'
  8873  00F9F2  65                 	db	101	;'e'
  8874  00F9F3  64                 	db	100	;'d'
  8875  00F9F4  0A                 	db	10
  8876  00F9F5  0D                 	db	13
  8877  00F9F6  00                 	db	0
  8878  00F9F7                     STR_148:
  8879  00F9F7  4D                 	db	77	;'M'
  8880  00F9F8  65                 	db	101	;'e'
  8881  00F9F9  61                 	db	97	;'a'
  8882  00F9FA  73                 	db	115	;'s'
  8883  00F9FB  75                 	db	117	;'u'
  8884  00F9FC  72                 	db	114	;'r'
  8885  00F9FD  65                 	db	101	;'e'
  8886  00F9FE  6D                 	db	109	;'m'
  8887  00F9FF  65                 	db	101	;'e'
  8888  00FA00  6E                 	db	110	;'n'
  8889  00FA01  74                 	db	116	;'t'
  8890  00FA02  20                 	db	32
  8891  00FA03  72                 	db	114	;'r'
  8892  00FA04  65                 	db	101	;'e'
  8893  00FA05  73                 	db	115	;'s'
  8894  00FA06  70                 	db	112	;'p'
  8895  00FA07  6F                 	db	111	;'o'
  8896  00FA08  6E                 	db	110	;'n'
  8897  00FA09  73                 	db	115	;'s'
  8898  00FA0A  65                 	db	101	;'e'
  8899  00FA0B  73                 	db	115	;'s'
  8900  00FA0C  20                 	db	32
  8901  00FA0D  61                 	db	97	;'a'
  8902  00FA0E  70                 	db	112	;'p'
  8903  00FA0F  70                 	db	112	;'p'
  8904  00FA10  65                 	db	101	;'e'
  8905  00FA11  61                 	db	97	;'a'
  8906  00FA12  72                 	db	114	;'r'
  8907  00FA13  20                 	db	32
  8908  00FA14  69                 	db	105	;'i'
  8909  00FA15  6E                 	db	110	;'n'
  8910  00FA16  20                 	db	32
  8911  00FA17  63                 	db	99	;'c'
  8912  00FA18  79                 	db	121	;'y'
  8913  00FA19  61                 	db	97	;'a'
  8914  00FA1A  6E                 	db	110	;'n'
  8915  00FA1B  0A                 	db	10
  8916  00FA1C  0D                 	db	13
  8917  00FA1D  00                 	db	0
  8918  00FA1E                     STR_85:
  8919  00FA1E  41                 	db	65	;'A'
  8920  00FA1F  56                 	db	86	;'V'
  8921  00FA20  53                 	db	83	;'S'
  8922  00FA21  53                 	db	83	;'S'
  8923  00FA22  20                 	db	32
  8924  00FA23  6D                 	db	109	;'m'
  8925  00FA24  65                 	db	101	;'e'
  8926  00FA25  61                 	db	97	;'a'
  8927  00FA26  73                 	db	115	;'s'
  8928  00FA27  75                 	db	117	;'u'
  8929  00FA28  72                 	db	114	;'r'
  8930  00FA29  65                 	db	101	;'e'
  8931  00FA2A  64                 	db	100	;'d'
  8932  00FA2B  20                 	db	32
  8933  00FA2C  61                 	db	97	;'a'
  8934  00FA2D  73                 	db	115	;'s'
  8935  00FA2E  20                 	db	32
  8936  00FA2F  25                 	db	37
  8937  00FA30  2E                 	db	46
  8938  00FA31  33                 	db	51	;'3'
  8939  00FA32  66                 	db	102	;'f'
  8940  00FA33  20                 	db	32
  8941  00FA34  56                 	db	86	;'V'
  8942  00FA35  6F                 	db	111	;'o'
  8943  00FA36  6C                 	db	108	;'l'
  8944  00FA37  74                 	db	116	;'t'
  8945  00FA38  73                 	db	115	;'s'
  8946  00FA39  20                 	db	32
  8947  00FA3A  62                 	db	98	;'b'
  8948  00FA3B  79                 	db	121	;'y'
  8949  00FA3C  20                 	db	32
  8950  00FA3D  41                 	db	65	;'A'
  8951  00FA3E  44                 	db	68	;'D'
  8952  00FA3F  43                 	db	67	;'C'
  8953  00FA40  0A                 	db	10
  8954  00FA41  0D                 	db	13
  8955  00FA42  00                 	db	0
  8956  00FA43                     STR_77:
  8957  00FA43  2B                 	db	43
  8958  00FA44  33                 	db	51	;'3'
  8959  00FA45  2E                 	db	46
  8960  00FA46  33                 	db	51	;'3'
  8961  00FA47  56                 	db	86	;'V'
  8962  00FA48  20                 	db	32
  8963  00FA49  72                 	db	114	;'r'
  8964  00FA4A  61                 	db	97	;'a'
  8965  00FA4B  69                 	db	105	;'i'
  8966  00FA4C  6C                 	db	108	;'l'
  8967  00FA4D  20                 	db	32
  8968  00FA4E  6D                 	db	109	;'m'
  8969  00FA4F  65                 	db	101	;'e'
  8970  00FA50  61                 	db	97	;'a'
  8971  00FA51  73                 	db	115	;'s'
  8972  00FA52  75                 	db	117	;'u'
  8973  00FA53  72                 	db	114	;'r'
  8974  00FA54  65                 	db	101	;'e'
  8975  00FA55  64                 	db	100	;'d'
  8976  00FA56  20                 	db	32
  8977  00FA57  61                 	db	97	;'a'
  8978  00FA58  73                 	db	115	;'s'
  8979  00FA59  20                 	db	32
  8980  00FA5A  2B                 	db	43
  8981  00FA5B  25                 	db	37
  8982  00FA5C  2E                 	db	46
  8983  00FA5D  33                 	db	51	;'3'
  8984  00FA5E  66                 	db	102	;'f'
  8985  00FA5F  20                 	db	32
  8986  00FA60  56                 	db	86	;'V'
  8987  00FA61  6F                 	db	111	;'o'
  8988  00FA62  6C                 	db	108	;'l'
  8989  00FA63  74                 	db	116	;'t'
  8990  00FA64  73                 	db	115	;'s'
  8991  00FA65  0A                 	db	10
  8992  00FA66  0D                 	db	13
  8993  00FA67  00                 	db	0
  8994  00FA68                     STR_113:
  8995  00FA68  44                 	db	68	;'D'
  8996  00FA69  69                 	db	105	;'i'
  8997  00FA6A  6D                 	db	109	;'m'
  8998  00FA6B  6D                 	db	109	;'m'
  8999  00FA6C  69                 	db	105	;'i'
  9000  00FA6D  6E                 	db	110	;'n'
  9001  00FA6E  67                 	db	103	;'g'
  9002  00FA6F  20                 	db	32
  9003  00FA70  68                 	db	104	;'h'
  9004  00FA71  61                 	db	97	;'a'
  9005  00FA72  73                 	db	115	;'s'
  9006  00FA73  20                 	db	32
  9007  00FA74  62                 	db	98	;'b'
  9008  00FA75  65                 	db	101	;'e'
  9009  00FA76  65                 	db	101	;'e'
  9010  00FA77  6E                 	db	110	;'n'
  9011  00FA78  20                 	db	32
  9012  00FA79  73                 	db	115	;'s'
  9013  00FA7A  65                 	db	101	;'e'
  9014  00FA7B  74                 	db	116	;'t'
  9015  00FA7C  20                 	db	32
  9016  00FA7D  74                 	db	116	;'t'
  9017  00FA7E  6F                 	db	111	;'o'
  9018  00FA7F  20                 	db	32
  9019  00FA80  25                 	db	37
  9020  00FA81  64                 	db	100	;'d'
  9021  00FA82  20                 	db	32
  9022  00FA83  70                 	db	112	;'p'
  9023  00FA84  65                 	db	101	;'e'
  9024  00FA85  72                 	db	114	;'r'
  9025  00FA86  63                 	db	99	;'c'
  9026  00FA87  65                 	db	101	;'e'
  9027  00FA88  6E                 	db	110	;'n'
  9028  00FA89  74                 	db	116	;'t'
  9029  00FA8A  0A                 	db	10
  9030  00FA8B  0D                 	db	13
  9031  00FA8C  00                 	db	0
  9032  00FA8D                     STR_81:
  9033  00FA8D  44                 	db	68	;'D'
  9034  00FA8E  69                 	db	105	;'i'
  9035  00FA8F  65                 	db	101	;'e'
  9036  00FA90  20                 	db	32
  9037  00FA91  54                 	db	84	;'T'
  9038  00FA92  65                 	db	101	;'e'
  9039  00FA93  6D                 	db	109	;'m'
  9040  00FA94  70                 	db	112	;'p'
  9041  00FA95  65                 	db	101	;'e'
  9042  00FA96  72                 	db	114	;'r'
  9043  00FA97  61                 	db	97	;'a'
  9044  00FA98  74                 	db	116	;'t'
  9045  00FA99  75                 	db	117	;'u'
  9046  00FA9A  72                 	db	114	;'r'
  9047  00FA9B  65                 	db	101	;'e'
  9048  00FA9C  20                 	db	32
  9049  00FA9D  6D                 	db	109	;'m'
  9050  00FA9E  65                 	db	101	;'e'
  9051  00FA9F  61                 	db	97	;'a'
  9052  00FAA0  73                 	db	115	;'s'
  9053  00FAA1  75                 	db	117	;'u'
  9054  00FAA2  72                 	db	114	;'r'
  9055  00FAA3  65                 	db	101	;'e'
  9056  00FAA4  64                 	db	100	;'d'
  9057  00FAA5  20                 	db	32
  9058  00FAA6  61                 	db	97	;'a'
  9059  00FAA7  73                 	db	115	;'s'
  9060  00FAA8  20                 	db	32
  9061  00FAA9  25                 	db	37
  9062  00FAAA  2E                 	db	46
  9063  00FAAB  33                 	db	51	;'3'
  9064  00FAAC  66                 	db	102	;'f'
  9065  00FAAD  43                 	db	67	;'C'
  9066  00FAAE  0A                 	db	10
  9067  00FAAF  0D                 	db	13
  9068  00FAB0  00                 	db	0
  9069  00FAB1                     STR_79:
  9070  00FAB1  2B                 	db	43
  9071  00FAB2  31                 	db	49	;'1'
  9072  00FAB3  32                 	db	50	;'2'
  9073  00FAB4  56                 	db	86	;'V'
  9074  00FAB5  20                 	db	32
  9075  00FAB6  72                 	db	114	;'r'
  9076  00FAB7  61                 	db	97	;'a'
  9077  00FAB8  69                 	db	105	;'i'
  9078  00FAB9  6C                 	db	108	;'l'
  9079  00FABA  20                 	db	32
  9080  00FABB  6D                 	db	109	;'m'
  9081  00FABC  65                 	db	101	;'e'
  9082  00FABD  61                 	db	97	;'a'
  9083  00FABE  73                 	db	115	;'s'
  9084  00FABF  75                 	db	117	;'u'
  9085  00FAC0  72                 	db	114	;'r'
  9086  00FAC1  65                 	db	101	;'e'
  9087  00FAC2  64                 	db	100	;'d'
  9088  00FAC3  20                 	db	32
  9089  00FAC4  61                 	db	97	;'a'
  9090  00FAC5  73                 	db	115	;'s'
  9091  00FAC6  20                 	db	32
  9092  00FAC7  2B                 	db	43
  9093  00FAC8  25                 	db	37
  9094  00FAC9  2E                 	db	46
  9095  00FACA  33                 	db	51	;'3'
  9096  00FACB  66                 	db	102	;'f'
  9097  00FACC  20                 	db	32
  9098  00FACD  56                 	db	86	;'V'
  9099  00FACE  6F                 	db	111	;'o'
  9100  00FACF  6C                 	db	108	;'l'
  9101  00FAD0  74                 	db	116	;'t'
  9102  00FAD1  73                 	db	115	;'s'
  9103  00FAD2  0A                 	db	10
  9104  00FAD3  0D                 	db	13
  9105  00FAD4  00                 	db	0
  9106  00FAD5                     STR_89:
  9107  00FAD5  52                 	db	82	;'R'
  9108  00FAD6  4D                 	db	77	;'M'
  9109  00FAD7  53                 	db	83	;'S'
  9110  00FAD8  20                 	db	32
  9111  00FAD9  4F                 	db	79	;'O'
  9112  00FADA  75                 	db	117	;'u'
  9113  00FADB  74                 	db	116	;'t'
  9114  00FADC  70                 	db	112	;'p'
  9115  00FADD  75                 	db	117	;'u'
  9116  00FADE  74                 	db	116	;'t'
  9117  00FADF  20                 	db	32
  9118  00FAE0  43                 	db	67	;'C'
  9119  00FAE1  75                 	db	117	;'u'
  9120  00FAE2  72                 	db	114	;'r'
  9121  00FAE3  72                 	db	114	;'r'
  9122  00FAE4  65                 	db	101	;'e'
  9123  00FAE5  6E                 	db	110	;'n'
  9124  00FAE6  74                 	db	116	;'t'
  9125  00FAE7  20                 	db	32
  9126  00FAE8  69                 	db	105	;'i'
  9127  00FAE9  73                 	db	115	;'s'
  9128  00FAEA  20                 	db	32
  9129  00FAEB  25                 	db	37
  9130  00FAEC  2E                 	db	46
  9131  00FAED  33                 	db	51	;'3'
  9132  00FAEE  66                 	db	102	;'f'
  9133  00FAEF  20                 	db	32
  9134  00FAF0  41                 	db	65	;'A'
  9135  00FAF1  72                 	db	114	;'r'
  9136  00FAF2  6D                 	db	109	;'m'
  9137  00FAF3  73                 	db	115	;'s'
  9138  00FAF4  0A                 	db	10
  9139  00FAF5  0D                 	db	13
  9140  00FAF6  00                 	db	0
  9141  00FAF7                     STR_91:
  9142  00FAF7  52                 	db	82	;'R'
  9143  00FAF8  4D                 	db	77	;'M'
  9144  00FAF9  53                 	db	83	;'S'
  9145  00FAFA  20                 	db	32
  9146  00FAFB  4F                 	db	79	;'O'
  9147  00FAFC  75                 	db	117	;'u'
  9148  00FAFD  74                 	db	116	;'t'
  9149  00FAFE  70                 	db	112	;'p'
  9150  00FAFF  75                 	db	117	;'u'
  9151  00FB00  74                 	db	116	;'t'
  9152  00FB01  20                 	db	32
  9153  00FB02  56                 	db	86	;'V'
  9154  00FB03  6F                 	db	111	;'o'
  9155  00FB04  6C                 	db	108	;'l'
  9156  00FB05  74                 	db	116	;'t'
  9157  00FB06  61                 	db	97	;'a'
  9158  00FB07  67                 	db	103	;'g'
  9159  00FB08  65                 	db	101	;'e'
  9160  00FB09  20                 	db	32
  9161  00FB0A  69                 	db	105	;'i'
  9162  00FB0B  73                 	db	115	;'s'
  9163  00FB0C  20                 	db	32
  9164  00FB0D  25                 	db	37
  9165  00FB0E  2E                 	db	46
  9166  00FB0F  33                 	db	51	;'3'
  9167  00FB10  66                 	db	102	;'f'
  9168  00FB11  20                 	db	32
  9169  00FB12  56                 	db	86	;'V'
  9170  00FB13  72                 	db	114	;'r'
  9171  00FB14  6D                 	db	109	;'m'
  9172  00FB15  73                 	db	115	;'s'
  9173  00FB16  0A                 	db	10
  9174  00FB17  0D                 	db	13
  9175  00FB18  00                 	db	0
  9176  00FB19                     STR_138:
  9177  00FB19  48                 	db	72	;'H'
  9178  00FB1A  65                 	db	101	;'e'
  9179  00FB1B  6C                 	db	108	;'l'
  9180  00FB1C  70                 	db	112	;'p'
  9181  00FB1D  20                 	db	32
  9182  00FB1E  50                 	db	80	;'P'
  9183  00FB1F  72                 	db	114	;'r'
  9184  00FB20  69                 	db	105	;'i'
  9185  00FB21  6D                 	db	109	;'m'
  9186  00FB22  61                 	db	97	;'a'
  9187  00FB23  72                 	db	114	;'r'
  9188  00FB24  79                 	db	121	;'y'
  9189  00FB25  20                 	db	32
  9190  00FB26  4D                 	db	77	;'M'
  9191  00FB27  65                 	db	101	;'e'
  9192  00FB28  61                 	db	97	;'a'
  9193  00FB29  73                 	db	115	;'s'
  9194  00FB2A  75                 	db	117	;'u'
  9195  00FB2B  72                 	db	114	;'r'
  9196  00FB2C  65                 	db	101	;'e'
  9197  00FB2D  6D                 	db	109	;'m'
  9198  00FB2E  65                 	db	101	;'e'
  9199  00FB2F  6E                 	db	110	;'n'
  9200  00FB30  74                 	db	116	;'t'
  9201  00FB31  20                 	db	32
  9202  00FB32  43                 	db	67	;'C'
  9203  00FB33  6F                 	db	111	;'o'
  9204  00FB34  6D                 	db	109	;'m'
  9205  00FB35  6D                 	db	109	;'m'
  9206  00FB36  61                 	db	97	;'a'
  9207  00FB37  6E                 	db	110	;'n'
  9208  00FB38  64                 	db	100	;'d'
  9209  00FB39  73                 	db	115	;'s'
  9210  00FB3A  00                 	db	0
  9211  00FB3B                     STR_136:
  9212  00FB3B  48                 	db	72	;'H'
  9213  00FB3C  65                 	db	101	;'e'
  9214  00FB3D  6C                 	db	108	;'l'
  9215  00FB3E  70                 	db	112	;'p'
  9216  00FB3F  20                 	db	32
  9217  00FB40  44                 	db	68	;'D'
  9218  00FB41  65                 	db	101	;'e'
  9219  00FB42  76                 	db	118	;'v'
  9220  00FB43  69                 	db	105	;'i'
  9221  00FB44  63                 	db	99	;'c'
  9222  00FB45  65                 	db	101	;'e'
  9223  00FB46  20                 	db	32
  9224  00FB47  4D                 	db	77	;'M'
  9225  00FB48  65                 	db	101	;'e'
  9226  00FB49  61                 	db	97	;'a'
  9227  00FB4A  73                 	db	115	;'s'
  9228  00FB4B  75                 	db	117	;'u'
  9229  00FB4C  72                 	db	114	;'r'
  9230  00FB4D  65                 	db	101	;'e'
  9231  00FB4E  6D                 	db	109	;'m'
  9232  00FB4F  65                 	db	101	;'e'
  9233  00FB50  6E                 	db	110	;'n'
  9234  00FB51  74                 	db	116	;'t'
  9235  00FB52  20                 	db	32
  9236  00FB53  43                 	db	67	;'C'
  9237  00FB54  6F                 	db	111	;'o'
  9238  00FB55  6D                 	db	109	;'m'
  9239  00FB56  6D                 	db	109	;'m'
  9240  00FB57  61                 	db	97	;'a'
  9241  00FB58  6E                 	db	110	;'n'
  9242  00FB59  64                 	db	100	;'d'
  9243  00FB5A  73                 	db	115	;'s'
  9244  00FB5B  00                 	db	0
  9245  00FB5C                     STR_87:
  9246  00FB5C  4D                 	db	77	;'M'
  9247  00FB5D  65                 	db	101	;'e'
  9248  00FB5E  61                 	db	97	;'a'
  9249  00FB5F  73                 	db	115	;'s'
  9250  00FB60  75                 	db	117	;'u'
  9251  00FB61  72                 	db	114	;'r'
  9252  00FB62  65                 	db	101	;'e'
  9253  00FB63  64                 	db	100	;'d'
  9254  00FB64  20                 	db	32
  9255  00FB65  43                 	db	67	;'C'
  9256  00FB66  75                 	db	117	;'u'
  9257  00FB67  72                 	db	114	;'r'
  9258  00FB68  72                 	db	114	;'r'
  9259  00FB69  65                 	db	101	;'e'
  9260  00FB6A  6E                 	db	110	;'n'
  9261  00FB6B  74                 	db	116	;'t'
  9262  00FB6C  20                 	db	32
  9263  00FB6D  69                 	db	105	;'i'
  9264  00FB6E  73                 	db	115	;'s'
  9265  00FB6F  20                 	db	32
  9266  00FB70  25                 	db	37
  9267  00FB71  2E                 	db	46
  9268  00FB72  33                 	db	51	;'3'
  9269  00FB73  66                 	db	102	;'f'
  9270  00FB74  20                 	db	32
  9271  00FB75  41                 	db	65	;'A'
  9272  00FB76  6D                 	db	109	;'m'
  9273  00FB77  70                 	db	112	;'p'
  9274  00FB78  73                 	db	115	;'s'
  9275  00FB79  0A                 	db	10
  9276  00FB7A  0D                 	db	13
  9277  00FB7B  00                 	db	0
  9278  00FB7C                     STR_104:
  9279  00FB7C  44                 	db	68	;'D'
  9280  00FB7D  69                 	db	105	;'i'
  9281  00FB7E  6D                 	db	109	;'m'
  9282  00FB7F  6D                 	db	109	;'m'
  9283  00FB80  69                 	db	105	;'i'
  9284  00FB81  6E                 	db	110	;'n'
  9285  00FB82  67                 	db	103	;'g'
  9286  00FB83  20                 	db	32
  9287  00FB84  69                 	db	105	;'i'
  9288  00FB85  73                 	db	115	;'s'
  9289  00FB86  20                 	db	32
  9290  00FB87  63                 	db	99	;'c'
  9291  00FB88  75                 	db	117	;'u'
  9292  00FB89  72                 	db	114	;'r'
  9293  00FB8A  72                 	db	114	;'r'
  9294  00FB8B  65                 	db	101	;'e'
  9295  00FB8C  6E                 	db	110	;'n'
  9296  00FB8D  74                 	db	116	;'t'
  9297  00FB8E  6C                 	db	108	;'l'
  9298  00FB8F  79                 	db	121	;'y'
  9299  00FB90  20                 	db	32
  9300  00FB91  65                 	db	101	;'e'
  9301  00FB92  6E                 	db	110	;'n'
  9302  00FB93  61                 	db	97	;'a'
  9303  00FB94  62                 	db	98	;'b'
  9304  00FB95  6C                 	db	108	;'l'
  9305  00FB96  65                 	db	101	;'e'
  9306  00FB97  64                 	db	100	;'d'
  9307  00FB98  0A                 	db	10
  9308  00FB99  0D                 	db	13
  9309  00FB9A  00                 	db	0
  9310  00FB9B                     STR_150:
  9311  00FB9B  55                 	db	85	;'U'
  9312  00FB9C  73                 	db	115	;'s'
  9313  00FB9D  65                 	db	101	;'e'
  9314  00FB9E  72                 	db	114	;'r'
  9315  00FB9F  20                 	db	32
  9316  00FBA0  69                 	db	105	;'i'
  9317  00FBA1  6E                 	db	110	;'n'
  9318  00FBA2  70                 	db	112	;'p'
  9319  00FBA3  75                 	db	117	;'u'
  9320  00FBA4  74                 	db	116	;'t'
  9321  00FBA5  20                 	db	32
  9322  00FBA6  61                 	db	97	;'a'
  9323  00FBA7  70                 	db	112	;'p'
  9324  00FBA8  70                 	db	112	;'p'
  9325  00FBA9  65                 	db	101	;'e'
  9326  00FBAA  61                 	db	97	;'a'
  9327  00FBAB  72                 	db	114	;'r'
  9328  00FBAC  73                 	db	115	;'s'
  9329  00FBAD  20                 	db	32
  9330  00FBAE  69                 	db	105	;'i'
  9331  00FBAF  6E                 	db	110	;'n'
  9332  00FBB0  20                 	db	32
  9333  00FBB1  77                 	db	119	;'w'
  9334  00FBB2  68                 	db	104	;'h'
  9335  00FBB3  69                 	db	105	;'i'
  9336  00FBB4  74                 	db	116	;'t'
  9337  00FBB5  65                 	db	101	;'e'
  9338  00FBB6  0A                 	db	10
  9339  00FBB7  0D                 	db	13
  9340  00FBB8  00                 	db	0
  9341  00FBB9                     STR_102:
  9342  00FBB9  4C                 	db	76	;'L'
  9343  00FBBA  6F                 	db	111	;'o'
  9344  00FBBB  61                 	db	97	;'a'
  9345  00FBBC  64                 	db	100	;'d'
  9346  00FBBD  20                 	db	32
  9347  00FBBE  69                 	db	105	;'i'
  9348  00FBBF  73                 	db	115	;'s'
  9349  00FBC0  20                 	db	32
  9350  00FBC1  63                 	db	99	;'c'
  9351  00FBC2  75                 	db	117	;'u'
  9352  00FBC3  72                 	db	114	;'r'
  9353  00FBC4  72                 	db	114	;'r'
  9354  00FBC5  65                 	db	101	;'e'
  9355  00FBC6  6E                 	db	110	;'n'
  9356  00FBC7  74                 	db	116	;'t'
  9357  00FBC8  6C                 	db	108	;'l'
  9358  00FBC9  79                 	db	121	;'y'
  9359  00FBCA  20                 	db	32
  9360  00FBCB  64                 	db	100	;'d'
  9361  00FBCC  69                 	db	105	;'i'
  9362  00FBCD  73                 	db	115	;'s'
  9363  00FBCE  61                 	db	97	;'a'
  9364  00FBCF  62                 	db	98	;'b'
  9365  00FBD0  6C                 	db	108	;'l'
  9366  00FBD1  65                 	db	101	;'e'
  9367  00FBD2  64                 	db	100	;'d'
  9368  00FBD3  0A                 	db	10
  9369  00FBD4  0D                 	db	13
  9370  00FBD5  00                 	db	0
  9371  00FBD6                     STR_134:
  9372  00FBD6  48                 	db	72	;'H'
  9373  00FBD7  65                 	db	101	;'e'
  9374  00FBD8  6C                 	db	108	;'l'
  9375  00FBD9  70                 	db	112	;'p'
  9376  00FBDA  20                 	db	32
  9377  00FBDB  44                 	db	68	;'D'
  9378  00FBDC  65                 	db	101	;'e'
  9379  00FBDD  76                 	db	118	;'v'
  9380  00FBDE  69                 	db	105	;'i'
  9381  00FBDF  63                 	db	99	;'c'
  9382  00FBE0  65                 	db	101	;'e'
  9383  00FBE1  20                 	db	32
  9384  00FBE2  43                 	db	67	;'C'
  9385  00FBE3  6F                 	db	111	;'o'
  9386  00FBE4  6E                 	db	110	;'n'
  9387  00FBE5  74                 	db	116	;'t'
  9388  00FBE6  72                 	db	114	;'r'
  9389  00FBE7  6F                 	db	111	;'o'
  9390  00FBE8  6C                 	db	108	;'l'
  9391  00FBE9  20                 	db	32
  9392  00FBEA  43                 	db	67	;'C'
  9393  00FBEB  6F                 	db	111	;'o'
  9394  00FBEC  6D                 	db	109	;'m'
  9395  00FBED  6D                 	db	109	;'m'
  9396  00FBEE  61                 	db	97	;'a'
  9397  00FBEF  6E                 	db	110	;'n'
  9398  00FBF0  64                 	db	100	;'d'
  9399  00FBF1  73                 	db	115	;'s'
  9400  00FBF2  00                 	db	0
  9401  00FBF3                     STR_140:
  9402  00FBF3  48                 	db	72	;'H'
  9403  00FBF4  65                 	db	101	;'e'
  9404  00FBF5  6C                 	db	108	;'l'
  9405  00FBF6  70                 	db	112	;'p'
  9406  00FBF7  20                 	db	32
  9407  00FBF8  4F                 	db	79	;'O'
  9408  00FBF9  75                 	db	117	;'u'
  9409  00FBFA  74                 	db	116	;'t'
  9410  00FBFB  70                 	db	112	;'p'
  9411  00FBFC  75                 	db	117	;'u'
  9412  00FBFD  74                 	db	116	;'t'
  9413  00FBFE  20                 	db	32
  9414  00FBFF  43                 	db	67	;'C'
  9415  00FC00  6F                 	db	111	;'o'
  9416  00FC01  6E                 	db	110	;'n'
  9417  00FC02  74                 	db	116	;'t'
  9418  00FC03  72                 	db	114	;'r'
  9419  00FC04  6F                 	db	111	;'o'
  9420  00FC05  6C                 	db	108	;'l'
  9421  00FC06  20                 	db	32
  9422  00FC07  43                 	db	67	;'C'
  9423  00FC08  6F                 	db	111	;'o'
  9424  00FC09  6D                 	db	109	;'m'
  9425  00FC0A  6D                 	db	109	;'m'
  9426  00FC0B  61                 	db	97	;'a'
  9427  00FC0C  6E                 	db	110	;'n'
  9428  00FC0D  64                 	db	100	;'d'
  9429  00FC0E  73                 	db	115	;'s'
  9430  00FC0F  00                 	db	0
  9431  00FC10                     STR_101:
  9432  00FC10  4C                 	db	76	;'L'
  9433  00FC11  6F                 	db	111	;'o'
  9434  00FC12  61                 	db	97	;'a'
  9435  00FC13  64                 	db	100	;'d'
  9436  00FC14  20                 	db	32
  9437  00FC15  69                 	db	105	;'i'
  9438  00FC16  73                 	db	115	;'s'
  9439  00FC17  20                 	db	32
  9440  00FC18  63                 	db	99	;'c'
  9441  00FC19  75                 	db	117	;'u'
  9442  00FC1A  72                 	db	114	;'r'
  9443  00FC1B  72                 	db	114	;'r'
  9444  00FC1C  65                 	db	101	;'e'
  9445  00FC1D  6E                 	db	110	;'n'
  9446  00FC1E  74                 	db	116	;'t'
  9447  00FC1F  6C                 	db	108	;'l'
  9448  00FC20  79                 	db	121	;'y'
  9449  00FC21  20                 	db	32
  9450  00FC22  65                 	db	101	;'e'
  9451  00FC23  6E                 	db	110	;'n'
  9452  00FC24  61                 	db	97	;'a'
  9453  00FC25  62                 	db	98	;'b'
  9454  00FC26  6C                 	db	108	;'l'
  9455  00FC27  65                 	db	101	;'e'
  9456  00FC28  64                 	db	100	;'d'
  9457  00FC29  0A                 	db	10
  9458  00FC2A  0D                 	db	13
  9459  00FC2B  00                 	db	0
  9460  00FC2C                     STR_160:
  9461  00FC2C  52                 	db	82	;'R'
  9462  00FC2D  45                 	db	69	;'E'
  9463  00FC2E  53                 	db	83	;'S'
  9464  00FC2F  45                 	db	69	;'E'
  9465  00FC30  54                 	db	84	;'T'
  9466  00FC31  20                 	db	32
  9467  00FC32  49                 	db	73	;'I'
  9468  00FC33  6E                 	db	110	;'n'
  9469  00FC34  73                 	db	115	;'s'
  9470  00FC35  74                 	db	116	;'t'
  9471  00FC36  72                 	db	114	;'r'
  9472  00FC37  75                 	db	117	;'u'
  9473  00FC38  63                 	db	99	;'c'
  9474  00FC39  74                 	db	116	;'t'
  9475  00FC3A  69                 	db	105	;'i'
  9476  00FC3B  6F                 	db	111	;'o'
  9477  00FC3C  6E                 	db	110	;'n'
  9478  00FC3D  20                 	db	32
  9479  00FC3E  45                 	db	69	;'E'
  9480  00FC3F  78                 	db	120	;'x'
  9481  00FC40  65                 	db	101	;'e'
  9482  00FC41  63                 	db	99	;'c'
  9483  00FC42  75                 	db	117	;'u'
  9484  00FC43  74                 	db	116	;'t'
  9485  00FC44  65                 	db	101	;'e'
  9486  00FC45  64                 	db	100	;'d'
  9487  00FC46  00                 	db	0
  9488  00FC47                     STR_86:
  9489  00FC47  4D                 	db	77	;'M'
  9490  00FC48  65                 	db	101	;'e'
  9491  00FC49  61                 	db	97	;'a'
  9492  00FC4A  73                 	db	115	;'s'
  9493  00FC4B  75                 	db	117	;'u'
  9494  00FC4C  72                 	db	114	;'r'
  9495  00FC4D  65                 	db	101	;'e'
  9496  00FC4E  20                 	db	32
  9497  00FC4F  44                 	db	68	;'D'
  9498  00FC50  65                 	db	101	;'e'
  9499  00FC51  74                 	db	116	;'t'
  9500  00FC52  65                 	db	101	;'e'
  9501  00FC53  63                 	db	99	;'c'
  9502  00FC54  74                 	db	116	;'t'
  9503  00FC55  65                 	db	101	;'e'
  9504  00FC56  64                 	db	100	;'d'
  9505  00FC57  20                 	db	32
  9506  00FC58  43                 	db	67	;'C'
  9507  00FC59  75                 	db	117	;'u'
  9508  00FC5A  72                 	db	114	;'r'
  9509  00FC5B  72                 	db	114	;'r'
  9510  00FC5C  65                 	db	101	;'e'
  9511  00FC5D  6E                 	db	110	;'n'
  9512  00FC5E  74                 	db	116	;'t'
  9513  00FC5F  3F                 	db	63	;'?'
  9514  00FC60  00                 	db	0
  9515  00FC61                     STR_108:
  9516  00FC61  4C                 	db	76	;'L'
  9517  00FC62  6F                 	db	111	;'o'
  9518  00FC63  61                 	db	97	;'a'
  9519  00FC64  64                 	db	100	;'d'
  9520  00FC65  20                 	db	32
  9521  00FC66  68                 	db	104	;'h'
  9522  00FC67  61                 	db	97	;'a'
  9523  00FC68  73                 	db	115	;'s'
  9524  00FC69  20                 	db	32
  9525  00FC6A  62                 	db	98	;'b'
  9526  00FC6B  65                 	db	101	;'e'
  9527  00FC6C  65                 	db	101	;'e'
  9528  00FC6D  6E                 	db	110	;'n'
  9529  00FC6E  20                 	db	32
  9530  00FC6F  64                 	db	100	;'d'
  9531  00FC70  69                 	db	105	;'i'
  9532  00FC71  73                 	db	115	;'s'
  9533  00FC72  61                 	db	97	;'a'
  9534  00FC73  62                 	db	98	;'b'
  9535  00FC74  6C                 	db	108	;'l'
  9536  00FC75  65                 	db	101	;'e'
  9537  00FC76  64                 	db	100	;'d'
  9538  00FC77  0A                 	db	10
  9539  00FC78  0D                 	db	13
  9540  00FC79  00                 	db	0
  9541  00FC7A                     STR_109:
  9542  00FC7A  53                 	db	83	;'S'
  9543  00FC7B  65                 	db	101	;'e'
  9544  00FC7C  74                 	db	116	;'t'
  9545  00FC7D  20                 	db	32
  9546  00FC7E  44                 	db	68	;'D'
  9547  00FC7F  69                 	db	105	;'i'
  9548  00FC80  6D                 	db	109	;'m'
  9549  00FC81  6D                 	db	109	;'m'
  9550  00FC82  69                 	db	105	;'i'
  9551  00FC83  6E                 	db	110	;'n'
  9552  00FC84  67                 	db	103	;'g'
  9553  00FC85  20                 	db	32
  9554  00FC86  50                 	db	80	;'P'
  9555  00FC87  65                 	db	101	;'e'
  9556  00FC88  72                 	db	114	;'r'
  9557  00FC89  63                 	db	99	;'c'
  9558  00FC8A  65                 	db	101	;'e'
  9559  00FC8B  6E                 	db	110	;'n'
  9560  00FC8C  74                 	db	116	;'t'
  9561  00FC8D  61                 	db	97	;'a'
  9562  00FC8E  67                 	db	103	;'g'
  9563  00FC8F  65                 	db	101	;'e'
  9564  00FC90  3A                 	db	58	;':'
  9565  00FC91  20                 	db	32
  9566  00FC92  00                 	db	0
  9567  00FC93                     STR_70:
  9568  00FC93  4E                 	db	78	;'N'
  9569  00FC94  6F                 	db	111	;'o'
  9570  00FC95  20                 	db	32
  9571  00FC96  41                 	db	65	;'A'
  9572  00FC97  44                 	db	68	;'D'
  9573  00FC98  43                 	db	67	;'C'
  9574  00FC99  20                 	db	32
  9575  00FC9A  45                 	db	69	;'E'
  9576  00FC9B  72                 	db	114	;'r'
  9577  00FC9C  72                 	db	114	;'r'
  9578  00FC9D  6F                 	db	111	;'o'
  9579  00FC9E  72                 	db	114	;'r'
  9580  00FC9F  20                 	db	32
  9581  00FCA0  64                 	db	100	;'d'
  9582  00FCA1  65                 	db	101	;'e'
  9583  00FCA2  74                 	db	116	;'t'
  9584  00FCA3  65                 	db	101	;'e'
  9585  00FCA4  63                 	db	99	;'c'
  9586  00FCA5  74                 	db	116	;'t'
  9587  00FCA6  65                 	db	101	;'e'
  9588  00FCA7  64                 	db	100	;'d'
  9589  00FCA8  0A                 	db	10
  9590  00FCA9  0D                 	db	13
  9591  00FCAA  00                 	db	0
  9592  00FCAB                     STR_162:
  9593  00FCAB  53                 	db	83	;'S'
  9594  00FCAC  74                 	db	116	;'t'
  9595  00FCAD  61                 	db	97	;'a'
  9596  00FCAE  63                 	db	99	;'c'
  9597  00FCAF  6B                 	db	107	;'k'
  9598  00FCB0  20                 	db	32
  9599  00FCB1  55                 	db	85	;'U'
  9600  00FCB2  6E                 	db	110	;'n'
  9601  00FCB3  64                 	db	100	;'d'
  9602  00FCB4  65                 	db	101	;'e'
  9603  00FCB5  72                 	db	114	;'r'
  9604  00FCB6  66                 	db	102	;'f'
  9605  00FCB7  6C                 	db	108	;'l'
  9606  00FCB8  6F                 	db	111	;'o'
  9607  00FCB9  77                 	db	119	;'w'
  9608  00FCBA  20                 	db	32
  9609  00FCBB  52                 	db	82	;'R'
  9610  00FCBC  65                 	db	101	;'e'
  9611  00FCBD  73                 	db	115	;'s'
  9612  00FCBE  65                 	db	101	;'e'
  9613  00FCBF  74                 	db	116	;'t'
  9614  00FCC0  00                 	db	0
  9615  00FCC1                     STR_67:
  9616  00FCC1  49                 	db	73	;'I'
  9617  00FCC2  6E                 	db	110	;'n'
  9618  00FCC3  74                 	db	116	;'t'
  9619  00FCC4  65                 	db	101	;'e'
  9620  00FCC5  72                 	db	114	;'r'
  9621  00FCC6  6E                 	db	110	;'n'
  9622  00FCC7  61                 	db	97	;'a'
  9623  00FCC8  6C                 	db	108	;'l'
  9624  00FCC9  20                 	db	32
  9625  00FCCA  46                 	db	70	;'F'
  9626  00FCCB  56                 	db	86	;'V'
  9627  00FCCC  52                 	db	82	;'R'
  9628  00FCCD  20                 	db	32
  9629  00FCCE  42                 	db	66	;'B'
  9630  00FCCF  75                 	db	117	;'u'
  9631  00FCD0  66                 	db	102	;'f'
  9632  00FCD1  66                 	db	102	;'f'
  9633  00FCD2  65                 	db	101	;'e'
  9634  00FCD3  72                 	db	114	;'r'
  9635  00FCD4  20                 	db	32
  9636  00FCD5  31                 	db	49	;'1'
  9637  00FCD6  00                 	db	0
  9638  00FCD7                     STR_161:
  9639  00FCD7  53                 	db	83	;'S'
  9640  00FCD8  74                 	db	116	;'t'
  9641  00FCD9  61                 	db	97	;'a'
  9642  00FCDA  63                 	db	99	;'c'
  9643  00FCDB  6B                 	db	107	;'k'
  9644  00FCDC  20                 	db	32
  9645  00FCDD  4F                 	db	79	;'O'
  9646  00FCDE  76                 	db	118	;'v'
  9647  00FCDF  65                 	db	101	;'e'
  9648  00FCE0  72                 	db	114	;'r'
  9649  00FCE1  66                 	db	102	;'f'
  9650  00FCE2  6C                 	db	108	;'l'
  9651  00FCE3  6F                 	db	111	;'o'
  9652  00FCE4  77                 	db	119	;'w'
  9653  00FCE5  20                 	db	32
  9654  00FCE6  52                 	db	82	;'R'
  9655  00FCE7  65                 	db	101	;'e'
  9656  00FCE8  73                 	db	115	;'s'
  9657  00FCE9  65                 	db	101	;'e'
  9658  00FCEA  74                 	db	116	;'t'
  9659  00FCEB  00                 	db	0
  9660  00FCEC                     STR_72:
  9661  00FCEC  43                 	db	67	;'C'
  9662  00FCED  6C                 	db	108	;'l'
  9663  00FCEE  65                 	db	101	;'e'
  9664  00FCEF  61                 	db	97	;'a'
  9665  00FCF0  72                 	db	114	;'r'
  9666  00FCF1  69                 	db	105	;'i'
  9667  00FCF2  6E                 	db	110	;'n'
  9668  00FCF3  67                 	db	103	;'g'
  9669  00FCF4  20                 	db	32
  9670  00FCF5  41                 	db	65	;'A'
  9671  00FCF6  44                 	db	68	;'D'
  9672  00FCF7  43                 	db	67	;'C'
  9673  00FCF8  20                 	db	32
  9674  00FCF9  45                 	db	69	;'E'
  9675  00FCFA  72                 	db	114	;'r'
  9676  00FCFB  72                 	db	114	;'r'
  9677  00FCFC  6F                 	db	111	;'o'
  9678  00FCFD  72                 	db	114	;'r'
  9679  00FCFE  0A                 	db	10
  9680  00FCFF  0D                 	db	13
  9681  00FD00  00                 	db	0
  9682  00FD01                     STR_90:
  9683  00FD01  4D                 	db	77	;'M'
  9684  00FD02  65                 	db	101	;'e'
  9685  00FD03  61                 	db	97	;'a'
  9686  00FD04  73                 	db	115	;'s'
  9687  00FD05  75                 	db	117	;'u'
  9688  00FD06  72                 	db	114	;'r'
  9689  00FD07  65                 	db	101	;'e'
  9690  00FD08  20                 	db	32
  9691  00FD09  52                 	db	82	;'R'
  9692  00FD0A  4D                 	db	77	;'M'
  9693  00FD0B  53                 	db	83	;'S'
  9694  00FD0C  20                 	db	32
  9695  00FD0D  56                 	db	86	;'V'
  9696  00FD0E  6F                 	db	111	;'o'
  9697  00FD0F  6C                 	db	108	;'l'
  9698  00FD10  74                 	db	116	;'t'
  9699  00FD11  61                 	db	97	;'a'
  9700  00FD12  67                 	db	103	;'g'
  9701  00FD13  65                 	db	101	;'e'
  9702  00FD14  3F                 	db	63	;'?'
  9703  00FD15  00                 	db	0
  9704  00FD16                     STR_88:
  9705  00FD16  4D                 	db	77	;'M'
  9706  00FD17  65                 	db	101	;'e'
  9707  00FD18  61                 	db	97	;'a'
  9708  00FD19  73                 	db	115	;'s'
  9709  00FD1A  75                 	db	117	;'u'
  9710  00FD1B  72                 	db	114	;'r'
  9711  00FD1C  65                 	db	101	;'e'
  9712  00FD1D  20                 	db	32
  9713  00FD1E  52                 	db	82	;'R'
  9714  00FD1F  4D                 	db	77	;'M'
  9715  00FD20  53                 	db	83	;'S'
  9716  00FD21  20                 	db	32
  9717  00FD22  43                 	db	67	;'C'
  9718  00FD23  75                 	db	117	;'u'
  9719  00FD24  72                 	db	114	;'r'
  9720  00FD25  72                 	db	114	;'r'
  9721  00FD26  65                 	db	101	;'e'
  9722  00FD27  6E                 	db	110	;'n'
  9723  00FD28  74                 	db	116	;'t'
  9724  00FD29  3F                 	db	63	;'?'
  9725  00FD2A  00                 	db	0
  9726  00FD2B                     STR_124:
  9727  00FD2B  4D                 	db	77	;'M'
  9728  00FD2C  61                 	db	97	;'a'
  9729  00FD2D  78                 	db	120	;'x'
  9730  00FD2E  20                 	db	32
  9731  00FD2F  50                 	db	80	;'P'
  9732  00FD30  4F                 	db	79	;'O'
  9733  00FD31  53                 	db	83	;'S'
  9734  00FD32  33                 	db	51	;'3'
  9735  00FD33  50                 	db	80	;'P'
  9736  00FD34  33                 	db	51	;'3'
  9737  00FD35  20                 	db	32
  9738  00FD36  56                 	db	86	;'V'
  9739  00FD37  6F                 	db	111	;'o'
  9740  00FD38  6C                 	db	108	;'l'
  9741  00FD39  74                 	db	116	;'t'
  9742  00FD3A  61                 	db	97	;'a'
  9743  00FD3B  67                 	db	103	;'g'
  9744  00FD3C  65                 	db	101	;'e'
  9745  00FD3D  3F                 	db	63	;'?'
  9746  00FD3E  00                 	db	0
  9747  00FD3F                     STR_157:
  9748  00FD3F  4D                 	db	77	;'M'
  9749  00FD40  61                 	db	97	;'a'
  9750  00FD41  73                 	db	115	;'s'
  9751  00FD42  74                 	db	116	;'t'
  9752  00FD43  65                 	db	101	;'e'
  9753  00FD44  72                 	db	114	;'r'
  9754  00FD45  20                 	db	32
  9755  00FD46  43                 	db	67	;'C'
  9756  00FD47  6C                 	db	108	;'l'
  9757  00FD48  65                 	db	101	;'e'
  9758  00FD49  61                 	db	97	;'a'
  9759  00FD4A  72                 	db	114	;'r'
  9760  00FD4B  20                 	db	32
  9761  00FD4C  52                 	db	82	;'R'
  9762  00FD4D  65                 	db	101	;'e'
  9763  00FD4E  73                 	db	115	;'s'
  9764  00FD4F  65                 	db	101	;'e'
  9765  00FD50  74                 	db	116	;'t'
  9766  00FD51  00                 	db	0
  9767  00FD52                     STR_126:
  9768  00FD52  4D                 	db	77	;'M'
  9769  00FD53  61                 	db	97	;'a'
  9770  00FD54  78                 	db	120	;'x'
  9771  00FD55  20                 	db	32
  9772  00FD56  50                 	db	80	;'P'
  9773  00FD57  4F                 	db	79	;'O'
  9774  00FD58  53                 	db	83	;'S'
  9775  00FD59  31                 	db	49	;'1'
  9776  00FD5A  32                 	db	50	;'2'
  9777  00FD5B  20                 	db	32
  9778  00FD5C  56                 	db	86	;'V'
  9779  00FD5D  6F                 	db	111	;'o'
  9780  00FD5E  6C                 	db	108	;'l'
  9781  00FD5F  74                 	db	116	;'t'
  9782  00FD60  61                 	db	97	;'a'
  9783  00FD61  67                 	db	103	;'g'
  9784  00FD62  65                 	db	101	;'e'
  9785  00FD63  3F                 	db	63	;'?'
  9786  00FD64  00                 	db	0
  9787  00FD65                     STR_80:
  9788  00FD65  4D                 	db	77	;'M'
  9789  00FD66  65                 	db	101	;'e'
  9790  00FD67  61                 	db	97	;'a'
  9791  00FD68  73                 	db	115	;'s'
  9792  00FD69  75                 	db	117	;'u'
  9793  00FD6A  72                 	db	114	;'r'
  9794  00FD6B  65                 	db	101	;'e'
  9795  00FD6C  20                 	db	32
  9796  00FD6D  44                 	db	68	;'D'
  9797  00FD6E  69                 	db	105	;'i'
  9798  00FD6F  65                 	db	101	;'e'
  9799  00FD70  20                 	db	32
  9800  00FD71  54                 	db	84	;'T'
  9801  00FD72  65                 	db	101	;'e'
  9802  00FD73  6D                 	db	109	;'m'
  9803  00FD74  70                 	db	112	;'p'
  9804  00FD75  3F                 	db	63	;'?'
  9805  00FD76  00                 	db	0
  9806  00FD77                     STR_165:
  9807  00FD77  30                 	db	48	;'0'
  9808  00FD78  31                 	db	49	;'1'
  9809  00FD79  32                 	db	50	;'2'
  9810  00FD7A  33                 	db	51	;'3'
  9811  00FD7B  34                 	db	52	;'4'
  9812  00FD7C  35                 	db	53	;'5'
  9813  00FD7D  36                 	db	54	;'6'
  9814  00FD7E  37                 	db	55	;'7'
  9815  00FD7F  38                 	db	56	;'8'
  9816  00FD80  39                 	db	57	;'9'
  9817  00FD81  41                 	db	65	;'A'
  9818  00FD82  42                 	db	66	;'B'
  9819  00FD83  43                 	db	67	;'C'
  9820  00FD84  44                 	db	68	;'D'
  9821  00FD85  45                 	db	69	;'E'
  9822  00FD86  46                 	db	70	;'F'
  9823  00FD87  00                 	db	0
  9824  00FD88                     STR_51:
  9825  00FD88  41                 	db	65	;'A'
  9826  00FD89  43                 	db	67	;'C'
  9827  00FD8A  20                 	db	32
  9828  00FD8B  50                 	db	80	;'P'
  9829  00FD8C  6F                 	db	111	;'o'
  9830  00FD8D  77                 	db	119	;'w'
  9831  00FD8E  65                 	db	101	;'e'
  9832  00FD8F  72                 	db	114	;'r'
  9833  00FD90  20                 	db	32
  9834  00FD91  4D                 	db	77	;'M'
  9835  00FD92  65                 	db	101	;'e'
  9836  00FD93  74                 	db	116	;'t'
  9837  00FD94  65                 	db	101	;'e'
  9838  00FD95  72                 	db	114	;'r'
  9839  00FD96  0A                 	db	10
  9840  00FD97  0D                 	db	13
  9841  00FD98  00                 	db	0
  9842  00FD99                     STR_103:
  9843  00FD99  44                 	db	68	;'D'
  9844  00FD9A  69                 	db	105	;'i'
  9845  00FD9B  6D                 	db	109	;'m'
  9846  00FD9C  6D                 	db	109	;'m'
  9847  00FD9D  69                 	db	105	;'i'
  9848  00FD9E  6E                 	db	110	;'n'
  9849  00FD9F  67                 	db	103	;'g'
  9850  00FDA0  20                 	db	32
  9851  00FDA1  45                 	db	69	;'E'
  9852  00FDA2  6E                 	db	110	;'n'
  9853  00FDA3  61                 	db	97	;'a'
  9854  00FDA4  62                 	db	98	;'b'
  9855  00FDA5  6C                 	db	108	;'l'
  9856  00FDA6  65                 	db	101	;'e'
  9857  00FDA7  64                 	db	100	;'d'
  9858  00FDA8  3F                 	db	63	;'?'
  9859  00FDA9  00                 	db	0
  9860  00FDAA                     STR_130:
  9861  00FDAA  4D                 	db	77	;'M'
  9862  00FDAB  61                 	db	97	;'a'
  9863  00FDAC  78                 	db	120	;'x'
  9864  00FDAD  20                 	db	32
  9865  00FDAE  46                 	db	70	;'F'
  9866  00FDAF  56                 	db	86	;'V'
  9867  00FDB0  52                 	db	82	;'R'
  9868  00FDB1  20                 	db	32
  9869  00FDB2  56                 	db	86	;'V'
  9870  00FDB3  6F                 	db	111	;'o'
  9871  00FDB4  6C                 	db	108	;'l'
  9872  00FDB5  74                 	db	116	;'t'
  9873  00FDB6  61                 	db	97	;'a'
  9874  00FDB7  67                 	db	103	;'g'
  9875  00FDB8  65                 	db	101	;'e'
  9876  00FDB9  3F                 	db	63	;'?'
  9877  00FDBA  00                 	db	0
  9878  00FDBB                     STR_73:
  9879  00FDBB  56                 	db	86	;'V'
  9880  00FDBC  43                 	db	67	;'C'
  9881  00FDBD  43                 	db	67	;'C'
  9882  00FDBE  20                 	db	32
  9883  00FDBF  4F                 	db	79	;'O'
  9884  00FDC0  76                 	db	118	;'v'
  9885  00FDC1  65                 	db	101	;'e'
  9886  00FDC2  72                 	db	114	;'r'
  9887  00FDC3  76                 	db	118	;'v'
  9888  00FDC4  6F                 	db	111	;'o'
  9889  00FDC5  6C                 	db	108	;'l'
  9890  00FDC6  74                 	db	116	;'t'
  9891  00FDC7  61                 	db	97	;'a'
  9892  00FDC8  67                 	db	103	;'g'
  9893  00FDC9  65                 	db	101	;'e'
  9894  00FDCA  3F                 	db	63	;'?'
  9895  00FDCB  00                 	db	0
  9896  00FDCC                     STR_120:
  9897  00FDCC  4D                 	db	77	;'M'
  9898  00FDCD  61                 	db	97	;'a'
  9899  00FDCE  78                 	db	120	;'x'
  9900  00FDCF  20                 	db	32
  9901  00FDD0  52                 	db	82	;'R'
  9902  00FDD1  4D                 	db	77	;'M'
  9903  00FDD2  53                 	db	83	;'S'
  9904  00FDD3  20                 	db	32
  9905  00FDD4  43                 	db	67	;'C'
  9906  00FDD5  75                 	db	117	;'u'
  9907  00FDD6  72                 	db	114	;'r'
  9908  00FDD7  72                 	db	114	;'r'
  9909  00FDD8  65                 	db	101	;'e'
  9910  00FDD9  6E                 	db	110	;'n'
  9911  00FDDA  74                 	db	116	;'t'
  9912  00FDDB  3F                 	db	63	;'?'
  9913  00FDDC  00                 	db	0
  9914  00FDDD                     STR_132:
  9915  00FDDD  43                 	db	67	;'C'
  9916  00FDDE  6C                 	db	108	;'l'
  9917  00FDDF  65                 	db	101	;'e'
  9918  00FDE0  61                 	db	97	;'a'
  9919  00FDE1  72                 	db	114	;'r'
  9920  00FDE2  20                 	db	32
  9921  00FDE3  4D                 	db	77	;'M'
  9922  00FDE4  61                 	db	97	;'a'
  9923  00FDE5  78                 	db	120	;'x'
  9924  00FDE6  20                 	db	32
  9925  00FDE7  56                 	db	86	;'V'
  9926  00FDE8  61                 	db	97	;'a'
  9927  00FDE9  6C                 	db	108	;'l'
  9928  00FDEA  75                 	db	117	;'u'
  9929  00FDEB  65                 	db	101	;'e'
  9930  00FDEC  73                 	db	115	;'s'
  9931  00FDED  00                 	db	0
  9932  00FDEE                     STR_154:
  9933  00FDEE  55                 	db	85	;'U'
  9934  00FDEF  6E                 	db	110	;'n'
  9935  00FDF0  64                 	db	100	;'d'
  9936  00FDF1  65                 	db	101	;'e'
  9937  00FDF2  66                 	db	102	;'f'
  9938  00FDF3  69                 	db	105	;'i'
  9939  00FDF4  6E                 	db	110	;'n'
  9940  00FDF5  65                 	db	101	;'e'
  9941  00FDF6  64                 	db	100	;'d'
  9942  00FDF7  20                 	db	32
  9943  00FDF8  52                 	db	82	;'R'
  9944  00FDF9  65                 	db	101	;'e'
  9945  00FDFA  73                 	db	115	;'s'
  9946  00FDFB  65                 	db	101	;'e'
  9947  00FDFC  74                 	db	116	;'t'
  9948  00FDFD  00                 	db	0
  9949  00FDFE                     STR_156:
  9950  00FDFE  42                 	db	66	;'B'
  9951  00FDFF  72                 	db	114	;'r'
  9952  00FE00  6F                 	db	111	;'o'
  9953  00FE01  77                 	db	119	;'w'
  9954  00FE02  6E                 	db	110	;'n'
  9955  00FE03  20                 	db	32
  9956  00FE04  4F                 	db	79	;'O'
  9957  00FE05  75                 	db	117	;'u'
  9958  00FE06  74                 	db	116	;'t'
  9959  00FE07  20                 	db	32
  9960  00FE08  52                 	db	82	;'R'
  9961  00FE09  65                 	db	101	;'e'
  9962  00FE0A  73                 	db	115	;'s'
  9963  00FE0B  65                 	db	101	;'e'
  9964  00FE0C  74                 	db	116	;'t'
  9965  00FE0D  00                 	db	0
  9966  00FE0E                     STR_76:
  9967  00FE0E  4D                 	db	77	;'M'
  9968  00FE0F  65                 	db	101	;'e'
  9969  00FE10  61                 	db	97	;'a'
  9970  00FE11  73                 	db	115	;'s'
  9971  00FE12  75                 	db	117	;'u'
  9972  00FE13  72                 	db	114	;'r'
  9973  00FE14  65                 	db	101	;'e'
  9974  00FE15  20                 	db	32
  9975  00FE16  50                 	db	80	;'P'
  9976  00FE17  4F                 	db	79	;'O'
  9977  00FE18  53                 	db	83	;'S'
  9978  00FE19  33                 	db	51	;'3'
  9979  00FE1A  50                 	db	80	;'P'
  9980  00FE1B  33                 	db	51	;'3'
  9981  00FE1C  3F                 	db	63	;'?'
  9982  00FE1D  00                 	db	0
  9983  00FE1E                     STR_116:
  9984  00FE1E  44                 	db	68	;'D'
  9985  00FE1F  65                 	db	101	;'e'
  9986  00FE20  76                 	db	118	;'v'
  9987  00FE21  69                 	db	105	;'i'
  9988  00FE22  63                 	db	99	;'c'
  9989  00FE23  65                 	db	101	;'e'
  9990  00FE24  20                 	db	32
  9991  00FE25  4F                 	db	79	;'O'
  9992  00FE26  6E                 	db	110	;'n'
  9993  00FE27  20                 	db	32
  9994  00FE28  54                 	db	84	;'T'
  9995  00FE29  69                 	db	105	;'i'
  9996  00FE2A  6D                 	db	109	;'m'
  9997  00FE2B  65                 	db	101	;'e'
  9998  00FE2C  3F                 	db	63	;'?'
  9999  00FE2D  00                 	db	0
 10000  00FE2E                     STR_47:
 10001  00FE2E  43                 	db	67	;'C'
 10002  00FE2F  61                 	db	97	;'a'
 10003  00FE30  75                 	db	117	;'u'
 10004  00FE31  73                 	db	115	;'s'
 10005  00FE32  65                 	db	101	;'e'
 10006  00FE33  20                 	db	32
 10007  00FE34  6F                 	db	111	;'o'
 10008  00FE35  66                 	db	102	;'f'
 10009  00FE36  20                 	db	32
 10010  00FE37  52                 	db	82	;'R'
 10011  00FE38  65                 	db	101	;'e'
 10012  00FE39  73                 	db	115	;'s'
 10013  00FE3A  65                 	db	101	;'e'
 10014  00FE3B  74                 	db	116	;'t'
 10015  00FE3C  3F                 	db	63	;'?'
 10016  00FE3D  00                 	db	0
 10017  00FE3E                     STR_96:
 10018  00FE3E  44                 	db	68	;'D'
 10019  00FE3F  69                 	db	105	;'i'
 10020  00FE40  73                 	db	115	;'s'
 10021  00FE41  61                 	db	97	;'a'
 10022  00FE42  62                 	db	98	;'b'
 10023  00FE43  6C                 	db	108	;'l'
 10024  00FE44  65                 	db	101	;'e'
 10025  00FE45  20                 	db	32
 10026  00FE46  44                 	db	68	;'D'
 10027  00FE47  69                 	db	105	;'i'
 10028  00FE48  6D                 	db	109	;'m'
 10029  00FE49  6D                 	db	109	;'m'
 10030  00FE4A  69                 	db	105	;'i'
 10031  00FE4B  6E                 	db	110	;'n'
 10032  00FE4C  67                 	db	103	;'g'
 10033  00FE4D  00                 	db	0
 10034  00FE4E                     STR_71:
 10035  00FE4E  43                 	db	67	;'C'
 10036  00FE4F  6C                 	db	108	;'l'
 10037  00FE50  65                 	db	101	;'e'
 10038  00FE51  61                 	db	97	;'a'
 10039  00FE52  72                 	db	114	;'r'
 10040  00FE53  20                 	db	32
 10041  00FE54  41                 	db	65	;'A'
 10042  00FE55  44                 	db	68	;'D'
 10043  00FE56  43                 	db	67	;'C'
 10044  00FE57  20                 	db	32
 10045  00FE58  45                 	db	69	;'E'
 10046  00FE59  72                 	db	114	;'r'
 10047  00FE5A  72                 	db	114	;'r'
 10048  00FE5B  6F                 	db	111	;'o'
 10049  00FE5C  72                 	db	114	;'r'
 10050  00FE5D  00                 	db	0
 10051  00FE5E                     STR_155:
 10052  00FE5E  50                 	db	80	;'P'
 10053  00FE5F  6F                 	db	111	;'o'
 10054  00FE60  77                 	db	119	;'w'
 10055  00FE61  65                 	db	101	;'e'
 10056  00FE62  72                 	db	114	;'r'
 10057  00FE63  20                 	db	32
 10058  00FE64  4F                 	db	79	;'O'
 10059  00FE65  6E                 	db	110	;'n'
 10060  00FE66  20                 	db	32
 10061  00FE67  52                 	db	82	;'R'
 10062  00FE68  65                 	db	101	;'e'
 10063  00FE69  73                 	db	115	;'s'
 10064  00FE6A  65                 	db	101	;'e'
 10065  00FE6B  74                 	db	116	;'t'
 10066  00FE6C  00                 	db	0
 10067  00FE6D                     STR_78:
 10068  00FE6D  4D                 	db	77	;'M'
 10069  00FE6E  65                 	db	101	;'e'
 10070  00FE6F  61                 	db	97	;'a'
 10071  00FE70  73                 	db	115	;'s'
 10072  00FE71  75                 	db	117	;'u'
 10073  00FE72  72                 	db	114	;'r'
 10074  00FE73  65                 	db	101	;'e'
 10075  00FE74  20                 	db	32
 10076  00FE75  50                 	db	80	;'P'
 10077  00FE76  4F                 	db	79	;'O'
 10078  00FE77  53                 	db	83	;'S'
 10079  00FE78  31                 	db	49	;'1'
 10080  00FE79  32                 	db	50	;'2'
 10081  00FE7A  3F                 	db	63	;'?'
 10082  00FE7B  00                 	db	0
 10083  00FE7C                     STR_92:
 10084  00FE7C  4D                 	db	77	;'M'
 10085  00FE7D  65                 	db	101	;'e'
 10086  00FE7E  61                 	db	97	;'a'
 10087  00FE7F  73                 	db	115	;'s'
 10088  00FE80  75                 	db	117	;'u'
 10089  00FE81  72                 	db	114	;'r'
 10090  00FE82  65                 	db	101	;'e'
 10091  00FE83  20                 	db	32
 10092  00FE84  50                 	db	80	;'P'
 10093  00FE85  6F                 	db	111	;'o'
 10094  00FE86  77                 	db	119	;'w'
 10095  00FE87  65                 	db	101	;'e'
 10096  00FE88  72                 	db	114	;'r'
 10097  00FE89  3F                 	db	63	;'?'
 10098  00FE8A  00                 	db	0
 10099  00FE8B                     STR_94:
 10100  00FE8B  45                 	db	69	;'E'
 10101  00FE8C  6E                 	db	110	;'n'
 10102  00FE8D  61                 	db	97	;'a'
 10103  00FE8E  62                 	db	98	;'b'
 10104  00FE8F  6C                 	db	108	;'l'
 10105  00FE90  65                 	db	101	;'e'
 10106  00FE91  20                 	db	32
 10107  00FE92  44                 	db	68	;'D'
 10108  00FE93  69                 	db	105	;'i'
 10109  00FE94  6D                 	db	109	;'m'
 10110  00FE95  6D                 	db	109	;'m'
 10111  00FE96  69                 	db	105	;'i'
 10112  00FE97  6E                 	db	110	;'n'
 10113  00FE98  67                 	db	103	;'g'
 10114  00FE99  00                 	db	0
 10115  00FE9A                     STR_66:
 10116  00FE9A  49                 	db	73	;'I'
 10117  00FE9B  6E                 	db	110	;'n'
 10118  00FE9C  74                 	db	116	;'t'
 10119  00FE9D  65                 	db	101	;'e'
 10120  00FE9E  72                 	db	114	;'r'
 10121  00FE9F  6E                 	db	110	;'n'
 10122  00FEA0  61                 	db	97	;'a'
 10123  00FEA1  6C                 	db	108	;'l'
 10124  00FEA2  20                 	db	32
 10125  00FEA3  44                 	db	68	;'D'
 10126  00FEA4  41                 	db	65	;'A'
 10127  00FEA5  43                 	db	67	;'C'
 10128  00FEA6  31                 	db	49	;'1'
 10129  00FEA7  00                 	db	0
 10130  00FEA8                     STR_84:
 10131  00FEA8  4D                 	db	77	;'M'
 10132  00FEA9  65                 	db	101	;'e'
 10133  00FEAA  61                 	db	97	;'a'
 10134  00FEAB  73                 	db	115	;'s'
 10135  00FEAC  75                 	db	117	;'u'
 10136  00FEAD  72                 	db	114	;'r'
 10137  00FEAE  65                 	db	101	;'e'
 10138  00FEAF  20                 	db	32
 10139  00FEB0  41                 	db	65	;'A'
 10140  00FEB1  56                 	db	86	;'V'
 10141  00FEB2  53                 	db	83	;'S'
 10142  00FEB3  53                 	db	83	;'S'
 10143  00FEB4  3F                 	db	63	;'?'
 10144  00FEB5  00                 	db	0
 10145  00FEB6                     STR_100:
 10146  00FEB6  4C                 	db	76	;'L'
 10147  00FEB7  6F                 	db	111	;'o'
 10148  00FEB8  61                 	db	97	;'a'
 10149  00FEB9  64                 	db	100	;'d'
 10150  00FEBA  20                 	db	32
 10151  00FEBB  45                 	db	69	;'E'
 10152  00FEBC  6E                 	db	110	;'n'
 10153  00FEBD  61                 	db	97	;'a'
 10154  00FEBE  62                 	db	98	;'b'
 10155  00FEBF  6C                 	db	108	;'l'
 10156  00FEC0  65                 	db	101	;'e'
 10157  00FEC1  64                 	db	100	;'d'
 10158  00FEC2  3F                 	db	63	;'?'
 10159  00FEC3  00                 	db	0
 10160  00FEC4                     STR_118:
 10161  00FEC4  4C                 	db	76	;'L'
 10162  00FEC5  6F                 	db	111	;'o'
 10163  00FEC6  61                 	db	97	;'a'
 10164  00FEC7  64                 	db	100	;'d'
 10165  00FEC8  20                 	db	32
 10166  00FEC9  4F                 	db	79	;'O'
 10167  00FECA  6E                 	db	110	;'n'
 10168  00FECB  20                 	db	32
 10169  00FECC  54                 	db	84	;'T'
 10170  00FECD  69                 	db	105	;'i'
 10171  00FECE  6D                 	db	109	;'m'
 10172  00FECF  65                 	db	101	;'e'
 10173  00FED0  3F                 	db	63	;'?'
 10174  00FED1  00                 	db	0
 10175  00FED2                     STR_128:
 10176  00FED2  4D                 	db	77	;'M'
 10177  00FED3  61                 	db	97	;'a'
 10178  00FED4  78                 	db	120	;'x'
 10179  00FED5  20                 	db	32
 10180  00FED6  44                 	db	68	;'D'
 10181  00FED7  69                 	db	105	;'i'
 10182  00FED8  65                 	db	101	;'e'
 10183  00FED9  20                 	db	32
 10184  00FEDA  54                 	db	84	;'T'
 10185  00FEDB  65                 	db	101	;'e'
 10186  00FEDC  6D                 	db	109	;'m'
 10187  00FEDD  70                 	db	112	;'p'
 10188  00FEDE  3F                 	db	63	;'?'
 10189  00FEDF  00                 	db	0
 10190  00FEE0                     STR_64:
 10191  00FEE0  49                 	db	73	;'I'
 10192  00FEE1  6E                 	db	110	;'n'
 10193  00FEE2  74                 	db	116	;'t'
 10194  00FEE3  65                 	db	101	;'e'
 10195  00FEE4  72                 	db	114	;'r'
 10196  00FEE5  6E                 	db	110	;'n'
 10197  00FEE6  61                 	db	97	;'a'
 10198  00FEE7  6C                 	db	108	;'l'
 10199  00FEE8  20                 	db	32
 10200  00FEE9  41                 	db	65	;'A'
 10201  00FEEA  56                 	db	86	;'V'
 10202  00FEEB  53                 	db	83	;'S'
 10203  00FEEC  53                 	db	83	;'S'
 10204  00FEED  00                 	db	0
 10205  00FEEE                     STR_65:
 10206  00FEEE  49                 	db	73	;'I'
 10207  00FEEF  6E                 	db	110	;'n'
 10208  00FEF0  74                 	db	116	;'t'
 10209  00FEF1  65                 	db	101	;'e'
 10210  00FEF2  72                 	db	114	;'r'
 10211  00FEF3  6E                 	db	110	;'n'
 10212  00FEF4  61                 	db	97	;'a'
 10213  00FEF5  6C                 	db	108	;'l'
 10214  00FEF6  20                 	db	32
 10215  00FEF7  54                 	db	84	;'T'
 10216  00FEF8  65                 	db	101	;'e'
 10217  00FEF9  6D                 	db	109	;'m'
 10218  00FEFA  70                 	db	112	;'p'
 10219  00FEFB  00                 	db	0
 10220  00FEFC                     STR_152:
 10221  00FEFC  50                 	db	80	;'P'
 10222  00FEFD  49                 	db	73	;'I'
 10223  00FEFE  43                 	db	67	;'C'
 10224  00FEFF  31                 	db	49	;'1'
 10225  00FF00  38                 	db	56	;'8'
 10226  00FF01  4C                 	db	76	;'L'
 10227  00FF02  46                 	db	70	;'F'
 10228  00FF03  36                 	db	54	;'6'
 10229  00FF04  37                 	db	55	;'7'
 10230  00FF05  4B                 	db	75	;'K'
 10231  00FF06  34                 	db	52	;'4'
 10232  00FF07  30                 	db	48	;'0'
 10233  00FF08  00                 	db	0
 10234  00FF09                     STR_55:
 10235  00FF09  52                 	db	82	;'R'
 10236  00FF0A  65                 	db	101	;'e'
 10237  00FF0B  76                 	db	118	;'v'
 10238  00FF0C  69                 	db	105	;'i'
 10239  00FF0D  73                 	db	115	;'s'
 10240  00FF0E  69                 	db	105	;'i'
 10241  00FF0F  6F                 	db	111	;'o'
 10242  00FF10  6E                 	db	110	;'n'
 10243  00FF11  20                 	db	32
 10244  00FF12  49                 	db	73	;'I'
 10245  00FF13  44                 	db	68	;'D'
 10246  00FF14  3F                 	db	63	;'?'
 10247  00FF15  00                 	db	0
 10248  00FF16                     STR_82:
 10249  00FF16  4D                 	db	77	;'M'
 10250  00FF17  65                 	db	101	;'e'
 10251  00FF18  61                 	db	97	;'a'
 10252  00FF19  73                 	db	115	;'s'
 10253  00FF1A  75                 	db	117	;'u'
 10254  00FF1B  72                 	db	114	;'r'
 10255  00FF1C  65                 	db	101	;'e'
 10256  00FF1D  20                 	db	32
 10257  00FF1E  46                 	db	70	;'F'
 10258  00FF1F  56                 	db	86	;'V'
 10259  00FF20  52                 	db	82	;'R'
 10260  00FF21  3F                 	db	63	;'?'
 10261  00FF22  00                 	db	0
 10262  00FF23                     STR_107:
 10263  00FF23  44                 	db	68	;'D'
 10264  00FF24  69                 	db	105	;'i'
 10265  00FF25  73                 	db	115	;'s'
 10266  00FF26  61                 	db	97	;'a'
 10267  00FF27  62                 	db	98	;'b'
 10268  00FF28  6C                 	db	108	;'l'
 10269  00FF29  65                 	db	101	;'e'
 10270  00FF2A  20                 	db	32
 10271  00FF2B  4C                 	db	76	;'L'
 10272  00FF2C  6F                 	db	111	;'o'
 10273  00FF2D  61                 	db	97	;'a'
 10274  00FF2E  64                 	db	100	;'d'
 10275  00FF2F  00                 	db	0
 10276  00FF30                     STR_151:
 10277  00FF30  50                 	db	80	;'P'
 10278  00FF31  49                 	db	73	;'I'
 10279  00FF32  43                 	db	67	;'C'
 10280  00FF33  31                 	db	49	;'1'
 10281  00FF34  38                 	db	56	;'8'
 10282  00FF35  46                 	db	70	;'F'
 10283  00FF36  36                 	db	54	;'6'
 10284  00FF37  37                 	db	55	;'7'
 10285  00FF38  4B                 	db	75	;'K'
 10286  00FF39  34                 	db	52	;'4'
 10287  00FF3A  30                 	db	48	;'0'
 10288  00FF3B  00                 	db	0
 10289  00FF3C                     STR_98:
 10290  00FF3C  45                 	db	69	;'E'
 10291  00FF3D  6E                 	db	110	;'n'
 10292  00FF3E  61                 	db	97	;'a'
 10293  00FF3F  62                 	db	98	;'b'
 10294  00FF40  6C                 	db	108	;'l'
 10295  00FF41  65                 	db	101	;'e'
 10296  00FF42  20                 	db	32
 10297  00FF43  4C                 	db	76	;'L'
 10298  00FF44  6F                 	db	111	;'o'
 10299  00FF45  61                 	db	97	;'a'
 10300  00FF46  64                 	db	100	;'d'
 10301  00FF47  00                 	db	0
 10302  00FF48                     STR_53:
 10303  00FF48  44                 	db	68	;'D'
 10304  00FF49  65                 	db	101	;'e'
 10305  00FF4A  76                 	db	118	;'v'
 10306  00FF4B  69                 	db	105	;'i'
 10307  00FF4C  63                 	db	99	;'c'
 10308  00FF4D  65                 	db	101	;'e'
 10309  00FF4E  20                 	db	32
 10310  00FF4F  49                 	db	73	;'I'
 10311  00FF50  44                 	db	68	;'D'
 10312  00FF51  3F                 	db	63	;'?'
 10313  00FF52  00                 	db	0
 10314  00FF53                     STR_122:
 10315  00FF53  4D                 	db	77	;'M'
 10316  00FF54  61                 	db	97	;'a'
 10317  00FF55  78                 	db	120	;'x'
 10318  00FF56  20                 	db	32
 10319  00FF57  50                 	db	80	;'P'
 10320  00FF58  6F                 	db	111	;'o'
 10321  00FF59  77                 	db	119	;'w'
 10322  00FF5A  65                 	db	101	;'e'
 10323  00FF5B  72                 	db	114	;'r'
 10324  00FF5C  3F                 	db	63	;'?'
 10325  00FF5D  00                 	db	0
 10326  00FF5E                     STR_60:
 10327  00FF5E  41                 	db	65	;'A'
 10328  00FF5F  44                 	db	68	;'D'
 10329  00FF60  43                 	db	67	;'C'
 10330  00FF61  20                 	db	32
 10331  00FF62  45                 	db	69	;'E'
 10332  00FF63  72                 	db	114	;'r'
 10333  00FF64  72                 	db	114	;'r'
 10334  00FF65  6F                 	db	111	;'o'
 10335  00FF66  72                 	db	114	;'r'
 10336  00FF67  3F                 	db	63	;'?'
 10337  00FF68  00                 	db	0
 10338  00FF69                     STR_57:
 10339  00FF69  55                 	db	85	;'U'
 10340  00FF6A  73                 	db	115	;'s'
 10341  00FF6B  65                 	db	101	;'e'
 10342  00FF6C  72                 	db	114	;'r'
 10343  00FF6D  20                 	db	32
 10344  00FF6E  49                 	db	73	;'I'
 10345  00FF6F  44                 	db	68	;'D'
 10346  00FF70  73                 	db	115	;'s'
 10347  00FF71  3F                 	db	63	;'?'
 10348  00FF72  00                 	db	0
 10349  00FF73                     STR_68:
 10350  00FF73  55                 	db	85	;'U'
 10351  00FF74  6E                 	db	110	;'n'
 10352  00FF75  64                 	db	100	;'d'
 10353  00FF76  65                 	db	101	;'e'
 10354  00FF77  66                 	db	102	;'f'
 10355  00FF78  69                 	db	105	;'i'
 10356  00FF79  6E                 	db	110	;'n'
 10357  00FF7A  65                 	db	101	;'e'
 10358  00FF7B  64                 	db	100	;'d'
 10359  00FF7C  00                 	db	0
 10360  00FF7D                     STR_142:
 10361  00FF7D  48                 	db	72	;'H'
 10362  00FF7E  65                 	db	101	;'e'
 10363  00FF7F  6C                 	db	108	;'l'
 10364  00FF80  70                 	db	112	;'p'
 10365  00FF81  20                 	db	32
 10366  00FF82  41                 	db	65	;'A'
 10367  00FF83  6C                 	db	108	;'l'
 10368  00FF84  6C                 	db	108	;'l'
 10369  00FF85  00                 	db	0
 10370  00FF86                     STR_164:
 10371  00FF86  28                 	db	40
 10372  00FF87  6E                 	db	110	;'n'
 10373  00FF88  75                 	db	117	;'u'
 10374  00FF89  6C                 	db	108	;'l'
 10375  00FF8A  6C                 	db	108	;'l'
 10376  00FF8B  29                 	db	41
 10377  00FF8C  00                 	db	0
 10378  00FF8D                     STR_63:
 10379  00FF8D  50                 	db	80	;'P'
 10380  00FF8E  4F                 	db	79	;'O'
 10381  00FF8F  53                 	db	83	;'S'
 10382  00FF90  33                 	db	51	;'3'
 10383  00FF91  50                 	db	80	;'P'
 10384  00FF92  33                 	db	51	;'3'
 10385  00FF93  00                 	db	0
 10386  00FF94                     STR_62:
 10387  00FF94  50                 	db	80	;'P'
 10388  00FF95  4F                 	db	79	;'O'
 10389  00FF96  53                 	db	83	;'S'
 10390  00FF97  31                 	db	49	;'1'
 10391  00FF98  32                 	db	50	;'2'
 10392  00FF99  00                 	db	0
 10393  00FF9A                     STR_49:
 10394  00FF9A  2A                 	db	42
 10395  00FF9B  49                 	db	73	;'I'
 10396  00FF9C  44                 	db	68	;'D'
 10397  00FF9D  4E                 	db	78	;'N'
 10398  00FF9E  3F                 	db	63	;'?'
 10399  00FF9F  00                 	db	0
 10400  00FFA0                     STR_44:
 10401  00FFA0  43                 	db	67	;'C'
 10402  00FFA1  6C                 	db	108	;'l'
 10403  00FFA2  65                 	db	101	;'e'
 10404  00FFA3  61                 	db	97	;'a'
 10405  00FFA4  72                 	db	114	;'r'
 10406  00FFA5  00                 	db	0
 10407  00FFA6                     STR_61:
 10408  00FFA6  49                 	db	73	;'I'
 10409  00FFA7  53                 	db	83	;'S'
 10410  00FFA8  4E                 	db	78	;'N'
 10411  00FFA9  53                 	db	83	;'S'
 10412  00FFAA  00                 	db	0
 10413  00FFAB                     STR_144:
 10414  00FFAB  48                 	db	72	;'H'
 10415  00FFAC  65                 	db	101	;'e'
 10416  00FFAD  6C                 	db	108	;'l'
 10417  00FFAE  70                 	db	112	;'p'
 10418  00FFAF  00                 	db	0
 10419  00FFB0                     STR_2:
 10420  00FFB0  1B                 	db	27
 10421  00FFB1  5B                 	db	91	;'['
 10422  00FFB2  32                 	db	50	;'2'
 10423  00FFB3  4A                 	db	74	;'J'
 10424  00FFB4  00                 	db	0
 10425  00FFB5                     STR_50:
 10426  00FFB5  49                 	db	73	;'I'
 10427  00FFB6  44                 	db	68	;'D'
 10428  00FFB7  4E                 	db	78	;'N'
 10429  00FFB8  00                 	db	0
 10430  00FFB9                     STR_3:
 10431  00FFB9  1B                 	db	27
 10432  00FFBA  5B                 	db	91	;'['
 10433  00FFBB  48                 	db	72	;'H'
 10434  00FFBC  00                 	db	0
 10435  00FFBD  1B                 	db	27
 10436  00FFBE  5B                 	db	91	;'['
 10437  00FFBF  73                 	db	115	;'s'
 10438  00FFC0  00                 	db	0
 10439  00FFC1  1B                 	db	27
 10440  00FFC2  5B                 	db	91	;'['
 10441  00FFC3  75                 	db	117	;'u'
 10442  00FFC4  00                 	db	0
 10443  00FFC5                     STR_1:
 10444  00FFC5  1B                 	db	27
 10445  00FFC6  5B                 	db	91	;'['
 10446  00FFC7  4B                 	db	75	;'K'
 10447  00FFC8  00                 	db	0
 10448  00FFC9                     STR_20:
 10449  00FFC9  33                 	db	51	;'3'
 10450  00FFCA  30                 	db	48	;'0'
 10451  00FFCB  00                 	db	0
 10452  00FFCC                     STR_21:
 10453  00FFCC  33                 	db	51	;'3'
 10454  00FFCD  31                 	db	49	;'1'
 10455  00FFCE  00                 	db	0
 10456  00FFCF                     STR_31:
 10457  00FFCF  34                 	db	52	;'4'
 10458  00FFD0  31                 	db	49	;'1'
 10459  00FFD1  00                 	db	0
 10460  00FFD2                     STR_22:
 10461  00FFD2  33                 	db	51	;'3'
 10462  00FFD3  32                 	db	50	;'2'
 10463  00FFD4  00                 	db	0
 10464  00FFD5                     STR_32:
 10465  00FFD5  34                 	db	52	;'4'
 10466  00FFD6  32                 	db	50	;'2'
 10467  00FFD7  00                 	db	0
 10468  00FFD8                     STR_23:
 10469  00FFD8  33                 	db	51	;'3'
 10470  00FFD9  33                 	db	51	;'3'
 10471  00FFDA  00                 	db	0
 10472  00FFDB                     STR_33:
 10473  00FFDB  34                 	db	52	;'4'
 10474  00FFDC  33                 	db	51	;'3'
 10475  00FFDD  00                 	db	0
 10476  00FFDE                     STR_24:
 10477  00FFDE  33                 	db	51	;'3'
 10478  00FFDF  34                 	db	52	;'4'
 10479  00FFE0  00                 	db	0
 10480  00FFE1                     STR_34:
 10481  00FFE1  34                 	db	52	;'4'
 10482  00FFE2  34                 	db	52	;'4'
 10483  00FFE3  00                 	db	0
 10484  00FFE4                     STR_25:
 10485  00FFE4  33                 	db	51	;'3'
 10486  00FFE5  35                 	db	53	;'5'
 10487  00FFE6  00                 	db	0
 10488  00FFE7                     STR_35:
 10489  00FFE7  34                 	db	52	;'4'
 10490  00FFE8  35                 	db	53	;'5'
 10491  00FFE9  00                 	db	0
 10492  00FFEA                     STR_26:
 10493  00FFEA  33                 	db	51	;'3'
 10494  00FFEB  36                 	db	54	;'6'
 10495  00FFEC  00                 	db	0
 10496  00FFED                     STR_36:
 10497  00FFED  34                 	db	52	;'4'
 10498  00FFEE  36                 	db	54	;'6'
 10499  00FFEF  00                 	db	0
 10500  00FFF0                     STR_27:
 10501  00FFF0  33                 	db	51	;'3'
 10502  00FFF1  37                 	db	55	;'7'
 10503  00FFF2  00                 	db	0
 10504  00FFF3                     STR_37:
 10505  00FFF3  34                 	db	52	;'4'
 10506  00FFF4  37                 	db	55	;'7'
 10507  00FFF5  00                 	db	0
 10508  00FFF6                     STR_11:
 10509  00FFF6  1B                 	db	27
 10510  00FFF7  5B                 	db	91	;'['
 10511  00FFF8  00                 	db	0
 10512  00FFF9                     STR_17:
 10513  00FFF9  38                 	db	56	;'8'
 10514  00FFFA  00                 	db	0
 10515  00FFFB                     STR_19:
 10516  00FFFB  3B                 	db	59	;';'
 10517  00FFFC  00                 	db	0
 10518  00FFFD                     STR_39:
 10519  00FFFD  6D                 	db	109	;'m'
 10520  00FFFE  00                 	db	0
 10521  0000                     
 10522                           ; #config settings
 10523  00FFFF  00                 	db	0	; dummy byte at the end
 10524  0000                     
 10525                           	psect	nvBANK2
 10526  0002F7                     __pnvBANK2:
 10527                           	opt stack 0
 10528  0002F7                     _reset_cause:
 10529                           	opt stack 0
 10530  0002F7                     	ds	1
 10531  0000                     _HLVDCON0bits	set	3778
 10532  0000                     _HLVDCON0	set	3778
 10533  0000                     _HLVDCON1	set	3779
 10534  0000                     _PIR8bits	set	3643
 10535  0000                     _FVRCONbits	set	3780
 10536  0000                     _FVRCON	set	3780
 10537  0000                     _RC2REG	set	3825
 10538  0000                     _RC2STAbits	set	3829
 10539  0000                     _TX2REG	set	3826
 10540  0000                     _TX2STAbits	set	3830
 10541  0000                     _SP2BRGH	set	3828
 10542  0000                     _SP2BRGL	set	3827
 10543  0000                     _TX2STA	set	3830
 10544  0000                     _RC2STA	set	3829
 10545  0000                     _BAUD2CON	set	3831
 10546  0000                     _PIR2bits	set	3637
 10547  0000                     _PIE2bits	set	3627
 10548  0000                     _PIR1bits	set	3636
 10549  0000                     _PIE1bits	set	3626
 10550  0000                     _PIR5bits	set	3640
 10551  0000                     _PIE5bits	set	3630
 10552  0000                     _PIR3bits	set	3638
 10553  0000                     _PIE3bits	set	3628
 10554  0000                     _IPR2bits	set	3617
 10555  0000                     _IPR1bits	set	3616
 10556  0000                     _IPR5bits	set	3620
 10557  0000                     _IPR3bits	set	3618
 10558  0000                     _RX2PPS	set	3601
 10559  0000                     _RG7PPS	set	3721
 10560  0000                     _SLRCONH	set	3774
 10561  0000                     _SLRCONG	set	3769
 10562  0000                     _SLRCONF	set	3761
 10563  0000                     _SLRCONE	set	3756
 10564  0000                     _SLRCOND	set	3748
 10565  0000                     _SLRCONC	set	3743
 10566  0000                     _SLRCONB	set	3735
 10567  0000                     _SLRCONA	set	3727
 10568  0000                     _ODCOND	set	3749
 10569  0000                     _ODCONC	set	3744
 10570  0000                     _ODCONH	set	3775
 10571  0000                     _ODCONB	set	3736
 10572  0000                     _ODCONG	set	3770
 10573  0000                     _ODCONA	set	3728
 10574  0000                     _ODCONF	set	3762
 10575  0000                     _ODCONE	set	3757
 10576  0000                     _WPUH	set	3776
 10577  0000                     _WPUC	set	3745
 10578  0000                     _WPUA	set	3729
 10579  0000                     _WPUG	set	3771
 10580  0000                     _WPUB	set	3737
 10581  0000                     _WPUE	set	3758
 10582  0000                     _WPUF	set	3763
 10583  0000                     _WPUD	set	3750
 10584  0000                     _ANSELA	set	3730
 10585  0000                     _ANSELF	set	3764
 10586  0000                     _ANSELG	set	3772
 10587  0000                     _ANSELE	set	3759
 10588  0000                     _ANSELB	set	3738
 10589  0000                     _ANSELD	set	3751
 10590  0000                     _PMD5	set	3665
 10591  0000                     _PMD4	set	3664
 10592  0000                     _PMD3	set	3663
 10593  0000                     _PMD2	set	3662
 10594  0000                     _PMD1	set	3661
 10595  0000                     _PMD0	set	3660
 10596  0000                     _OSCTUNE	set	3656
 10597  0000                     _OSCFRQ	set	3657
 10598  0000                     _OSCEN	set	3655
 10599  0000                     _OSCCON3	set	3653
 10600  0000                     _OSCCON1	set	3651
 10601  0000                     _PLLR	set	29232
 10602  0000                     _T7GCONbits	set	3889
 10603  0000                     _T7CONbits	set	3888
 10604  0000                     _T7CON	set	3888
 10605  0000                     _TMR7L	set	3886
 10606  0000                     _TMR7H	set	3887
 10607  0000                     _T7CLK	set	3891
 10608  0000                     _T7GATE	set	3890
 10609  0000                     _T7GCON	set	3889
 10610  0000                     _ADCON1bits	set	3929
 10611  0000                     _ADCON2bits	set	3930
 10612  0000                     _ADPRE	set	3934
 10613  0000                     _ADCON3bits	set	3931
 10614  0000                     _ADACQ	set	3932
 10615  0000                     _ADCLK	set	3927
 10616  0000                     _ADACT	set	3926
 10617  0000                     _ADREF	set	3928
 10618  0000                     _ADCON3	set	3931
 10619  0000                     _ADCON2	set	3930
 10620  0000                     _ADCON1	set	3929
 10621  0000                     _ADCAP	set	3933
 10622  0000                     _ADPCH	set	3935
 10623  0000                     _PCON0bits	set	4055
 10624  0000                     _LATGbits	set	3967
 10625  0000                     _NVMDAT	set	3958
 10626  0000                     _NVMADRL	set	3956
 10627  0000                     _NVMADRH	set	3957
 10628  0000                     _NVMCON2	set	3960
 10629  0000                     _TABLAT	set	4085
 10630  0000                     _TBLPTRL	set	4086
 10631  0000                     _TBLPTRH	set	4087
 10632  0000                     _TBLPTRU	set	4088
 10633  0000                     _NVMCON1bits	set	3959
 10634  0000                     _T5GCONbits	set	4036
 10635  0000                     _T5CONbits	set	4035
 10636  0000                     _T5CON	set	4035
 10637  0000                     _TMR5L	set	4033
 10638  0000                     _TMR5H	set	4034
 10639  0000                     _T5CLK	set	4038
 10640  0000                     _T5GATE	set	4037
 10641  0000                     _T5GCON	set	4036
 10642  0000                     _ADERRL	set	3950
 10643  0000                     _ADERRH	set	3951
 10644  0000                     _ADPREVL	set	3937
 10645  0000                     _ADPREVH	set	3938
 10646  0000                     _ADFLTRL	set	3954
 10647  0000                     _ADFLTRH	set	3955
 10648  0000                     _ADSTATbits	set	3941
 10649  0000                     _ADACCL	set	3952
 10650  0000                     _ADACCH	set	3953
 10651  0000                     _ADCNT	set	3943
 10652  0000                     _ADRESL	set	3939
 10653  0000                     _ADRESH	set	3940
 10654  0000                     _ADCON0bits	set	3936
 10655  0000                     _ADCON0	set	3936
 10656  0000                     _ADSTAT	set	3941
 10657  0000                     _ADRPT	set	3942
 10658  0000                     _ADSTPTH	set	3945
 10659  0000                     _ADSTPTL	set	3944
 10660  0000                     _ADUTHH	set	3949
 10661  0000                     _ADUTHL	set	3948
 10662  0000                     _ADLTHH	set	3947
 10663  0000                     _ADLTHL	set	3946
 10664  0000                     _LATFbits	set	3966
 10665  0000                     _PR6	set	4016
 10666  0000                     _TMR6	set	4015
 10667  0000                     _T6CONbits	set	4017
 10668  0000                     _T6RSTbits	set	4020
 10669  0000                     _T6HLTbits	set	4018
 10670  0000                     _T6CON	set	4017
 10671  0000                     _T6TMR	set	4015
 10672  0000                     _T6PR	set	4016
 10673  0000                     _T6RST	set	4020
 10674  0000                     _T6HLT	set	4018
 10675  0000                     _T6CLKCON	set	4019
 10676  0000                     _INTCONbits	set	4082
 10677  0000                     _TRISD	set	3972
 10678  0000                     _TRISC	set	3971
 10679  0000                     _TRISH	set	3976
 10680  0000                     _TRISB	set	3970
 10681  0000                     _TRISG	set	3975
 10682  0000                     _TRISA	set	3969
 10683  0000                     _TRISF	set	3974
 10684  0000                     _TRISE	set	3973
 10685  0000                     _LATH	set	3968
 10686  0000                     _LATC	set	3963
 10687  0000                     _LATG	set	3967
 10688  0000                     _LATB	set	3962
 10689  0000                     _LATF	set	3966
 10690  0000                     _LATA	set	3961
 10691  0000                     _LATD	set	3964
 10692  0000                     _LATE	set	3965
 10693                           
 10694                           	psect	cinit
 10695  017FD6                     __pcinit:
 10696                           	opt stack 0
 10697  017FD6                     start_initialization:
 10698                           	opt stack 0
 10699  017FD6                     __initialization:
 10700                           	opt stack 0
 10701                           
 10702                           ; Initialize objects allocated to BANK2 (36 bytes)
 10703                           ; load TBLPTR registers with __pidataBANK2
 10704  017FD6  0E42               	movlw	low __pidataBANK2
 10705  017FD8  6EF6               	movwf	tblptrl,c
 10706  017FDA  0E91               	movlw	high __pidataBANK2
 10707  017FDC  6EF7               	movwf	tblptrh,c
 10708  017FDE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 10709  017FE0  6EF8               	movwf	tblptru,c
 10710  017FE2  EE02  F0D3         	lfsr	0,__pdataBANK2
 10711  017FE6  EE10 F024          	lfsr	1,36
 10712  017FEA                     copy_data0:
 10713  017FEA  0009               	tblrd		*+
 10714  017FEC  CFF5 FFEE          	movff	tablat,postinc0
 10715  017FF0  50E5               	movf	postdec1,w,c
 10716  017FF2  50E1               	movf	fsr1l,w,c
 10717  017FF4  E1FA               	bnz	copy_data0
 10718                           
 10719                           ; Initialize objects allocated to BANK1 (1 bytes)
 10720                           ; load TBLPTR registers with __pidataBANK1
 10721  017FF6  0EB0               	movlw	low __pidataBANK1
 10722  017FF8  6EF6               	movwf	tblptrl,c
 10723  017FFA  0E93               	movlw	high __pidataBANK1
 10724  017FFC  6EF7               	movwf	tblptrh,c
 10725  017FFE  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 10726  018000  6EF8               	movwf	tblptru,c
 10727  018002  0009               	tblrd		*+	;fetch initializer
 10728  018004  CFF5 F1E8          	movff	tablat,__pdataBANK1
 10729                           
 10730                           ; Initialize objects allocated to BANK0 (6 bytes)
 10731                           ; load TBLPTR registers with __pidataBANK0
 10732  018008  0E8C               	movlw	low __pidataBANK0
 10733  01800A  6EF6               	movwf	tblptrl,c
 10734  01800C  0E93               	movlw	high __pidataBANK0
 10735  01800E  6EF7               	movwf	tblptrh,c
 10736  018010  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 10737  018012  6EF8               	movwf	tblptru,c
 10738  018014  EE00  F0F0         	lfsr	0,__pdataBANK0
 10739  018018  EE10 F006          	lfsr	1,6
 10740  01801C                     copy_data1:
 10741  01801C  0009               	tblrd		*+
 10742  01801E  CFF5 FFEE          	movff	tablat,postinc0
 10743  018022  50E5               	movf	postdec1,w,c
 10744  018024  50E1               	movf	fsr1l,w,c
 10745  018026  E1FA               	bnz	copy_data1
 10746                           
 10747                           ; Clear objects allocated to BANK3 (192 bytes)
 10748  018028  EE03  F000         	lfsr	0,__pbssBANK3
 10749  01802C  0EC0               	movlw	192
 10750  01802E                     clear_0:
 10751  01802E  6AEE               	clrf	postinc0,c
 10752  018030  06E8               	decf	wreg,f,c
 10753  018032  E1FD               	bnz	clear_0
 10754                           
 10755                           ; Clear objects allocated to BANK2 (128 bytes)
 10756  018034  EE02  F000         	lfsr	0,__pbssBANK2
 10757  018038  0E80               	movlw	128
 10758  01803A                     clear_1:
 10759  01803A  6AEE               	clrf	postinc0,c
 10760  01803C  06E8               	decf	wreg,f,c
 10761  01803E  E1FD               	bnz	clear_1
 10762                           
 10763                           ; Clear objects allocated to BANK1 (45 bytes)
 10764  018040  EE01  F0BB         	lfsr	0,__pbssBANK1
 10765  018044  0E2D               	movlw	45
 10766  018046                     clear_2:
 10767  018046  6AEE               	clrf	postinc0,c
 10768  018048  06E8               	decf	wreg,f,c
 10769  01804A  E1FD               	bnz	clear_2
 10770                           
 10771                           ; Clear objects allocated to BITBANK0 (1 bytes)
 10772  01804C  0100               	movlb	0
 10773  01804E  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 10774                           
 10775                           ; Clear objects allocated to BANK0 (5 bytes)
 10776  018050  0100               	movlb	0
 10777  018052  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
 10778  018054  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
 10779  018056  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
 10780  018058  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
 10781  01805A  6BF6               	clrf	__pbssBANK0& (0+255),b
 10782                           
 10783                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 10784  01805C  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 10785  01805E                     end_of_initialization:
 10786                           	opt stack 0
 10787  01805E                     __end_of__initialization:
 10788                           	opt stack 0
 10789  01805E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10790  018060  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10791  018062  0100               	movlb	0
 10792  018064  EF34  F0C0         	goto	_main	;jump to C main() function
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           postinc0	equ	0xFEE
 10798                           wreg	equ	0xFE8
 10799                           postdec1	equ	0xFE5
 10800                           fsr1l	equ	0xFE1
 10801                           
 10802                           	psect	bitbssCOMRAM
 10803  0002F0                     __pbitbssCOMRAM:
 10804                           	opt stack 0
 10805  0002F0                     _adc_error_flag:
 10806                           	opt stack 0
 10807  0002F0                     	ds	1
 10808  0002F1                     _load_enable:
 10809                           	opt stack 0
 10810  0002F1                     	ds	1
 10811  0002F2                     _VCC_overvoltage_flag:
 10812                           	opt stack 0
 10813  0002F2                     	ds	1
 10814                           tblptru	equ	0xFF8
 10815                           tblptrh	equ	0xFF7
 10816                           tblptrl	equ	0xFF6
 10817                           tablat	equ	0xFF5
 10818                           postinc0	equ	0xFEE
 10819                           wreg	equ	0xFE8
 10820                           postdec1	equ	0xFE5
 10821                           fsr1l	equ	0xFE1
 10822                           
 10823                           	psect	bitbssBANK0
 10824  0007D8                     __pbitbssBANK0:
 10825                           	opt stack 0
 10826  0007D8                     _eusart2RxStringReady:
 10827                           	opt stack 0
 10828  0007D8                     	ds	1
 10829                           tblptru	equ	0xFF8
 10830                           tblptrh	equ	0xFF7
 10831                           tblptrl	equ	0xFF6
 10832                           tablat	equ	0xFF5
 10833                           postinc0	equ	0xFEE
 10834                           wreg	equ	0xFE8
 10835                           postdec1	equ	0xFE5
 10836                           fsr1l	equ	0xFE1
 10837                           
 10838                           	psect	bssBANK0
 10839  0000F6                     __pbssBANK0:
 10840                           	opt stack 0
 10841  0000F6                     _Ipk:
 10842                           	opt stack 0
 10843  0000F6                     	ds	4
 10844  0000FA                     _eusart2RxHead:
 10845                           	opt stack 0
 10846  0000FA                     	ds	1
 10847                           tblptru	equ	0xFF8
 10848                           tblptrh	equ	0xFF7
 10849                           tblptrl	equ	0xFF6
 10850                           tablat	equ	0xFF5
 10851                           postinc0	equ	0xFEE
 10852                           wreg	equ	0xFE8
 10853                           postdec1	equ	0xFE5
 10854                           fsr1l	equ	0xFE1
 10855                           
 10856                           	psect	dataBANK0
 10857  0000F0                     __pdataBANK0:
 10858                           	opt stack 0
 10859  0000F0                     _dimming_period:
 10860                           	opt stack 0
 10861  0000F0                     	ds	2
 10862  0000F2                     _TRIAC_Firing_Angle:
 10863                           	opt stack 0
 10864  0000F2                     	ds	4
 10865                           tblptru	equ	0xFF8
 10866                           tblptrh	equ	0xFF7
 10867                           tblptrl	equ	0xFF6
 10868                           tablat	equ	0xFF5
 10869                           postinc0	equ	0xFEE
 10870                           wreg	equ	0xFE8
 10871                           postdec1	equ	0xFE5
 10872                           fsr1l	equ	0xFE1
 10873                           
 10874                           	psect	bssBANK1
 10875  0001BB                     __pbssBANK1:
 10876                           	opt stack 0
 10877  0001BB                     _Avg_Power:
 10878                           	opt stack 0
 10879  0001BB                     	ds	4
 10880  0001BF                     _Vrms:
 10881                           	opt stack 0
 10882  0001BF                     	ds	4
 10883  0001C3                     _Irms:
 10884                           	opt stack 0
 10885  0001C3                     	ds	4
 10886  0001C7                     _Imeas:
 10887                           	opt stack 0
 10888  0001C7                     	ds	4
 10889  0001CB                     _Temp_ADC_Result:
 10890                           	opt stack 0
 10891  0001CB                     	ds	4
 10892  0001CF                     _POS12_ADC_Result:
 10893                           	opt stack 0
 10894  0001CF                     	ds	4
 10895  0001D3                     _POS3P3_ADC_Result:
 10896                           	opt stack 0
 10897  0001D3                     	ds	4
 10898  0001D7                     _AVSS_ADC_Result:
 10899                           	opt stack 0
 10900  0001D7                     	ds	4
 10901  0001DB                     _timer5ReloadVal:
 10902                           	opt stack 0
 10903  0001DB                     	ds	2
 10904  0001DD                     _timer7ReloadVal:
 10905                           	opt stack 0
 10906  0001DD                     	ds	2
 10907  0001DF                     _eusart2RxCount:
 10908                           	opt stack 0
 10909  0001DF                     	ds	1
 10910  0001E0                     _eusart2RxTail:
 10911                           	opt stack 0
 10912  0001E0                     	ds	1
 10913  0001E1                     _eusart2TxBufferRemaining:
 10914                           	opt stack 0
 10915  0001E1                     	ds	1
 10916  0001E2                     _eusart2TxTail:
 10917                           	opt stack 0
 10918  0001E2                     	ds	1
 10919  0001E3                     _eusart2TxHead:
 10920                           	opt stack 0
 10921  0001E3                     	ds	1
 10922  0001E4                     _FVR_ADC_Result:
 10923                           	opt stack 0
 10924  0001E4                     	ds	4
 10925                           tblptru	equ	0xFF8
 10926                           tblptrh	equ	0xFF7
 10927                           tblptrl	equ	0xFF6
 10928                           tablat	equ	0xFF5
 10929                           postinc0	equ	0xFEE
 10930                           wreg	equ	0xFE8
 10931                           postdec1	equ	0xFE5
 10932                           fsr1l	equ	0xFE1
 10933                           
 10934                           	psect	dataBANK1
 10935  0001E8                     __pdataBANK1:
 10936                           	opt stack 0
 10937  0001E8                     _next_channel:
 10938                           	opt stack 0
 10939  0001E8                     	ds	1
 10940                           tblptru	equ	0xFF8
 10941                           tblptrh	equ	0xFF7
 10942                           tblptrl	equ	0xFF6
 10943                           tablat	equ	0xFF5
 10944                           postinc0	equ	0xFEE
 10945                           wreg	equ	0xFE8
 10946                           postdec1	equ	0xFE5
 10947                           fsr1l	equ	0xFE1
 10948                           
 10949                           	psect	bssBANK2
 10950  000200                     __pbssBANK2:
 10951                           	opt stack 0
 10952  000200                     _max_FVR_ADC_Result:
 10953                           	opt stack 0
 10954  000200                     	ds	4
 10955  000204                     _max_Temp_ADC_Result:
 10956                           	opt stack 0
 10957  000204                     	ds	4
 10958  000208                     _max_POS12_ADC_Result:
 10959                           	opt stack 0
 10960  000208                     	ds	4
 10961  00020C                     _max_POS3P3_ADC_Result:
 10962                           	opt stack 0
 10963  00020C                     	ds	4
 10964  000210                     _max_Power:
 10965                           	opt stack 0
 10966  000210                     	ds	4
 10967  000214                     _max_Irms:
 10968                           	opt stack 0
 10969  000214                     	ds	4
 10970  000218                     _load_on_time:
 10971                           	opt stack 0
 10972  000218                     	ds	4
 10973  00021C                     _dev_on_time:
 10974                           	opt stack 0
 10975  00021C                     	ds	4
 10976  000220                     _Vpk:
 10977                           	opt stack 0
 10978  000220                     	ds	4
 10979  000224                     _ADC_Result_Scaling:
 10980                           	opt stack 0
 10981  000224                     	ds	4
 10982  000228                     _TMR5_InterruptHandler:
 10983                           	opt stack 0
 10984  000228                     	ds	3
 10985  00022B                     _TMR7_InterruptHandler:
 10986                           	opt stack 0
 10987  00022B                     	ds	3
 10988  00022E                     _ADCC_ADTI_InterruptHandler:
 10989                           	opt stack 0
 10990  00022E                     	ds	3
 10991  000231                     _TMR6_InterruptHandler:
 10992                           	opt stack 0
 10993  000231                     	ds	3
 10994  000234                     _EUSART2_RxDefaultInterruptHandler:
 10995                           	opt stack 0
 10996  000234                     	ds	3
 10997  000237                     _EUSART2_TxDefaultInterruptHandler:
 10998                           	opt stack 0
 10999  000237                     	ds	3
 11000  00023A                     _errno:
 11001                           	opt stack 0
 11002  00023A                     	ds	2
 11003  00023C                     _current_adc_channel:
 11004                           	opt stack 0
 11005  00023C                     	ds	1
 11006  00023D                     _background_color:
 11007                           	opt stack 0
 11008  00023D                     	ds	1
 11009  00023E                     _foreground_color:
 11010                           	opt stack 0
 11011  00023E                     	ds	1
 11012  00023F                     _attribute:
 11013                           	opt stack 0
 11014  00023F                     	ds	1
 11015  000240                     _line:
 11016                           	opt stack 0
 11017  000240                     	ds	64
 11018                           tblptru	equ	0xFF8
 11019                           tblptrh	equ	0xFF7
 11020                           tblptrl	equ	0xFF6
 11021                           tablat	equ	0xFF5
 11022                           postinc0	equ	0xFEE
 11023                           wreg	equ	0xFE8
 11024                           postdec1	equ	0xFE5
 11025                           fsr1l	equ	0xFE1
 11026                           
 11027                           	psect	dataBANK2
 11028  0002D3                     __pdataBANK2:
 11029                           	opt stack 0
 11030  0002D3                     getCauseOfResetString@strings:
 11031                           	opt stack 0
 11032  0002D3                     	ds	18
 11033  0002E5                     getDeviceIDString@F17550:
 11034                           	opt stack 0
 11035  0002E5                     	ds	6
 11036  0002EB                     _Irms_offset:
 11037                           	opt stack 0
 11038  0002EB                     	ds	4
 11039  0002EF                     _Vpk_const:
 11040                           	opt stack 0
 11041  0002EF                     	ds	4
 11042  0002F3                     _Temp_ADC_Offset:
 11043                           	opt stack 0
 11044  0002F3                     	ds	4
 11045                           tblptru	equ	0xFF8
 11046                           tblptrh	equ	0xFF7
 11047                           tblptrl	equ	0xFF6
 11048                           tablat	equ	0xFF5
 11049                           postinc0	equ	0xFEE
 11050                           wreg	equ	0xFE8
 11051                           postdec1	equ	0xFE5
 11052                           fsr1l	equ	0xFE1
 11053                           
 11054                           	psect	bssBANK3
 11055  000300                     __pbssBANK3:
 11056                           	opt stack 0
 11057  000300                     _eusart2TxBuffer:
 11058                           	opt stack 0
 11059  000300                     	ds	128
 11060  000380                     _eusart2RxBuffer:
 11061                           	opt stack 0
 11062  000380                     	ds	64
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           postinc0	equ	0xFEE
 11068                           wreg	equ	0xFE8
 11069                           postdec1	equ	0xFE5
 11070                           fsr1l	equ	0xFE1
 11071                           
 11072                           	psect	cstackBANK2
 11073  000280                     __pcstackBANK2:
 11074                           	opt stack 0
 11075  000280                     terminal_textAttributes@foreground_color:
 11076                           	opt stack 0
 11077                           
 11078                           ; 1 bytes @ 0x0
 11079  000280                     	ds	1
 11080  000281                     terminal_textAttributes@output_buff:
 11081                           	opt stack 0
 11082                           
 11083                           ; 15 bytes @ 0x1
 11084  000281                     	ds	15
 11085  000290                     ringBufferLUT@channel_name:
 11086                           	opt stack 0
 11087                           
 11088                           ; 22 bytes @ 0x10
 11089  000290                     	ds	22
 11090  0002A6                     ringBufferLUT@angle_degrees:
 11091                           	opt stack 0
 11092                           
 11093                           ; 4 bytes @ 0x26
 11094  0002A6                     	ds	4
 11095  0002AA                     ringBufferLUT@max_current_print:
 11096                           	opt stack 0
 11097                           
 11098                           ; 4 bytes @ 0x2A
 11099  0002AA                     	ds	4
 11100  0002AE                     ringBufferLUT@max_Power_print:
 11101                           	opt stack 0
 11102                           
 11103                           ; 4 bytes @ 0x2E
 11104  0002AE                     	ds	4
 11105  0002B2                     ringBufferLUT@max_voltage_print:
 11106                           	opt stack 0
 11107                           
 11108                           ; 4 bytes @ 0x32
 11109  0002B2                     	ds	4
 11110  0002B6                     ringBufferLUT@max_voltage_print_2756:
 11111                           	opt stack 0
 11112                           
 11113                           ; 4 bytes @ 0x36
 11114  0002B6                     	ds	4
 11115  0002BA                     ringBufferLUT@max_temp_print:
 11116                           	opt stack 0
 11117                           
 11118                           ; 4 bytes @ 0x3A
 11119  0002BA                     	ds	4
 11120  0002BE                     ringBufferLUT@max_voltage_print_2762:
 11121                           	opt stack 0
 11122                           
 11123                           ; 4 bytes @ 0x3E
 11124  0002BE                     	ds	4
 11125  0002C2                     ringBufferLUT@arg_buff:
 11126                           	opt stack 0
 11127                           
 11128                           ; 3 bytes @ 0x42
 11129  0002C2                     	ds	3
 11130  0002C5                     ringBufferLUT@index:
 11131                           	opt stack 0
 11132                           
 11133                           ; 2 bytes @ 0x45
 11134  0002C5                     	ds	2
 11135  0002C7                     ringBufferLUT@percentage:
 11136                           	opt stack 0
 11137                           
 11138                           ; 2 bytes @ 0x47
 11139  0002C7                     	ds	2
 11140  0002C9                     ringBufferLUT@userID:
 11141                           	opt stack 0
 11142                           
 11143                           ; 2 bytes @ 0x49
 11144  0002C9                     	ds	2
 11145  0002CB                     terminal_ringBufferPull@charNumber:
 11146                           	opt stack 0
 11147                           
 11148                           ; 2 bytes @ 0x4B
 11149  0002CB                     	ds	2
 11150  0002CD                     terminal_ringBufferPull@index_2424:
 11151                           	opt stack 0
 11152                           
 11153                           ; 2 bytes @ 0x4D
 11154  0002CD                     	ds	2
 11155  0002CF                     terminal_ringBufferPull@index:
 11156                           	opt stack 0
 11157                           
 11158                           ; 2 bytes @ 0x4F
 11159  0002CF                     	ds	2
 11160  0002D1                     ??_main:
 11161                           
 11162                           ; 1 bytes @ 0x51
 11163  0002D1                     	ds	2
 11164                           tblptru	equ	0xFF8
 11165                           tblptrh	equ	0xFF7
 11166                           tblptrl	equ	0xFF6
 11167                           tablat	equ	0xFF5
 11168                           postinc0	equ	0xFEE
 11169                           wreg	equ	0xFE8
 11170                           postdec1	equ	0xFE5
 11171                           fsr1l	equ	0xFE1
 11172                           
 11173                           	psect	cstackBANK1
 11174  000100                     __pcstackBANK1:
 11175                           	opt stack 0
 11176  000100                     ??_heartbeatTimerCallback:
 11177  000100                     ADCC_StartConversion@channel:
 11178                           	opt stack 0
 11179  000100                     TMR7_WriteTimer@timerVal:
 11180                           	opt stack 0
 11181                           
 11182                           ; 2 bytes @ 0x0
 11183  000100                     	ds	1
 11184  000101                     
 11185                           ; 1 bytes @ 0x1
 11186  000101                     	ds	1
 11187  000102                     ??_INTERRUPT_InterruptManagerLow:
 11188  000102                     
 11189                           ; 1 bytes @ 0x2
 11190  000102                     	ds	21
 11191  000117                     ??_isdigit:
 11192  000117                     ?_strlen:
 11193                           	opt stack 0
 11194  000117                     ?_strcmp:
 11195                           	opt stack 0
 11196  000117                     ?_getCauseOfResetString:
 11197                           	opt stack 0
 11198  000117                     ?_strchr:
 11199                           	opt stack 0
 11200  000117                     ?___wmul:
 11201                           	opt stack 0
 11202  000117                     ?___awmod:
 11203                           	opt stack 0
 11204  000117                     ?__tdiv_to_l_:
 11205                           	opt stack 0
 11206  000117                     ?__div_to_l_:
 11207                           	opt stack 0
 11208  000117                     ?___lldiv:
 11209                           	opt stack 0
 11210  000117                     ?___xxtofl:
 11211                           	opt stack 0
 11212  000117                     EUSART2_Read@readValue:
 11213                           	opt stack 0
 11214  000117                     EUSART2_Write@txData:
 11215                           	opt stack 0
 11216  000117                     getCauseOfReset@return_reset_cause:
 11217                           	opt stack 0
 11218  000117                     DATAEE_WriteByte@bAdd:
 11219                           	opt stack 0
 11220  000117                     DATAEE_ReadByte@bAdd:
 11221                           	opt stack 0
 11222  000117                     ___wmul@multiplier:
 11223                           	opt stack 0
 11224  000117                     ___awmod@dividend:
 11225                           	opt stack 0
 11226  000117                     strcat@to:
 11227                           	opt stack 0
 11228  000117                     strcmp@s1:
 11229                           	opt stack 0
 11230  000117                     strcpy@to:
 11231                           	opt stack 0
 11232  000117                     strlen@s:
 11233                           	opt stack 0
 11234  000117                     strncpy@to:
 11235                           	opt stack 0
 11236  000117                     strchr@ptr:
 11237                           	opt stack 0
 11238  000117                     TMR6_SetInterruptHandler@InterruptHandler:
 11239                           	opt stack 0
 11240  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
 11241                           	opt stack 0
 11242  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
 11243                           	opt stack 0
 11244  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 11245                           	opt stack 0
 11246  000117                     TMR7_SetInterruptHandler@InterruptHandler:
 11247                           	opt stack 0
 11248  000117                     TMR5_SetInterruptHandler@InterruptHandler:
 11249                           	opt stack 0
 11250  000117                     __tdiv_to_l_@f1:
 11251                           	opt stack 0
 11252  000117                     FLASH_ReadByte@flashAddr:
 11253                           	opt stack 0
 11254  000117                     __div_to_l_@f1:
 11255                           	opt stack 0
 11256  000117                     ___flge@ff1:
 11257                           	opt stack 0
 11258  000117                     ___lldiv@dividend:
 11259                           	opt stack 0
 11260  000117                     ___xxtofl@val:
 11261                           	opt stack 0
 11262                           
 11263                           ; 4 bytes @ 0x17
 11264  000117                     	ds	1
 11265  000118                     putch@txData:
 11266                           	opt stack 0
 11267  000118                     _isdigit$3272:
 11268                           	opt stack 0
 11269                           
 11270                           ; 1 bytes @ 0x18
 11271  000118                     	ds	1
 11272  000119                     ??_strlen:
 11273  000119                     ?_readDoubleFromEEPROM:
 11274                           	opt stack 0
 11275  000119                     DATAEE_WriteByte@bData:
 11276                           	opt stack 0
 11277  000119                     getCauseOfResetString@r:
 11278                           	opt stack 0
 11279  000119                     isdigit@c:
 11280                           	opt stack 0
 11281  000119                     readDoubleFromEEPROM@starting_address:
 11282                           	opt stack 0
 11283  000119                     ___wmul@multiplicand:
 11284                           	opt stack 0
 11285  000119                     ___awmod@divisor:
 11286                           	opt stack 0
 11287  000119                     strcat@from:
 11288                           	opt stack 0
 11289  000119                     strcmp@s2:
 11290                           	opt stack 0
 11291  000119                     strcpy@from:
 11292                           	opt stack 0
 11293  000119                     strncpy@from:
 11294                           	opt stack 0
 11295  000119                     strchr@chr:
 11296                           	opt stack 0
 11297                           
 11298                           ; 2 bytes @ 0x19
 11299  000119                     	ds	1
 11300  00011A                     ??_TMR7_Initialize:
 11301  00011A                     ??_TMR5_Initialize:
 11302  00011A                     DATAEE_WriteByte@GIEBitValue:
 11303                           	opt stack 0
 11304  00011A                     __tdiv_to_l_@f2:
 11305                           	opt stack 0
 11306                           
 11307                           ; 3 bytes @ 0x1A
 11308  00011A                     	ds	1
 11309  00011B                     ??_strcmp:
 11310  00011B                     ??___xxtofl:
 11311  00011B                     ?_FLASH_ReadWord:
 11312                           	opt stack 0
 11313  00011B                     ___awmod@counter:
 11314                           	opt stack 0
 11315  00011B                     ___wmul@product:
 11316                           	opt stack 0
 11317  00011B                     strcat@cp:
 11318                           	opt stack 0
 11319  00011B                     strcpy@cp:
 11320                           	opt stack 0
 11321  00011B                     strlen@cp:
 11322                           	opt stack 0
 11323  00011B                     strncpy@size:
 11324                           	opt stack 0
 11325  00011B                     FLASH_ReadWord@flashAddr:
 11326                           	opt stack 0
 11327  00011B                     writeDoubleToEEPROM@input_double:
 11328                           	opt stack 0
 11329  00011B                     __div_to_l_@f2:
 11330                           	opt stack 0
 11331  00011B                     ___flge@ff2:
 11332                           	opt stack 0
 11333  00011B                     ___lldiv@divisor:
 11334                           	opt stack 0
 11335                           
 11336                           ; 4 bytes @ 0x1B
 11337  00011B                     	ds	1
 11338  00011C                     ___awmod@sign:
 11339                           	opt stack 0
 11340  00011C                     strcmp@r:
 11341                           	opt stack 0
 11342                           
 11343                           ; 1 bytes @ 0x1C
 11344  00011C                     	ds	1
 11345  00011D                     ??__tdiv_to_l_:
 11346  00011D                     ?_atoi:
 11347                           	opt stack 0
 11348  00011D                     ?_strncmp:
 11349                           	opt stack 0
 11350  00011D                     ?___awdiv:
 11351                           	opt stack 0
 11352  00011D                     atoi@s:
 11353                           	opt stack 0
 11354  00011D                     ___awdiv@dividend:
 11355                           	opt stack 0
 11356  00011D                     strncpy@cp:
 11357                           	opt stack 0
 11358  00011D                     strncmp@s1:
 11359                           	opt stack 0
 11360  00011D                     readDoubleFromEEPROM@output_data:
 11361                           	opt stack 0
 11362                           
 11363                           ; 4 bytes @ 0x1D
 11364  00011D                     	ds	2
 11365  00011F                     ??_atoi:
 11366  00011F                     ??_FLASH_ReadWord:
 11367  00011F                     ??___flge:
 11368  00011F                     ___lldiv@counter:
 11369                           	opt stack 0
 11370  00011F                     ___xxtofl@sign:
 11371                           	opt stack 0
 11372  00011F                     writeDoubleToEEPROM@starting_address:
 11373                           	opt stack 0
 11374  00011F                     ___awdiv@divisor:
 11375                           	opt stack 0
 11376  00011F                     strncmp@s2:
 11377                           	opt stack 0
 11378  00011F                     __div_to_l_@quot:
 11379                           	opt stack 0
 11380                           
 11381                           ; 4 bytes @ 0x1F
 11382  00011F                     	ds	1
 11383  000120                     ___xxtofl@exp:
 11384                           	opt stack 0
 11385  000120                     __tdiv_to_l_@quot:
 11386                           	opt stack 0
 11387  000120                     ___lldiv@quotient:
 11388                           	opt stack 0
 11389                           
 11390                           ; 4 bytes @ 0x20
 11391  000120                     	ds	1
 11392  000121                     atoi@sign:
 11393                           	opt stack 0
 11394  000121                     ___awdiv@counter:
 11395                           	opt stack 0
 11396  000121                     readDoubleFromEEPROM@byte_index:
 11397                           	opt stack 0
 11398  000121                     strncmp@len:
 11399                           	opt stack 0
 11400  000121                     writeDoubleToEEPROM@input_data:
 11401                           	opt stack 0
 11402  000121                     ___xxtofl@arg:
 11403                           	opt stack 0
 11404                           
 11405                           ; 4 bytes @ 0x21
 11406  000121                     	ds	1
 11407  000122                     ??_getMajorRevisionID:
 11408  000122                     ?_getDeviceID:
 11409                           	opt stack 0
 11410  000122                     ?_getUserID:
 11411                           	opt stack 0
 11412  000122                     ___awdiv@sign:
 11413                           	opt stack 0
 11414  000122                     getMinorRevisionID@REVID_RAW:
 11415                           	opt stack 0
 11416  000122                     atoi@a:
 11417                           	opt stack 0
 11418                           
 11419                           ; 2 bytes @ 0x22
 11420  000122                     	ds	1
 11421  000123                     ??_strncmp:
 11422  000123                     __div_to_l_@cntr:
 11423                           	opt stack 0
 11424  000123                     ___awdiv@quotient:
 11425                           	opt stack 0
 11426                           
 11427                           ; 2 bytes @ 0x23
 11428  000123                     	ds	1
 11429  000124                     ?_getDeviceIDString:
 11430                           	opt stack 0
 11431  000124                     ?___llmod:
 11432                           	opt stack 0
 11433  000124                     getUserID@inputUserID:
 11434                           	opt stack 0
 11435  000124                     __div_to_l_@exp1:
 11436                           	opt stack 0
 11437  000124                     __tdiv_to_l_@cntr:
 11438                           	opt stack 0
 11439  000124                     getDeviceIDString@inputDevID:
 11440                           	opt stack 0
 11441  000124                     ___llmod@dividend:
 11442                           	opt stack 0
 11443                           
 11444                           ; 4 bytes @ 0x24
 11445  000124                     	ds	1
 11446  000125                     ?___flneg:
 11447                           	opt stack 0
 11448  000125                     __tdiv_to_l_@exp1:
 11449                           	opt stack 0
 11450  000125                     getMajorRevisionID@REVID_RAW:
 11451                           	opt stack 0
 11452  000125                     writeDoubleToEEPROM@byte_index:
 11453                           	opt stack 0
 11454  000125                     getUserID@initialOffset:
 11455                           	opt stack 0
 11456  000125                     ___flneg@f1:
 11457                           	opt stack 0
 11458                           
 11459                           ; 4 bytes @ 0x25
 11460  000125                     	ds	1
 11461  000126                     ??_getDeviceIDString:
 11462  000126                     ?_strstr:
 11463                           	opt stack 0
 11464  000126                     strstr@s1:
 11465                           	opt stack 0
 11466                           
 11467                           ; 2 bytes @ 0x26
 11468  000126                     	ds	1
 11469  000127                     
 11470                           ; 1 bytes @ 0x27
 11471  000127                     	ds	1
 11472  000128                     strstr@s2:
 11473                           	opt stack 0
 11474  000128                     ___llmod@divisor:
 11475                           	opt stack 0
 11476  000128                     getDeviceIDString@strings:
 11477                           	opt stack 0
 11478                           
 11479                           ; 6 bytes @ 0x28
 11480  000128                     	ds	1
 11481  000129                     ?___fladd:
 11482                           	opt stack 0
 11483  000129                     getUserID@IDOffset:
 11484                           	opt stack 0
 11485  000129                     ___fladd@b:
 11486                           	opt stack 0
 11487                           
 11488                           ; 4 bytes @ 0x29
 11489  000129                     	ds	1
 11490  00012A                     
 11491                           ; 1 bytes @ 0x2A
 11492  00012A                     	ds	2
 11493  00012C                     ___llmod@counter:
 11494                           	opt stack 0
 11495                           
 11496                           ; 1 bytes @ 0x2C
 11497  00012C                     	ds	1
 11498  00012D                     ___fladd@a:
 11499                           	opt stack 0
 11500                           
 11501                           ; 4 bytes @ 0x2D
 11502  00012D                     	ds	4
 11503  000131                     ??___fladd:
 11504                           
 11505                           ; 1 bytes @ 0x31
 11506  000131                     	ds	8
 11507  000139                     ___fladd@signs:
 11508                           	opt stack 0
 11509                           
 11510                           ; 1 bytes @ 0x39
 11511  000139                     	ds	1
 11512  00013A                     ___fladd@aexp:
 11513                           	opt stack 0
 11514                           
 11515                           ; 1 bytes @ 0x3A
 11516  00013A                     	ds	1
 11517  00013B                     ___fladd@bexp:
 11518                           	opt stack 0
 11519                           
 11520                           ; 1 bytes @ 0x3B
 11521  00013B                     	ds	1
 11522  00013C                     ___fladd@grs:
 11523                           	opt stack 0
 11524                           
 11525                           ; 1 bytes @ 0x3C
 11526  00013C                     	ds	1
 11527  00013D                     ?___fldiv:
 11528                           	opt stack 0
 11529  00013D                     ?___flsub:
 11530                           	opt stack 0
 11531  00013D                     ___flsub@b:
 11532                           	opt stack 0
 11533  00013D                     ___fldiv@b:
 11534                           	opt stack 0
 11535                           
 11536                           ; 4 bytes @ 0x3D
 11537  00013D                     	ds	4
 11538  000141                     ___flsub@a:
 11539                           	opt stack 0
 11540  000141                     ___fldiv@a:
 11541                           	opt stack 0
 11542                           
 11543                           ; 4 bytes @ 0x41
 11544  000141                     	ds	4
 11545  000145                     ??___fldiv:
 11546  000145                     
 11547                           ; 1 bytes @ 0x45
 11548  000145                     	ds	4
 11549  000149                     ___fldiv@sign:
 11550                           	opt stack 0
 11551                           
 11552                           ; 1 bytes @ 0x49
 11553  000149                     	ds	1
 11554  00014A                     ___fldiv@rem:
 11555                           	opt stack 0
 11556                           
 11557                           ; 4 bytes @ 0x4A
 11558  00014A                     	ds	4
 11559  00014E                     ___fldiv@new_exp:
 11560                           	opt stack 0
 11561                           
 11562                           ; 2 bytes @ 0x4E
 11563  00014E                     	ds	2
 11564  000150                     ___fldiv@grs:
 11565                           	opt stack 0
 11566                           
 11567                           ; 4 bytes @ 0x50
 11568  000150                     	ds	4
 11569  000154                     ___fldiv@bexp:
 11570                           	opt stack 0
 11571                           
 11572                           ; 1 bytes @ 0x54
 11573  000154                     	ds	1
 11574  000155                     ___fldiv@aexp:
 11575                           	opt stack 0
 11576                           
 11577                           ; 1 bytes @ 0x55
 11578  000155                     	ds	1
 11579  000156                     ?___flmul:
 11580                           	opt stack 0
 11581  000156                     ___flmul@b:
 11582                           	opt stack 0
 11583                           
 11584                           ; 4 bytes @ 0x56
 11585  000156                     	ds	4
 11586  00015A                     ___flmul@a:
 11587                           	opt stack 0
 11588                           
 11589                           ; 4 bytes @ 0x5A
 11590  00015A                     	ds	4
 11591  00015E                     ??___flmul:
 11592                           
 11593                           ; 1 bytes @ 0x5E
 11594  00015E                     	ds	4
 11595  000162                     ___flmul@sign:
 11596                           	opt stack 0
 11597                           
 11598                           ; 1 bytes @ 0x62
 11599  000162                     	ds	1
 11600  000163                     ___flmul@aexp:
 11601                           	opt stack 0
 11602                           
 11603                           ; 1 bytes @ 0x63
 11604  000163                     	ds	1
 11605  000164                     ___flmul@bexp:
 11606                           	opt stack 0
 11607                           
 11608                           ; 1 bytes @ 0x64
 11609  000164                     	ds	1
 11610  000165                     ___flmul@grs:
 11611                           	opt stack 0
 11612                           
 11613                           ; 4 bytes @ 0x65
 11614  000165                     	ds	4
 11615  000169                     ___flmul@prod:
 11616                           	opt stack 0
 11617                           
 11618                           ; 4 bytes @ 0x69
 11619  000169                     	ds	4
 11620  00016D                     ___flmul@temp:
 11621                           	opt stack 0
 11622                           
 11623                           ; 2 bytes @ 0x6D
 11624  00016D                     	ds	2
 11625  00016F                     ?_fround:
 11626                           	opt stack 0
 11627  00016F                     ?_scale:
 11628                           	opt stack 0
 11629                           
 11630                           ; 4 bytes @ 0x6F
 11631  00016F                     	ds	4
 11632  000173                     _fround$3989:
 11633                           	opt stack 0
 11634  000173                     _scale$3990:
 11635                           	opt stack 0
 11636                           
 11637                           ; 4 bytes @ 0x73
 11638  000173                     	ds	4
 11639  000177                     scale@scl:
 11640                           	opt stack 0
 11641  000177                     _fround$3988:
 11642                           	opt stack 0
 11643                           
 11644                           ; 4 bytes @ 0x77
 11645  000177                     	ds	1
 11646  000178                     ?___fltol:
 11647                           	opt stack 0
 11648  000178                     ___fltol@f1:
 11649                           	opt stack 0
 11650                           
 11651                           ; 4 bytes @ 0x78
 11652  000178                     	ds	3
 11653  00017B                     fround@prec:
 11654                           	opt stack 0
 11655                           
 11656                           ; 1 bytes @ 0x7B
 11657  00017B                     	ds	1
 11658  00017C                     ??___fltol:
 11659                           
 11660                           ; 1 bytes @ 0x7C
 11661  00017C                     	ds	4
 11662  000180                     ___fltol@sign1:
 11663                           	opt stack 0
 11664                           
 11665                           ; 1 bytes @ 0x80
 11666  000180                     	ds	1
 11667  000181                     ___fltol@exp1:
 11668                           	opt stack 0
 11669                           
 11670                           ; 1 bytes @ 0x81
 11671  000181                     	ds	1
 11672  000182                     ?_printf:
 11673                           	opt stack 0
 11674  000182                     printf@f:
 11675                           	opt stack 0
 11676                           
 11677                           ; 2 bytes @ 0x82
 11678  000182                     	ds	10
 11679  00018C                     ??_printf:
 11680                           
 11681                           ; 1 bytes @ 0x8C
 11682  00018C                     	ds	6
 11683  000192                     _printf$3991:
 11684                           	opt stack 0
 11685                           
 11686                           ; 4 bytes @ 0x92
 11687  000192                     	ds	4
 11688  000196                     printf@idx:
 11689                           	opt stack 0
 11690                           
 11691                           ; 1 bytes @ 0x96
 11692  000196                     	ds	1
 11693  000197                     printf@cp:
 11694                           	opt stack 0
 11695                           
 11696                           ; 2 bytes @ 0x97
 11697  000197                     	ds	2
 11698  000199                     printf@len:
 11699                           	opt stack 0
 11700                           
 11701                           ; 2 bytes @ 0x99
 11702  000199                     	ds	2
 11703  00019B                     printf@ap:
 11704                           	opt stack 0
 11705                           
 11706                           ; 2 bytes @ 0x9B
 11707  00019B                     	ds	2
 11708  00019D                     printf@tmpval:
 11709                           	opt stack 0
 11710                           
 11711                           ; 4 bytes @ 0x9D
 11712  00019D                     	ds	4
 11713  0001A1                     printf@exp:
 11714                           	opt stack 0
 11715                           
 11716                           ; 2 bytes @ 0xA1
 11717  0001A1                     	ds	2
 11718  0001A3                     printf@fval:
 11719                           	opt stack 0
 11720                           
 11721                           ; 4 bytes @ 0xA3
 11722  0001A3                     	ds	4
 11723  0001A7                     printf@val:
 11724                           	opt stack 0
 11725                           
 11726                           ; 4 bytes @ 0xA7
 11727  0001A7                     	ds	4
 11728  0001AB                     printf@flag:
 11729                           	opt stack 0
 11730                           
 11731                           ; 2 bytes @ 0xAB
 11732  0001AB                     	ds	2
 11733  0001AD                     printf@width:
 11734                           	opt stack 0
 11735                           
 11736                           ; 2 bytes @ 0xAD
 11737  0001AD                     	ds	2
 11738  0001AF                     printf@prec:
 11739                           	opt stack 0
 11740                           
 11741                           ; 2 bytes @ 0xAF
 11742  0001AF                     	ds	2
 11743  0001B1                     printf@c:
 11744                           	opt stack 0
 11745                           
 11746                           ; 1 bytes @ 0xB1
 11747  0001B1                     	ds	1
 11748  0001B2                     terminal_textAttributes@background_color:
 11749                           	opt stack 0
 11750                           
 11751                           ; 1 bytes @ 0xB2
 11752  0001B2                     	ds	1
 11753  0001B3                     terminal_textAttributes@input_attribute:
 11754                           	opt stack 0
 11755                           
 11756                           ; 1 bytes @ 0xB3
 11757  0001B3                     	ds	1
 11758  0001B4                     ringBufferLUT@line:
 11759                           	opt stack 0
 11760                           
 11761                           ; 2 bytes @ 0xB4
 11762  0001B4                     	ds	2
 11763  0001B6                     ??_ringBufferLUT:
 11764                           
 11765                           ; 1 bytes @ 0xB6
 11766  0001B6                     	ds	2
 11767  0001B8                     ??_terminal_ringBufferPull:
 11768                           
 11769                           ; 1 bytes @ 0xB8
 11770  0001B8                     	ds	3
 11771                           tblptru	equ	0xFF8
 11772                           tblptrh	equ	0xFF7
 11773                           tblptrl	equ	0xFF6
 11774                           tablat	equ	0xFF5
 11775                           postinc0	equ	0xFEE
 11776                           wreg	equ	0xFE8
 11777                           postdec1	equ	0xFE5
 11778                           fsr1l	equ	0xFE1
 11779                           
 11780                           	psect	cstackBANK0
 11781  000060                     __pcstackBANK0:
 11782                           	opt stack 0
 11783  000060                     ??i2___fladd:
 11784                           
 11785                           ; 1 bytes @ 0x0
 11786  000060                     	ds	8
 11787  000068                     i2___fladd@signs:
 11788                           	opt stack 0
 11789                           
 11790                           ; 1 bytes @ 0x8
 11791  000068                     	ds	1
 11792  000069                     i2___fladd@aexp:
 11793                           	opt stack 0
 11794                           
 11795                           ; 1 bytes @ 0x9
 11796  000069                     	ds	1
 11797  00006A                     i2___fladd@bexp:
 11798                           	opt stack 0
 11799                           
 11800                           ; 1 bytes @ 0xA
 11801  00006A                     	ds	1
 11802  00006B                     i2___fladd@grs:
 11803                           	opt stack 0
 11804                           
 11805                           ; 1 bytes @ 0xB
 11806  00006B                     	ds	1
 11807  00006C                     ?_sqrt:
 11808                           	opt stack 0
 11809  00006C                     ?_eval_poly:
 11810                           	opt stack 0
 11811  00006C                     ?i2___fltol:
 11812                           	opt stack 0
 11813  00006C                     eval_poly@x:
 11814                           	opt stack 0
 11815  00006C                     sqrt@a:
 11816                           	opt stack 0
 11817  00006C                     i2___fltol@f1:
 11818                           	opt stack 0
 11819                           
 11820                           ; 4 bytes @ 0xC
 11821  00006C                     	ds	4
 11822  000070                     ??_sqrt:
 11823  000070                     ??i2___fltol:
 11824  000070                     eval_poly@d:
 11825                           	opt stack 0
 11826                           
 11827                           ; 2 bytes @ 0x10
 11828  000070                     	ds	2
 11829  000072                     eval_poly@n:
 11830                           	opt stack 0
 11831                           
 11832                           ; 2 bytes @ 0x12
 11833  000072                     	ds	2
 11834  000074                     ??_eval_poly:
 11835  000074                     sqrt@sign:
 11836                           	opt stack 0
 11837  000074                     i2___fltol@sign1:
 11838                           	opt stack 0
 11839                           
 11840                           ; 1 bytes @ 0x14
 11841  000074                     	ds	1
 11842  000075                     sqrt@i:
 11843                           	opt stack 0
 11844  000075                     i2___fltol@exp1:
 11845                           	opt stack 0
 11846                           
 11847                           ; 1 bytes @ 0x15
 11848  000075                     	ds	1
 11849  000076                     ?_abs:
 11850                           	opt stack 0
 11851  000076                     ?_floor:
 11852                           	opt stack 0
 11853  000076                     abs@a:
 11854                           	opt stack 0
 11855  000076                     sqrt@tfrac:
 11856                           	opt stack 0
 11857  000076                     floor@x:
 11858                           	opt stack 0
 11859                           
 11860                           ; 4 bytes @ 0x16
 11861  000076                     	ds	2
 11862  000078                     ??_abs:
 11863  000078                     eval_poly@res:
 11864                           	opt stack 0
 11865                           
 11866                           ; 4 bytes @ 0x18
 11867  000078                     	ds	2
 11868  00007A                     sqrt@p:
 11869                           	opt stack 0
 11870  00007A                     floor@i:
 11871                           	opt stack 0
 11872                           
 11873                           ; 4 bytes @ 0x1A
 11874  00007A                     	ds	1
 11875  00007B                     sqrt@grs:
 11876                           	opt stack 0
 11877                           
 11878                           ; 4 bytes @ 0x1B
 11879  00007B                     	ds	1
 11880  00007C                     ?_atan:
 11881                           	opt stack 0
 11882  00007C                     atan@f:
 11883                           	opt stack 0
 11884                           
 11885                           ; 4 bytes @ 0x1C
 11886  00007C                     	ds	2
 11887  00007E                     floor@expon:
 11888                           	opt stack 0
 11889                           
 11890                           ; 2 bytes @ 0x1E
 11891  00007E                     	ds	1
 11892  00007F                     sqrt@exp:
 11893                           	opt stack 0
 11894                           
 11895                           ; 2 bytes @ 0x1F
 11896  00007F                     	ds	1
 11897  000080                     ?i2___flsub:
 11898                           	opt stack 0
 11899  000080                     atan@y:
 11900                           	opt stack 0
 11901  000080                     i2___flsub@b:
 11902                           	opt stack 0
 11903                           
 11904                           ; 4 bytes @ 0x20
 11905  000080                     	ds	1
 11906  000081                     sqrt@root:
 11907                           	opt stack 0
 11908                           
 11909                           ; 4 bytes @ 0x21
 11910  000081                     	ds	3
 11911  000084                     atan@x:
 11912                           	opt stack 0
 11913  000084                     i2___flsub@a:
 11914                           	opt stack 0
 11915                           
 11916                           ; 4 bytes @ 0x24
 11917  000084                     	ds	1
 11918  000085                     sqrt@frac:
 11919                           	opt stack 0
 11920                           
 11921                           ; 4 bytes @ 0x25
 11922  000085                     	ds	3
 11923  000088                     ?i2_printf:
 11924                           	opt stack 0
 11925  000088                     ?_sin:
 11926                           	opt stack 0
 11927  000088                     atan@recip:
 11928                           	opt stack 0
 11929  000088                     i2printf@f:
 11930                           	opt stack 0
 11931  000088                     sin@f:
 11932                           	opt stack 0
 11933                           
 11934                           ; 4 bytes @ 0x28
 11935  000088                     	ds	1
 11936  000089                     atan@val_squared:
 11937                           	opt stack 0
 11938                           
 11939                           ; 4 bytes @ 0x29
 11940  000089                     	ds	1
 11941  00008A                     ??i2_printf:
 11942                           
 11943                           ; 1 bytes @ 0x2A
 11944  00008A                     	ds	2
 11945  00008C                     sin@y:
 11946                           	opt stack 0
 11947                           
 11948                           ; 4 bytes @ 0x2C
 11949  00008C                     	ds	1
 11950  00008D                     atan@val:
 11951                           	opt stack 0
 11952                           
 11953                           ; 4 bytes @ 0x2D
 11954  00008D                     	ds	3
 11955  000090                     _sin$4190:
 11956                           	opt stack 0
 11957  000090                     i2_printf$4194:
 11958                           	opt stack 0
 11959                           
 11960                           ; 4 bytes @ 0x30
 11961  000090                     	ds	1
 11962  000091                     ?_asin:
 11963                           	opt stack 0
 11964  000091                     asin@x:
 11965                           	opt stack 0
 11966                           
 11967                           ; 4 bytes @ 0x31
 11968  000091                     	ds	3
 11969  000094                     i2printf@idx:
 11970                           	opt stack 0
 11971  000094                     sin@x2:
 11972                           	opt stack 0
 11973                           
 11974                           ; 4 bytes @ 0x34
 11975  000094                     	ds	1
 11976  000095                     i2printf@cp:
 11977                           	opt stack 0
 11978  000095                     asin@sgn:
 11979                           	opt stack 0
 11980                           
 11981                           ; 4 bytes @ 0x35
 11982  000095                     	ds	2
 11983  000097                     i2printf@len:
 11984                           	opt stack 0
 11985                           
 11986                           ; 2 bytes @ 0x37
 11987  000097                     	ds	1
 11988  000098                     sin@sgn:
 11989                           	opt stack 0
 11990                           
 11991                           ; 1 bytes @ 0x38
 11992  000098                     	ds	1
 11993  000099                     ?_currentMeasuredToPeak:
 11994                           	opt stack 0
 11995  000099                     i2printf@ap:
 11996                           	opt stack 0
 11997  000099                     currentMeasuredToPeak@Measured:
 11998                           	opt stack 0
 11999  000099                     _asin$4189:
 12000                           	opt stack 0
 12001                           
 12002                           ; 4 bytes @ 0x39
 12003  000099                     	ds	2
 12004  00009B                     i2printf@tmpval:
 12005                           	opt stack 0
 12006                           
 12007                           ; 4 bytes @ 0x3B
 12008  00009B                     	ds	2
 12009  00009D                     currentMeasuredToPeak@Angle:
 12010                           	opt stack 0
 12011  00009D                     _asin$4188:
 12012                           	opt stack 0
 12013                           
 12014                           ; 4 bytes @ 0x3D
 12015  00009D                     	ds	2
 12016  00009F                     i2printf@exp:
 12017                           	opt stack 0
 12018                           
 12019                           ; 2 bytes @ 0x3F
 12020  00009F                     	ds	2
 12021  0000A1                     currentMeasuredToPeak@Peak:
 12022                           	opt stack 0
 12023  0000A1                     asin@y:
 12024                           	opt stack 0
 12025  0000A1                     i2printf@val:
 12026                           	opt stack 0
 12027                           
 12028                           ; 4 bytes @ 0x41
 12029  0000A1                     	ds	4
 12030  0000A5                     i2printf@fval:
 12031                           	opt stack 0
 12032  0000A5                     _asin$4187:
 12033                           	opt stack 0
 12034                           
 12035                           ; 4 bytes @ 0x45
 12036  0000A5                     	ds	4
 12037  0000A9                     ?_acos:
 12038                           	opt stack 0
 12039  0000A9                     i2printf@flag:
 12040                           	opt stack 0
 12041  0000A9                     acos@x:
 12042                           	opt stack 0
 12043                           
 12044                           ; 4 bytes @ 0x49
 12045  0000A9                     	ds	2
 12046  0000AB                     i2printf@width:
 12047                           	opt stack 0
 12048                           
 12049                           ; 2 bytes @ 0x4B
 12050  0000AB                     	ds	2
 12051  0000AD                     i2printf@prec:
 12052                           	opt stack 0
 12053  0000AD                     _acos$4186:
 12054                           	opt stack 0
 12055                           
 12056                           ; 4 bytes @ 0x4D
 12057  0000AD                     	ds	2
 12058  0000AF                     i2printf@c:
 12059                           	opt stack 0
 12060                           
 12061                           ; 1 bytes @ 0x4F
 12062  0000AF                     	ds	2
 12063  0000B1                     ?_peakToRMS:
 12064                           	opt stack 0
 12065  0000B1                     peakToRMS@Peak:
 12066                           	opt stack 0
 12067                           
 12068                           ; 4 bytes @ 0x51
 12069  0000B1                     	ds	4
 12070  0000B5                     peakToRMS@Angle:
 12071                           	opt stack 0
 12072                           
 12073                           ; 4 bytes @ 0x55
 12074  0000B5                     	ds	4
 12075  0000B9                     _peakToRMS$4179:
 12076                           	opt stack 0
 12077                           
 12078                           ; 4 bytes @ 0x59
 12079  0000B9                     	ds	4
 12080  0000BD                     _peakToRMS$4180:
 12081                           	opt stack 0
 12082                           
 12083                           ; 4 bytes @ 0x5D
 12084  0000BD                     	ds	4
 12085  0000C1                     _peakToRMS$4178:
 12086                           	opt stack 0
 12087                           
 12088                           ; 4 bytes @ 0x61
 12089  0000C1                     	ds	4
 12090  0000C5                     peakToRMS@RMS:
 12091                           	opt stack 0
 12092                           
 12093                           ; 4 bytes @ 0x65
 12094  0000C5                     	ds	4
 12095  0000C9                     _ADCPostProcessingCallback$4183:
 12096                           	opt stack 0
 12097                           
 12098                           ; 4 bytes @ 0x69
 12099  0000C9                     	ds	4
 12100  0000CD                     _ADCPostProcessingCallback$4184:
 12101                           	opt stack 0
 12102                           
 12103                           ; 4 bytes @ 0x6D
 12104  0000CD                     	ds	4
 12105  0000D1                     _ADCPostProcessingCallback$4185:
 12106                           	opt stack 0
 12107                           
 12108                           ; 4 bytes @ 0x71
 12109  0000D1                     	ds	4
 12110  0000D5                     ADCPostProcessingCallback@current_adc_channel:
 12111                           	opt stack 0
 12112                           
 12113                           ; 1 bytes @ 0x75
 12114  0000D5                     	ds	1
 12115  0000D6                     _ADCPostProcessingCallback$4181:
 12116                           	opt stack 0
 12117                           
 12118                           ; 4 bytes @ 0x76
 12119  0000D6                     	ds	4
 12120  0000DA                     _ADCPostProcessingCallback$4182:
 12121                           	opt stack 0
 12122                           
 12123                           ; 4 bytes @ 0x7A
 12124  0000DA                     	ds	4
 12125  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 12126                           
 12127                           ; 1 bytes @ 0x7E
 12128  0000DE                     	ds	18
 12129                           tblptru	equ	0xFF8
 12130                           tblptrh	equ	0xFF7
 12131                           tblptrl	equ	0xFF6
 12132                           tablat	equ	0xFF5
 12133                           postinc0	equ	0xFEE
 12134                           wreg	equ	0xFE8
 12135                           postdec1	equ	0xFE5
 12136                           fsr1l	equ	0xFE1
 12137                           
 12138                           	psect	cstackCOMRAM
 12139  000001                     __pcstackCOMRAM:
 12140                           	opt stack 0
 12141  000001                     ??i2_isdigit:
 12142  000001                     ?_ADCC_GetConversionResult:
 12143                           	opt stack 0
 12144  000001                     ?_ADCC_GetFilterValue:
 12145                           	opt stack 0
 12146  000001                     ?i2___wmul:
 12147                           	opt stack 0
 12148  000001                     ?i2___awmod:
 12149                           	opt stack 0
 12150  000001                     ?i2__div_to_l_:
 12151                           	opt stack 0
 12152  000001                     ?i2__tdiv_to_l_:
 12153                           	opt stack 0
 12154  000001                     ?i2___lldiv:
 12155                           	opt stack 0
 12156  000001                     i2EUSART2_Write@txData:
 12157                           	opt stack 0
 12158  000001                     TMR5_WriteTimer@timerVal:
 12159                           	opt stack 0
 12160  000001                     i2___wmul@multiplier:
 12161                           	opt stack 0
 12162  000001                     i2___awmod@dividend:
 12163                           	opt stack 0
 12164  000001                     i2__tdiv_to_l_@f1:
 12165                           	opt stack 0
 12166  000001                     frexp@value:
 12167                           	opt stack 0
 12168  000001                     i2__div_to_l_@f1:
 12169                           	opt stack 0
 12170  000001                     i2___lldiv@dividend:
 12171                           	opt stack 0
 12172                           
 12173                           ; 4 bytes @ 0x0
 12174  000001                     	ds	1
 12175  000002                     i2putch@txData:
 12176                           	opt stack 0
 12177  000002                     i2_isdigit$3272:
 12178                           	opt stack 0
 12179                           
 12180                           ; 1 bytes @ 0x1
 12181  000002                     	ds	1
 12182  000003                     ??_ADCC_GetConversionResult:
 12183  000003                     ??_ADCC_GetFilterValue:
 12184  000003                     i2isdigit@c:
 12185                           	opt stack 0
 12186  000003                     i2___wmul@multiplicand:
 12187                           	opt stack 0
 12188  000003                     i2___awmod@divisor:
 12189                           	opt stack 0
 12190                           
 12191                           ; 2 bytes @ 0x2
 12192  000003                     	ds	1
 12193  000004                     i2__tdiv_to_l_@f2:
 12194                           	opt stack 0
 12195                           
 12196                           ; 3 bytes @ 0x3
 12197  000004                     	ds	1
 12198  000005                     ?i2___xxtofl:
 12199                           	opt stack 0
 12200  000005                     i2___awmod@counter:
 12201                           	opt stack 0
 12202  000005                     frexp@eptr:
 12203                           	opt stack 0
 12204  000005                     i2___wmul@product:
 12205                           	opt stack 0
 12206  000005                     i2__div_to_l_@f2:
 12207                           	opt stack 0
 12208  000005                     i2___lldiv@divisor:
 12209                           	opt stack 0
 12210  000005                     i2___xxtofl@val:
 12211                           	opt stack 0
 12212                           
 12213                           ; 4 bytes @ 0x4
 12214  000005                     	ds	1
 12215  000006                     i2___awmod@sign:
 12216                           	opt stack 0
 12217                           
 12218                           ; 1 bytes @ 0x5
 12219  000006                     	ds	1
 12220  000007                     ??_frexp:
 12221  000007                     ??i2__tdiv_to_l_:
 12222  000007                     ?i2___awdiv:
 12223                           	opt stack 0
 12224  000007                     i2___awdiv@dividend:
 12225                           	opt stack 0
 12226                           
 12227                           ; 2 bytes @ 0x6
 12228  000007                     	ds	2
 12229  000009                     ??i2___xxtofl:
 12230  000009                     i2___awdiv@divisor:
 12231                           	opt stack 0
 12232  000009                     i2__div_to_l_@quot:
 12233                           	opt stack 0
 12234  000009                     i2___lldiv@quotient:
 12235                           	opt stack 0
 12236                           
 12237                           ; 4 bytes @ 0x8
 12238  000009                     	ds	1
 12239  00000A                     i2__tdiv_to_l_@quot:
 12240                           	opt stack 0
 12241                           
 12242                           ; 4 bytes @ 0x9
 12243  00000A                     	ds	1
 12244  00000B                     i2___awdiv@counter:
 12245                           	opt stack 0
 12246                           
 12247                           ; 1 bytes @ 0xA
 12248  00000B                     	ds	1
 12249  00000C                     i2___awdiv@sign:
 12250                           	opt stack 0
 12251                           
 12252                           ; 1 bytes @ 0xB
 12253  00000C                     	ds	1
 12254  00000D                     i2__div_to_l_@cntr:
 12255                           	opt stack 0
 12256  00000D                     i2___lldiv@counter:
 12257                           	opt stack 0
 12258  00000D                     i2___xxtofl@sign:
 12259                           	opt stack 0
 12260  00000D                     i2___awdiv@quotient:
 12261                           	opt stack 0
 12262                           
 12263                           ; 2 bytes @ 0xC
 12264  00000D                     	ds	1
 12265  00000E                     ?i2___llmod:
 12266                           	opt stack 0
 12267  00000E                     i2__div_to_l_@exp1:
 12268                           	opt stack 0
 12269  00000E                     i2__tdiv_to_l_@cntr:
 12270                           	opt stack 0
 12271  00000E                     i2___xxtofl@exp:
 12272                           	opt stack 0
 12273  00000E                     i2___llmod@dividend:
 12274                           	opt stack 0
 12275                           
 12276                           ; 4 bytes @ 0xD
 12277  00000E                     	ds	1
 12278  00000F                     i2__tdiv_to_l_@exp1:
 12279                           	opt stack 0
 12280  00000F                     i2___xxtofl@arg:
 12281                           	opt stack 0
 12282                           
 12283                           ; 4 bytes @ 0xE
 12284  00000F                     	ds	3
 12285  000012                     i2___llmod@divisor:
 12286                           	opt stack 0
 12287                           
 12288                           ; 4 bytes @ 0x11
 12289  000012                     	ds	1
 12290  000013                     ?i2___fldiv:
 12291                           	opt stack 0
 12292  000013                     i2___fldiv@b:
 12293                           	opt stack 0
 12294                           
 12295                           ; 4 bytes @ 0x12
 12296  000013                     	ds	3
 12297  000016                     i2___llmod@counter:
 12298                           	opt stack 0
 12299                           
 12300                           ; 1 bytes @ 0x15
 12301  000016                     	ds	1
 12302  000017                     i2___fldiv@a:
 12303                           	opt stack 0
 12304                           
 12305                           ; 4 bytes @ 0x16
 12306  000017                     	ds	4
 12307  00001B                     ??i2___fldiv:
 12308                           
 12309                           ; 1 bytes @ 0x1A
 12310  00001B                     	ds	4
 12311  00001F                     i2___fldiv@sign:
 12312                           	opt stack 0
 12313                           
 12314                           ; 1 bytes @ 0x1E
 12315  00001F                     	ds	1
 12316  000020                     i2___fldiv@rem:
 12317                           	opt stack 0
 12318                           
 12319                           ; 4 bytes @ 0x1F
 12320  000020                     	ds	4
 12321  000024                     i2___fldiv@new_exp:
 12322                           	opt stack 0
 12323                           
 12324                           ; 2 bytes @ 0x23
 12325  000024                     	ds	2
 12326  000026                     i2___fldiv@grs:
 12327                           	opt stack 0
 12328                           
 12329                           ; 4 bytes @ 0x25
 12330  000026                     	ds	4
 12331  00002A                     i2___fldiv@bexp:
 12332                           	opt stack 0
 12333                           
 12334                           ; 1 bytes @ 0x29
 12335  00002A                     	ds	1
 12336  00002B                     i2___fldiv@aexp:
 12337                           	opt stack 0
 12338                           
 12339                           ; 1 bytes @ 0x2A
 12340  00002B                     	ds	1
 12341  00002C                     ?i2___flneg:
 12342                           	opt stack 0
 12343  00002C                     i2___flneg@f1:
 12344                           	opt stack 0
 12345                           
 12346                           ; 4 bytes @ 0x2B
 12347  00002C                     	ds	4
 12348  000030                     ?_fabs:
 12349                           	opt stack 0
 12350  000030                     ?i2___flmul:
 12351                           	opt stack 0
 12352  000030                     fabs@d:
 12353                           	opt stack 0
 12354  000030                     i2___flmul@b:
 12355                           	opt stack 0
 12356                           
 12357                           ; 4 bytes @ 0x2F
 12358  000030                     	ds	4
 12359  000034                     i2___flge@ff1:
 12360                           	opt stack 0
 12361  000034                     i2___flmul@a:
 12362                           	opt stack 0
 12363                           
 12364                           ; 4 bytes @ 0x33
 12365  000034                     	ds	4
 12366  000038                     ??i2___flmul:
 12367  000038                     i2___flge@ff2:
 12368                           	opt stack 0
 12369                           
 12370                           ; 4 bytes @ 0x37
 12371  000038                     	ds	4
 12372  00003C                     ??i2___flge:
 12373  00003C                     i2___flmul@sign:
 12374                           	opt stack 0
 12375                           
 12376                           ; 1 bytes @ 0x3B
 12377  00003C                     	ds	1
 12378  00003D                     i2___flmul@aexp:
 12379                           	opt stack 0
 12380                           
 12381                           ; 1 bytes @ 0x3C
 12382  00003D                     	ds	1
 12383  00003E                     i2___flmul@grs:
 12384                           	opt stack 0
 12385                           
 12386                           ; 4 bytes @ 0x3D
 12387  00003E                     	ds	4
 12388  000042                     i2___flmul@bexp:
 12389                           	opt stack 0
 12390                           
 12391                           ; 1 bytes @ 0x41
 12392  000042                     	ds	1
 12393  000043                     i2___flmul@prod:
 12394                           	opt stack 0
 12395                           
 12396                           ; 4 bytes @ 0x42
 12397  000043                     	ds	4
 12398  000047                     i2___flmul@temp:
 12399                           	opt stack 0
 12400                           
 12401                           ; 2 bytes @ 0x46
 12402  000047                     	ds	2
 12403  000049                     ?i2_fround:
 12404                           	opt stack 0
 12405  000049                     ?i2_scale:
 12406                           	opt stack 0
 12407                           
 12408                           ; 4 bytes @ 0x48
 12409  000049                     	ds	4
 12410  00004D                     i2_fround$4192:
 12411                           	opt stack 0
 12412  00004D                     i2_scale$4193:
 12413                           	opt stack 0
 12414                           
 12415                           ; 4 bytes @ 0x4C
 12416  00004D                     	ds	4
 12417  000051                     i2scale@scl:
 12418                           	opt stack 0
 12419  000051                     i2_fround$4191:
 12420                           	opt stack 0
 12421                           
 12422                           ; 4 bytes @ 0x50
 12423  000051                     	ds	4
 12424  000055                     i2fround@prec:
 12425                           	opt stack 0
 12426                           
 12427                           ; 1 bytes @ 0x54
 12428  000055                     	ds	1
 12429  000056                     ?i2___fladd:
 12430                           	opt stack 0
 12431  000056                     i2___fladd@b:
 12432                           	opt stack 0
 12433                           
 12434                           ; 4 bytes @ 0x55
 12435  000056                     	ds	4
 12436  00005A                     i2___fladd@a:
 12437                           	opt stack 0
 12438                           
 12439                           ; 4 bytes @ 0x59
 12440  00005A                     	ds	4
 12441  00005E                     tblptru	equ	0xFF8
 12442                           tblptrh	equ	0xFF7
 12443                           tblptrl	equ	0xFF6
 12444                           tablat	equ	0xFF5
 12445                           postinc0	equ	0xFEE
 12446                           wreg	equ	0xFE8
 12447                           postdec1	equ	0xFE5
 12448                           fsr1l	equ	0xFE1
 12449                           
 12450                           ; 1 bytes @ 0x5D
 12451 ;;
 12452 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 12453 ;;
 12454 ;; *************** function _main *****************
 12455 ;; Defined at:
 12456 ;;		line 443 in file "main.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;		None
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;		None
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  1    wreg      void 
 12463 ;; Registers used:
 12464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12472 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 12473 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 12474 ;;Total ram usage:        2 bytes
 12475 ;; Hardware stack levels required when called:   20
 12476 ;; This function calls:
 12477 ;;		_ADCC_SetADTIInterruptHandler
 12478 ;;		_SYSTEM_Initialize
 12479 ;;		_TMR6_SetInterruptHandler
 12480 ;;		_TMR7_SetInterruptHandler
 12481 ;;		_getCauseOfReset
 12482 ;;		_recoverSRAMMaxFromEEPROM
 12483 ;;		_saveSRAMMaxToEEPROM
 12484 ;;		_terminal_clearTerminal
 12485 ;;		_terminal_ringBufferPull
 12486 ;;		_terminal_setCursorHome
 12487 ;;		_terminal_textAttributesReset
 12488 ;; This function is called by:
 12489 ;;		Startup code after reset
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           
 12493                           	psect	text0
 12494  018068                     __ptext0:
 12495                           	opt stack 0
 12496  018068                     _main:
 12497                           	opt stack 11
 12498                           
 12499                           ;main.c: 447: reset_cause = getCauseOfReset();
 12500                           
 12501                           ;incstack = 0
 12502  018068  ECBA  F0C4         	call	_getCauseOfReset	;wreg free
 12503  01806C  0102               	movlb	2	; () banked
 12504  01806E  6FF7               	movwf	_reset_cause& (0+255),b
 12505                           
 12506                           ; BSR set to: 2
 12507                           ;main.c: 451: _delay((unsigned long)((250)*(64000000/4000.0)));
 12508  018070  0E15               	movlw	21
 12509  018072  0102               	movlb	2	; () banked
 12510  018074  6FD2               	movwf	(??_main+1)& (0+255),b
 12511  018076  0E4B               	movlw	75
 12512  018078  6FD1               	movwf	??_main& (0+255),b
 12513  01807A  0EBE               	movlw	190
 12514  01807C                     u27057:
 12515  01807C  2EE8               	decfsz	wreg,f,c
 12516  01807E  D7FE               	bra	u27057
 12517  018080  2FD1               	decfsz	??_main& (0+255),f,b
 12518  018082  D7FC               	bra	u27057
 12519  018084  2FD2               	decfsz	(??_main+1)& (0+255),f,b
 12520  018086  D7FA               	bra	u27057
 12521  018088  F000               	nop	
 12522                           
 12523                           ;main.c: 454: SYSTEM_Initialize();
 12524  01808A  ECE9  F0C7         	call	_SYSTEM_Initialize	;wreg free
 12525                           
 12526                           ;main.c: 457: LATGbits.LATG0 = 0;
 12527  01808E  907F               	bcf	3967,0,c	;volatile
 12528                           
 12529                           ;main.c: 458: LATGbits.LATG1 = 0;
 12530  018090  927F               	bcf	3967,1,c	;volatile
 12531                           
 12532                           ;main.c: 459: load_enable = 0;
 12533  018092  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 12534                           
 12535                           ;main.c: 462: ADCON2bits.ADCRS = 7;
 12536  018094  010F               	movlb	15	; () banked
 12537  018096  895A               	bsf	90,4,b	;volatile
 12538  018098  8B5A               	bsf	90,5,b	;volatile
 12539  01809A  8D5A               	bsf	90,6,b	;volatile
 12540                           
 12541                           ; BSR set to: 15
 12542                           ;main.c: 463: ADCAP = 20;
 12543  01809C  0E14               	movlw	20
 12544  01809E  6F5D               	movwf	93,b	;volatile
 12545                           
 12546                           ; BSR set to: 15
 12547                           ;main.c: 466: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 12548  0180A0  0E3E               	movlw	low _heartbeatTimerCallback
 12549  0180A2  0101               	movlb	1	; () banked
 12550  0180A4  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 12551  0180A6  0E8D               	movlw	high _heartbeatTimerCallback
 12552  0180A8  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12553  0180AA  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 12554  0180AC  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12555  0180AE  EC85  F0C9         	call	_TMR6_SetInterruptHandler	;wreg free
 12556                           
 12557                           ;main.c: 469: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
 12558  0180B2  0E34               	movlw	low _ADCPostProcessingCallback
 12559  0180B4  0101               	movlb	1	; () banked
 12560  0180B6  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 12561  0180B8  0E2F               	movlw	high _ADCPostProcessingCallback
 12562  0180BA  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 12563  0180BC  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
 12564  0180BE  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 12565  0180C0  ECA1  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12566                           
 12567                           ;main.c: 472: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 12568  0180C4  0E9C               	movlw	low _acquisitionTimerCallback
 12569  0180C6  0101               	movlb	1	; () banked
 12570  0180C8  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 12571  0180CA  0E92               	movlw	high _acquisitionTimerCallback
 12572  0180CC  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12573  0180CE  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 12574  0180D0  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12575  0180D2  EC7E  F0C9         	call	_TMR7_SetInterruptHandler	;wreg free
 12576                           
 12577                           ;main.c: 475: recoverSRAMMaxFromEEPROM();
 12578  0180D6  EC8E  F0BC         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 12579                           
 12580                           ;main.c: 478: (INTCONbits.GIEH = 1);
 12581  0180DA  8EF2               	bsf	intcon,7,c	;volatile
 12582                           
 12583                           ;main.c: 481: (INTCONbits.GIEL = 1);
 12584  0180DC  8CF2               	bsf	intcon,6,c	;volatile
 12585                           
 12586                           ;main.c: 484: terminal_clearTerminal();
 12587  0180DE  EC67  F0C9         	call	_terminal_clearTerminal	;wreg free
 12588                           
 12589                           ;main.c: 485: terminal_setCursorHome();
 12590  0180E2  EC57  F0C9         	call	_terminal_setCursorHome	;wreg free
 12591                           
 12592                           ;main.c: 486: terminal_textAttributesReset();
 12593  0180E6  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 12594  0180EA                     
 12595                           ;main.c: 490: {
 12596                           ;main.c: 493: if (eusart2RxStringReady) {
 12597  0180EA  0100               	movlb	0	; () banked
 12598  0180EC  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;main.c: 495: terminal_ringBufferPull();
 12602  0180EE  EC52  F0BA         	call	_terminal_ringBufferPull	;wreg free
 12603                           
 12604                           ;main.c: 497: }
 12605                           ;main.c: 500: saveSRAMMaxToEEPROM();
 12606  0180F2  EC31  F0B3         	call	_saveSRAMMaxToEEPROM	;wreg free
 12607  0180F6  D7F9               	goto	l1038
 12608  0180F8                     __end_of_main:
 12609                           	opt stack 0
 12610                           tblptru	equ	0xFF8
 12611                           tblptrh	equ	0xFF7
 12612                           tblptrl	equ	0xFF6
 12613                           tablat	equ	0xFF5
 12614                           intcon	equ	0xFF2
 12615                           postinc0	equ	0xFEE
 12616                           wreg	equ	0xFE8
 12617                           postdec1	equ	0xFE5
 12618                           fsr1l	equ	0xFE1
 12619                           
 12620 ;; *************** function _terminal_setCursorHome *****************
 12621 ;; Defined at:
 12622 ;;		line 85 in file "ring_buffer_interface.c"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;		None
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;		None
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  1    wreg      void 
 12629 ;; Registers used:
 12630 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12640 ;;Total ram usage:        0 bytes
 12641 ;; Hardware stack levels used:    1
 12642 ;; Hardware stack levels required when called:   16
 12643 ;; This function calls:
 12644 ;;		_printf
 12645 ;; This function is called by:
 12646 ;;		_main
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           	psect	text1
 12651  0192AE                     __ptext1:
 12652                           	opt stack 0
 12653  0192AE                     _terminal_setCursorHome:
 12654                           	opt stack 14
 12655                           
 12656                           ;ring_buffer_interface.c: 86: printf("\033[H");
 12657                           
 12658                           ;incstack = 0
 12659  0192AE  0EB9               	movlw	low STR_3
 12660  0192B0  0101               	movlb	1	; () banked
 12661  0192B2  6F82               	movwf	printf@f& (0+255),b
 12662  0192B4  0EFF               	movlw	high STR_3
 12663  0192B6  6F83               	movwf	(printf@f+1)& (0+255),b
 12664  0192B8  ECD1  F089         	call	_printf	;wreg free
 12665  0192BC  0012               	return		;funcret
 12666  0192BE                     __end_of_terminal_setCursorHome:
 12667                           	opt stack 0
 12668                           tblptru	equ	0xFF8
 12669                           tblptrh	equ	0xFF7
 12670                           tblptrl	equ	0xFF6
 12671                           tablat	equ	0xFF5
 12672                           intcon	equ	0xFF2
 12673                           postinc0	equ	0xFEE
 12674                           wreg	equ	0xFE8
 12675                           postdec1	equ	0xFE5
 12676                           fsr1l	equ	0xFE1
 12677                           
 12678 ;; *************** function _terminal_ringBufferPull *****************
 12679 ;; Defined at:
 12680 ;;		line 12 in file "ring_buffer_interface.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;		None
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  index           2   77[BANK2 ] int 
 12685 ;;  index           2   79[BANK2 ] int 
 12686 ;;  charNumber      2   75[BANK2 ] int 
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  1    wreg      void 
 12689 ;; Registers used:
 12690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12697 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 12698 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12699 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
 12700 ;;Total ram usage:        9 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:   19
 12703 ;; This function calls:
 12704 ;;		_EUSART2_Read
 12705 ;;		_ringBufferLUT
 12706 ;;		_strlen
 12707 ;; This function is called by:
 12708 ;;		_main
 12709 ;; This function uses a non-reentrant model
 12710 ;;
 12711                           
 12712                           	psect	text2
 12713  0174A4                     __ptext2:
 12714                           	opt stack 0
 12715  0174A4                     _terminal_ringBufferPull:
 12716                           	opt stack 11
 12717                           
 12718                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 12719                           
 12720                           ;incstack = 0
 12721  0174A4  C1DF  F2CB         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 12722  0174A8  0102               	movlb	2	; () banked
 12723  0174AA  6BCC               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 12724                           
 12725                           ; BSR set to: 2
 12726                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 12727  0174AC  0E00               	movlw	0
 12728  0174AE  6FD0               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 12729  0174B0  0E00               	movlw	0
 12730  0174B2  6FCF               	movwf	terminal_ringBufferPull@index& (0+255),b
 12731  0174B4                     l19990:
 12732                           
 12733                           ; BSR set to: 2
 12734  0174B4  BFD0               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 12735  0174B6  D006               	goto	l1077
 12736  0174B8  51D0               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 12737  0174BA  E10F               	bnz	l20000
 12738  0174BC  0E40               	movlw	64
 12739  0174BE  5DCF               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 12740  0174C0  B0D8               	btfsc	status,0,c
 12741  0174C2  D00B               	goto	u26820
 12742  0174C4                     l1077:
 12743                           
 12744                           ; BSR set to: 2
 12745                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 12746                           
 12747                           ; BSR set to: 2
 12748  0174C4  0E40               	movlw	low _line
 12749  0174C6  25CF               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 12750  0174C8  6ED9               	movwf	fsr2l,c
 12751  0174CA  0E02               	movlw	high _line
 12752  0174CC  21D0               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 12753  0174CE  6EDA               	movwf	fsr2h,c
 12754  0174D0  0E00               	movlw	0
 12755  0174D2  6EDF               	movwf	indf2,c
 12756                           
 12757                           ; BSR set to: 2
 12758  0174D4  4BCF               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 12759  0174D6  2BD0               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 12760  0174D8  D7ED               	goto	l19990
 12761  0174DA                     u26820:
 12762  0174DA                     l20000:
 12763                           
 12764                           ; BSR set to: 2
 12765                           ;ring_buffer_interface.c: 21: }
 12766                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 12767  0174DA  0E00               	movlw	0
 12768  0174DC  6FCE               	movwf	(terminal_ringBufferPull@index_2424+1)& (0+255),b
 12769  0174DE  0E00               	movlw	0
 12770  0174E0  6FCD               	movwf	terminal_ringBufferPull@index_2424& (0+255),b
 12771  0174E2  D00F               	goto	l1079
 12772  0174E4                     
 12773                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 12774                           
 12775                           ; BSR set to: 2
 12776  0174E4  ECF0  F0C5         	call	_EUSART2_Read	;wreg free
 12777  0174E8  0101               	movlb	1	; () banked
 12778  0174EA  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12779  0174EC  0E40               	movlw	low _line
 12780  0174EE  0102               	movlb	2	; () banked
 12781  0174F0  25CD               	addwf	terminal_ringBufferPull@index_2424& (0+255),w,b
 12782  0174F2  6ED9               	movwf	fsr2l,c
 12783  0174F4  0E02               	movlw	high _line
 12784  0174F6  21CE               	addwfc	(terminal_ringBufferPull@index_2424+1)& (0+255),w,b
 12785  0174F8  6EDA               	movwf	fsr2h,c
 12786  0174FA  C1B8  FFDF         	movff	??_terminal_ringBufferPull,indf2
 12787                           
 12788                           ; BSR set to: 2
 12789  0174FE  4BCD               	infsnz	terminal_ringBufferPull@index_2424& (0+255),f,b
 12790  017500  2BCE               	incf	(terminal_ringBufferPull@index_2424+1)& (0+255),f,b
 12791  017502                     l1079:
 12792                           
 12793                           ; BSR set to: 2
 12794                           
 12795                           ; BSR set to: 2
 12796  017502  51CB               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 12797  017504  5DCD               	subwf	terminal_ringBufferPull@index_2424& (0+255),w,b
 12798  017506  51CE               	movf	(terminal_ringBufferPull@index_2424+1)& (0+255),w,b
 12799  017508  0A80               	xorlw	128
 12800  01750A  0101               	movlb	1	; () banked
 12801  01750C  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12802  01750E  0102               	movlb	2	; () banked
 12803  017510  51CC               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 12804  017512  0A80               	xorlw	128
 12805  017514  0101               	movlb	1	; () banked
 12806  017516  59B8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 12807  017518  A0D8               	btfss	status,0,c
 12808  01751A  D7E4               	goto	l1080
 12809                           
 12810                           ; BSR set to: 1
 12811                           ;ring_buffer_interface.c: 28: }
 12812                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 12813  01751C  C0FA  F1E0         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 12814                           
 12815                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 12816                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 12817  017520  D017               	goto	l1082
 12818  017522                     
 12819                           ; BSR set to: 1
 12820                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 12821                           
 12822                           ; BSR set to: 1
 12823  017522  0EFF               	movlw	255
 12824  017524  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12825  017526  0EFF               	movlw	255
 12826  017528  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 12827  01752A  0E40               	movlw	low _line
 12828  01752C  6F17               	movwf	strlen@s& (0+255),b
 12829  01752E  0E02               	movlw	high _line
 12830  017530  6F18               	movwf	(strlen@s+1)& (0+255),b
 12831  017532  EC65  F0C4         	call	_strlen	;wreg free
 12832  017536  0101               	movlb	1	; () banked
 12833  017538  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 12834  01753A  2717               	addwf	?_strlen& (0+255),f,b
 12835  01753C  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 12836  01753E  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 12837  017540  0E40               	movlw	low _line
 12838  017542  2517               	addwf	?_strlen& (0+255),w,b
 12839  017544  6ED9               	movwf	fsr2l,c
 12840  017546  0E02               	movlw	high _line
 12841  017548  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 12842  01754A  6EDA               	movwf	fsr2h,c
 12843  01754C  0E00               	movlw	0
 12844  01754E  6EDF               	movwf	indf2,c
 12845  017550                     l1082:
 12846                           
 12847                           ; BSR set to: 1
 12848  017550  0EFF               	movlw	255
 12849  017552  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12850  017554  0EFF               	movlw	255
 12851  017556  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 12852  017558  0E40               	movlw	low _line
 12853  01755A  6F17               	movwf	strlen@s& (0+255),b
 12854  01755C  0E02               	movlw	high _line
 12855  01755E  6F18               	movwf	(strlen@s+1)& (0+255),b
 12856  017560  EC65  F0C4         	call	_strlen	;wreg free
 12857  017564  0101               	movlb	1	; () banked
 12858  017566  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 12859  017568  2717               	addwf	?_strlen& (0+255),f,b
 12860  01756A  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 12861  01756C  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 12862  01756E  0E40               	movlw	low _line
 12863  017570  2517               	addwf	?_strlen& (0+255),w,b
 12864  017572  6ED9               	movwf	fsr2l,c
 12865  017574  0E02               	movlw	high _line
 12866  017576  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 12867  017578  6EDA               	movwf	fsr2h,c
 12868  01757A  0E0A               	movlw	10
 12869  01757C  18DE               	xorwf	postinc2,w,c
 12870  01757E  B4D8               	btfsc	status,2,c
 12871  017580  D7D0               	goto	l1083
 12872                           
 12873                           ; BSR set to: 1
 12874  017582  0EFF               	movlw	255
 12875  017584  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12876  017586  0EFF               	movlw	255
 12877  017588  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 12878  01758A  0E40               	movlw	low _line
 12879  01758C  6F17               	movwf	strlen@s& (0+255),b
 12880  01758E  0E02               	movlw	high _line
 12881  017590  6F18               	movwf	(strlen@s+1)& (0+255),b
 12882  017592  EC65  F0C4         	call	_strlen	;wreg free
 12883  017596  0101               	movlb	1	; () banked
 12884  017598  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 12885  01759A  2717               	addwf	?_strlen& (0+255),f,b
 12886  01759C  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 12887  01759E  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 12888  0175A0  0E40               	movlw	low _line
 12889  0175A2  2517               	addwf	?_strlen& (0+255),w,b
 12890  0175A4  6ED9               	movwf	fsr2l,c
 12891  0175A6  0E02               	movlw	high _line
 12892  0175A8  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 12893  0175AA  6EDA               	movwf	fsr2h,c
 12894  0175AC  0E0D               	movlw	13
 12895  0175AE  18DE               	xorwf	postinc2,w,c
 12896  0175B0  B4D8               	btfsc	status,2,c
 12897  0175B2  D7B7               	goto	l1083
 12898                           
 12899                           ; BSR set to: 1
 12900                           ;ring_buffer_interface.c: 40: }
 12901                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 12902  0175B4  0100               	movlb	0	; () banked
 12903  0175B6  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 12907  0175B8  0E40               	movlw	low _line
 12908  0175BA  0101               	movlb	1	; () banked
 12909  0175BC  6FB4               	movwf	ringBufferLUT@line& (0+255),b
 12910  0175BE  0E02               	movlw	high _line
 12911  0175C0  6FB5               	movwf	(ringBufferLUT@line+1)& (0+255),b
 12912  0175C2  EC00  F080         	call	_ringBufferLUT	;wreg free
 12913  0175C6  0012               	return		;funcret
 12914  0175C8                     __end_of_terminal_ringBufferPull:
 12915                           	opt stack 0
 12916                           tblptru	equ	0xFF8
 12917                           tblptrh	equ	0xFF7
 12918                           tblptrl	equ	0xFF6
 12919                           tablat	equ	0xFF5
 12920                           intcon	equ	0xFF2
 12921                           postinc0	equ	0xFEE
 12922                           wreg	equ	0xFE8
 12923                           postdec1	equ	0xFE5
 12924                           fsr1l	equ	0xFE1
 12925                           indf2	equ	0xFDF
 12926                           postinc2	equ	0xFDE
 12927                           fsr2h	equ	0xFDA
 12928                           fsr2l	equ	0xFD9
 12929                           status	equ	0xFD8
 12930                           
 12931 ;; *************** function _ringBufferLUT *****************
 12932 ;; Defined at:
 12933 ;;		line 60 in file "ring_buffer_LUT.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;  line            2  180[BANK1 ] PTR unsigned char 
 12936 ;;		 -> line(64), 
 12937 ;; Auto vars:     Size  Location     Type
 12938 ;;  angle_degree    4   38[BANK2 ] PTR unsigned char 
 12939 ;;  index           2   69[BANK2 ] int 
 12940 ;;  channel_name   22   16[BANK2 ] unsigned char [22]
 12941 ;;  userID          2   73[BANK2 ] int 
 12942 ;;  max_voltage_    4   62[BANK2 ] int 
 12943 ;;  max_temp_pri    4   58[BANK2 ] int 
 12944 ;;  max_voltage_    4   54[BANK2 ] int 
 12945 ;;  max_voltage_    4   50[BANK2 ] int 
 12946 ;;  max_Power_pr    4   46[BANK2 ] int 
 12947 ;;  max_current_    4   42[BANK2 ] int 
 12948 ;;  arg_buff        3   66[BANK2 ] unsigned char [3]
 12949 ;;  percentage      2   71[BANK2 ] int 
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  1    wreg      void 
 12952 ;; Registers used:
 12953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12959 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12960 ;;      Locals:         0       0       0      59       0       0       0       0       0       0       0       0       
      +0       0       0
 12961 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12962 ;;      Totals:         0       0       4      59       0       0       0       0       0       0       0       0       
      +0       0       0
 12963 ;;Total ram usage:       63 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:   18
 12966 ;; This function calls:
 12967 ;;		_TMR7_StopTimer
 12968 ;;		___fladd
 12969 ;;		___fldiv
 12970 ;;		___flmul
 12971 ;;		___flneg
 12972 ;;		___wmul
 12973 ;;		___xxtofl
 12974 ;;		_atoi
 12975 ;;		_getCauseOfResetString
 12976 ;;		_getDeviceID
 12977 ;;		_getDeviceIDString
 12978 ;;		_getMajorRevisionID
 12979 ;;		_getMinorRevisionID
 12980 ;;		_getUserID
 12981 ;;		_printf
 12982 ;;		_readDoubleFromEEPROM
 12983 ;;		_strcmp
 12984 ;;		_strcpy
 12985 ;;		_strstr
 12986 ;;		_terminal_printNewline
 12987 ;;		_terminal_textAttributes
 12988 ;;		_terminal_textAttributesReset
 12989 ;;		_writeDoubleToEEPROM
 12990 ;; This function is called by:
 12991 ;;		_terminal_ringBufferPull
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           	psect	text3
 12996  010000                     __ptext3:
 12997                           	opt stack 0
 12998  010000                     _ringBufferLUT:
 12999                           	opt stack 11
 13000                           
 13001                           ;ring_buffer_LUT.c: 66: if((0 == strcmp(line, "Reset"))) {
 13002                           
 13003                           ;incstack = 0
 13004  010000  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13005  010004  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13006  010008  0EF8               	movlw	low (STR_154+10)
 13007  01000A  0101               	movlb	1	; () banked
 13008  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 13009  01000E  0EFD               	movlw	high (STR_154+10)
 13010  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13011  010012  ECE3  F0C4         	call	_strcmp	;wreg free
 13012  010016  0101               	movlb	1	; () banked
 13013  010018  5117               	movf	?_strcmp& (0+255),w,b
 13014  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13015  01001C  A4D8               	btfss	status,2,c
 13016  01001E  D00F               	goto	l1254
 13017                           
 13018                           ; BSR set to: 1
 13019                           ;ring_buffer_LUT.c: 69: printf("\033[2J");
 13020  010020  0EB0               	movlw	low STR_2
 13021  010022  6F82               	movwf	printf@f& (0+255),b
 13022  010024  0EFF               	movlw	high STR_2
 13023  010026  6F83               	movwf	(printf@f+1)& (0+255),b
 13024  010028  ECD1  F089         	call	_printf	;wreg free
 13025                           
 13026                           ;ring_buffer_LUT.c: 72: printf("\033[H");
 13027  01002C  0EB9               	movlw	low STR_3
 13028  01002E  0101               	movlb	1	; () banked
 13029  010030  6F82               	movwf	printf@f& (0+255),b
 13030  010032  0EFF               	movlw	high STR_3
 13031  010034  6F83               	movwf	(printf@f+1)& (0+255),b
 13032  010036  ECD1  F089         	call	_printf	;wreg free
 13033  01003A  00FF               	reset		;# 
 13034                           
 13035                           ;ring_buffer_LUT.c: 77: }
 13036  01003C  0012               	return	
 13037  01003E                     l1254:
 13038                           
 13039                           ;ring_buffer_LUT.c: 80: else if((0 == strcmp(line, "Clear"))) {
 13040  01003E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13041  010042  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13042  010046  0EA0               	movlw	low STR_44
 13043  010048  0101               	movlb	1	; () banked
 13044  01004A  6F19               	movwf	strcmp@s2& (0+255),b
 13045  01004C  0EFF               	movlw	high STR_44
 13046  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13047  010050  ECE3  F0C4         	call	_strcmp	;wreg free
 13048  010054  0101               	movlb	1	; () banked
 13049  010056  5117               	movf	?_strcmp& (0+255),w,b
 13050  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13051  01005A  A4D8               	btfss	status,2,c
 13052  01005C  D00E               	goto	l1256
 13053                           
 13054                           ; BSR set to: 1
 13055                           ;ring_buffer_LUT.c: 83: printf("\033[2J");
 13056  01005E  0EB0               	movlw	low STR_2
 13057  010060  6F82               	movwf	printf@f& (0+255),b
 13058  010062  0EFF               	movlw	high STR_2
 13059  010064  6F83               	movwf	(printf@f+1)& (0+255),b
 13060  010066  ECD1  F089         	call	_printf	;wreg free
 13061                           
 13062                           ;ring_buffer_LUT.c: 86: printf("\033[H");
 13063  01006A  0EB9               	movlw	low STR_3
 13064  01006C  0101               	movlb	1	; () banked
 13065  01006E  6F82               	movwf	printf@f& (0+255),b
 13066  010070  0EFF               	movlw	high STR_3
 13067  010072  6F83               	movwf	(printf@f+1)& (0+255),b
 13068  010074  ECD1  F089         	call	_printf	;wreg free
 13069                           
 13070                           ;ring_buffer_LUT.c: 88: }
 13071  010078  0012               	return	
 13072  01007A                     l1256:
 13073                           
 13074                           ;ring_buffer_LUT.c: 91: else if((0 == strcmp(line, "Cause of Reset?"))) {
 13075  01007A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13076  01007E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13077  010082  0E2E               	movlw	low STR_47
 13078  010084  0101               	movlb	1	; () banked
 13079  010086  6F19               	movwf	strcmp@s2& (0+255),b
 13080  010088  0EFE               	movlw	high STR_47
 13081  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13082  01008C  ECE3  F0C4         	call	_strcmp	;wreg free
 13083  010090  0101               	movlb	1	; () banked
 13084  010092  5117               	movf	?_strcmp& (0+255),w,b
 13085  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13086  010096  A4D8               	btfss	status,2,c
 13087  010098  D019               	goto	l1258
 13088                           
 13089                           ; BSR set to: 1
 13090                           ;ring_buffer_LUT.c: 93: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13091  01009A  0E00               	movlw	0
 13092  01009C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13093  01009E  0E00               	movlw	0
 13094  0100A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13095  0100A2  0E02               	movlw	2
 13096  0100A4  EC1C  F0A1         	call	_terminal_textAttributes
 13097                           
 13098                           ;ring_buffer_LUT.c: 96: printf("The cause of the most recent device reset was: %s\n\r",
 13099                           ;ring_buffer_LUT.c: 97: getCauseOfResetString(reset_cause));
 13100  0100A8  0E18               	movlw	low STR_48
 13101  0100AA  0101               	movlb	1	; () banked
 13102  0100AC  6F82               	movwf	printf@f& (0+255),b
 13103  0100AE  0EF7               	movlw	high STR_48
 13104  0100B0  6F83               	movwf	(printf@f+1)& (0+255),b
 13105  0100B2  0102               	movlb	2	; () banked
 13106  0100B4  51F7               	movf	_reset_cause& (0+255),w,b
 13107  0100B6  ECB9  F0C7         	call	_getCauseOfResetString
 13108  0100BA  C117  F184         	movff	?_getCauseOfResetString,?_printf+2
 13109  0100BE  C118  F185         	movff	?_getCauseOfResetString+1,?_printf+3
 13110  0100C2  ECD1  F089         	call	_printf	;wreg free
 13111                           
 13112                           ;ring_buffer_LUT.c: 99: terminal_textAttributesReset();
 13113  0100C6  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13114                           
 13115                           ;ring_buffer_LUT.c: 101: }
 13116  0100CA  0012               	return	
 13117  0100CC                     l1258:
 13118                           
 13119                           ;ring_buffer_LUT.c: 104: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 13120  0100CC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13121  0100D0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13122  0100D4  0E9A               	movlw	low STR_49
 13123  0100D6  0101               	movlb	1	; () banked
 13124  0100D8  6F19               	movwf	strcmp@s2& (0+255),b
 13125  0100DA  0EFF               	movlw	high STR_49
 13126  0100DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13127  0100DE  ECE3  F0C4         	call	_strcmp	;wreg free
 13128  0100E2  0101               	movlb	1	; () banked
 13129  0100E4  5117               	movf	?_strcmp& (0+255),w,b
 13130  0100E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13131  0100E8  B4D8               	btfsc	status,2,c
 13132  0100EA  D00F               	goto	u26170
 13133                           
 13134                           ; BSR set to: 1
 13135  0100EC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13136  0100F0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13137  0100F4  0EB5               	movlw	low STR_50
 13138  0100F6  6F19               	movwf	strcmp@s2& (0+255),b
 13139  0100F8  0EFF               	movlw	high STR_50
 13140  0100FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13141  0100FC  ECE3  F0C4         	call	_strcmp	;wreg free
 13142  010100  0101               	movlb	1	; () banked
 13143  010102  5117               	movf	?_strcmp& (0+255),w,b
 13144  010104  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13145  010106  A4D8               	btfss	status,2,c
 13146  010108  D018               	goto	l1260
 13147  01010A                     u26170:
 13148                           
 13149                           ; BSR set to: 1
 13150                           ;ring_buffer_LUT.c: 106: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13151                           
 13152                           ; BSR set to: 1
 13153  01010A  0E00               	movlw	0
 13154  01010C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13155  01010E  0E00               	movlw	0
 13156  010110  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13157  010112  0E02               	movlw	2
 13158  010114  EC1C  F0A1         	call	_terminal_textAttributes
 13159                           
 13160                           ;ring_buffer_LUT.c: 107: printf("AC Power Meter\n\r");
 13161  010118  0E88               	movlw	low STR_51
 13162  01011A  0101               	movlb	1	; () banked
 13163  01011C  6F82               	movwf	printf@f& (0+255),b
 13164  01011E  0EFD               	movlw	high STR_51
 13165  010120  6F83               	movwf	(printf@f+1)& (0+255),b
 13166  010122  ECD1  F089         	call	_printf	;wreg free
 13167                           
 13168                           ;ring_buffer_LUT.c: 108: printf("Marquette University ELEN 3035 Final Project\n\r");
 13169  010126  0E16               	movlw	low STR_52
 13170  010128  0101               	movlb	1	; () banked
 13171  01012A  6F82               	movwf	printf@f& (0+255),b
 13172  01012C  0EF8               	movlw	high STR_52
 13173  01012E  6F83               	movwf	(printf@f+1)& (0+255),b
 13174  010130  ECD1  F089         	call	_printf	;wreg free
 13175                           
 13176                           ;ring_buffer_LUT.c: 109: terminal_textAttributesReset();
 13177  010134  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13178                           
 13179                           ;ring_buffer_LUT.c: 111: }
 13180  010138  0012               	return	
 13181  01013A                     l1260:
 13182                           
 13183                           ;ring_buffer_LUT.c: 114: else if((0 == strcmp(line, "Device ID?"))) {
 13184  01013A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13185  01013E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13186  010142  0E48               	movlw	low STR_53
 13187  010144  0101               	movlb	1	; () banked
 13188  010146  6F19               	movwf	strcmp@s2& (0+255),b
 13189  010148  0EFF               	movlw	high STR_53
 13190  01014A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13191  01014C  ECE3  F0C4         	call	_strcmp	;wreg free
 13192  010150  0101               	movlb	1	; () banked
 13193  010152  5117               	movf	?_strcmp& (0+255),w,b
 13194  010154  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13195  010156  A4D8               	btfss	status,2,c
 13196  010158  D023               	goto	l1264
 13197                           
 13198                           ; BSR set to: 1
 13199                           ;ring_buffer_LUT.c: 116: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13200  01015A  0E00               	movlw	0
 13201  01015C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13202  01015E  0E00               	movlw	0
 13203  010160  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13204  010162  0E02               	movlw	2
 13205  010164  EC1C  F0A1         	call	_terminal_textAttributes
 13206                           
 13207                           ;ring_buffer_LUT.c: 119: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 13208                           ;ring_buffer_LUT.c: 120: "part number of %s\n\r",
 13209                           ;ring_buffer_LUT.c: 121: getDeviceID(),
 13210                           ;ring_buffer_LUT.c: 122: getDeviceIDString(getDeviceID()));
 13211  010168  0E53               	movlw	low STR_54
 13212  01016A  0101               	movlb	1	; () banked
 13213  01016C  6F82               	movwf	printf@f& (0+255),b
 13214  01016E  0EF3               	movlw	high STR_54
 13215  010170  6F83               	movwf	(printf@f+1)& (0+255),b
 13216  010172  ECC4  F0C8         	call	_getDeviceID	;wreg free
 13217  010176  C122  F184         	movff	?_getDeviceID,?_printf+2
 13218  01017A  C123  F185         	movff	?_getDeviceID+1,?_printf+3
 13219  01017E  ECC4  F0C8         	call	_getDeviceID	;wreg free
 13220  010182  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 13221  010186  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 13222  01018A  EC05  F0C4         	call	_getDeviceIDString	;wreg free
 13223  01018E  C124  F186         	movff	?_getDeviceIDString,?_printf+4
 13224  010192  C125  F187         	movff	?_getDeviceIDString+1,?_printf+5
 13225  010196  ECD1  F089         	call	_printf	;wreg free
 13226                           
 13227                           ;ring_buffer_LUT.c: 124: terminal_textAttributesReset();
 13228  01019A  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13229                           
 13230                           ;ring_buffer_LUT.c: 126: }
 13231  01019E  0012               	return	
 13232  0101A0                     l1264:
 13233                           
 13234                           ;ring_buffer_LUT.c: 129: else if((0 == strcmp(line, "Revision ID?"))) {
 13235  0101A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13236  0101A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13237  0101A8  0E09               	movlw	low STR_55
 13238  0101AA  0101               	movlb	1	; () banked
 13239  0101AC  6F19               	movwf	strcmp@s2& (0+255),b
 13240  0101AE  0EFF               	movlw	high STR_55
 13241  0101B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13242  0101B2  ECE3  F0C4         	call	_strcmp	;wreg free
 13243  0101B6  0101               	movlb	1	; () banked
 13244  0101B8  5117               	movf	?_strcmp& (0+255),w,b
 13245  0101BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13246  0101BC  A4D8               	btfss	status,2,c
 13247  0101BE  D022               	goto	l1266
 13248                           
 13249                           ; BSR set to: 1
 13250                           ;ring_buffer_LUT.c: 131: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13251  0101C0  0E00               	movlw	0
 13252  0101C2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13253  0101C4  0E00               	movlw	0
 13254  0101C6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13255  0101C8  0E02               	movlw	2
 13256  0101CA  EC1C  F0A1         	call	_terminal_textAttributes
 13257                           
 13258                           ;ring_buffer_LUT.c: 134: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 13259                           ;ring_buffer_LUT.c: 135: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 13260  0101CE  0EEE               	movlw	low STR_56
 13261  0101D0  0101               	movlb	1	; () banked
 13262  0101D2  6F82               	movwf	printf@f& (0+255),b
 13263  0101D4  0EF4               	movlw	high STR_56
 13264  0101D6  6F83               	movwf	(printf@f+1)& (0+255),b
 13265  0101D8  ECDE  F0C6         	call	_getMajorRevisionID	;wreg free
 13266  0101DC  0101               	movlb	1	; () banked
 13267  0101DE  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 13268  0101E0  0E41               	movlw	65
 13269  0101E2  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 13270  0101E4  6F84               	movwf	(?_printf+2)& (0+255),b
 13271  0101E6  6B85               	clrf	(?_printf+3)& (0+255),b
 13272  0101E8  0E00               	movlw	0
 13273  0101EA  2385               	addwfc	(?_printf+3)& (0+255),f,b
 13274  0101EC  EC68  F0C8         	call	_getMinorRevisionID	;wreg free
 13275  0101F0  0101               	movlb	1	; () banked
 13276  0101F2  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 13277  0101F4  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 13278  0101F6  6F86               	movwf	(?_printf+4)& (0+255),b
 13279  0101F8  6B87               	clrf	(?_printf+5)& (0+255),b
 13280  0101FA  ECD1  F089         	call	_printf	;wreg free
 13281                           
 13282                           ;ring_buffer_LUT.c: 137: terminal_textAttributesReset();
 13283  0101FE  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13284                           
 13285                           ;ring_buffer_LUT.c: 139: }
 13286  010202  0012               	return	
 13287  010204                     l1266:
 13288                           
 13289                           ;ring_buffer_LUT.c: 142: else if((0 == strcmp(line, "User IDs?"))) {
 13290  010204  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13291  010208  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13292  01020C  0E69               	movlw	low STR_57
 13293  01020E  0101               	movlb	1	; () banked
 13294  010210  6F19               	movwf	strcmp@s2& (0+255),b
 13295  010212  0EFF               	movlw	high STR_57
 13296  010214  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13297  010216  ECE3  F0C4         	call	_strcmp	;wreg free
 13298  01021A  0101               	movlb	1	; () banked
 13299  01021C  5117               	movf	?_strcmp& (0+255),w,b
 13300  01021E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13301  010220  A4D8               	btfss	status,2,c
 13302  010222  D03E               	goto	l1268
 13303                           
 13304                           ; BSR set to: 1
 13305                           ;ring_buffer_LUT.c: 144: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13306  010224  0E00               	movlw	0
 13307  010226  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13308  010228  0E00               	movlw	0
 13309  01022A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13310  01022C  0E02               	movlw	2
 13311  01022E  EC1C  F0A1         	call	_terminal_textAttributes
 13312                           
 13313                           ;ring_buffer_LUT.c: 146: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 13314  010232  0E31               	movlw	low STR_58
 13315  010234  0101               	movlb	1	; () banked
 13316  010236  6F82               	movwf	printf@f& (0+255),b
 13317  010238  0EF4               	movlw	high STR_58
 13318  01023A  6F83               	movwf	(printf@f+1)& (0+255),b
 13319  01023C  ECD1  F089         	call	_printf	;wreg free
 13320                           
 13321                           ;ring_buffer_LUT.c: 149: for (int userID = 0; userID <= 7; userID++) {
 13322  010240  0E00               	movlw	0
 13323  010242  0102               	movlb	2	; () banked
 13324  010244  6FCA               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 13325  010246  0E00               	movlw	0
 13326  010248  6FC9               	movwf	ringBufferLUT@userID& (0+255),b
 13327  01024A                     l19622:
 13328                           
 13329                           ; BSR set to: 2
 13330  01024A  BFCA               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 13331  01024C  D006               	goto	l1269
 13332  01024E  51CA               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 13333  010250  E124               	bnz	l19632
 13334  010252  0E08               	movlw	8
 13335  010254  5DC9               	subwf	ringBufferLUT@userID& (0+255),w,b
 13336  010256  B0D8               	btfsc	status,0,c
 13337  010258  D020               	goto	u26220
 13338  01025A                     l1269:
 13339                           
 13340                           ; BSR set to: 2
 13341                           ;ring_buffer_LUT.c: 151: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 13342                           ;ring_buffer_LUT.c: 152: userID,
 13343                           ;ring_buffer_LUT.c: 153: (2 * userID),
 13344                           ;ring_buffer_LUT.c: 154: getUserID(userID));
 13345                           
 13346                           ; BSR set to: 2
 13347  01025A  0E42               	movlw	low STR_59
 13348  01025C  0101               	movlb	1	; () banked
 13349  01025E  6F82               	movwf	printf@f& (0+255),b
 13350  010260  0EF6               	movlw	high STR_59
 13351  010262  6F83               	movwf	(printf@f+1)& (0+255),b
 13352  010264  C2C9  F184         	movff	ringBufferLUT@userID,?_printf+2
 13353  010268  C2CA  F185         	movff	ringBufferLUT@userID+1,?_printf+3
 13354  01026C  90D8               	bcf	status,0,c
 13355  01026E  0102               	movlb	2	; () banked
 13356  010270  35C9               	rlcf	ringBufferLUT@userID& (0+255),w,b
 13357  010272  0101               	movlb	1	; () banked
 13358  010274  6F86               	movwf	(?_printf+4)& (0+255),b
 13359  010276  0102               	movlb	2	; () banked
 13360  010278  35CA               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 13361  01027A  0101               	movlb	1	; () banked
 13362  01027C  6F87               	movwf	(?_printf+5)& (0+255),b
 13363  01027E  0102               	movlb	2	; () banked
 13364  010280  51C9               	movf	ringBufferLUT@userID& (0+255),w,b
 13365  010282  EC5C  F0C6         	call	_getUserID
 13366  010286  C122  F188         	movff	?_getUserID,?_printf+6
 13367  01028A  C123  F189         	movff	?_getUserID+1,?_printf+7
 13368  01028E  ECD1  F089         	call	_printf	;wreg free
 13369  010292  0102               	movlb	2	; () banked
 13370  010294  4BC9               	infsnz	ringBufferLUT@userID& (0+255),f,b
 13371  010296  2BCA               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 13372  010298  D7D8               	goto	l19622
 13373  01029A                     u26220:
 13374  01029A                     l19632:
 13375                           
 13376                           ; BSR set to: 2
 13377                           ;ring_buffer_LUT.c: 156: }
 13378                           ;ring_buffer_LUT.c: 158: terminal_textAttributesReset();
 13379  01029A  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13380                           
 13381                           ;ring_buffer_LUT.c: 160: }
 13382  01029E  0012               	return	
 13383  0102A0                     l1268:
 13384                           
 13385                           ;ring_buffer_LUT.c: 163: else if((0 == strcmp(line, "ADC Error?"))) {
 13386  0102A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13387  0102A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13388  0102A8  0E5E               	movlw	low STR_60
 13389  0102AA  0101               	movlb	1	; () banked
 13390  0102AC  6F19               	movwf	strcmp@s2& (0+255),b
 13391  0102AE  0EFF               	movlw	high STR_60
 13392  0102B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13393  0102B2  ECE3  F0C4         	call	_strcmp	;wreg free
 13394  0102B6  0101               	movlb	1	; () banked
 13395  0102B8  5117               	movf	?_strcmp& (0+255),w,b
 13396  0102BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13397  0102BC  A4D8               	btfss	status,2,c
 13398  0102BE  D0A4               	goto	l1272
 13399                           
 13400                           ; BSR set to: 1
 13401                           ;ring_buffer_LUT.c: 165: if (adc_error_flag) {
 13402  0102C0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 13403  0102C2  D090               	goto	l1273
 13404                           
 13405                           ; BSR set to: 1
 13406                           ;ring_buffer_LUT.c: 167: terminal_textAttributes(RED, BLACK, NORMAL);
 13407  0102C4  0E00               	movlw	0
 13408  0102C6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13409  0102C8  0E00               	movlw	0
 13410  0102CA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13411  0102CC  0E01               	movlw	1
 13412  0102CE  EC1C  F0A1         	call	_terminal_textAttributes
 13413                           
 13414                           ;ring_buffer_LUT.c: 170: current_adc_channel = ADPCH;
 13415  0102D2  CF5F F23C          	movff	3935,_current_adc_channel	;volatile
 13416                           
 13417                           ;ring_buffer_LUT.c: 173: char channel_name[22];
 13418                           ;ring_buffer_LUT.c: 175: switch (current_adc_channel) {
 13419  0102D6  D060               	goto	l1274
 13420  0102D8                     
 13421                           ;ring_buffer_LUT.c: 178: strcpy(channel_name, "ISNS");
 13422  0102D8  0E90               	movlw	low ringBufferLUT@channel_name
 13423  0102DA  0101               	movlb	1	; () banked
 13424  0102DC  6F17               	movwf	strcpy@to& (0+255),b
 13425  0102DE  0E02               	movlw	high ringBufferLUT@channel_name
 13426  0102E0  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13427  0102E2  0EA6               	movlw	low STR_61
 13428  0102E4  6F19               	movwf	strcpy@from& (0+255),b
 13429  0102E6  0EFF               	movlw	high STR_61
 13430  0102E8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13431  0102EA  EC36  F0C7         	call	_strcpy	;wreg free
 13432                           
 13433                           ;ring_buffer_LUT.c: 179: break;
 13434  0102EE  D06C               	goto	l1276
 13435  0102F0                     
 13436                           ;ring_buffer_LUT.c: 182: strcpy(channel_name, "POS12");
 13437  0102F0  0E90               	movlw	low ringBufferLUT@channel_name
 13438  0102F2  0101               	movlb	1	; () banked
 13439  0102F4  6F17               	movwf	strcpy@to& (0+255),b
 13440  0102F6  0E02               	movlw	high ringBufferLUT@channel_name
 13441  0102F8  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13442  0102FA  0E94               	movlw	low STR_62
 13443  0102FC  6F19               	movwf	strcpy@from& (0+255),b
 13444  0102FE  0EFF               	movlw	high STR_62
 13445  010300  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13446  010302  EC36  F0C7         	call	_strcpy	;wreg free
 13447                           
 13448                           ;ring_buffer_LUT.c: 183: break;
 13449  010306  D060               	goto	l1276
 13450  010308                     
 13451                           ;ring_buffer_LUT.c: 186: strcpy(channel_name, "POS3P3");
 13452  010308  0E90               	movlw	low ringBufferLUT@channel_name
 13453  01030A  0101               	movlb	1	; () banked
 13454  01030C  6F17               	movwf	strcpy@to& (0+255),b
 13455  01030E  0E02               	movlw	high ringBufferLUT@channel_name
 13456  010310  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13457  010312  0E8D               	movlw	low STR_63
 13458  010314  6F19               	movwf	strcpy@from& (0+255),b
 13459  010316  0EFF               	movlw	high STR_63
 13460  010318  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13461  01031A  EC36  F0C7         	call	_strcpy	;wreg free
 13462                           
 13463                           ;ring_buffer_LUT.c: 187: break;
 13464  01031E  D054               	goto	l1276
 13465  010320                     
 13466                           ;ring_buffer_LUT.c: 190: strcpy(channel_name, "Internal AVSS");
 13467  010320  0E90               	movlw	low ringBufferLUT@channel_name
 13468  010322  0101               	movlb	1	; () banked
 13469  010324  6F17               	movwf	strcpy@to& (0+255),b
 13470  010326  0E02               	movlw	high ringBufferLUT@channel_name
 13471  010328  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13472  01032A  0EE0               	movlw	low STR_64
 13473  01032C  6F19               	movwf	strcpy@from& (0+255),b
 13474  01032E  0EFE               	movlw	high STR_64
 13475  010330  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13476  010332  EC36  F0C7         	call	_strcpy	;wreg free
 13477                           
 13478                           ;ring_buffer_LUT.c: 191: break;
 13479  010336  D048               	goto	l1276
 13480  010338                     
 13481                           ;ring_buffer_LUT.c: 194: strcpy(channel_name, "Internal Temp");
 13482  010338  0E90               	movlw	low ringBufferLUT@channel_name
 13483  01033A  0101               	movlb	1	; () banked
 13484  01033C  6F17               	movwf	strcpy@to& (0+255),b
 13485  01033E  0E02               	movlw	high ringBufferLUT@channel_name
 13486  010340  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13487  010342  0EEE               	movlw	low STR_65
 13488  010344  6F19               	movwf	strcpy@from& (0+255),b
 13489  010346  0EFE               	movlw	high STR_65
 13490  010348  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13491  01034A  EC36  F0C7         	call	_strcpy	;wreg free
 13492                           
 13493                           ;ring_buffer_LUT.c: 195: break;
 13494  01034E  D03C               	goto	l1276
 13495  010350                     
 13496                           ;ring_buffer_LUT.c: 198: strcpy(channel_name, "Internal DAC1");
 13497  010350  0E90               	movlw	low ringBufferLUT@channel_name
 13498  010352  0101               	movlb	1	; () banked
 13499  010354  6F17               	movwf	strcpy@to& (0+255),b
 13500  010356  0E02               	movlw	high ringBufferLUT@channel_name
 13501  010358  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13502  01035A  0E9A               	movlw	low STR_66
 13503  01035C  6F19               	movwf	strcpy@from& (0+255),b
 13504  01035E  0EFE               	movlw	high STR_66
 13505  010360  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13506  010362  EC36  F0C7         	call	_strcpy	;wreg free
 13507                           
 13508                           ;ring_buffer_LUT.c: 199: break;
 13509  010366  D030               	goto	l1276
 13510  010368                     
 13511                           ;ring_buffer_LUT.c: 202: strcpy(channel_name, "Internal FVR Buffer 1");
 13512  010368  0E90               	movlw	low ringBufferLUT@channel_name
 13513  01036A  0101               	movlb	1	; () banked
 13514  01036C  6F17               	movwf	strcpy@to& (0+255),b
 13515  01036E  0E02               	movlw	high ringBufferLUT@channel_name
 13516  010370  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13517  010372  0EC1               	movlw	low STR_67
 13518  010374  6F19               	movwf	strcpy@from& (0+255),b
 13519  010376  0EFC               	movlw	high STR_67
 13520  010378  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13521  01037A  EC36  F0C7         	call	_strcpy	;wreg free
 13522                           
 13523                           ;ring_buffer_LUT.c: 203: break;
 13524  01037E  D024               	goto	l1276
 13525  010380                     
 13526                           ;ring_buffer_LUT.c: 206: strcpy(channel_name, "Undefined");
 13527  010380  0E90               	movlw	low ringBufferLUT@channel_name
 13528  010382  0101               	movlb	1	; () banked
 13529  010384  6F17               	movwf	strcpy@to& (0+255),b
 13530  010386  0E02               	movlw	high ringBufferLUT@channel_name
 13531  010388  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13532  01038A  0E73               	movlw	low STR_68
 13533  01038C  6F19               	movwf	strcpy@from& (0+255),b
 13534  01038E  0EFF               	movlw	high STR_68
 13535  010390  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13536  010392  EC36  F0C7         	call	_strcpy	;wreg free
 13537                           
 13538                           ;ring_buffer_LUT.c: 209: }
 13539                           
 13540                           ;ring_buffer_LUT.c: 207: break;
 13541  010396  D018               	goto	l1276
 13542  010398                     l1274:
 13543  010398  0102               	movlb	2	; () banked
 13544  01039A  513C               	movf	_current_adc_channel& (0+255),w,b
 13545                           
 13546                           ; Switch size 1, requested type "space"
 13547                           ; Number of cases is 7, Range of values is 0 to 63
 13548                           ; switch strategies available:
 13549                           ; Name         Instructions Cycles
 13550                           ; simple_byte           22    12 (average)
 13551                           ;	Chosen strategy is simple_byte
 13552  01039C  0A00               	xorlw	0	; case 0
 13553  01039E  B4D8               	btfsc	status,2,c
 13554  0103A0  D79B               	goto	l1275
 13555  0103A2  0A04               	xorlw	4	; case 4
 13556  0103A4  B4D8               	btfsc	status,2,c
 13557  0103A6  D7A4               	goto	l1277
 13558  0103A8  0A26               	xorlw	38	; case 34
 13559  0103AA  B4D8               	btfsc	status,2,c
 13560  0103AC  D7AD               	goto	l1278
 13561  0103AE  0A1E               	xorlw	30	; case 60
 13562  0103B0  B4D8               	btfsc	status,2,c
 13563  0103B2  D7B6               	goto	l1279
 13564  0103B4  0A01               	xorlw	1	; case 61
 13565  0103B6  B4D8               	btfsc	status,2,c
 13566  0103B8  D7BF               	goto	l1280
 13567  0103BA  0A03               	xorlw	3	; case 62
 13568  0103BC  B4D8               	btfsc	status,2,c
 13569  0103BE  D7C8               	goto	l1281
 13570  0103C0  0A01               	xorlw	1	; case 63
 13571  0103C2  B4D8               	btfsc	status,2,c
 13572  0103C4  D7D1               	goto	l1282
 13573  0103C6  D7DC               	goto	l1283
 13574  0103C8                     l1276:
 13575                           
 13576                           ;ring_buffer_LUT.c: 212: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
 13577                           
 13578                           ; BSR set to: 2
 13579  0103C8  0EE6               	movlw	low STR_69
 13580  0103CA  0101               	movlb	1	; () banked
 13581  0103CC  6F82               	movwf	printf@f& (0+255),b
 13582  0103CE  0EF7               	movlw	high STR_69
 13583  0103D0  6F83               	movwf	(printf@f+1)& (0+255),b
 13584  0103D2  0E90               	movlw	low ringBufferLUT@channel_name
 13585  0103D4  6F84               	movwf	(?_printf+2)& (0+255),b
 13586  0103D6  0E02               	movlw	high ringBufferLUT@channel_name
 13587  0103D8  6F85               	movwf	(?_printf+3)& (0+255),b
 13588  0103DA  ECD1  F089         	call	_printf	;wreg free
 13589                           
 13590                           ;ring_buffer_LUT.c: 213: terminal_textAttributesReset();
 13591  0103DE  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13592                           
 13593                           ;ring_buffer_LUT.c: 215: }
 13594  0103E2  0012               	return	
 13595  0103E4                     l1273:
 13596                           
 13597                           ;ring_buffer_LUT.c: 217: else {
 13598                           ;ring_buffer_LUT.c: 219: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13599  0103E4  0E00               	movlw	0
 13600  0103E6  0101               	movlb	1	; () banked
 13601  0103E8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13602  0103EA  0E00               	movlw	0
 13603  0103EC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13604  0103EE  0E02               	movlw	2
 13605  0103F0  EC1C  F0A1         	call	_terminal_textAttributes
 13606                           
 13607                           ;ring_buffer_LUT.c: 220: printf("No ADC Error detected\n\r");
 13608  0103F4  0E93               	movlw	low STR_70
 13609  0103F6  0101               	movlb	1	; () banked
 13610  0103F8  6F82               	movwf	printf@f& (0+255),b
 13611  0103FA  0EFC               	movlw	high STR_70
 13612  0103FC  6F83               	movwf	(printf@f+1)& (0+255),b
 13613  0103FE  ECD1  F089         	call	_printf	;wreg free
 13614                           
 13615                           ;ring_buffer_LUT.c: 221: terminal_textAttributesReset();
 13616  010402  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13617                           
 13618                           ;ring_buffer_LUT.c: 223: }
 13619                           ;ring_buffer_LUT.c: 225: }
 13620  010406  0012               	return	
 13621  010408                     l1272:
 13622                           
 13623                           ;ring_buffer_LUT.c: 228: else if((0 == strcmp(line, "Clear ADC Error"))) {
 13624  010408  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13625  01040C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13626  010410  0E4E               	movlw	low STR_71
 13627  010412  0101               	movlb	1	; () banked
 13628  010414  6F19               	movwf	strcmp@s2& (0+255),b
 13629  010416  0EFE               	movlw	high STR_71
 13630  010418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13631  01041A  ECE3  F0C4         	call	_strcmp	;wreg free
 13632  01041E  0101               	movlb	1	; () banked
 13633  010420  5117               	movf	?_strcmp& (0+255),w,b
 13634  010422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13635  010424  A4D8               	btfss	status,2,c
 13636  010426  D018               	goto	l1286
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;ring_buffer_LUT.c: 230: LATFbits.LATF3 = 0;
 13640  010428  967E               	bcf	3966,3,c	;volatile
 13641                           
 13642                           ;ring_buffer_LUT.c: 231: adc_error_flag = 0;
 13643  01042A  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 13644                           
 13645                           ;ring_buffer_LUT.c: 233: PIE5bits.TMR7IE = 1;
 13646  01042C  010E               	movlb	14	; () banked
 13647  01042E  8D2E               	bsf	46,6,b	;volatile
 13648                           
 13649                           ; BSR set to: 14
 13650                           ;ring_buffer_LUT.c: 234: TMR7_StopTimer();
 13651  010430  ECC9  F0C9         	call	_TMR7_StopTimer	;wreg free
 13652                           
 13653                           ;ring_buffer_LUT.c: 236: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13654  010434  0E00               	movlw	0
 13655  010436  0101               	movlb	1	; () banked
 13656  010438  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13657  01043A  0E00               	movlw	0
 13658  01043C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13659  01043E  0E02               	movlw	2
 13660  010440  EC1C  F0A1         	call	_terminal_textAttributes
 13661                           
 13662                           ;ring_buffer_LUT.c: 237: printf("Clearing ADC Error\n\r");
 13663  010444  0EEC               	movlw	low STR_72
 13664  010446  0101               	movlb	1	; () banked
 13665  010448  6F82               	movwf	printf@f& (0+255),b
 13666  01044A  0EFC               	movlw	high STR_72
 13667  01044C  6F83               	movwf	(printf@f+1)& (0+255),b
 13668  01044E  ECD1  F089         	call	_printf	;wreg free
 13669                           
 13670                           ;ring_buffer_LUT.c: 238: terminal_textAttributesReset();
 13671  010452  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13672                           
 13673                           ;ring_buffer_LUT.c: 240: }
 13674  010456  0012               	return	
 13675  010458                     l1286:
 13676                           
 13677                           ;ring_buffer_LUT.c: 243: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
 13678  010458  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13679  01045C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13680  010460  0EBB               	movlw	low STR_73
 13681  010462  0101               	movlb	1	; () banked
 13682  010464  6F19               	movwf	strcmp@s2& (0+255),b
 13683  010466  0EFD               	movlw	high STR_73
 13684  010468  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13685  01046A  ECE3  F0C4         	call	_strcmp	;wreg free
 13686  01046E  0101               	movlb	1	; () banked
 13687  010470  5117               	movf	?_strcmp& (0+255),w,b
 13688  010472  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13689  010474  A4D8               	btfss	status,2,c
 13690  010476  D026               	goto	l1288
 13691                           
 13692                           ; BSR set to: 1
 13693                           ;ring_buffer_LUT.c: 246: if (VCC_overvoltage_flag == 1) {
 13694  010478  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 13695  01047A  D012               	goto	l1289
 13696                           
 13697                           ; BSR set to: 1
 13698                           ;ring_buffer_LUT.c: 248: terminal_textAttributes(RED, BLACK, NORMAL);
 13699  01047C  0E00               	movlw	0
 13700  01047E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13701  010480  0E00               	movlw	0
 13702  010482  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13703  010484  0E01               	movlw	1
 13704  010486  EC1C  F0A1         	call	_terminal_textAttributes
 13705                           
 13706                           ;ring_buffer_LUT.c: 249: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
 13707  01048A  0EEF               	movlw	low STR_74
 13708  01048C  0101               	movlb	1	; () banked
 13709  01048E  6F82               	movwf	printf@f& (0+255),b
 13710  010490  0EF3               	movlw	high STR_74
 13711  010492  6F83               	movwf	(printf@f+1)& (0+255),b
 13712  010494  ECD1  F089         	call	_printf	;wreg free
 13713                           
 13714                           ;ring_buffer_LUT.c: 250: terminal_textAttributesReset();
 13715  010498  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13716                           
 13717                           ;ring_buffer_LUT.c: 253: VCC_overvoltage_flag = 0;
 13718  01049C  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 13719                           
 13720                           ;ring_buffer_LUT.c: 255: }
 13721  01049E  0012               	return	
 13722  0104A0                     l1289:
 13723                           
 13724                           ;ring_buffer_LUT.c: 257: else {
 13725                           ;ring_buffer_LUT.c: 259: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13726  0104A0  0E00               	movlw	0
 13727  0104A2  0101               	movlb	1	; () banked
 13728  0104A4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13729  0104A6  0E00               	movlw	0
 13730  0104A8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13731  0104AA  0E02               	movlw	2
 13732  0104AC  EC1C  F0A1         	call	_terminal_textAttributes
 13733                           
 13734                           ;ring_buffer_LUT.c: 260: printf("VCC Overvoltage condition has not occurred\n\r");
 13735  0104B0  0EFC               	movlw	low STR_75
 13736  0104B2  0101               	movlb	1	; () banked
 13737  0104B4  6F82               	movwf	printf@f& (0+255),b
 13738  0104B6  0EF8               	movlw	high STR_75
 13739  0104B8  6F83               	movwf	(printf@f+1)& (0+255),b
 13740  0104BA  ECD1  F089         	call	_printf	;wreg free
 13741                           
 13742                           ;ring_buffer_LUT.c: 261: terminal_textAttributesReset();
 13743  0104BE  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13744                           
 13745                           ;ring_buffer_LUT.c: 263: }
 13746                           ;ring_buffer_LUT.c: 265: }
 13747  0104C2  0012               	return	
 13748  0104C4                     l1288:
 13749                           
 13750                           ;ring_buffer_LUT.c: 268: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 13751  0104C4  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13752  0104C8  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13753  0104CC  0E0E               	movlw	low STR_76
 13754  0104CE  0101               	movlb	1	; () banked
 13755  0104D0  6F19               	movwf	strcmp@s2& (0+255),b
 13756  0104D2  0EFE               	movlw	high STR_76
 13757  0104D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13758  0104D6  ECE3  F0C4         	call	_strcmp	;wreg free
 13759  0104DA  0101               	movlb	1	; () banked
 13760  0104DC  5117               	movf	?_strcmp& (0+255),w,b
 13761  0104DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13762  0104E0  A4D8               	btfss	status,2,c
 13763  0104E2  D019               	goto	l1292
 13764                           
 13765                           ; BSR set to: 1
 13766                           ;ring_buffer_LUT.c: 270: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13767  0104E4  0E00               	movlw	0
 13768  0104E6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13769  0104E8  0E00               	movlw	0
 13770  0104EA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13771  0104EC  0E06               	movlw	6
 13772  0104EE  EC1C  F0A1         	call	_terminal_textAttributes
 13773                           
 13774                           ;ring_buffer_LUT.c: 271: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 13775  0104F2  0E43               	movlw	low STR_77
 13776  0104F4  0101               	movlb	1	; () banked
 13777  0104F6  6F82               	movwf	printf@f& (0+255),b
 13778  0104F8  0EFA               	movlw	high STR_77
 13779  0104FA  6F83               	movwf	(printf@f+1)& (0+255),b
 13780  0104FC  C1D3  F184         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 13781  010500  C1D4  F185         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 13782  010504  C1D5  F186         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 13783  010508  C1D6  F187         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 13784  01050C  ECD1  F089         	call	_printf	;wreg free
 13785                           
 13786                           ;ring_buffer_LUT.c: 272: terminal_textAttributesReset();
 13787  010510  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13788                           
 13789                           ;ring_buffer_LUT.c: 274: }
 13790  010514  0012               	return	
 13791  010516                     l1292:
 13792                           
 13793                           ;ring_buffer_LUT.c: 277: else if((0 == strcmp(line, "Measure POS12?"))) {
 13794  010516  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13795  01051A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13796  01051E  0E6D               	movlw	low STR_78
 13797  010520  0101               	movlb	1	; () banked
 13798  010522  6F19               	movwf	strcmp@s2& (0+255),b
 13799  010524  0EFE               	movlw	high STR_78
 13800  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13801  010528  ECE3  F0C4         	call	_strcmp	;wreg free
 13802  01052C  0101               	movlb	1	; () banked
 13803  01052E  5117               	movf	?_strcmp& (0+255),w,b
 13804  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13805  010532  A4D8               	btfss	status,2,c
 13806  010534  D019               	goto	l1294
 13807                           
 13808                           ; BSR set to: 1
 13809                           ;ring_buffer_LUT.c: 279: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13810  010536  0E00               	movlw	0
 13811  010538  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13812  01053A  0E00               	movlw	0
 13813  01053C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13814  01053E  0E06               	movlw	6
 13815  010540  EC1C  F0A1         	call	_terminal_textAttributes
 13816                           
 13817                           ;ring_buffer_LUT.c: 280: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 13818  010544  0EB1               	movlw	low STR_79
 13819  010546  0101               	movlb	1	; () banked
 13820  010548  6F82               	movwf	printf@f& (0+255),b
 13821  01054A  0EFA               	movlw	high STR_79
 13822  01054C  6F83               	movwf	(printf@f+1)& (0+255),b
 13823  01054E  C1CF  F184         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 13824  010552  C1D0  F185         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 13825  010556  C1D1  F186         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 13826  01055A  C1D2  F187         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 13827  01055E  ECD1  F089         	call	_printf	;wreg free
 13828                           
 13829                           ;ring_buffer_LUT.c: 281: terminal_textAttributesReset();
 13830  010562  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13831                           
 13832                           ;ring_buffer_LUT.c: 283: }
 13833  010566  0012               	return	
 13834  010568                     l1294:
 13835                           
 13836                           ;ring_buffer_LUT.c: 286: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 13837  010568  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13838  01056C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13839  010570  0E65               	movlw	low STR_80
 13840  010572  0101               	movlb	1	; () banked
 13841  010574  6F19               	movwf	strcmp@s2& (0+255),b
 13842  010576  0EFD               	movlw	high STR_80
 13843  010578  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13844  01057A  ECE3  F0C4         	call	_strcmp	;wreg free
 13845  01057E  0101               	movlb	1	; () banked
 13846  010580  5117               	movf	?_strcmp& (0+255),w,b
 13847  010582  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13848  010584  A4D8               	btfss	status,2,c
 13849  010586  D019               	goto	l1296
 13850                           
 13851                           ; BSR set to: 1
 13852                           ;ring_buffer_LUT.c: 288: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13853  010588  0E00               	movlw	0
 13854  01058A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13855  01058C  0E00               	movlw	0
 13856  01058E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13857  010590  0E06               	movlw	6
 13858  010592  EC1C  F0A1         	call	_terminal_textAttributes
 13859                           
 13860                           ;ring_buffer_LUT.c: 289: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 13861  010596  0E8D               	movlw	low STR_81
 13862  010598  0101               	movlb	1	; () banked
 13863  01059A  6F82               	movwf	printf@f& (0+255),b
 13864  01059C  0EFA               	movlw	high STR_81
 13865  01059E  6F83               	movwf	(printf@f+1)& (0+255),b
 13866  0105A0  C1CB  F184         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 13867  0105A4  C1CC  F185         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 13868  0105A8  C1CD  F186         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 13869  0105AC  C1CE  F187         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 13870  0105B0  ECD1  F089         	call	_printf	;wreg free
 13871                           
 13872                           ;ring_buffer_LUT.c: 290: terminal_textAttributesReset();
 13873  0105B4  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13874                           
 13875                           ;ring_buffer_LUT.c: 294: }
 13876  0105B8  0012               	return	
 13877  0105BA                     l1296:
 13878                           
 13879                           ;ring_buffer_LUT.c: 297: else if((0 == strcmp(line, "Measure FVR?"))) {
 13880  0105BA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13881  0105BE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13882  0105C2  0E16               	movlw	low STR_82
 13883  0105C4  0101               	movlb	1	; () banked
 13884  0105C6  6F19               	movwf	strcmp@s2& (0+255),b
 13885  0105C8  0EFF               	movlw	high STR_82
 13886  0105CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13887  0105CC  ECE3  F0C4         	call	_strcmp	;wreg free
 13888  0105D0  0101               	movlb	1	; () banked
 13889  0105D2  5117               	movf	?_strcmp& (0+255),w,b
 13890  0105D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13891  0105D6  A4D8               	btfss	status,2,c
 13892  0105D8  D019               	goto	l1298
 13893                           
 13894                           ; BSR set to: 1
 13895                           ;ring_buffer_LUT.c: 299: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13896  0105DA  0E00               	movlw	0
 13897  0105DC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13898  0105DE  0E00               	movlw	0
 13899  0105E0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13900  0105E2  0E06               	movlw	6
 13901  0105E4  EC1C  F0A1         	call	_terminal_textAttributes
 13902                           
 13903                           ;ring_buffer_LUT.c: 300: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 13904  0105E8  0E63               	movlw	low STR_83
 13905  0105EA  0101               	movlb	1	; () banked
 13906  0105EC  6F82               	movwf	printf@f& (0+255),b
 13907  0105EE  0EF5               	movlw	high STR_83
 13908  0105F0  6F83               	movwf	(printf@f+1)& (0+255),b
 13909  0105F2  C1E4  F184         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 13910  0105F6  C1E5  F185         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 13911  0105FA  C1E6  F186         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 13912  0105FE  C1E7  F187         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 13913  010602  ECD1  F089         	call	_printf	;wreg free
 13914                           
 13915                           ;ring_buffer_LUT.c: 301: terminal_textAttributesReset();
 13916  010606  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13917                           
 13918                           ;ring_buffer_LUT.c: 303: }
 13919  01060A  0012               	return	
 13920  01060C                     l1298:
 13921                           
 13922                           ;ring_buffer_LUT.c: 306: else if((0 == strcmp(line, "Measure AVSS?"))) {
 13923  01060C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13924  010610  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13925  010614  0EA8               	movlw	low STR_84
 13926  010616  0101               	movlb	1	; () banked
 13927  010618  6F19               	movwf	strcmp@s2& (0+255),b
 13928  01061A  0EFE               	movlw	high STR_84
 13929  01061C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13930  01061E  ECE3  F0C4         	call	_strcmp	;wreg free
 13931  010622  0101               	movlb	1	; () banked
 13932  010624  5117               	movf	?_strcmp& (0+255),w,b
 13933  010626  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13934  010628  A4D8               	btfss	status,2,c
 13935  01062A  D019               	goto	l1300
 13936                           
 13937                           ; BSR set to: 1
 13938                           ;ring_buffer_LUT.c: 308: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13939  01062C  0E00               	movlw	0
 13940  01062E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13941  010630  0E00               	movlw	0
 13942  010632  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13943  010634  0E06               	movlw	6
 13944  010636  EC1C  F0A1         	call	_terminal_textAttributes
 13945                           
 13946                           ;ring_buffer_LUT.c: 309: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 13947  01063A  0E1E               	movlw	low STR_85
 13948  01063C  0101               	movlb	1	; () banked
 13949  01063E  6F82               	movwf	printf@f& (0+255),b
 13950  010640  0EFA               	movlw	high STR_85
 13951  010642  6F83               	movwf	(printf@f+1)& (0+255),b
 13952  010644  C1D7  F184         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 13953  010648  C1D8  F185         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 13954  01064C  C1D9  F186         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 13955  010650  C1DA  F187         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 13956  010654  ECD1  F089         	call	_printf	;wreg free
 13957                           
 13958                           ;ring_buffer_LUT.c: 310: terminal_textAttributesReset();
 13959  010658  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13960                           
 13961                           ;ring_buffer_LUT.c: 312: }
 13962  01065C  0012               	return	
 13963  01065E                     l1300:
 13964                           
 13965                           ;ring_buffer_LUT.c: 315: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 13966  01065E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13967  010662  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13968  010666  0E47               	movlw	low STR_86
 13969  010668  0101               	movlb	1	; () banked
 13970  01066A  6F19               	movwf	strcmp@s2& (0+255),b
 13971  01066C  0EFC               	movlw	high STR_86
 13972  01066E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13973  010670  ECE3  F0C4         	call	_strcmp	;wreg free
 13974  010674  0101               	movlb	1	; () banked
 13975  010676  5117               	movf	?_strcmp& (0+255),w,b
 13976  010678  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13977  01067A  A4D8               	btfss	status,2,c
 13978  01067C  D019               	goto	l1302
 13979                           
 13980                           ; BSR set to: 1
 13981                           ;ring_buffer_LUT.c: 317: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13982  01067E  0E00               	movlw	0
 13983  010680  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13984  010682  0E00               	movlw	0
 13985  010684  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13986  010686  0E06               	movlw	6
 13987  010688  EC1C  F0A1         	call	_terminal_textAttributes
 13988                           
 13989                           ;ring_buffer_LUT.c: 318: printf("Measured Current is %.3f Amps\n\r", Imeas);
 13990  01068C  0E5C               	movlw	low STR_87
 13991  01068E  0101               	movlb	1	; () banked
 13992  010690  6F82               	movwf	printf@f& (0+255),b
 13993  010692  0EFB               	movlw	high STR_87
 13994  010694  6F83               	movwf	(printf@f+1)& (0+255),b
 13995  010696  C1C7  F184         	movff	_Imeas,?_printf+2	;volatile
 13996  01069A  C1C8  F185         	movff	_Imeas+1,?_printf+3	;volatile
 13997  01069E  C1C9  F186         	movff	_Imeas+2,?_printf+4	;volatile
 13998  0106A2  C1CA  F187         	movff	_Imeas+3,?_printf+5	;volatile
 13999  0106A6  ECD1  F089         	call	_printf	;wreg free
 14000                           
 14001                           ;ring_buffer_LUT.c: 319: terminal_textAttributesReset();
 14002  0106AA  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14003                           
 14004                           ;ring_buffer_LUT.c: 321: }
 14005  0106AE  0012               	return	
 14006  0106B0                     l1302:
 14007                           
 14008                           ;ring_buffer_LUT.c: 324: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 14009  0106B0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14010  0106B4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14011  0106B8  0E16               	movlw	low STR_88
 14012  0106BA  0101               	movlb	1	; () banked
 14013  0106BC  6F19               	movwf	strcmp@s2& (0+255),b
 14014  0106BE  0EFD               	movlw	high STR_88
 14015  0106C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14016  0106C2  ECE3  F0C4         	call	_strcmp	;wreg free
 14017  0106C6  0101               	movlb	1	; () banked
 14018  0106C8  5117               	movf	?_strcmp& (0+255),w,b
 14019  0106CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14020  0106CC  A4D8               	btfss	status,2,c
 14021  0106CE  D019               	goto	l1304
 14022                           
 14023                           ; BSR set to: 1
 14024                           ;ring_buffer_LUT.c: 326: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14025  0106D0  0E00               	movlw	0
 14026  0106D2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14027  0106D4  0E00               	movlw	0
 14028  0106D6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14029  0106D8  0E06               	movlw	6
 14030  0106DA  EC1C  F0A1         	call	_terminal_textAttributes
 14031                           
 14032                           ;ring_buffer_LUT.c: 327: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 14033  0106DE  0ED5               	movlw	low STR_89
 14034  0106E0  0101               	movlb	1	; () banked
 14035  0106E2  6F82               	movwf	printf@f& (0+255),b
 14036  0106E4  0EFA               	movlw	high STR_89
 14037  0106E6  6F83               	movwf	(printf@f+1)& (0+255),b
 14038  0106E8  C1C3  F184         	movff	_Irms,?_printf+2	;volatile
 14039  0106EC  C1C4  F185         	movff	_Irms+1,?_printf+3	;volatile
 14040  0106F0  C1C5  F186         	movff	_Irms+2,?_printf+4	;volatile
 14041  0106F4  C1C6  F187         	movff	_Irms+3,?_printf+5	;volatile
 14042  0106F8  ECD1  F089         	call	_printf	;wreg free
 14043                           
 14044                           ;ring_buffer_LUT.c: 328: terminal_textAttributesReset();
 14045  0106FC  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14046                           
 14047                           ;ring_buffer_LUT.c: 330: }
 14048  010700  0012               	return	
 14049  010702                     l1304:
 14050                           
 14051                           ;ring_buffer_LUT.c: 333: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 14052  010702  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14053  010706  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14054  01070A  0E01               	movlw	low STR_90
 14055  01070C  0101               	movlb	1	; () banked
 14056  01070E  6F19               	movwf	strcmp@s2& (0+255),b
 14057  010710  0EFD               	movlw	high STR_90
 14058  010712  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14059  010714  ECE3  F0C4         	call	_strcmp	;wreg free
 14060  010718  0101               	movlb	1	; () banked
 14061  01071A  5117               	movf	?_strcmp& (0+255),w,b
 14062  01071C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14063  01071E  A4D8               	btfss	status,2,c
 14064  010720  D019               	goto	l1306
 14065                           
 14066                           ; BSR set to: 1
 14067                           ;ring_buffer_LUT.c: 335: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14068  010722  0E00               	movlw	0
 14069  010724  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14070  010726  0E00               	movlw	0
 14071  010728  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14072  01072A  0E06               	movlw	6
 14073  01072C  EC1C  F0A1         	call	_terminal_textAttributes
 14074                           
 14075                           ;ring_buffer_LUT.c: 336: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 14076  010730  0EF7               	movlw	low STR_91
 14077  010732  0101               	movlb	1	; () banked
 14078  010734  6F82               	movwf	printf@f& (0+255),b
 14079  010736  0EFA               	movlw	high STR_91
 14080  010738  6F83               	movwf	(printf@f+1)& (0+255),b
 14081  01073A  C1BF  F184         	movff	_Vrms,?_printf+2	;volatile
 14082  01073E  C1C0  F185         	movff	_Vrms+1,?_printf+3	;volatile
 14083  010742  C1C1  F186         	movff	_Vrms+2,?_printf+4	;volatile
 14084  010746  C1C2  F187         	movff	_Vrms+3,?_printf+5	;volatile
 14085  01074A  ECD1  F089         	call	_printf	;wreg free
 14086                           
 14087                           ;ring_buffer_LUT.c: 337: terminal_textAttributesReset();
 14088  01074E  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14089                           
 14090                           ;ring_buffer_LUT.c: 339: }
 14091  010752  0012               	return	
 14092  010754                     l1306:
 14093                           
 14094                           ;ring_buffer_LUT.c: 342: else if ((0 == strcmp(line, "Measure Power?"))) {
 14095  010754  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14096  010758  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14097  01075C  0E7C               	movlw	low STR_92
 14098  01075E  0101               	movlb	1	; () banked
 14099  010760  6F19               	movwf	strcmp@s2& (0+255),b
 14100  010762  0EFE               	movlw	high STR_92
 14101  010764  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14102  010766  ECE3  F0C4         	call	_strcmp	;wreg free
 14103  01076A  0101               	movlb	1	; () banked
 14104  01076C  5117               	movf	?_strcmp& (0+255),w,b
 14105  01076E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14106  010770  A4D8               	btfss	status,2,c
 14107  010772  D019               	goto	l1308
 14108                           
 14109                           ; BSR set to: 1
 14110                           ;ring_buffer_LUT.c: 344: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14111  010774  0E00               	movlw	0
 14112  010776  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14113  010778  0E00               	movlw	0
 14114  01077A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14115  01077C  0E06               	movlw	6
 14116  01077E  EC1C  F0A1         	call	_terminal_textAttributes
 14117                           
 14118                           ;ring_buffer_LUT.c: 345: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 14119  010782  0E9D               	movlw	low STR_93
 14120  010784  0101               	movlb	1	; () banked
 14121  010786  6F82               	movwf	printf@f& (0+255),b
 14122  010788  0EF5               	movlw	high STR_93
 14123  01078A  6F83               	movwf	(printf@f+1)& (0+255),b
 14124  01078C  C1BB  F184         	movff	_Avg_Power,?_printf+2	;volatile
 14125  010790  C1BC  F185         	movff	_Avg_Power+1,?_printf+3	;volatile
 14126  010794  C1BD  F186         	movff	_Avg_Power+2,?_printf+4	;volatile
 14127  010798  C1BE  F187         	movff	_Avg_Power+3,?_printf+5	;volatile
 14128  01079C  ECD1  F089         	call	_printf	;wreg free
 14129                           
 14130                           ;ring_buffer_LUT.c: 346: terminal_textAttributesReset();
 14131  0107A0  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14132                           
 14133                           ;ring_buffer_LUT.c: 348: }
 14134  0107A4  0012               	return	
 14135  0107A6                     l1308:
 14136                           
 14137                           ;ring_buffer_LUT.c: 351: else if ((0 == strcmp(line, "Enable Dimming"))) {
 14138  0107A6  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14139  0107AA  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14140  0107AE  0E8B               	movlw	low STR_94
 14141  0107B0  0101               	movlb	1	; () banked
 14142  0107B2  6F19               	movwf	strcmp@s2& (0+255),b
 14143  0107B4  0EFE               	movlw	high STR_94
 14144  0107B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14145  0107B8  ECE3  F0C4         	call	_strcmp	;wreg free
 14146  0107BC  0101               	movlb	1	; () banked
 14147  0107BE  5117               	movf	?_strcmp& (0+255),w,b
 14148  0107C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14149  0107C2  A4D8               	btfss	status,2,c
 14150  0107C4  D012               	goto	l1310
 14151                           
 14152                           ; BSR set to: 1
 14153                           ;ring_buffer_LUT.c: 354: LATGbits.LATG0 = 0;
 14154  0107C6  907F               	bcf	3967,0,c	;volatile
 14155                           
 14156                           ; BSR set to: 1
 14157                           ;ring_buffer_LUT.c: 356: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14158  0107C8  0E00               	movlw	0
 14159  0107CA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14160  0107CC  0E00               	movlw	0
 14161  0107CE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14162  0107D0  0E02               	movlw	2
 14163  0107D2  EC1C  F0A1         	call	_terminal_textAttributes
 14164                           
 14165                           ;ring_buffer_LUT.c: 357: printf("TRIAC output dimming has been enabled\n\r");
 14166  0107D6  0ECF               	movlw	low STR_95
 14167  0107D8  0101               	movlb	1	; () banked
 14168  0107DA  6F82               	movwf	printf@f& (0+255),b
 14169  0107DC  0EF9               	movlw	high STR_95
 14170  0107DE  6F83               	movwf	(printf@f+1)& (0+255),b
 14171  0107E0  ECD1  F089         	call	_printf	;wreg free
 14172                           
 14173                           ;ring_buffer_LUT.c: 358: terminal_textAttributesReset();
 14174  0107E4  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14175                           
 14176                           ;ring_buffer_LUT.c: 360: }
 14177  0107E8  0012               	return	
 14178  0107EA                     l1310:
 14179                           
 14180                           ;ring_buffer_LUT.c: 363: else if ((0 == strcmp(line, "Disable Dimming"))) {
 14181  0107EA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14182  0107EE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14183  0107F2  0E3E               	movlw	low STR_96
 14184  0107F4  0101               	movlb	1	; () banked
 14185  0107F6  6F19               	movwf	strcmp@s2& (0+255),b
 14186  0107F8  0EFE               	movlw	high STR_96
 14187  0107FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14188  0107FC  ECE3  F0C4         	call	_strcmp	;wreg free
 14189  010800  0101               	movlb	1	; () banked
 14190  010802  5117               	movf	?_strcmp& (0+255),w,b
 14191  010804  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14192  010806  A4D8               	btfss	status,2,c
 14193  010808  D012               	goto	l1312
 14194                           
 14195                           ; BSR set to: 1
 14196                           ;ring_buffer_LUT.c: 366: LATGbits.LATG0 = 1;
 14197  01080A  807F               	bsf	3967,0,c	;volatile
 14198                           
 14199                           ; BSR set to: 1
 14200                           ;ring_buffer_LUT.c: 368: terminal_textAttributes(RED, BLACK, NORMAL);
 14201  01080C  0E00               	movlw	0
 14202  01080E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14203  010810  0E00               	movlw	0
 14204  010812  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14205  010814  0E01               	movlw	1
 14206  010816  EC1C  F0A1         	call	_terminal_textAttributes
 14207                           
 14208                           ;ring_buffer_LUT.c: 369: printf("TRIAC output dimming has been disabled\n\r");
 14209  01081A  0EA6               	movlw	low STR_97
 14210  01081C  0101               	movlb	1	; () banked
 14211  01081E  6F82               	movwf	printf@f& (0+255),b
 14212  010820  0EF9               	movlw	high STR_97
 14213  010822  6F83               	movwf	(printf@f+1)& (0+255),b
 14214  010824  ECD1  F089         	call	_printf	;wreg free
 14215                           
 14216                           ;ring_buffer_LUT.c: 370: terminal_textAttributesReset();
 14217  010828  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14218                           
 14219                           ;ring_buffer_LUT.c: 372: }
 14220  01082C  0012               	return	
 14221  01082E                     l1312:
 14222                           
 14223                           ;ring_buffer_LUT.c: 375: else if ((0 == strcmp(line, "Enable Load"))) {
 14224  01082E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14225  010832  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14226  010836  0E3C               	movlw	low STR_98
 14227  010838  0101               	movlb	1	; () banked
 14228  01083A  6F19               	movwf	strcmp@s2& (0+255),b
 14229  01083C  0EFF               	movlw	high STR_98
 14230  01083E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14231  010840  ECE3  F0C4         	call	_strcmp	;wreg free
 14232  010844  0101               	movlb	1	; () banked
 14233  010846  5117               	movf	?_strcmp& (0+255),w,b
 14234  010848  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14235  01084A  A4D8               	btfss	status,2,c
 14236  01084C  D014               	goto	l1314
 14237                           
 14238                           ; BSR set to: 1
 14239                           ;ring_buffer_LUT.c: 377: LATGbits.LATG0 = 1;
 14240  01084E  807F               	bsf	3967,0,c	;volatile
 14241                           
 14242                           ;ring_buffer_LUT.c: 378: LATGbits.LATG1 = 0;
 14243  010850  927F               	bcf	3967,1,c	;volatile
 14244                           
 14245                           ;ring_buffer_LUT.c: 379: load_enable = 1;
 14246  010852  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14247                           
 14248                           ; BSR set to: 1
 14249                           ;ring_buffer_LUT.c: 381: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14250  010854  0E00               	movlw	0
 14251  010856  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14252  010858  0E00               	movlw	0
 14253  01085A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14254  01085C  0E02               	movlw	2
 14255  01085E  EC1C  F0A1         	call	_terminal_textAttributes
 14256                           
 14257                           ;ring_buffer_LUT.c: 382: printf("Load has been enabled, dimming disabled\n\r");
 14258  010862  0E29               	movlw	low STR_99
 14259  010864  0101               	movlb	1	; () banked
 14260  010866  6F82               	movwf	printf@f& (0+255),b
 14261  010868  0EF9               	movlw	high STR_99
 14262  01086A  6F83               	movwf	(printf@f+1)& (0+255),b
 14263  01086C  ECD1  F089         	call	_printf	;wreg free
 14264                           
 14265                           ;ring_buffer_LUT.c: 383: terminal_textAttributesReset();
 14266  010870  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14267                           
 14268                           ;ring_buffer_LUT.c: 385: }
 14269  010874  0012               	return	
 14270  010876                     l1314:
 14271                           
 14272                           ;ring_buffer_LUT.c: 388: else if ((0 == strcmp(line, "Load Enabled?"))) {
 14273  010876  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14274  01087A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14275  01087E  0EB6               	movlw	low STR_100
 14276  010880  0101               	movlb	1	; () banked
 14277  010882  6F19               	movwf	strcmp@s2& (0+255),b
 14278  010884  0EFE               	movlw	high STR_100
 14279  010886  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14280  010888  ECE3  F0C4         	call	_strcmp	;wreg free
 14281  01088C  0101               	movlb	1	; () banked
 14282  01088E  5117               	movf	?_strcmp& (0+255),w,b
 14283  010890  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14284  010892  A4D8               	btfss	status,2,c
 14285  010894  D025               	goto	l1316
 14286                           
 14287                           ; BSR set to: 1
 14288                           ;ring_buffer_LUT.c: 390: if (load_enable == 1) {
 14289  010896  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14290  010898  D011               	goto	l1317
 14291                           
 14292                           ; BSR set to: 1
 14293                           ;ring_buffer_LUT.c: 392: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14294  01089A  0E00               	movlw	0
 14295  01089C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14296  01089E  0E00               	movlw	0
 14297  0108A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14298  0108A2  0E02               	movlw	2
 14299  0108A4  EC1C  F0A1         	call	_terminal_textAttributes
 14300                           
 14301                           ;ring_buffer_LUT.c: 393: printf("Load is currently enabled\n\r");
 14302  0108A8  0E10               	movlw	low STR_101
 14303  0108AA  0101               	movlb	1	; () banked
 14304  0108AC  6F82               	movwf	printf@f& (0+255),b
 14305  0108AE  0EFC               	movlw	high STR_101
 14306  0108B0  6F83               	movwf	(printf@f+1)& (0+255),b
 14307  0108B2  ECD1  F089         	call	_printf	;wreg free
 14308                           
 14309                           ;ring_buffer_LUT.c: 394: terminal_textAttributesReset();
 14310  0108B6  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14311                           
 14312                           ;ring_buffer_LUT.c: 396: }
 14313  0108BA  0012               	return	
 14314  0108BC                     l1317:
 14315                           
 14316                           ;ring_buffer_LUT.c: 398: else {
 14317                           ;ring_buffer_LUT.c: 400: terminal_textAttributes(RED, BLACK, NORMAL);
 14318  0108BC  0E00               	movlw	0
 14319  0108BE  0101               	movlb	1	; () banked
 14320  0108C0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14321  0108C2  0E00               	movlw	0
 14322  0108C4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14323  0108C6  0E01               	movlw	1
 14324  0108C8  EC1C  F0A1         	call	_terminal_textAttributes
 14325                           
 14326                           ;ring_buffer_LUT.c: 401: printf("Load is currently disabled\n\r");
 14327  0108CC  0EB9               	movlw	low STR_102
 14328  0108CE  0101               	movlb	1	; () banked
 14329  0108D0  6F82               	movwf	printf@f& (0+255),b
 14330  0108D2  0EFB               	movlw	high STR_102
 14331  0108D4  6F83               	movwf	(printf@f+1)& (0+255),b
 14332  0108D6  ECD1  F089         	call	_printf	;wreg free
 14333                           
 14334                           ;ring_buffer_LUT.c: 402: terminal_textAttributesReset();
 14335  0108DA  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14336                           
 14337                           ;ring_buffer_LUT.c: 405: }
 14338                           ;ring_buffer_LUT.c: 407: }
 14339  0108DE  0012               	return	
 14340  0108E0                     l1316:
 14341                           
 14342                           ;ring_buffer_LUT.c: 410: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 14343  0108E0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14344  0108E4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14345  0108E8  0E99               	movlw	low STR_103
 14346  0108EA  0101               	movlb	1	; () banked
 14347  0108EC  6F19               	movwf	strcmp@s2& (0+255),b
 14348  0108EE  0EFD               	movlw	high STR_103
 14349  0108F0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14350  0108F2  ECE3  F0C4         	call	_strcmp	;wreg free
 14351  0108F6  0101               	movlb	1	; () banked
 14352  0108F8  5117               	movf	?_strcmp& (0+255),w,b
 14353  0108FA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14354  0108FC  A4D8               	btfss	status,2,c
 14355  0108FE  D039               	goto	l1320
 14356                           
 14357                           ; BSR set to: 1
 14358                           ;ring_buffer_LUT.c: 412: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 14359  010900  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14360                           
 14361                           ; BSR set to: 1
 14362  010902  B07F               	btfsc	3967,0,c	;volatile
 14363  010904  D011               	goto	l1321
 14364                           
 14365                           ; BSR set to: 1
 14366                           ;ring_buffer_LUT.c: 414: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14367  010906  0E00               	movlw	0
 14368  010908  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14369  01090A  0E00               	movlw	0
 14370  01090C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14371  01090E  0E02               	movlw	2
 14372  010910  EC1C  F0A1         	call	_terminal_textAttributes
 14373                           
 14374                           ;ring_buffer_LUT.c: 415: printf("Dimming is currently enabled\n\r");
 14375  010914  0E7C               	movlw	low STR_104
 14376  010916  0101               	movlb	1	; () banked
 14377  010918  6F82               	movwf	printf@f& (0+255),b
 14378  01091A  0EFB               	movlw	high STR_104
 14379  01091C  6F83               	movwf	(printf@f+1)& (0+255),b
 14380  01091E  ECD1  F089         	call	_printf	;wreg free
 14381                           
 14382                           ;ring_buffer_LUT.c: 416: terminal_textAttributesReset();
 14383  010922  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14384                           
 14385                           ;ring_buffer_LUT.c: 418: }
 14386  010926  0012               	return	
 14387  010928                     l1321:
 14388                           
 14389                           ; BSR set to: 1
 14390                           ;ring_buffer_LUT.c: 420: else if (load_enable == 1){
 14391  010928  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14392  01092A  D011               	goto	l1323
 14393                           
 14394                           ; BSR set to: 1
 14395                           ;ring_buffer_LUT.c: 422: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 14396  01092C  0E00               	movlw	0
 14397  01092E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14398  010930  0E00               	movlw	0
 14399  010932  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14400  010934  0E03               	movlw	3
 14401  010936  EC1C  F0A1         	call	_terminal_textAttributes
 14402                           
 14403                           ;ring_buffer_LUT.c: 423: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 14404  01093A  0EAE               	movlw	low STR_105
 14405  01093C  0101               	movlb	1	; () banked
 14406  01093E  6F82               	movwf	printf@f& (0+255),b
 14407  010940  0EF6               	movlw	high STR_105
 14408  010942  6F83               	movwf	(printf@f+1)& (0+255),b
 14409  010944  ECD1  F089         	call	_printf	;wreg free
 14410                           
 14411                           ;ring_buffer_LUT.c: 424: terminal_textAttributesReset();
 14412  010948  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14413                           
 14414                           ;ring_buffer_LUT.c: 426: }
 14415  01094C  0012               	return	
 14416  01094E                     l1323:
 14417                           
 14418                           ;ring_buffer_LUT.c: 428: else {
 14419                           ;ring_buffer_LUT.c: 430: terminal_textAttributes(RED, BLACK, NORMAL);
 14420  01094E  0E00               	movlw	0
 14421  010950  0101               	movlb	1	; () banked
 14422  010952  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14423  010954  0E00               	movlw	0
 14424  010956  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14425  010958  0E01               	movlw	1
 14426  01095A  EC1C  F0A1         	call	_terminal_textAttributes
 14427                           
 14428                           ;ring_buffer_LUT.c: 431: printf("Load and dimming are currently disabled\n\r");
 14429  01095E  0E53               	movlw	low STR_106
 14430  010960  0101               	movlb	1	; () banked
 14431  010962  6F82               	movwf	printf@f& (0+255),b
 14432  010964  0EF9               	movlw	high STR_106
 14433  010966  6F83               	movwf	(printf@f+1)& (0+255),b
 14434  010968  ECD1  F089         	call	_printf	;wreg free
 14435                           
 14436                           ;ring_buffer_LUT.c: 432: terminal_textAttributesReset();
 14437  01096C  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14438                           
 14439                           ;ring_buffer_LUT.c: 434: }
 14440                           ;ring_buffer_LUT.c: 438: }
 14441  010970  0012               	return	
 14442  010972                     l1320:
 14443                           
 14444                           ;ring_buffer_LUT.c: 443: else if ((0 == strcmp(line, "Disable Load"))) {
 14445  010972  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14446  010976  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14447  01097A  0E23               	movlw	low STR_107
 14448  01097C  0101               	movlb	1	; () banked
 14449  01097E  6F19               	movwf	strcmp@s2& (0+255),b
 14450  010980  0EFF               	movlw	high STR_107
 14451  010982  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14452  010984  ECE3  F0C4         	call	_strcmp	;wreg free
 14453  010988  0101               	movlb	1	; () banked
 14454  01098A  5117               	movf	?_strcmp& (0+255),w,b
 14455  01098C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14456  01098E  A4D8               	btfss	status,2,c
 14457  010990  D014               	goto	l1326
 14458                           
 14459                           ; BSR set to: 1
 14460                           ;ring_buffer_LUT.c: 445: LATGbits.LATG1 = 0;
 14461  010992  927F               	bcf	3967,1,c	;volatile
 14462                           
 14463                           ;ring_buffer_LUT.c: 446: LATGbits.LATG0 = 0;
 14464  010994  907F               	bcf	3967,0,c	;volatile
 14465                           
 14466                           ;ring_buffer_LUT.c: 447: load_enable = 0;
 14467  010996  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14468                           
 14469                           ; BSR set to: 1
 14470                           ;ring_buffer_LUT.c: 449: terminal_textAttributes(RED, BLACK, NORMAL);
 14471  010998  0E00               	movlw	0
 14472  01099A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14473  01099C  0E00               	movlw	0
 14474  01099E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14475  0109A0  0E01               	movlw	1
 14476  0109A2  EC1C  F0A1         	call	_terminal_textAttributes
 14477                           
 14478                           ;ring_buffer_LUT.c: 450: printf("Load has been disabled\n\r");
 14479  0109A6  0E61               	movlw	low STR_108
 14480  0109A8  0101               	movlb	1	; () banked
 14481  0109AA  6F82               	movwf	printf@f& (0+255),b
 14482  0109AC  0EFC               	movlw	high STR_108
 14483  0109AE  6F83               	movwf	(printf@f+1)& (0+255),b
 14484  0109B0  ECD1  F089         	call	_printf	;wreg free
 14485                           
 14486                           ;ring_buffer_LUT.c: 451: terminal_textAttributesReset();
 14487  0109B4  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14488                           
 14489                           ;ring_buffer_LUT.c: 453: }
 14490  0109B8  0012               	return	
 14491  0109BA                     l1326:
 14492                           
 14493                           ;ring_buffer_LUT.c: 456: else if ((strstr(line, "Set Dimming Percentage: "))) {
 14494  0109BA  C1B4  F126         	movff	ringBufferLUT@line,strstr@s1
 14495  0109BE  C1B5  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 14496  0109C2  0E7A               	movlw	low STR_109
 14497  0109C4  0101               	movlb	1	; () banked
 14498  0109C6  6F28               	movwf	strstr@s2& (0+255),b
 14499  0109C8  0EFC               	movlw	high STR_109
 14500  0109CA  6F29               	movwf	(strstr@s2+1)& (0+255),b
 14501  0109CC  ECC4  F0C0         	call	_strstr	;wreg free
 14502  0109D0  0101               	movlb	1	; () banked
 14503  0109D2  5126               	movf	?_strstr& (0+255),w,b
 14504  0109D4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 14505  0109D6  B4D8               	btfsc	status,2,c
 14506  0109D8  D131               	goto	l1328
 14507                           
 14508                           ; BSR set to: 1
 14509                           ;ring_buffer_LUT.c: 459: char arg_buff[3];
 14510                           ;ring_buffer_LUT.c: 462: for (int index = 0; index < 3; index++) {
 14511  0109DA  0E00               	movlw	0
 14512  0109DC  0102               	movlb	2	; () banked
 14513  0109DE  6FC6               	movwf	(ringBufferLUT@index+1)& (0+255),b
 14514  0109E0  0E00               	movlw	0
 14515  0109E2  6FC5               	movwf	ringBufferLUT@index& (0+255),b
 14516  0109E4                     l19772:
 14517                           
 14518                           ; BSR set to: 2
 14519  0109E4  BFC6               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 14520  0109E6  D006               	goto	l1329
 14521  0109E8  51C6               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 14522  0109EA  E11F               	bnz	l19782
 14523  0109EC  0E03               	movlw	3
 14524  0109EE  5DC5               	subwf	ringBufferLUT@index& (0+255),w,b
 14525  0109F0  B0D8               	btfsc	status,0,c
 14526  0109F2  D01B               	goto	u26490
 14527  0109F4                     l1329:
 14528                           
 14529                           ; BSR set to: 2
 14530                           ;ring_buffer_LUT.c: 464: arg_buff[index] = line[index + 24];
 14531                           
 14532                           ; BSR set to: 2
 14533  0109F4  0E18               	movlw	24
 14534  0109F6  25C5               	addwf	ringBufferLUT@index& (0+255),w,b
 14535  0109F8  0101               	movlb	1	; () banked
 14536  0109FA  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 14537  0109FC  0E00               	movlw	0
 14538  0109FE  0102               	movlb	2	; () banked
 14539  010A00  21C6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 14540  010A02  0101               	movlb	1	; () banked
 14541  010A04  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 14542  010A06  51B6               	movf	??_ringBufferLUT& (0+255),w,b
 14543  010A08  25B4               	addwf	ringBufferLUT@line& (0+255),w,b
 14544  010A0A  6ED9               	movwf	fsr2l,c
 14545  010A0C  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 14546  010A0E  21B5               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 14547  010A10  6EDA               	movwf	fsr2h,c
 14548  010A12  0EC2               	movlw	low ringBufferLUT@arg_buff
 14549  010A14  0102               	movlb	2	; () banked
 14550  010A16  25C5               	addwf	ringBufferLUT@index& (0+255),w,b
 14551  010A18  6EE1               	movwf	fsr1l,c
 14552  010A1A  0E02               	movlw	high ringBufferLUT@arg_buff
 14553  010A1C  21C6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 14554  010A1E  6EE2               	movwf	fsr1h,c
 14555  010A20  CFDF FFE7          	movff	indf2,indf1
 14556                           
 14557                           ; BSR set to: 2
 14558  010A24  4BC5               	infsnz	ringBufferLUT@index& (0+255),f,b
 14559  010A26  2BC6               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 14560  010A28  D7DD               	goto	l19772
 14561  010A2A                     u26490:
 14562  010A2A                     l19782:
 14563                           
 14564                           ; BSR set to: 2
 14565                           ;ring_buffer_LUT.c: 466: }
 14566                           ;ring_buffer_LUT.c: 468: int percentage = atoi(arg_buff);
 14567  010A2A  0EC2               	movlw	low ringBufferLUT@arg_buff
 14568  010A2C  0101               	movlb	1	; () banked
 14569  010A2E  6F1D               	movwf	atoi@s& (0+255),b
 14570  010A30  0E02               	movlw	high ringBufferLUT@arg_buff
 14571  010A32  6F1E               	movwf	(atoi@s+1)& (0+255),b
 14572  010A34  EC71  F0BE         	call	_atoi	;wreg free
 14573  010A38  C11D  F2C7         	movff	?_atoi,ringBufferLUT@percentage
 14574  010A3C  C11E  F2C8         	movff	?_atoi+1,ringBufferLUT@percentage+1
 14575                           
 14576                           ;ring_buffer_LUT.c: 471: if ( (percentage >= 100) ||
 14577                           ;ring_buffer_LUT.c: 472: (percentage <= 0)) {
 14578  010A40  0102               	movlb	2	; () banked
 14579  010A42  BFC8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 14580  010A44  D006               	goto	u26500
 14581  010A46  51C8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 14582  010A48  E10B               	bnz	l19788
 14583  010A4A  0E64               	movlw	100
 14584  010A4C  5DC7               	subwf	ringBufferLUT@percentage& (0+255),w,b
 14585  010A4E  B0D8               	btfsc	status,0,c
 14586  010A50  D007               	goto	u26510
 14587  010A52                     u26500:
 14588                           
 14589                           ; BSR set to: 2
 14590  010A52  BFC8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 14591  010A54  D005               	goto	u26510
 14592  010A56  51C8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 14593  010A58  E12B               	bnz	l19790
 14594  010A5A  05C7               	decf	ringBufferLUT@percentage& (0+255),w,b
 14595  010A5C  B0D8               	btfsc	status,0,c
 14596  010A5E  D028               	goto	l1331
 14597  010A60                     u26510:
 14598  010A60                     l19788:
 14599                           
 14600                           ; BSR set to: 2
 14601                           ;ring_buffer_LUT.c: 474: terminal_textAttributes(RED, BLACK, NORMAL);
 14602  010A60  0E00               	movlw	0
 14603  010A62  0101               	movlb	1	; () banked
 14604  010A64  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14605  010A66  0E00               	movlw	0
 14606  010A68  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14607  010A6A  0E01               	movlw	1
 14608  010A6C  EC1C  F0A1         	call	_terminal_textAttributes
 14609                           
 14610                           ;ring_buffer_LUT.c: 475: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 14611  010A70  0EFD               	movlw	low STR_110
 14612  010A72  0101               	movlb	1	; () banked
 14613  010A74  6F82               	movwf	printf@f& (0+255),b
 14614  010A76  0EF2               	movlw	high STR_110
 14615  010A78  6F83               	movwf	(printf@f+1)& (0+255),b
 14616  010A7A  ECD1  F089         	call	_printf	;wreg free
 14617                           
 14618                           ;ring_buffer_LUT.c: 476: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 14619  010A7E  0E00               	movlw	0
 14620  010A80  0101               	movlb	1	; () banked
 14621  010A82  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14622  010A84  0E00               	movlw	0
 14623  010A86  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14624  010A88  0E03               	movlw	3
 14625  010A8A  EC1C  F0A1         	call	_terminal_textAttributes
 14626                           
 14627                           ;ring_buffer_LUT.c: 477: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 14628  010A8E  0E97               	movlw	low STR_111
 14629  010A90  0101               	movlb	1	; () banked
 14630  010A92  6F82               	movwf	printf@f& (0+255),b
 14631  010A94  0EF2               	movlw	high STR_111
 14632  010A96  6F83               	movwf	(printf@f+1)& (0+255),b
 14633  010A98  ECD1  F089         	call	_printf	;wreg free
 14634                           
 14635                           ;ring_buffer_LUT.c: 478: printf("Enter 'Help' for list of available commands\n\r");
 14636  010A9C  0E73               	movlw	low STR_112
 14637  010A9E  0101               	movlb	1	; () banked
 14638  010AA0  6F82               	movwf	printf@f& (0+255),b
 14639  010AA2  0EF8               	movlw	high STR_112
 14640  010AA4  6F83               	movwf	(printf@f+1)& (0+255),b
 14641  010AA6  ECD1  F089         	call	_printf	;wreg free
 14642                           
 14643                           ;ring_buffer_LUT.c: 479: terminal_textAttributesReset();
 14644  010AAA  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14645                           
 14646                           ;ring_buffer_LUT.c: 481: }
 14647  010AAE  0012               	return	
 14648  010AB0                     l1331:
 14649  010AB0                     l19790:
 14650                           
 14651                           ;ring_buffer_LUT.c: 484: else {
 14652                           ;ring_buffer_LUT.c: 487: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 14653  010AB0  0E00               	movlw	0
 14654  010AB2  0101               	movlb	1	; () banked
 14655  010AB4  6F41               	movwf	___fldiv@a& (0+255),b
 14656  010AB6  0E00               	movlw	0
 14657  010AB8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 14658  010ABA  0EC8               	movlw	200
 14659  010ABC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 14660  010ABE  0E42               	movlw	66
 14661  010AC0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 14662  010AC2  0E00               	movlw	0
 14663  010AC4  6F2D               	movwf	___fladd@a& (0+255),b
 14664  010AC6  0E00               	movlw	0
 14665  010AC8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 14666  010ACA  0EC8               	movlw	200
 14667  010ACC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 14668  010ACE  0E42               	movlw	66
 14669  010AD0  6F30               	movwf	(___fladd@a+3)& (0+255),b
 14670  010AD2  C2C7  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 14671  010AD6  C2C8  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 14672  010ADA  0E00               	movlw	0
 14673  010ADC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 14674  010ADE  0EFF               	movlw	-1
 14675  010AE0  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 14676  010AE2  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 14677  010AE4  0E01               	movlw	1
 14678  010AE6  ECA4  F0B6         	call	___xxtofl
 14679  010AEA  C117  F125         	movff	?___xxtofl,___flneg@f1
 14680  010AEE  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 14681  010AF2  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 14682  010AF6  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 14683  010AFA  ECD1  F0C7         	call	___flneg	;wreg free
 14684  010AFE  C125  F129         	movff	?___flneg,___fladd@b
 14685  010B02  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 14686  010B06  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 14687  010B0A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 14688  010B0E  EC21  F0A6         	call	___fladd	;wreg free
 14689  010B12  C129  F13D         	movff	?___fladd,___fldiv@b
 14690  010B16  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 14691  010B1A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 14692  010B1E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 14693  010B22  EC25  F0AF         	call	___fldiv	;wreg free
 14694  010B26  C13D  F156         	movff	?___fldiv,___flmul@b
 14695  010B2A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 14696  010B2E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 14697  010B32  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 14698  010B36  0EDB               	movlw	219
 14699  010B38  0101               	movlb	1	; () banked
 14700  010B3A  6F5A               	movwf	___flmul@a& (0+255),b
 14701  010B3C  0E0F               	movlw	15
 14702  010B3E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 14703  010B40  0E49               	movlw	73
 14704  010B42  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 14705  010B44  0E40               	movlw	64
 14706  010B46  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 14707  010B48  ECD0  F0A2         	call	___flmul	;wreg free
 14708  010B4C  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 14709  010B50  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 14710  010B54  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 14711  010B58  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 14712                           
 14713                           ;ring_buffer_LUT.c: 488: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 14714  010B5C  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 14715  010B60  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 14716  010B64  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 14717  010B68  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 14718  010B6C  0EE1               	movlw	225
 14719  010B6E  0101               	movlb	1	; () banked
 14720  010B70  6F5A               	movwf	___flmul@a& (0+255),b
 14721  010B72  0E2E               	movlw	46
 14722  010B74  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 14723  010B76  0E65               	movlw	101
 14724  010B78  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 14725  010B7A  0E42               	movlw	66
 14726  010B7C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 14727  010B7E  ECD0  F0A2         	call	___flmul	;wreg free
 14728  010B82  C156  F2A6         	movff	?___flmul,ringBufferLUT@angle_degrees
 14729  010B86  C157  F2A7         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 14730  010B8A  C158  F2A8         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 14731  010B8E  C159  F2A9         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 14732                           
 14733                           ;ring_buffer_LUT.c: 489: dimming_period = (100 - percentage) * (0xFFFF / 100);
 14734  010B92  C2C7  F1B6         	movff	ringBufferLUT@percentage,??_ringBufferLUT
 14735  010B96  C2C8  F1B7         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
 14736  010B9A  0101               	movlb	1	; () banked
 14737  010B9C  1FB6               	comf	??_ringBufferLUT& (0+255),f,b
 14738  010B9E  1FB7               	comf	(??_ringBufferLUT+1)& (0+255),f,b
 14739  010BA0  4BB6               	infsnz	??_ringBufferLUT& (0+255),f,b
 14740  010BA2  2BB7               	incf	(??_ringBufferLUT+1)& (0+255),f,b
 14741  010BA4  0E64               	movlw	100
 14742  010BA6  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 14743  010BA8  6F17               	movwf	___wmul@multiplier& (0+255),b
 14744  010BAA  0E00               	movlw	0
 14745  010BAC  21B7               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
 14746  010BAE  6F18               	movwf	(___wmul@multiplier+1)& (0+255),b
 14747  010BB0  0E02               	movlw	2
 14748  010BB2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14749  010BB4  0E8F               	movlw	143
 14750  010BB6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14751  010BB8  EC2C  F0C8         	call	___wmul	;wreg free
 14752  010BBC  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 14753  010BC0  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 14754                           
 14755                           ;ring_buffer_LUT.c: 491: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14756  010BC4  0E00               	movlw	0
 14757  010BC6  0101               	movlb	1	; () banked
 14758  010BC8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14759  010BCA  0E00               	movlw	0
 14760  010BCC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14761  010BCE  0E02               	movlw	2
 14762  010BD0  EC1C  F0A1         	call	_terminal_textAttributes
 14763                           
 14764                           ;ring_buffer_LUT.c: 492: printf("Dimming has been set to %d percent\n\r", percentage);
 14765  010BD4  0E68               	movlw	low STR_113
 14766  010BD6  0101               	movlb	1	; () banked
 14767  010BD8  6F82               	movwf	printf@f& (0+255),b
 14768  010BDA  0EFA               	movlw	high STR_113
 14769  010BDC  6F83               	movwf	(printf@f+1)& (0+255),b
 14770  010BDE  C2C7  F184         	movff	ringBufferLUT@percentage,?_printf+2
 14771  010BE2  C2C8  F185         	movff	ringBufferLUT@percentage+1,?_printf+3
 14772  010BE6  ECD1  F089         	call	_printf	;wreg free
 14773                           
 14774                           ;ring_buffer_LUT.c: 493: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 14775  010BEA  0E71               	movlw	low STR_114
 14776  010BEC  0101               	movlb	1	; () banked
 14777  010BEE  6F82               	movwf	printf@f& (0+255),b
 14778  010BF0  0EF4               	movlw	high STR_114
 14779  010BF2  6F83               	movwf	(printf@f+1)& (0+255),b
 14780  010BF4  C0F2  F184         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 14781  010BF8  C0F3  F185         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 14782  010BFC  C0F4  F186         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 14783  010C00  C0F5  F187         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 14784  010C04  C2A6  F188         	movff	ringBufferLUT@angle_degrees,?_printf+6
 14785  010C08  C2A7  F189         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 14786  010C0C  C2A8  F18A         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 14787  010C10  C2A9  F18B         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 14788  010C14  ECD1  F089         	call	_printf	;wreg free
 14789                           
 14790                           ;ring_buffer_LUT.c: 494: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 14791  010C18  0EA8               	movlw	low STR_115
 14792  010C1A  0101               	movlb	1	; () banked
 14793  010C1C  6F82               	movwf	printf@f& (0+255),b
 14794  010C1E  0EF3               	movlw	high STR_115
 14795  010C20  6F83               	movwf	(printf@f+1)& (0+255),b
 14796  010C22  C0F0  F184         	movff	_dimming_period,?_printf+2	;volatile
 14797  010C26  C0F1  F185         	movff	_dimming_period+1,?_printf+3	;volatile
 14798  010C2A  C0F0  F186         	movff	_dimming_period,?_printf+4	;volatile
 14799  010C2E  C0F1  F187         	movff	_dimming_period+1,?_printf+5	;volatile
 14800  010C32  ECD1  F089         	call	_printf	;wreg free
 14801                           
 14802                           ;ring_buffer_LUT.c: 495: terminal_textAttributesReset();
 14803  010C36  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14804                           
 14805                           ;ring_buffer_LUT.c: 497: }
 14806                           ;ring_buffer_LUT.c: 499: }
 14807  010C3A  0012               	return	
 14808  010C3C                     l1328:
 14809                           
 14810                           ;ring_buffer_LUT.c: 502: else if((0 == strcmp(line, "Device On Time?"))) {
 14811  010C3C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14812  010C40  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14813  010C44  0E1E               	movlw	low STR_116
 14814  010C46  0101               	movlb	1	; () banked
 14815  010C48  6F19               	movwf	strcmp@s2& (0+255),b
 14816  010C4A  0EFE               	movlw	high STR_116
 14817  010C4C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14818  010C4E  ECE3  F0C4         	call	_strcmp	;wreg free
 14819  010C52  0101               	movlb	1	; () banked
 14820  010C54  5117               	movf	?_strcmp& (0+255),w,b
 14821  010C56  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14822  010C58  A4D8               	btfss	status,2,c
 14823  010C5A  D019               	goto	l1336
 14824                           
 14825                           ; BSR set to: 1
 14826                           ;ring_buffer_LUT.c: 504: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14827  010C5C  0E00               	movlw	0
 14828  010C5E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14829  010C60  0E00               	movlw	0
 14830  010C62  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14831  010C64  0E02               	movlw	2
 14832  010C66  EC1C  F0A1         	call	_terminal_textAttributes
 14833                           
 14834                           ;ring_buffer_LUT.c: 505: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 14835  010C6A  0E29               	movlw	low STR_117
 14836  010C6C  0101               	movlb	1	; () banked
 14837  010C6E  6F82               	movwf	printf@f& (0+255),b
 14838  010C70  0EF5               	movlw	high STR_117
 14839  010C72  6F83               	movwf	(printf@f+1)& (0+255),b
 14840  010C74  C21C  F184         	movff	_dev_on_time,?_printf+2	;volatile
 14841  010C78  C21D  F185         	movff	_dev_on_time+1,?_printf+3	;volatile
 14842  010C7C  C21E  F186         	movff	_dev_on_time+2,?_printf+4	;volatile
 14843  010C80  C21F  F187         	movff	_dev_on_time+3,?_printf+5	;volatile
 14844  010C84  ECD1  F089         	call	_printf	;wreg free
 14845                           
 14846                           ;ring_buffer_LUT.c: 506: terminal_textAttributesReset();
 14847  010C88  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14848                           
 14849                           ;ring_buffer_LUT.c: 508: }
 14850  010C8C  0012               	return	
 14851  010C8E                     l1336:
 14852                           
 14853                           ;ring_buffer_LUT.c: 511: else if((0 == strcmp(line, "Load On Time?"))) {
 14854  010C8E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14855  010C92  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14856  010C96  0EC4               	movlw	low STR_118
 14857  010C98  0101               	movlb	1	; () banked
 14858  010C9A  6F19               	movwf	strcmp@s2& (0+255),b
 14859  010C9C  0EFE               	movlw	high STR_118
 14860  010C9E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14861  010CA0  ECE3  F0C4         	call	_strcmp	;wreg free
 14862  010CA4  0101               	movlb	1	; () banked
 14863  010CA6  5117               	movf	?_strcmp& (0+255),w,b
 14864  010CA8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14865  010CAA  A4D8               	btfss	status,2,c
 14866  010CAC  D019               	goto	l1338
 14867                           
 14868                           ; BSR set to: 1
 14869                           ;ring_buffer_LUT.c: 513: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14870  010CAE  0E00               	movlw	0
 14871  010CB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14872  010CB2  0E00               	movlw	0
 14873  010CB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14874  010CB6  0E02               	movlw	2
 14875  010CB8  EC1C  F0A1         	call	_terminal_textAttributes
 14876                           
 14877                           ;ring_buffer_LUT.c: 514: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 14878  010CBC  0EE3               	movlw	low STR_119
 14879  010CBE  0101               	movlb	1	; () banked
 14880  010CC0  6F82               	movwf	printf@f& (0+255),b
 14881  010CC2  0EF6               	movlw	high STR_119
 14882  010CC4  6F83               	movwf	(printf@f+1)& (0+255),b
 14883  010CC6  C218  F184         	movff	_load_on_time,?_printf+2	;volatile
 14884  010CCA  C219  F185         	movff	_load_on_time+1,?_printf+3	;volatile
 14885  010CCE  C21A  F186         	movff	_load_on_time+2,?_printf+4	;volatile
 14886  010CD2  C21B  F187         	movff	_load_on_time+3,?_printf+5	;volatile
 14887  010CD6  ECD1  F089         	call	_printf	;wreg free
 14888                           
 14889                           ;ring_buffer_LUT.c: 515: terminal_textAttributesReset();
 14890  010CDA  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14891                           
 14892                           ;ring_buffer_LUT.c: 517: }
 14893  010CDE  0012               	return	
 14894  010CE0                     l1338:
 14895                           
 14896                           ;ring_buffer_LUT.c: 520: else if((0 == strcmp(line, "Max RMS Current?"))) {
 14897  010CE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14898  010CE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14899  010CE8  0ECC               	movlw	low STR_120
 14900  010CEA  0101               	movlb	1	; () banked
 14901  010CEC  6F19               	movwf	strcmp@s2& (0+255),b
 14902  010CEE  0EFD               	movlw	high STR_120
 14903  010CF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14904  010CF2  ECE3  F0C4         	call	_strcmp	;wreg free
 14905  010CF6  0101               	movlb	1	; () banked
 14906  010CF8  5117               	movf	?_strcmp& (0+255),w,b
 14907  010CFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14908  010CFC  A4D8               	btfss	status,2,c
 14909  010CFE  D030               	goto	l1340
 14910                           
 14911                           ; BSR set to: 1
 14912                           ;ring_buffer_LUT.c: 523: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 14913  010D00  0EFD               	movlw	low _max_Irms_address
 14914  010D02  6EF6               	movwf	tblptrl,c
 14915  010D04                     	if	1	;There is more than 1 active tblptr byte
 14916  010D04  0ED8               	movlw	high _max_Irms_address
 14917  010D06  6EF7               	movwf	tblptrh,c
 14918  010D08                     	endif
 14919  010D08                     	if	1	;There are 3 active tblptr bytes
 14920  010D08  0E00               	movlw	low (_max_Irms_address shr (0+16))
 14921  010D0A  6EF8               	movwf	tblptru,c
 14922  010D0C                     	endif
 14923  010D0C  0009               	tblrd		*+
 14924  010D0E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 14925  010D12  000A               	tblrd		*-
 14926  010D14  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 14927  010D18  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 14928  010D1C  C119  F2AA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 14929  010D20  C11A  F2AB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 14930  010D24  C11B  F2AC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 14931  010D28  C11C  F2AD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 14932                           
 14933                           ;ring_buffer_LUT.c: 525: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14934  010D2C  0E00               	movlw	0
 14935  010D2E  0101               	movlb	1	; () banked
 14936  010D30  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14937  010D32  0E00               	movlw	0
 14938  010D34  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14939  010D36  0E06               	movlw	6
 14940  010D38  EC1C  F0A1         	call	_terminal_textAttributes
 14941                           
 14942                           ;ring_buffer_LUT.c: 526: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 14943  010D3C  0E80               	movlw	low STR_121
 14944  010D3E  0101               	movlb	1	; () banked
 14945  010D40  6F82               	movwf	printf@f& (0+255),b
 14946  010D42  0EF7               	movlw	high STR_121
 14947  010D44  6F83               	movwf	(printf@f+1)& (0+255),b
 14948  010D46  C2AA  F184         	movff	ringBufferLUT@max_current_print,?_printf+2
 14949  010D4A  C2AB  F185         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 14950  010D4E  C2AC  F186         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 14951  010D52  C2AD  F187         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 14952  010D56  ECD1  F089         	call	_printf	;wreg free
 14953                           
 14954                           ;ring_buffer_LUT.c: 527: terminal_textAttributesReset();
 14955  010D5A  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14956                           
 14957                           ;ring_buffer_LUT.c: 529: }
 14958  010D5E  0012               	return	
 14959  010D60                     l1340:
 14960                           
 14961                           ;ring_buffer_LUT.c: 532: else if((0 == strcmp(line, "Max Power?"))) {
 14962  010D60  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14963  010D64  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14964  010D68  0E53               	movlw	low STR_122
 14965  010D6A  0101               	movlb	1	; () banked
 14966  010D6C  6F19               	movwf	strcmp@s2& (0+255),b
 14967  010D6E  0EFF               	movlw	high STR_122
 14968  010D70  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14969  010D72  ECE3  F0C4         	call	_strcmp	;wreg free
 14970  010D76  0101               	movlb	1	; () banked
 14971  010D78  5117               	movf	?_strcmp& (0+255),w,b
 14972  010D7A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14973  010D7C  A4D8               	btfss	status,2,c
 14974  010D7E  D030               	goto	l1342
 14975                           
 14976                           ; BSR set to: 1
 14977                           ;ring_buffer_LUT.c: 535: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 14978  010D80  0EFB               	movlw	low _max_Power_address
 14979  010D82  6EF6               	movwf	tblptrl,c
 14980  010D84                     	if	1	;There is more than 1 active tblptr byte
 14981  010D84  0ED8               	movlw	high _max_Power_address
 14982  010D86  6EF7               	movwf	tblptrh,c
 14983  010D88                     	endif
 14984  010D88                     	if	1	;There are 3 active tblptr bytes
 14985  010D88  0E00               	movlw	low (_max_Power_address shr (0+16))
 14986  010D8A  6EF8               	movwf	tblptru,c
 14987  010D8C                     	endif
 14988  010D8C  0009               	tblrd		*+
 14989  010D8E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 14990  010D92  000A               	tblrd		*-
 14991  010D94  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 14992  010D98  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 14993  010D9C  C119  F2AE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 14994  010DA0  C11A  F2AF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 14995  010DA4  C11B  F2B0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 14996  010DA8  C11C  F2B1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 14997                           
 14998                           ;ring_buffer_LUT.c: 537: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14999  010DAC  0E00               	movlw	0
 15000  010DAE  0101               	movlb	1	; () banked
 15001  010DB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15002  010DB2  0E00               	movlw	0
 15003  010DB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15004  010DB6  0E06               	movlw	6
 15005  010DB8  EC1C  F0A1         	call	_terminal_textAttributes
 15006                           
 15007                           ;ring_buffer_LUT.c: 538: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 15008  010DBC  0EA1               	movlw	low STR_123
 15009  010DBE  0101               	movlb	1	; () banked
 15010  010DC0  6F82               	movwf	printf@f& (0+255),b
 15011  010DC2  0EF8               	movlw	high STR_123
 15012  010DC4  6F83               	movwf	(printf@f+1)& (0+255),b
 15013  010DC6  C2AE  F184         	movff	ringBufferLUT@max_Power_print,?_printf+2
 15014  010DCA  C2AF  F185         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 15015  010DCE  C2B0  F186         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 15016  010DD2  C2B1  F187         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 15017  010DD6  ECD1  F089         	call	_printf	;wreg free
 15018                           
 15019                           ;ring_buffer_LUT.c: 539: terminal_textAttributesReset();
 15020  010DDA  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15021                           
 15022                           ;ring_buffer_LUT.c: 541: }
 15023  010DDE  0012               	return	
 15024  010DE0                     l1342:
 15025                           
 15026                           ;ring_buffer_LUT.c: 544: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 15027  010DE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15028  010DE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15029  010DE8  0E2B               	movlw	low STR_124
 15030  010DEA  0101               	movlb	1	; () banked
 15031  010DEC  6F19               	movwf	strcmp@s2& (0+255),b
 15032  010DEE  0EFD               	movlw	high STR_124
 15033  010DF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15034  010DF2  ECE3  F0C4         	call	_strcmp	;wreg free
 15035  010DF6  0101               	movlb	1	; () banked
 15036  010DF8  5117               	movf	?_strcmp& (0+255),w,b
 15037  010DFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15038  010DFC  A4D8               	btfss	status,2,c
 15039  010DFE  D030               	goto	l1344
 15040                           
 15041                           ; BSR set to: 1
 15042                           ;ring_buffer_LUT.c: 547: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 15043  010E00  0EF9               	movlw	low _max_POS3P3_ADC_Result_address
 15044  010E02  6EF6               	movwf	tblptrl,c
 15045  010E04                     	if	1	;There is more than 1 active tblptr byte
 15046  010E04  0ED8               	movlw	high _max_POS3P3_ADC_Result_address
 15047  010E06  6EF7               	movwf	tblptrh,c
 15048  010E08                     	endif
 15049  010E08                     	if	1	;There are 3 active tblptr bytes
 15050  010E08  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 15051  010E0A  6EF8               	movwf	tblptru,c
 15052  010E0C                     	endif
 15053  010E0C  0009               	tblrd		*+
 15054  010E0E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15055  010E12  000A               	tblrd		*-
 15056  010E14  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15057  010E18  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15058  010E1C  C119  F2B2         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 15059  010E20  C11A  F2B3         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 15060  010E24  C11B  F2B4         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 15061  010E28  C11C  F2B5         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 15062                           
 15063                           ;ring_buffer_LUT.c: 549: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15064  010E2C  0E00               	movlw	0
 15065  010E2E  0101               	movlb	1	; () banked
 15066  010E30  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15067  010E32  0E00               	movlw	0
 15068  010E34  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15069  010E36  0E06               	movlw	6
 15070  010E38  EC1C  F0A1         	call	_terminal_textAttributes
 15071                           
 15072                           ;ring_buffer_LUT.c: 550: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 15073  010E3C  0E4C               	movlw	low STR_125
 15074  010E3E  0101               	movlb	1	; () banked
 15075  010E40  6F82               	movwf	printf@f& (0+255),b
 15076  010E42  0EF7               	movlw	high STR_125
 15077  010E44  6F83               	movwf	(printf@f+1)& (0+255),b
 15078  010E46  C2B2  F184         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 15079  010E4A  C2B3  F185         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 15080  010E4E  C2B4  F186         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 15081  010E52  C2B5  F187         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 15082  010E56  ECD1  F089         	call	_printf	;wreg free
 15083                           
 15084                           ;ring_buffer_LUT.c: 551: terminal_textAttributesReset();
 15085  010E5A  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15086                           
 15087                           ;ring_buffer_LUT.c: 553: }
 15088  010E5E  0012               	return	
 15089  010E60                     l1344:
 15090                           
 15091                           ;ring_buffer_LUT.c: 556: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 15092  010E60  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15093  010E64  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15094  010E68  0E52               	movlw	low STR_126
 15095  010E6A  0101               	movlb	1	; () banked
 15096  010E6C  6F19               	movwf	strcmp@s2& (0+255),b
 15097  010E6E  0EFD               	movlw	high STR_126
 15098  010E70  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15099  010E72  ECE3  F0C4         	call	_strcmp	;wreg free
 15100  010E76  0101               	movlb	1	; () banked
 15101  010E78  5117               	movf	?_strcmp& (0+255),w,b
 15102  010E7A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15103  010E7C  A4D8               	btfss	status,2,c
 15104  010E7E  D030               	goto	l1346
 15105                           
 15106                           ; BSR set to: 1
 15107                           ;ring_buffer_LUT.c: 559: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 15108  010E80  0EF7               	movlw	low _max_POS12_ADC_Result_address
 15109  010E82  6EF6               	movwf	tblptrl,c
 15110  010E84                     	if	1	;There is more than 1 active tblptr byte
 15111  010E84  0ED8               	movlw	high _max_POS12_ADC_Result_address
 15112  010E86  6EF7               	movwf	tblptrh,c
 15113  010E88                     	endif
 15114  010E88                     	if	1	;There are 3 active tblptr bytes
 15115  010E88  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 15116  010E8A  6EF8               	movwf	tblptru,c
 15117  010E8C                     	endif
 15118  010E8C  0009               	tblrd		*+
 15119  010E8E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15120  010E92  000A               	tblrd		*-
 15121  010E94  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15122  010E98  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15123  010E9C  C119  F2B6         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_2756
 15124  010EA0  C11A  F2B7         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_2756+1
 15125  010EA4  C11B  F2B8         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_2756+2
 15126  010EA8  C11C  F2B9         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_2756+3
 15127                           
 15128                           ;ring_buffer_LUT.c: 561: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15129  010EAC  0E00               	movlw	0
 15130  010EAE  0101               	movlb	1	; () banked
 15131  010EB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15132  010EB2  0E00               	movlw	0
 15133  010EB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15134  010EB6  0E06               	movlw	6
 15135  010EB8  EC1C  F0A1         	call	_terminal_textAttributes
 15136                           
 15137                           ;ring_buffer_LUT.c: 562: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 15138  010EBC  0EB3               	movlw	low STR_127
 15139  010EBE  0101               	movlb	1	; () banked
 15140  010EC0  6F82               	movwf	printf@f& (0+255),b
 15141  010EC2  0EF7               	movlw	high STR_127
 15142  010EC4  6F83               	movwf	(printf@f+1)& (0+255),b
 15143  010EC6  C2B6  F184         	movff	ringBufferLUT@max_voltage_print_2756,?_printf+2
 15144  010ECA  C2B7  F185         	movff	ringBufferLUT@max_voltage_print_2756+1,?_printf+3
 15145  010ECE  C2B8  F186         	movff	ringBufferLUT@max_voltage_print_2756+2,?_printf+4
 15146  010ED2  C2B9  F187         	movff	ringBufferLUT@max_voltage_print_2756+3,?_printf+5
 15147  010ED6  ECD1  F089         	call	_printf	;wreg free
 15148                           
 15149                           ;ring_buffer_LUT.c: 563: terminal_textAttributesReset();
 15150  010EDA  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15151                           
 15152                           ;ring_buffer_LUT.c: 565: }
 15153  010EDE  0012               	return	
 15154  010EE0                     l1346:
 15155                           
 15156                           ;ring_buffer_LUT.c: 568: else if((0 == strcmp(line, "Max Die Temp?"))) {
 15157  010EE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15158  010EE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15159  010EE8  0ED2               	movlw	low STR_128
 15160  010EEA  0101               	movlb	1	; () banked
 15161  010EEC  6F19               	movwf	strcmp@s2& (0+255),b
 15162  010EEE  0EFE               	movlw	high STR_128
 15163  010EF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15164  010EF2  ECE3  F0C4         	call	_strcmp	;wreg free
 15165  010EF6  0101               	movlb	1	; () banked
 15166  010EF8  5117               	movf	?_strcmp& (0+255),w,b
 15167  010EFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15168  010EFC  A4D8               	btfss	status,2,c
 15169  010EFE  D030               	goto	l1348
 15170                           
 15171                           ; BSR set to: 1
 15172                           ;ring_buffer_LUT.c: 571: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 15173  010F00  0EF5               	movlw	low _max_Temp_ADC_Result_address
 15174  010F02  6EF6               	movwf	tblptrl,c
 15175  010F04                     	if	1	;There is more than 1 active tblptr byte
 15176  010F04  0ED8               	movlw	high _max_Temp_ADC_Result_address
 15177  010F06  6EF7               	movwf	tblptrh,c
 15178  010F08                     	endif
 15179  010F08                     	if	1	;There are 3 active tblptr bytes
 15180  010F08  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 15181  010F0A  6EF8               	movwf	tblptru,c
 15182  010F0C                     	endif
 15183  010F0C  0009               	tblrd		*+
 15184  010F0E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15185  010F12  000A               	tblrd		*-
 15186  010F14  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15187  010F18  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15188  010F1C  C119  F2BA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 15189  010F20  C11A  F2BB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 15190  010F24  C11B  F2BC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 15191  010F28  C11C  F2BD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 15192                           
 15193                           ;ring_buffer_LUT.c: 573: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15194  010F2C  0E00               	movlw	0
 15195  010F2E  0101               	movlb	1	; () banked
 15196  010F30  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15197  010F32  0E00               	movlw	0
 15198  010F34  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15199  010F36  0E06               	movlw	6
 15200  010F38  EC1C  F0A1         	call	_terminal_textAttributes
 15201                           
 15202                           ;ring_buffer_LUT.c: 574: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 15203  010F3C  0ECF               	movlw	low STR_129
 15204  010F3E  0101               	movlb	1	; () banked
 15205  010F40  6F82               	movwf	printf@f& (0+255),b
 15206  010F42  0EF8               	movlw	high STR_129
 15207  010F44  6F83               	movwf	(printf@f+1)& (0+255),b
 15208  010F46  C2BA  F184         	movff	ringBufferLUT@max_temp_print,?_printf+2
 15209  010F4A  C2BB  F185         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 15210  010F4E  C2BC  F186         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 15211  010F52  C2BD  F187         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 15212  010F56  ECD1  F089         	call	_printf	;wreg free
 15213                           
 15214                           ;ring_buffer_LUT.c: 575: terminal_textAttributesReset();
 15215  010F5A  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15216                           
 15217                           ;ring_buffer_LUT.c: 577: }
 15218  010F5E  0012               	return	
 15219  010F60                     l1348:
 15220                           
 15221                           ;ring_buffer_LUT.c: 580: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 15222  010F60  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15223  010F64  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15224  010F68  0EAA               	movlw	low STR_130
 15225  010F6A  0101               	movlb	1	; () banked
 15226  010F6C  6F19               	movwf	strcmp@s2& (0+255),b
 15227  010F6E  0EFD               	movlw	high STR_130
 15228  010F70  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15229  010F72  ECE3  F0C4         	call	_strcmp	;wreg free
 15230  010F76  0101               	movlb	1	; () banked
 15231  010F78  5117               	movf	?_strcmp& (0+255),w,b
 15232  010F7A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15233  010F7C  A4D8               	btfss	status,2,c
 15234  010F7E  D030               	goto	l1350
 15235                           
 15236                           ; BSR set to: 1
 15237                           ;ring_buffer_LUT.c: 583: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 15238  010F80  0EF3               	movlw	low _max_FVR_ADC_Result_address
 15239  010F82  6EF6               	movwf	tblptrl,c
 15240  010F84                     	if	1	;There is more than 1 active tblptr byte
 15241  010F84  0ED8               	movlw	high _max_FVR_ADC_Result_address
 15242  010F86  6EF7               	movwf	tblptrh,c
 15243  010F88                     	endif
 15244  010F88                     	if	1	;There are 3 active tblptr bytes
 15245  010F88  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 15246  010F8A  6EF8               	movwf	tblptru,c
 15247  010F8C                     	endif
 15248  010F8C  0009               	tblrd		*+
 15249  010F8E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15250  010F92  000A               	tblrd		*-
 15251  010F94  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15252  010F98  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15253  010F9C  C119  F2BE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_2762
 15254  010FA0  C11A  F2BF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_2762+1
 15255  010FA4  C11B  F2C0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_2762+2
 15256  010FA8  C11C  F2C1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_2762+3
 15257                           
 15258                           ;ring_buffer_LUT.c: 585: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15259  010FAC  0E00               	movlw	0
 15260  010FAE  0101               	movlb	1	; () banked
 15261  010FB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15262  010FB2  0E00               	movlw	0
 15263  010FB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15264  010FB6  0E06               	movlw	6
 15265  010FB8  EC1C  F0A1         	call	_terminal_textAttributes
 15266                           
 15267                           ;ring_buffer_LUT.c: 586: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 15268  010FBC  0E78               	movlw	low STR_131
 15269  010FBE  0101               	movlb	1	; () banked
 15270  010FC0  6F82               	movwf	printf@f& (0+255),b
 15271  010FC2  0EF6               	movlw	high STR_131
 15272  010FC4  6F83               	movwf	(printf@f+1)& (0+255),b
 15273  010FC6  C2BE  F184         	movff	ringBufferLUT@max_voltage_print_2762,?_printf+2
 15274  010FCA  C2BF  F185         	movff	ringBufferLUT@max_voltage_print_2762+1,?_printf+3
 15275  010FCE  C2C0  F186         	movff	ringBufferLUT@max_voltage_print_2762+2,?_printf+4
 15276  010FD2  C2C1  F187         	movff	ringBufferLUT@max_voltage_print_2762+3,?_printf+5
 15277  010FD6  ECD1  F089         	call	_printf	;wreg free
 15278                           
 15279                           ;ring_buffer_LUT.c: 587: terminal_textAttributesReset();
 15280  010FDA  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15281                           
 15282                           ;ring_buffer_LUT.c: 589: }
 15283  010FDE  0012               	return	
 15284  010FE0                     l1350:
 15285                           
 15286                           ;ring_buffer_LUT.c: 592: else if((0 == strcmp(line, "Clear Max Values"))) {
 15287  010FE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15288  010FE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15289  010FE8  0EDD               	movlw	low STR_132
 15290  010FEA  0101               	movlb	1	; () banked
 15291  010FEC  6F19               	movwf	strcmp@s2& (0+255),b
 15292  010FEE  0EFD               	movlw	high STR_132
 15293  010FF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15294  010FF2  ECE3  F0C4         	call	_strcmp	;wreg free
 15295  010FF6  0101               	movlb	1	; () banked
 15296  010FF8  5117               	movf	?_strcmp& (0+255),w,b
 15297  010FFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15298  010FFC  A4D8               	btfss	status,2,c
 15299  010FFE  D0CC               	goto	l1352
 15300                           
 15301                           ; BSR set to: 1
 15302                           ;ring_buffer_LUT.c: 595: writeDoubleToEEPROM(0.0, max_Irms_address);
 15303  011000  0E00               	movlw	0
 15304  011002  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15305  011004  0E00               	movlw	0
 15306  011006  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15307  011008  0E00               	movlw	0
 15308  01100A  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15309  01100C  0E00               	movlw	0
 15310  01100E  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15311  011010  0EFD               	movlw	low _max_Irms_address
 15312  011012  6EF6               	movwf	tblptrl,c
 15313  011014                     	if	1	;There is more than 1 active tblptr byte
 15314  011014  0ED8               	movlw	high _max_Irms_address
 15315  011016  6EF7               	movwf	tblptrh,c
 15316  011018                     	endif
 15317  011018                     	if	1	;There are 3 active tblptr bytes
 15318  011018  0E00               	movlw	low (_max_Irms_address shr (0+16))
 15319  01101A  6EF8               	movwf	tblptru,c
 15320  01101C                     	endif
 15321  01101C  0009               	tblrd		*+
 15322  01101E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15323  011022  000A               	tblrd		*-
 15324  011024  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15325  011028  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15326                           
 15327                           ;ring_buffer_LUT.c: 596: writeDoubleToEEPROM(0.0, max_Power_address);
 15328  01102C  0E00               	movlw	0
 15329  01102E  0101               	movlb	1	; () banked
 15330  011030  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15331  011032  0E00               	movlw	0
 15332  011034  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15333  011036  0E00               	movlw	0
 15334  011038  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15335  01103A  0E00               	movlw	0
 15336  01103C  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15337  01103E  0EFB               	movlw	low _max_Power_address
 15338  011040  6EF6               	movwf	tblptrl,c
 15339  011042                     	if	1	;There is more than 1 active tblptr byte
 15340  011042  0ED8               	movlw	high _max_Power_address
 15341  011044  6EF7               	movwf	tblptrh,c
 15342  011046                     	endif
 15343  011046                     	if	1	;There are 3 active tblptr bytes
 15344  011046  0E00               	movlw	low (_max_Power_address shr (0+16))
 15345  011048  6EF8               	movwf	tblptru,c
 15346  01104A                     	endif
 15347  01104A  0009               	tblrd		*+
 15348  01104C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15349  011050  000A               	tblrd		*-
 15350  011052  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15351  011056  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15352                           
 15353                           ;ring_buffer_LUT.c: 597: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 15354  01105A  0E00               	movlw	0
 15355  01105C  0101               	movlb	1	; () banked
 15356  01105E  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15357  011060  0E00               	movlw	0
 15358  011062  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15359  011064  0E00               	movlw	0
 15360  011066  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15361  011068  0E00               	movlw	0
 15362  01106A  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15363  01106C  0EF9               	movlw	low _max_POS3P3_ADC_Result_address
 15364  01106E  6EF6               	movwf	tblptrl,c
 15365  011070                     	if	1	;There is more than 1 active tblptr byte
 15366  011070  0ED8               	movlw	high _max_POS3P3_ADC_Result_address
 15367  011072  6EF7               	movwf	tblptrh,c
 15368  011074                     	endif
 15369  011074                     	if	1	;There are 3 active tblptr bytes
 15370  011074  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 15371  011076  6EF8               	movwf	tblptru,c
 15372  011078                     	endif
 15373  011078  0009               	tblrd		*+
 15374  01107A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15375  01107E  000A               	tblrd		*-
 15376  011080  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15377  011084  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15378                           
 15379                           ;ring_buffer_LUT.c: 598: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 15380  011088  0E00               	movlw	0
 15381  01108A  0101               	movlb	1	; () banked
 15382  01108C  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15383  01108E  0E00               	movlw	0
 15384  011090  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15385  011092  0E00               	movlw	0
 15386  011094  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15387  011096  0E00               	movlw	0
 15388  011098  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15389  01109A  0EF7               	movlw	low _max_POS12_ADC_Result_address
 15390  01109C  6EF6               	movwf	tblptrl,c
 15391  01109E                     	if	1	;There is more than 1 active tblptr byte
 15392  01109E  0ED8               	movlw	high _max_POS12_ADC_Result_address
 15393  0110A0  6EF7               	movwf	tblptrh,c
 15394  0110A2                     	endif
 15395  0110A2                     	if	1	;There are 3 active tblptr bytes
 15396  0110A2  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 15397  0110A4  6EF8               	movwf	tblptru,c
 15398  0110A6                     	endif
 15399  0110A6  0009               	tblrd		*+
 15400  0110A8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15401  0110AC  000A               	tblrd		*-
 15402  0110AE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15403  0110B2  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15404                           
 15405                           ;ring_buffer_LUT.c: 599: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 15406  0110B6  0E00               	movlw	0
 15407  0110B8  0101               	movlb	1	; () banked
 15408  0110BA  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15409  0110BC  0E00               	movlw	0
 15410  0110BE  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15411  0110C0  0E00               	movlw	0
 15412  0110C2  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15413  0110C4  0E00               	movlw	0
 15414  0110C6  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15415  0110C8  0EF5               	movlw	low _max_Temp_ADC_Result_address
 15416  0110CA  6EF6               	movwf	tblptrl,c
 15417  0110CC                     	if	1	;There is more than 1 active tblptr byte
 15418  0110CC  0ED8               	movlw	high _max_Temp_ADC_Result_address
 15419  0110CE  6EF7               	movwf	tblptrh,c
 15420  0110D0                     	endif
 15421  0110D0                     	if	1	;There are 3 active tblptr bytes
 15422  0110D0  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 15423  0110D2  6EF8               	movwf	tblptru,c
 15424  0110D4                     	endif
 15425  0110D4  0009               	tblrd		*+
 15426  0110D6  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15427  0110DA  000A               	tblrd		*-
 15428  0110DC  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15429  0110E0  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15430                           
 15431                           ;ring_buffer_LUT.c: 600: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 15432  0110E4  0E00               	movlw	0
 15433  0110E6  0101               	movlb	1	; () banked
 15434  0110E8  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15435  0110EA  0E00               	movlw	0
 15436  0110EC  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15437  0110EE  0E00               	movlw	0
 15438  0110F0  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15439  0110F2  0E00               	movlw	0
 15440  0110F4  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15441  0110F6  0EF3               	movlw	low _max_FVR_ADC_Result_address
 15442  0110F8  6EF6               	movwf	tblptrl,c
 15443  0110FA                     	if	1	;There is more than 1 active tblptr byte
 15444  0110FA  0ED8               	movlw	high _max_FVR_ADC_Result_address
 15445  0110FC  6EF7               	movwf	tblptrh,c
 15446  0110FE                     	endif
 15447  0110FE                     	if	1	;There are 3 active tblptr bytes
 15448  0110FE  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 15449  011100  6EF8               	movwf	tblptru,c
 15450  011102                     	endif
 15451  011102  0009               	tblrd		*+
 15452  011104  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15453  011108  000A               	tblrd		*-
 15454  01110A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15455  01110E  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15456                           
 15457                           ;ring_buffer_LUT.c: 603: max_Irms = 0.0;
 15458  011112  0E00               	movlw	0
 15459  011114  0102               	movlb	2	; () banked
 15460  011116  6F14               	movwf	_max_Irms& (0+255),b	;volatile
 15461  011118  0E00               	movlw	0
 15462  01111A  6F15               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 15463  01111C  0E00               	movlw	0
 15464  01111E  6F16               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 15465  011120  0E00               	movlw	0
 15466  011122  6F17               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 15467                           
 15468                           ; BSR set to: 2
 15469                           ;ring_buffer_LUT.c: 604: max_Power = 0.0;
 15470  011124  0E00               	movlw	0
 15471  011126  6F10               	movwf	_max_Power& (0+255),b	;volatile
 15472  011128  0E00               	movlw	0
 15473  01112A  6F11               	movwf	(_max_Power+1)& (0+255),b	;volatile
 15474  01112C  0E00               	movlw	0
 15475  01112E  6F12               	movwf	(_max_Power+2)& (0+255),b	;volatile
 15476  011130  0E00               	movlw	0
 15477  011132  6F13               	movwf	(_max_Power+3)& (0+255),b	;volatile
 15478                           
 15479                           ; BSR set to: 2
 15480                           ;ring_buffer_LUT.c: 605: max_POS3P3_ADC_Result = 0.0;
 15481  011134  0E00               	movlw	0
 15482  011136  6F0C               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 15483  011138  0E00               	movlw	0
 15484  01113A  6F0D               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 15485  01113C  0E00               	movlw	0
 15486  01113E  6F0E               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 15487  011140  0E00               	movlw	0
 15488  011142  6F0F               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 15489                           
 15490                           ; BSR set to: 2
 15491                           ;ring_buffer_LUT.c: 606: max_POS12_ADC_Result = 0.0;
 15492  011144  0E00               	movlw	0
 15493  011146  6F08               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 15494  011148  0E00               	movlw	0
 15495  01114A  6F09               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 15496  01114C  0E00               	movlw	0
 15497  01114E  6F0A               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 15498  011150  0E00               	movlw	0
 15499  011152  6F0B               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 15500                           
 15501                           ; BSR set to: 2
 15502                           ;ring_buffer_LUT.c: 607: max_Temp_ADC_Result = 0.0;
 15503  011154  0E00               	movlw	0
 15504  011156  6F04               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 15505  011158  0E00               	movlw	0
 15506  01115A  6F05               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 15507  01115C  0E00               	movlw	0
 15508  01115E  6F06               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 15509  011160  0E00               	movlw	0
 15510  011162  6F07               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 15511                           
 15512                           ; BSR set to: 2
 15513                           ;ring_buffer_LUT.c: 608: max_FVR_ADC_Result = 0.0;
 15514  011164  0E00               	movlw	0
 15515  011166  6F00               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 15516  011168  0E00               	movlw	0
 15517  01116A  6F01               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 15518  01116C  0E00               	movlw	0
 15519  01116E  6F02               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 15520  011170  0E00               	movlw	0
 15521  011172  6F03               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 15522                           
 15523                           ; BSR set to: 2
 15524                           ;ring_buffer_LUT.c: 610: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15525  011174  0E00               	movlw	0
 15526  011176  0101               	movlb	1	; () banked
 15527  011178  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15528  01117A  0E00               	movlw	0
 15529  01117C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15530  01117E  0E02               	movlw	2
 15531  011180  EC1C  F0A1         	call	_terminal_textAttributes
 15532                           
 15533                           ;ring_buffer_LUT.c: 611: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 15534  011184  0E0C               	movlw	low STR_133
 15535  011186  0101               	movlb	1	; () banked
 15536  011188  6F82               	movwf	printf@f& (0+255),b
 15537  01118A  0EF6               	movlw	high STR_133
 15538  01118C  6F83               	movwf	(printf@f+1)& (0+255),b
 15539  01118E  ECD1  F089         	call	_printf	;wreg free
 15540                           
 15541                           ;ring_buffer_LUT.c: 612: terminal_textAttributesReset();
 15542  011192  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15543                           
 15544                           ;ring_buffer_LUT.c: 614: }
 15545  011196  0012               	return	
 15546  011198                     l1352:
 15547                           
 15548                           ;ring_buffer_LUT.c: 618: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 15549  011198  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15550  01119C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15551  0111A0  0ED6               	movlw	low STR_134
 15552  0111A2  0101               	movlb	1	; () banked
 15553  0111A4  6F19               	movwf	strcmp@s2& (0+255),b
 15554  0111A6  0EFB               	movlw	high STR_134
 15555  0111A8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15556  0111AA  ECE3  F0C4         	call	_strcmp	;wreg free
 15557  0111AE  0101               	movlb	1	; () banked
 15558  0111B0  5117               	movf	?_strcmp& (0+255),w,b
 15559  0111B2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15560  0111B4  A4D8               	btfss	status,2,c
 15561  0111B6  D011               	goto	l1354
 15562                           
 15563                           ; BSR set to: 1
 15564                           ;ring_buffer_LUT.c: 620: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15565  0111B8  0E00               	movlw	0
 15566  0111BA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15567  0111BC  0E00               	movlw	0
 15568  0111BE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15569  0111C0  0E03               	movlw	3
 15570  0111C2  EC1C  F0A1         	call	_terminal_textAttributes
 15571                           
 15572                           ;ring_buffer_LUT.c: 621: printf("List of supported Device Control Commands:\n\r"
 15573                           ;ring_buffer_LUT.c: 623: "   Reset: Clears the terminal and resets the micro\n\r"
 15574                           ;ring_buffer_LUT.c: 624: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 15575                           ;ring_buffer_LUT.c: 625: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 15576                           ;ring_buffer_LUT.c: 626: "   *IDN?: Returns device identification string\n\r"
 15577                           ;ring_buffer_LUT.c: 627: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 15578  0111C6  0E9A               	movlw	low STR_135
 15579  0111C8  0101               	movlb	1	; () banked
 15580  0111CA  6F82               	movwf	printf@f& (0+255),b
 15581  0111CC  0EE4               	movlw	high STR_135
 15582  0111CE  6F83               	movwf	(printf@f+1)& (0+255),b
 15583  0111D0  ECD1  F089         	call	_printf	;wreg free
 15584                           
 15585                           ;ring_buffer_LUT.c: 638: terminal_textAttributesReset();
 15586  0111D4  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15587                           
 15588                           ;ring_buffer_LUT.c: 640: }
 15589  0111D8  0012               	return	
 15590  0111DA                     l1354:
 15591                           
 15592                           ;ring_buffer_LUT.c: 643: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 15593  0111DA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15594  0111DE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15595  0111E2  0E3B               	movlw	low STR_136
 15596  0111E4  0101               	movlb	1	; () banked
 15597  0111E6  6F19               	movwf	strcmp@s2& (0+255),b
 15598  0111E8  0EFB               	movlw	high STR_136
 15599  0111EA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15600  0111EC  ECE3  F0C4         	call	_strcmp	;wreg free
 15601  0111F0  0101               	movlb	1	; () banked
 15602  0111F2  5117               	movf	?_strcmp& (0+255),w,b
 15603  0111F4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15604  0111F6  A4D8               	btfss	status,2,c
 15605  0111F8  D011               	goto	l1356
 15606                           
 15607                           ; BSR set to: 1
 15608                           ;ring_buffer_LUT.c: 645: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15609  0111FA  0E00               	movlw	0
 15610  0111FC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15611  0111FE  0E00               	movlw	0
 15612  011200  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15613  011202  0E03               	movlw	3
 15614  011204  EC1C  F0A1         	call	_terminal_textAttributes
 15615                           
 15616                           ;ring_buffer_LUT.c: 646: printf("List of supported Device Measurement Commands:\n\r"
 15617                           ;ring_buffer_LUT.c: 648: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 15618                           ;ring_buffer_LUT.c: 649: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 15619                           ;ring_buffer_LUT.c: 650: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 15620                           ;ring_buffer_LUT.c: 651: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 15621                           ;ring_buffer_LUT.c: 652: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 15622  011208  0E34               	movlw	low STR_137
 15623  01120A  0101               	movlb	1	; () banked
 15624  01120C  6F82               	movwf	printf@f& (0+255),b
 15625  01120E  0EE8               	movlw	high STR_137
 15626  011210  6F83               	movwf	(printf@f+1)& (0+255),b
 15627  011212  ECD1  F089         	call	_printf	;wreg free
 15628                           
 15629                           ;ring_buffer_LUT.c: 659: terminal_textAttributesReset();
 15630  011216  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15631                           
 15632                           ;ring_buffer_LUT.c: 661: }
 15633  01121A  0012               	return	
 15634  01121C                     l1356:
 15635                           
 15636                           ;ring_buffer_LUT.c: 664: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 15637  01121C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15638  011220  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15639  011224  0E19               	movlw	low STR_138
 15640  011226  0101               	movlb	1	; () banked
 15641  011228  6F19               	movwf	strcmp@s2& (0+255),b
 15642  01122A  0EFB               	movlw	high STR_138
 15643  01122C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15644  01122E  ECE3  F0C4         	call	_strcmp	;wreg free
 15645  011232  0101               	movlb	1	; () banked
 15646  011234  5117               	movf	?_strcmp& (0+255),w,b
 15647  011236  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15648  011238  A4D8               	btfss	status,2,c
 15649  01123A  D011               	goto	l1358
 15650                           
 15651                           ; BSR set to: 1
 15652                           ;ring_buffer_LUT.c: 666: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15653  01123C  0E00               	movlw	0
 15654  01123E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15655  011240  0E00               	movlw	0
 15656  011242  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15657  011244  0E03               	movlw	3
 15658  011246  EC1C  F0A1         	call	_terminal_textAttributes
 15659                           
 15660                           ;ring_buffer_LUT.c: 667: printf("List of supported Primary Measurement Commands:\n\r"
 15661                           ;ring_buffer_LUT.c: 669: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 15662                           ;ring_buffer_LUT.c: 670: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 15663                           ;ring_buffer_LUT.c: 671: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 15664                           ;ring_buffer_LUT.c: 672: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 15665  01124A  0E04               	movlw	low STR_139
 15666  01124C  0101               	movlb	1	; () banked
 15667  01124E  6F82               	movwf	printf@f& (0+255),b
 15668  011250  0EEB               	movlw	high STR_139
 15669  011252  6F83               	movwf	(printf@f+1)& (0+255),b
 15670  011254  ECD1  F089         	call	_printf	;wreg free
 15671                           
 15672                           ;ring_buffer_LUT.c: 678: terminal_textAttributesReset();
 15673  011258  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15674                           
 15675                           ;ring_buffer_LUT.c: 680: }
 15676  01125C  0012               	return	
 15677  01125E                     l1358:
 15678                           
 15679                           ;ring_buffer_LUT.c: 683: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 15680  01125E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15681  011262  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15682  011266  0EF3               	movlw	low STR_140
 15683  011268  0101               	movlb	1	; () banked
 15684  01126A  6F19               	movwf	strcmp@s2& (0+255),b
 15685  01126C  0EFB               	movlw	high STR_140
 15686  01126E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15687  011270  ECE3  F0C4         	call	_strcmp	;wreg free
 15688  011274  0101               	movlb	1	; () banked
 15689  011276  5117               	movf	?_strcmp& (0+255),w,b
 15690  011278  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15691  01127A  A4D8               	btfss	status,2,c
 15692  01127C  D011               	goto	l1360
 15693                           
 15694                           ; BSR set to: 1
 15695                           ;ring_buffer_LUT.c: 685: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15696  01127E  0E00               	movlw	0
 15697  011280  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15698  011282  0E00               	movlw	0
 15699  011284  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15700  011286  0E03               	movlw	3
 15701  011288  EC1C  F0A1         	call	_terminal_textAttributes
 15702                           
 15703                           ;ring_buffer_LUT.c: 686: printf("List of supported Output Control Commands:\n\r"
 15704                           ;ring_buffer_LUT.c: 688: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 15705                           ;ring_buffer_LUT.c: 689: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 15706                           ;ring_buffer_LUT.c: 690: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 15707                           ;ring_buffer_LUT.c: 691: "   Disable Load: Disables the output TRIAC completely\n\r"
 15708                           ;ring_buffer_LUT.c: 692: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 15709  01128C  0E61               	movlw	low STR_141
 15710  01128E  0101               	movlb	1	; () banked
 15711  011290  6F82               	movwf	printf@f& (0+255),b
 15712  011292  0EED               	movlw	high STR_141
 15713  011294  6F83               	movwf	(printf@f+1)& (0+255),b
 15714  011296  ECD1  F089         	call	_printf	;wreg free
 15715                           
 15716                           ;ring_buffer_LUT.c: 697: terminal_textAttributesReset();
 15717  01129A  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15718                           
 15719                           ;ring_buffer_LUT.c: 699: }
 15720  01129E  0012               	return	
 15721  0112A0                     l1360:
 15722                           
 15723                           ;ring_buffer_LUT.c: 702: else if((0 == strcmp(line, "Help All"))) {
 15724  0112A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15725  0112A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15726  0112A8  0E7D               	movlw	low STR_142
 15727  0112AA  0101               	movlb	1	; () banked
 15728  0112AC  6F19               	movwf	strcmp@s2& (0+255),b
 15729  0112AE  0EFF               	movlw	high STR_142
 15730  0112B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15731  0112B2  ECE3  F0C4         	call	_strcmp	;wreg free
 15732  0112B6  0101               	movlb	1	; () banked
 15733  0112B8  5117               	movf	?_strcmp& (0+255),w,b
 15734  0112BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15735  0112BC  A4D8               	btfss	status,2,c
 15736  0112BE  D011               	goto	l1362
 15737                           
 15738                           ; BSR set to: 1
 15739                           ;ring_buffer_LUT.c: 704: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15740  0112C0  0E00               	movlw	0
 15741  0112C2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15742  0112C4  0E00               	movlw	0
 15743  0112C6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15744  0112C8  0E03               	movlw	3
 15745  0112CA  EC1C  F0A1         	call	_terminal_textAttributes
 15746                           
 15747                           ;ring_buffer_LUT.c: 705: printf("List of all supported commands:\n\r"
 15748                           ;ring_buffer_LUT.c: 707: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 15749                           ;ring_buffer_LUT.c: 708: "   Reset: Clears the terminal and resets the micro\n\r"
 15750                           ;ring_buffer_LUT.c: 709: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 15751                           ;ring_buffer_LUT.c: 710: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 15752                           ;ring_buffer_LUT.c: 711: "   *IDN?: Returns device identification string\n\r"
 15753  0112CE  0E4F               	movlw	low STR_143
 15754  0112D0  0101               	movlb	1	; () banked
 15755  0112D2  6F82               	movwf	printf@f& (0+255),b
 15756  0112D4  0ED9               	movlw	high STR_143
 15757  0112D6  6F83               	movwf	(printf@f+1)& (0+255),b
 15758  0112D8  ECD1  F089         	call	_printf	;wreg free
 15759                           
 15760                           ;ring_buffer_LUT.c: 753: terminal_textAttributesReset();
 15761  0112DC  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15762                           
 15763                           ;ring_buffer_LUT.c: 755: }
 15764  0112E0  0012               	return	
 15765  0112E2                     l1362:
 15766                           
 15767                           ;ring_buffer_LUT.c: 759: else if((0 == strcmp(line, "Help"))) {
 15768  0112E2  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15769  0112E6  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15770  0112EA  0EAB               	movlw	low STR_144
 15771  0112EC  0101               	movlb	1	; () banked
 15772  0112EE  6F19               	movwf	strcmp@s2& (0+255),b
 15773  0112F0  0EFF               	movlw	high STR_144
 15774  0112F2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15775  0112F4  ECE3  F0C4         	call	_strcmp	;wreg free
 15776  0112F8  0101               	movlb	1	; () banked
 15777  0112FA  5117               	movf	?_strcmp& (0+255),w,b
 15778  0112FC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15779  0112FE  A4D8               	btfss	status,2,c
 15780  011300  0012               	return	
 15781                           
 15782                           ; BSR set to: 1
 15783                           ;ring_buffer_LUT.c: 761: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15784  011302  0E00               	movlw	0
 15785  011304  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15786  011306  0E00               	movlw	0
 15787  011308  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15788  01130A  0E03               	movlw	3
 15789  01130C  EC1C  F0A1         	call	_terminal_textAttributes
 15790                           
 15791                           ;ring_buffer_LUT.c: 762: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 15792                           ;ring_buffer_LUT.c: 763: "Try 'Help <command set>'\n\r\n\r"
 15793                           ;ring_buffer_LUT.c: 765: "Supported Command Sets:\n\r"
 15794                           ;ring_buffer_LUT.c: 766: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 15795                           ;ring_buffer_LUT.c: 767: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 15796                           ;ring_buffer_LUT.c: 768: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 15797  011310  0E4D               	movlw	low STR_145
 15798  011312  0101               	movlb	1	; () banked
 15799  011314  6F82               	movwf	printf@f& (0+255),b
 15800  011316  0EEF               	movlw	high STR_145
 15801  011318  6F83               	movwf	(printf@f+1)& (0+255),b
 15802  01131A  ECD1  F089         	call	_printf	;wreg free
 15803                           
 15804                           ;ring_buffer_LUT.c: 775: terminal_printNewline();
 15805  01131E  EC5F  F0C9         	call	_terminal_printNewline	;wreg free
 15806                           
 15807                           ;ring_buffer_LUT.c: 776: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 15808  011322  0ED5               	movlw	low STR_146
 15809  011324  0101               	movlb	1	; () banked
 15810  011326  6F82               	movwf	printf@f& (0+255),b
 15811  011328  0EF5               	movlw	high STR_146
 15812  01132A  6F83               	movwf	(printf@f+1)& (0+255),b
 15813  01132C  ECD1  F089         	call	_printf	;wreg free
 15814                           
 15815                           ;ring_buffer_LUT.c: 778: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15816  011330  0E00               	movlw	0
 15817  011332  0101               	movlb	1	; () banked
 15818  011334  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15819  011336  0E00               	movlw	0
 15820  011338  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15821  01133A  0E02               	movlw	2
 15822  01133C  EC1C  F0A1         	call	_terminal_textAttributes
 15823                           
 15824                           ;ring_buffer_LUT.c: 779: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 15825  011340  0EB0               	movlw	low STR_147
 15826  011342  0101               	movlb	1	; () banked
 15827  011344  6F82               	movwf	printf@f& (0+255),b
 15828  011346  0EF4               	movlw	high STR_147
 15829  011348  6F83               	movwf	(printf@f+1)& (0+255),b
 15830  01134A  ECD1  F089         	call	_printf	;wreg free
 15831                           
 15832                           ;ring_buffer_LUT.c: 780: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15833  01134E  0E00               	movlw	0
 15834  011350  0101               	movlb	1	; () banked
 15835  011352  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15836  011354  0E00               	movlw	0
 15837  011356  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15838  011358  0E06               	movlw	6
 15839  01135A  EC1C  F0A1         	call	_terminal_textAttributes
 15840                           
 15841                           ;ring_buffer_LUT.c: 781: printf("Measurement responses appear in cyan\n\r");
 15842  01135E  0EF7               	movlw	low STR_148
 15843  011360  0101               	movlb	1	; () banked
 15844  011362  6F82               	movwf	printf@f& (0+255),b
 15845  011364  0EF9               	movlw	high STR_148
 15846  011366  6F83               	movwf	(printf@f+1)& (0+255),b
 15847  011368  ECD1  F089         	call	_printf	;wreg free
 15848                           
 15849                           ;ring_buffer_LUT.c: 782: terminal_textAttributes(RED, BLACK, NORMAL);
 15850  01136C  0E00               	movlw	0
 15851  01136E  0101               	movlb	1	; () banked
 15852  011370  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15853  011372  0E00               	movlw	0
 15854  011374  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15855  011376  0E01               	movlw	1
 15856  011378  EC1C  F0A1         	call	_terminal_textAttributes
 15857                           
 15858                           ;ring_buffer_LUT.c: 783: printf("Errors and negative responses appear in red\n\r");
 15859  01137C  0E45               	movlw	low STR_149
 15860  01137E  0101               	movlb	1	; () banked
 15861  011380  6F82               	movwf	printf@f& (0+255),b
 15862  011382  0EF8               	movlw	high STR_149
 15863  011384  6F83               	movwf	(printf@f+1)& (0+255),b
 15864  011386  ECD1  F089         	call	_printf	;wreg free
 15865                           
 15866                           ;ring_buffer_LUT.c: 784: terminal_textAttributesReset();
 15867  01138A  EC45  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15868                           
 15869                           ;ring_buffer_LUT.c: 785: printf("User input appears in white\n\r");
 15870  01138E  0E9B               	movlw	low STR_150
 15871  011390  0101               	movlb	1	; () banked
 15872  011392  6F82               	movwf	printf@f& (0+255),b
 15873  011394  0EFB               	movlw	high STR_150
 15874  011396  6F83               	movwf	(printf@f+1)& (0+255),b
 15875  011398  ECD1  F089         	call	_printf	;wreg free
 15876                           
 15877                           ;ring_buffer_LUT.c: 788: terminal_printNewline();
 15878  01139C  EC5F  F0C9         	call	_terminal_printNewline	;wreg free
 15879  0113A0  0012               	return	
 15880  0113A2                     __end_of_ringBufferLUT:
 15881                           	opt stack 0
 15882                           tblptru	equ	0xFF8
 15883                           tblptrh	equ	0xFF7
 15884                           tblptrl	equ	0xFF6
 15885                           tablat	equ	0xFF5
 15886                           intcon	equ	0xFF2
 15887                           postinc0	equ	0xFEE
 15888                           wreg	equ	0xFE8
 15889                           indf1	equ	0xFE7
 15890                           postdec1	equ	0xFE5
 15891                           fsr1h	equ	0xFE2
 15892                           fsr1l	equ	0xFE1
 15893                           indf2	equ	0xFDF
 15894                           postinc2	equ	0xFDE
 15895                           fsr2h	equ	0xFDA
 15896                           fsr2l	equ	0xFD9
 15897                           status	equ	0xFD8
 15898                           
 15899 ;; *************** function _terminal_textAttributesReset *****************
 15900 ;; Defined at:
 15901 ;;		line 223 in file "ring_buffer_interface.c"
 15902 ;; Parameters:    Size  Location     Type
 15903 ;;		None
 15904 ;; Auto vars:     Size  Location     Type
 15905 ;;		None
 15906 ;; Return value:  Size  Location     Type
 15907 ;;                  1    wreg      void 
 15908 ;; Registers used:
 15909 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15910 ;; Tracked objects:
 15911 ;;		On entry : 0/0
 15912 ;;		On exit  : 0/0
 15913 ;;		Unchanged: 0/0
 15914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15919 ;;Total ram usage:        0 bytes
 15920 ;; Hardware stack levels used:    1
 15921 ;; Hardware stack levels required when called:   17
 15922 ;; This function calls:
 15923 ;;		_terminal_textAttributes
 15924 ;; This function is called by:
 15925 ;;		_main
 15926 ;;		_ringBufferLUT
 15927 ;; This function uses a non-reentrant model
 15928 ;;
 15929                           
 15930                           	psect	text4
 15931  01928A                     __ptext4:
 15932                           	opt stack 0
 15933  01928A                     _terminal_textAttributesReset:
 15934                           	opt stack 13
 15935                           
 15936                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 15937                           
 15938                           ;incstack = 0
 15939  01928A  0E00               	movlw	0
 15940  01928C  0101               	movlb	1	; () banked
 15941  01928E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15942  019290  0E00               	movlw	0
 15943  019292  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15944  019294  0E07               	movlw	7
 15945  019296  EC1C  F0A1         	call	_terminal_textAttributes
 15946  01929A  0012               	return		;funcret
 15947  01929C                     __end_of_terminal_textAttributesReset:
 15948                           	opt stack 0
 15949                           tblptru	equ	0xFF8
 15950                           tblptrh	equ	0xFF7
 15951                           tblptrl	equ	0xFF6
 15952                           tablat	equ	0xFF5
 15953                           intcon	equ	0xFF2
 15954                           postinc0	equ	0xFEE
 15955                           wreg	equ	0xFE8
 15956                           indf1	equ	0xFE7
 15957                           postdec1	equ	0xFE5
 15958                           fsr1h	equ	0xFE2
 15959                           fsr1l	equ	0xFE1
 15960                           indf2	equ	0xFDF
 15961                           postinc2	equ	0xFDE
 15962                           fsr2h	equ	0xFDA
 15963                           fsr2l	equ	0xFD9
 15964                           status	equ	0xFD8
 15965                           
 15966 ;; *************** function _terminal_textAttributes *****************
 15967 ;; Defined at:
 15968 ;;		line 115 in file "ring_buffer_interface.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  foreground_c    1    wreg     enum E17893
 15971 ;;  background_c    1  178[BANK1 ] enum E17893
 15972 ;;  input_attrib    1  179[BANK1 ] enum E17885
 15973 ;; Auto vars:     Size  Location     Type
 15974 ;;  foreground_c    1    0[BANK2 ] enum E17893
 15975 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 15976 ;; Return value:  Size  Location     Type
 15977 ;;                  1    wreg      void 
 15978 ;; Registers used:
 15979 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15980 ;; Tracked objects:
 15981 ;;		On entry : 0/0
 15982 ;;		On exit  : 0/0
 15983 ;;		Unchanged: 0/0
 15984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15985 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15986 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 15987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15988 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 15989 ;;Total ram usage:       18 bytes
 15990 ;; Hardware stack levels used:    1
 15991 ;; Hardware stack levels required when called:   16
 15992 ;; This function calls:
 15993 ;;		_printf
 15994 ;;		_strcat
 15995 ;;		_strncpy
 15996 ;; This function is called by:
 15997 ;;		_terminal_textAttributesReset
 15998 ;;		_ringBufferLUT
 15999 ;; This function uses a non-reentrant model
 16000 ;;
 16001                           
 16002                           	psect	text5
 16003  014238                     __ptext5:
 16004                           	opt stack 0
 16005  014238                     _terminal_textAttributes:
 16006                           	opt stack 13
 16007                           
 16008                           ;incstack = 0
 16009                           ;terminal_textAttributes@foreground_color stored from wreg
 16010  014238  0102               	movlb	2	; () banked
 16011  01423A  6F80               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 16012                           
 16013                           ;ring_buffer_interface.c: 119: char output_buff[15];
 16014                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 16015  01423C  0E81               	movlw	low terminal_textAttributes@output_buff
 16016  01423E  0101               	movlb	1	; () banked
 16017  014240  6F17               	movwf	strncpy@to& (0+255),b
 16018  014242  0E02               	movlw	high terminal_textAttributes@output_buff
 16019  014244  6F18               	movwf	(strncpy@to+1)& (0+255),b
 16020  014246  0EF6               	movlw	low STR_11
 16021  014248  6F19               	movwf	strncpy@from& (0+255),b
 16022  01424A  0EFF               	movlw	high STR_11
 16023  01424C  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 16024  01424E  0E00               	movlw	0
 16025  014250  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 16026  014252  0E0F               	movlw	15
 16027  014254  6F1B               	movwf	strncpy@size& (0+255),b
 16028  014256  EC6A  F0C3         	call	_strncpy	;wreg free
 16029                           
 16030                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 16031  01425A  D054               	goto	l1106
 16032  01425C                     
 16033                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 16034  01425C  0E81               	movlw	low terminal_textAttributes@output_buff
 16035  01425E  0101               	movlb	1	; () banked
 16036  014260  6F17               	movwf	strcat@to& (0+255),b
 16037  014262  0E02               	movlw	high terminal_textAttributes@output_buff
 16038  014264  6F18               	movwf	(strcat@to+1)& (0+255),b
 16039  014266  0ECA               	movlw	low (STR_20+1)
 16040  014268  6F19               	movwf	strcat@from& (0+255),b
 16041  01426A  0EFF               	movlw	high (STR_20+1)
 16042  01426C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16043  01426E  EC5A  F0C5         	call	_strcat	;wreg free
 16044                           
 16045                           ;ring_buffer_interface.c: 127: break;
 16046  014272  D05D               	goto	l1108
 16047  014274                     
 16048                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 16049  014274  0E81               	movlw	low terminal_textAttributes@output_buff
 16050  014276  0101               	movlb	1	; () banked
 16051  014278  6F17               	movwf	strcat@to& (0+255),b
 16052  01427A  0E02               	movlw	high terminal_textAttributes@output_buff
 16053  01427C  6F18               	movwf	(strcat@to+1)& (0+255),b
 16054  01427E  0ED5               	movlw	low (STR_67+20)
 16055  014280  6F19               	movwf	strcat@from& (0+255),b
 16056  014282  0EFC               	movlw	high (STR_67+20)
 16057  014284  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16058  014286  EC5A  F0C5         	call	_strcat	;wreg free
 16059                           
 16060                           ;ring_buffer_interface.c: 130: break;
 16061  01428A  D051               	goto	l1108
 16062  01428C                     
 16063                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 16064  01428C  0E81               	movlw	low terminal_textAttributes@output_buff
 16065  01428E  0101               	movlb	1	; () banked
 16066  014290  6F17               	movwf	strcat@to& (0+255),b
 16067  014292  0E02               	movlw	high terminal_textAttributes@output_buff
 16068  014294  6F18               	movwf	(strcat@to+1)& (0+255),b
 16069  014296  0EDF               	movlw	low (STR_24+1)
 16070  014298  6F19               	movwf	strcat@from& (0+255),b
 16071  01429A  0EFF               	movlw	high (STR_24+1)
 16072  01429C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16073  01429E  EC5A  F0C5         	call	_strcat	;wreg free
 16074                           
 16075                           ;ring_buffer_interface.c: 133: break;
 16076  0142A2  D045               	goto	l1108
 16077  0142A4                     
 16078                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 16079  0142A4  0E81               	movlw	low terminal_textAttributes@output_buff
 16080  0142A6  0101               	movlb	1	; () banked
 16081  0142A8  6F17               	movwf	strcat@to& (0+255),b
 16082  0142AA  0E02               	movlw	high terminal_textAttributes@output_buff
 16083  0142AC  6F18               	movwf	(strcat@to+1)& (0+255),b
 16084  0142AE  0EE5               	movlw	low (STR_25+1)
 16085  0142B0  6F19               	movwf	strcat@from& (0+255),b
 16086  0142B2  0EFF               	movlw	high (STR_25+1)
 16087  0142B4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16088  0142B6  EC5A  F0C5         	call	_strcat	;wreg free
 16089                           
 16090                           ;ring_buffer_interface.c: 136: break;
 16091  0142BA  D039               	goto	l1108
 16092  0142BC                     
 16093                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 16094  0142BC  0E81               	movlw	low terminal_textAttributes@output_buff
 16095  0142BE  0101               	movlb	1	; () banked
 16096  0142C0  6F17               	movwf	strcat@to& (0+255),b
 16097  0142C2  0E02               	movlw	high terminal_textAttributes@output_buff
 16098  0142C4  6F18               	movwf	(strcat@to+1)& (0+255),b
 16099  0142C6  0EF1               	movlw	low (STR_27+1)
 16100  0142C8  6F19               	movwf	strcat@from& (0+255),b
 16101  0142CA  0EFF               	movlw	high (STR_27+1)
 16102  0142CC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16103  0142CE  EC5A  F0C5         	call	_strcat	;wreg free
 16104                           
 16105                           ;ring_buffer_interface.c: 139: break;
 16106  0142D2  D02D               	goto	l1108
 16107  0142D4                     
 16108                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 16109  0142D4  0E81               	movlw	low terminal_textAttributes@output_buff
 16110  0142D6  0101               	movlb	1	; () banked
 16111  0142D8  6F17               	movwf	strcat@to& (0+255),b
 16112  0142DA  0E02               	movlw	high terminal_textAttributes@output_buff
 16113  0142DC  6F18               	movwf	(strcat@to+1)& (0+255),b
 16114  0142DE  0EF9               	movlw	low STR_17
 16115  0142E0  6F19               	movwf	strcat@from& (0+255),b
 16116  0142E2  0EFF               	movlw	high STR_17
 16117  0142E4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16118  0142E6  EC5A  F0C5         	call	_strcat	;wreg free
 16119                           
 16120                           ;ring_buffer_interface.c: 142: break;
 16121  0142EA  D021               	goto	l1108
 16122  0142EC                     
 16123                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 16124  0142EC  0E81               	movlw	low terminal_textAttributes@output_buff
 16125  0142EE  0101               	movlb	1	; () banked
 16126  0142F0  6F17               	movwf	strcat@to& (0+255),b
 16127  0142F2  0E02               	movlw	high terminal_textAttributes@output_buff
 16128  0142F4  6F18               	movwf	(strcat@to+1)& (0+255),b
 16129  0142F6  0ECA               	movlw	low (STR_20+1)
 16130  0142F8  6F19               	movwf	strcat@from& (0+255),b
 16131  0142FA  0EFF               	movlw	high (STR_20+1)
 16132  0142FC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16133  0142FE  EC5A  F0C5         	call	_strcat	;wreg free
 16134                           
 16135                           ;ring_buffer_interface.c: 147: }
 16136                           
 16137                           ;ring_buffer_interface.c: 146: break;
 16138  014302  D015               	goto	l1108
 16139  014304                     l1106:
 16140  014304  0101               	movlb	1	; () banked
 16141  014306  51B3               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 16142                           
 16143                           ; Switch size 1, requested type "space"
 16144                           ; Number of cases is 6, Range of values is 0 to 5
 16145                           ; switch strategies available:
 16146                           ; Name         Instructions Cycles
 16147                           ; simple_byte           19    10 (average)
 16148                           ;	Chosen strategy is simple_byte
 16149  014308  0A00               	xorlw	0	; case 0
 16150  01430A  B4D8               	btfsc	status,2,c
 16151  01430C  D7A7               	goto	l1107
 16152  01430E  0A01               	xorlw	1	; case 1
 16153  014310  B4D8               	btfsc	status,2,c
 16154  014312  D7B0               	goto	l1109
 16155  014314  0A03               	xorlw	3	; case 2
 16156  014316  B4D8               	btfsc	status,2,c
 16157  014318  D7B9               	goto	l1110
 16158  01431A  0A01               	xorlw	1	; case 3
 16159  01431C  B4D8               	btfsc	status,2,c
 16160  01431E  D7C2               	goto	l1111
 16161  014320  0A07               	xorlw	7	; case 4
 16162  014322  B4D8               	btfsc	status,2,c
 16163  014324  D7CB               	goto	l1112
 16164  014326  0A01               	xorlw	1	; case 5
 16165  014328  B4D8               	btfsc	status,2,c
 16166  01432A  D7D4               	goto	l1113
 16167  01432C  D7DF               	goto	l1114
 16168  01432E                     l1108:
 16169                           
 16170                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 16171                           
 16172                           ; BSR set to: 1
 16173  01432E  0E81               	movlw	low terminal_textAttributes@output_buff
 16174  014330  0101               	movlb	1	; () banked
 16175  014332  6F17               	movwf	strcat@to& (0+255),b
 16176  014334  0E02               	movlw	high terminal_textAttributes@output_buff
 16177  014336  6F18               	movwf	(strcat@to+1)& (0+255),b
 16178  014338  0EFB               	movlw	low STR_19
 16179  01433A  6F19               	movwf	strcat@from& (0+255),b
 16180  01433C  0EFF               	movlw	high STR_19
 16181  01433E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16182  014340  EC5A  F0C5         	call	_strcat	;wreg free
 16183                           
 16184                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 16185  014344  D06C               	goto	l1115
 16186  014346                     
 16187                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 16188  014346  0E81               	movlw	low terminal_textAttributes@output_buff
 16189  014348  0101               	movlb	1	; () banked
 16190  01434A  6F17               	movwf	strcat@to& (0+255),b
 16191  01434C  0E02               	movlw	high terminal_textAttributes@output_buff
 16192  01434E  6F18               	movwf	(strcat@to+1)& (0+255),b
 16193  014350  0EC9               	movlw	low STR_20
 16194  014352  6F19               	movwf	strcat@from& (0+255),b
 16195  014354  0EFF               	movlw	high STR_20
 16196  014356  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16197  014358  EC5A  F0C5         	call	_strcat	;wreg free
 16198                           
 16199                           ;ring_buffer_interface.c: 155: break;
 16200  01435C  D07B               	goto	l1117
 16201  01435E                     
 16202                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 16203  01435E  0E81               	movlw	low terminal_textAttributes@output_buff
 16204  014360  0101               	movlb	1	; () banked
 16205  014362  6F17               	movwf	strcat@to& (0+255),b
 16206  014364  0E02               	movlw	high terminal_textAttributes@output_buff
 16207  014366  6F18               	movwf	(strcat@to+1)& (0+255),b
 16208  014368  0ECC               	movlw	low STR_21
 16209  01436A  6F19               	movwf	strcat@from& (0+255),b
 16210  01436C  0EFF               	movlw	high STR_21
 16211  01436E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16212  014370  EC5A  F0C5         	call	_strcat	;wreg free
 16213                           
 16214                           ;ring_buffer_interface.c: 158: break;
 16215  014374  D06F               	goto	l1117
 16216  014376                     
 16217                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 16218  014376  0E81               	movlw	low terminal_textAttributes@output_buff
 16219  014378  0101               	movlb	1	; () banked
 16220  01437A  6F17               	movwf	strcat@to& (0+255),b
 16221  01437C  0E02               	movlw	high terminal_textAttributes@output_buff
 16222  01437E  6F18               	movwf	(strcat@to+1)& (0+255),b
 16223  014380  0ED2               	movlw	low STR_22
 16224  014382  6F19               	movwf	strcat@from& (0+255),b
 16225  014384  0EFF               	movlw	high STR_22
 16226  014386  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16227  014388  EC5A  F0C5         	call	_strcat	;wreg free
 16228                           
 16229                           ;ring_buffer_interface.c: 161: break;
 16230  01438C  D063               	goto	l1117
 16231  01438E                     
 16232                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 16233  01438E  0E81               	movlw	low terminal_textAttributes@output_buff
 16234  014390  0101               	movlb	1	; () banked
 16235  014392  6F17               	movwf	strcat@to& (0+255),b
 16236  014394  0E02               	movlw	high terminal_textAttributes@output_buff
 16237  014396  6F18               	movwf	(strcat@to+1)& (0+255),b
 16238  014398  0ED8               	movlw	low STR_23
 16239  01439A  6F19               	movwf	strcat@from& (0+255),b
 16240  01439C  0EFF               	movlw	high STR_23
 16241  01439E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16242  0143A0  EC5A  F0C5         	call	_strcat	;wreg free
 16243                           
 16244                           ;ring_buffer_interface.c: 164: break;
 16245  0143A4  D057               	goto	l1117
 16246  0143A6                     
 16247                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 16248  0143A6  0E81               	movlw	low terminal_textAttributes@output_buff
 16249  0143A8  0101               	movlb	1	; () banked
 16250  0143AA  6F17               	movwf	strcat@to& (0+255),b
 16251  0143AC  0E02               	movlw	high terminal_textAttributes@output_buff
 16252  0143AE  6F18               	movwf	(strcat@to+1)& (0+255),b
 16253  0143B0  0EDE               	movlw	low STR_24
 16254  0143B2  6F19               	movwf	strcat@from& (0+255),b
 16255  0143B4  0EFF               	movlw	high STR_24
 16256  0143B6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16257  0143B8  EC5A  F0C5         	call	_strcat	;wreg free
 16258                           
 16259                           ;ring_buffer_interface.c: 167: break;
 16260  0143BC  D04B               	goto	l1117
 16261  0143BE                     
 16262                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 16263  0143BE  0E81               	movlw	low terminal_textAttributes@output_buff
 16264  0143C0  0101               	movlb	1	; () banked
 16265  0143C2  6F17               	movwf	strcat@to& (0+255),b
 16266  0143C4  0E02               	movlw	high terminal_textAttributes@output_buff
 16267  0143C6  6F18               	movwf	(strcat@to+1)& (0+255),b
 16268  0143C8  0EE4               	movlw	low STR_25
 16269  0143CA  6F19               	movwf	strcat@from& (0+255),b
 16270  0143CC  0EFF               	movlw	high STR_25
 16271  0143CE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16272  0143D0  EC5A  F0C5         	call	_strcat	;wreg free
 16273                           
 16274                           ;ring_buffer_interface.c: 170: break;
 16275  0143D4  D03F               	goto	l1117
 16276  0143D6                     
 16277                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 16278  0143D6  0E81               	movlw	low terminal_textAttributes@output_buff
 16279  0143D8  0101               	movlb	1	; () banked
 16280  0143DA  6F17               	movwf	strcat@to& (0+255),b
 16281  0143DC  0E02               	movlw	high terminal_textAttributes@output_buff
 16282  0143DE  6F18               	movwf	(strcat@to+1)& (0+255),b
 16283  0143E0  0EEA               	movlw	low STR_26
 16284  0143E2  6F19               	movwf	strcat@from& (0+255),b
 16285  0143E4  0EFF               	movlw	high STR_26
 16286  0143E6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16287  0143E8  EC5A  F0C5         	call	_strcat	;wreg free
 16288                           
 16289                           ;ring_buffer_interface.c: 173: break;
 16290  0143EC  D033               	goto	l1117
 16291  0143EE                     
 16292                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 16293  0143EE  0E81               	movlw	low terminal_textAttributes@output_buff
 16294  0143F0  0101               	movlb	1	; () banked
 16295  0143F2  6F17               	movwf	strcat@to& (0+255),b
 16296  0143F4  0E02               	movlw	high terminal_textAttributes@output_buff
 16297  0143F6  6F18               	movwf	(strcat@to+1)& (0+255),b
 16298  0143F8  0EF0               	movlw	low STR_27
 16299  0143FA  6F19               	movwf	strcat@from& (0+255),b
 16300  0143FC  0EFF               	movlw	high STR_27
 16301  0143FE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16302  014400  EC5A  F0C5         	call	_strcat	;wreg free
 16303                           
 16304                           ;ring_buffer_interface.c: 176: break;
 16305  014404  D027               	goto	l1117
 16306  014406                     
 16307                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 16308  014406  0E81               	movlw	low terminal_textAttributes@output_buff
 16309  014408  0101               	movlb	1	; () banked
 16310  01440A  6F17               	movwf	strcat@to& (0+255),b
 16311  01440C  0E02               	movlw	high terminal_textAttributes@output_buff
 16312  01440E  6F18               	movwf	(strcat@to+1)& (0+255),b
 16313  014410  0EF0               	movlw	low STR_27
 16314  014412  6F19               	movwf	strcat@from& (0+255),b
 16315  014414  0EFF               	movlw	high STR_27
 16316  014416  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16317  014418  EC5A  F0C5         	call	_strcat	;wreg free
 16318                           
 16319                           ;ring_buffer_interface.c: 181: }
 16320                           
 16321                           ;ring_buffer_interface.c: 180: break;
 16322  01441C  D01B               	goto	l1117
 16323  01441E                     l1115:
 16324  01441E  0102               	movlb	2	; () banked
 16325  014420  5180               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 16326                           
 16327                           ; Switch size 1, requested type "space"
 16328                           ; Number of cases is 8, Range of values is 0 to 7
 16329                           ; switch strategies available:
 16330                           ; Name         Instructions Cycles
 16331                           ; simple_byte           25    13 (average)
 16332                           ;	Chosen strategy is simple_byte
 16333  014422  0A00               	xorlw	0	; case 0
 16334  014424  B4D8               	btfsc	status,2,c
 16335  014426  D78F               	goto	l1116
 16336  014428  0A01               	xorlw	1	; case 1
 16337  01442A  B4D8               	btfsc	status,2,c
 16338  01442C  D798               	goto	l1118
 16339  01442E  0A03               	xorlw	3	; case 2
 16340  014430  B4D8               	btfsc	status,2,c
 16341  014432  D7A1               	goto	l1119
 16342  014434  0A01               	xorlw	1	; case 3
 16343  014436  B4D8               	btfsc	status,2,c
 16344  014438  D7AA               	goto	l1120
 16345  01443A  0A07               	xorlw	7	; case 4
 16346  01443C  B4D8               	btfsc	status,2,c
 16347  01443E  D7B3               	goto	l1121
 16348  014440  0A01               	xorlw	1	; case 5
 16349  014442  B4D8               	btfsc	status,2,c
 16350  014444  D7BC               	goto	l1122
 16351  014446  0A03               	xorlw	3	; case 6
 16352  014448  B4D8               	btfsc	status,2,c
 16353  01444A  D7C5               	goto	l1123
 16354  01444C  0A01               	xorlw	1	; case 7
 16355  01444E  B4D8               	btfsc	status,2,c
 16356  014450  D7CE               	goto	l1124
 16357  014452  D7D9               	goto	l1125
 16358  014454                     l1117:
 16359                           
 16360                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 16361                           
 16362                           ; BSR set to: 2
 16363  014454  0E81               	movlw	low terminal_textAttributes@output_buff
 16364  014456  0101               	movlb	1	; () banked
 16365  014458  6F17               	movwf	strcat@to& (0+255),b
 16366  01445A  0E02               	movlw	high terminal_textAttributes@output_buff
 16367  01445C  6F18               	movwf	(strcat@to+1)& (0+255),b
 16368  01445E  0EFB               	movlw	low STR_19
 16369  014460  6F19               	movwf	strcat@from& (0+255),b
 16370  014462  0EFF               	movlw	high STR_19
 16371  014464  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16372  014466  EC5A  F0C5         	call	_strcat	;wreg free
 16373                           
 16374                           ;ring_buffer_interface.c: 185: switch (background_color) {
 16375  01446A  D06C               	goto	l1126
 16376  01446C                     
 16377                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 16378  01446C  0E81               	movlw	low terminal_textAttributes@output_buff
 16379  01446E  0101               	movlb	1	; () banked
 16380  014470  6F17               	movwf	strcat@to& (0+255),b
 16381  014472  0E02               	movlw	high terminal_textAttributes@output_buff
 16382  014474  6F18               	movwf	(strcat@to+1)& (0+255),b
 16383  014476  0E39               	movlw	low (STR_151+9)
 16384  014478  6F19               	movwf	strcat@from& (0+255),b
 16385  01447A  0EFF               	movlw	high (STR_151+9)
 16386  01447C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16387  01447E  EC5A  F0C5         	call	_strcat	;wreg free
 16388                           
 16389                           ;ring_buffer_interface.c: 189: break;
 16390  014482  D07B               	goto	l1128
 16391  014484                     
 16392                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 16393  014484  0E81               	movlw	low terminal_textAttributes@output_buff
 16394  014486  0101               	movlb	1	; () banked
 16395  014488  6F17               	movwf	strcat@to& (0+255),b
 16396  01448A  0E02               	movlw	high terminal_textAttributes@output_buff
 16397  01448C  6F18               	movwf	(strcat@to+1)& (0+255),b
 16398  01448E  0ECF               	movlw	low STR_31
 16399  014490  6F19               	movwf	strcat@from& (0+255),b
 16400  014492  0EFF               	movlw	high STR_31
 16401  014494  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16402  014496  EC5A  F0C5         	call	_strcat	;wreg free
 16403                           
 16404                           ;ring_buffer_interface.c: 192: break;
 16405  01449A  D06F               	goto	l1128
 16406  01449C                     
 16407                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 16408  01449C  0E81               	movlw	low terminal_textAttributes@output_buff
 16409  01449E  0101               	movlb	1	; () banked
 16410  0144A0  6F17               	movwf	strcat@to& (0+255),b
 16411  0144A2  0E02               	movlw	high terminal_textAttributes@output_buff
 16412  0144A4  6F18               	movwf	(strcat@to+1)& (0+255),b
 16413  0144A6  0ED5               	movlw	low STR_32
 16414  0144A8  6F19               	movwf	strcat@from& (0+255),b
 16415  0144AA  0EFF               	movlw	high STR_32
 16416  0144AC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16417  0144AE  EC5A  F0C5         	call	_strcat	;wreg free
 16418                           
 16419                           ;ring_buffer_interface.c: 195: break;
 16420  0144B2  D063               	goto	l1128
 16421  0144B4                     
 16422                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 16423  0144B4  0E81               	movlw	low terminal_textAttributes@output_buff
 16424  0144B6  0101               	movlb	1	; () banked
 16425  0144B8  6F17               	movwf	strcat@to& (0+255),b
 16426  0144BA  0E02               	movlw	high terminal_textAttributes@output_buff
 16427  0144BC  6F18               	movwf	(strcat@to+1)& (0+255),b
 16428  0144BE  0EDB               	movlw	low STR_33
 16429  0144C0  6F19               	movwf	strcat@from& (0+255),b
 16430  0144C2  0EFF               	movlw	high STR_33
 16431  0144C4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16432  0144C6  EC5A  F0C5         	call	_strcat	;wreg free
 16433                           
 16434                           ;ring_buffer_interface.c: 198: break;
 16435  0144CA  D057               	goto	l1128
 16436  0144CC                     
 16437                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 16438  0144CC  0E81               	movlw	low terminal_textAttributes@output_buff
 16439  0144CE  0101               	movlb	1	; () banked
 16440  0144D0  6F17               	movwf	strcat@to& (0+255),b
 16441  0144D2  0E02               	movlw	high terminal_textAttributes@output_buff
 16442  0144D4  6F18               	movwf	(strcat@to+1)& (0+255),b
 16443  0144D6  0EE1               	movlw	low STR_34
 16444  0144D8  6F19               	movwf	strcat@from& (0+255),b
 16445  0144DA  0EFF               	movlw	high STR_34
 16446  0144DC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16447  0144DE  EC5A  F0C5         	call	_strcat	;wreg free
 16448                           
 16449                           ;ring_buffer_interface.c: 201: break;
 16450  0144E2  D04B               	goto	l1128
 16451  0144E4                     
 16452                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 16453  0144E4  0E81               	movlw	low terminal_textAttributes@output_buff
 16454  0144E6  0101               	movlb	1	; () banked
 16455  0144E8  6F17               	movwf	strcat@to& (0+255),b
 16456  0144EA  0E02               	movlw	high terminal_textAttributes@output_buff
 16457  0144EC  6F18               	movwf	(strcat@to+1)& (0+255),b
 16458  0144EE  0EE7               	movlw	low STR_35
 16459  0144F0  6F19               	movwf	strcat@from& (0+255),b
 16460  0144F2  0EFF               	movlw	high STR_35
 16461  0144F4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16462  0144F6  EC5A  F0C5         	call	_strcat	;wreg free
 16463                           
 16464                           ;ring_buffer_interface.c: 204: break;
 16465  0144FA  D03F               	goto	l1128
 16466  0144FC                     
 16467                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 16468  0144FC  0E81               	movlw	low terminal_textAttributes@output_buff
 16469  0144FE  0101               	movlb	1	; () banked
 16470  014500  6F17               	movwf	strcat@to& (0+255),b
 16471  014502  0E02               	movlw	high terminal_textAttributes@output_buff
 16472  014504  6F18               	movwf	(strcat@to+1)& (0+255),b
 16473  014506  0EED               	movlw	low STR_36
 16474  014508  6F19               	movwf	strcat@from& (0+255),b
 16475  01450A  0EFF               	movlw	high STR_36
 16476  01450C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16477  01450E  EC5A  F0C5         	call	_strcat	;wreg free
 16478                           
 16479                           ;ring_buffer_interface.c: 207: break;
 16480  014512  D033               	goto	l1128
 16481  014514                     
 16482                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 16483  014514  0E81               	movlw	low terminal_textAttributes@output_buff
 16484  014516  0101               	movlb	1	; () banked
 16485  014518  6F17               	movwf	strcat@to& (0+255),b
 16486  01451A  0E02               	movlw	high terminal_textAttributes@output_buff
 16487  01451C  6F18               	movwf	(strcat@to+1)& (0+255),b
 16488  01451E  0EF3               	movlw	low STR_37
 16489  014520  6F19               	movwf	strcat@from& (0+255),b
 16490  014522  0EFF               	movlw	high STR_37
 16491  014524  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16492  014526  EC5A  F0C5         	call	_strcat	;wreg free
 16493                           
 16494                           ;ring_buffer_interface.c: 210: break;
 16495  01452A  D027               	goto	l1128
 16496  01452C                     
 16497                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 16498  01452C  0E81               	movlw	low terminal_textAttributes@output_buff
 16499  01452E  0101               	movlb	1	; () banked
 16500  014530  6F17               	movwf	strcat@to& (0+255),b
 16501  014532  0E02               	movlw	high terminal_textAttributes@output_buff
 16502  014534  6F18               	movwf	(strcat@to+1)& (0+255),b
 16503  014536  0EF3               	movlw	low STR_37
 16504  014538  6F19               	movwf	strcat@from& (0+255),b
 16505  01453A  0EFF               	movlw	high STR_37
 16506  01453C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16507  01453E  EC5A  F0C5         	call	_strcat	;wreg free
 16508                           
 16509                           ;ring_buffer_interface.c: 215: }
 16510                           
 16511                           ;ring_buffer_interface.c: 214: break;
 16512  014542  D01B               	goto	l1128
 16513  014544                     l1126:
 16514  014544  0101               	movlb	1	; () banked
 16515  014546  51B2               	movf	terminal_textAttributes@background_color& (0+255),w,b
 16516                           
 16517                           ; Switch size 1, requested type "space"
 16518                           ; Number of cases is 8, Range of values is 0 to 7
 16519                           ; switch strategies available:
 16520                           ; Name         Instructions Cycles
 16521                           ; simple_byte           25    13 (average)
 16522                           ;	Chosen strategy is simple_byte
 16523  014548  0A00               	xorlw	0	; case 0
 16524  01454A  B4D8               	btfsc	status,2,c
 16525  01454C  D78F               	goto	l1127
 16526  01454E  0A01               	xorlw	1	; case 1
 16527  014550  B4D8               	btfsc	status,2,c
 16528  014552  D798               	goto	l1129
 16529  014554  0A03               	xorlw	3	; case 2
 16530  014556  B4D8               	btfsc	status,2,c
 16531  014558  D7A1               	goto	l1130
 16532  01455A  0A01               	xorlw	1	; case 3
 16533  01455C  B4D8               	btfsc	status,2,c
 16534  01455E  D7AA               	goto	l1131
 16535  014560  0A07               	xorlw	7	; case 4
 16536  014562  B4D8               	btfsc	status,2,c
 16537  014564  D7B3               	goto	l1132
 16538  014566  0A01               	xorlw	1	; case 5
 16539  014568  B4D8               	btfsc	status,2,c
 16540  01456A  D7BC               	goto	l1133
 16541  01456C  0A03               	xorlw	3	; case 6
 16542  01456E  B4D8               	btfsc	status,2,c
 16543  014570  D7C5               	goto	l1134
 16544  014572  0A01               	xorlw	1	; case 7
 16545  014574  B4D8               	btfsc	status,2,c
 16546  014576  D7CE               	goto	l1135
 16547  014578  D7D9               	goto	l1136
 16548  01457A                     l1128:
 16549                           
 16550                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 16551                           
 16552                           ; BSR set to: 1
 16553  01457A  0E81               	movlw	low terminal_textAttributes@output_buff
 16554  01457C  0101               	movlb	1	; () banked
 16555  01457E  6F17               	movwf	strcat@to& (0+255),b
 16556  014580  0E02               	movlw	high terminal_textAttributes@output_buff
 16557  014582  6F18               	movwf	(strcat@to+1)& (0+255),b
 16558  014584  0EFD               	movlw	low STR_39
 16559  014586  6F19               	movwf	strcat@from& (0+255),b
 16560  014588  0EFF               	movlw	high STR_39
 16561  01458A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16562  01458C  EC5A  F0C5         	call	_strcat	;wreg free
 16563                           
 16564                           ;ring_buffer_interface.c: 219: printf(output_buff);
 16565  014590  0E81               	movlw	low terminal_textAttributes@output_buff
 16566  014592  0101               	movlb	1	; () banked
 16567  014594  6F82               	movwf	printf@f& (0+255),b
 16568  014596  0E02               	movlw	high terminal_textAttributes@output_buff
 16569  014598  6F83               	movwf	(printf@f+1)& (0+255),b
 16570  01459A  ECD1  F089         	call	_printf	;wreg free
 16571  01459E  0012               	return		;funcret
 16572  0145A0                     __end_of_terminal_textAttributes:
 16573                           	opt stack 0
 16574                           tblptru	equ	0xFF8
 16575                           tblptrh	equ	0xFF7
 16576                           tblptrl	equ	0xFF6
 16577                           tablat	equ	0xFF5
 16578                           intcon	equ	0xFF2
 16579                           postinc0	equ	0xFEE
 16580                           wreg	equ	0xFE8
 16581                           indf1	equ	0xFE7
 16582                           postdec1	equ	0xFE5
 16583                           fsr1h	equ	0xFE2
 16584                           fsr1l	equ	0xFE1
 16585                           indf2	equ	0xFDF
 16586                           postinc2	equ	0xFDE
 16587                           fsr2h	equ	0xFDA
 16588                           fsr2l	equ	0xFD9
 16589                           status	equ	0xFD8
 16590                           
 16591 ;; *************** function _strncpy *****************
 16592 ;; Defined at:
 16593 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;  to              2   23[BANK1 ] PTR unsigned char 
 16596 ;;		 -> terminal_textAttributes@output_buff(15), 
 16597 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 16598 ;;		 -> STR_11(3), 
 16599 ;;  size            2   27[BANK1 ] unsigned int 
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 16602 ;;		 -> terminal_textAttributes@output_buff(15), 
 16603 ;; Return value:  Size  Location     Type
 16604 ;;                  2   23[BANK1 ] PTR unsigned char 
 16605 ;; Registers used:
 16606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16607 ;; Tracked objects:
 16608 ;;		On entry : 0/0
 16609 ;;		On exit  : 0/0
 16610 ;;		Unchanged: 0/0
 16611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16612 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16613 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16615 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16616 ;;Total ram usage:        8 bytes
 16617 ;; Hardware stack levels used:    1
 16618 ;; Hardware stack levels required when called:   13
 16619 ;; This function calls:
 16620 ;;		Nothing
 16621 ;; This function is called by:
 16622 ;;		_terminal_textAttributes
 16623 ;; This function uses a non-reentrant model
 16624 ;;
 16625                           
 16626                           	psect	text6
 16627  0186D4                     __ptext6:
 16628                           	opt stack 0
 16629  0186D4                     _strncpy:
 16630                           	opt stack 15
 16631                           
 16632                           ;incstack = 0
 16633  0186D4  C117  F11D         	movff	strncpy@to,strncpy@cp
 16634  0186D8  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 16635  0186DC  D018               	goto	l2329
 16636  0186DE  0101               	movlb	1	; () banked
 16637  0186E0  071B               	decf	strncpy@size& (0+255),f,b
 16638  0186E2  A0D8               	btfss	status,0,c
 16639  0186E4  071C               	decf	(strncpy@size+1)& (0+255),f,b
 16640                           
 16641                           ; BSR set to: 1
 16642  0186E6  C119  FFF6         	movff	strncpy@from,tblptrl
 16643  0186EA  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 16644  0186EE  4B19               	infsnz	strncpy@from& (0+255),f,b
 16645  0186F0  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 16646  0186F2                     	if	0	;tblptru may be non-zero
 16647  0186F2                     	endif
 16648  0186F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16649  0186F2  0E00               	movlw	low (__mediumconst shr (0+16))
 16650  0186F4  6EF8               	movwf	tblptru,c
 16651  0186F6                     	endif
 16652  0186F6  C11D  FFD9         	movff	strncpy@cp,fsr2l
 16653  0186FA  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 16654  0186FE  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 16655  018700  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 16656  018702  0008               	tblrd		*
 16657  018704  CFF5 FFDF          	movff	tablat,indf2
 16658  018708  50DF               	movf	indf2,w,c
 16659  01870A  B4D8               	btfsc	status,2,c
 16660  01870C  D00E               	goto	l2331
 16661  01870E                     l2329:
 16662                           
 16663                           ; BSR set to: 1
 16664                           
 16665                           ; BSR set to: 1
 16666  01870E  0101               	movlb	1	; () banked
 16667  018710  511B               	movf	strncpy@size& (0+255),w,b
 16668  018712  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 16669  018714  B4D8               	btfsc	status,2,c
 16670  018716  D009               	goto	l2331
 16671  018718  D7E2               	goto	l2328
 16672  01871A                     l19096:
 16673                           
 16674                           ; BSR set to: 1
 16675  01871A  C11D  FFD9         	movff	strncpy@cp,fsr2l
 16676  01871E  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 16677  018722  0E00               	movlw	0
 16678  018724  6EDF               	movwf	indf2,c
 16679                           
 16680                           ; BSR set to: 1
 16681  018726  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 16682  018728  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 16683  01872A                     l2331:
 16684                           
 16685                           ; BSR set to: 1
 16686                           
 16687                           ; BSR set to: 1
 16688  01872A  071B               	decf	strncpy@size& (0+255),f,b
 16689  01872C  A0D8               	btfss	status,0,c
 16690  01872E  071C               	decf	(strncpy@size+1)& (0+255),f,b
 16691  018730  291B               	incf	strncpy@size& (0+255),w,b
 16692  018732  E1F3               	bnz	l19096
 16693  018734  291C               	incf	(strncpy@size+1)& (0+255),w,b
 16694  018736  B4D8               	btfsc	status,2,c
 16695  018738  0012               	return	
 16696  01873A  D7EF               	goto	l2332
 16697  01873C                     __end_of_strncpy:
 16698                           	opt stack 0
 16699                           tblptru	equ	0xFF8
 16700                           tblptrh	equ	0xFF7
 16701                           tblptrl	equ	0xFF6
 16702                           tablat	equ	0xFF5
 16703                           intcon	equ	0xFF2
 16704                           postinc0	equ	0xFEE
 16705                           wreg	equ	0xFE8
 16706                           indf1	equ	0xFE7
 16707                           postdec1	equ	0xFE5
 16708                           fsr1h	equ	0xFE2
 16709                           fsr1l	equ	0xFE1
 16710                           indf2	equ	0xFDF
 16711                           postinc2	equ	0xFDE
 16712                           fsr2h	equ	0xFDA
 16713                           fsr2l	equ	0xFD9
 16714                           status	equ	0xFD8
 16715                           
 16716 ;; *************** function _strcat *****************
 16717 ;; Defined at:
 16718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 16719 ;; Parameters:    Size  Location     Type
 16720 ;;  to              2   23[BANK1 ] PTR unsigned char 
 16721 ;;		 -> terminal_textAttributes@output_buff(15), 
 16722 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 16723 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 16724 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 16725 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 16726 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 16727 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 16728 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 16729 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 16730 ;; Auto vars:     Size  Location     Type
 16731 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 16732 ;;		 -> terminal_textAttributes@output_buff(15), 
 16733 ;; Return value:  Size  Location     Type
 16734 ;;                  2   23[BANK1 ] PTR unsigned char 
 16735 ;; Registers used:
 16736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16737 ;; Tracked objects:
 16738 ;;		On entry : 0/0
 16739 ;;		On exit  : 0/0
 16740 ;;		Unchanged: 0/0
 16741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16742 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16743 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16745 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16746 ;;Total ram usage:        6 bytes
 16747 ;; Hardware stack levels used:    1
 16748 ;; Hardware stack levels required when called:   13
 16749 ;; This function calls:
 16750 ;;		Nothing
 16751 ;; This function is called by:
 16752 ;;		_terminal_textAttributes
 16753 ;; This function uses a non-reentrant model
 16754 ;;
 16755                           
 16756                           	psect	text7
 16757  018AB4                     __ptext7:
 16758                           	opt stack 0
 16759  018AB4                     _strcat:
 16760                           	opt stack 15
 16761                           
 16762                           ; BSR set to: 1
 16763                           ;incstack = 0
 16764  018AB4  C117  F11B         	movff	strcat@to,strcat@cp
 16765  018AB8  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 16766  018ABC  D003               	goto	l2298
 16767  018ABE  0101               	movlb	1	; () banked
 16768  018AC0  4B1B               	infsnz	strcat@cp& (0+255),f,b
 16769  018AC2  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 16770  018AC4                     l2298:
 16771                           
 16772                           ; BSR set to: 1
 16773  018AC4  C11B  FFD9         	movff	strcat@cp,fsr2l
 16774  018AC8  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 16775  018ACC  50DF               	movf	indf2,w,c
 16776  018ACE  B4D8               	btfsc	status,2,c
 16777  018AD0  D006               	goto	l2301
 16778  018AD2  D7F5               	goto	l2299
 16779  018AD4  0101               	movlb	1	; () banked
 16780  018AD6  4B1B               	infsnz	strcat@cp& (0+255),f,b
 16781  018AD8  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 16782  018ADA  4B19               	infsnz	strcat@from& (0+255),f,b
 16783  018ADC  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 16784  018ADE                     l2301:
 16785                           
 16786                           ; BSR set to: 1
 16787  018ADE  C119  FFF6         	movff	strcat@from,tblptrl
 16788  018AE2  C11A  FFF7         	movff	strcat@from+1,tblptrh
 16789  018AE6                     	if	0	;tblptru may be non-zero
 16790  018AE6                     	endif
 16791  018AE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16792  018AE6  0E00               	movlw	low (__mediumconst shr (0+16))
 16793  018AE8  6EF8               	movwf	tblptru,c
 16794  018AEA                     	endif
 16795  018AEA  C11B  FFD9         	movff	strcat@cp,fsr2l
 16796  018AEE  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 16797  018AF2  0008               	tblrd		*
 16798  018AF4  CFF5 FFDF          	movff	tablat,indf2
 16799  018AF8  50DF               	movf	indf2,w,c
 16800  018AFA  B4D8               	btfsc	status,2,c
 16801  018AFC  0012               	return	
 16802  018AFE  D7EA               	goto	l2302
 16803  018B00                     __end_of_strcat:
 16804                           	opt stack 0
 16805                           tblptru	equ	0xFF8
 16806                           tblptrh	equ	0xFF7
 16807                           tblptrl	equ	0xFF6
 16808                           tablat	equ	0xFF5
 16809                           intcon	equ	0xFF2
 16810                           postinc0	equ	0xFEE
 16811                           wreg	equ	0xFE8
 16812                           indf1	equ	0xFE7
 16813                           postdec1	equ	0xFE5
 16814                           fsr1h	equ	0xFE2
 16815                           fsr1l	equ	0xFE1
 16816                           indf2	equ	0xFDF
 16817                           postinc2	equ	0xFDE
 16818                           fsr2h	equ	0xFDA
 16819                           fsr2l	equ	0xFD9
 16820                           status	equ	0xFD8
 16821                           
 16822 ;; *************** function _terminal_printNewline *****************
 16823 ;; Defined at:
 16824 ;;		line 230 in file "ring_buffer_interface.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;		None
 16827 ;; Auto vars:     Size  Location     Type
 16828 ;;		None
 16829 ;; Return value:  Size  Location     Type
 16830 ;;                  1    wreg      void 
 16831 ;; Registers used:
 16832 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16833 ;; Tracked objects:
 16834 ;;		On entry : 0/0
 16835 ;;		On exit  : 0/0
 16836 ;;		Unchanged: 0/0
 16837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16842 ;;Total ram usage:        0 bytes
 16843 ;; Hardware stack levels used:    1
 16844 ;; Hardware stack levels required when called:   16
 16845 ;; This function calls:
 16846 ;;		_printf
 16847 ;; This function is called by:
 16848 ;;		_ringBufferLUT
 16849 ;; This function uses a non-reentrant model
 16850 ;;
 16851                           
 16852                           	psect	text8
 16853  0192BE                     __ptext8:
 16854                           	opt stack 0
 16855  0192BE                     _terminal_printNewline:
 16856                           	opt stack 12
 16857                           
 16858                           ;ring_buffer_interface.c: 232: printf("\n\r");
 16859                           
 16860                           ;incstack = 0
 16861  0192BE  0E01               	movlw	low (STR_137+717)
 16862  0192C0  0101               	movlb	1	; () banked
 16863  0192C2  6F82               	movwf	printf@f& (0+255),b
 16864  0192C4  0EEB               	movlw	high (STR_137+717)
 16865  0192C6  6F83               	movwf	(printf@f+1)& (0+255),b
 16866  0192C8  ECD1  F089         	call	_printf	;wreg free
 16867  0192CC  0012               	return		;funcret
 16868  0192CE                     __end_of_terminal_printNewline:
 16869                           	opt stack 0
 16870                           tblptru	equ	0xFF8
 16871                           tblptrh	equ	0xFF7
 16872                           tblptrl	equ	0xFF6
 16873                           tablat	equ	0xFF5
 16874                           intcon	equ	0xFF2
 16875                           postinc0	equ	0xFEE
 16876                           wreg	equ	0xFE8
 16877                           indf1	equ	0xFE7
 16878                           postdec1	equ	0xFE5
 16879                           fsr1h	equ	0xFE2
 16880                           fsr1l	equ	0xFE1
 16881                           indf2	equ	0xFDF
 16882                           postinc2	equ	0xFDE
 16883                           fsr2h	equ	0xFDA
 16884                           fsr2l	equ	0xFD9
 16885                           status	equ	0xFD8
 16886                           
 16887 ;; *************** function _strstr *****************
 16888 ;; Defined at:
 16889 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 16890 ;; Parameters:    Size  Location     Type
 16891 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 16892 ;;		 -> NULL(0), line(64), 
 16893 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 16894 ;;		 -> STR_109(25), 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;		None
 16897 ;; Return value:  Size  Location     Type
 16898 ;;                  2   38[BANK1 ] PTR unsigned char 
 16899 ;; Registers used:
 16900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16906 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16909 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16910 ;;Total ram usage:        4 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; Hardware stack levels required when called:   14
 16913 ;; This function calls:
 16914 ;;		_strchr
 16915 ;;		_strlen
 16916 ;;		_strncmp
 16917 ;; This function is called by:
 16918 ;;		_ringBufferLUT
 16919 ;; This function uses a non-reentrant model
 16920 ;;
 16921                           
 16922                           	psect	text9
 16923  018188                     __ptext9:
 16924                           	opt stack 0
 16925  018188                     _strstr:
 16926                           	opt stack 14
 16927                           
 16928                           ;incstack = 0
 16929  018188  D034               	goto	l2343
 16930  01818A  C126  F11D         	movff	strstr@s1,strncmp@s1
 16931  01818E  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 16932  018192  C128  F11F         	movff	strstr@s2,strncmp@s2
 16933  018196  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 16934  01819A  C128  F117         	movff	strstr@s2,strlen@s
 16935  01819E  C129  F118         	movff	strstr@s2+1,strlen@s+1
 16936  0181A2  EC65  F0C4         	call	_strlen	;wreg free
 16937  0181A6  C117  F121         	movff	?_strlen,strncmp@len
 16938  0181AA  C118  F122         	movff	?_strlen+1,strncmp@len+1
 16939  0181AE  EC7C  F0C0         	call	_strncmp	;wreg free
 16940  0181B2  0101               	movlb	1	; () banked
 16941  0181B4  511D               	movf	?_strncmp& (0+255),w,b
 16942  0181B6  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 16943  0181B8  A4D8               	btfss	status,2,c
 16944  0181BA  D005               	goto	l2345
 16945                           
 16946                           ; BSR set to: 1
 16947  0181BC  C126  F126         	movff	strstr@s1,?_strstr
 16948  0181C0  C127  F127         	movff	strstr@s1+1,?_strstr+1
 16949                           
 16950                           ; BSR set to: 1
 16951  0181C4  0012               	return	
 16952  0181C6                     l2345:
 16953                           
 16954                           ; BSR set to: 1
 16955                           
 16956                           ; BSR set to: 1
 16957  0181C6  0E01               	movlw	1
 16958  0181C8  2526               	addwf	strstr@s1& (0+255),w,b
 16959  0181CA  6F17               	movwf	strchr@ptr& (0+255),b
 16960  0181CC  0E00               	movlw	0
 16961  0181CE  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 16962  0181D0  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 16963  0181D2  C128  FFF6         	movff	strstr@s2,tblptrl
 16964  0181D6  C129  FFF7         	movff	strstr@s2+1,tblptrh
 16965  0181DA                     	if	0	;tblptru may be non-zero
 16966  0181DA                     	endif
 16967  0181DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16968  0181DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16969  0181DC  6EF8               	movwf	tblptru,c
 16970  0181DE                     	endif
 16971  0181DE  0008               	tblrd		*
 16972  0181E0  50F5               	movf	tablat,w,c
 16973  0181E2  6F19               	movwf	strchr@chr& (0+255),b
 16974  0181E4  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 16975  0181E6  EC1A  F0C7         	call	_strchr	;wreg free
 16976  0181EA  C117  F126         	movff	?_strchr,strstr@s1
 16977  0181EE  C118  F127         	movff	?_strchr+1,strstr@s1+1
 16978  0181F2                     l2343:
 16979  0181F2  0101               	movlb	1	; () banked
 16980  0181F4  5126               	movf	strstr@s1& (0+255),w,b
 16981  0181F6  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 16982  0181F8  B4D8               	btfsc	status,2,c
 16983  0181FA  D007               	goto	u25810
 16984                           
 16985                           ; BSR set to: 1
 16986  0181FC  C126  FFD9         	movff	strstr@s1,fsr2l
 16987  018200  C127  FFDA         	movff	strstr@s1+1,fsr2h
 16988  018204  50DF               	movf	indf2,w,c
 16989  018206  A4D8               	btfss	status,2,c
 16990  018208  D7C0               	goto	l2344
 16991  01820A                     u25810:
 16992                           
 16993                           ; BSR set to: 1
 16994                           
 16995                           ; BSR set to: 1
 16996                           
 16997                           ; BSR set to: 1
 16998  01820A  0E00               	movlw	0
 16999  01820C  6F26               	movwf	?_strstr& (0+255),b
 17000  01820E  0E00               	movlw	0
 17001  018210  6F27               	movwf	(?_strstr+1)& (0+255),b
 17002  018212  0012               	return	
 17003  018214                     __end_of_strstr:
 17004                           	opt stack 0
 17005                           tblptru	equ	0xFF8
 17006                           tblptrh	equ	0xFF7
 17007                           tblptrl	equ	0xFF6
 17008                           tablat	equ	0xFF5
 17009                           intcon	equ	0xFF2
 17010                           postinc0	equ	0xFEE
 17011                           wreg	equ	0xFE8
 17012                           indf1	equ	0xFE7
 17013                           postdec1	equ	0xFE5
 17014                           fsr1h	equ	0xFE2
 17015                           fsr1l	equ	0xFE1
 17016                           indf2	equ	0xFDF
 17017                           postinc2	equ	0xFDE
 17018                           fsr2h	equ	0xFDA
 17019                           fsr2l	equ	0xFD9
 17020                           status	equ	0xFD8
 17021                           
 17022 ;; *************** function _strncmp *****************
 17023 ;; Defined at:
 17024 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 17025 ;; Parameters:    Size  Location     Type
 17026 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 17027 ;;		 -> NULL(0), line(64), 
 17028 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 17029 ;;		 -> STR_109(25), 
 17030 ;;  len             2   33[BANK1 ] unsigned int 
 17031 ;; Auto vars:     Size  Location     Type
 17032 ;;		None
 17033 ;; Return value:  Size  Location     Type
 17034 ;;                  2   29[BANK1 ] int 
 17035 ;; Registers used:
 17036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17037 ;; Tracked objects:
 17038 ;;		On entry : 0/0
 17039 ;;		On exit  : 0/0
 17040 ;;		Unchanged: 0/0
 17041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17042 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17044 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17045 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17046 ;;Total ram usage:        9 bytes
 17047 ;; Hardware stack levels used:    1
 17048 ;; Hardware stack levels required when called:   13
 17049 ;; This function calls:
 17050 ;;		Nothing
 17051 ;; This function is called by:
 17052 ;;		_strstr
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           
 17056                           	psect	text10
 17057  0180F8                     __ptext10:
 17058                           	opt stack 0
 17059  0180F8                     _strncmp:
 17060                           	opt stack 14
 17061                           
 17062                           ; BSR set to: 1
 17063                           ;incstack = 0
 17064  0180F8  D039               	goto	l2402
 17065  0180FA                     l19236:
 17066  0180FA  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17067  0180FE  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17068  018102  50DF               	movf	indf2,w,c
 17069  018104  B4D8               	btfsc	status,2,c
 17070  018106  D012               	goto	u25650
 17071  018108  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17072  01810C  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17073  018110  50DF               	movf	indf2,w,c
 17074  018112  0101               	movlb	1	; () banked
 17075  018114  6F23               	movwf	??_strncmp& (0+255),b
 17076  018116  C11F  FFF6         	movff	strncmp@s2,tblptrl
 17077  01811A  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 17078  01811E                     	if	0	;tblptru may be non-zero
 17079  01811E                     	endif
 17080  01811E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17081  01811E  0E00               	movlw	low (__mediumconst shr (0+16))
 17082  018120  6EF8               	movwf	tblptru,c
 17083  018122                     	endif
 17084  018122  0008               	tblrd		*
 17085  018124  50F5               	movf	tablat,w,c
 17086  018126  1923               	xorwf	??_strncmp& (0+255),w,b
 17087  018128  B4D8               	btfsc	status,2,c
 17088  01812A  D01C               	goto	l2404
 17089  01812C                     u25650:
 17090                           
 17091                           ; BSR set to: 1
 17092  01812C  C11F  FFF6         	movff	strncmp@s2,tblptrl
 17093  018130  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 17094  018134                     	if	0	;tblptru may be non-zero
 17095  018134                     	endif
 17096  018134                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17097  018134  0E00               	movlw	low (__mediumconst shr (0+16))
 17098  018136  6EF8               	movwf	tblptru,c
 17099  018138                     	endif
 17100  018138  0008               	tblrd		*
 17101  01813A  50F5               	movf	tablat,w,c
 17102  01813C  0101               	movlb	1	; () banked
 17103  01813E  6F23               	movwf	??_strncmp& (0+255),b
 17104  018140  6B24               	clrf	(??_strncmp+1)& (0+255),b
 17105  018142  1F23               	comf	??_strncmp& (0+255),f,b
 17106  018144  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 17107  018146  4B23               	infsnz	??_strncmp& (0+255),f,b
 17108  018148  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 17109  01814A  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17110  01814E  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17111  018152  50DF               	movf	indf2,w,c
 17112  018154  6F25               	movwf	(??_strncmp+2)& (0+255),b
 17113  018156  5125               	movf	(??_strncmp+2)& (0+255),w,b
 17114  018158  2523               	addwf	??_strncmp& (0+255),w,b
 17115  01815A  6F1D               	movwf	?_strncmp& (0+255),b
 17116  01815C  0E00               	movlw	0
 17117  01815E  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 17118  018160  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 17119                           
 17120                           ; BSR set to: 1
 17121  018162  0012               	return	
 17122  018164                     l2404:
 17123                           
 17124                           ; BSR set to: 1
 17125                           
 17126                           ; BSR set to: 1
 17127  018164  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 17128  018166  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 17129  018168  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 17130  01816A  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 17131  01816C                     l2402:
 17132                           
 17133                           ; BSR set to: 1
 17134  01816C  0101               	movlb	1	; () banked
 17135  01816E  0721               	decf	strncmp@len& (0+255),f,b
 17136  018170  A0D8               	btfss	status,0,c
 17137  018172  0722               	decf	(strncmp@len+1)& (0+255),f,b
 17138  018174  2921               	incf	strncmp@len& (0+255),w,b
 17139  018176  E1C1               	bnz	l19236
 17140  018178  2922               	incf	(strncmp@len+1)& (0+255),w,b
 17141  01817A  A4D8               	btfss	status,2,c
 17142  01817C  D7BE               	goto	l2403
 17143                           
 17144                           ; BSR set to: 1
 17145                           
 17146                           ; BSR set to: 1
 17147  01817E  0E00               	movlw	0
 17148  018180  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 17149  018182  0E00               	movlw	0
 17150  018184  6F1D               	movwf	?_strncmp& (0+255),b
 17151  018186  0012               	return	
 17152  018188                     __end_of_strncmp:
 17153                           	opt stack 0
 17154                           tblptru	equ	0xFF8
 17155                           tblptrh	equ	0xFF7
 17156                           tblptrl	equ	0xFF6
 17157                           tablat	equ	0xFF5
 17158                           intcon	equ	0xFF2
 17159                           postinc0	equ	0xFEE
 17160                           wreg	equ	0xFE8
 17161                           indf1	equ	0xFE7
 17162                           postdec1	equ	0xFE5
 17163                           fsr1h	equ	0xFE2
 17164                           fsr1l	equ	0xFE1
 17165                           indf2	equ	0xFDF
 17166                           postinc2	equ	0xFDE
 17167                           fsr2h	equ	0xFDA
 17168                           fsr2l	equ	0xFD9
 17169                           status	equ	0xFD8
 17170                           
 17171 ;; *************** function _strlen *****************
 17172 ;; Defined at:
 17173 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 17174 ;; Parameters:    Size  Location     Type
 17175 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 17176 ;;		 -> STR_109(25), line(64), 
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 17179 ;;		 -> STR_109(25), line(64), 
 17180 ;; Return value:  Size  Location     Type
 17181 ;;                  2   23[BANK1 ] unsigned int 
 17182 ;; Registers used:
 17183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17184 ;; Tracked objects:
 17185 ;;		On entry : 0/0
 17186 ;;		On exit  : 0/0
 17187 ;;		Unchanged: 0/0
 17188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17189 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17190 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17191 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17192 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17193 ;;Total ram usage:        6 bytes
 17194 ;; Hardware stack levels used:    1
 17195 ;; Hardware stack levels required when called:   13
 17196 ;; This function calls:
 17197 ;;		Nothing
 17198 ;; This function is called by:
 17199 ;;		_terminal_ringBufferPull
 17200 ;;		_strstr
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204                           	psect	text11
 17205  0188CA                     __ptext11:
 17206                           	opt stack 0
 17207  0188CA                     _strlen:
 17208                           	opt stack 16
 17209                           
 17210                           ; BSR set to: 1
 17211                           ;incstack = 0
 17212  0188CA  C117  F11B         	movff	strlen@s,strlen@cp
 17213  0188CE  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 17214  0188D2  D003               	goto	l2321
 17215  0188D4  0101               	movlb	1	; () banked
 17216  0188D6  4B1B               	infsnz	strlen@cp& (0+255),f,b
 17217  0188D8  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 17218  0188DA                     l2321:
 17219                           
 17220                           ; BSR set to: 1
 17221  0188DA  C11B  FFF6         	movff	strlen@cp,tblptrl
 17222  0188DE  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 17223  0188E2  0E00               	movlw	low (__mediumconst shr (0+16))
 17224  0188E4  6EF8               	movwf	tblptru,c
 17225  0188E6  0E0D               	movlw	(high __ramtop+-1)
 17226  0188E8  64F7               	cpfsgt	tblptrh,c
 17227  0188EA  D003               	bra	u25627
 17228  0188EC  0008               	tblrd		*
 17229  0188EE  50F5               	movf	tablat,w,c
 17230  0188F0  D005               	bra	u25620
 17231  0188F2                     u25627:
 17232  0188F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17233  0188F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17234  0188FA  50EF               	movf	indf0,w,c
 17235  0188FC                     u25620:
 17236  0188FC  0900               	iorlw	0
 17237  0188FE  A4D8               	btfss	status,2,c
 17238  018900  D7E9               	goto	l2322
 17239  018902  C117  F119         	movff	strlen@s,??_strlen
 17240  018906  C118  F11A         	movff	strlen@s+1,??_strlen+1
 17241  01890A  0101               	movlb	1	; () banked
 17242  01890C  1F19               	comf	??_strlen& (0+255),f,b
 17243  01890E  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 17244  018910  4B19               	infsnz	??_strlen& (0+255),f,b
 17245  018912  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 17246  018914  511B               	movf	strlen@cp& (0+255),w,b
 17247  018916  2519               	addwf	??_strlen& (0+255),w,b
 17248  018918  6F17               	movwf	?_strlen& (0+255),b
 17249  01891A  511C               	movf	(strlen@cp+1)& (0+255),w,b
 17250  01891C  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 17251  01891E  6F18               	movwf	(?_strlen+1)& (0+255),b
 17252  018920  0012               	return	
 17253  018922                     __end_of_strlen:
 17254                           	opt stack 0
 17255                           tblptru	equ	0xFF8
 17256                           tblptrh	equ	0xFF7
 17257                           tblptrl	equ	0xFF6
 17258                           tablat	equ	0xFF5
 17259                           intcon	equ	0xFF2
 17260                           indf0	equ	0xFEF
 17261                           postinc0	equ	0xFEE
 17262                           fsr0h	equ	0xFEA
 17263                           fsr0l	equ	0xFE9
 17264                           wreg	equ	0xFE8
 17265                           indf1	equ	0xFE7
 17266                           postdec1	equ	0xFE5
 17267                           fsr1h	equ	0xFE2
 17268                           fsr1l	equ	0xFE1
 17269                           indf2	equ	0xFDF
 17270                           postinc2	equ	0xFDE
 17271                           fsr2h	equ	0xFDA
 17272                           fsr2l	equ	0xFD9
 17273                           status	equ	0xFD8
 17274                           
 17275 ;; *************** function _strchr *****************
 17276 ;; Defined at:
 17277 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 17280 ;;		 -> NULL(0), line(64), 
 17281 ;;  chr             2   25[BANK1 ] int 
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;		None
 17284 ;; Return value:  Size  Location     Type
 17285 ;;                  2   23[BANK1 ] PTR unsigned char 
 17286 ;; Registers used:
 17287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17288 ;; Tracked objects:
 17289 ;;		On entry : 0/0
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17293 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17295 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17296 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17297 ;;Total ram usage:        5 bytes
 17298 ;; Hardware stack levels used:    1
 17299 ;; Hardware stack levels required when called:   13
 17300 ;; This function calls:
 17301 ;;		Nothing
 17302 ;; This function is called by:
 17303 ;;		_strstr
 17304 ;; This function uses a non-reentrant model
 17305 ;;
 17306                           
 17307                           	psect	text12
 17308  018E34                     __ptext12:
 17309                           	opt stack 0
 17310  018E34                     _strchr:
 17311                           	opt stack 14
 17312                           
 17313                           ; BSR set to: 1
 17314                           ;incstack = 0
 17315  018E34  C117  FFD9         	movff	strchr@ptr,fsr2l
 17316  018E38  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 17317  018E3C  0101               	movlb	1	; () banked
 17318  018E3E  5119               	movf	strchr@chr& (0+255),w,b
 17319  018E40  18DE               	xorwf	postinc2,w,c
 17320  018E42  A4D8               	btfss	status,2,c
 17321  018E44  D005               	goto	l2397
 17322                           
 17323                           ; BSR set to: 1
 17324  018E46  C117  F117         	movff	strchr@ptr,?_strchr
 17325  018E4A  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 17326                           
 17327                           ; BSR set to: 1
 17328  018E4E  0012               	return	
 17329  018E50                     l2397:
 17330                           
 17331                           ; BSR set to: 1
 17332                           
 17333                           ; BSR set to: 1
 17334  018E50  C117  FFD9         	movff	strchr@ptr,fsr2l
 17335  018E54  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 17336  018E58  4B17               	infsnz	strchr@ptr& (0+255),f,b
 17337  018E5A  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 17338  018E5C  50DF               	movf	indf2,w,c
 17339  018E5E  A4D8               	btfss	status,2,c
 17340  018E60  D7E9               	goto	_strchr
 17341                           
 17342                           ; BSR set to: 1
 17343                           
 17344                           ; BSR set to: 1
 17345  018E62  0E00               	movlw	0
 17346  018E64  6F17               	movwf	?_strchr& (0+255),b
 17347  018E66  0E00               	movlw	0
 17348  018E68  6F18               	movwf	(?_strchr+1)& (0+255),b
 17349  018E6A  0012               	return	
 17350  018E6C                     __end_of_strchr:
 17351                           	opt stack 0
 17352                           tblptru	equ	0xFF8
 17353                           tblptrh	equ	0xFF7
 17354                           tblptrl	equ	0xFF6
 17355                           tablat	equ	0xFF5
 17356                           intcon	equ	0xFF2
 17357                           indf0	equ	0xFEF
 17358                           postinc0	equ	0xFEE
 17359                           fsr0h	equ	0xFEA
 17360                           fsr0l	equ	0xFE9
 17361                           wreg	equ	0xFE8
 17362                           indf1	equ	0xFE7
 17363                           postdec1	equ	0xFE5
 17364                           fsr1h	equ	0xFE2
 17365                           fsr1l	equ	0xFE1
 17366                           indf2	equ	0xFDF
 17367                           postinc2	equ	0xFDE
 17368                           fsr2h	equ	0xFDA
 17369                           fsr2l	equ	0xFD9
 17370                           status	equ	0xFD8
 17371                           
 17372 ;; *************** function _strcpy *****************
 17373 ;; Defined at:
 17374 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 17375 ;; Parameters:    Size  Location     Type
 17376 ;;  to              2   23[BANK1 ] PTR unsigned char 
 17377 ;;		 -> ringBufferLUT@channel_name(22), 
 17378 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 17379 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 17380 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 17383 ;;		 -> ringBufferLUT@channel_name(22), 
 17384 ;; Return value:  Size  Location     Type
 17385 ;;                  2   23[BANK1 ] PTR unsigned char 
 17386 ;; Registers used:
 17387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17388 ;; Tracked objects:
 17389 ;;		On entry : 0/0
 17390 ;;		On exit  : 0/0
 17391 ;;		Unchanged: 0/0
 17392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17393 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17394 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17396 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17397 ;;Total ram usage:        6 bytes
 17398 ;; Hardware stack levels used:    1
 17399 ;; Hardware stack levels required when called:   13
 17400 ;; This function calls:
 17401 ;;		Nothing
 17402 ;; This function is called by:
 17403 ;;		_ringBufferLUT
 17404 ;; This function uses a non-reentrant model
 17405 ;;
 17406                           
 17407                           	psect	text13
 17408  018E6C                     __ptext13:
 17409                           	opt stack 0
 17410  018E6C                     _strcpy:
 17411                           	opt stack 15
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;incstack = 0
 17415  018E6C  C117  F11B         	movff	strcpy@to,strcpy@cp
 17416  018E70  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 17417  018E74  D005               	goto	l2315
 17418  018E76  0101               	movlb	1	; () banked
 17419  018E78  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 17420  018E7A  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 17421  018E7C  4B19               	infsnz	strcpy@from& (0+255),f,b
 17422  018E7E  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 17423  018E80                     l2315:
 17424                           
 17425                           ; BSR set to: 1
 17426  018E80  C119  FFF6         	movff	strcpy@from,tblptrl
 17427  018E84  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 17428  018E88                     	if	0	;tblptru may be non-zero
 17429  018E88                     	endif
 17430  018E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17431  018E88  0E00               	movlw	low (__mediumconst shr (0+16))
 17432  018E8A  6EF8               	movwf	tblptru,c
 17433  018E8C                     	endif
 17434  018E8C  C11B  FFD9         	movff	strcpy@cp,fsr2l
 17435  018E90  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 17436  018E94  0008               	tblrd		*
 17437  018E96  CFF5 FFDF          	movff	tablat,indf2
 17438  018E9A  50DF               	movf	indf2,w,c
 17439  018E9C  B4D8               	btfsc	status,2,c
 17440  018E9E  0012               	return	
 17441  018EA0  D7EA               	goto	l2316
 17442  018EA2                     __end_of_strcpy:
 17443                           	opt stack 0
 17444                           tblptru	equ	0xFF8
 17445                           tblptrh	equ	0xFF7
 17446                           tblptrl	equ	0xFF6
 17447                           tablat	equ	0xFF5
 17448                           intcon	equ	0xFF2
 17449                           indf0	equ	0xFEF
 17450                           postinc0	equ	0xFEE
 17451                           fsr0h	equ	0xFEA
 17452                           fsr0l	equ	0xFE9
 17453                           wreg	equ	0xFE8
 17454                           indf1	equ	0xFE7
 17455                           postdec1	equ	0xFE5
 17456                           fsr1h	equ	0xFE2
 17457                           fsr1l	equ	0xFE1
 17458                           indf2	equ	0xFDF
 17459                           postinc2	equ	0xFDE
 17460                           fsr2h	equ	0xFDA
 17461                           fsr2l	equ	0xFD9
 17462                           status	equ	0xFD8
 17463                           
 17464 ;; *************** function _strcmp *****************
 17465 ;; Defined at:
 17466 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 17467 ;; Parameters:    Size  Location     Type
 17468 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 17469 ;;		 -> line(64), 
 17470 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 17471 ;;		 -> STR_144(5), STR_142(9), STR_140(29), STR_138(34), 
 17472 ;;		 -> STR_136(33), STR_134(29), STR_132(17), STR_130(17), 
 17473 ;;		 -> STR_128(14), STR_126(19), STR_124(20), STR_122(11), 
 17474 ;;		 -> STR_120(17), STR_118(14), STR_116(16), STR_107(13), 
 17475 ;;		 -> STR_103(17), STR_100(14), STR_98(12), STR_96(16), 
 17476 ;;		 -> STR_94(15), STR_92(15), STR_90(21), STR_88(21), 
 17477 ;;		 -> STR_86(26), STR_84(14), STR_82(13), STR_80(18), 
 17478 ;;		 -> STR_78(15), STR_76(16), STR_73(17), STR_71(16), 
 17479 ;;		 -> STR_60(11), STR_57(10), STR_55(13), STR_53(11), 
 17480 ;;		 -> STR_50(4), STR_49(6), STR_47(16), STR_44(6), 
 17481 ;;		 -> STR_41(6), 
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;  r               1   28[BANK1 ] char 
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  2   23[BANK1 ] int 
 17486 ;; Registers used:
 17487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17488 ;; Tracked objects:
 17489 ;;		On entry : 0/0
 17490 ;;		On exit  : 0/0
 17491 ;;		Unchanged: 0/0
 17492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17493 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17494 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17495 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17496 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17497 ;;Total ram usage:        6 bytes
 17498 ;; Hardware stack levels used:    1
 17499 ;; Hardware stack levels required when called:   13
 17500 ;; This function calls:
 17501 ;;		Nothing
 17502 ;; This function is called by:
 17503 ;;		_ringBufferLUT
 17504 ;; This function uses a non-reentrant model
 17505 ;;
 17506                           
 17507                           	psect	text14
 17508  0189C6                     __ptext14:
 17509                           	opt stack 0
 17510  0189C6                     _strcmp:
 17511                           	opt stack 15
 17512                           
 17513                           ;incstack = 0
 17514  0189C6  D005               	goto	l2307
 17515  0189C8  0101               	movlb	1	; () banked
 17516  0189CA  4B17               	infsnz	strcmp@s1& (0+255),f,b
 17517  0189CC  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 17518  0189CE  4B19               	infsnz	strcmp@s2& (0+255),f,b
 17519  0189D0  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 17520  0189D2                     l2307:
 17521                           
 17522                           ; BSR set to: 1
 17523  0189D2  C117  FFD9         	movff	strcmp@s1,fsr2l
 17524  0189D6  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 17525  0189DA  50DF               	movf	indf2,w,c
 17526  0189DC  0101               	movlb	1	; () banked
 17527  0189DE  6F1B               	movwf	??_strcmp& (0+255),b
 17528  0189E0  C119  FFF6         	movff	strcmp@s2,tblptrl
 17529  0189E4  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 17530  0189E8                     	if	0	;tblptru may be non-zero
 17531  0189E8                     	endif
 17532  0189E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17533  0189E8  0E00               	movlw	low (__mediumconst shr (0+16))
 17534  0189EA  6EF8               	movwf	tblptru,c
 17535  0189EC                     	endif
 17536  0189EC  0008               	tblrd		*
 17537  0189EE  50F5               	movf	tablat,w,c
 17538  0189F0  0800               	sublw	0
 17539  0189F2  251B               	addwf	??_strcmp& (0+255),w,b
 17540  0189F4  6F1C               	movwf	strcmp@r& (0+255),b
 17541  0189F6  511C               	movf	strcmp@r& (0+255),w,b
 17542  0189F8  A4D8               	btfss	status,2,c
 17543  0189FA  D007               	goto	u25740
 17544                           
 17545                           ; BSR set to: 1
 17546  0189FC  C117  FFD9         	movff	strcmp@s1,fsr2l
 17547  018A00  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 17548  018A04  50DF               	movf	indf2,w,c
 17549  018A06  A4D8               	btfss	status,2,c
 17550  018A08  D7DF               	goto	l2308
 17551  018A0A                     u25740:
 17552                           
 17553                           ; BSR set to: 1
 17554                           
 17555                           ; BSR set to: 1
 17556                           
 17557                           ; BSR set to: 1
 17558  018A0A  511C               	movf	strcmp@r& (0+255),w,b
 17559  018A0C  6F17               	movwf	?_strcmp& (0+255),b
 17560  018A0E  6B18               	clrf	(?_strcmp+1)& (0+255),b
 17561  018A10  BF17               	btfsc	?_strcmp& (0+255),7,b
 17562  018A12  0718               	decf	(?_strcmp+1)& (0+255),f,b
 17563  018A14  0012               	return	
 17564  018A16                     __end_of_strcmp:
 17565                           	opt stack 0
 17566                           tblptru	equ	0xFF8
 17567                           tblptrh	equ	0xFF7
 17568                           tblptrl	equ	0xFF6
 17569                           tablat	equ	0xFF5
 17570                           intcon	equ	0xFF2
 17571                           indf0	equ	0xFEF
 17572                           postinc0	equ	0xFEE
 17573                           fsr0h	equ	0xFEA
 17574                           fsr0l	equ	0xFE9
 17575                           wreg	equ	0xFE8
 17576                           indf1	equ	0xFE7
 17577                           postdec1	equ	0xFE5
 17578                           fsr1h	equ	0xFE2
 17579                           fsr1l	equ	0xFE1
 17580                           indf2	equ	0xFDF
 17581                           postinc2	equ	0xFDE
 17582                           fsr2h	equ	0xFDA
 17583                           fsr2l	equ	0xFD9
 17584                           status	equ	0xFD8
 17585                           
 17586 ;; *************** function _getUserID *****************
 17587 ;; Defined at:
 17588 ;;		line 65 in file "device_IDs.c"
 17589 ;; Parameters:    Size  Location     Type
 17590 ;;  inputUserID     1    wreg     unsigned char 
 17591 ;; Auto vars:     Size  Location     Type
 17592 ;;  inputUserID     1   36[BANK1 ] unsigned char 
 17593 ;;  initialOffse    4   37[BANK1 ] unsigned long 
 17594 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 17595 ;; Return value:  Size  Location     Type
 17596 ;;                  2   34[BANK1 ] unsigned int 
 17597 ;; Registers used:
 17598 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17599 ;; Tracked objects:
 17600 ;;		On entry : 0/0
 17601 ;;		On exit  : 0/0
 17602 ;;		Unchanged: 0/0
 17603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17604 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17605 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17607 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17608 ;;Total ram usage:        8 bytes
 17609 ;; Hardware stack levels used:    1
 17610 ;; Hardware stack levels required when called:   15
 17611 ;; This function calls:
 17612 ;;		_FLASH_ReadWord
 17613 ;; This function is called by:
 17614 ;;		_ringBufferLUT
 17615 ;; This function uses a non-reentrant model
 17616 ;;
 17617                           
 17618                           	psect	text15
 17619  018CB8                     __ptext15:
 17620                           	opt stack 0
 17621  018CB8                     _getUserID:
 17622                           	opt stack 13
 17623                           
 17624                           ; BSR set to: 1
 17625                           ;incstack = 0
 17626                           ;getUserID@inputUserID stored from wreg
 17627  018CB8  0101               	movlb	1	; () banked
 17628  018CBA  6F24               	movwf	getUserID@inputUserID& (0+255),b
 17629                           
 17630                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 17631  018CBC  0E00               	movlw	0
 17632  018CBE  0101               	movlb	1	; () banked
 17633  018CC0  6F25               	movwf	getUserID@initialOffset& (0+255),b
 17634  018CC2  0E00               	movlw	0
 17635  018CC4  6F26               	movwf	(getUserID@initialOffset+1)& (0+255),b
 17636  018CC6  0E20               	movlw	32
 17637  018CC8  6F27               	movwf	(getUserID@initialOffset+2)& (0+255),b
 17638  018CCA  0E00               	movlw	0
 17639  018CCC  6F28               	movwf	(getUserID@initialOffset+3)& (0+255),b
 17640                           
 17641                           ; BSR set to: 1
 17642                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 17643  018CCE  5124               	movf	getUserID@inputUserID& (0+255),w,b
 17644  018CD0  0D02               	mullw	2
 17645  018CD2  CFF3 F129          	movff	prodl,getUserID@IDOffset
 17646                           
 17647                           ; BSR set to: 1
 17648                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 17649  018CD6  5129               	movf	getUserID@IDOffset& (0+255),w,b
 17650  018CD8  2525               	addwf	getUserID@initialOffset& (0+255),w,b
 17651  018CDA  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 17652  018CDC  0E00               	movlw	0
 17653  018CDE  2126               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 17654  018CE0  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 17655  018CE2  0E00               	movlw	0
 17656  018CE4  2127               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 17657  018CE6  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 17658  018CE8  0E00               	movlw	0
 17659  018CEA  2128               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 17660  018CEC  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 17661  018CEE  EC7E  F0C6         	call	_FLASH_ReadWord	;wreg free
 17662  018CF2  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 17663  018CF6  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 17664  018CFA  0012               	return	
 17665  018CFC                     __end_of_getUserID:
 17666                           	opt stack 0
 17667                           tblptru	equ	0xFF8
 17668                           tblptrh	equ	0xFF7
 17669                           tblptrl	equ	0xFF6
 17670                           tablat	equ	0xFF5
 17671                           prodl	equ	0xFF3
 17672                           intcon	equ	0xFF2
 17673                           indf0	equ	0xFEF
 17674                           postinc0	equ	0xFEE
 17675                           fsr0h	equ	0xFEA
 17676                           fsr0l	equ	0xFE9
 17677                           wreg	equ	0xFE8
 17678                           indf1	equ	0xFE7
 17679                           postdec1	equ	0xFE5
 17680                           fsr1h	equ	0xFE2
 17681                           fsr1l	equ	0xFE1
 17682                           indf2	equ	0xFDF
 17683                           postinc2	equ	0xFDE
 17684                           fsr2h	equ	0xFDA
 17685                           fsr2l	equ	0xFD9
 17686                           status	equ	0xFD8
 17687                           
 17688 ;; *************** function _getMinorRevisionID *****************
 17689 ;; Defined at:
 17690 ;;		line 23 in file "device_IDs.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;		None
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 17695 ;; Return value:  Size  Location     Type
 17696 ;;                  1    wreg      unsigned char 
 17697 ;; Registers used:
 17698 ;;		wreg, status,2, status,0, cstack
 17699 ;; Tracked objects:
 17700 ;;		On entry : 0/0
 17701 ;;		On exit  : 0/0
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17705 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17707 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17708 ;;Total ram usage:        2 bytes
 17709 ;; Hardware stack levels used:    1
 17710 ;; Hardware stack levels required when called:   15
 17711 ;; This function calls:
 17712 ;;		_FLASH_ReadWord
 17713 ;; This function is called by:
 17714 ;;		_ringBufferLUT
 17715 ;; This function uses a non-reentrant model
 17716 ;;
 17717                           
 17718                           	psect	text16
 17719  0190D0                     __ptext16:
 17720                           	opt stack 0
 17721  0190D0                     _getMinorRevisionID:
 17722                           	opt stack 13
 17723                           
 17724                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 17725                           
 17726                           ;incstack = 0
 17727  0190D0  0EFC               	movlw	252
 17728  0190D2  0101               	movlb	1	; () banked
 17729  0190D4  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 17730  0190D6  0EFF               	movlw	255
 17731  0190D8  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 17732  0190DA  0E3F               	movlw	63
 17733  0190DC  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 17734  0190DE  0E00               	movlw	0
 17735  0190E0  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 17736  0190E2  EC7E  F0C6         	call	_FLASH_ReadWord	;wreg free
 17737  0190E6  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 17738  0190EA  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 17739                           
 17740                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 17741  0190EE  0101               	movlb	1	; () banked
 17742  0190F0  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 17743  0190F2  0B1F               	andlw	31
 17744  0190F4  0012               	return	
 17745  0190F6                     __end_of_getMinorRevisionID:
 17746                           	opt stack 0
 17747                           tblptru	equ	0xFF8
 17748                           tblptrh	equ	0xFF7
 17749                           tblptrl	equ	0xFF6
 17750                           tablat	equ	0xFF5
 17751                           prodl	equ	0xFF3
 17752                           intcon	equ	0xFF2
 17753                           indf0	equ	0xFEF
 17754                           postinc0	equ	0xFEE
 17755                           fsr0h	equ	0xFEA
 17756                           fsr0l	equ	0xFE9
 17757                           wreg	equ	0xFE8
 17758                           indf1	equ	0xFE7
 17759                           postdec1	equ	0xFE5
 17760                           fsr1h	equ	0xFE2
 17761                           fsr1l	equ	0xFE1
 17762                           indf2	equ	0xFDF
 17763                           postinc2	equ	0xFDE
 17764                           fsr2h	equ	0xFDA
 17765                           fsr2l	equ	0xFD9
 17766                           status	equ	0xFD8
 17767                           
 17768 ;; *************** function _getMajorRevisionID *****************
 17769 ;; Defined at:
 17770 ;;		line 12 in file "device_IDs.c"
 17771 ;; Parameters:    Size  Location     Type
 17772 ;;		None
 17773 ;; Auto vars:     Size  Location     Type
 17774 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 17775 ;; Return value:  Size  Location     Type
 17776 ;;                  1    wreg      unsigned char 
 17777 ;; Registers used:
 17778 ;;		wreg, status,2, status,0, cstack
 17779 ;; Tracked objects:
 17780 ;;		On entry : 0/0
 17781 ;;		On exit  : 0/0
 17782 ;;		Unchanged: 0/0
 17783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17785 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17786 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17787 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17788 ;;Total ram usage:        5 bytes
 17789 ;; Hardware stack levels used:    1
 17790 ;; Hardware stack levels required when called:   15
 17791 ;; This function calls:
 17792 ;;		_FLASH_ReadWord
 17793 ;; This function is called by:
 17794 ;;		_ringBufferLUT
 17795 ;; This function uses a non-reentrant model
 17796 ;;
 17797                           
 17798                           	psect	text17
 17799  018DBC                     __ptext17:
 17800                           	opt stack 0
 17801  018DBC                     _getMajorRevisionID:
 17802                           	opt stack 13
 17803                           
 17804                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 17805                           
 17806                           ; BSR set to: 1
 17807                           ;incstack = 0
 17808  018DBC  0EFC               	movlw	252
 17809  018DBE  0101               	movlb	1	; () banked
 17810  018DC0  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 17811  018DC2  0EFF               	movlw	255
 17812  018DC4  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 17813  018DC6  0E3F               	movlw	63
 17814  018DC8  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 17815  018DCA  0E00               	movlw	0
 17816  018DCC  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 17817  018DCE  EC7E  F0C6         	call	_FLASH_ReadWord	;wreg free
 17818  018DD2  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 17819  018DD6  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 17820                           
 17821                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 17822  018DDA  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 17823  018DDE  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 17824  018DE2  0E06               	movlw	6
 17825  018DE4  0101               	movlb	1	; () banked
 17826  018DE6  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 17827  018DE8                     u25775:
 17828  018DE8  90D8               	bcf	status,0,c
 17829  018DEA  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 17830  018DEC  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 17831  018DEE  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 17832  018DF0  D7FB               	goto	u25775
 17833  018DF2  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 17834  018DF4  0B1F               	andlw	31
 17835  018DF6  0012               	return	
 17836  018DF8                     __end_of_getMajorRevisionID:
 17837                           	opt stack 0
 17838                           tblptru	equ	0xFF8
 17839                           tblptrh	equ	0xFF7
 17840                           tblptrl	equ	0xFF6
 17841                           tablat	equ	0xFF5
 17842                           prodl	equ	0xFF3
 17843                           intcon	equ	0xFF2
 17844                           indf0	equ	0xFEF
 17845                           postinc0	equ	0xFEE
 17846                           fsr0h	equ	0xFEA
 17847                           fsr0l	equ	0xFE9
 17848                           wreg	equ	0xFE8
 17849                           indf1	equ	0xFE7
 17850                           postdec1	equ	0xFE5
 17851                           fsr1h	equ	0xFE2
 17852                           fsr1l	equ	0xFE1
 17853                           indf2	equ	0xFDF
 17854                           postinc2	equ	0xFDE
 17855                           fsr2h	equ	0xFDA
 17856                           fsr2l	equ	0xFD9
 17857                           status	equ	0xFD8
 17858                           
 17859 ;; *************** function _getDeviceIDString *****************
 17860 ;; Defined at:
 17861 ;;		line 34 in file "device_IDs.c"
 17862 ;; Parameters:    Size  Location     Type
 17863 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 17864 ;; Auto vars:     Size  Location     Type
 17865 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 17866 ;;		 -> STR_153(10), STR_152(13), STR_151(12), 
 17867 ;; Return value:  Size  Location     Type
 17868 ;;                  2   36[BANK1 ] PTR inline unsigned char
 17869 ;; Registers used:
 17870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17871 ;; Tracked objects:
 17872 ;;		On entry : 0/0
 17873 ;;		On exit  : 0/0
 17874 ;;		Unchanged: 0/0
 17875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17876 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17877 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17878 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17879 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17880 ;;Total ram usage:       10 bytes
 17881 ;; Hardware stack levels used:    1
 17882 ;; Hardware stack levels required when called:   13
 17883 ;; This function calls:
 17884 ;;		Nothing
 17885 ;; This function is called by:
 17886 ;;		_ringBufferLUT
 17887 ;; This function uses a non-reentrant model
 17888 ;;
 17889                           
 17890                           	psect	text18
 17891  01880A                     __ptext18:
 17892                           	opt stack 0
 17893  01880A                     _getDeviceIDString:
 17894                           	opt stack 15
 17895                           
 17896                           ;device_IDs.c: 37: const char *strings[] = {
 17897                           ;device_IDs.c: 39: "PIC18F67K40",
 17898                           ;device_IDs.c: 40: "PIC18LF67K40",
 17899                           ;device_IDs.c: 41: "Undefined"
 17900                           ;device_IDs.c: 43: };
 17901                           
 17902                           ; BSR set to: 1
 17903                           ;incstack = 0
 17904  01880A  EE22  F0E5         	lfsr	2,getDeviceIDString@F17550
 17905  01880E  EE11  F028         	lfsr	1,getDeviceIDString@strings
 17906  018812  0E05               	movlw	5
 17907  018814                     u25761:
 17908  018814  CFDB FFE3          	movff	plusw2,plusw1
 17909  018818  06E8               	decf	wreg,f,c
 17910  01881A  E2FC               	bc	u25761
 17911                           
 17912                           ;device_IDs.c: 47: switch (inputDevID) {
 17913  01881C  D00F               	goto	l1381
 17914  01881E                     
 17915                           ;device_IDs.c: 50: return strings[0];
 17916  01881E  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 17917  018822  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 17918                           
 17919                           ;device_IDs.c: 51: break;
 17920  018826  0012               	return	
 17921  018828                     
 17922                           ;device_IDs.c: 54: return strings[1];
 17923  018828  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 17924  01882C  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 17925                           
 17926                           ;device_IDs.c: 55: break;
 17927  018830  0012               	return	
 17928  018832                     
 17929                           ;device_IDs.c: 58: return strings[2];
 17930  018832  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 17931  018836  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 17932                           
 17933                           ;device_IDs.c: 61: }
 17934                           
 17935                           ;device_IDs.c: 59: break;
 17936  01883A  0012               	return	
 17937  01883C                     l1381:
 17938  01883C  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 17939  018840  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 17940                           
 17941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 17942                           ; Switch size 1, requested type "space"
 17943                           ; Number of cases is 2, Range of values is 106 to 107
 17944                           ; switch strategies available:
 17945                           ; Name         Instructions Cycles
 17946                           ; simple_byte            7     4 (average)
 17947                           ;	Chosen strategy is simple_byte
 17948  018844  0101               	movlb	1	; () banked
 17949  018846  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 17950  018848  0A6A               	xorlw	106	; case 106
 17951  01884A  B4D8               	btfsc	status,2,c
 17952  01884C  D004               	goto	l20154
 17953  01884E  0A01               	xorlw	1	; case 107
 17954  018850  B4D8               	btfsc	status,2,c
 17955  018852  D006               	goto	l20156
 17956  018854  D7EE               	goto	l1386
 17957  018856                     l20154:
 17958                           
 17959                           ; BSR set to: 1
 17960                           ; Switch size 1, requested type "space"
 17961                           ; Number of cases is 1, Range of values is 192 to 192
 17962                           ; switch strategies available:
 17963                           ; Name         Instructions Cycles
 17964                           ; simple_byte            4     3 (average)
 17965                           ;	Chosen strategy is simple_byte
 17966  018856  5126               	movf	??_getDeviceIDString& (0+255),w,b
 17967  018858  0AC0               	xorlw	192	; case 192
 17968  01885A  B4D8               	btfsc	status,2,c
 17969  01885C  D7E0               	goto	l1382
 17970  01885E  D7E9               	goto	l1386
 17971  018860                     l20156:
 17972                           
 17973                           ; BSR set to: 1
 17974                           ; Switch size 1, requested type "space"
 17975                           ; Number of cases is 1, Range of values is 32 to 32
 17976                           ; switch strategies available:
 17977                           ; Name         Instructions Cycles
 17978                           ; simple_byte            4     3 (average)
 17979                           ;	Chosen strategy is simple_byte
 17980  018860  5126               	movf	??_getDeviceIDString& (0+255),w,b
 17981  018862  0A20               	xorlw	32	; case 32
 17982  018864  B4D8               	btfsc	status,2,c
 17983  018866  D7E0               	goto	l1385
 17984  018868  D7E4               	goto	l1386
 17985  01886A                     __end_of_getDeviceIDString:
 17986                           	opt stack 0
 17987                           tblptru	equ	0xFF8
 17988                           tblptrh	equ	0xFF7
 17989                           tblptrl	equ	0xFF6
 17990                           tablat	equ	0xFF5
 17991                           prodl	equ	0xFF3
 17992                           intcon	equ	0xFF2
 17993                           indf0	equ	0xFEF
 17994                           postinc0	equ	0xFEE
 17995                           fsr0h	equ	0xFEA
 17996                           fsr0l	equ	0xFE9
 17997                           wreg	equ	0xFE8
 17998                           indf1	equ	0xFE7
 17999                           postdec1	equ	0xFE5
 18000                           plusw1	equ	0xFE3
 18001                           fsr1h	equ	0xFE2
 18002                           fsr1l	equ	0xFE1
 18003                           indf2	equ	0xFDF
 18004                           postinc2	equ	0xFDE
 18005                           plusw2	equ	0xFDB
 18006                           fsr2h	equ	0xFDA
 18007                           fsr2l	equ	0xFD9
 18008                           status	equ	0xFD8
 18009                           
 18010 ;; *************** function _getDeviceID *****************
 18011 ;; Defined at:
 18012 ;;		line 4 in file "device_IDs.c"
 18013 ;; Parameters:    Size  Location     Type
 18014 ;;		None
 18015 ;; Auto vars:     Size  Location     Type
 18016 ;;		None
 18017 ;; Return value:  Size  Location     Type
 18018 ;;                  2   34[BANK1 ] unsigned int 
 18019 ;; Registers used:
 18020 ;;		wreg, status,2, status,0, cstack
 18021 ;; Tracked objects:
 18022 ;;		On entry : 0/0
 18023 ;;		On exit  : 0/0
 18024 ;;		Unchanged: 0/0
 18025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18026 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18029 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18030 ;;Total ram usage:        2 bytes
 18031 ;; Hardware stack levels used:    1
 18032 ;; Hardware stack levels required when called:   15
 18033 ;; This function calls:
 18034 ;;		_FLASH_ReadWord
 18035 ;; This function is called by:
 18036 ;;		_ringBufferLUT
 18037 ;; This function uses a non-reentrant model
 18038 ;;
 18039                           
 18040                           	psect	text19
 18041  019188                     __ptext19:
 18042                           	opt stack 0
 18043  019188                     _getDeviceID:
 18044                           	opt stack 13
 18045                           
 18046                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 18047                           
 18048                           ;incstack = 0
 18049  019188  0EFE               	movlw	254
 18050  01918A  0101               	movlb	1	; () banked
 18051  01918C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 18052  01918E  0EFF               	movlw	255
 18053  019190  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 18054  019192  0E3F               	movlw	63
 18055  019194  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 18056  019196  0E00               	movlw	0
 18057  019198  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 18058  01919A  EC7E  F0C6         	call	_FLASH_ReadWord	;wreg free
 18059  01919E  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 18060  0191A2  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 18061  0191A6  0012               	return	
 18062  0191A8                     __end_of_getDeviceID:
 18063                           	opt stack 0
 18064                           tblptru	equ	0xFF8
 18065                           tblptrh	equ	0xFF7
 18066                           tblptrl	equ	0xFF6
 18067                           tablat	equ	0xFF5
 18068                           prodl	equ	0xFF3
 18069                           intcon	equ	0xFF2
 18070                           indf0	equ	0xFEF
 18071                           postinc0	equ	0xFEE
 18072                           fsr0h	equ	0xFEA
 18073                           fsr0l	equ	0xFE9
 18074                           wreg	equ	0xFE8
 18075                           indf1	equ	0xFE7
 18076                           postdec1	equ	0xFE5
 18077                           plusw1	equ	0xFE3
 18078                           fsr1h	equ	0xFE2
 18079                           fsr1l	equ	0xFE1
 18080                           indf2	equ	0xFDF
 18081                           postinc2	equ	0xFDE
 18082                           plusw2	equ	0xFDB
 18083                           fsr2h	equ	0xFDA
 18084                           fsr2l	equ	0xFD9
 18085                           status	equ	0xFD8
 18086                           
 18087 ;; *************** function _FLASH_ReadWord *****************
 18088 ;; Defined at:
 18089 ;;		line 71 in file "mcc_generated_files/memory.c"
 18090 ;; Parameters:    Size  Location     Type
 18091 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 18092 ;; Auto vars:     Size  Location     Type
 18093 ;;		None
 18094 ;; Return value:  Size  Location     Type
 18095 ;;                  2   27[BANK1 ] unsigned int 
 18096 ;; Registers used:
 18097 ;;		wreg, status,2, status,0, cstack
 18098 ;; Tracked objects:
 18099 ;;		On entry : 0/0
 18100 ;;		On exit  : 0/0
 18101 ;;		Unchanged: 0/0
 18102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18103 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18105 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18106 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18107 ;;Total ram usage:        7 bytes
 18108 ;; Hardware stack levels used:    1
 18109 ;; Hardware stack levels required when called:   14
 18110 ;; This function calls:
 18111 ;;		_FLASH_ReadByte
 18112 ;; This function is called by:
 18113 ;;		_getDeviceID
 18114 ;;		_getMajorRevisionID
 18115 ;;		_getMinorRevisionID
 18116 ;;		_getUserID
 18117 ;; This function uses a non-reentrant model
 18118 ;;
 18119                           
 18120                           	psect	text20
 18121  018CFC                     __ptext20:
 18122                           	opt stack 0
 18123  018CFC                     _FLASH_ReadWord:
 18124                           	opt stack 13
 18125                           
 18126                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 18127                           
 18128                           ;incstack = 0
 18129  018CFC  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 18130  018D00  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 18131  018D04  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 18132  018D08  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 18133  018D0C  EC0D  F0C9         	call	_FLASH_ReadByte	;wreg free
 18134  018D10  0101               	movlb	1	; () banked
 18135  018D12  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 18136  018D14  0E01               	movlw	1
 18137  018D16  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 18138  018D18  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 18139  018D1A  0E00               	movlw	0
 18140  018D1C  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 18141  018D1E  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 18142  018D20  0E00               	movlw	0
 18143  018D22  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 18144  018D24  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 18145  018D26  0E00               	movlw	0
 18146  018D28  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 18147  018D2A  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 18148  018D2C  EC0D  F0C9         	call	_FLASH_ReadByte	;wreg free
 18149  018D30  0101               	movlb	1	; () banked
 18150  018D32  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 18151  018D34  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 18152  018D36  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 18153  018D38  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 18154  018D3C  0012               	return	
 18155  018D3E                     __end_of_FLASH_ReadWord:
 18156                           	opt stack 0
 18157                           tblptru	equ	0xFF8
 18158                           tblptrh	equ	0xFF7
 18159                           tblptrl	equ	0xFF6
 18160                           tablat	equ	0xFF5
 18161                           prodl	equ	0xFF3
 18162                           intcon	equ	0xFF2
 18163                           indf0	equ	0xFEF
 18164                           postinc0	equ	0xFEE
 18165                           fsr0h	equ	0xFEA
 18166                           fsr0l	equ	0xFE9
 18167                           wreg	equ	0xFE8
 18168                           indf1	equ	0xFE7
 18169                           postdec1	equ	0xFE5
 18170                           plusw1	equ	0xFE3
 18171                           fsr1h	equ	0xFE2
 18172                           fsr1l	equ	0xFE1
 18173                           indf2	equ	0xFDF
 18174                           postinc2	equ	0xFDE
 18175                           plusw2	equ	0xFDB
 18176                           fsr2h	equ	0xFDA
 18177                           fsr2l	equ	0xFD9
 18178                           status	equ	0xFD8
 18179                           
 18180 ;; *************** function _FLASH_ReadByte *****************
 18181 ;; Defined at:
 18182 ;;		line 59 in file "mcc_generated_files/memory.c"
 18183 ;; Parameters:    Size  Location     Type
 18184 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 18185 ;; Auto vars:     Size  Location     Type
 18186 ;;		None
 18187 ;; Return value:  Size  Location     Type
 18188 ;;                  1    wreg      unsigned char 
 18189 ;; Registers used:
 18190 ;;		wreg, status,2
 18191 ;; Tracked objects:
 18192 ;;		On entry : 0/0
 18193 ;;		On exit  : 0/0
 18194 ;;		Unchanged: 0/0
 18195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18196 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18199 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18200 ;;Total ram usage:        4 bytes
 18201 ;; Hardware stack levels used:    1
 18202 ;; Hardware stack levels required when called:   13
 18203 ;; This function calls:
 18204 ;;		Nothing
 18205 ;; This function is called by:
 18206 ;;		_FLASH_ReadWord
 18207 ;;		_FLASH_WriteByte
 18208 ;; This function uses a non-reentrant model
 18209 ;;
 18210                           
 18211                           	psect	text21
 18212  01921A                     __ptext21:
 18213                           	opt stack 0
 18214  01921A                     _FLASH_ReadByte:
 18215                           	opt stack 13
 18216                           
 18217                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 18218                           
 18219                           ; BSR set to: 1
 18220                           ;incstack = 0
 18221  01921A  5077               	movf	3959,w,c	;volsfr
 18222  01921C  0B3F               	andlw	-193
 18223  01921E  0980               	iorlw	128
 18224  019220  6E77               	movwf	3959,c	;volsfr
 18225                           
 18226                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 18227  019222  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 18228                           
 18229                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 18230  019226  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 18231                           
 18232                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 18233  01922A  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 18234  01922E  0008               	tblrd		*	;# 
 18235                           
 18236                           ;memory.c: 68: return (TABLAT);
 18237  019230  50F5               	movf	tablat,w,c	;volatile
 18238  019232  0012               	return	
 18239  019234                     __end_of_FLASH_ReadByte:
 18240                           	opt stack 0
 18241                           tblptru	equ	0xFF8
 18242                           tblptrh	equ	0xFF7
 18243                           tblptrl	equ	0xFF6
 18244                           tablat	equ	0xFF5
 18245                           prodl	equ	0xFF3
 18246                           intcon	equ	0xFF2
 18247                           indf0	equ	0xFEF
 18248                           postinc0	equ	0xFEE
 18249                           fsr0h	equ	0xFEA
 18250                           fsr0l	equ	0xFE9
 18251                           wreg	equ	0xFE8
 18252                           indf1	equ	0xFE7
 18253                           postdec1	equ	0xFE5
 18254                           plusw1	equ	0xFE3
 18255                           fsr1h	equ	0xFE2
 18256                           fsr1l	equ	0xFE1
 18257                           indf2	equ	0xFDF
 18258                           postinc2	equ	0xFDE
 18259                           plusw2	equ	0xFDB
 18260                           fsr2h	equ	0xFDA
 18261                           fsr2l	equ	0xFD9
 18262                           status	equ	0xFD8
 18263                           
 18264 ;; *************** function _getCauseOfResetString *****************
 18265 ;; Defined at:
 18266 ;;		line 81 in file "cause_of_reset.c"
 18267 ;; Parameters:    Size  Location     Type
 18268 ;;  r               1    wreg     enum E17455
 18269 ;; Auto vars:     Size  Location     Type
 18270 ;;  r               1   25[BANK1 ] enum E17455
 18271 ;; Return value:  Size  Location     Type
 18272 ;;                  2   23[BANK1 ] PTR inline unsigned char
 18273 ;; Registers used:
 18274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18275 ;; Tracked objects:
 18276 ;;		On entry : 0/0
 18277 ;;		On exit  : 0/0
 18278 ;;		Unchanged: 0/0
 18279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18280 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18281 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18283 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18284 ;;Total ram usage:        3 bytes
 18285 ;; Hardware stack levels used:    1
 18286 ;; Hardware stack levels required when called:   13
 18287 ;; This function calls:
 18288 ;;		Nothing
 18289 ;; This function is called by:
 18290 ;;		_ringBufferLUT
 18291 ;; This function uses a non-reentrant model
 18292 ;;
 18293                           
 18294                           	psect	text22
 18295  018F72                     __ptext22:
 18296                           	opt stack 0
 18297  018F72                     _getCauseOfResetString:
 18298                           	opt stack 15
 18299                           
 18300                           ;incstack = 0
 18301                           ;getCauseOfResetString@r stored from wreg
 18302  018F72  0101               	movlb	1	; () banked
 18303  018F74  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 18304                           
 18305                           ;cause_of_reset.c: 84: static char *strings[] = {
 18306                           ;cause_of_reset.c: 85: "Undefined Reset",
 18307                           ;cause_of_reset.c: 86: "Power On Reset",
 18308                           ;cause_of_reset.c: 87: "Brown Out Reset",
 18309                           ;cause_of_reset.c: 88: "Master Clear Reset",
 18310                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 18311                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 18312                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 18313                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 18314                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 18315                           ;cause_of_reset.c: 94: };
 18316  018F76  0E09               	movlw	9
 18317  018F78  0101               	movlb	1	; () banked
 18318  018F7A  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 18319  018F7C  D00D               	goto	l1413
 18320                           
 18321                           ; BSR set to: 1
 18322                           ;cause_of_reset.c: 99: return strings[r];
 18323  018F7E  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 18324  018F80  0D02               	mullw	2
 18325  018F82  0ED3               	movlw	low getCauseOfResetString@strings
 18326  018F84  24F3               	addwf	prodl,w,c
 18327  018F86  6ED9               	movwf	fsr2l,c
 18328  018F88  0E02               	movlw	high getCauseOfResetString@strings
 18329  018F8A  20F4               	addwfc	prodh,w,c
 18330  018F8C  6EDA               	movwf	fsr2h,c
 18331  018F8E  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 18332  018F92  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 18333                           
 18334                           ; BSR set to: 1
 18335                           ;cause_of_reset.c: 101: }
 18336                           
 18337                           ; BSR set to: 1
 18338  018F96  0012               	return	
 18339  018F98                     l1413:
 18340                           
 18341                           ; BSR set to: 1
 18342                           ;cause_of_reset.c: 103: else {
 18343                           ;cause_of_reset.c: 105: return "Undefined Reset";
 18344                           
 18345                           ; BSR set to: 1
 18346  018F98  0EEE               	movlw	low STR_154
 18347  018F9A  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 18348  018F9C  0EFD               	movlw	high STR_154
 18349  018F9E  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 18350                           
 18351                           ; BSR set to: 1
 18352  018FA0  0012               	return	
 18353  018FA2                     __end_of_getCauseOfResetString:
 18354                           	opt stack 0
 18355                           tblptru	equ	0xFF8
 18356                           tblptrh	equ	0xFF7
 18357                           tblptrl	equ	0xFF6
 18358                           tablat	equ	0xFF5
 18359                           prodh	equ	0xFF4
 18360                           prodl	equ	0xFF3
 18361                           intcon	equ	0xFF2
 18362                           indf0	equ	0xFEF
 18363                           postinc0	equ	0xFEE
 18364                           fsr0h	equ	0xFEA
 18365                           fsr0l	equ	0xFE9
 18366                           wreg	equ	0xFE8
 18367                           indf1	equ	0xFE7
 18368                           postdec1	equ	0xFE5
 18369                           plusw1	equ	0xFE3
 18370                           fsr1h	equ	0xFE2
 18371                           fsr1l	equ	0xFE1
 18372                           indf2	equ	0xFDF
 18373                           postinc2	equ	0xFDE
 18374                           postdec2	equ	0xFDD
 18375                           plusw2	equ	0xFDB
 18376                           fsr2h	equ	0xFDA
 18377                           fsr2l	equ	0xFD9
 18378                           status	equ	0xFD8
 18379                           
 18380 ;; *************** function _atoi *****************
 18381 ;; Defined at:
 18382 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 18383 ;; Parameters:    Size  Location     Type
 18384 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 18385 ;;		 -> ringBufferLUT@arg_buff(3), 
 18386 ;; Auto vars:     Size  Location     Type
 18387 ;;  a               2   34[BANK1 ] int 
 18388 ;;  sign            1   33[BANK1 ] unsigned char 
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  2   29[BANK1 ] int 
 18391 ;; Registers used:
 18392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/0
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18398 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18399 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18400 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18401 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18402 ;;Total ram usage:        7 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; Hardware stack levels required when called:   14
 18405 ;; This function calls:
 18406 ;;		___wmul
 18407 ;;		_isdigit
 18408 ;; This function is called by:
 18409 ;;		_ringBufferLUT
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           
 18413                           	psect	text23
 18414  017CE2                     __ptext23:
 18415                           	opt stack 0
 18416  017CE2                     _atoi:
 18417                           	opt stack 14
 18418                           
 18419                           ; BSR set to: 1
 18420                           ;incstack = 0
 18421  017CE2  D003               	goto	l1809
 18422  017CE4  0101               	movlb	1	; () banked
 18423  017CE6  4B1D               	infsnz	atoi@s& (0+255),f,b
 18424  017CE8  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 18425  017CEA                     l1809:
 18426                           
 18427                           ; BSR set to: 1
 18428  017CEA  C11D  FFD9         	movff	atoi@s,fsr2l
 18429  017CEE  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18430  017CF2  0E20               	movlw	32
 18431  017CF4  18DE               	xorwf	postinc2,w,c
 18432  017CF6  B4D8               	btfsc	status,2,c
 18433  017CF8  D7F5               	goto	l1810
 18434  017CFA  C11D  FFD9         	movff	atoi@s,fsr2l
 18435  017CFE  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18436  017D02  0E09               	movlw	9
 18437  017D04  18DE               	xorwf	postinc2,w,c
 18438  017D06  B4D8               	btfsc	status,2,c
 18439  017D08  D7ED               	goto	l1810
 18440  017D0A  0E00               	movlw	0
 18441  017D0C  0101               	movlb	1	; () banked
 18442  017D0E  6F23               	movwf	(atoi@a+1)& (0+255),b
 18443  017D10  0E00               	movlw	0
 18444  017D12  6F22               	movwf	atoi@a& (0+255),b
 18445  017D14  0E00               	movlw	0
 18446  017D16  6F21               	movwf	atoi@sign& (0+255),b
 18447                           
 18448                           ; BSR set to: 1
 18449  017D18  C11D  FFD9         	movff	atoi@s,fsr2l
 18450  017D1C  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18451  017D20  0E2D               	movlw	45
 18452  017D22  18DE               	xorwf	postinc2,w,c
 18453  017D24  A4D8               	btfss	status,2,c
 18454  017D26  D002               	goto	l1812
 18455                           
 18456                           ; BSR set to: 1
 18457  017D28  2B21               	incf	atoi@sign& (0+255),f,b
 18458  017D2A  D026               	goto	l19420
 18459  017D2C                     l1812:
 18460                           
 18461                           ; BSR set to: 1
 18462                           
 18463                           ; BSR set to: 1
 18464  017D2C  C11D  FFD9         	movff	atoi@s,fsr2l
 18465  017D30  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18466  017D34  0E2B               	movlw	43
 18467  017D36  18DE               	xorwf	postinc2,w,c
 18468  017D38  A4D8               	btfss	status,2,c
 18469  017D3A  D020               	goto	l1815
 18470  017D3C  D01D               	goto	l19420
 18471  017D3E                     
 18472                           ; BSR set to: 1
 18473  017D3E  C122  F117         	movff	atoi@a,___wmul@multiplier
 18474  017D42  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 18475  017D46  0E00               	movlw	0
 18476  017D48  0101               	movlb	1	; () banked
 18477  017D4A  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18478  017D4C  0E0A               	movlw	10
 18479  017D4E  6F19               	movwf	___wmul@multiplicand& (0+255),b
 18480  017D50  EC2C  F0C8         	call	___wmul	;wreg free
 18481  017D54  C11D  FFD9         	movff	atoi@s,fsr2l
 18482  017D58  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18483  017D5C  50DF               	movf	indf2,w,c
 18484  017D5E  0101               	movlb	1	; () banked
 18485  017D60  6F1F               	movwf	??_atoi& (0+255),b
 18486  017D62  6B20               	clrf	(??_atoi+1)& (0+255),b
 18487  017D64  5117               	movf	?___wmul& (0+255),w,b
 18488  017D66  271F               	addwf	??_atoi& (0+255),f,b
 18489  017D68  5118               	movf	(?___wmul+1)& (0+255),w,b
 18490  017D6A  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 18491  017D6C  0ED0               	movlw	208
 18492  017D6E  251F               	addwf	??_atoi& (0+255),w,b
 18493  017D70  6F22               	movwf	atoi@a& (0+255),b
 18494  017D72  0EFF               	movlw	255
 18495  017D74  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 18496  017D76  6F23               	movwf	(atoi@a+1)& (0+255),b
 18497  017D78                     l19420:
 18498                           
 18499                           ; BSR set to: 1
 18500  017D78  4B1D               	infsnz	atoi@s& (0+255),f,b
 18501  017D7A  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 18502  017D7C                     l1815:
 18503                           
 18504                           ; BSR set to: 1
 18505                           
 18506                           ; BSR set to: 1
 18507  017D7C  C11D  FFD9         	movff	atoi@s,fsr2l
 18508  017D80  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18509  017D84  50DF               	movf	indf2,w,c
 18510  017D86  ECB3  F0C8         	call	_isdigit
 18511  017D8A  B0D8               	btfsc	status,0,c
 18512  017D8C  D7D8               	goto	l1816
 18513  017D8E  0101               	movlb	1	; () banked
 18514  017D90  5121               	movf	atoi@sign& (0+255),w,b
 18515  017D92  B4D8               	btfsc	status,2,c
 18516  017D94  D00D               	goto	l1818
 18517                           
 18518                           ; BSR set to: 1
 18519  017D96  C122  F11F         	movff	atoi@a,??_atoi
 18520  017D9A  C123  F120         	movff	atoi@a+1,??_atoi+1
 18521  017D9E  1F1F               	comf	??_atoi& (0+255),f,b
 18522  017DA0  1F20               	comf	(??_atoi+1)& (0+255),f,b
 18523  017DA2  4B1F               	infsnz	??_atoi& (0+255),f,b
 18524  017DA4  2B20               	incf	(??_atoi+1)& (0+255),f,b
 18525  017DA6  C11F  F11D         	movff	??_atoi,?_atoi
 18526  017DAA  C120  F11E         	movff	??_atoi+1,?_atoi+1
 18527  017DAE  0012               	return	
 18528  017DB0                     l1818:
 18529                           
 18530                           ; BSR set to: 1
 18531  017DB0  C122  F11D         	movff	atoi@a,?_atoi
 18532  017DB4  C123  F11E         	movff	atoi@a+1,?_atoi+1
 18533                           
 18534                           ; BSR set to: 1
 18535  017DB8  0012               	return		;funcret
 18536  017DBA                     __end_of_atoi:
 18537                           	opt stack 0
 18538                           tblptru	equ	0xFF8
 18539                           tblptrh	equ	0xFF7
 18540                           tblptrl	equ	0xFF6
 18541                           tablat	equ	0xFF5
 18542                           prodh	equ	0xFF4
 18543                           prodl	equ	0xFF3
 18544                           intcon	equ	0xFF2
 18545                           indf0	equ	0xFEF
 18546                           postinc0	equ	0xFEE
 18547                           fsr0h	equ	0xFEA
 18548                           fsr0l	equ	0xFE9
 18549                           wreg	equ	0xFE8
 18550                           indf1	equ	0xFE7
 18551                           postdec1	equ	0xFE5
 18552                           plusw1	equ	0xFE3
 18553                           fsr1h	equ	0xFE2
 18554                           fsr1l	equ	0xFE1
 18555                           indf2	equ	0xFDF
 18556                           postinc2	equ	0xFDE
 18557                           postdec2	equ	0xFDD
 18558                           plusw2	equ	0xFDB
 18559                           fsr2h	equ	0xFDA
 18560                           fsr2l	equ	0xFD9
 18561                           status	equ	0xFD8
 18562                           
 18563 ;; *************** function ___fldiv *****************
 18564 ;; Defined at:
 18565 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 18566 ;; Parameters:    Size  Location     Type
 18567 ;;  b               4   61[BANK1 ] int 
 18568 ;;  a               4   65[BANK1 ] int 
 18569 ;; Auto vars:     Size  Location     Type
 18570 ;;  grs             4   80[BANK1 ] unsigned long 
 18571 ;;  rem             4   74[BANK1 ] unsigned long 
 18572 ;;  new_exp         2   78[BANK1 ] int 
 18573 ;;  aexp            1   85[BANK1 ] unsigned char 
 18574 ;;  bexp            1   84[BANK1 ] unsigned char 
 18575 ;;  sign            1   73[BANK1 ] unsigned char 
 18576 ;; Return value:  Size  Location     Type
 18577 ;;                  4   61[BANK1 ] unsigned char 
 18578 ;; Registers used:
 18579 ;;		wreg, status,2, status,0
 18580 ;; Tracked objects:
 18581 ;;		On entry : 0/0
 18582 ;;		On exit  : 0/0
 18583 ;;		Unchanged: 0/0
 18584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18585 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18586 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18587 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18588 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18589 ;;Total ram usage:       25 bytes
 18590 ;; Hardware stack levels used:    1
 18591 ;; Hardware stack levels required when called:   13
 18592 ;; This function calls:
 18593 ;;		Nothing
 18594 ;; This function is called by:
 18595 ;;		_ringBufferLUT
 18596 ;; This function uses a non-reentrant model
 18597 ;;
 18598                           
 18599                           	psect	text24
 18600  015E4A                     __ptext24:
 18601                           	opt stack 0
 18602  015E4A                     ___fldiv:
 18603                           	opt stack 15
 18604                           
 18605                           ; BSR set to: 1
 18606                           ;incstack = 0
 18607  015E4A  0101               	movlb	1	; () banked
 18608  015E4C  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 18609  015E4E  0B80               	andlw	128
 18610  015E50  6F49               	movwf	___fldiv@sign& (0+255),b
 18611  015E52  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 18612  015E54  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 18613  015E56  6F54               	movwf	___fldiv@bexp& (0+255),b
 18614                           
 18615                           ; BSR set to: 1
 18616  015E58  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 18617                           
 18618                           ; BSR set to: 1
 18619  015E5A  8154               	bsf	___fldiv@bexp& (0+255),0,b
 18620                           
 18621                           ; BSR set to: 1
 18622                           
 18623                           ; BSR set to: 1
 18624  015E5C  5154               	movf	___fldiv@bexp& (0+255),w,b
 18625  015E5E  B4D8               	btfsc	status,2,c
 18626  015E60  D00D               	goto	l2216
 18627                           
 18628                           ; BSR set to: 1
 18629  015E62  2954               	incf	___fldiv@bexp& (0+255),w,b
 18630  015E64  A4D8               	btfss	status,2,c
 18631  015E66  D008               	goto	l2217
 18632                           
 18633                           ; BSR set to: 1
 18634  015E68  0E00               	movlw	0
 18635  015E6A  6F3D               	movwf	___fldiv@b& (0+255),b
 18636  015E6C  0E00               	movlw	0
 18637  015E6E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18638  015E70  0E00               	movlw	0
 18639  015E72  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18640  015E74  0E00               	movlw	0
 18641  015E76  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18642  015E78                     l2217:
 18643                           
 18644                           ; BSR set to: 1
 18645                           
 18646                           ; BSR set to: 1
 18647  015E78  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 18648  015E7A  D006               	goto	L1
 18649  015E7C                     l2216:
 18650                           
 18651                           ; BSR set to: 1
 18652                           
 18653                           ; BSR set to: 1
 18654  015E7C  0E00               	movlw	0
 18655  015E7E  6F3D               	movwf	___fldiv@b& (0+255),b
 18656  015E80  0E00               	movlw	0
 18657  015E82  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18658  015E84  0E00               	movlw	0
 18659  015E86  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18660  015E88                     L1:
 18661  015E88  0E00               	movlw	0
 18662  015E8A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18663                           
 18664                           ; BSR set to: 1
 18665                           
 18666                           ; BSR set to: 1
 18667  015E8C  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 18668  015E8E  0B80               	andlw	128
 18669  015E90  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 18670                           
 18671                           ; BSR set to: 1
 18672  015E92  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 18673  015E94  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 18674  015E96  6F55               	movwf	___fldiv@aexp& (0+255),b
 18675                           
 18676                           ; BSR set to: 1
 18677  015E98  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 18678                           
 18679                           ; BSR set to: 1
 18680  015E9A  8155               	bsf	___fldiv@aexp& (0+255),0,b
 18681                           
 18682                           ; BSR set to: 1
 18683                           
 18684                           ; BSR set to: 1
 18685  015E9C  5155               	movf	___fldiv@aexp& (0+255),w,b
 18686  015E9E  B4D8               	btfsc	status,2,c
 18687  015EA0  D00D               	goto	l2220
 18688                           
 18689                           ; BSR set to: 1
 18690  015EA2  2955               	incf	___fldiv@aexp& (0+255),w,b
 18691  015EA4  A4D8               	btfss	status,2,c
 18692  015EA6  D008               	goto	l2221
 18693                           
 18694                           ; BSR set to: 1
 18695  015EA8  0E00               	movlw	0
 18696  015EAA  6F41               	movwf	___fldiv@a& (0+255),b
 18697  015EAC  0E00               	movlw	0
 18698  015EAE  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 18699  015EB0  0E00               	movlw	0
 18700  015EB2  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 18701  015EB4  0E00               	movlw	0
 18702  015EB6  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 18703  015EB8                     l2221:
 18704                           
 18705                           ; BSR set to: 1
 18706                           
 18707                           ; BSR set to: 1
 18708  015EB8  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 18709  015EBA  D006               	goto	L2
 18710  015EBC                     l2220:
 18711                           
 18712                           ; BSR set to: 1
 18713                           
 18714                           ; BSR set to: 1
 18715  015EBC  0E00               	movlw	0
 18716  015EBE  6F41               	movwf	___fldiv@a& (0+255),b
 18717  015EC0  0E00               	movlw	0
 18718  015EC2  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 18719  015EC4  0E00               	movlw	0
 18720  015EC6  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 18721  015EC8                     L2:
 18722  015EC8  0E00               	movlw	0
 18723  015ECA  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 18724                           
 18725                           ; BSR set to: 1
 18726                           
 18727                           ; BSR set to: 1
 18728  015ECC  5141               	movf	___fldiv@a& (0+255),w,b
 18729  015ECE  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 18730  015ED0  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 18731  015ED2  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 18732  015ED4  A4D8               	btfss	status,2,c
 18733  015ED6  D015               	goto	l2223
 18734                           
 18735                           ; BSR set to: 1
 18736  015ED8  0E00               	movlw	0
 18737  015EDA  6F3D               	movwf	___fldiv@b& (0+255),b
 18738  015EDC  0E00               	movlw	0
 18739  015EDE  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18740  015EE0  0E00               	movlw	0
 18741  015EE2  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18742  015EE4  0E00               	movlw	0
 18743  015EE6  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18744                           
 18745                           ; BSR set to: 1
 18746  015EE8  0E80               	movlw	128
 18747  015EEA  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 18748  015EEC  0E7F               	movlw	127
 18749  015EEE  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 18750                           
 18751                           ; BSR set to: 1
 18752  015EF0  C13D  F13D         	movff	___fldiv@b,?___fldiv
 18753  015EF4  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 18754  015EF8  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 18755  015EFC  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 18756                           
 18757                           ; BSR set to: 1
 18758  015F00  0012               	return	
 18759  015F02                     l2223:
 18760                           
 18761                           ; BSR set to: 1
 18762                           
 18763                           ; BSR set to: 1
 18764  015F02  5154               	movf	___fldiv@bexp& (0+255),w,b
 18765  015F04  A4D8               	btfss	status,2,c
 18766  015F06  D011               	goto	l2225
 18767                           
 18768                           ; BSR set to: 1
 18769  015F08  0E00               	movlw	0
 18770  015F0A  6F3D               	movwf	___fldiv@b& (0+255),b
 18771  015F0C  0E00               	movlw	0
 18772  015F0E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18773  015F10  0E00               	movlw	0
 18774  015F12  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18775  015F14  0E00               	movlw	0
 18776  015F16  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18777                           
 18778                           ; BSR set to: 1
 18779  015F18  C13D  F13D         	movff	___fldiv@b,?___fldiv
 18780  015F1C  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 18781  015F20  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 18782  015F24  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 18783                           
 18784                           ; BSR set to: 1
 18785  015F28  0012               	return	
 18786  015F2A                     l2225:
 18787                           
 18788                           ; BSR set to: 1
 18789                           
 18790                           ; BSR set to: 1
 18791  015F2A  5155               	movf	___fldiv@aexp& (0+255),w,b
 18792  015F2C  6F45               	movwf	??___fldiv& (0+255),b
 18793  015F2E  6B46               	clrf	(??___fldiv+1)& (0+255),b
 18794  015F30  1F45               	comf	??___fldiv& (0+255),f,b
 18795  015F32  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 18796  015F34  4B45               	infsnz	??___fldiv& (0+255),f,b
 18797  015F36  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 18798  015F38  5154               	movf	___fldiv@bexp& (0+255),w,b
 18799  015F3A  6F47               	movwf	(??___fldiv+2)& (0+255),b
 18800  015F3C  6B48               	clrf	(??___fldiv+3)& (0+255),b
 18801  015F3E  5145               	movf	??___fldiv& (0+255),w,b
 18802  015F40  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 18803  015F42  5146               	movf	(??___fldiv+1)& (0+255),w,b
 18804  015F44  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 18805  015F46  0E7F               	movlw	127
 18806  015F48  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 18807  015F4A  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 18808  015F4C  0E00               	movlw	0
 18809  015F4E  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 18810  015F50  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18811                           
 18812                           ; BSR set to: 1
 18813  015F52  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 18814  015F56  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 18815  015F5A  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 18816  015F5E  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 18817                           
 18818                           ; BSR set to: 1
 18819  015F62  0E00               	movlw	0
 18820  015F64  6F3D               	movwf	___fldiv@b& (0+255),b
 18821  015F66  0E00               	movlw	0
 18822  015F68  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18823  015F6A  0E00               	movlw	0
 18824  015F6C  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18825  015F6E  0E00               	movlw	0
 18826  015F70  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18827                           
 18828                           ; BSR set to: 1
 18829  015F72  0E00               	movlw	0
 18830  015F74  6F50               	movwf	___fldiv@grs& (0+255),b
 18831  015F76  0E00               	movlw	0
 18832  015F78  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 18833  015F7A  0E00               	movlw	0
 18834  015F7C  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 18835  015F7E  0E00               	movlw	0
 18836  015F80  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 18837                           
 18838                           ; BSR set to: 1
 18839  015F82  0E00               	movlw	0
 18840  015F84  6F55               	movwf	___fldiv@aexp& (0+255),b
 18841  015F86  D028               	goto	l2226
 18842  015F88                     
 18843                           ; BSR set to: 1
 18844                           
 18845                           ; BSR set to: 1
 18846  015F88  5155               	movf	___fldiv@aexp& (0+255),w,b
 18847  015F8A  B4D8               	btfsc	status,2,c
 18848  015F8C  D011               	goto	l2228
 18849                           
 18850                           ; BSR set to: 1
 18851  015F8E  90D8               	bcf	status,0,c
 18852  015F90  374A               	rlcf	___fldiv@rem& (0+255),f,b
 18853  015F92  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 18854  015F94  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 18855  015F96  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 18856  015F98  90D8               	bcf	status,0,c
 18857  015F9A  373D               	rlcf	___fldiv@b& (0+255),f,b
 18858  015F9C  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18859  015F9E  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18860  015FA0  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18861                           
 18862                           ; BSR set to: 1
 18863  015FA2  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 18864                           
 18865                           ; BSR set to: 1
 18866  015FA4  813D               	bsf	___fldiv@b& (0+255),0,b
 18867                           
 18868                           ; BSR set to: 1
 18869  015FA6  90D8               	bcf	status,0,c
 18870  015FA8  3750               	rlcf	___fldiv@grs& (0+255),f,b
 18871  015FAA  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18872  015FAC  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18873  015FAE  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18874  015FB0                     l2228:
 18875                           
 18876                           ; BSR set to: 1
 18877                           
 18878                           ; BSR set to: 1
 18879  015FB0  5141               	movf	___fldiv@a& (0+255),w,b
 18880  015FB2  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 18881  015FB4  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 18882  015FB6  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 18883  015FB8  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 18884  015FBA  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 18885  015FBC  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 18886  015FBE  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 18887  015FC0  A0D8               	btfss	status,0,c
 18888  015FC2  D009               	goto	l2230
 18889                           
 18890                           ; BSR set to: 1
 18891  015FC4  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 18892                           
 18893                           ; BSR set to: 1
 18894  015FC6  5141               	movf	___fldiv@a& (0+255),w,b
 18895  015FC8  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 18896  015FCA  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 18897  015FCC  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 18898  015FCE  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 18899  015FD0  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 18900  015FD2  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 18901  015FD4  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 18902  015FD6                     l2230:
 18903                           
 18904                           ; BSR set to: 1
 18905                           
 18906                           ; BSR set to: 1
 18907  015FD6  2B55               	incf	___fldiv@aexp& (0+255),f,b
 18908  015FD8                     l2226:
 18909                           
 18910                           ; BSR set to: 1
 18911  015FD8  0E19               	movlw	25
 18912  015FDA  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 18913  015FDC  D7D5               	goto	l2227
 18914                           
 18915                           ; BSR set to: 1
 18916                           
 18917                           ; BSR set to: 1
 18918  015FDE  514A               	movf	___fldiv@rem& (0+255),w,b
 18919  015FE0  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 18920  015FE2  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 18921  015FE4  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 18922  015FE6  B4D8               	btfsc	status,2,c
 18923  015FE8  D011               	goto	l2233
 18924                           
 18925                           ; BSR set to: 1
 18926  015FEA  8150               	bsf	___fldiv@grs& (0+255),0,b
 18927                           
 18928                           ; BSR set to: 1
 18929  015FEC  D00F               	goto	l2233
 18930  015FEE                     
 18931                           ; BSR set to: 1
 18932                           
 18933                           ; BSR set to: 1
 18934  015FEE  90D8               	bcf	status,0,c
 18935  015FF0  373D               	rlcf	___fldiv@b& (0+255),f,b
 18936  015FF2  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18937  015FF4  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18938  015FF6  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18939                           
 18940                           ; BSR set to: 1
 18941  015FF8  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 18942                           
 18943                           ; BSR set to: 1
 18944  015FFA  813D               	bsf	___fldiv@b& (0+255),0,b
 18945                           
 18946                           ; BSR set to: 1
 18947  015FFC  90D8               	bcf	status,0,c
 18948  015FFE  3750               	rlcf	___fldiv@grs& (0+255),f,b
 18949  016000  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18950  016002  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18951  016004  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18952  016006  074E               	decf	___fldiv@new_exp& (0+255),f,b
 18953  016008  A0D8               	btfss	status,0,c
 18954  01600A  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 18955  01600C                     l2233:
 18956                           
 18957                           ; BSR set to: 1
 18958                           
 18959                           ; BSR set to: 1
 18960  01600C  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 18961  01600E  D7EF               	goto	l2234
 18962                           
 18963                           ; BSR set to: 1
 18964                           
 18965                           ; BSR set to: 1
 18966  016010  0E00               	movlw	0
 18967  016012  6F55               	movwf	___fldiv@aexp& (0+255),b
 18968                           
 18969                           ; BSR set to: 1
 18970  016014  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 18971  016016  D016               	goto	l2240
 18972                           
 18973                           ; BSR set to: 1
 18974  016018  0EFF               	movlw	255
 18975  01601A  1550               	andwf	___fldiv@grs& (0+255),w,b
 18976  01601C  6F45               	movwf	??___fldiv& (0+255),b
 18977  01601E  0EFF               	movlw	255
 18978  016020  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 18979  016022  6F46               	movwf	(??___fldiv+1)& (0+255),b
 18980  016024  0EFF               	movlw	255
 18981  016026  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 18982  016028  6F47               	movwf	(??___fldiv+2)& (0+255),b
 18983  01602A  0E7F               	movlw	127
 18984  01602C  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 18985  01602E  6F48               	movwf	(??___fldiv+3)& (0+255),b
 18986  016030  5145               	movf	??___fldiv& (0+255),w,b
 18987  016032  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 18988  016034  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 18989  016036  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 18990  016038  A4D8               	btfss	status,2,c
 18991  01603A  D002               	goto	u26050
 18992                           
 18993                           ; BSR set to: 1
 18994                           
 18995                           ; BSR set to: 1
 18996  01603C  A13D               	btfss	___fldiv@b& (0+255),0,b
 18997  01603E  D002               	goto	l2240
 18998  016040                     u26050:
 18999                           
 19000                           ; BSR set to: 1
 19001  016040  0E01               	movlw	1
 19002  016042  6F55               	movwf	___fldiv@aexp& (0+255),b
 19003  016044                     l2240:
 19004                           
 19005                           ; BSR set to: 1
 19006                           
 19007                           ; BSR set to: 1
 19008                           
 19009                           ; BSR set to: 1
 19010  016044  5155               	movf	___fldiv@aexp& (0+255),w,b
 19011  016046  B4D8               	btfsc	status,2,c
 19012  016048  D01F               	goto	l2242
 19013                           
 19014                           ; BSR set to: 1
 19015  01604A  0E01               	movlw	1
 19016  01604C  273D               	addwf	___fldiv@b& (0+255),f,b
 19017  01604E  0E00               	movlw	0
 19018  016050  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 19019  016052  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 19020  016054  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 19021                           
 19022                           ; BSR set to: 1
 19023  016056  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 19024  016058  D017               	goto	l2242
 19025                           
 19026                           ; BSR set to: 1
 19027  01605A  C13D  F145         	movff	___fldiv@b,??___fldiv
 19028  01605E  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 19029  016062  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 19030  016066  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 19031  01606A  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 19032  01606C  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 19033  01606E  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 19034  016070  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 19035  016072  3345               	rrcf	??___fldiv& (0+255),f,b
 19036  016074  C145  F13D         	movff	??___fldiv,___fldiv@b
 19037  016078  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 19038  01607C  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 19039  016080  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 19040                           
 19041                           ; BSR set to: 1
 19042  016084  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 19043  016086  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 19044  016088                     l2242:
 19045                           
 19046                           ; BSR set to: 1
 19047                           
 19048                           ; BSR set to: 1
 19049                           
 19050                           ; BSR set to: 1
 19051  016088  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19052  01608A  D010               	goto	l2243
 19053  01608C  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19054  01608E  E103               	bnz	u26080
 19055  016090  294E               	incf	___fldiv@new_exp& (0+255),w,b
 19056  016092  A0D8               	btfss	status,0,c
 19057  016094  D00B               	goto	l2243
 19058  016096                     u26080:
 19059                           
 19060                           ; BSR set to: 1
 19061  016096  0E00               	movlw	0
 19062  016098  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19063  01609A  694E               	setf	___fldiv@new_exp& (0+255),b
 19064  01609C  0E00               	movlw	0
 19065  01609E  6F3D               	movwf	___fldiv@b& (0+255),b
 19066  0160A0  0E00               	movlw	0
 19067  0160A2  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19068  0160A4  0E00               	movlw	0
 19069  0160A6  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19070  0160A8  0E00               	movlw	0
 19071  0160AA  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19072  0160AC                     l2243:
 19073                           
 19074                           ; BSR set to: 1
 19075                           
 19076                           ; BSR set to: 1
 19077  0160AC  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19078  0160AE  D005               	goto	u26090
 19079  0160B0  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19080  0160B2  E111               	bnz	l19548
 19081  0160B4  054E               	decf	___fldiv@new_exp& (0+255),w,b
 19082  0160B6  B0D8               	btfsc	status,0,c
 19083  0160B8  D00E               	goto	l2244
 19084  0160BA                     u26090:
 19085                           
 19086                           ; BSR set to: 1
 19087  0160BA  0E00               	movlw	0
 19088  0160BC  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19089  0160BE  0E00               	movlw	0
 19090  0160C0  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 19091  0160C2  0E00               	movlw	0
 19092  0160C4  6F3D               	movwf	___fldiv@b& (0+255),b
 19093  0160C6  0E00               	movlw	0
 19094  0160C8  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19095  0160CA  0E00               	movlw	0
 19096  0160CC  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19097  0160CE  0E00               	movlw	0
 19098  0160D0  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19099  0160D2  0E00               	movlw	0
 19100  0160D4  6F49               	movwf	___fldiv@sign& (0+255),b
 19101  0160D6                     l2244:
 19102  0160D6                     l19548:
 19103                           
 19104                           ; BSR set to: 1
 19105  0160D6  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 19106                           
 19107                           ; BSR set to: 1
 19108  0160DA  A154               	btfss	___fldiv@bexp& (0+255),0,b
 19109  0160DC  D002               	goto	l2245
 19110                           
 19111                           ; BSR set to: 1
 19112  0160DE  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 19113  0160E0  D001               	goto	l2246
 19114  0160E2                     l2245:
 19115                           
 19116                           ; BSR set to: 1
 19117                           
 19118                           ; BSR set to: 1
 19119  0160E2  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 19120  0160E4                     l2246:
 19121                           
 19122                           ; BSR set to: 1
 19123                           
 19124                           ; BSR set to: 1
 19125  0160E4  90D8               	bcf	status,0,c
 19126  0160E6  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 19127  0160E8  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19128                           
 19129                           ; BSR set to: 1
 19130  0160EA  5149               	movf	___fldiv@sign& (0+255),w,b
 19131  0160EC  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 19132                           
 19133                           ; BSR set to: 1
 19134  0160EE  C13D  F13D         	movff	___fldiv@b,?___fldiv
 19135  0160F2  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 19136  0160F6  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 19137  0160FA  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 19138  0160FE  0012               	return	
 19139  016100                     __end_of___fldiv:
 19140                           	opt stack 0
 19141                           tblptru	equ	0xFF8
 19142                           tblptrh	equ	0xFF7
 19143                           tblptrl	equ	0xFF6
 19144                           tablat	equ	0xFF5
 19145                           prodh	equ	0xFF4
 19146                           prodl	equ	0xFF3
 19147                           intcon	equ	0xFF2
 19148                           indf0	equ	0xFEF
 19149                           postinc0	equ	0xFEE
 19150                           fsr0h	equ	0xFEA
 19151                           fsr0l	equ	0xFE9
 19152                           wreg	equ	0xFE8
 19153                           indf1	equ	0xFE7
 19154                           postdec1	equ	0xFE5
 19155                           plusw1	equ	0xFE3
 19156                           fsr1h	equ	0xFE2
 19157                           fsr1l	equ	0xFE1
 19158                           indf2	equ	0xFDF
 19159                           postinc2	equ	0xFDE
 19160                           postdec2	equ	0xFDD
 19161                           plusw2	equ	0xFDB
 19162                           fsr2h	equ	0xFDA
 19163                           fsr2l	equ	0xFD9
 19164                           status	equ	0xFD8
 19165                           
 19166 ;; *************** function _TMR7_StopTimer *****************
 19167 ;; Defined at:
 19168 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 19169 ;; Parameters:    Size  Location     Type
 19170 ;;		None
 19171 ;; Auto vars:     Size  Location     Type
 19172 ;;		None
 19173 ;; Return value:  Size  Location     Type
 19174 ;;                  1    wreg      void 
 19175 ;; Registers used:
 19176 ;;		None
 19177 ;; Tracked objects:
 19178 ;;		On entry : 0/0
 19179 ;;		On exit  : 0/0
 19180 ;;		Unchanged: 0/0
 19181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19186 ;;Total ram usage:        0 bytes
 19187 ;; Hardware stack levels used:    1
 19188 ;; Hardware stack levels required when called:   13
 19189 ;; This function calls:
 19190 ;;		Nothing
 19191 ;; This function is called by:
 19192 ;;		_ringBufferLUT
 19193 ;; This function uses a non-reentrant model
 19194 ;;
 19195                           
 19196                           	psect	text25
 19197  019392                     __ptext25:
 19198                           	opt stack 0
 19199  019392                     _TMR7_StopTimer:
 19200                           	opt stack 15
 19201                           
 19202                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 19203                           
 19204                           ; BSR set to: 1
 19205                           ;incstack = 0
 19206  019392  010F               	movlb	15	; () banked
 19207  019394  9130               	bcf	48,0,b	;volatile
 19208                           
 19209                           ; BSR set to: 15
 19210  019396  0012               	return		;funcret
 19211  019398                     __end_of_TMR7_StopTimer:
 19212                           	opt stack 0
 19213                           tblptru	equ	0xFF8
 19214                           tblptrh	equ	0xFF7
 19215                           tblptrl	equ	0xFF6
 19216                           tablat	equ	0xFF5
 19217                           prodh	equ	0xFF4
 19218                           prodl	equ	0xFF3
 19219                           intcon	equ	0xFF2
 19220                           indf0	equ	0xFEF
 19221                           postinc0	equ	0xFEE
 19222                           fsr0h	equ	0xFEA
 19223                           fsr0l	equ	0xFE9
 19224                           wreg	equ	0xFE8
 19225                           indf1	equ	0xFE7
 19226                           postdec1	equ	0xFE5
 19227                           plusw1	equ	0xFE3
 19228                           fsr1h	equ	0xFE2
 19229                           fsr1l	equ	0xFE1
 19230                           indf2	equ	0xFDF
 19231                           postinc2	equ	0xFDE
 19232                           postdec2	equ	0xFDD
 19233                           plusw2	equ	0xFDB
 19234                           fsr2h	equ	0xFDA
 19235                           fsr2l	equ	0xFD9
 19236                           status	equ	0xFD8
 19237                           
 19238 ;; *************** function _EUSART2_Read *****************
 19239 ;; Defined at:
 19240 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19241 ;; Parameters:    Size  Location     Type
 19242 ;;		None
 19243 ;; Auto vars:     Size  Location     Type
 19244 ;;  readValue       1   23[BANK1 ] unsigned char 
 19245 ;; Return value:  Size  Location     Type
 19246 ;;                  1    wreg      unsigned char 
 19247 ;; Registers used:
 19248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19249 ;; Tracked objects:
 19250 ;;		On entry : 0/0
 19251 ;;		On exit  : 0/0
 19252 ;;		Unchanged: 0/0
 19253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19255 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19257 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19258 ;;Total ram usage:        1 bytes
 19259 ;; Hardware stack levels used:    1
 19260 ;; Hardware stack levels required when called:   13
 19261 ;; This function calls:
 19262 ;;		Nothing
 19263 ;; This function is called by:
 19264 ;;		_terminal_ringBufferPull
 19265 ;;		_getch
 19266 ;; This function uses a non-reentrant model
 19267 ;;
 19268                           
 19269                           	psect	text26
 19270  018BE0                     __ptext26:
 19271                           	opt stack 0
 19272  018BE0                     _EUSART2_Read:
 19273                           	opt stack 16
 19274                           
 19275                           ;eusart2.c: 139: uint8_t readValue = 0;
 19276                           
 19277                           ; BSR set to: 15
 19278                           ;incstack = 0
 19279  018BE0  0E00               	movlw	0
 19280  018BE2  0101               	movlb	1	; () banked
 19281  018BE4  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 19282                           
 19283                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 19284  018BE6  D002               	goto	l381
 19285  018BE8                     l382:
 19286                           
 19287                           ; BSR set to: 1
 19288  018BE8  0004               	clrwdt		;# 
 19289                           
 19290                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 19291  018BEA  827E               	bsf	3966,1,c	;volatile
 19292  018BEC                     l381:
 19293  018BEC  0101               	movlb	1	; () banked
 19294  018BEE  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 19295  018BF0  B4D8               	btfsc	status,2,c
 19296  018BF2  D7FA               	goto	l382
 19297                           
 19298                           ; BSR set to: 1
 19299                           ;eusart2.c: 145: }
 19300                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 19301  018BF4  927E               	bcf	3966,1,c	;volatile
 19302                           
 19303                           ; BSR set to: 1
 19304                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 19305  018BF6  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 19306  018BF8  0D01               	mullw	1
 19307  018BFA  0E80               	movlw	low _eusart2RxBuffer
 19308  018BFC  24F3               	addwf	prodl,w,c
 19309  018BFE  6ED9               	movwf	fsr2l,c
 19310  018C00  0E03               	movlw	high _eusart2RxBuffer
 19311  018C02  20F4               	addwfc	prodh,w,c
 19312  018C04  6EDA               	movwf	fsr2h,c
 19313  018C06  50DF               	movf	indf2,w,c
 19314  018C08  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 19315                           
 19316                           ; BSR set to: 1
 19317  018C0A  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 19318                           
 19319                           ; BSR set to: 1
 19320                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 19321  018C0C  0E3F               	movlw	63
 19322  018C0E  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 19323  018C10  D002               	goto	l384
 19324                           
 19325                           ; BSR set to: 1
 19326                           ;eusart2.c: 151: {
 19327                           ;eusart2.c: 152: eusart2RxTail = 0;
 19328  018C12  0E00               	movlw	0
 19329  018C14  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 19330  018C16                     l384:
 19331                           
 19332                           ; BSR set to: 1
 19333                           ;eusart2.c: 153: }
 19334                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 19335                           
 19336                           ; BSR set to: 1
 19337  018C16  010E               	movlb	14	; () banked
 19338  018C18  9F2C               	bcf	44,7,b	;volatile
 19339                           
 19340                           ; BSR set to: 14
 19341                           ;eusart2.c: 155: eusart2RxCount--;
 19342  018C1A  0101               	movlb	1	; () banked
 19343  018C1C  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 19344                           
 19345                           ; BSR set to: 1
 19346                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 19347  018C1E  010E               	movlb	14	; () banked
 19348  018C20  8F2C               	bsf	44,7,b	;volatile
 19349                           
 19350                           ; BSR set to: 14
 19351                           ;eusart2.c: 158: return readValue;
 19352  018C22  0101               	movlb	1	; () banked
 19353  018C24  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 19354  018C26  0012               	return	
 19355  018C28                     __end_of_EUSART2_Read:
 19356                           	opt stack 0
 19357                           tblptru	equ	0xFF8
 19358                           tblptrh	equ	0xFF7
 19359                           tblptrl	equ	0xFF6
 19360                           tablat	equ	0xFF5
 19361                           prodh	equ	0xFF4
 19362                           prodl	equ	0xFF3
 19363                           intcon	equ	0xFF2
 19364                           indf0	equ	0xFEF
 19365                           postinc0	equ	0xFEE
 19366                           fsr0h	equ	0xFEA
 19367                           fsr0l	equ	0xFE9
 19368                           wreg	equ	0xFE8
 19369                           indf1	equ	0xFE7
 19370                           postdec1	equ	0xFE5
 19371                           plusw1	equ	0xFE3
 19372                           fsr1h	equ	0xFE2
 19373                           fsr1l	equ	0xFE1
 19374                           indf2	equ	0xFDF
 19375                           postinc2	equ	0xFDE
 19376                           postdec2	equ	0xFDD
 19377                           plusw2	equ	0xFDB
 19378                           fsr2h	equ	0xFDA
 19379                           fsr2l	equ	0xFD9
 19380                           status	equ	0xFD8
 19381                           
 19382 ;; *************** function _terminal_clearTerminal *****************
 19383 ;; Defined at:
 19384 ;;		line 80 in file "ring_buffer_interface.c"
 19385 ;; Parameters:    Size  Location     Type
 19386 ;;		None
 19387 ;; Auto vars:     Size  Location     Type
 19388 ;;		None
 19389 ;; Return value:  Size  Location     Type
 19390 ;;                  1    wreg      void 
 19391 ;; Registers used:
 19392 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19393 ;; Tracked objects:
 19394 ;;		On entry : 0/0
 19395 ;;		On exit  : 0/0
 19396 ;;		Unchanged: 0/0
 19397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19402 ;;Total ram usage:        0 bytes
 19403 ;; Hardware stack levels used:    1
 19404 ;; Hardware stack levels required when called:   16
 19405 ;; This function calls:
 19406 ;;		_printf
 19407 ;; This function is called by:
 19408 ;;		_main
 19409 ;; This function uses a non-reentrant model
 19410 ;;
 19411                           
 19412                           	psect	text27
 19413  0192CE                     __ptext27:
 19414                           	opt stack 0
 19415  0192CE                     _terminal_clearTerminal:
 19416                           	opt stack 14
 19417                           
 19418                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 19419                           
 19420                           ; BSR set to: 1
 19421                           ;incstack = 0
 19422  0192CE  0EB0               	movlw	low STR_2
 19423  0192D0  0101               	movlb	1	; () banked
 19424  0192D2  6F82               	movwf	printf@f& (0+255),b
 19425  0192D4  0EFF               	movlw	high STR_2
 19426  0192D6  6F83               	movwf	(printf@f+1)& (0+255),b
 19427  0192D8  ECD1  F089         	call	_printf	;wreg free
 19428  0192DC  0012               	return		;funcret
 19429  0192DE                     __end_of_terminal_clearTerminal:
 19430                           	opt stack 0
 19431                           tblptru	equ	0xFF8
 19432                           tblptrh	equ	0xFF7
 19433                           tblptrl	equ	0xFF6
 19434                           tablat	equ	0xFF5
 19435                           prodh	equ	0xFF4
 19436                           prodl	equ	0xFF3
 19437                           intcon	equ	0xFF2
 19438                           indf0	equ	0xFEF
 19439                           postinc0	equ	0xFEE
 19440                           fsr0h	equ	0xFEA
 19441                           fsr0l	equ	0xFE9
 19442                           wreg	equ	0xFE8
 19443                           indf1	equ	0xFE7
 19444                           postdec1	equ	0xFE5
 19445                           plusw1	equ	0xFE3
 19446                           fsr1h	equ	0xFE2
 19447                           fsr1l	equ	0xFE1
 19448                           indf2	equ	0xFDF
 19449                           postinc2	equ	0xFDE
 19450                           postdec2	equ	0xFDD
 19451                           plusw2	equ	0xFDB
 19452                           fsr2h	equ	0xFDA
 19453                           fsr2l	equ	0xFD9
 19454                           status	equ	0xFD8
 19455                           
 19456 ;; *************** function _printf *****************
 19457 ;; Defined at:
 19458 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19459 ;; Parameters:    Size  Location     Type
 19460 ;;  f               2  130[BANK1 ] PTR const unsigned char 
 19461 ;;		 -> STR_150(30), STR_149(46), STR_148(39), STR_147(62), 
 19462 ;;		 -> STR_146(55), STR_145(470), STR_143(2891), STR_141(492), 
 19463 ;;		 -> STR_139(605), STR_137(720), STR_135(922), STR_133(54), 
 19464 ;;		 -> STR_131(54), STR_129(45), STR_127(51), STR_125(52), 
 19465 ;;		 -> STR_123(46), STR_121(51), STR_119(53), STR_117(58), 
 19466 ;;		 -> STR_115(71), STR_114(63), STR_113(37), STR_112(46), 
 19467 ;;		 -> STR_111(102), STR_110(86), STR_108(25), STR_106(42), 
 19468 ;;		 -> STR_105(53), STR_104(31), STR_102(29), STR_101(28), 
 19469 ;;		 -> STR_99(42), STR_97(41), STR_95(40), STR_93(56), 
 19470 ;;		 -> STR_91(34), STR_89(34), STR_87(32), STR_85(37), 
 19471 ;;		 -> STR_83(58), STR_81(36), STR_79(36), STR_77(37), 
 19472 ;;		 -> STR_75(45), STR_74(66), STR_72(21), STR_70(24), 
 19473 ;;		 -> STR_69(48), STR_59(54), STR_58(64), STR_56(59), 
 19474 ;;		 -> STR_54(85), STR_52(47), STR_51(17), STR_48(52), 
 19475 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 19476 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 19477 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 19478 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 19479 ;; Auto vars:     Size  Location     Type
 19480 ;;  idx             1  150[BANK1 ] unsigned char 
 19481 ;;  val             4  167[BANK1 ] unsigned long 
 19482 ;;  fval            4  163[BANK1 ] unsigned long 
 19483 ;;  tmpval          4  157[BANK1 ] struct .
 19484 ;;  prec            2  175[BANK1 ] int 
 19485 ;;  width           2  173[BANK1 ] int 
 19486 ;;  flag            2  171[BANK1 ] unsigned short 
 19487 ;;  exp             2  161[BANK1 ] int 
 19488 ;;  ap              2  155[BANK1 ] PTR void [1]
 19489 ;;		 -> ?i2_printf(2), ?_printf(2), 
 19490 ;;  len             2  153[BANK1 ] unsigned int 
 19491 ;;  cp              2  151[BANK1 ] PTR const unsigned char 
 19492 ;;		 -> STR_164(7), printf@c(1), STR_163(16), STR_162(22), 
 19493 ;;		 -> STR_161(21), STR_160(27), STR_159(41), STR_158(32), 
 19494 ;;		 -> STR_157(19), STR_156(16), STR_155(15), STR_154(16), 
 19495 ;;		 -> STR_153(10), STR_152(13), STR_151(12), ringBufferLUT@channel_name(22), 
 19496 ;;		 -> TRIAC_Firing_Angle(4), 
 19497 ;;  c               1  177[BANK1 ] char 
 19498 ;;  d               1    0        unsigned char 
 19499 ;; Return value:  Size  Location     Type
 19500 ;;                  2  130[BANK1 ] int 
 19501 ;; Registers used:
 19502 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19503 ;; Tracked objects:
 19504 ;;		On entry : 0/0
 19505 ;;		On exit  : 0/0
 19506 ;;		Unchanged: 0/0
 19507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19508 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19509 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19510 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19511 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19512 ;;Total ram usage:       48 bytes
 19513 ;; Hardware stack levels used:    1
 19514 ;; Hardware stack levels required when called:   15
 19515 ;; This function calls:
 19516 ;;		___awdiv
 19517 ;;		___fladd
 19518 ;;		___flge
 19519 ;;		___flmul
 19520 ;;		___flneg
 19521 ;;		___flsub
 19522 ;;		___fltol
 19523 ;;		___lldiv
 19524 ;;		___llmod
 19525 ;;		___wmul
 19526 ;;		___xxtofl
 19527 ;;		__div_to_l_
 19528 ;;		__tdiv_to_l_
 19529 ;;		_fround
 19530 ;;		_isdigit
 19531 ;;		_putch
 19532 ;;		_scale
 19533 ;; This function is called by:
 19534 ;;		_terminal_clearTerminal
 19535 ;;		_terminal_setCursorHome
 19536 ;;		_terminal_textAttributes
 19537 ;;		_terminal_printNewline
 19538 ;;		_ringBufferLUT
 19539 ;;		_terminal_printResetMessage
 19540 ;;		_terminal_clearLine
 19541 ;;		_terminal_saveCursor
 19542 ;;		_terminal_returnCursor
 19543 ;; This function uses a non-reentrant model
 19544 ;;
 19545                           
 19546                           	psect	text28
 19547  0113A2                     __ptext28:
 19548                           	opt stack 0
 19549  0113A2                     _printf:
 19550                           	opt stack 13
 19551                           
 19552                           ;doprnt.c: 466: va_list ap;
 19553                           ;doprnt.c: 499: signed char c;
 19554                           ;doprnt.c: 501: int width;
 19555                           ;doprnt.c: 504: int prec;
 19556                           ;doprnt.c: 508: unsigned short flag;
 19557                           ;doprnt.c: 515: char d;
 19558                           ;doprnt.c: 516: double fval;
 19559                           ;doprnt.c: 517: int exp;
 19560                           ;doprnt.c: 523: union {
 19561                           ;doprnt.c: 524: unsigned long vd;
 19562                           ;doprnt.c: 525: double integ;
 19563                           ;doprnt.c: 526: } tmpval;
 19564                           ;doprnt.c: 528: unsigned long val;
 19565                           ;doprnt.c: 529: unsigned len;
 19566                           ;doprnt.c: 530: const char * cp;
 19567                           ;doprnt.c: 533: *ap = __va_start();
 19568                           
 19569                           ;incstack = 0
 19570  0113A2  0E84               	movlw	low (?_printf+2)
 19571  0113A4  0101               	movlb	1	; () banked
 19572  0113A6  6F9B               	movwf	printf@ap& (0+255),b
 19573  0113A8  0E01               	movlw	high (?_printf+2)
 19574  0113AA  6F9C               	movwf	(printf@ap+1)& (0+255),b
 19575                           
 19576                           ;doprnt.c: 536: while(c = *f++) {
 19577  0113AC  EF99  F090         	goto	u25520
 19578  0113B0                     
 19579                           ; BSR set to: 1
 19580                           ;doprnt.c: 538: if(c != '%')
 19581                           
 19582                           ; BSR set to: 1
 19583  0113B0  0E25               	movlw	37
 19584  0113B2  19B1               	xorwf	printf@c& (0+255),w,b
 19585  0113B4  B4D8               	btfsc	status,2,c
 19586  0113B6  D005               	goto	l1470
 19587                           
 19588                           ; BSR set to: 1
 19589                           ;doprnt.c: 540: {
 19590                           ;doprnt.c: 541: (putch(c) );
 19591  0113B8  51B1               	movf	printf@c& (0+255),w,b
 19592  0113BA  EC77  F0C9         	call	_putch
 19593                           
 19594                           ;doprnt.c: 542: continue;
 19595  0113BE  EF99  F090         	goto	u25520
 19596  0113C2                     l1470:
 19597                           
 19598                           ;doprnt.c: 543: }
 19599                           ;doprnt.c: 546: width = 0;
 19600  0113C2  0E00               	movlw	0
 19601  0113C4  0101               	movlb	1	; () banked
 19602  0113C6  6FAE               	movwf	(printf@width+1)& (0+255),b
 19603  0113C8  0E00               	movlw	0
 19604  0113CA  6FAD               	movwf	printf@width& (0+255),b
 19605                           
 19606                           ;doprnt.c: 548: flag = 0;
 19607  0113CC  0E00               	movlw	0
 19608  0113CE  6FAC               	movwf	(printf@flag+1)& (0+255),b
 19609  0113D0  0E00               	movlw	0
 19610  0113D2  6FAB               	movwf	printf@flag& (0+255),b
 19611                           
 19612                           ; BSR set to: 1
 19613                           ;doprnt.c: 551: switch(*f) {
 19614                           
 19615                           ;doprnt.c: 550: for(;;) {
 19616  0113D4  D004               	goto	l1472
 19617  0113D6                     
 19618                           ;doprnt.c: 580: flag |= 0x04;
 19619                           
 19620                           ; BSR set to: 1
 19621  0113D6  0101               	movlb	1	; () banked
 19622  0113D8  85AB               	bsf	printf@flag& (0+255),2,b
 19623                           
 19624                           ;doprnt.c: 581: f++;
 19625  0113DA  4B82               	infsnz	printf@f& (0+255),f,b
 19626  0113DC  2B83               	incf	(printf@f+1)& (0+255),f,b
 19627  0113DE                     l1472:
 19628                           
 19629                           ; BSR set to: 1
 19630  0113DE  C182  FFF6         	movff	printf@f,tblptrl
 19631  0113E2  C183  FFF7         	movff	printf@f+1,tblptrh
 19632  0113E6  0E00               	movlw	low (__mediumconst shr (0+16))
 19633  0113E8  6EF8               	movwf	tblptru,c
 19634  0113EA  0E0D               	movlw	(high __ramtop+-1)
 19635  0113EC  64F7               	cpfsgt	tblptrh,c
 19636  0113EE  D003               	bra	u24787
 19637  0113F0  0008               	tblrd		*
 19638  0113F2  50F5               	movf	tablat,w,c
 19639  0113F4  D005               	bra	u24780
 19640  0113F6                     u24787:
 19641  0113F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19642  0113FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19643  0113FE  50EF               	movf	indf0,w,c
 19644  011400                     u24780:
 19645                           
 19646                           ; Switch size 1, requested type "space"
 19647                           ; Number of cases is 1, Range of values is 48 to 48
 19648                           ; switch strategies available:
 19649                           ; Name         Instructions Cycles
 19650                           ; simple_byte            4     3 (average)
 19651                           ;	Chosen strategy is simple_byte
 19652  011400  0A30               	xorlw	48	; case 48
 19653  011402  B4D8               	btfsc	status,2,c
 19654  011404  D7E8               	goto	l1473
 19655                           
 19656                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 19657                           
 19658                           ;doprnt.c: 586: }
 19659                           
 19660                           ;doprnt.c: 585: break;
 19661  011406  C182  FFF6         	movff	printf@f,tblptrl
 19662  01140A  C183  FFF7         	movff	printf@f+1,tblptrh
 19663  01140E  0E00               	movlw	low (__mediumconst shr (0+16))
 19664  011410  6EF8               	movwf	tblptru,c
 19665  011412  0E0D               	movlw	(high __ramtop+-1)
 19666  011414  64F7               	cpfsgt	tblptrh,c
 19667  011416  D003               	bra	u24797
 19668  011418  0008               	tblrd		*
 19669  01141A  50F5               	movf	tablat,w,c
 19670  01141C  D005               	bra	u24790
 19671  01141E                     u24797:
 19672  01141E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19673  011422  CFF7 FFEA          	movff	tblptrh,fsr0h
 19674  011426  50EF               	movf	indf0,w,c
 19675  011428                     u24790:
 19676  011428  ECB3  F0C8         	call	_isdigit
 19677  01142C  A0D8               	btfss	status,0,c
 19678  01142E  D04C               	goto	u24830
 19679                           
 19680                           ;doprnt.c: 598: width = 0;
 19681  011430  0E00               	movlw	0
 19682  011432  0101               	movlb	1	; () banked
 19683  011434  6FAE               	movwf	(printf@width+1)& (0+255),b
 19684  011436  0E00               	movlw	0
 19685  011438  6FAD               	movwf	printf@width& (0+255),b
 19686  01143A                     
 19687                           ;doprnt.c: 600: width *= 10;
 19688                           
 19689                           ; BSR set to: 1
 19690  01143A  C1AD  F117         	movff	printf@width,___wmul@multiplier
 19691  01143E  C1AE  F118         	movff	printf@width+1,___wmul@multiplier+1
 19692  011442  0E00               	movlw	0
 19693  011444  0101               	movlb	1	; () banked
 19694  011446  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19695  011448  0E0A               	movlw	10
 19696  01144A  6F19               	movwf	___wmul@multiplicand& (0+255),b
 19697  01144C  EC2C  F0C8         	call	___wmul	;wreg free
 19698  011450  C117  F1AD         	movff	?___wmul,printf@width
 19699  011454  C118  F1AE         	movff	?___wmul+1,printf@width+1
 19700                           
 19701                           ;doprnt.c: 601: width += *f++ - '0';
 19702  011458  0ED0               	movlw	208
 19703  01145A  0101               	movlb	1	; () banked
 19704  01145C  6F8C               	movwf	??_printf& (0+255),b
 19705  01145E  0EFF               	movlw	255
 19706  011460  6F8D               	movwf	(??_printf+1)& (0+255),b
 19707  011462  C182  FFF6         	movff	printf@f,tblptrl
 19708  011466  C183  FFF7         	movff	printf@f+1,tblptrh
 19709  01146A  0E00               	movlw	low (__mediumconst shr (0+16))
 19710  01146C  6EF8               	movwf	tblptru,c
 19711  01146E  0E0D               	movlw	(high __ramtop+-1)
 19712  011470  64F7               	cpfsgt	tblptrh,c
 19713  011472  D003               	bra	u24817
 19714  011474  0008               	tblrd		*
 19715  011476  50F5               	movf	tablat,w,c
 19716  011478  D005               	bra	u24810
 19717  01147A                     u24817:
 19718  01147A  CFF6 FFE9          	movff	tblptrl,fsr0l
 19719  01147E  CFF7 FFEA          	movff	tblptrh,fsr0h
 19720  011482  50EF               	movf	indf0,w,c
 19721  011484                     u24810:
 19722  011484  0101               	movlb	1	; () banked
 19723  011486  6F8E               	movwf	(??_printf+2)& (0+255),b
 19724  011488  6B8F               	clrf	(??_printf+3)& (0+255),b
 19725  01148A  518C               	movf	??_printf& (0+255),w,b
 19726  01148C  278E               	addwf	(??_printf+2)& (0+255),f,b
 19727  01148E  518D               	movf	(??_printf+1)& (0+255),w,b
 19728  011490  238F               	addwfc	(??_printf+3)& (0+255),f,b
 19729  011492  518E               	movf	(??_printf+2)& (0+255),w,b
 19730  011494  27AD               	addwf	printf@width& (0+255),f,b
 19731  011496  518F               	movf	(??_printf+3)& (0+255),w,b
 19732  011498  23AE               	addwfc	(printf@width+1)& (0+255),f,b
 19733                           
 19734                           ; BSR set to: 1
 19735  01149A  4B82               	infsnz	printf@f& (0+255),f,b
 19736  01149C  2B83               	incf	(printf@f+1)& (0+255),f,b
 19737                           
 19738                           ; BSR set to: 1
 19739                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 19740  01149E  C182  FFF6         	movff	printf@f,tblptrl
 19741  0114A2  C183  FFF7         	movff	printf@f+1,tblptrh
 19742  0114A6  0E00               	movlw	low (__mediumconst shr (0+16))
 19743  0114A8  6EF8               	movwf	tblptru,c
 19744  0114AA  0E0D               	movlw	(high __ramtop+-1)
 19745  0114AC  64F7               	cpfsgt	tblptrh,c
 19746  0114AE  D003               	bra	u24827
 19747  0114B0  0008               	tblrd		*
 19748  0114B2  50F5               	movf	tablat,w,c
 19749  0114B4  D005               	bra	u24820
 19750  0114B6                     u24827:
 19751  0114B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19752  0114BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19753  0114BE  50EF               	movf	indf0,w,c
 19754  0114C0                     u24820:
 19755  0114C0  ECB3  F0C8         	call	_isdigit
 19756  0114C4  B0D8               	btfsc	status,0,c
 19757  0114C6  D7B9               	goto	l1478
 19758  0114C8                     u24830:
 19759                           
 19760                           ;doprnt.c: 608: }
 19761                           ;doprnt.c: 611: if(*f == '.') {
 19762  0114C8  C182  FFF6         	movff	printf@f,tblptrl
 19763  0114CC  C183  FFF7         	movff	printf@f+1,tblptrh
 19764  0114D0  0E00               	movlw	low (__mediumconst shr (0+16))
 19765  0114D2  6EF8               	movwf	tblptru,c
 19766  0114D4  0E0D               	movlw	(high __ramtop+-1)
 19767  0114D6  64F7               	cpfsgt	tblptrh,c
 19768  0114D8  D003               	bra	u24847
 19769  0114DA  0008               	tblrd		*
 19770  0114DC  50F5               	movf	tablat,w,c
 19771  0114DE  D005               	bra	u24840
 19772  0114E0                     u24847:
 19773  0114E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 19774  0114E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 19775  0114E8  50EF               	movf	indf0,w,c
 19776  0114EA                     u24840:
 19777  0114EA  0A2E               	xorlw	46
 19778  0114EC  A4D8               	btfss	status,2,c
 19779  0114EE  D049               	goto	l1480
 19780                           
 19781                           ;doprnt.c: 612: flag |= 0x4000;
 19782  0114F0  0101               	movlb	1	; () banked
 19783  0114F2  8DAC               	bsf	(printf@flag+1)& (0+255),6,b
 19784                           
 19785                           ;doprnt.c: 613: f++;
 19786  0114F4  4B82               	infsnz	printf@f& (0+255),f,b
 19787  0114F6  2B83               	incf	(printf@f+1)& (0+255),f,b
 19788                           
 19789                           ; BSR set to: 1
 19790                           ;doprnt.c: 620: {
 19791                           ;doprnt.c: 621: prec = 0;
 19792  0114F8  0E00               	movlw	0
 19793  0114FA  6FB0               	movwf	(printf@prec+1)& (0+255),b
 19794  0114FC  0E00               	movlw	0
 19795  0114FE  6FAF               	movwf	printf@prec& (0+255),b
 19796                           
 19797                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 19798  011500  D02A               	goto	l1481
 19799  011502                     
 19800                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 19801                           
 19802                           ; BSR set to: 1
 19803  011502  C1AF  F117         	movff	printf@prec,___wmul@multiplier
 19804  011506  C1B0  F118         	movff	printf@prec+1,___wmul@multiplier+1
 19805  01150A  0E00               	movlw	0
 19806  01150C  0101               	movlb	1	; () banked
 19807  01150E  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19808  011510  0E0A               	movlw	10
 19809  011512  6F19               	movwf	___wmul@multiplicand& (0+255),b
 19810  011514  EC2C  F0C8         	call	___wmul	;wreg free
 19811  011518  C182  FFF6         	movff	printf@f,tblptrl
 19812  01151C  C183  FFF7         	movff	printf@f+1,tblptrh
 19813  011520  0E00               	movlw	low (__mediumconst shr (0+16))
 19814  011522  6EF8               	movwf	tblptru,c
 19815  011524  0E0D               	movlw	(high __ramtop+-1)
 19816  011526  64F7               	cpfsgt	tblptrh,c
 19817  011528  D003               	bra	u24867
 19818  01152A  0008               	tblrd		*
 19819  01152C  50F5               	movf	tablat,w,c
 19820  01152E  D005               	bra	u24860
 19821  011530                     u24867:
 19822  011530  CFF6 FFE9          	movff	tblptrl,fsr0l
 19823  011534  CFF7 FFEA          	movff	tblptrh,fsr0h
 19824  011538  50EF               	movf	indf0,w,c
 19825  01153A                     u24860:
 19826  01153A  0101               	movlb	1	; () banked
 19827  01153C  6F8C               	movwf	??_printf& (0+255),b
 19828  01153E  518C               	movf	??_printf& (0+255),w,b
 19829  011540  2717               	addwf	?___wmul& (0+255),f,b
 19830  011542  0E00               	movlw	0
 19831  011544  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 19832  011546  0ED0               	movlw	208
 19833  011548  2517               	addwf	?___wmul& (0+255),w,b
 19834  01154A  6FAF               	movwf	printf@prec& (0+255),b
 19835  01154C  0EFF               	movlw	255
 19836  01154E  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 19837  011550  6FB0               	movwf	(printf@prec+1)& (0+255),b
 19838                           
 19839                           ; BSR set to: 1
 19840  011552  4B82               	infsnz	printf@f& (0+255),f,b
 19841  011554  2B83               	incf	(printf@f+1)& (0+255),f,b
 19842  011556                     l1481:
 19843                           
 19844                           ; BSR set to: 1
 19845                           
 19846                           ; BSR set to: 1
 19847  011556  C182  FFF6         	movff	printf@f,tblptrl
 19848  01155A  C183  FFF7         	movff	printf@f+1,tblptrh
 19849  01155E  0E00               	movlw	low (__mediumconst shr (0+16))
 19850  011560  6EF8               	movwf	tblptru,c
 19851  011562  0E0D               	movlw	(high __ramtop+-1)
 19852  011564  64F7               	cpfsgt	tblptrh,c
 19853  011566  D003               	bra	u24877
 19854  011568  0008               	tblrd		*
 19855  01156A  50F5               	movf	tablat,w,c
 19856  01156C  D005               	bra	u24870
 19857  01156E                     u24877:
 19858  01156E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19859  011572  CFF7 FFEA          	movff	tblptrh,fsr0h
 19860  011576  50EF               	movf	indf0,w,c
 19861  011578                     u24870:
 19862  011578  ECB3  F0C8         	call	_isdigit
 19863  01157C  A0D8               	btfss	status,0,c
 19864  01157E  D0A4               	goto	l1485
 19865  011580  D7C0               	goto	l1482
 19866  011582                     l1480:
 19867                           
 19868                           ;doprnt.c: 626: prec = 0;
 19869  011582  0E00               	movlw	0
 19870  011584  0101               	movlb	1	; () banked
 19871  011586  6FB0               	movwf	(printf@prec+1)& (0+255),b
 19872  011588  0E00               	movlw	0
 19873  01158A  6FAF               	movwf	printf@prec& (0+255),b
 19874                           
 19875                           ; BSR set to: 1
 19876                           ;doprnt.c: 628: flag |= 0x1000;
 19877  01158C  89AC               	bsf	(printf@flag+1)& (0+255),4,b
 19878                           
 19879                           ; BSR set to: 1
 19880                           ;doprnt.c: 630: }
 19881                           ;doprnt.c: 635: switch(c = *f++) {
 19882  01158E  D09C               	goto	l1485
 19883  011590                     
 19884                           ; BSR set to: 1
 19885                           ;doprnt.c: 663: flag |= 0x400;
 19886                           
 19887                           ; BSR set to: 1
 19888  011590  85AC               	bsf	(printf@flag+1)& (0+255),2,b
 19889                           
 19890                           ; BSR set to: 1
 19891                           ;doprnt.c: 698: case 'i':
 19892                           ;doprnt.c: 699: break;
 19893                           
 19894                           ; BSR set to: 1
 19895                           
 19896                           ;doprnt.c: 697: case 'd':
 19897                           
 19898                           ;doprnt.c: 664: break;
 19899  011592  D0D1               	goto	l1489
 19900  011594                     
 19901                           ; BSR set to: 1
 19902                           ;doprnt.c: 718: case 'x':
 19903                           ;doprnt.c: 721: flag |= 0x80;
 19904                           
 19905                           ; BSR set to: 1
 19906                           
 19907                           ; BSR set to: 1
 19908  011594  8FAB               	bsf	printf@flag& (0+255),7,b
 19909                           
 19910                           ;doprnt.c: 723: break;
 19911  011596  D0CF               	goto	l1489
 19912  011598                     
 19913                           ; BSR set to: 1
 19914                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 19915                           
 19916                           ; BSR set to: 1
 19917  011598  C19B  FFD9         	movff	printf@ap,fsr2l
 19918  01159C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 19919  0115A0  CFDE F197          	movff	postinc2,printf@cp
 19920  0115A4  CFDD F198          	movff	postdec2,printf@cp+1
 19921                           
 19922                           ; BSR set to: 1
 19923  0115A8  0E02               	movlw	2
 19924  0115AA  279B               	addwf	printf@ap& (0+255),f,b
 19925  0115AC  0E00               	movlw	0
 19926  0115AE  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 19927                           
 19928                           ; BSR set to: 1
 19929                           ;doprnt.c: 740: if(!cp)
 19930  0115B0  5197               	movf	printf@cp& (0+255),w,b
 19931  0115B2  1198               	iorwf	(printf@cp+1)& (0+255),w,b
 19932  0115B4  A4D8               	btfss	status,2,c
 19933  0115B6  D004               	goto	l1495
 19934                           
 19935                           ; BSR set to: 1
 19936                           ;doprnt.c: 741: cp = "(null)";
 19937  0115B8  0E86               	movlw	low STR_164
 19938  0115BA  6F97               	movwf	printf@cp& (0+255),b
 19939  0115BC  0EFF               	movlw	high STR_164
 19940  0115BE  6F98               	movwf	(printf@cp+1)& (0+255),b
 19941  0115C0                     l1495:
 19942                           
 19943                           ; BSR set to: 1
 19944                           ;doprnt.c: 745: len = 0;
 19945                           
 19946                           ; BSR set to: 1
 19947  0115C0  0E00               	movlw	0
 19948  0115C2  6F9A               	movwf	(printf@len+1)& (0+255),b
 19949  0115C4  0E00               	movlw	0
 19950  0115C6  6F99               	movwf	printf@len& (0+255),b
 19951                           
 19952                           ;doprnt.c: 746: while(cp[len])
 19953  0115C8  D003               	goto	l1496
 19954  0115CA                     
 19955                           ;doprnt.c: 747: len++;
 19956                           
 19957                           ; BSR set to: 1
 19958  0115CA  0101               	movlb	1	; () banked
 19959  0115CC  4B99               	infsnz	printf@len& (0+255),f,b
 19960  0115CE  2B9A               	incf	(printf@len+1)& (0+255),f,b
 19961  0115D0                     l1496:
 19962                           
 19963                           ; BSR set to: 1
 19964                           
 19965                           ; BSR set to: 1
 19966  0115D0  5199               	movf	printf@len& (0+255),w,b
 19967  0115D2  2597               	addwf	printf@cp& (0+255),w,b
 19968  0115D4  6F8C               	movwf	??_printf& (0+255),b
 19969  0115D6  519A               	movf	(printf@len+1)& (0+255),w,b
 19970  0115D8  2198               	addwfc	(printf@cp+1)& (0+255),w,b
 19971  0115DA  6F8D               	movwf	(??_printf+1)& (0+255),b
 19972  0115DC  C18C  FFF6         	movff	??_printf,tblptrl
 19973  0115E0  C18D  FFF7         	movff	??_printf+1,tblptrh
 19974  0115E4  0E00               	movlw	low (__mediumconst shr (0+16))
 19975  0115E6  6EF8               	movwf	tblptru,c
 19976  0115E8  0E0D               	movlw	(high __ramtop+-1)
 19977  0115EA  64F7               	cpfsgt	tblptrh,c
 19978  0115EC  D003               	bra	u24907
 19979  0115EE  0008               	tblrd		*
 19980  0115F0  50F5               	movf	tablat,w,c
 19981  0115F2  D005               	bra	u24900
 19982  0115F4                     u24907:
 19983  0115F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19984  0115F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19985  0115FC  50EF               	movf	indf0,w,c
 19986  0115FE                     u24900:
 19987  0115FE  0900               	iorlw	0
 19988  011600  A4D8               	btfss	status,2,c
 19989  011602  D7E3               	goto	l1497
 19990  011604                     u24910:
 19991                           
 19992                           ;doprnt.c: 753: if(prec && prec < len)
 19993                           
 19994                           ;doprnt.c: 750: dostring:
 19995  011604  0101               	movlb	1	; () banked
 19996  011606  51AF               	movf	printf@prec& (0+255),w,b
 19997  011608  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 19998  01160A  B4D8               	btfsc	status,2,c
 19999  01160C  D00A               	goto	l1500
 20000                           
 20001                           ; BSR set to: 1
 20002  01160E  5199               	movf	printf@len& (0+255),w,b
 20003  011610  5DAF               	subwf	printf@prec& (0+255),w,b
 20004  011612  519A               	movf	(printf@len+1)& (0+255),w,b
 20005  011614  59B0               	subwfb	(printf@prec+1)& (0+255),w,b
 20006  011616  B0D8               	btfsc	status,0,c
 20007  011618  D004               	goto	l1500
 20008                           
 20009                           ; BSR set to: 1
 20010                           ;doprnt.c: 754: len = prec;
 20011  01161A  C1AF  F199         	movff	printf@prec,printf@len
 20012  01161E  C1B0  F19A         	movff	printf@prec+1,printf@len+1
 20013  011622                     l1500:
 20014                           
 20015                           ; BSR set to: 1
 20016                           ;doprnt.c: 757: if(width > len)
 20017                           
 20018                           ; BSR set to: 1
 20019  011622  51AD               	movf	printf@width& (0+255),w,b
 20020  011624  5D99               	subwf	printf@len& (0+255),w,b
 20021  011626  51AE               	movf	(printf@width+1)& (0+255),w,b
 20022  011628  599A               	subwfb	(printf@len+1)& (0+255),w,b
 20023  01162A  B0D8               	btfsc	status,0,c
 20024  01162C  D005               	goto	l1501
 20025                           
 20026                           ; BSR set to: 1
 20027                           ;doprnt.c: 758: width -= len;
 20028  01162E  5199               	movf	printf@len& (0+255),w,b
 20029  011630  5FAD               	subwf	printf@width& (0+255),f,b
 20030  011632  519A               	movf	(printf@len+1)& (0+255),w,b
 20031  011634  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 20032  011636  D008               	goto	l1503
 20033  011638                     l1501:
 20034                           
 20035                           ; BSR set to: 1
 20036                           ;doprnt.c: 759: else
 20037                           ;doprnt.c: 760: width = 0;
 20038                           
 20039                           ; BSR set to: 1
 20040  011638  0E00               	movlw	0
 20041  01163A  6FAE               	movwf	(printf@width+1)& (0+255),b
 20042  01163C  0E00               	movlw	0
 20043  01163E  6FAD               	movwf	printf@width& (0+255),b
 20044                           
 20045                           ; BSR set to: 1
 20046                           ;doprnt.c: 764: while(width--)
 20047  011640  D003               	goto	l1503
 20048  011642                     l18770:
 20049                           
 20050                           ; BSR set to: 1
 20051                           ;doprnt.c: 765: (putch(' ') );
 20052  011642  0E20               	movlw	32
 20053  011644  EC77  F0C9         	call	_putch
 20054  011648                     l1503:
 20055  011648  0101               	movlb	1	; () banked
 20056  01164A  07AD               	decf	printf@width& (0+255),f,b
 20057  01164C  A0D8               	btfss	status,0,c
 20058  01164E  07AE               	decf	(printf@width+1)& (0+255),f,b
 20059  011650  29AD               	incf	printf@width& (0+255),w,b
 20060  011652  E1F7               	bnz	l18770
 20061  011654  29AE               	incf	(printf@width+1)& (0+255),w,b
 20062  011656  B4D8               	btfsc	status,2,c
 20063  011658  D017               	goto	l1506
 20064  01165A  D7F3               	goto	l1504
 20065  01165C                     l18774:
 20066                           
 20067                           ; BSR set to: 1
 20068                           ;doprnt.c: 768: (putch(*cp++) );
 20069  01165C  C197  FFF6         	movff	printf@cp,tblptrl
 20070  011660  C198  FFF7         	movff	printf@cp+1,tblptrh
 20071  011664  0E00               	movlw	low (__mediumconst shr (0+16))
 20072  011666  6EF8               	movwf	tblptru,c
 20073  011668  0E0D               	movlw	(high __ramtop+-1)
 20074  01166A  64F7               	cpfsgt	tblptrh,c
 20075  01166C  D003               	bra	u24967
 20076  01166E  0008               	tblrd		*
 20077  011670  50F5               	movf	tablat,w,c
 20078  011672  D005               	bra	u24960
 20079  011674                     u24967:
 20080  011674  CFF6 FFE9          	movff	tblptrl,fsr0l
 20081  011678  CFF7 FFEA          	movff	tblptrh,fsr0h
 20082  01167C  50EF               	movf	indf0,w,c
 20083  01167E                     u24960:
 20084  01167E  EC77  F0C9         	call	_putch
 20085  011682  0101               	movlb	1	; () banked
 20086  011684  4B97               	infsnz	printf@cp& (0+255),f,b
 20087  011686  2B98               	incf	(printf@cp+1)& (0+255),f,b
 20088  011688                     l1506:
 20089                           
 20090                           ; BSR set to: 1
 20091                           
 20092                           ; BSR set to: 1
 20093  011688  0799               	decf	printf@len& (0+255),f,b
 20094  01168A  A0D8               	btfss	status,0,c
 20095  01168C  079A               	decf	(printf@len+1)& (0+255),f,b
 20096  01168E  2999               	incf	printf@len& (0+255),w,b
 20097  011690  E1E5               	bnz	l18774
 20098  011692  299A               	incf	(printf@len+1)& (0+255),w,b
 20099  011694  B4D8               	btfsc	status,2,c
 20100  011696  EF99  F090         	goto	u25520
 20101  01169A  D7E0               	goto	l1507
 20102  01169C                     
 20103                           ; BSR set to: 1
 20104                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20105                           
 20106                           ; BSR set to: 1
 20107  01169C  C19B  FFD9         	movff	printf@ap,fsr2l
 20108  0116A0  C19C  FFDA         	movff	printf@ap+1,fsr2h
 20109  0116A4  50DF               	movf	indf2,w,c
 20110  0116A6  6FB1               	movwf	printf@c& (0+255),b
 20111                           
 20112                           ; BSR set to: 1
 20113  0116A8  0E02               	movlw	2
 20114  0116AA  279B               	addwf	printf@ap& (0+255),f,b
 20115  0116AC  0E00               	movlw	0
 20116  0116AE  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 20117  0116B0                     
 20118                           ; BSR set to: 1
 20119                           ;doprnt.c: 805: cp = (char *)&c;
 20120                           
 20121                           ; BSR set to: 1
 20122  0116B0  0EB1               	movlw	low printf@c
 20123  0116B2  6F97               	movwf	printf@cp& (0+255),b
 20124  0116B4  0E01               	movlw	high printf@c
 20125  0116B6  6F98               	movwf	(printf@cp+1)& (0+255),b
 20126                           
 20127                           ; BSR set to: 1
 20128                           ;doprnt.c: 806: len = 1;
 20129  0116B8  0E00               	movlw	0
 20130  0116BA  6F9A               	movwf	(printf@len+1)& (0+255),b
 20131  0116BC  0E01               	movlw	1
 20132  0116BE  6F99               	movwf	printf@len& (0+255),b
 20133                           
 20134                           ;doprnt.c: 807: goto dostring;
 20135  0116C0  D7A1               	goto	u24910
 20136  0116C2                     
 20137                           ; BSR set to: 1
 20138                           ;doprnt.c: 818: flag |= 0xC0;
 20139                           
 20140                           ; BSR set to: 1
 20141  0116C2  0EC0               	movlw	192
 20142  0116C4  13AB               	iorwf	printf@flag& (0+255),f,b
 20143                           
 20144                           ; BSR set to: 1
 20145                           ;doprnt.c: 822: }
 20146                           
 20147                           ;doprnt.c: 819: break;
 20148  0116C6  D037               	goto	l1489
 20149  0116C8                     l1485:
 20150                           
 20151                           ; BSR set to: 1
 20152  0116C8  0101               	movlb	1	; () banked
 20153  0116CA  5182               	movf	printf@f& (0+255),w,b
 20154  0116CC  6F8C               	movwf	??_printf& (0+255),b
 20155  0116CE  5183               	movf	(printf@f+1)& (0+255),w,b
 20156  0116D0  6F8D               	movwf	(??_printf+1)& (0+255),b
 20157  0116D2  4B82               	infsnz	printf@f& (0+255),f,b
 20158  0116D4  2B83               	incf	(printf@f+1)& (0+255),f,b
 20159  0116D6  C18C  FFF6         	movff	??_printf,tblptrl
 20160  0116DA  C18D  FFF7         	movff	??_printf+1,tblptrh
 20161  0116DE  0E00               	movlw	low (__mediumconst shr (0+16))
 20162  0116E0  6EF8               	movwf	tblptru,c
 20163  0116E2  0E0D               	movlw	(high __ramtop+-1)
 20164  0116E4  64F7               	cpfsgt	tblptrh,c
 20165  0116E6  D003               	bra	u24987
 20166  0116E8  0008               	tblrd		*
 20167  0116EA  50F5               	movf	tablat,w,c
 20168  0116EC  D005               	bra	u24980
 20169  0116EE                     u24987:
 20170  0116EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 20171  0116F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 20172  0116F6  50EF               	movf	indf0,w,c
 20173  0116F8                     u24980:
 20174  0116F8  0101               	movlb	1	; () banked
 20175  0116FA  6FB1               	movwf	printf@c& (0+255),b
 20176  0116FC  51B1               	movf	printf@c& (0+255),w,b
 20177                           
 20178                           ; Switch size 1, requested type "space"
 20179                           ; Number of cases is 9, Range of values is 0 to 120
 20180                           ; switch strategies available:
 20181                           ; Name         Instructions Cycles
 20182                           ; simple_byte           28    15 (average)
 20183                           ;	Chosen strategy is simple_byte
 20184  0116FE  0A00               	xorlw	0	; case 0
 20185  011700  B4D8               	btfsc	status,2,c
 20186  011702  0012               	return	
 20187  011704  0A58               	xorlw	88	; case 88
 20188  011706  B4D8               	btfsc	status,2,c
 20189  011708  D745               	goto	l1492
 20190  01170A  0A3B               	xorlw	59	; case 99
 20191  01170C  B4D8               	btfsc	status,2,c
 20192  01170E  D7C6               	goto	l1509
 20193  011710  0A07               	xorlw	7	; case 100
 20194  011712  B4D8               	btfsc	status,2,c
 20195  011714  D010               	goto	l1489
 20196  011716  0A02               	xorlw	2	; case 102
 20197  011718  B4D8               	btfsc	status,2,c
 20198  01171A  D73A               	goto	l1488
 20199  01171C  0A0F               	xorlw	15	; case 105
 20200  01171E  B4D8               	btfsc	status,2,c
 20201  011720  D00A               	goto	l1489
 20202  011722  0A1A               	xorlw	26	; case 115
 20203  011724  B4D8               	btfsc	status,2,c
 20204  011726  D738               	goto	l1494
 20205  011728  0A06               	xorlw	6	; case 117
 20206  01172A  B4D8               	btfsc	status,2,c
 20207  01172C  D7CA               	goto	l1511
 20208  01172E  0A0D               	xorlw	13	; case 120
 20209  011730  B4D8               	btfsc	status,2,c
 20210  011732  D730               	goto	l1492
 20211  011734  D7BD               	goto	l1510
 20212  011736                     l1489:
 20213                           
 20214                           ; BSR set to: 1
 20215                           ;doprnt.c: 825: if(flag & (0x700)) {
 20216                           
 20217                           ; BSR set to: 1
 20218  011736  0E07               	movlw	7
 20219  011738  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20220  01173A  B4D8               	btfsc	status,2,c
 20221  01173C  D33D               	goto	l1512
 20222                           
 20223                           ; BSR set to: 1
 20224                           ;doprnt.c: 827: if(flag & 0x1000)
 20225  01173E  A9AC               	btfss	(printf@flag+1)& (0+255),4,b
 20226  011740  D004               	goto	l1513
 20227                           
 20228                           ; BSR set to: 1
 20229                           ;doprnt.c: 829: prec = 6;
 20230  011742  0E00               	movlw	0
 20231  011744  6FB0               	movwf	(printf@prec+1)& (0+255),b
 20232  011746  0E06               	movlw	6
 20233  011748  6FAF               	movwf	printf@prec& (0+255),b
 20234  01174A                     l1513:
 20235                           
 20236                           ; BSR set to: 1
 20237                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 20238                           
 20239                           ; BSR set to: 1
 20240  01174A  C19B  FFD9         	movff	printf@ap,fsr2l
 20241  01174E  C19C  FFDA         	movff	printf@ap+1,fsr2h
 20242  011752  CFDE F1A3          	movff	postinc2,printf@fval
 20243  011756  CFDE F1A4          	movff	postinc2,printf@fval+1
 20244  01175A  CFDE F1A5          	movff	postinc2,printf@fval+2
 20245  01175E  CFDE F1A6          	movff	postinc2,printf@fval+3
 20246                           
 20247                           ; BSR set to: 1
 20248  011762  0E04               	movlw	4
 20249  011764  279B               	addwf	printf@ap& (0+255),f,b
 20250  011766  0E00               	movlw	0
 20251  011768  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 20252                           
 20253                           ; BSR set to: 1
 20254                           ;doprnt.c: 831: if(fval < 0.0) {
 20255  01176A  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 20256  01176C  D015               	goto	l1514
 20257                           
 20258                           ; BSR set to: 1
 20259                           ;doprnt.c: 832: fval = -fval;
 20260  01176E  C1A3  F125         	movff	printf@fval,___flneg@f1
 20261  011772  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 20262  011776  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 20263  01177A  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 20264  01177E  ECD1  F0C7         	call	___flneg	;wreg free
 20265  011782  C125  F1A3         	movff	?___flneg,printf@fval
 20266  011786  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 20267  01178A  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 20268  01178E  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 20269                           
 20270                           ;doprnt.c: 833: flag |= 0x03;
 20271  011792  0E03               	movlw	3
 20272  011794  0101               	movlb	1	; () banked
 20273  011796  13AB               	iorwf	printf@flag& (0+255),f,b
 20274  011798                     l1514:
 20275                           
 20276                           ; BSR set to: 1
 20277                           ;doprnt.c: 834: }
 20278                           ;doprnt.c: 835: exp = 0;
 20279                           
 20280                           ; BSR set to: 1
 20281  011798  0E00               	movlw	0
 20282  01179A  6FA2               	movwf	(printf@exp+1)& (0+255),b
 20283  01179C  0E00               	movlw	0
 20284  01179E  6FA1               	movwf	printf@exp& (0+255),b
 20285                           
 20286                           ; BSR set to: 1
 20287                           ;doprnt.c: 836: if( fval!=0) {
 20288  0117A0  51A3               	movf	printf@fval& (0+255),w,b
 20289  0117A2  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 20290  0117A4  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 20291  0117A6  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 20292  0117A8  B4D8               	btfsc	status,2,c
 20293  0117AA  D084               	goto	l1519
 20294                           
 20295                           ; BSR set to: 1
 20296                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 20297  0117AC  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 20298  0117AE  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 20299  0117B0  0F82               	addlw	130
 20300  0117B2  6FA1               	movwf	printf@exp& (0+255),b
 20301  0117B4  6BA2               	clrf	(printf@exp+1)& (0+255),b
 20302  0117B6  0EFF               	movlw	255
 20303  0117B8  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 20304                           
 20305                           ; BSR set to: 1
 20306                           ;doprnt.c: 838: exp--;
 20307  0117BA  07A1               	decf	printf@exp& (0+255),f,b
 20308  0117BC  A0D8               	btfss	status,0,c
 20309  0117BE  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20310                           
 20311                           ; BSR set to: 1
 20312                           ;doprnt.c: 839: exp *= 3;
 20313  0117C0  C1A1  F117         	movff	printf@exp,___wmul@multiplier
 20314  0117C4  C1A2  F118         	movff	printf@exp+1,___wmul@multiplier+1
 20315  0117C8  0E00               	movlw	0
 20316  0117CA  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20317  0117CC  0E03               	movlw	3
 20318  0117CE  6F19               	movwf	___wmul@multiplicand& (0+255),b
 20319  0117D0  EC2C  F0C8         	call	___wmul	;wreg free
 20320  0117D4  C117  F1A1         	movff	?___wmul,printf@exp
 20321  0117D8  C118  F1A2         	movff	?___wmul+1,printf@exp+1
 20322                           
 20323                           ;doprnt.c: 840: exp /= 10;
 20324  0117DC  C1A1  F11D         	movff	printf@exp,___awdiv@dividend
 20325  0117E0  C1A2  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 20326  0117E4  0E00               	movlw	0
 20327  0117E6  0101               	movlb	1	; () banked
 20328  0117E8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 20329  0117EA  0E0A               	movlw	10
 20330  0117EC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 20331  0117EE  EC0A  F0C1         	call	___awdiv	;wreg free
 20332  0117F2  C11D  F1A1         	movff	?___awdiv,printf@exp
 20333  0117F6  C11E  F1A2         	movff	?___awdiv+1,printf@exp+1
 20334                           
 20335                           ;doprnt.c: 841: if(exp < 0)
 20336  0117FA  0101               	movlb	1	; () banked
 20337  0117FC  AFA2               	btfss	(printf@exp+1)& (0+255),7,b
 20338  0117FE  D003               	goto	l1516
 20339                           
 20340                           ; BSR set to: 1
 20341                           ;doprnt.c: 842: exp--;
 20342  011800  07A1               	decf	printf@exp& (0+255),f,b
 20343  011802  A0D8               	btfss	status,0,c
 20344  011804  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20345  011806                     l1516:
 20346                           
 20347                           ; BSR set to: 1
 20348                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 20349                           
 20350                           ; BSR set to: 1
 20351  011806  51A1               	movf	printf@exp& (0+255),w,b
 20352  011808  0800               	sublw	0
 20353  01180A  EC8A  F09C         	call	_scale
 20354  01180E  C16F  F19D         	movff	?_scale,printf@tmpval
 20355  011812  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 20356  011816  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 20357  01181A  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 20358                           
 20359                           ;doprnt.c: 847: tmpval.integ *= fval;
 20360  01181E  C19D  F156         	movff	printf@tmpval,___flmul@b
 20361  011822  C19E  F157         	movff	printf@tmpval+1,___flmul@b+1
 20362  011826  C19F  F158         	movff	printf@tmpval+2,___flmul@b+2
 20363  01182A  C1A0  F159         	movff	printf@tmpval+3,___flmul@b+3
 20364  01182E  C1A3  F15A         	movff	printf@fval,___flmul@a
 20365  011832  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 20366  011836  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 20367  01183A  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 20368  01183E  ECD0  F0A2         	call	___flmul	;wreg free
 20369  011842  C156  F19D         	movff	?___flmul,printf@tmpval
 20370  011846  C157  F19E         	movff	?___flmul+1,printf@tmpval+1
 20371  01184A  C158  F19F         	movff	?___flmul+2,printf@tmpval+2
 20372  01184E  C159  F1A0         	movff	?___flmul+3,printf@tmpval+3
 20373                           
 20374                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 20375  011852  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20376  011856  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20377  01185A  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20378  01185E  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20379  011862  0E00               	movlw	0
 20380  011864  0101               	movlb	1	; () banked
 20381  011866  6F1B               	movwf	___flge@ff2& (0+255),b
 20382  011868  0E00               	movlw	0
 20383  01186A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20384  01186C  0E80               	movlw	128
 20385  01186E  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20386  011870  0E3F               	movlw	63
 20387  011872  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20388  011874  ECE4  F0BA         	call	___flge	;wreg free
 20389  011878  0101               	movlb	1	; () banked
 20390  01187A  B0D8               	btfsc	status,0,c
 20391  01187C  D004               	goto	l1517
 20392                           
 20393                           ; BSR set to: 1
 20394                           ;doprnt.c: 849: exp--;
 20395  01187E  07A1               	decf	printf@exp& (0+255),f,b
 20396  011880  A0D8               	btfss	status,0,c
 20397  011882  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20398  011884  D017               	goto	l1519
 20399  011886                     l1517:
 20400                           
 20401                           ; BSR set to: 1
 20402                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 20403                           
 20404                           ; BSR set to: 1
 20405  011886  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20406  01188A  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20407  01188E  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20408  011892  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20409  011896  0E00               	movlw	0
 20410  011898  6F1B               	movwf	___flge@ff2& (0+255),b
 20411  01189A  0E00               	movlw	0
 20412  01189C  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20413  01189E  0E20               	movlw	32
 20414  0118A0  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20415  0118A2  0E41               	movlw	65
 20416  0118A4  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20417  0118A6  ECE4  F0BA         	call	___flge	;wreg free
 20418  0118AA  0101               	movlb	1	; () banked
 20419  0118AC  A0D8               	btfss	status,0,c
 20420  0118AE  D002               	goto	l1519
 20421                           
 20422                           ; BSR set to: 1
 20423                           ;doprnt.c: 851: exp++;
 20424  0118B0  4BA1               	infsnz	printf@exp& (0+255),f,b
 20425  0118B2  2BA2               	incf	(printf@exp+1)& (0+255),f,b
 20426  0118B4                     l1519:
 20427                           
 20428                           ; BSR set to: 1
 20429                           ;doprnt.c: 852: }
 20430                           ;doprnt.c: 1112: if(prec <= 12)
 20431                           
 20432                           ; BSR set to: 1
 20433                           
 20434                           ; BSR set to: 1
 20435                           
 20436                           ; BSR set to: 1
 20437  0118B4  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 20438  0118B6  D006               	goto	u25060
 20439  0118B8  51B0               	movf	(printf@prec+1)& (0+255),w,b
 20440  0118BA  E121               	bnz	l18842
 20441  0118BC  0E0D               	movlw	13
 20442  0118BE  5DAF               	subwf	printf@prec& (0+255),w,b
 20443  0118C0  B0D8               	btfsc	status,0,c
 20444  0118C2  D01D               	goto	l1520
 20445  0118C4                     u25060:
 20446                           
 20447                           ; BSR set to: 1
 20448                           ;doprnt.c: 1113: fval += fround(prec);
 20449  0118C4  C1A3  F129         	movff	printf@fval,___fladd@b
 20450  0118C8  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 20451  0118CC  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 20452  0118D0  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 20453  0118D4  51AF               	movf	printf@prec& (0+255),w,b
 20454  0118D6  ECC2  F0AD         	call	_fround
 20455  0118DA  C16F  F12D         	movff	?_fround,___fladd@a
 20456  0118DE  C170  F12E         	movff	?_fround+1,___fladd@a+1
 20457  0118E2  C171  F12F         	movff	?_fround+2,___fladd@a+2
 20458  0118E6  C172  F130         	movff	?_fround+3,___fladd@a+3
 20459  0118EA  EC21  F0A6         	call	___fladd	;wreg free
 20460  0118EE  C129  F1A3         	movff	?___fladd,printf@fval
 20461  0118F2  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 20462  0118F6  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 20463  0118FA  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 20464  0118FE                     l1520:
 20465  0118FE                     l18842:
 20466                           
 20467                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 20468  0118FE  0101               	movlb	1	; () banked
 20469  011900  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 20470  011902  D006               	goto	u25070
 20471  011904  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20472  011906  E122               	bnz	l18850
 20473  011908  0E0A               	movlw	10
 20474  01190A  5DA1               	subwf	printf@exp& (0+255),w,b
 20475  01190C  B0D8               	btfsc	status,0,c
 20476  01190E  D01E               	goto	u25100
 20477  011910                     u25070:
 20478                           
 20479                           ; BSR set to: 1
 20480  011910  51A3               	movf	printf@fval& (0+255),w,b
 20481  011912  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 20482  011914  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 20483  011916  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 20484  011918  B4D8               	btfsc	status,2,c
 20485  01191A  D062               	goto	l1521
 20486                           
 20487                           ; BSR set to: 1
 20488  01191C  C1A3  F178         	movff	printf@fval,___fltol@f1
 20489  011920  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 20490  011924  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 20491  011928  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 20492  01192C  EC93  F0BD         	call	___fltol	;wreg free
 20493  011930  0101               	movlb	1	; () banked
 20494  011932  5178               	movf	?___fltol& (0+255),w,b
 20495  011934  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 20496  011936  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 20497  011938  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 20498  01193A  B4D8               	btfsc	status,2,c
 20499                           
 20500                           ; BSR set to: 1
 20501  01193C  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 20502  01193E  D050               	goto	l1521
 20503  011940  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20504  011942  E104               	bnz	l18850
 20505  011944  0E02               	movlw	2
 20506  011946  5DA1               	subwf	printf@exp& (0+255),w,b
 20507  011948  A0D8               	btfss	status,0,c
 20508  01194A  D04A               	goto	l1521
 20509  01194C                     u25100:
 20510  01194C                     l18850:
 20511                           
 20512                           ; BSR set to: 1
 20513                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 20514  01194C  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20515  011950  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20516  011954  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20517  011958  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20518  01195C  0E5F               	movlw	95
 20519  01195E  6F1B               	movwf	___flge@ff2& (0+255),b
 20520  011960  0E70               	movlw	112
 20521  011962  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20522  011964  0E89               	movlw	137
 20523  011966  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20524  011968  0E40               	movlw	64
 20525  01196A  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20526  01196C  ECE4  F0BA         	call	___flge	;wreg free
 20527  011970  0101               	movlb	1	; () banked
 20528  011972  B0D8               	btfsc	status,0,c
 20529  011974  D002               	goto	l1524
 20530                           
 20531                           ; BSR set to: 1
 20532                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 20533  011976  0EF7               	movlw	247
 20534  011978  D001               	goto	L3
 20535  01197A                     l1524:
 20536                           
 20537                           ; BSR set to: 1
 20538                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 20539                           
 20540                           ; BSR set to: 1
 20541  01197A  0EF8               	movlw	248
 20542  01197C                     L3:
 20543  01197C  27A1               	addwf	printf@exp& (0+255),f,b
 20544  01197E  0EFF               	movlw	255
 20545  011980  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 20546                           
 20547                           ; BSR set to: 1
 20548                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 20549                           
 20550                           ; BSR set to: 1
 20551  011982  51A1               	movf	printf@exp& (0+255),w,b
 20552  011984  EC8A  F09C         	call	_scale
 20553  011988  C16F  F19D         	movff	?_scale,printf@tmpval
 20554  01198C  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 20555  011990  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 20556  011994  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 20557  011998  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 20558  01199C  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 20559  0119A0  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 20560  0119A4  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 20561  0119A8  C19D  F11B         	movff	printf@tmpval,__div_to_l_@f2
 20562  0119AC  C19E  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 20563  0119B0  C19F  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 20564  0119B4  C1A0  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 20565  0119B8  EC29  F0B9         	call	__div_to_l_	;wreg free
 20566  0119BC  C117  F1A7         	movff	?__div_to_l_,printf@val
 20567  0119C0  C118  F1A8         	movff	?__div_to_l_+1,printf@val+1
 20568  0119C4  C119  F1A9         	movff	?__div_to_l_+2,printf@val+2
 20569  0119C8  C11A  F1AA         	movff	?__div_to_l_+3,printf@val+3
 20570                           
 20571                           ;doprnt.c: 1129: fval = 0.0;
 20572  0119CC  0E00               	movlw	0
 20573  0119CE  0101               	movlb	1	; () banked
 20574  0119D0  6FA3               	movwf	printf@fval& (0+255),b
 20575  0119D2  0E00               	movlw	0
 20576  0119D4  6FA4               	movwf	(printf@fval+1)& (0+255),b
 20577  0119D6  0E00               	movlw	0
 20578  0119D8  6FA5               	movwf	(printf@fval+2)& (0+255),b
 20579  0119DA  0E00               	movlw	0
 20580  0119DC  6FA6               	movwf	(printf@fval+3)& (0+255),b
 20581                           
 20582                           ;doprnt.c: 1130: } else {
 20583  0119DE  D03C               	goto	l1530
 20584  0119E0                     l1521:
 20585                           
 20586                           ; BSR set to: 1
 20587                           ;doprnt.c: 1131: val = (unsigned long)fval;
 20588                           
 20589                           ; BSR set to: 1
 20590  0119E0  C1A3  F178         	movff	printf@fval,___fltol@f1
 20591  0119E4  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 20592  0119E8  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 20593  0119EC  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 20594  0119F0  EC93  F0BD         	call	___fltol	;wreg free
 20595  0119F4  C178  F1A7         	movff	?___fltol,printf@val
 20596  0119F8  C179  F1A8         	movff	?___fltol+1,printf@val+1
 20597  0119FC  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 20598  011A00  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 20599                           
 20600                           ;doprnt.c: 1132: fval -= (double)val;
 20601  011A04  C1A3  F13D         	movff	printf@fval,___flsub@b
 20602  011A08  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 20603  011A0C  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 20604  011A10  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 20605  011A14  C1A7  F117         	movff	printf@val,___xxtofl@val
 20606  011A18  C1A8  F118         	movff	printf@val+1,___xxtofl@val+1
 20607  011A1C  C1A9  F119         	movff	printf@val+2,___xxtofl@val+2
 20608  011A20  C1AA  F11A         	movff	printf@val+3,___xxtofl@val+3
 20609  011A24  0E00               	movlw	0
 20610  011A26  ECA4  F0B6         	call	___xxtofl
 20611  011A2A  C117  F141         	movff	?___xxtofl,___flsub@a
 20612  011A2E  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 20613  011A32  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 20614  011A36  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 20615  011A3A  EC14  F0C6         	call	___flsub	;wreg free
 20616  011A3E  C13D  F1A3         	movff	?___flsub,printf@fval
 20617  011A42  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 20618  011A46  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 20619  011A4A  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 20620                           
 20621                           ;doprnt.c: 1133: exp = 0;
 20622  011A4E  0E00               	movlw	0
 20623  011A50  0101               	movlb	1	; () banked
 20624  011A52  6FA2               	movwf	(printf@exp+1)& (0+255),b
 20625  011A54  0E00               	movlw	0
 20626  011A56  6FA1               	movwf	printf@exp& (0+255),b
 20627  011A58                     l1530:
 20628                           
 20629                           ; BSR set to: 1
 20630                           ;doprnt.c: 1134: }
 20631                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 20632                           
 20633                           ; BSR set to: 1
 20634  011A58  0E01               	movlw	1
 20635  011A5A  6FB1               	movwf	printf@c& (0+255),b
 20636  011A5C                     l18870:
 20637                           
 20638                           ; BSR set to: 1
 20639  011A5C  0E0A               	movlw	10
 20640  011A5E  19B1               	xorwf	printf@c& (0+255),w,b
 20641  011A60  B4D8               	btfsc	status,2,c
 20642  011A62  D01B               	goto	u25140
 20643                           
 20644                           ; BSR set to: 1
 20645                           ;doprnt.c: 1137: if(val < dpowers[c])
 20646                           
 20647                           ; BSR set to: 1
 20648                           
 20649                           ; BSR set to: 1
 20650  011A64  51B1               	movf	printf@c& (0+255),w,b
 20651  011A66  0D04               	mullw	4
 20652  011A68  0EAB               	movlw	low _dpowers
 20653  011A6A  24F3               	addwf	prodl,w,c
 20654  011A6C  6EF6               	movwf	tblptrl,c
 20655  011A6E  0ED8               	movlw	high _dpowers
 20656  011A70  20F4               	addwfc	prodh,w,c
 20657  011A72  6EF7               	movwf	tblptrh,c
 20658  011A74                     	if	1	;There are 3 active tblptr bytes
 20659  011A74  6AF8               	clrf	tblptru,c
 20660  011A76  0E00               	movlw	low (__mediumconst shr (0+16))
 20661  011A78  22F8               	addwfc	tblptru,f,c
 20662  011A7A                     	endif
 20663  011A7A  0009               	tblrd		*+
 20664  011A7C  50F5               	movf	tablat,w,c
 20665  011A7E  5DA7               	subwf	printf@val& (0+255),w,b
 20666  011A80  0009               	tblrd		*+
 20667  011A82  50F5               	movf	tablat,w,c
 20668  011A84  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 20669  011A86  0009               	tblrd		*+
 20670  011A88  50F5               	movf	tablat,w,c
 20671  011A8A  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 20672  011A8C  0009               	tblrd		*+
 20673  011A8E  50F5               	movf	tablat,w,c
 20674  011A90  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 20675  011A92  A0D8               	btfss	status,0,c
 20676  011A94  D002               	goto	u25140
 20677                           
 20678                           ; BSR set to: 1
 20679                           
 20680                           ; BSR set to: 1
 20681                           
 20682                           ; BSR set to: 1
 20683                           ;doprnt.c: 1138: break;
 20684  011A96  2BB1               	incf	printf@c& (0+255),f,b
 20685  011A98  D7E1               	goto	l18870
 20686  011A9A                     u25140:
 20687                           
 20688                           ; BSR set to: 1
 20689                           ;doprnt.c: 1142: width -= prec + c + exp;
 20690                           
 20691                           ; BSR set to: 1
 20692  011A9A  C1B1  F18C         	movff	printf@c,??_printf
 20693  011A9E  6B8D               	clrf	(??_printf+1)& (0+255),b
 20694  011AA0  BF8C               	btfsc	??_printf& (0+255),7,b
 20695  011AA2  078D               	decf	(??_printf+1)& (0+255),f,b
 20696  011AA4  51AF               	movf	printf@prec& (0+255),w,b
 20697  011AA6  278C               	addwf	??_printf& (0+255),f,b
 20698  011AA8  51B0               	movf	(printf@prec+1)& (0+255),w,b
 20699  011AAA  238D               	addwfc	(??_printf+1)& (0+255),f,b
 20700  011AAC  51A1               	movf	printf@exp& (0+255),w,b
 20701  011AAE  278C               	addwf	??_printf& (0+255),f,b
 20702  011AB0  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20703  011AB2  238D               	addwfc	(??_printf+1)& (0+255),f,b
 20704  011AB4  518C               	movf	??_printf& (0+255),w,b
 20705  011AB6  5FAD               	subwf	printf@width& (0+255),f,b
 20706  011AB8  518D               	movf	(??_printf+1)& (0+255),w,b
 20707  011ABA  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 20708                           
 20709                           ;doprnt.c: 1143: if(
 20710                           ;doprnt.c: 1147: prec)
 20711  011ABC  51AF               	movf	printf@prec& (0+255),w,b
 20712  011ABE  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 20713  011AC0  B4D8               	btfsc	status,2,c
 20714  011AC2  D003               	goto	l1534
 20715                           
 20716                           ; BSR set to: 1
 20717                           ;doprnt.c: 1148: width--;
 20718  011AC4  07AD               	decf	printf@width& (0+255),f,b
 20719  011AC6  A0D8               	btfss	status,0,c
 20720  011AC8  07AE               	decf	(printf@width+1)& (0+255),f,b
 20721  011ACA                     l1534:
 20722                           
 20723                           ; BSR set to: 1
 20724                           ;doprnt.c: 1149: if(flag & 0x03)
 20725                           
 20726                           ; BSR set to: 1
 20727  011ACA  0E03               	movlw	3
 20728  011ACC  15AB               	andwf	printf@flag& (0+255),w,b
 20729  011ACE  6F8C               	movwf	??_printf& (0+255),b
 20730  011AD0  0E00               	movlw	0
 20731  011AD2  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20732  011AD4  6F8D               	movwf	(??_printf+1)& (0+255),b
 20733  011AD6  518C               	movf	??_printf& (0+255),w,b
 20734  011AD8  118D               	iorwf	(??_printf+1)& (0+255),w,b
 20735  011ADA  B4D8               	btfsc	status,2,c
 20736  011ADC  D003               	goto	l1535
 20737                           
 20738                           ; BSR set to: 1
 20739                           ;doprnt.c: 1150: width--;
 20740  011ADE  07AD               	decf	printf@width& (0+255),f,b
 20741  011AE0  A0D8               	btfss	status,0,c
 20742  011AE2  07AE               	decf	(printf@width+1)& (0+255),f,b
 20743  011AE4                     l1535:
 20744                           
 20745                           ; BSR set to: 1
 20746                           ;doprnt.c: 1153: if(flag & 0x04) {
 20747                           
 20748                           ; BSR set to: 1
 20749  011AE4  A5AB               	btfss	printf@flag& (0+255),2,b
 20750  011AE6  D025               	goto	l1542
 20751                           
 20752                           ; BSR set to: 1
 20753                           ;doprnt.c: 1157: if(flag & 0x03)
 20754  011AE8  0E03               	movlw	3
 20755  011AEA  15AB               	andwf	printf@flag& (0+255),w,b
 20756  011AEC  6F8C               	movwf	??_printf& (0+255),b
 20757  011AEE  0E00               	movlw	0
 20758  011AF0  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20759  011AF2  6F8D               	movwf	(??_printf+1)& (0+255),b
 20760  011AF4  518C               	movf	??_printf& (0+255),w,b
 20761  011AF6  118D               	iorwf	(??_printf+1)& (0+255),w,b
 20762  011AF8  B4D8               	btfsc	status,2,c
 20763  011AFA  D00B               	goto	l1538
 20764                           
 20765                           ; BSR set to: 1
 20766                           ;doprnt.c: 1159: (putch('-') );
 20767  011AFC  0E2D               	movlw	45
 20768  011AFE  EC77  F0C9         	call	_putch
 20769                           
 20770                           ;doprnt.c: 1168: while(width > 0) {
 20771  011B02  D007               	goto	l1538
 20772  011B04                     l18896:
 20773                           
 20774                           ;doprnt.c: 1169: (putch('0') );
 20775  011B04  0E30               	movlw	48
 20776  011B06  EC77  F0C9         	call	_putch
 20777                           
 20778                           ;doprnt.c: 1170: width--;
 20779  011B0A  0101               	movlb	1	; () banked
 20780  011B0C  07AD               	decf	printf@width& (0+255),f,b
 20781  011B0E  A0D8               	btfss	status,0,c
 20782  011B10  07AE               	decf	(printf@width+1)& (0+255),f,b
 20783  011B12                     l1538:
 20784                           
 20785                           ; BSR set to: 1
 20786  011B12  0101               	movlb	1	; () banked
 20787  011B14  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 20788  011B16  D06C               	goto	l1546
 20789  011B18  51AE               	movf	(printf@width+1)& (0+255),w,b
 20790  011B1A  E1F4               	bnz	l18896
 20791  011B1C  05AD               	decf	printf@width& (0+255),w,b
 20792  011B1E  A0D8               	btfss	status,0,c
 20793  011B20  D067               	goto	l1546
 20794  011B22  D7F0               	goto	l1539
 20795  011B24                     l18902:
 20796                           
 20797                           ; BSR set to: 1
 20798                           ;doprnt.c: 1181: (putch(' ') );
 20799  011B24  0E20               	movlw	32
 20800  011B26  EC77  F0C9         	call	_putch
 20801                           
 20802                           ;doprnt.c: 1182: width--;
 20803  011B2A  0101               	movlb	1	; () banked
 20804  011B2C  07AD               	decf	printf@width& (0+255),f,b
 20805  011B2E  A0D8               	btfss	status,0,c
 20806  011B30  07AE               	decf	(printf@width+1)& (0+255),f,b
 20807  011B32                     l1542:
 20808                           
 20809                           ; BSR set to: 1
 20810                           
 20811                           ; BSR set to: 1
 20812  011B32  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 20813  011B34  D005               	goto	u25200
 20814  011B36  51AE               	movf	(printf@width+1)& (0+255),w,b
 20815  011B38  E1F5               	bnz	l18902
 20816  011B3A  05AD               	decf	printf@width& (0+255),w,b
 20817  011B3C  B0D8               	btfsc	status,0,c
 20818  011B3E  D7F2               	goto	l1543
 20819  011B40                     u25200:
 20820                           
 20821                           ; BSR set to: 1
 20822                           ;doprnt.c: 1183: }
 20823                           ;doprnt.c: 1188: if(flag & 0x03)
 20824                           
 20825                           ; BSR set to: 1
 20826  011B40  0E03               	movlw	3
 20827  011B42  15AB               	andwf	printf@flag& (0+255),w,b
 20828  011B44  6F8C               	movwf	??_printf& (0+255),b
 20829  011B46  0E00               	movlw	0
 20830  011B48  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20831  011B4A  6F8D               	movwf	(??_printf+1)& (0+255),b
 20832  011B4C  518C               	movf	??_printf& (0+255),w,b
 20833  011B4E  118D               	iorwf	(??_printf+1)& (0+255),w,b
 20834  011B50  B4D8               	btfsc	status,2,c
 20835  011B52  D04E               	goto	l1546
 20836                           
 20837                           ; BSR set to: 1
 20838                           ;doprnt.c: 1190: (putch('-') );
 20839  011B54  0E2D               	movlw	45
 20840  011B56  EC77  F0C9         	call	_putch
 20841                           
 20842                           ;doprnt.c: 1195: }
 20843                           ;doprnt.c: 1196: while(c--) {
 20844  011B5A  D04A               	goto	l1546
 20845  011B5C                     
 20846                           ;doprnt.c: 1200: {
 20847                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 20848  011B5C  C1A7  F117         	movff	printf@val,___lldiv@dividend
 20849  011B60  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 20850  011B64  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 20851  011B68  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 20852  011B6C  0101               	movlb	1	; () banked
 20853  011B6E  51B1               	movf	printf@c& (0+255),w,b
 20854  011B70  0D04               	mullw	4
 20855  011B72  0EAB               	movlw	low _dpowers
 20856  011B74  24F3               	addwf	prodl,w,c
 20857  011B76  6EF6               	movwf	tblptrl,c
 20858  011B78  0ED8               	movlw	high _dpowers
 20859  011B7A  20F4               	addwfc	prodh,w,c
 20860  011B7C  6EF7               	movwf	tblptrh,c
 20861  011B7E                     	if	1	;There are 3 active tblptr bytes
 20862  011B7E  6AF8               	clrf	tblptru,c
 20863  011B80  0E00               	movlw	low (__mediumconst shr (0+16))
 20864  011B82  22F8               	addwfc	tblptru,f,c
 20865  011B84                     	endif
 20866  011B84  0009               	tblrd		*+
 20867  011B86  CFF5 F11B          	movff	tablat,___lldiv@divisor
 20868  011B8A  0009               	tblrd		*+
 20869  011B8C  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 20870  011B90  0009               	tblrd		*+
 20871  011B92  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 20872  011B96  000A               	tblrd		*-
 20873  011B98  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 20874  011B9C  EC4D  F0C1         	call	___lldiv	;wreg free
 20875  011BA0  C117  F19D         	movff	?___lldiv,printf@tmpval
 20876  011BA4  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 20877  011BA8  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 20878  011BAC  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 20879                           
 20880                           ;doprnt.c: 1202: tmpval.vd %= 10;
 20881  011BB0  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 20882  011BB4  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 20883  011BB8  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 20884  011BBC  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 20885  011BC0  0E0A               	movlw	10
 20886  011BC2  0101               	movlb	1	; () banked
 20887  011BC4  6F28               	movwf	___llmod@divisor& (0+255),b
 20888  011BC6  0E00               	movlw	0
 20889  011BC8  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 20890  011BCA  0E00               	movlw	0
 20891  011BCC  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 20892  011BCE  0E00               	movlw	0
 20893  011BD0  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 20894  011BD2  EC9E  F0C3         	call	___llmod	;wreg free
 20895  011BD6  C124  F19D         	movff	?___llmod,printf@tmpval
 20896  011BDA  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 20897  011BDE  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 20898  011BE2  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 20899                           
 20900                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 20901  011BE6  0101               	movlb	1	; () banked
 20902  011BE8  519D               	movf	printf@tmpval& (0+255),w,b
 20903  011BEA  0F30               	addlw	48
 20904  011BEC  EC77  F0C9         	call	_putch
 20905  011BF0                     l1546:
 20906  011BF0  0101               	movlb	1	; () banked
 20907  011BF2  07B1               	decf	printf@c& (0+255),f,b
 20908  011BF4  29B1               	incf	printf@c& (0+255),w,b
 20909  011BF6  B4D8               	btfsc	status,2,c
 20910  011BF8  D008               	goto	l1549
 20911  011BFA  D7B0               	goto	l1547
 20912  011BFC                     l18920:
 20913                           
 20914                           ; BSR set to: 1
 20915                           ;doprnt.c: 1208: (putch('0') );
 20916  011BFC  0E30               	movlw	48
 20917  011BFE  EC77  F0C9         	call	_putch
 20918                           
 20919                           ;doprnt.c: 1209: exp--;
 20920  011C02  0101               	movlb	1	; () banked
 20921  011C04  07A1               	decf	printf@exp& (0+255),f,b
 20922  011C06  A0D8               	btfss	status,0,c
 20923  011C08  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20924  011C0A                     l1549:
 20925                           
 20926                           ; BSR set to: 1
 20927                           
 20928                           ; BSR set to: 1
 20929  011C0A  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 20930  011C0C  D005               	goto	u25230
 20931  011C0E  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20932  011C10  E1F5               	bnz	l18920
 20933  011C12  05A1               	decf	printf@exp& (0+255),w,b
 20934  011C14  B0D8               	btfsc	status,0,c
 20935  011C16  D7F2               	goto	l1550
 20936  011C18                     u25230:
 20937                           
 20938                           ; BSR set to: 1
 20939                           ;doprnt.c: 1210: }
 20940                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 20941                           
 20942                           ; BSR set to: 1
 20943  011C18  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 20944  011C1A  D009               	goto	l1552
 20945  011C1C  51B0               	movf	(printf@prec+1)& (0+255),w,b
 20946  011C1E  E104               	bnz	u25240
 20947  011C20  0E09               	movlw	9
 20948  011C22  5DAF               	subwf	printf@prec& (0+255),w,b
 20949  011C24  A0D8               	btfss	status,0,c
 20950  011C26  D003               	goto	l1552
 20951  011C28                     u25240:
 20952                           
 20953                           ; BSR set to: 1
 20954                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 20955  011C28  0E08               	movlw	8
 20956  011C2A  6FB1               	movwf	printf@c& (0+255),b
 20957  011C2C  D002               	goto	l1553
 20958  011C2E                     l1552:
 20959                           
 20960                           ; BSR set to: 1
 20961                           ;doprnt.c: 1213: else
 20962                           ;doprnt.c: 1214: c = prec;
 20963  011C2E  C1AF  F1B1         	movff	printf@prec,printf@c
 20964  011C32                     l1553:
 20965                           
 20966                           ; BSR set to: 1
 20967                           ;doprnt.c: 1215: prec -= c;
 20968                           
 20969                           ; BSR set to: 1
 20970  011C32  51B1               	movf	printf@c& (0+255),w,b
 20971  011C34  5FAF               	subwf	printf@prec& (0+255),f,b
 20972  011C36  0E00               	movlw	0
 20973  011C38  BFB1               	btfsc	printf@c& (0+255),7,b
 20974  011C3A  0EFF               	movlw	255
 20975  011C3C  5BB0               	subwfb	(printf@prec+1)& (0+255),f,b
 20976                           
 20977                           ; BSR set to: 1
 20978                           ;doprnt.c: 1219: if(c)
 20979  011C3E  51B1               	movf	printf@c& (0+255),w,b
 20980  011C40  B4D8               	btfsc	status,2,c
 20981  011C42  D003               	goto	l1554
 20982                           
 20983                           ; BSR set to: 1
 20984                           ;doprnt.c: 1221: (putch('.') );
 20985  011C44  0E2E               	movlw	46
 20986  011C46  EC77  F0C9         	call	_putch
 20987  011C4A                     l1554:
 20988                           
 20989                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 20990  011C4A  0101               	movlb	1	; () banked
 20991  011C4C  51B1               	movf	printf@c& (0+255),w,b
 20992  011C4E  EC8A  F09C         	call	_scale
 20993  011C52  C16F  F192         	movff	?_scale,_printf$3991
 20994  011C56  C170  F193         	movff	?_scale+1,_printf$3991+1
 20995  011C5A  C171  F194         	movff	?_scale+2,_printf$3991+2
 20996  011C5E  C172  F195         	movff	?_scale+3,_printf$3991+3
 20997                           
 20998                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 20999  011C62  C1A3  F15A         	movff	printf@fval,___flmul@a
 21000  011C66  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 21001  011C6A  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 21002  011C6E  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 21003  011C72  C192  F156         	movff	_printf$3991,___flmul@b
 21004  011C76  C193  F157         	movff	_printf$3991+1,___flmul@b+1
 21005  011C7A  C194  F158         	movff	_printf$3991+2,___flmul@b+2
 21006  011C7E  C195  F159         	movff	_printf$3991+3,___flmul@b+3
 21007  011C82  ECD0  F0A2         	call	___flmul	;wreg free
 21008  011C86  C156  F178         	movff	?___flmul,___fltol@f1
 21009  011C8A  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 21010  011C8E  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 21011  011C92  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 21012  011C96  EC93  F0BD         	call	___fltol	;wreg free
 21013  011C9A  C178  F1A7         	movff	?___fltol,printf@val
 21014  011C9E  C179  F1A8         	movff	?___fltol+1,printf@val+1
 21015  011CA2  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 21016  011CA6  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 21017                           
 21018                           ;doprnt.c: 1228: while(c--) {
 21019  011CAA  D074               	goto	l1555
 21020  011CAC                     
 21021                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 21022  011CAC  C1A7  F117         	movff	printf@val,___lldiv@dividend
 21023  011CB0  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 21024  011CB4  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 21025  011CB8  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 21026  011CBC  0101               	movlb	1	; () banked
 21027  011CBE  51B1               	movf	printf@c& (0+255),w,b
 21028  011CC0  0D04               	mullw	4
 21029  011CC2  0EAB               	movlw	low _dpowers
 21030  011CC4  24F3               	addwf	prodl,w,c
 21031  011CC6  6EF6               	movwf	tblptrl,c
 21032  011CC8  0ED8               	movlw	high _dpowers
 21033  011CCA  20F4               	addwfc	prodh,w,c
 21034  011CCC  6EF7               	movwf	tblptrh,c
 21035  011CCE                     	if	1	;There are 3 active tblptr bytes
 21036  011CCE  6AF8               	clrf	tblptru,c
 21037  011CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 21038  011CD2  22F8               	addwfc	tblptru,f,c
 21039  011CD4                     	endif
 21040  011CD4  0009               	tblrd		*+
 21041  011CD6  CFF5 F11B          	movff	tablat,___lldiv@divisor
 21042  011CDA  0009               	tblrd		*+
 21043  011CDC  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 21044  011CE0  0009               	tblrd		*+
 21045  011CE2  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 21046  011CE6  000A               	tblrd		*-
 21047  011CE8  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 21048  011CEC  EC4D  F0C1         	call	___lldiv	;wreg free
 21049  011CF0  C117  F19D         	movff	?___lldiv,printf@tmpval
 21050  011CF4  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 21051  011CF8  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 21052  011CFC  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 21053                           
 21054                           ;doprnt.c: 1230: tmpval.vd %= 10;
 21055  011D00  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 21056  011D04  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 21057  011D08  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 21058  011D0C  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 21059  011D10  0E0A               	movlw	10
 21060  011D12  0101               	movlb	1	; () banked
 21061  011D14  6F28               	movwf	___llmod@divisor& (0+255),b
 21062  011D16  0E00               	movlw	0
 21063  011D18  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 21064  011D1A  0E00               	movlw	0
 21065  011D1C  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 21066  011D1E  0E00               	movlw	0
 21067  011D20  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 21068  011D22  EC9E  F0C3         	call	___llmod	;wreg free
 21069  011D26  C124  F19D         	movff	?___llmod,printf@tmpval
 21070  011D2A  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 21071  011D2E  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 21072  011D32  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 21073                           
 21074                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 21075  011D36  0101               	movlb	1	; () banked
 21076  011D38  519D               	movf	printf@tmpval& (0+255),w,b
 21077  011D3A  0F30               	addlw	48
 21078  011D3C  EC77  F0C9         	call	_putch
 21079                           
 21080                           ;doprnt.c: 1232: val %= dpowers[c];
 21081  011D40  C1A7  F124         	movff	printf@val,___llmod@dividend
 21082  011D44  C1A8  F125         	movff	printf@val+1,___llmod@dividend+1
 21083  011D48  C1A9  F126         	movff	printf@val+2,___llmod@dividend+2
 21084  011D4C  C1AA  F127         	movff	printf@val+3,___llmod@dividend+3
 21085  011D50  0101               	movlb	1	; () banked
 21086  011D52  51B1               	movf	printf@c& (0+255),w,b
 21087  011D54  0D04               	mullw	4
 21088  011D56  0EAB               	movlw	low _dpowers
 21089  011D58  24F3               	addwf	prodl,w,c
 21090  011D5A  6EF6               	movwf	tblptrl,c
 21091  011D5C  0ED8               	movlw	high _dpowers
 21092  011D5E  20F4               	addwfc	prodh,w,c
 21093  011D60  6EF7               	movwf	tblptrh,c
 21094  011D62                     	if	1	;There are 3 active tblptr bytes
 21095  011D62  6AF8               	clrf	tblptru,c
 21096  011D64  0E00               	movlw	low (__mediumconst shr (0+16))
 21097  011D66  22F8               	addwfc	tblptru,f,c
 21098  011D68                     	endif
 21099  011D68  0009               	tblrd		*+
 21100  011D6A  CFF5 F128          	movff	tablat,___llmod@divisor
 21101  011D6E  0009               	tblrd		*+
 21102  011D70  CFF5 F129          	movff	tablat,___llmod@divisor+1
 21103  011D74  0009               	tblrd		*+
 21104  011D76  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 21105  011D7A  000A               	tblrd		*-
 21106  011D7C  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 21107  011D80  EC9E  F0C3         	call	___llmod	;wreg free
 21108  011D84  C124  F1A7         	movff	?___llmod,printf@val
 21109  011D88  C125  F1A8         	movff	?___llmod+1,printf@val+1
 21110  011D8C  C126  F1A9         	movff	?___llmod+2,printf@val+2
 21111  011D90  C127  F1AA         	movff	?___llmod+3,printf@val+3
 21112  011D94                     l1555:
 21113  011D94  0101               	movlb	1	; () banked
 21114  011D96  07B1               	decf	printf@c& (0+255),f,b
 21115  011D98  29B1               	incf	printf@c& (0+255),w,b
 21116  011D9A  B4D8               	btfsc	status,2,c
 21117  011D9C  D008               	goto	l1558
 21118  011D9E  D786               	goto	l1556
 21119  011DA0                     
 21120                           ; BSR set to: 1
 21121                           ;doprnt.c: 1236: (putch('0') );
 21122                           
 21123                           ; BSR set to: 1
 21124  011DA0  0E30               	movlw	48
 21125  011DA2  EC77  F0C9         	call	_putch
 21126                           
 21127                           ;doprnt.c: 1237: prec--;
 21128  011DA6  0101               	movlb	1	; () banked
 21129  011DA8  07AF               	decf	printf@prec& (0+255),f,b
 21130  011DAA  A0D8               	btfss	status,0,c
 21131  011DAC  07B0               	decf	(printf@prec+1)& (0+255),f,b
 21132  011DAE                     l1558:
 21133                           
 21134                           ; BSR set to: 1
 21135                           
 21136                           ; BSR set to: 1
 21137  011DAE  51AF               	movf	printf@prec& (0+255),w,b
 21138  011DB0  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 21139  011DB2  B4D8               	btfsc	status,2,c
 21140  011DB4  D1BE               	goto	u25520
 21141  011DB6  D7F4               	goto	l1559
 21142  011DB8                     l1512:
 21143                           
 21144                           ; BSR set to: 1
 21145                           ;doprnt.c: 1246: }
 21146                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 21147                           
 21148                           ; BSR set to: 1
 21149  011DB8  0EC0               	movlw	192
 21150  011DBA  15AB               	andwf	printf@flag& (0+255),w,b
 21151  011DBC  6F8C               	movwf	??_printf& (0+255),b
 21152  011DBE  0E00               	movlw	0
 21153  011DC0  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21154  011DC2  6F8D               	movwf	(??_printf+1)& (0+255),b
 21155  011DC4  518C               	movf	??_printf& (0+255),w,b
 21156  011DC6  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21157  011DC8  A4D8               	btfss	status,2,c
 21158  011DCA  D01E               	goto	l1561
 21159                           
 21160                           ; BSR set to: 1
 21161                           ;doprnt.c: 1253: {
 21162                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 21163  011DCC  C19B  FFD9         	movff	printf@ap,fsr2l
 21164  011DD0  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21165  011DD4  CFDE F1A7          	movff	postinc2,printf@val
 21166  011DD8  CFDD F1A8          	movff	postdec2,printf@val+1
 21167  011DDC  0E00               	movlw	0
 21168  011DDE  BFA8               	btfsc	(printf@val+1)& (0+255),7,b
 21169  011DE0  0EFF               	movlw	-1
 21170  011DE2  6FA9               	movwf	(printf@val+2)& (0+255),b
 21171  011DE4  6FAA               	movwf	(printf@val+3)& (0+255),b
 21172                           
 21173                           ; BSR set to: 1
 21174  011DE6  0E02               	movlw	2
 21175  011DE8  279B               	addwf	printf@ap& (0+255),f,b
 21176  011DEA  0E00               	movlw	0
 21177  011DEC  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21178                           
 21179                           ; BSR set to: 1
 21180                           ;doprnt.c: 1261: if((long)val < 0) {
 21181  011DEE  AFAA               	btfss	(printf@val+3)& (0+255),7,b
 21182  011DF0  D01D               	goto	l1563
 21183                           
 21184                           ; BSR set to: 1
 21185                           ;doprnt.c: 1262: flag |= 0x03;
 21186  011DF2  0E03               	movlw	3
 21187  011DF4  13AB               	iorwf	printf@flag& (0+255),f,b
 21188                           
 21189                           ; BSR set to: 1
 21190                           ;doprnt.c: 1263: val = -val;
 21191  011DF6  1FAA               	comf	(printf@val+3)& (0+255),f,b
 21192  011DF8  1FA9               	comf	(printf@val+2)& (0+255),f,b
 21193  011DFA  1FA8               	comf	(printf@val+1)& (0+255),f,b
 21194  011DFC  6DA7               	negf	printf@val& (0+255),b
 21195  011DFE  0E00               	movlw	0
 21196  011E00  23A8               	addwfc	(printf@val+1)& (0+255),f,b
 21197  011E02  23A9               	addwfc	(printf@val+2)& (0+255),f,b
 21198  011E04  23AA               	addwfc	(printf@val+3)& (0+255),f,b
 21199                           
 21200                           ; BSR set to: 1
 21201                           ;doprnt.c: 1264: }
 21202                           ;doprnt.c: 1266: }
 21203  011E06  D012               	goto	l1563
 21204  011E08                     l1561:
 21205                           
 21206                           ; BSR set to: 1
 21207                           ;doprnt.c: 1268: else
 21208                           ;doprnt.c: 1273: {
 21209                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 21210                           
 21211                           ; BSR set to: 1
 21212  011E08  C19B  FFD9         	movff	printf@ap,fsr2l
 21213  011E0C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21214  011E10  CFDE F18C          	movff	postinc2,??_printf
 21215  011E14  CFDD F18D          	movff	postdec2,??_printf+1
 21216  011E18  C18C  F1A7         	movff	??_printf,printf@val
 21217  011E1C  C18D  F1A8         	movff	??_printf+1,printf@val+1
 21218  011E20  6BA9               	clrf	(printf@val+2)& (0+255),b
 21219  011E22  6BAA               	clrf	(printf@val+3)& (0+255),b
 21220                           
 21221                           ; BSR set to: 1
 21222  011E24  0E02               	movlw	2
 21223  011E26  279B               	addwf	printf@ap& (0+255),f,b
 21224  011E28  0E00               	movlw	0
 21225  011E2A  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21226  011E2C                     l1563:
 21227                           
 21228                           ; BSR set to: 1
 21229                           ;doprnt.c: 1287: }
 21230                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 21231                           
 21232                           ; BSR set to: 1
 21233  011E2C  51AF               	movf	printf@prec& (0+255),w,b
 21234  011E2E  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 21235  011E30  A4D8               	btfss	status,2,c
 21236  011E32  D04B               	goto	l1565
 21237                           
 21238                           ; BSR set to: 1
 21239  011E34  51A7               	movf	printf@val& (0+255),w,b
 21240  011E36  11A8               	iorwf	(printf@val+1)& (0+255),w,b
 21241  011E38  11A9               	iorwf	(printf@val+2)& (0+255),w,b
 21242  011E3A  11AA               	iorwf	(printf@val+3)& (0+255),w,b
 21243  011E3C  A4D8               	btfss	status,2,c
 21244  011E3E  D045               	goto	l1565
 21245                           
 21246                           ; BSR set to: 1
 21247                           ;doprnt.c: 1291: prec++;
 21248  011E40  4BAF               	infsnz	printf@prec& (0+255),f,b
 21249  011E42  2BB0               	incf	(printf@prec+1)& (0+255),f,b
 21250                           
 21251                           ; BSR set to: 1
 21252                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 21253  011E44  D042               	goto	l1565
 21254  011E46                     
 21255                           ; BSR set to: 1
 21256                           ;doprnt.c: 1302: case 0xC0:
 21257                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21258                           
 21259                           ; BSR set to: 1
 21260                           
 21261                           ; BSR set to: 1
 21262  011E46  0E01               	movlw	1
 21263  011E48  6FB1               	movwf	printf@c& (0+255),b
 21264  011E4A                     l18980:
 21265                           
 21266                           ; BSR set to: 1
 21267  011E4A  0E0A               	movlw	10
 21268  011E4C  19B1               	xorwf	printf@c& (0+255),w,b
 21269  011E4E  B4D8               	btfsc	status,2,c
 21270  011E50  D047               	goto	l1571
 21271                           
 21272                           ; BSR set to: 1
 21273                           ;doprnt.c: 1306: if(val < dpowers[c])
 21274                           
 21275                           ; BSR set to: 1
 21276                           
 21277                           ; BSR set to: 1
 21278  011E52  51B1               	movf	printf@c& (0+255),w,b
 21279  011E54  0D04               	mullw	4
 21280  011E56  0EAB               	movlw	low _dpowers
 21281  011E58  24F3               	addwf	prodl,w,c
 21282  011E5A  6EF6               	movwf	tblptrl,c
 21283  011E5C  0ED8               	movlw	high _dpowers
 21284  011E5E  20F4               	addwfc	prodh,w,c
 21285  011E60  6EF7               	movwf	tblptrh,c
 21286  011E62                     	if	1	;There are 3 active tblptr bytes
 21287  011E62  6AF8               	clrf	tblptru,c
 21288  011E64  0E00               	movlw	low (__mediumconst shr (0+16))
 21289  011E66  22F8               	addwfc	tblptru,f,c
 21290  011E68                     	endif
 21291  011E68  0009               	tblrd		*+
 21292  011E6A  50F5               	movf	tablat,w,c
 21293  011E6C  5DA7               	subwf	printf@val& (0+255),w,b
 21294  011E6E  0009               	tblrd		*+
 21295  011E70  50F5               	movf	tablat,w,c
 21296  011E72  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 21297  011E74  0009               	tblrd		*+
 21298  011E76  50F5               	movf	tablat,w,c
 21299  011E78  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 21300  011E7A  0009               	tblrd		*+
 21301  011E7C  50F5               	movf	tablat,w,c
 21302  011E7E  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 21303  011E80  A0D8               	btfss	status,0,c
 21304  011E82  D02E               	goto	l1571
 21305                           
 21306                           ; BSR set to: 1
 21307                           
 21308                           ; BSR set to: 1
 21309                           
 21310                           ; BSR set to: 1
 21311                           ;doprnt.c: 1307: break;
 21312  011E84  2BB1               	incf	printf@c& (0+255),f,b
 21313  011E86  D7E1               	goto	l18980
 21314  011E88                     
 21315                           ; BSR set to: 1
 21316                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 21317                           
 21318                           ; BSR set to: 1
 21319  011E88  0E01               	movlw	1
 21320  011E8A  6FB1               	movwf	printf@c& (0+255),b
 21321  011E8C                     l18994:
 21322                           
 21323                           ; BSR set to: 1
 21324  011E8C  0E08               	movlw	8
 21325  011E8E  19B1               	xorwf	printf@c& (0+255),w,b
 21326  011E90  B4D8               	btfsc	status,2,c
 21327  011E92  D026               	goto	l1571
 21328                           
 21329                           ; BSR set to: 1
 21330                           ;doprnt.c: 1317: if(val < hexpowers[c])
 21331                           
 21332                           ; BSR set to: 1
 21333                           
 21334                           ; BSR set to: 1
 21335  011E94  51B1               	movf	printf@c& (0+255),w,b
 21336  011E96  0D04               	mullw	4
 21337  011E98  0ED3               	movlw	low _hexpowers
 21338  011E9A  24F3               	addwf	prodl,w,c
 21339  011E9C  6EF6               	movwf	tblptrl,c
 21340  011E9E  0ED8               	movlw	high _hexpowers
 21341  011EA0  20F4               	addwfc	prodh,w,c
 21342  011EA2  6EF7               	movwf	tblptrh,c
 21343  011EA4                     	if	1	;There are 3 active tblptr bytes
 21344  011EA4  6AF8               	clrf	tblptru,c
 21345  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 21346  011EA8  22F8               	addwfc	tblptru,f,c
 21347  011EAA                     	endif
 21348  011EAA  0009               	tblrd		*+
 21349  011EAC  50F5               	movf	tablat,w,c
 21350  011EAE  5DA7               	subwf	printf@val& (0+255),w,b
 21351  011EB0  0009               	tblrd		*+
 21352  011EB2  50F5               	movf	tablat,w,c
 21353  011EB4  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 21354  011EB6  0009               	tblrd		*+
 21355  011EB8  50F5               	movf	tablat,w,c
 21356  011EBA  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 21357  011EBC  0009               	tblrd		*+
 21358  011EBE  50F5               	movf	tablat,w,c
 21359  011EC0  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 21360  011EC2  A0D8               	btfss	status,0,c
 21361  011EC4  D00D               	goto	l1571
 21362                           
 21363                           ; BSR set to: 1
 21364                           
 21365                           ; BSR set to: 1
 21366                           
 21367                           ; BSR set to: 1
 21368                           ;doprnt.c: 1318: break;
 21369  011EC6  2BB1               	incf	printf@c& (0+255),f,b
 21370  011EC8  D7E1               	goto	l18994
 21371  011ECA                     l1565:
 21372                           
 21373                           ; BSR set to: 1
 21374                           
 21375                           ; BSR set to: 1
 21376  011ECA  51AB               	movf	printf@flag& (0+255),w,b
 21377  011ECC  0BC0               	andlw	192
 21378                           
 21379                           ; Switch size 1, requested type "space"
 21380                           ; Number of cases is 3, Range of values is 0 to 192
 21381                           ; switch strategies available:
 21382                           ; Name         Instructions Cycles
 21383                           ; simple_byte           10     6 (average)
 21384                           ;	Chosen strategy is simple_byte
 21385  011ECE  0A00               	xorlw	0	; case 0
 21386  011ED0  B4D8               	btfsc	status,2,c
 21387  011ED2  D7B9               	goto	l1566
 21388  011ED4  0A80               	xorlw	128	; case 128
 21389  011ED6  B4D8               	btfsc	status,2,c
 21390  011ED8  D7D7               	goto	l1572
 21391  011EDA  0A40               	xorlw	64	; case 192
 21392  011EDC  B4D8               	btfsc	status,2,c
 21393  011EDE  D7B3               	goto	l1566
 21394  011EE0                     l1571:
 21395                           
 21396                           ; BSR set to: 1
 21397                           ;doprnt.c: 1339: if(c < prec)
 21398                           
 21399                           ; BSR set to: 1
 21400  011EE0  0E80               	movlw	128
 21401  011EE2  BFB1               	btfsc	printf@c& (0+255),7,b
 21402  011EE4  0E7F               	movlw	127
 21403  011EE6  6F8C               	movwf	??_printf& (0+255),b
 21404  011EE8  51AF               	movf	printf@prec& (0+255),w,b
 21405  011EEA  5DB1               	subwf	printf@c& (0+255),w,b
 21406  011EEC  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21407  011EEE  0A80               	xorlw	128
 21408  011EF0  598C               	subwfb	??_printf& (0+255),w,b
 21409  011EF2  B0D8               	btfsc	status,0,c
 21410  011EF4  D003               	goto	l1576
 21411                           
 21412                           ; BSR set to: 1
 21413                           ;doprnt.c: 1340: c = prec;
 21414  011EF6  C1AF  F1B1         	movff	printf@prec,printf@c
 21415  011EFA  D010               	goto	l1578
 21416  011EFC                     l1576:
 21417                           
 21418                           ; BSR set to: 1
 21419                           ;doprnt.c: 1341: else if(prec < c)
 21420                           
 21421                           ; BSR set to: 1
 21422  011EFC  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21423  011EFE  0A80               	xorlw	128
 21424  011F00  6F8C               	movwf	??_printf& (0+255),b
 21425  011F02  51B1               	movf	printf@c& (0+255),w,b
 21426  011F04  5DAF               	subwf	printf@prec& (0+255),w,b
 21427  011F06  0E80               	movlw	128
 21428  011F08  BFB1               	btfsc	printf@c& (0+255),7,b
 21429  011F0A  0E7F               	movlw	127
 21430  011F0C  598C               	subwfb	??_printf& (0+255),w,b
 21431  011F0E  B0D8               	btfsc	status,0,c
 21432  011F10  D005               	goto	l1578
 21433                           
 21434                           ; BSR set to: 1
 21435                           ;doprnt.c: 1342: prec = c;
 21436  011F12  51B1               	movf	printf@c& (0+255),w,b
 21437  011F14  6FAF               	movwf	printf@prec& (0+255),b
 21438  011F16  6BB0               	clrf	(printf@prec+1)& (0+255),b
 21439  011F18  BFAF               	btfsc	printf@prec& (0+255),7,b
 21440  011F1A  07B0               	decf	(printf@prec+1)& (0+255),f,b
 21441  011F1C                     l1578:
 21442                           
 21443                           ; BSR set to: 1
 21444                           ;doprnt.c: 1345: if(width && flag & 0x03)
 21445                           
 21446                           ; BSR set to: 1
 21447                           
 21448                           ; BSR set to: 1
 21449  011F1C  51AD               	movf	printf@width& (0+255),w,b
 21450  011F1E  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21451  011F20  B4D8               	btfsc	status,2,c
 21452  011F22  D00D               	goto	l1579
 21453                           
 21454                           ; BSR set to: 1
 21455  011F24  0E03               	movlw	3
 21456  011F26  15AB               	andwf	printf@flag& (0+255),w,b
 21457  011F28  6F8C               	movwf	??_printf& (0+255),b
 21458  011F2A  0E00               	movlw	0
 21459  011F2C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21460  011F2E  6F8D               	movwf	(??_printf+1)& (0+255),b
 21461  011F30  518C               	movf	??_printf& (0+255),w,b
 21462  011F32  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21463  011F34  B4D8               	btfsc	status,2,c
 21464  011F36  D003               	goto	l1579
 21465                           
 21466                           ; BSR set to: 1
 21467                           ;doprnt.c: 1346: width--;
 21468  011F38  07AD               	decf	printf@width& (0+255),f,b
 21469  011F3A  A0D8               	btfss	status,0,c
 21470  011F3C  07AE               	decf	(printf@width+1)& (0+255),f,b
 21471  011F3E                     l1579:
 21472                           
 21473                           ; BSR set to: 1
 21474                           ;doprnt.c: 1348: if(flag & 0x4000) {
 21475                           
 21476                           ; BSR set to: 1
 21477  011F3E  ADAC               	btfss	(printf@flag+1)& (0+255),6,b
 21478  011F40  D013               	goto	l1582
 21479                           
 21480                           ; BSR set to: 1
 21481                           ;doprnt.c: 1349: if(width > prec)
 21482  011F42  51AD               	movf	printf@width& (0+255),w,b
 21483  011F44  5DAF               	subwf	printf@prec& (0+255),w,b
 21484  011F46  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21485  011F48  0A80               	xorlw	128
 21486  011F4A  6F8C               	movwf	??_printf& (0+255),b
 21487  011F4C  51AE               	movf	(printf@width+1)& (0+255),w,b
 21488  011F4E  0A80               	xorlw	128
 21489  011F50  598C               	subwfb	??_printf& (0+255),w,b
 21490  011F52  B0D8               	btfsc	status,0,c
 21491  011F54  D005               	goto	l1581
 21492                           
 21493                           ; BSR set to: 1
 21494                           ;doprnt.c: 1350: width -= prec;
 21495  011F56  51AF               	movf	printf@prec& (0+255),w,b
 21496  011F58  5FAD               	subwf	printf@width& (0+255),f,b
 21497  011F5A  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21498  011F5C  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 21499  011F5E  D004               	goto	l1582
 21500  011F60                     l1581:
 21501                           
 21502                           ; BSR set to: 1
 21503                           ;doprnt.c: 1351: else
 21504                           ;doprnt.c: 1352: width = 0;
 21505                           
 21506                           ; BSR set to: 1
 21507  011F60  0E00               	movlw	0
 21508  011F62  6FAE               	movwf	(printf@width+1)& (0+255),b
 21509  011F64  0E00               	movlw	0
 21510  011F66  6FAD               	movwf	printf@width& (0+255),b
 21511  011F68                     l1582:
 21512                           
 21513                           ; BSR set to: 1
 21514                           ;doprnt.c: 1353: }
 21515                           ;doprnt.c: 1381: if(width > c)
 21516                           
 21517                           ; BSR set to: 1
 21518                           
 21519                           ; BSR set to: 1
 21520  011F68  0E80               	movlw	128
 21521  011F6A  BFB1               	btfsc	printf@c& (0+255),7,b
 21522  011F6C  0E7F               	movlw	127
 21523  011F6E  6F8C               	movwf	??_printf& (0+255),b
 21524  011F70  51AD               	movf	printf@width& (0+255),w,b
 21525  011F72  5DB1               	subwf	printf@c& (0+255),w,b
 21526  011F74  51AE               	movf	(printf@width+1)& (0+255),w,b
 21527  011F76  0A80               	xorlw	128
 21528  011F78  598C               	subwfb	??_printf& (0+255),w,b
 21529  011F7A  B0D8               	btfsc	status,0,c
 21530  011F7C  D007               	goto	l1583
 21531                           
 21532                           ; BSR set to: 1
 21533                           ;doprnt.c: 1382: width -= c;
 21534  011F7E  51B1               	movf	printf@c& (0+255),w,b
 21535  011F80  5FAD               	subwf	printf@width& (0+255),f,b
 21536  011F82  0E00               	movlw	0
 21537  011F84  BFB1               	btfsc	printf@c& (0+255),7,b
 21538  011F86  0EFF               	movlw	255
 21539  011F88  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 21540  011F8A  D004               	goto	l1584
 21541  011F8C                     l1583:
 21542                           
 21543                           ; BSR set to: 1
 21544                           ;doprnt.c: 1383: else
 21545                           ;doprnt.c: 1384: width = 0;
 21546                           
 21547                           ; BSR set to: 1
 21548  011F8C  0E00               	movlw	0
 21549  011F8E  6FAE               	movwf	(printf@width+1)& (0+255),b
 21550  011F90  0E00               	movlw	0
 21551  011F92  6FAD               	movwf	printf@width& (0+255),b
 21552  011F94                     l1584:
 21553                           
 21554                           ; BSR set to: 1
 21555                           ;doprnt.c: 1387: if(flag & 0x04) {
 21556                           
 21557                           ; BSR set to: 1
 21558  011F94  A5AB               	btfss	printf@flag& (0+255),2,b
 21559  011F96  D01A               	goto	l1585
 21560                           
 21561                           ; BSR set to: 1
 21562                           ;doprnt.c: 1392: if(flag & 0x03)
 21563  011F98  0E03               	movlw	3
 21564  011F9A  15AB               	andwf	printf@flag& (0+255),w,b
 21565  011F9C  6F8C               	movwf	??_printf& (0+255),b
 21566  011F9E  0E00               	movlw	0
 21567  011FA0  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21568  011FA2  6F8D               	movwf	(??_printf+1)& (0+255),b
 21569  011FA4  518C               	movf	??_printf& (0+255),w,b
 21570  011FA6  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21571  011FA8  B4D8               	btfsc	status,2,c
 21572  011FAA  D003               	goto	l1586
 21573                           
 21574                           ; BSR set to: 1
 21575                           ;doprnt.c: 1393: (putch('-') );
 21576  011FAC  0E2D               	movlw	45
 21577  011FAE  EC77  F0C9         	call	_putch
 21578  011FB2                     l1586:
 21579                           
 21580                           ;doprnt.c: 1415: if(width)
 21581  011FB2  0101               	movlb	1	; () banked
 21582  011FB4  51AD               	movf	printf@width& (0+255),w,b
 21583  011FB6  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21584  011FB8  B4D8               	btfsc	status,2,c
 21585  011FBA  D0B2               	goto	l1595
 21586                           
 21587                           ; BSR set to: 1
 21588                           ;doprnt.c: 1417: (putch('0') );
 21589                           
 21590                           ; BSR set to: 1
 21591                           
 21592                           ;doprnt.c: 1416: do
 21593  011FBC  0E30               	movlw	48
 21594  011FBE  EC77  F0C9         	call	_putch
 21595                           
 21596                           ;doprnt.c: 1418: while(--width);
 21597  011FC2  0101               	movlb	1	; () banked
 21598  011FC4  07AD               	decf	printf@width& (0+255),f,b
 21599  011FC6  A0D8               	btfss	status,0,c
 21600  011FC8  07AE               	decf	(printf@width+1)& (0+255),f,b
 21601  011FCA  D7F4               	goto	L25
 21602  011FCC                     l1585:
 21603                           
 21604                           ; BSR set to: 1
 21605                           ;doprnt.c: 1422: {
 21606                           ;doprnt.c: 1424: if(width
 21607                           ;doprnt.c: 1428: )
 21608                           
 21609                           ; BSR set to: 1
 21610  011FCC  51AD               	movf	printf@width& (0+255),w,b
 21611  011FCE  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21612  011FD0  B4D8               	btfsc	status,2,c
 21613  011FD2  D00B               	goto	u25500
 21614  011FD4                     u25490:
 21615                           
 21616                           ; BSR set to: 1
 21617                           ;doprnt.c: 1430: (putch(' ') );
 21618                           
 21619                           ; BSR set to: 1
 21620                           
 21621                           ;doprnt.c: 1429: do
 21622  011FD4  0E20               	movlw	32
 21623  011FD6  EC77  F0C9         	call	_putch
 21624                           
 21625                           ;doprnt.c: 1431: while(--width);
 21626  011FDA  0101               	movlb	1	; () banked
 21627  011FDC  07AD               	decf	printf@width& (0+255),f,b
 21628  011FDE  A0D8               	btfss	status,0,c
 21629  011FE0  07AE               	decf	(printf@width+1)& (0+255),f,b
 21630  011FE2  51AD               	movf	printf@width& (0+255),w,b
 21631  011FE4  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21632  011FE6  A4D8               	btfss	status,2,c
 21633  011FE8  D7F5               	goto	u25490
 21634  011FEA                     u25500:
 21635                           
 21636                           ; BSR set to: 1
 21637                           ;doprnt.c: 1438: if(flag & 0x03)
 21638                           
 21639                           ; BSR set to: 1
 21640                           
 21641                           ; BSR set to: 1
 21642  011FEA  0E03               	movlw	3
 21643  011FEC  15AB               	andwf	printf@flag& (0+255),w,b
 21644  011FEE  6F8C               	movwf	??_printf& (0+255),b
 21645  011FF0  0E00               	movlw	0
 21646  011FF2  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21647  011FF4  6F8D               	movwf	(??_printf+1)& (0+255),b
 21648  011FF6  518C               	movf	??_printf& (0+255),w,b
 21649  011FF8  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21650  011FFA  B4D8               	btfsc	status,2,c
 21651  011FFC  D091               	goto	l1595
 21652                           
 21653                           ; BSR set to: 1
 21654                           ;doprnt.c: 1439: (putch('-') );
 21655  011FFE  0E2D               	movlw	45
 21656  012000  EC77  F0C9         	call	_putch
 21657                           
 21658                           ;doprnt.c: 1469: }
 21659                           ;doprnt.c: 1474: while(prec--) {
 21660  012004  D08D               	goto	l1595
 21661  012006                     
 21662                           ;doprnt.c: 1486: case 0xC0:
 21663                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 21664  012006  C1AF  F18C         	movff	printf@prec,??_printf
 21665  01200A  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 21666  01200E  0101               	movlb	1	; () banked
 21667  012010  90D8               	bcf	status,0,c
 21668  012012  378C               	rlcf	??_printf& (0+255),f,b
 21669  012014  378D               	rlcf	(??_printf+1)& (0+255),f,b
 21670  012016  90D8               	bcf	status,0,c
 21671  012018  378C               	rlcf	??_printf& (0+255),f,b
 21672  01201A  378D               	rlcf	(??_printf+1)& (0+255),f,b
 21673  01201C  0EAB               	movlw	low _dpowers
 21674  01201E  258C               	addwf	??_printf& (0+255),w,b
 21675  012020  6EF6               	movwf	tblptrl,c
 21676  012022  0ED8               	movlw	high _dpowers
 21677  012024  218D               	addwfc	(??_printf+1)& (0+255),w,b
 21678  012026  6EF7               	movwf	tblptrh,c
 21679  012028                     	if	1	;There are 3 active tblptr bytes
 21680  012028  6AF8               	clrf	tblptru,c
 21681  01202A  0E00               	movlw	low (__mediumconst shr (0+16))
 21682  01202C  22F8               	addwfc	tblptru,f,c
 21683  01202E                     	endif
 21684  01202E  0009               	tblrd		*+
 21685  012030  CFF5 F11B          	movff	tablat,___lldiv@divisor
 21686  012034  0009               	tblrd		*+
 21687  012036  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 21688  01203A  0009               	tblrd		*+
 21689  01203C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 21690  012040  000A               	tblrd		*-
 21691  012042  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 21692  012046  C1A7  F117         	movff	printf@val,___lldiv@dividend
 21693  01204A  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 21694  01204E  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 21695  012052  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 21696  012056  EC4D  F0C1         	call	___lldiv	;wreg free
 21697  01205A  C117  F124         	movff	?___lldiv,___llmod@dividend
 21698  01205E  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 21699  012062  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 21700  012066  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 21701  01206A  0E0A               	movlw	10
 21702  01206C  0101               	movlb	1	; () banked
 21703  01206E  6F28               	movwf	___llmod@divisor& (0+255),b
 21704  012070  0E00               	movlw	0
 21705  012072  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 21706  012074  0E00               	movlw	0
 21707  012076  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 21708  012078  0E00               	movlw	0
 21709  01207A  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 21710  01207C  EC9E  F0C3         	call	___llmod	;wreg free
 21711  012080  0101               	movlb	1	; () banked
 21712  012082  5124               	movf	?___llmod& (0+255),w,b
 21713  012084  0F30               	addlw	48
 21714  012086  6FB1               	movwf	printf@c& (0+255),b
 21715                           
 21716                           ;doprnt.c: 1491: break;
 21717  012088  D048               	goto	l1600
 21718  01208A                     
 21719                           ; BSR set to: 1
 21720                           ;doprnt.c: 1499: {
 21721                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 21722                           
 21723                           ; BSR set to: 1
 21724  01208A  C1A7  F117         	movff	printf@val,___lldiv@dividend
 21725  01208E  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 21726  012092  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 21727  012096  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 21728  01209A  C1AF  F18C         	movff	printf@prec,??_printf
 21729  01209E  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 21730  0120A2  90D8               	bcf	status,0,c
 21731  0120A4  378C               	rlcf	??_printf& (0+255),f,b
 21732  0120A6  378D               	rlcf	(??_printf+1)& (0+255),f,b
 21733  0120A8  90D8               	bcf	status,0,c
 21734  0120AA  378C               	rlcf	??_printf& (0+255),f,b
 21735  0120AC  378D               	rlcf	(??_printf+1)& (0+255),f,b
 21736  0120AE  0ED3               	movlw	low _hexpowers
 21737  0120B0  258C               	addwf	??_printf& (0+255),w,b
 21738  0120B2  6EF6               	movwf	tblptrl,c
 21739  0120B4  0ED8               	movlw	high _hexpowers
 21740  0120B6  218D               	addwfc	(??_printf+1)& (0+255),w,b
 21741  0120B8  6EF7               	movwf	tblptrh,c
 21742  0120BA                     	if	1	;There are 3 active tblptr bytes
 21743  0120BA  6AF8               	clrf	tblptru,c
 21744  0120BC  0E00               	movlw	low (__mediumconst shr (0+16))
 21745  0120BE  22F8               	addwfc	tblptru,f,c
 21746  0120C0                     	endif
 21747  0120C0  0009               	tblrd		*+
 21748  0120C2  CFF5 F11B          	movff	tablat,___lldiv@divisor
 21749  0120C6  0009               	tblrd		*+
 21750  0120C8  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 21751  0120CC  0009               	tblrd		*+
 21752  0120CE  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 21753  0120D2  000A               	tblrd		*-
 21754  0120D4  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 21755  0120D8  EC4D  F0C1         	call	___lldiv	;wreg free
 21756  0120DC  0101               	movlb	1	; () banked
 21757  0120DE  5117               	movf	?___lldiv& (0+255),w,b
 21758  0120E0  0B0F               	andlw	15
 21759  0120E2  6F96               	movwf	printf@idx& (0+255),b
 21760                           
 21761                           ; BSR set to: 1
 21762                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 21763  0120E4  5196               	movf	printf@idx& (0+255),w,b
 21764  0120E6  0D01               	mullw	1
 21765  0120E8  0E77               	movlw	low STR_165
 21766  0120EA  24F3               	addwf	prodl,w,c
 21767  0120EC  6EF6               	movwf	tblptrl,c
 21768  0120EE  0EFD               	movlw	high STR_165
 21769  0120F0  20F4               	addwfc	prodh,w,c
 21770  0120F2  6EF7               	movwf	tblptrh,c
 21771  0120F4                     	if	1	;There are 3 active tblptr bytes
 21772  0120F4  6AF8               	clrf	tblptru,c
 21773  0120F6  0E00               	movlw	low (__mediumconst shr (0+16))
 21774  0120F8  22F8               	addwfc	tblptru,f,c
 21775  0120FA                     	endif
 21776  0120FA  0008               	tblrd		*
 21777  0120FC  CFF5 F1B1          	movff	tablat,printf@c
 21778                           
 21779                           ; BSR set to: 1
 21780                           ;doprnt.c: 1523: }
 21781                           
 21782                           ;doprnt.c: 1508: }
 21783                           ;doprnt.c: 1510: break;
 21784  012100  D00C               	goto	l1600
 21785  012102                     l19068:
 21786  012102  0101               	movlb	1	; () banked
 21787  012104  51AB               	movf	printf@flag& (0+255),w,b
 21788  012106  0BC0               	andlw	192
 21789                           
 21790                           ; Switch size 1, requested type "space"
 21791                           ; Number of cases is 3, Range of values is 0 to 192
 21792                           ; switch strategies available:
 21793                           ; Name         Instructions Cycles
 21794                           ; simple_byte           10     6 (average)
 21795                           ;	Chosen strategy is simple_byte
 21796  012108  0A00               	xorlw	0	; case 0
 21797  01210A  B4D8               	btfsc	status,2,c
 21798  01210C  D77C               	goto	l1598
 21799  01210E  0A80               	xorlw	128	; case 128
 21800  012110  B4D8               	btfsc	status,2,c
 21801  012112  D7BB               	goto	l1601
 21802  012114  0A40               	xorlw	64	; case 192
 21803  012116  B4D8               	btfsc	status,2,c
 21804  012118  D776               	goto	l1598
 21805  01211A                     l1600:
 21806                           
 21807                           ; BSR set to: 1
 21808                           ;doprnt.c: 1524: (putch(c) );
 21809                           
 21810                           ; BSR set to: 1
 21811  01211A  51B1               	movf	printf@c& (0+255),w,b
 21812  01211C  EC77  F0C9         	call	_putch
 21813  012120                     l1595:
 21814  012120  0101               	movlb	1	; () banked
 21815  012122  07AF               	decf	printf@prec& (0+255),f,b
 21816  012124  A0D8               	btfss	status,0,c
 21817  012126  07B0               	decf	(printf@prec+1)& (0+255),f,b
 21818  012128  29AF               	incf	printf@prec& (0+255),w,b
 21819  01212A  E1EB               	bnz	l19068
 21820  01212C  29B0               	incf	(printf@prec+1)& (0+255),w,b
 21821  01212E  A4D8               	btfss	status,2,c
 21822  012130  D7E8               	goto	l1597
 21823  012132                     u25520:
 21824                           
 21825                           ; BSR set to: 1
 21826                           
 21827                           ; BSR set to: 1
 21828  012132  0101               	movlb	1	; () banked
 21829  012134  5182               	movf	printf@f& (0+255),w,b
 21830  012136  6F8C               	movwf	??_printf& (0+255),b
 21831  012138  5183               	movf	(printf@f+1)& (0+255),w,b
 21832  01213A  6F8D               	movwf	(??_printf+1)& (0+255),b
 21833  01213C  4B82               	infsnz	printf@f& (0+255),f,b
 21834  01213E  2B83               	incf	(printf@f+1)& (0+255),f,b
 21835  012140  C18C  FFF6         	movff	??_printf,tblptrl
 21836  012144  C18D  FFF7         	movff	??_printf+1,tblptrh
 21837  012148  0E00               	movlw	low (__mediumconst shr (0+16))
 21838  01214A  6EF8               	movwf	tblptru,c
 21839  01214C  0E0D               	movlw	(high __ramtop+-1)
 21840  01214E  64F7               	cpfsgt	tblptrh,c
 21841  012150  D003               	bra	u25537
 21842  012152  0008               	tblrd		*
 21843  012154  50F5               	movf	tablat,w,c
 21844  012156  D005               	bra	u25530
 21845  012158                     u25537:
 21846  012158  CFF6 FFE9          	movff	tblptrl,fsr0l
 21847  01215C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21848  012160  50EF               	movf	indf0,w,c
 21849  012162                     u25530:
 21850  012162  0101               	movlb	1	; () banked
 21851  012164  6FB1               	movwf	printf@c& (0+255),b
 21852  012166  51B1               	movf	printf@c& (0+255),w,b
 21853  012168  B4D8               	btfsc	status,2,c
 21854  01216A  0012               	return	
 21855  01216C  EFD8  F089         	goto	l1469
 21856  012170                     __end_of_printf:
 21857                           	opt stack 0
 21858                           tblptru	equ	0xFF8
 21859                           tblptrh	equ	0xFF7
 21860                           tblptrl	equ	0xFF6
 21861                           tablat	equ	0xFF5
 21862                           prodh	equ	0xFF4
 21863                           prodl	equ	0xFF3
 21864                           intcon	equ	0xFF2
 21865                           indf0	equ	0xFEF
 21866                           postinc0	equ	0xFEE
 21867                           fsr0h	equ	0xFEA
 21868                           fsr0l	equ	0xFE9
 21869                           wreg	equ	0xFE8
 21870                           indf1	equ	0xFE7
 21871                           postdec1	equ	0xFE5
 21872                           plusw1	equ	0xFE3
 21873                           fsr1h	equ	0xFE2
 21874                           fsr1l	equ	0xFE1
 21875                           indf2	equ	0xFDF
 21876                           postinc2	equ	0xFDE
 21877                           postdec2	equ	0xFDD
 21878                           plusw2	equ	0xFDB
 21879                           fsr2h	equ	0xFDA
 21880                           fsr2l	equ	0xFD9
 21881                           status	equ	0xFD8
 21882                           
 21883 ;; *************** function _scale *****************
 21884 ;; Defined at:
 21885 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 21886 ;; Parameters:    Size  Location     Type
 21887 ;;  scl             1    wreg     char 
 21888 ;; Auto vars:     Size  Location     Type
 21889 ;;  scl             1  119[BANK1 ] char 
 21890 ;; Return value:  Size  Location     Type
 21891 ;;                  4  111[BANK1 ] char 
 21892 ;; Registers used:
 21893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21894 ;; Tracked objects:
 21895 ;;		On entry : 0/0
 21896 ;;		On exit  : 0/0
 21897 ;;		Unchanged: 0/0
 21898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21899 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21900 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21902 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21903 ;;Total ram usage:        9 bytes
 21904 ;; Hardware stack levels used:    1
 21905 ;; Hardware stack levels required when called:   14
 21906 ;; This function calls:
 21907 ;;		___awdiv
 21908 ;;		___awmod
 21909 ;;		___flmul
 21910 ;; This function is called by:
 21911 ;;		_printf
 21912 ;; This function uses a non-reentrant model
 21913 ;;
 21914                           
 21915                           	psect	text29
 21916  013914                     __ptext29:
 21917                           	opt stack 0
 21918  013914                     _scale:
 21919                           	opt stack 13
 21920                           
 21921                           ; BSR set to: 1
 21922                           ;incstack = 0
 21923                           ;scale@scl stored from wreg
 21924  013914  0101               	movlb	1	; () banked
 21925  013916  6F77               	movwf	scale@scl& (0+255),b
 21926                           
 21927                           ;doprnt.c: 428: if(scl < 0) {
 21928  013918  0101               	movlb	1	; () banked
 21929  01391A  AF77               	btfss	scale@scl& (0+255),7,b
 21930  01391C  D127               	goto	l1458
 21931                           
 21932                           ; BSR set to: 1
 21933                           ;doprnt.c: 429: scl = -scl;
 21934  01391E  6D77               	negf	scale@scl& (0+255),b
 21935                           
 21936                           ;doprnt.c: 430: if(scl>=110)
 21937  013920  5177               	movf	scale@scl& (0+255),w,b
 21938  013922  0A80               	xorlw	128
 21939  013924  0F12               	addlw	-238
 21940  013926  A0D8               	btfss	status,0,c
 21941  013928  D0A5               	goto	l1459
 21942                           
 21943                           ; BSR set to: 1
 21944                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 21945  01392A  0E00               	movlw	0
 21946  01392C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 21947  01392E  0E0A               	movlw	10
 21948  013930  6F1F               	movwf	___awdiv@divisor& (0+255),b
 21949  013932  0E00               	movlw	0
 21950  013934  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 21951  013936  0E64               	movlw	100
 21952  013938  6F19               	movwf	___awmod@divisor& (0+255),b
 21953  01393A  5177               	movf	scale@scl& (0+255),w,b
 21954  01393C  6F17               	movwf	___awmod@dividend& (0+255),b
 21955  01393E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 21956  013940  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 21957  013942  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 21958  013944  EC8D  F0C2         	call	___awmod	;wreg free
 21959  013948  C117  F11D         	movff	?___awmod,___awdiv@dividend
 21960  01394C  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 21961  013950  EC0A  F0C1         	call	___awdiv	;wreg free
 21962  013954  0101               	movlb	1	; () banked
 21963  013956  90D8               	bcf	status,0,c
 21964  013958  371D               	rlcf	?___awdiv& (0+255),f,b
 21965  01395A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 21966  01395C  90D8               	bcf	status,0,c
 21967  01395E  371D               	rlcf	?___awdiv& (0+255),f,b
 21968  013960  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 21969  013962  0E24               	movlw	36
 21970  013964  271D               	addwf	?___awdiv& (0+255),f,b
 21971  013966  0E00               	movlw	0
 21972  013968  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 21973  01396A  0E77               	movlw	low __npowers_
 21974  01396C  251D               	addwf	?___awdiv& (0+255),w,b
 21975  01396E  6EF6               	movwf	tblptrl,c
 21976  013970  0ED8               	movlw	high __npowers_
 21977  013972  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 21978  013974  6EF7               	movwf	tblptrh,c
 21979  013976                     	if	1	;There are 3 active tblptr bytes
 21980  013976  6AF8               	clrf	tblptru,c
 21981  013978  0E00               	movlw	low (__mediumconst shr (0+16))
 21982  01397A  22F8               	addwfc	tblptru,f,c
 21983  01397C                     	endif
 21984  01397C  0009               	tblrd		*+
 21985  01397E  CFF5 F15A          	movff	tablat,___flmul@a
 21986  013982  0009               	tblrd		*+
 21987  013984  CFF5 F15B          	movff	tablat,___flmul@a+1
 21988  013988  0009               	tblrd		*+
 21989  01398A  CFF5 F15C          	movff	tablat,___flmul@a+2
 21990  01398E  000A               	tblrd		*-
 21991  013990  CFF5 F15D          	movff	tablat,___flmul@a+3
 21992  013994  0E00               	movlw	0
 21993  013996  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 21994  013998  0E64               	movlw	100
 21995  01399A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 21996  01399C  5177               	movf	scale@scl& (0+255),w,b
 21997  01399E  6F1D               	movwf	___awdiv@dividend& (0+255),b
 21998  0139A0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 21999  0139A2  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22000  0139A4  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22001  0139A6  EC0A  F0C1         	call	___awdiv	;wreg free
 22002  0139AA  0101               	movlb	1	; () banked
 22003  0139AC  90D8               	bcf	status,0,c
 22004  0139AE  371D               	rlcf	?___awdiv& (0+255),f,b
 22005  0139B0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22006  0139B2  90D8               	bcf	status,0,c
 22007  0139B4  371D               	rlcf	?___awdiv& (0+255),f,b
 22008  0139B6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22009  0139B8  0E48               	movlw	72
 22010  0139BA  271D               	addwf	?___awdiv& (0+255),f,b
 22011  0139BC  0E00               	movlw	0
 22012  0139BE  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22013  0139C0  0E77               	movlw	low __npowers_
 22014  0139C2  251D               	addwf	?___awdiv& (0+255),w,b
 22015  0139C4  6EF6               	movwf	tblptrl,c
 22016  0139C6  0ED8               	movlw	high __npowers_
 22017  0139C8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22018  0139CA  6EF7               	movwf	tblptrh,c
 22019  0139CC                     	if	1	;There are 3 active tblptr bytes
 22020  0139CC  6AF8               	clrf	tblptru,c
 22021  0139CE  0E00               	movlw	low (__mediumconst shr (0+16))
 22022  0139D0  22F8               	addwfc	tblptru,f,c
 22023  0139D2                     	endif
 22024  0139D2  0009               	tblrd		*+
 22025  0139D4  CFF5 F156          	movff	tablat,___flmul@b
 22026  0139D8  0009               	tblrd		*+
 22027  0139DA  CFF5 F157          	movff	tablat,___flmul@b+1
 22028  0139DE  0009               	tblrd		*+
 22029  0139E0  CFF5 F158          	movff	tablat,___flmul@b+2
 22030  0139E4  000A               	tblrd		*-
 22031  0139E6  CFF5 F159          	movff	tablat,___flmul@b+3
 22032  0139EA  ECD0  F0A2         	call	___flmul	;wreg free
 22033  0139EE  C156  F173         	movff	?___flmul,_scale$3990
 22034  0139F2  C157  F174         	movff	?___flmul+1,_scale$3990+1
 22035  0139F6  C158  F175         	movff	?___flmul+2,_scale$3990+2
 22036  0139FA  C159  F176         	movff	?___flmul+3,_scale$3990+3
 22037                           
 22038                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 22039  0139FE  C173  F156         	movff	_scale$3990,___flmul@b
 22040  013A02  C174  F157         	movff	_scale$3990+1,___flmul@b+1
 22041  013A06  C175  F158         	movff	_scale$3990+2,___flmul@b+2
 22042  013A0A  C176  F159         	movff	_scale$3990+3,___flmul@b+3
 22043  013A0E  0E00               	movlw	0
 22044  013A10  0101               	movlb	1	; () banked
 22045  013A12  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22046  013A14  0E0A               	movlw	10
 22047  013A16  6F19               	movwf	___awmod@divisor& (0+255),b
 22048  013A18  5177               	movf	scale@scl& (0+255),w,b
 22049  013A1A  6F17               	movwf	___awmod@dividend& (0+255),b
 22050  013A1C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22051  013A1E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22052  013A20  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22053  013A22  EC8D  F0C2         	call	___awmod	;wreg free
 22054  013A26  0101               	movlb	1	; () banked
 22055  013A28  90D8               	bcf	status,0,c
 22056  013A2A  3717               	rlcf	?___awmod& (0+255),f,b
 22057  013A2C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22058  013A2E  90D8               	bcf	status,0,c
 22059  013A30  3717               	rlcf	?___awmod& (0+255),f,b
 22060  013A32  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22061  013A34  0E77               	movlw	low __npowers_
 22062  013A36  2517               	addwf	?___awmod& (0+255),w,b
 22063  013A38  6EF6               	movwf	tblptrl,c
 22064  013A3A  0ED8               	movlw	high __npowers_
 22065  013A3C  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22066  013A3E  6EF7               	movwf	tblptrh,c
 22067  013A40                     	if	1	;There are 3 active tblptr bytes
 22068  013A40  6AF8               	clrf	tblptru,c
 22069  013A42  0E00               	movlw	low (__mediumconst shr (0+16))
 22070  013A44  22F8               	addwfc	tblptru,f,c
 22071  013A46                     	endif
 22072  013A46  0009               	tblrd		*+
 22073  013A48  CFF5 F15A          	movff	tablat,___flmul@a
 22074  013A4C  0009               	tblrd		*+
 22075  013A4E  CFF5 F15B          	movff	tablat,___flmul@a+1
 22076  013A52  0009               	tblrd		*+
 22077  013A54  CFF5 F15C          	movff	tablat,___flmul@a+2
 22078  013A58  000A               	tblrd		*-
 22079  013A5A  CFF5 F15D          	movff	tablat,___flmul@a+3
 22080  013A5E  ECD0  F0A2         	call	___flmul	;wreg free
 22081  013A62  C156  F16F         	movff	?___flmul,?_scale
 22082  013A66  C157  F170         	movff	?___flmul+1,?_scale+1
 22083  013A6A  C158  F171         	movff	?___flmul+2,?_scale+2
 22084  013A6E  C159  F172         	movff	?___flmul+3,?_scale+3
 22085  013A72  0012               	return	
 22086  013A74                     l1459:
 22087                           
 22088                           ;doprnt.c: 432: else if(scl > 10)
 22089  013A74  0101               	movlb	1	; () banked
 22090  013A76  5177               	movf	scale@scl& (0+255),w,b
 22091  013A78  0A80               	xorlw	128
 22092  013A7A  0F75               	addlw	-139
 22093  013A7C  A0D8               	btfss	status,0,c
 22094  013A7E  D05D               	goto	l1462
 22095                           
 22096                           ; BSR set to: 1
 22097                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 22098  013A80  0E00               	movlw	0
 22099  013A82  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22100  013A84  0E0A               	movlw	10
 22101  013A86  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22102  013A88  5177               	movf	scale@scl& (0+255),w,b
 22103  013A8A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22104  013A8C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22105  013A8E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22106  013A90  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22107  013A92  EC0A  F0C1         	call	___awdiv	;wreg free
 22108  013A96  0101               	movlb	1	; () banked
 22109  013A98  90D8               	bcf	status,0,c
 22110  013A9A  371D               	rlcf	?___awdiv& (0+255),f,b
 22111  013A9C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22112  013A9E  90D8               	bcf	status,0,c
 22113  013AA0  371D               	rlcf	?___awdiv& (0+255),f,b
 22114  013AA2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22115  013AA4  0E24               	movlw	36
 22116  013AA6  271D               	addwf	?___awdiv& (0+255),f,b
 22117  013AA8  0E00               	movlw	0
 22118  013AAA  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22119  013AAC  0E77               	movlw	low __npowers_
 22120  013AAE  251D               	addwf	?___awdiv& (0+255),w,b
 22121  013AB0  6EF6               	movwf	tblptrl,c
 22122  013AB2  0ED8               	movlw	high __npowers_
 22123  013AB4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22124  013AB6  6EF7               	movwf	tblptrh,c
 22125  013AB8                     	if	1	;There are 3 active tblptr bytes
 22126  013AB8  6AF8               	clrf	tblptru,c
 22127  013ABA  0E00               	movlw	low (__mediumconst shr (0+16))
 22128  013ABC  22F8               	addwfc	tblptru,f,c
 22129  013ABE                     	endif
 22130  013ABE  0009               	tblrd		*+
 22131  013AC0  CFF5 F156          	movff	tablat,___flmul@b
 22132  013AC4  0009               	tblrd		*+
 22133  013AC6  CFF5 F157          	movff	tablat,___flmul@b+1
 22134  013ACA  0009               	tblrd		*+
 22135  013ACC  CFF5 F158          	movff	tablat,___flmul@b+2
 22136  013AD0  000A               	tblrd		*-
 22137  013AD2  CFF5 F159          	movff	tablat,___flmul@b+3
 22138  013AD6  0E00               	movlw	0
 22139  013AD8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22140  013ADA  0E0A               	movlw	10
 22141  013ADC  6F19               	movwf	___awmod@divisor& (0+255),b
 22142  013ADE  5177               	movf	scale@scl& (0+255),w,b
 22143  013AE0  6F17               	movwf	___awmod@dividend& (0+255),b
 22144  013AE2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22145  013AE4  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22146  013AE6  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22147  013AE8  EC8D  F0C2         	call	___awmod	;wreg free
 22148  013AEC  0101               	movlb	1	; () banked
 22149  013AEE  90D8               	bcf	status,0,c
 22150  013AF0  3717               	rlcf	?___awmod& (0+255),f,b
 22151  013AF2  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22152  013AF4  90D8               	bcf	status,0,c
 22153  013AF6  3717               	rlcf	?___awmod& (0+255),f,b
 22154  013AF8  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22155  013AFA  0E77               	movlw	low __npowers_
 22156  013AFC  2517               	addwf	?___awmod& (0+255),w,b
 22157  013AFE  6EF6               	movwf	tblptrl,c
 22158  013B00  0ED8               	movlw	high __npowers_
 22159  013B02  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22160  013B04  6EF7               	movwf	tblptrh,c
 22161  013B06                     	if	1	;There are 3 active tblptr bytes
 22162  013B06  6AF8               	clrf	tblptru,c
 22163  013B08  0E00               	movlw	low (__mediumconst shr (0+16))
 22164  013B0A  22F8               	addwfc	tblptru,f,c
 22165  013B0C                     	endif
 22166  013B0C  0009               	tblrd		*+
 22167  013B0E  CFF5 F15A          	movff	tablat,___flmul@a
 22168  013B12  0009               	tblrd		*+
 22169  013B14  CFF5 F15B          	movff	tablat,___flmul@a+1
 22170  013B18  0009               	tblrd		*+
 22171  013B1A  CFF5 F15C          	movff	tablat,___flmul@a+2
 22172  013B1E  000A               	tblrd		*-
 22173  013B20  CFF5 F15D          	movff	tablat,___flmul@a+3
 22174  013B24  ECD0  F0A2         	call	___flmul	;wreg free
 22175  013B28  C156  F16F         	movff	?___flmul,?_scale
 22176  013B2C  C157  F170         	movff	?___flmul+1,?_scale+1
 22177  013B30  C158  F171         	movff	?___flmul+2,?_scale+2
 22178  013B34  C159  F172         	movff	?___flmul+3,?_scale+3
 22179  013B38  0012               	return	
 22180  013B3A                     l1462:
 22181                           
 22182                           ;doprnt.c: 434: return _npowers_[scl];
 22183  013B3A  0101               	movlb	1	; () banked
 22184  013B3C  5177               	movf	scale@scl& (0+255),w,b
 22185  013B3E  0D04               	mullw	4
 22186  013B40  0E77               	movlw	low __npowers_
 22187  013B42  24F3               	addwf	prodl,w,c
 22188  013B44  6EF6               	movwf	tblptrl,c
 22189  013B46  0ED8               	movlw	high __npowers_
 22190  013B48  20F4               	addwfc	prodh,w,c
 22191  013B4A  6EF7               	movwf	tblptrh,c
 22192  013B4C                     	if	1	;There are 3 active tblptr bytes
 22193  013B4C  6AF8               	clrf	tblptru,c
 22194  013B4E  0E00               	movlw	low (__mediumconst shr (0+16))
 22195  013B50  22F8               	addwfc	tblptru,f,c
 22196  013B52                     	endif
 22197  013B52  0009               	tblrd		*+
 22198  013B54  CFF5 F16F          	movff	tablat,?_scale
 22199  013B58  0009               	tblrd		*+
 22200  013B5A  CFF5 F170          	movff	tablat,?_scale+1
 22201  013B5E  0009               	tblrd		*+
 22202  013B60  CFF5 F171          	movff	tablat,?_scale+2
 22203  013B64  000A               	tblrd		*-
 22204  013B66  CFF5 F172          	movff	tablat,?_scale+3
 22205                           
 22206                           ; BSR set to: 1
 22207  013B6A  0012               	return	
 22208  013B6C                     l1458:
 22209                           
 22210                           ; BSR set to: 1
 22211                           ;doprnt.c: 435: }
 22212                           ;doprnt.c: 436: if(scl>=110)
 22213                           
 22214                           ; BSR set to: 1
 22215  013B6C  5177               	movf	scale@scl& (0+255),w,b
 22216  013B6E  0A80               	xorlw	128
 22217  013B70  0F12               	addlw	-238
 22218  013B72  A0D8               	btfss	status,0,c
 22219  013B74  D0A5               	goto	l1463
 22220                           
 22221                           ; BSR set to: 1
 22222                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 22223  013B76  0E00               	movlw	0
 22224  013B78  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22225  013B7A  0E0A               	movlw	10
 22226  013B7C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22227  013B7E  0E00               	movlw	0
 22228  013B80  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22229  013B82  0E64               	movlw	100
 22230  013B84  6F19               	movwf	___awmod@divisor& (0+255),b
 22231  013B86  5177               	movf	scale@scl& (0+255),w,b
 22232  013B88  6F17               	movwf	___awmod@dividend& (0+255),b
 22233  013B8A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22234  013B8C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22235  013B8E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22236  013B90  EC8D  F0C2         	call	___awmod	;wreg free
 22237  013B94  C117  F11D         	movff	?___awmod,___awdiv@dividend
 22238  013B98  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 22239  013B9C  EC0A  F0C1         	call	___awdiv	;wreg free
 22240  013BA0  0101               	movlb	1	; () banked
 22241  013BA2  90D8               	bcf	status,0,c
 22242  013BA4  371D               	rlcf	?___awdiv& (0+255),f,b
 22243  013BA6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22244  013BA8  90D8               	bcf	status,0,c
 22245  013BAA  371D               	rlcf	?___awdiv& (0+255),f,b
 22246  013BAC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22247  013BAE  0E24               	movlw	36
 22248  013BB0  271D               	addwf	?___awdiv& (0+255),f,b
 22249  013BB2  0E00               	movlw	0
 22250  013BB4  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22251  013BB6  0E43               	movlw	low __powers_
 22252  013BB8  251D               	addwf	?___awdiv& (0+255),w,b
 22253  013BBA  6EF6               	movwf	tblptrl,c
 22254  013BBC  0ED8               	movlw	high __powers_
 22255  013BBE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22256  013BC0  6EF7               	movwf	tblptrh,c
 22257  013BC2                     	if	1	;There are 3 active tblptr bytes
 22258  013BC2  6AF8               	clrf	tblptru,c
 22259  013BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 22260  013BC6  22F8               	addwfc	tblptru,f,c
 22261  013BC8                     	endif
 22262  013BC8  0009               	tblrd		*+
 22263  013BCA  CFF5 F15A          	movff	tablat,___flmul@a
 22264  013BCE  0009               	tblrd		*+
 22265  013BD0  CFF5 F15B          	movff	tablat,___flmul@a+1
 22266  013BD4  0009               	tblrd		*+
 22267  013BD6  CFF5 F15C          	movff	tablat,___flmul@a+2
 22268  013BDA  000A               	tblrd		*-
 22269  013BDC  CFF5 F15D          	movff	tablat,___flmul@a+3
 22270  013BE0  0E00               	movlw	0
 22271  013BE2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22272  013BE4  0E64               	movlw	100
 22273  013BE6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22274  013BE8  5177               	movf	scale@scl& (0+255),w,b
 22275  013BEA  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22276  013BEC  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22277  013BEE  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22278  013BF0  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22279  013BF2  EC0A  F0C1         	call	___awdiv	;wreg free
 22280  013BF6  0101               	movlb	1	; () banked
 22281  013BF8  90D8               	bcf	status,0,c
 22282  013BFA  371D               	rlcf	?___awdiv& (0+255),f,b
 22283  013BFC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22284  013BFE  90D8               	bcf	status,0,c
 22285  013C00  371D               	rlcf	?___awdiv& (0+255),f,b
 22286  013C02  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22287  013C04  0E48               	movlw	72
 22288  013C06  271D               	addwf	?___awdiv& (0+255),f,b
 22289  013C08  0E00               	movlw	0
 22290  013C0A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22291  013C0C  0E43               	movlw	low __powers_
 22292  013C0E  251D               	addwf	?___awdiv& (0+255),w,b
 22293  013C10  6EF6               	movwf	tblptrl,c
 22294  013C12  0ED8               	movlw	high __powers_
 22295  013C14  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22296  013C16  6EF7               	movwf	tblptrh,c
 22297  013C18                     	if	1	;There are 3 active tblptr bytes
 22298  013C18  6AF8               	clrf	tblptru,c
 22299  013C1A  0E00               	movlw	low (__mediumconst shr (0+16))
 22300  013C1C  22F8               	addwfc	tblptru,f,c
 22301  013C1E                     	endif
 22302  013C1E  0009               	tblrd		*+
 22303  013C20  CFF5 F156          	movff	tablat,___flmul@b
 22304  013C24  0009               	tblrd		*+
 22305  013C26  CFF5 F157          	movff	tablat,___flmul@b+1
 22306  013C2A  0009               	tblrd		*+
 22307  013C2C  CFF5 F158          	movff	tablat,___flmul@b+2
 22308  013C30  000A               	tblrd		*-
 22309  013C32  CFF5 F159          	movff	tablat,___flmul@b+3
 22310  013C36  ECD0  F0A2         	call	___flmul	;wreg free
 22311  013C3A  C156  F173         	movff	?___flmul,_scale$3990
 22312  013C3E  C157  F174         	movff	?___flmul+1,_scale$3990+1
 22313  013C42  C158  F175         	movff	?___flmul+2,_scale$3990+2
 22314  013C46  C159  F176         	movff	?___flmul+3,_scale$3990+3
 22315                           
 22316                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 22317  013C4A  C173  F156         	movff	_scale$3990,___flmul@b
 22318  013C4E  C174  F157         	movff	_scale$3990+1,___flmul@b+1
 22319  013C52  C175  F158         	movff	_scale$3990+2,___flmul@b+2
 22320  013C56  C176  F159         	movff	_scale$3990+3,___flmul@b+3
 22321  013C5A  0E00               	movlw	0
 22322  013C5C  0101               	movlb	1	; () banked
 22323  013C5E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22324  013C60  0E0A               	movlw	10
 22325  013C62  6F19               	movwf	___awmod@divisor& (0+255),b
 22326  013C64  5177               	movf	scale@scl& (0+255),w,b
 22327  013C66  6F17               	movwf	___awmod@dividend& (0+255),b
 22328  013C68  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22329  013C6A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22330  013C6C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22331  013C6E  EC8D  F0C2         	call	___awmod	;wreg free
 22332  013C72  0101               	movlb	1	; () banked
 22333  013C74  90D8               	bcf	status,0,c
 22334  013C76  3717               	rlcf	?___awmod& (0+255),f,b
 22335  013C78  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22336  013C7A  90D8               	bcf	status,0,c
 22337  013C7C  3717               	rlcf	?___awmod& (0+255),f,b
 22338  013C7E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22339  013C80  0E43               	movlw	low __powers_
 22340  013C82  2517               	addwf	?___awmod& (0+255),w,b
 22341  013C84  6EF6               	movwf	tblptrl,c
 22342  013C86  0ED8               	movlw	high __powers_
 22343  013C88  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22344  013C8A  6EF7               	movwf	tblptrh,c
 22345  013C8C                     	if	1	;There are 3 active tblptr bytes
 22346  013C8C  6AF8               	clrf	tblptru,c
 22347  013C8E  0E00               	movlw	low (__mediumconst shr (0+16))
 22348  013C90  22F8               	addwfc	tblptru,f,c
 22349  013C92                     	endif
 22350  013C92  0009               	tblrd		*+
 22351  013C94  CFF5 F15A          	movff	tablat,___flmul@a
 22352  013C98  0009               	tblrd		*+
 22353  013C9A  CFF5 F15B          	movff	tablat,___flmul@a+1
 22354  013C9E  0009               	tblrd		*+
 22355  013CA0  CFF5 F15C          	movff	tablat,___flmul@a+2
 22356  013CA4  000A               	tblrd		*-
 22357  013CA6  CFF5 F15D          	movff	tablat,___flmul@a+3
 22358  013CAA  ECD0  F0A2         	call	___flmul	;wreg free
 22359  013CAE  C156  F16F         	movff	?___flmul,?_scale
 22360  013CB2  C157  F170         	movff	?___flmul+1,?_scale+1
 22361  013CB6  C158  F171         	movff	?___flmul+2,?_scale+2
 22362  013CBA  C159  F172         	movff	?___flmul+3,?_scale+3
 22363  013CBE  0012               	return	
 22364  013CC0                     l1463:
 22365                           
 22366                           ;doprnt.c: 438: else if(scl > 10)
 22367  013CC0  0101               	movlb	1	; () banked
 22368  013CC2  5177               	movf	scale@scl& (0+255),w,b
 22369  013CC4  0A80               	xorlw	128
 22370  013CC6  0F75               	addlw	-139
 22371  013CC8  A0D8               	btfss	status,0,c
 22372  013CCA  D05D               	goto	l1465
 22373                           
 22374                           ; BSR set to: 1
 22375                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 22376  013CCC  0E00               	movlw	0
 22377  013CCE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22378  013CD0  0E0A               	movlw	10
 22379  013CD2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22380  013CD4  5177               	movf	scale@scl& (0+255),w,b
 22381  013CD6  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22382  013CD8  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22383  013CDA  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22384  013CDC  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22385  013CDE  EC0A  F0C1         	call	___awdiv	;wreg free
 22386  013CE2  0101               	movlb	1	; () banked
 22387  013CE4  90D8               	bcf	status,0,c
 22388  013CE6  371D               	rlcf	?___awdiv& (0+255),f,b
 22389  013CE8  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22390  013CEA  90D8               	bcf	status,0,c
 22391  013CEC  371D               	rlcf	?___awdiv& (0+255),f,b
 22392  013CEE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22393  013CF0  0E24               	movlw	36
 22394  013CF2  271D               	addwf	?___awdiv& (0+255),f,b
 22395  013CF4  0E00               	movlw	0
 22396  013CF6  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22397  013CF8  0E43               	movlw	low __powers_
 22398  013CFA  251D               	addwf	?___awdiv& (0+255),w,b
 22399  013CFC  6EF6               	movwf	tblptrl,c
 22400  013CFE  0ED8               	movlw	high __powers_
 22401  013D00  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22402  013D02  6EF7               	movwf	tblptrh,c
 22403  013D04                     	if	1	;There are 3 active tblptr bytes
 22404  013D04  6AF8               	clrf	tblptru,c
 22405  013D06  0E00               	movlw	low (__mediumconst shr (0+16))
 22406  013D08  22F8               	addwfc	tblptru,f,c
 22407  013D0A                     	endif
 22408  013D0A  0009               	tblrd		*+
 22409  013D0C  CFF5 F156          	movff	tablat,___flmul@b
 22410  013D10  0009               	tblrd		*+
 22411  013D12  CFF5 F157          	movff	tablat,___flmul@b+1
 22412  013D16  0009               	tblrd		*+
 22413  013D18  CFF5 F158          	movff	tablat,___flmul@b+2
 22414  013D1C  000A               	tblrd		*-
 22415  013D1E  CFF5 F159          	movff	tablat,___flmul@b+3
 22416  013D22  0E00               	movlw	0
 22417  013D24  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22418  013D26  0E0A               	movlw	10
 22419  013D28  6F19               	movwf	___awmod@divisor& (0+255),b
 22420  013D2A  5177               	movf	scale@scl& (0+255),w,b
 22421  013D2C  6F17               	movwf	___awmod@dividend& (0+255),b
 22422  013D2E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22423  013D30  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22424  013D32  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22425  013D34  EC8D  F0C2         	call	___awmod	;wreg free
 22426  013D38  0101               	movlb	1	; () banked
 22427  013D3A  90D8               	bcf	status,0,c
 22428  013D3C  3717               	rlcf	?___awmod& (0+255),f,b
 22429  013D3E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22430  013D40  90D8               	bcf	status,0,c
 22431  013D42  3717               	rlcf	?___awmod& (0+255),f,b
 22432  013D44  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22433  013D46  0E43               	movlw	low __powers_
 22434  013D48  2517               	addwf	?___awmod& (0+255),w,b
 22435  013D4A  6EF6               	movwf	tblptrl,c
 22436  013D4C  0ED8               	movlw	high __powers_
 22437  013D4E  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22438  013D50  6EF7               	movwf	tblptrh,c
 22439  013D52                     	if	1	;There are 3 active tblptr bytes
 22440  013D52  6AF8               	clrf	tblptru,c
 22441  013D54  0E00               	movlw	low (__mediumconst shr (0+16))
 22442  013D56  22F8               	addwfc	tblptru,f,c
 22443  013D58                     	endif
 22444  013D58  0009               	tblrd		*+
 22445  013D5A  CFF5 F15A          	movff	tablat,___flmul@a
 22446  013D5E  0009               	tblrd		*+
 22447  013D60  CFF5 F15B          	movff	tablat,___flmul@a+1
 22448  013D64  0009               	tblrd		*+
 22449  013D66  CFF5 F15C          	movff	tablat,___flmul@a+2
 22450  013D6A  000A               	tblrd		*-
 22451  013D6C  CFF5 F15D          	movff	tablat,___flmul@a+3
 22452  013D70  ECD0  F0A2         	call	___flmul	;wreg free
 22453  013D74  C156  F16F         	movff	?___flmul,?_scale
 22454  013D78  C157  F170         	movff	?___flmul+1,?_scale+1
 22455  013D7C  C158  F171         	movff	?___flmul+2,?_scale+2
 22456  013D80  C159  F172         	movff	?___flmul+3,?_scale+3
 22457  013D84  0012               	return	
 22458  013D86                     l1465:
 22459                           
 22460                           ;doprnt.c: 440: return _powers_[scl];
 22461  013D86  0101               	movlb	1	; () banked
 22462  013D88  5177               	movf	scale@scl& (0+255),w,b
 22463  013D8A  0D04               	mullw	4
 22464  013D8C  0E43               	movlw	low __powers_
 22465  013D8E  24F3               	addwf	prodl,w,c
 22466  013D90  6EF6               	movwf	tblptrl,c
 22467  013D92  0ED8               	movlw	high __powers_
 22468  013D94  20F4               	addwfc	prodh,w,c
 22469  013D96  6EF7               	movwf	tblptrh,c
 22470  013D98                     	if	1	;There are 3 active tblptr bytes
 22471  013D98  6AF8               	clrf	tblptru,c
 22472  013D9A  0E00               	movlw	low (__mediumconst shr (0+16))
 22473  013D9C  22F8               	addwfc	tblptru,f,c
 22474  013D9E                     	endif
 22475  013D9E  0009               	tblrd		*+
 22476  013DA0  CFF5 F16F          	movff	tablat,?_scale
 22477  013DA4  0009               	tblrd		*+
 22478  013DA6  CFF5 F170          	movff	tablat,?_scale+1
 22479  013DAA  0009               	tblrd		*+
 22480  013DAC  CFF5 F171          	movff	tablat,?_scale+2
 22481  013DB0  000A               	tblrd		*-
 22482  013DB2  CFF5 F172          	movff	tablat,?_scale+3
 22483  013DB6  0012               	return	
 22484  013DB8                     __end_of_scale:
 22485                           	opt stack 0
 22486                           tblptru	equ	0xFF8
 22487                           tblptrh	equ	0xFF7
 22488                           tblptrl	equ	0xFF6
 22489                           tablat	equ	0xFF5
 22490                           prodh	equ	0xFF4
 22491                           prodl	equ	0xFF3
 22492                           intcon	equ	0xFF2
 22493                           indf0	equ	0xFEF
 22494                           postinc0	equ	0xFEE
 22495                           fsr0h	equ	0xFEA
 22496                           fsr0l	equ	0xFE9
 22497                           wreg	equ	0xFE8
 22498                           indf1	equ	0xFE7
 22499                           postdec1	equ	0xFE5
 22500                           plusw1	equ	0xFE3
 22501                           fsr1h	equ	0xFE2
 22502                           fsr1l	equ	0xFE1
 22503                           indf2	equ	0xFDF
 22504                           postinc2	equ	0xFDE
 22505                           postdec2	equ	0xFDD
 22506                           plusw2	equ	0xFDB
 22507                           fsr2h	equ	0xFDA
 22508                           fsr2l	equ	0xFD9
 22509                           status	equ	0xFD8
 22510                           
 22511 ;; *************** function _putch *****************
 22512 ;; Defined at:
 22513 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 22514 ;; Parameters:    Size  Location     Type
 22515 ;;  txData          1    wreg     unsigned char 
 22516 ;; Auto vars:     Size  Location     Type
 22517 ;;  txData          1   24[BANK1 ] unsigned char 
 22518 ;; Return value:  Size  Location     Type
 22519 ;;                  1    wreg      void 
 22520 ;; Registers used:
 22521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22522 ;; Tracked objects:
 22523 ;;		On entry : 0/0
 22524 ;;		On exit  : 0/0
 22525 ;;		Unchanged: 0/0
 22526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22528 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22530 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22531 ;;Total ram usage:        1 bytes
 22532 ;; Hardware stack levels used:    1
 22533 ;; Hardware stack levels required when called:   14
 22534 ;; This function calls:
 22535 ;;		_EUSART2_Write
 22536 ;; This function is called by:
 22537 ;;		_printf
 22538 ;; This function uses a non-reentrant model
 22539 ;;
 22540                           
 22541                           	psect	text30
 22542  0192EE                     __ptext30:
 22543                           	opt stack 0
 22544  0192EE                     _putch:
 22545                           	opt stack 13
 22546                           
 22547                           ;incstack = 0
 22548                           ;putch@txData stored from wreg
 22549  0192EE  0101               	movlb	1	; () banked
 22550  0192F0  6F18               	movwf	putch@txData& (0+255),b
 22551                           
 22552                           ;eusart2.c: 195: EUSART2_Write(txData);
 22553  0192F2  0101               	movlb	1	; () banked
 22554  0192F4  5118               	movf	putch@txData& (0+255),w,b
 22555  0192F6  EC80  F0C5         	call	_EUSART2_Write
 22556  0192FA  0012               	return		;funcret
 22557  0192FC                     __end_of_putch:
 22558                           	opt stack 0
 22559                           tblptru	equ	0xFF8
 22560                           tblptrh	equ	0xFF7
 22561                           tblptrl	equ	0xFF6
 22562                           tablat	equ	0xFF5
 22563                           prodh	equ	0xFF4
 22564                           prodl	equ	0xFF3
 22565                           intcon	equ	0xFF2
 22566                           indf0	equ	0xFEF
 22567                           postinc0	equ	0xFEE
 22568                           fsr0h	equ	0xFEA
 22569                           fsr0l	equ	0xFE9
 22570                           wreg	equ	0xFE8
 22571                           indf1	equ	0xFE7
 22572                           postdec1	equ	0xFE5
 22573                           plusw1	equ	0xFE3
 22574                           fsr1h	equ	0xFE2
 22575                           fsr1l	equ	0xFE1
 22576                           indf2	equ	0xFDF
 22577                           postinc2	equ	0xFDE
 22578                           postdec2	equ	0xFDD
 22579                           plusw2	equ	0xFDB
 22580                           fsr2h	equ	0xFDA
 22581                           fsr2l	equ	0xFD9
 22582                           status	equ	0xFD8
 22583                           
 22584 ;; *************** function _EUSART2_Write *****************
 22585 ;; Defined at:
 22586 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 22587 ;; Parameters:    Size  Location     Type
 22588 ;;  txData          1    wreg     unsigned char 
 22589 ;; Auto vars:     Size  Location     Type
 22590 ;;  txData          1   23[BANK1 ] unsigned char 
 22591 ;; Return value:  Size  Location     Type
 22592 ;;                  1    wreg      void 
 22593 ;; Registers used:
 22594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22595 ;; Tracked objects:
 22596 ;;		On entry : 0/0
 22597 ;;		On exit  : 0/0
 22598 ;;		Unchanged: 0/0
 22599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22601 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22603 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22604 ;;Total ram usage:        1 bytes
 22605 ;; Hardware stack levels used:    1
 22606 ;; Hardware stack levels required when called:   13
 22607 ;; This function calls:
 22608 ;;		Nothing
 22609 ;; This function is called by:
 22610 ;;		_putch
 22611 ;; This function uses a non-reentrant model
 22612 ;;
 22613                           
 22614                           	psect	text31
 22615  018B00                     __ptext31:
 22616                           	opt stack 0
 22617  018B00                     _EUSART2_Write:
 22618                           	opt stack 13
 22619                           
 22620                           ;incstack = 0
 22621                           ;EUSART2_Write@txData stored from wreg
 22622  018B00  0101               	movlb	1	; () banked
 22623  018B02  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 22624                           
 22625                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 22626  018B04  D002               	goto	l388
 22627  018B06                     l389:
 22628                           
 22629                           ; BSR set to: 1
 22630  018B06  0004               	clrwdt		;# 
 22631                           
 22632                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 22633  018B08  827E               	bsf	3966,1,c	;volatile
 22634  018B0A                     l388:
 22635  018B0A  0101               	movlb	1	; () banked
 22636  018B0C  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 22637  018B0E  B4D8               	btfsc	status,2,c
 22638  018B10  D7FA               	goto	l389
 22639                           
 22640                           ; BSR set to: 1
 22641                           ;eusart2.c: 167: }
 22642                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 22643  018B12  927E               	bcf	3966,1,c	;volatile
 22644                           
 22645                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 22646  018B14  010E               	movlb	14	; () banked
 22647  018B16  BD2C               	btfsc	44,6,b	;volatile
 22648  018B18  D003               	goto	l391
 22649                           
 22650                           ; BSR set to: 14
 22651                           ;eusart2.c: 172: {
 22652                           ;eusart2.c: 173: TX2REG = txData;
 22653  018B1A  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 22654                           
 22655                           ;eusart2.c: 174: }
 22656  018B1E  D013               	goto	l392
 22657  018B20                     l391:
 22658                           
 22659                           ; BSR set to: 14
 22660                           ;eusart2.c: 175: else
 22661                           ;eusart2.c: 176: {
 22662                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 22663  018B20  9D2C               	bcf	44,6,b	;volatile
 22664                           
 22665                           ; BSR set to: 14
 22666                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 22667  018B22  0101               	movlb	1	; () banked
 22668  018B24  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 22669  018B26  0D01               	mullw	1
 22670  018B28  0E00               	movlw	low _eusart2TxBuffer
 22671  018B2A  24F3               	addwf	prodl,w,c
 22672  018B2C  6ED9               	movwf	fsr2l,c
 22673  018B2E  0E03               	movlw	high _eusart2TxBuffer
 22674  018B30  20F4               	addwfc	prodh,w,c
 22675  018B32  6EDA               	movwf	fsr2h,c
 22676  018B34  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 22677                           
 22678                           ; BSR set to: 1
 22679  018B38  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 22680                           
 22681                           ; BSR set to: 1
 22682                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 22683  018B3A  0E7F               	movlw	127
 22684  018B3C  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 22685  018B3E  D002               	goto	l393
 22686                           
 22687                           ; BSR set to: 1
 22688                           ;eusart2.c: 180: {
 22689                           ;eusart2.c: 181: eusart2TxHead = 0;
 22690  018B40  0E00               	movlw	0
 22691  018B42  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 22692  018B44                     l393:
 22693                           
 22694                           ; BSR set to: 1
 22695                           ;eusart2.c: 182: }
 22696                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 22697                           
 22698                           ; BSR set to: 1
 22699  018B44  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 22700  018B46                     l392:
 22701                           
 22702                           ;eusart2.c: 184: }
 22703                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 22704                           
 22705                           ; BSR set to: 1
 22706  018B46  010E               	movlb	14	; () banked
 22707  018B48  8D2C               	bsf	44,6,b	;volatile
 22708                           
 22709                           ; BSR set to: 14
 22710  018B4A  0012               	return		;funcret
 22711  018B4C                     __end_of_EUSART2_Write:
 22712                           	opt stack 0
 22713                           tblptru	equ	0xFF8
 22714                           tblptrh	equ	0xFF7
 22715                           tblptrl	equ	0xFF6
 22716                           tablat	equ	0xFF5
 22717                           prodh	equ	0xFF4
 22718                           prodl	equ	0xFF3
 22719                           intcon	equ	0xFF2
 22720                           indf0	equ	0xFEF
 22721                           postinc0	equ	0xFEE
 22722                           fsr0h	equ	0xFEA
 22723                           fsr0l	equ	0xFE9
 22724                           wreg	equ	0xFE8
 22725                           indf1	equ	0xFE7
 22726                           postdec1	equ	0xFE5
 22727                           plusw1	equ	0xFE3
 22728                           fsr1h	equ	0xFE2
 22729                           fsr1l	equ	0xFE1
 22730                           indf2	equ	0xFDF
 22731                           postinc2	equ	0xFDE
 22732                           postdec2	equ	0xFDD
 22733                           plusw2	equ	0xFDB
 22734                           fsr2h	equ	0xFDA
 22735                           fsr2l	equ	0xFD9
 22736                           status	equ	0xFD8
 22737                           
 22738 ;; *************** function _isdigit *****************
 22739 ;; Defined at:
 22740 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 22741 ;; Parameters:    Size  Location     Type
 22742 ;;  c               1    wreg     unsigned char 
 22743 ;; Auto vars:     Size  Location     Type
 22744 ;;  c               1   25[BANK1 ] unsigned char 
 22745 ;; Return value:  Size  Location     Type
 22746 ;;		None               void
 22747 ;; Registers used:
 22748 ;;		wreg, status,2, status,0
 22749 ;; Tracked objects:
 22750 ;;		On entry : 0/0
 22751 ;;		On exit  : 0/0
 22752 ;;		Unchanged: 0/0
 22753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22755 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22756 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22757 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22758 ;;Total ram usage:        3 bytes
 22759 ;; Hardware stack levels used:    1
 22760 ;; Hardware stack levels required when called:   13
 22761 ;; This function calls:
 22762 ;;		Nothing
 22763 ;; This function is called by:
 22764 ;;		_printf
 22765 ;;		_atoi
 22766 ;; This function uses a non-reentrant model
 22767 ;;
 22768                           
 22769                           	psect	text32
 22770  019166                     __ptext32:
 22771                           	opt stack 0
 22772  019166                     _isdigit:
 22773                           	opt stack 14
 22774                           
 22775                           ; BSR set to: 14
 22776                           ;incstack = 0
 22777                           ;isdigit@c stored from wreg
 22778  019166  0101               	movlb	1	; () banked
 22779  019168  6F19               	movwf	isdigit@c& (0+255),b
 22780  01916A  0E00               	movlw	0
 22781  01916C  0101               	movlb	1	; () banked
 22782  01916E  6F18               	movwf	_isdigit$3272& (0+255),b
 22783                           
 22784                           ; BSR set to: 1
 22785  019170  0E3A               	movlw	58
 22786  019172  6119               	cpfslt	isdigit@c& (0+255),b
 22787  019174  D005               	goto	l2036
 22788                           
 22789                           ; BSR set to: 1
 22790  019176  0E2F               	movlw	47
 22791  019178  6519               	cpfsgt	isdigit@c& (0+255),b
 22792  01917A  D002               	goto	l2036
 22793                           
 22794                           ; BSR set to: 1
 22795  01917C  0E01               	movlw	1
 22796  01917E  6F18               	movwf	_isdigit$3272& (0+255),b
 22797  019180                     l2036:
 22798                           
 22799                           ; BSR set to: 1
 22800                           
 22801                           ; BSR set to: 1
 22802  019180  C118  F117         	movff	_isdigit$3272,??_isdigit
 22803  019184  3117               	rrcf	??_isdigit& (0+255),w,b
 22804  019186  0012               	return	
 22805  019188                     __end_of_isdigit:
 22806                           	opt stack 0
 22807                           tblptru	equ	0xFF8
 22808                           tblptrh	equ	0xFF7
 22809                           tblptrl	equ	0xFF6
 22810                           tablat	equ	0xFF5
 22811                           prodh	equ	0xFF4
 22812                           prodl	equ	0xFF3
 22813                           intcon	equ	0xFF2
 22814                           indf0	equ	0xFEF
 22815                           postinc0	equ	0xFEE
 22816                           fsr0h	equ	0xFEA
 22817                           fsr0l	equ	0xFE9
 22818                           wreg	equ	0xFE8
 22819                           indf1	equ	0xFE7
 22820                           postdec1	equ	0xFE5
 22821                           plusw1	equ	0xFE3
 22822                           fsr1h	equ	0xFE2
 22823                           fsr1l	equ	0xFE1
 22824                           indf2	equ	0xFDF
 22825                           postinc2	equ	0xFDE
 22826                           postdec2	equ	0xFDD
 22827                           plusw2	equ	0xFDB
 22828                           fsr2h	equ	0xFDA
 22829                           fsr2l	equ	0xFD9
 22830                           status	equ	0xFD8
 22831                           
 22832 ;; *************** function _fround *****************
 22833 ;; Defined at:
 22834 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 22835 ;; Parameters:    Size  Location     Type
 22836 ;;  prec            1    wreg     unsigned char 
 22837 ;; Auto vars:     Size  Location     Type
 22838 ;;  prec            1  123[BANK1 ] unsigned char 
 22839 ;; Return value:  Size  Location     Type
 22840 ;;                  4  111[BANK1 ] unsigned char 
 22841 ;; Registers used:
 22842 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22843 ;; Tracked objects:
 22844 ;;		On entry : 0/0
 22845 ;;		On exit  : 0/0
 22846 ;;		Unchanged: 0/0
 22847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22848 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22849 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22851 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22852 ;;Total ram usage:       13 bytes
 22853 ;; Hardware stack levels used:    1
 22854 ;; Hardware stack levels required when called:   14
 22855 ;; This function calls:
 22856 ;;		___awdiv
 22857 ;;		___awmod
 22858 ;;		___flmul
 22859 ;; This function is called by:
 22860 ;;		_printf
 22861 ;; This function uses a non-reentrant model
 22862 ;;
 22863                           
 22864                           	psect	text33
 22865  015B84                     __ptext33:
 22866                           	opt stack 0
 22867  015B84                     _fround:
 22868                           	opt stack 13
 22869                           
 22870                           ; BSR set to: 1
 22871                           ;incstack = 0
 22872                           ;fround@prec stored from wreg
 22873  015B84  0101               	movlb	1	; () banked
 22874  015B86  6F7B               	movwf	fround@prec& (0+255),b
 22875                           
 22876                           ;doprnt.c: 413: if(prec>=110)
 22877  015B88  0E6D               	movlw	109
 22878  015B8A  0101               	movlb	1	; () banked
 22879  015B8C  657B               	cpfsgt	fround@prec& (0+255),b
 22880  015B8E  D0BA               	goto	l1452
 22881                           
 22882                           ; BSR set to: 1
 22883                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 22884  015B90  0E00               	movlw	0
 22885  015B92  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22886  015B94  0E0A               	movlw	10
 22887  015B96  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22888  015B98  0E00               	movlw	0
 22889  015B9A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22890  015B9C  0E64               	movlw	100
 22891  015B9E  6F19               	movwf	___awmod@divisor& (0+255),b
 22892  015BA0  C17B  F117         	movff	fround@prec,___awmod@dividend
 22893  015BA4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22894  015BA6  EC8D  F0C2         	call	___awmod	;wreg free
 22895  015BAA  C117  F11D         	movff	?___awmod,___awdiv@dividend
 22896  015BAE  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 22897  015BB2  EC0A  F0C1         	call	___awdiv	;wreg free
 22898  015BB6  0101               	movlb	1	; () banked
 22899  015BB8  90D8               	bcf	status,0,c
 22900  015BBA  371D               	rlcf	?___awdiv& (0+255),f,b
 22901  015BBC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22902  015BBE  90D8               	bcf	status,0,c
 22903  015BC0  371D               	rlcf	?___awdiv& (0+255),f,b
 22904  015BC2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22905  015BC4  0E24               	movlw	36
 22906  015BC6  271D               	addwf	?___awdiv& (0+255),f,b
 22907  015BC8  0E00               	movlw	0
 22908  015BCA  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22909  015BCC  0E77               	movlw	low __npowers_
 22910  015BCE  251D               	addwf	?___awdiv& (0+255),w,b
 22911  015BD0  6EF6               	movwf	tblptrl,c
 22912  015BD2  0ED8               	movlw	high __npowers_
 22913  015BD4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22914  015BD6  6EF7               	movwf	tblptrh,c
 22915  015BD8                     	if	1	;There are 3 active tblptr bytes
 22916  015BD8  6AF8               	clrf	tblptru,c
 22917  015BDA  0E00               	movlw	low (__mediumconst shr (0+16))
 22918  015BDC  22F8               	addwfc	tblptru,f,c
 22919  015BDE                     	endif
 22920  015BDE  0009               	tblrd		*+
 22921  015BE0  CFF5 F15A          	movff	tablat,___flmul@a
 22922  015BE4  0009               	tblrd		*+
 22923  015BE6  CFF5 F15B          	movff	tablat,___flmul@a+1
 22924  015BEA  0009               	tblrd		*+
 22925  015BEC  CFF5 F15C          	movff	tablat,___flmul@a+2
 22926  015BF0  000A               	tblrd		*-
 22927  015BF2  CFF5 F15D          	movff	tablat,___flmul@a+3
 22928  015BF6  0E00               	movlw	0
 22929  015BF8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22930  015BFA  0E64               	movlw	100
 22931  015BFC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22932  015BFE  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 22933  015C02  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22934  015C04  EC0A  F0C1         	call	___awdiv	;wreg free
 22935  015C08  0101               	movlb	1	; () banked
 22936  015C0A  90D8               	bcf	status,0,c
 22937  015C0C  371D               	rlcf	?___awdiv& (0+255),f,b
 22938  015C0E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22939  015C10  90D8               	bcf	status,0,c
 22940  015C12  371D               	rlcf	?___awdiv& (0+255),f,b
 22941  015C14  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22942  015C16  0E48               	movlw	72
 22943  015C18  271D               	addwf	?___awdiv& (0+255),f,b
 22944  015C1A  0E00               	movlw	0
 22945  015C1C  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22946  015C1E  0E77               	movlw	low __npowers_
 22947  015C20  251D               	addwf	?___awdiv& (0+255),w,b
 22948  015C22  6EF6               	movwf	tblptrl,c
 22949  015C24  0ED8               	movlw	high __npowers_
 22950  015C26  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22951  015C28  6EF7               	movwf	tblptrh,c
 22952  015C2A                     	if	1	;There are 3 active tblptr bytes
 22953  015C2A  6AF8               	clrf	tblptru,c
 22954  015C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 22955  015C2E  22F8               	addwfc	tblptru,f,c
 22956  015C30                     	endif
 22957  015C30  0009               	tblrd		*+
 22958  015C32  CFF5 F156          	movff	tablat,___flmul@b
 22959  015C36  0009               	tblrd		*+
 22960  015C38  CFF5 F157          	movff	tablat,___flmul@b+1
 22961  015C3C  0009               	tblrd		*+
 22962  015C3E  CFF5 F158          	movff	tablat,___flmul@b+2
 22963  015C42  000A               	tblrd		*-
 22964  015C44  CFF5 F159          	movff	tablat,___flmul@b+3
 22965  015C48  ECD0  F0A2         	call	___flmul	;wreg free
 22966  015C4C  C156  F177         	movff	?___flmul,_fround$3988
 22967  015C50  C157  F178         	movff	?___flmul+1,_fround$3988+1
 22968  015C54  C158  F179         	movff	?___flmul+2,_fround$3988+2
 22969  015C58  C159  F17A         	movff	?___flmul+3,_fround$3988+3
 22970                           
 22971                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 22972  015C5C  0E00               	movlw	0
 22973  015C5E  0101               	movlb	1	; () banked
 22974  015C60  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22975  015C62  0E0A               	movlw	10
 22976  015C64  6F19               	movwf	___awmod@divisor& (0+255),b
 22977  015C66  C17B  F117         	movff	fround@prec,___awmod@dividend
 22978  015C6A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22979  015C6C  EC8D  F0C2         	call	___awmod	;wreg free
 22980  015C70  0101               	movlb	1	; () banked
 22981  015C72  90D8               	bcf	status,0,c
 22982  015C74  3717               	rlcf	?___awmod& (0+255),f,b
 22983  015C76  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22984  015C78  90D8               	bcf	status,0,c
 22985  015C7A  3717               	rlcf	?___awmod& (0+255),f,b
 22986  015C7C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22987  015C7E  0E77               	movlw	low __npowers_
 22988  015C80  2517               	addwf	?___awmod& (0+255),w,b
 22989  015C82  6EF6               	movwf	tblptrl,c
 22990  015C84  0ED8               	movlw	high __npowers_
 22991  015C86  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22992  015C88  6EF7               	movwf	tblptrh,c
 22993  015C8A                     	if	1	;There are 3 active tblptr bytes
 22994  015C8A  6AF8               	clrf	tblptru,c
 22995  015C8C  0E00               	movlw	low (__mediumconst shr (0+16))
 22996  015C8E  22F8               	addwfc	tblptru,f,c
 22997  015C90                     	endif
 22998  015C90  0009               	tblrd		*+
 22999  015C92  CFF5 F15A          	movff	tablat,___flmul@a
 23000  015C96  0009               	tblrd		*+
 23001  015C98  CFF5 F15B          	movff	tablat,___flmul@a+1
 23002  015C9C  0009               	tblrd		*+
 23003  015C9E  CFF5 F15C          	movff	tablat,___flmul@a+2
 23004  015CA2  000A               	tblrd		*-
 23005  015CA4  CFF5 F15D          	movff	tablat,___flmul@a+3
 23006  015CA8  C177  F156         	movff	_fround$3988,___flmul@b
 23007  015CAC  C178  F157         	movff	_fround$3988+1,___flmul@b+1
 23008  015CB0  C179  F158         	movff	_fround$3988+2,___flmul@b+2
 23009  015CB4  C17A  F159         	movff	_fround$3988+3,___flmul@b+3
 23010  015CB8  ECD0  F0A2         	call	___flmul	;wreg free
 23011  015CBC  C156  F173         	movff	?___flmul,_fround$3989
 23012  015CC0  C157  F174         	movff	?___flmul+1,_fround$3989+1
 23013  015CC4  C158  F175         	movff	?___flmul+2,_fround$3989+2
 23014  015CC8  C159  F176         	movff	?___flmul+3,_fround$3989+3
 23015                           
 23016                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23017  015CCC  C173  F156         	movff	_fround$3989,___flmul@b
 23018  015CD0  C174  F157         	movff	_fround$3989+1,___flmul@b+1
 23019  015CD4  C175  F158         	movff	_fround$3989+2,___flmul@b+2
 23020  015CD8  C176  F159         	movff	_fround$3989+3,___flmul@b+3
 23021  015CDC  0E00               	movlw	0
 23022  015CDE  0101               	movlb	1	; () banked
 23023  015CE0  6F5A               	movwf	___flmul@a& (0+255),b
 23024  015CE2  0E00               	movlw	0
 23025  015CE4  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23026  015CE6  0E00               	movlw	0
 23027  015CE8  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23028  015CEA  0E3F               	movlw	63
 23029  015CEC  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23030  015CEE  ECD0  F0A2         	call	___flmul	;wreg free
 23031  015CF2  C156  F16F         	movff	?___flmul,?_fround
 23032  015CF6  C157  F170         	movff	?___flmul+1,?_fround+1
 23033  015CFA  C158  F171         	movff	?___flmul+2,?_fround+2
 23034  015CFE  C159  F172         	movff	?___flmul+3,?_fround+3
 23035  015D02  0012               	return	
 23036  015D04                     l1452:
 23037                           
 23038                           ;doprnt.c: 415: else if(prec > 10)
 23039  015D04  0E0A               	movlw	10
 23040  015D06  0101               	movlb	1	; () banked
 23041  015D08  657B               	cpfsgt	fround@prec& (0+255),b
 23042  015D0A  D074               	goto	l1455
 23043                           
 23044                           ; BSR set to: 1
 23045                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 23046  015D0C  0E00               	movlw	0
 23047  015D0E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23048  015D10  0E0A               	movlw	10
 23049  015D12  6F19               	movwf	___awmod@divisor& (0+255),b
 23050  015D14  C17B  F117         	movff	fround@prec,___awmod@dividend
 23051  015D18  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23052  015D1A  EC8D  F0C2         	call	___awmod	;wreg free
 23053  015D1E  0101               	movlb	1	; () banked
 23054  015D20  90D8               	bcf	status,0,c
 23055  015D22  3717               	rlcf	?___awmod& (0+255),f,b
 23056  015D24  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23057  015D26  90D8               	bcf	status,0,c
 23058  015D28  3717               	rlcf	?___awmod& (0+255),f,b
 23059  015D2A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23060  015D2C  0E77               	movlw	low __npowers_
 23061  015D2E  2517               	addwf	?___awmod& (0+255),w,b
 23062  015D30  6EF6               	movwf	tblptrl,c
 23063  015D32  0ED8               	movlw	high __npowers_
 23064  015D34  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23065  015D36  6EF7               	movwf	tblptrh,c
 23066  015D38                     	if	1	;There are 3 active tblptr bytes
 23067  015D38  6AF8               	clrf	tblptru,c
 23068  015D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 23069  015D3C  22F8               	addwfc	tblptru,f,c
 23070  015D3E                     	endif
 23071  015D3E  0009               	tblrd		*+
 23072  015D40  CFF5 F15A          	movff	tablat,___flmul@a
 23073  015D44  0009               	tblrd		*+
 23074  015D46  CFF5 F15B          	movff	tablat,___flmul@a+1
 23075  015D4A  0009               	tblrd		*+
 23076  015D4C  CFF5 F15C          	movff	tablat,___flmul@a+2
 23077  015D50  000A               	tblrd		*-
 23078  015D52  CFF5 F15D          	movff	tablat,___flmul@a+3
 23079  015D56  0E00               	movlw	0
 23080  015D58  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23081  015D5A  0E0A               	movlw	10
 23082  015D5C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23083  015D5E  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 23084  015D62  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23085  015D64  EC0A  F0C1         	call	___awdiv	;wreg free
 23086  015D68  0101               	movlb	1	; () banked
 23087  015D6A  90D8               	bcf	status,0,c
 23088  015D6C  371D               	rlcf	?___awdiv& (0+255),f,b
 23089  015D6E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23090  015D70  90D8               	bcf	status,0,c
 23091  015D72  371D               	rlcf	?___awdiv& (0+255),f,b
 23092  015D74  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23093  015D76  0E24               	movlw	36
 23094  015D78  271D               	addwf	?___awdiv& (0+255),f,b
 23095  015D7A  0E00               	movlw	0
 23096  015D7C  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23097  015D7E  0E77               	movlw	low __npowers_
 23098  015D80  251D               	addwf	?___awdiv& (0+255),w,b
 23099  015D82  6EF6               	movwf	tblptrl,c
 23100  015D84  0ED8               	movlw	high __npowers_
 23101  015D86  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23102  015D88  6EF7               	movwf	tblptrh,c
 23103  015D8A                     	if	1	;There are 3 active tblptr bytes
 23104  015D8A  6AF8               	clrf	tblptru,c
 23105  015D8C  0E00               	movlw	low (__mediumconst shr (0+16))
 23106  015D8E  22F8               	addwfc	tblptru,f,c
 23107  015D90                     	endif
 23108  015D90  0009               	tblrd		*+
 23109  015D92  CFF5 F156          	movff	tablat,___flmul@b
 23110  015D96  0009               	tblrd		*+
 23111  015D98  CFF5 F157          	movff	tablat,___flmul@b+1
 23112  015D9C  0009               	tblrd		*+
 23113  015D9E  CFF5 F158          	movff	tablat,___flmul@b+2
 23114  015DA2  000A               	tblrd		*-
 23115  015DA4  CFF5 F159          	movff	tablat,___flmul@b+3
 23116  015DA8  ECD0  F0A2         	call	___flmul	;wreg free
 23117  015DAC  C156  F177         	movff	?___flmul,_fround$3988
 23118  015DB0  C157  F178         	movff	?___flmul+1,_fround$3988+1
 23119  015DB4  C158  F179         	movff	?___flmul+2,_fround$3988+2
 23120  015DB8  C159  F17A         	movff	?___flmul+3,_fround$3988+3
 23121                           
 23122                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 23123  015DBC  C177  F156         	movff	_fround$3988,___flmul@b
 23124  015DC0  C178  F157         	movff	_fround$3988+1,___flmul@b+1
 23125  015DC4  C179  F158         	movff	_fround$3988+2,___flmul@b+2
 23126  015DC8  C17A  F159         	movff	_fround$3988+3,___flmul@b+3
 23127  015DCC  0E00               	movlw	0
 23128  015DCE  0101               	movlb	1	; () banked
 23129  015DD0  6F5A               	movwf	___flmul@a& (0+255),b
 23130  015DD2  0E00               	movlw	0
 23131  015DD4  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23132  015DD6  0E00               	movlw	0
 23133  015DD8  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23134  015DDA  0E3F               	movlw	63
 23135  015DDC  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23136  015DDE  ECD0  F0A2         	call	___flmul	;wreg free
 23137  015DE2  C156  F16F         	movff	?___flmul,?_fround
 23138  015DE6  C157  F170         	movff	?___flmul+1,?_fround+1
 23139  015DEA  C158  F171         	movff	?___flmul+2,?_fround+2
 23140  015DEE  C159  F172         	movff	?___flmul+3,?_fround+3
 23141  015DF2  0012               	return	
 23142  015DF4                     l1455:
 23143                           
 23144                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 23145  015DF4  0101               	movlb	1	; () banked
 23146  015DF6  517B               	movf	fround@prec& (0+255),w,b
 23147  015DF8  0D04               	mullw	4
 23148  015DFA  0E77               	movlw	low __npowers_
 23149  015DFC  24F3               	addwf	prodl,w,c
 23150  015DFE  6EF6               	movwf	tblptrl,c
 23151  015E00  0ED8               	movlw	high __npowers_
 23152  015E02  20F4               	addwfc	prodh,w,c
 23153  015E04  6EF7               	movwf	tblptrh,c
 23154  015E06                     	if	1	;There are 3 active tblptr bytes
 23155  015E06  6AF8               	clrf	tblptru,c
 23156  015E08  0E00               	movlw	low (__mediumconst shr (0+16))
 23157  015E0A  22F8               	addwfc	tblptru,f,c
 23158  015E0C                     	endif
 23159  015E0C  0009               	tblrd		*+
 23160  015E0E  CFF5 F156          	movff	tablat,___flmul@b
 23161  015E12  0009               	tblrd		*+
 23162  015E14  CFF5 F157          	movff	tablat,___flmul@b+1
 23163  015E18  0009               	tblrd		*+
 23164  015E1A  CFF5 F158          	movff	tablat,___flmul@b+2
 23165  015E1E  000A               	tblrd		*-
 23166  015E20  CFF5 F159          	movff	tablat,___flmul@b+3
 23167  015E24  0E00               	movlw	0
 23168  015E26  6F5A               	movwf	___flmul@a& (0+255),b
 23169  015E28  0E00               	movlw	0
 23170  015E2A  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23171  015E2C  0E00               	movlw	0
 23172  015E2E  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23173  015E30  0E3F               	movlw	63
 23174  015E32  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23175  015E34  ECD0  F0A2         	call	___flmul	;wreg free
 23176  015E38  C156  F16F         	movff	?___flmul,?_fround
 23177  015E3C  C157  F170         	movff	?___flmul+1,?_fround+1
 23178  015E40  C158  F171         	movff	?___flmul+2,?_fround+2
 23179  015E44  C159  F172         	movff	?___flmul+3,?_fround+3
 23180  015E48  0012               	return	
 23181  015E4A                     __end_of_fround:
 23182                           	opt stack 0
 23183                           tblptru	equ	0xFF8
 23184                           tblptrh	equ	0xFF7
 23185                           tblptrl	equ	0xFF6
 23186                           tablat	equ	0xFF5
 23187                           prodh	equ	0xFF4
 23188                           prodl	equ	0xFF3
 23189                           intcon	equ	0xFF2
 23190                           indf0	equ	0xFEF
 23191                           postinc0	equ	0xFEE
 23192                           fsr0h	equ	0xFEA
 23193                           fsr0l	equ	0xFE9
 23194                           wreg	equ	0xFE8
 23195                           indf1	equ	0xFE7
 23196                           postdec1	equ	0xFE5
 23197                           plusw1	equ	0xFE3
 23198                           fsr1h	equ	0xFE2
 23199                           fsr1l	equ	0xFE1
 23200                           indf2	equ	0xFDF
 23201                           postinc2	equ	0xFDE
 23202                           postdec2	equ	0xFDD
 23203                           plusw2	equ	0xFDB
 23204                           fsr2h	equ	0xFDA
 23205                           fsr2l	equ	0xFD9
 23206                           status	equ	0xFD8
 23207                           
 23208 ;; *************** function ___flmul *****************
 23209 ;; Defined at:
 23210 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 23211 ;; Parameters:    Size  Location     Type
 23212 ;;  b               4   86[BANK1 ] unsigned char 
 23213 ;;  a               4   90[BANK1 ] unsigned char 
 23214 ;; Auto vars:     Size  Location     Type
 23215 ;;  prod            4  105[BANK1 ] struct .
 23216 ;;  grs             4  101[BANK1 ] unsigned long 
 23217 ;;  temp            2  109[BANK1 ] struct .
 23218 ;;  bexp            1  100[BANK1 ] unsigned char 
 23219 ;;  aexp            1   99[BANK1 ] unsigned char 
 23220 ;;  sign            1   98[BANK1 ] unsigned char 
 23221 ;; Return value:  Size  Location     Type
 23222 ;;                  4   86[BANK1 ] unsigned char 
 23223 ;; Registers used:
 23224 ;;		wreg, status,2, status,0, prodl, prodh
 23225 ;; Tracked objects:
 23226 ;;		On entry : 0/0
 23227 ;;		On exit  : 0/0
 23228 ;;		Unchanged: 0/0
 23229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23230 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23231 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23232 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23233 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23234 ;;Total ram usage:       25 bytes
 23235 ;; Hardware stack levels used:    1
 23236 ;; Hardware stack levels required when called:   13
 23237 ;; This function calls:
 23238 ;;		Nothing
 23239 ;; This function is called by:
 23240 ;;		_ringBufferLUT
 23241 ;;		_fround
 23242 ;;		_scale
 23243 ;;		_printf
 23244 ;; This function uses a non-reentrant model
 23245 ;;
 23246                           
 23247                           	psect	text34
 23248  0145A0                     __ptext34:
 23249                           	opt stack 0
 23250  0145A0                     ___flmul:
 23251                           	opt stack 13
 23252                           
 23253                           ;incstack = 0
 23254  0145A0  0101               	movlb	1	; () banked
 23255  0145A2  5159               	movf	(___flmul@b+3)& (0+255),w,b
 23256  0145A4  0B80               	andlw	128
 23257  0145A6  6F62               	movwf	___flmul@sign& (0+255),b
 23258  0145A8  5159               	movf	(___flmul@b+3)& (0+255),w,b
 23259  0145AA  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 23260  0145AC  6F64               	movwf	___flmul@bexp& (0+255),b
 23261                           
 23262                           ; BSR set to: 1
 23263  0145AE  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 23264                           
 23265                           ; BSR set to: 1
 23266  0145B0  8164               	bsf	___flmul@bexp& (0+255),0,b
 23267                           
 23268                           ; BSR set to: 1
 23269                           
 23270                           ; BSR set to: 1
 23271  0145B2  5164               	movf	___flmul@bexp& (0+255),w,b
 23272  0145B4  B4D8               	btfsc	status,2,c
 23273  0145B6  D00D               	goto	l2250
 23274                           
 23275                           ; BSR set to: 1
 23276  0145B8  2964               	incf	___flmul@bexp& (0+255),w,b
 23277  0145BA  A4D8               	btfss	status,2,c
 23278  0145BC  D008               	goto	l2251
 23279                           
 23280                           ; BSR set to: 1
 23281  0145BE  0E00               	movlw	0
 23282  0145C0  6F56               	movwf	___flmul@b& (0+255),b
 23283  0145C2  0E00               	movlw	0
 23284  0145C4  6F57               	movwf	(___flmul@b+1)& (0+255),b
 23285  0145C6  0E00               	movlw	0
 23286  0145C8  6F58               	movwf	(___flmul@b+2)& (0+255),b
 23287  0145CA  0E00               	movlw	0
 23288  0145CC  6F59               	movwf	(___flmul@b+3)& (0+255),b
 23289  0145CE                     l2251:
 23290                           
 23291                           ; BSR set to: 1
 23292                           
 23293                           ; BSR set to: 1
 23294  0145CE  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 23295  0145D0  D008               	goto	l2252
 23296  0145D2                     l2250:
 23297                           
 23298                           ; BSR set to: 1
 23299                           
 23300                           ; BSR set to: 1
 23301  0145D2  0E00               	movlw	0
 23302  0145D4  6F56               	movwf	___flmul@b& (0+255),b
 23303  0145D6  0E00               	movlw	0
 23304  0145D8  6F57               	movwf	(___flmul@b+1)& (0+255),b
 23305  0145DA  0E00               	movlw	0
 23306  0145DC  6F58               	movwf	(___flmul@b+2)& (0+255),b
 23307  0145DE  0E00               	movlw	0
 23308  0145E0  6F59               	movwf	(___flmul@b+3)& (0+255),b
 23309  0145E2                     l2252:
 23310                           
 23311                           ; BSR set to: 1
 23312                           
 23313                           ; BSR set to: 1
 23314  0145E2  515D               	movf	(___flmul@a+3)& (0+255),w,b
 23315  0145E4  0B80               	andlw	128
 23316  0145E6  1B62               	xorwf	___flmul@sign& (0+255),f,b
 23317                           
 23318                           ; BSR set to: 1
 23319  0145E8  515D               	movf	(___flmul@a+3)& (0+255),w,b
 23320  0145EA  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 23321  0145EC  6F63               	movwf	___flmul@aexp& (0+255),b
 23322                           
 23323                           ; BSR set to: 1
 23324  0145EE  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 23325                           
 23326                           ; BSR set to: 1
 23327  0145F0  8163               	bsf	___flmul@aexp& (0+255),0,b
 23328                           
 23329                           ; BSR set to: 1
 23330                           
 23331                           ; BSR set to: 1
 23332  0145F2  5163               	movf	___flmul@aexp& (0+255),w,b
 23333  0145F4  B4D8               	btfsc	status,2,c
 23334  0145F6  D00D               	goto	l2254
 23335                           
 23336                           ; BSR set to: 1
 23337  0145F8  2963               	incf	___flmul@aexp& (0+255),w,b
 23338  0145FA  A4D8               	btfss	status,2,c
 23339  0145FC  D008               	goto	l2255
 23340                           
 23341                           ; BSR set to: 1
 23342  0145FE  0E00               	movlw	0
 23343  014600  6F5A               	movwf	___flmul@a& (0+255),b
 23344  014602  0E00               	movlw	0
 23345  014604  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23346  014606  0E00               	movlw	0
 23347  014608  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23348  01460A  0E00               	movlw	0
 23349  01460C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23350  01460E                     l2255:
 23351                           
 23352                           ; BSR set to: 1
 23353                           
 23354                           ; BSR set to: 1
 23355  01460E  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 23356  014610  D008               	goto	l2256
 23357  014612                     l2254:
 23358                           
 23359                           ; BSR set to: 1
 23360                           
 23361                           ; BSR set to: 1
 23362  014612  0E00               	movlw	0
 23363  014614  6F5A               	movwf	___flmul@a& (0+255),b
 23364  014616  0E00               	movlw	0
 23365  014618  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23366  01461A  0E00               	movlw	0
 23367  01461C  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23368  01461E  0E00               	movlw	0
 23369  014620  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23370  014622                     l2256:
 23371                           
 23372                           ; BSR set to: 1
 23373  014622  5163               	movf	___flmul@aexp& (0+255),w,b
 23374  014624  B4D8               	btfsc	status,2,c
 23375  014626  D003               	goto	u23990
 23376                           
 23377                           ; BSR set to: 1
 23378  014628  5164               	movf	___flmul@bexp& (0+255),w,b
 23379  01462A  A4D8               	btfss	status,2,c
 23380  01462C  D009               	goto	l2257
 23381  01462E                     u23990:
 23382                           
 23383                           ; BSR set to: 1
 23384                           
 23385                           ; BSR set to: 1
 23386  01462E  0E00               	movlw	0
 23387  014630  6F56               	movwf	?___flmul& (0+255),b
 23388  014632  0E00               	movlw	0
 23389  014634  6F57               	movwf	(?___flmul+1)& (0+255),b
 23390  014636  0E00               	movlw	0
 23391  014638  6F58               	movwf	(?___flmul+2)& (0+255),b
 23392  01463A  0E00               	movlw	0
 23393  01463C  6F59               	movwf	(?___flmul+3)& (0+255),b
 23394                           
 23395                           ; BSR set to: 1
 23396  01463E  0012               	return	
 23397  014640                     l2257:
 23398                           
 23399                           ; BSR set to: 1
 23400                           
 23401                           ; BSR set to: 1
 23402  014640  515C               	movf	(___flmul@a+2)& (0+255),w,b
 23403  014642  0356               	mulwf	___flmul@b& (0+255),b
 23404  014644  CFF3 F16D          	movff	prodl,___flmul@temp
 23405  014648  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23406                           
 23407                           ; BSR set to: 1
 23408  01464C  516D               	movf	___flmul@temp& (0+255),w,b
 23409  01464E  6F65               	movwf	___flmul@grs& (0+255),b
 23410  014650  6B66               	clrf	(___flmul@grs+1)& (0+255),b
 23411  014652  6B67               	clrf	(___flmul@grs+2)& (0+255),b
 23412  014654  6B68               	clrf	(___flmul@grs+3)& (0+255),b
 23413                           
 23414                           ; BSR set to: 1
 23415  014656  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23416  014658  6F69               	movwf	___flmul@prod& (0+255),b
 23417  01465A  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 23418  01465C  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 23419  01465E  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 23420  014660  515B               	movf	(___flmul@a+1)& (0+255),w,b
 23421  014662  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23422  014664  CFF3 F16D          	movff	prodl,___flmul@temp
 23423  014668  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23424                           
 23425                           ; BSR set to: 1
 23426  01466C  516D               	movf	___flmul@temp& (0+255),w,b
 23427  01466E  2765               	addwf	___flmul@grs& (0+255),f,b
 23428  014670  0E00               	movlw	0
 23429  014672  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23430  014674  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23431  014676  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23432                           
 23433                           ; BSR set to: 1
 23434  014678  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23435  01467A  2769               	addwf	___flmul@prod& (0+255),f,b
 23436  01467C  0E00               	movlw	0
 23437  01467E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23438  014680  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23439  014682  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23440  014684  515A               	movf	___flmul@a& (0+255),w,b
 23441  014686  0358               	mulwf	(___flmul@b+2)& (0+255),b
 23442  014688  CFF3 F16D          	movff	prodl,___flmul@temp
 23443  01468C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23444                           
 23445                           ; BSR set to: 1
 23446  014690  516D               	movf	___flmul@temp& (0+255),w,b
 23447  014692  2765               	addwf	___flmul@grs& (0+255),f,b
 23448  014694  0E00               	movlw	0
 23449  014696  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23450  014698  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23451  01469A  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23452                           
 23453                           ; BSR set to: 1
 23454  01469C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23455  01469E  2769               	addwf	___flmul@prod& (0+255),f,b
 23456  0146A0  0E00               	movlw	0
 23457  0146A2  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23458  0146A4  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23459  0146A6  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23460                           
 23461                           ; BSR set to: 1
 23462  0146A8  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 23463  0146AC  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 23464  0146B0  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 23465  0146B4  6B65               	clrf	___flmul@grs& (0+255),b
 23466                           
 23467                           ; BSR set to: 1
 23468  0146B6  515A               	movf	___flmul@a& (0+255),w,b
 23469  0146B8  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23470  0146BA  CFF3 F16D          	movff	prodl,___flmul@temp
 23471  0146BE  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23472                           
 23473                           ; BSR set to: 1
 23474  0146C2  516D               	movf	___flmul@temp& (0+255),w,b
 23475  0146C4  2765               	addwf	___flmul@grs& (0+255),f,b
 23476  0146C6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23477  0146C8  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23478  0146CA  0E00               	movlw	0
 23479  0146CC  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23480  0146CE  0E00               	movlw	0
 23481  0146D0  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23482                           
 23483                           ; BSR set to: 1
 23484  0146D2  515B               	movf	(___flmul@a+1)& (0+255),w,b
 23485  0146D4  0356               	mulwf	___flmul@b& (0+255),b
 23486  0146D6  CFF3 F16D          	movff	prodl,___flmul@temp
 23487  0146DA  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23488                           
 23489                           ; BSR set to: 1
 23490  0146DE  516D               	movf	___flmul@temp& (0+255),w,b
 23491  0146E0  2765               	addwf	___flmul@grs& (0+255),f,b
 23492  0146E2  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23493  0146E4  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23494  0146E6  0E00               	movlw	0
 23495  0146E8  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23496  0146EA  0E00               	movlw	0
 23497  0146EC  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23498                           
 23499                           ; BSR set to: 1
 23500  0146EE  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 23501  0146F2  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 23502  0146F6  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 23503  0146FA  6B65               	clrf	___flmul@grs& (0+255),b
 23504  0146FC  515A               	movf	___flmul@a& (0+255),w,b
 23505  0146FE  0356               	mulwf	___flmul@b& (0+255),b
 23506  014700  CFF3 F16D          	movff	prodl,___flmul@temp
 23507  014704  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23508                           
 23509                           ; BSR set to: 1
 23510  014708  516D               	movf	___flmul@temp& (0+255),w,b
 23511  01470A  2765               	addwf	___flmul@grs& (0+255),f,b
 23512  01470C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23513  01470E  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23514  014710  0E00               	movlw	0
 23515  014712  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23516  014714  0E00               	movlw	0
 23517  014716  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23518                           
 23519                           ; BSR set to: 1
 23520  014718  515C               	movf	(___flmul@a+2)& (0+255),w,b
 23521  01471A  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23522  01471C  CFF3 F16D          	movff	prodl,___flmul@temp
 23523  014720  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23524  014724  516D               	movf	___flmul@temp& (0+255),w,b
 23525  014726  2769               	addwf	___flmul@prod& (0+255),f,b
 23526  014728  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23527  01472A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23528  01472C  0E00               	movlw	0
 23529  01472E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23530  014730  0E00               	movlw	0
 23531  014732  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23532                           
 23533                           ; BSR set to: 1
 23534  014734  515B               	movf	(___flmul@a+1)& (0+255),w,b
 23535  014736  0358               	mulwf	(___flmul@b+2)& (0+255),b
 23536  014738  CFF3 F16D          	movff	prodl,___flmul@temp
 23537  01473C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23538                           
 23539                           ; BSR set to: 1
 23540  014740  516D               	movf	___flmul@temp& (0+255),w,b
 23541  014742  2769               	addwf	___flmul@prod& (0+255),f,b
 23542  014744  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23543  014746  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23544  014748  0E00               	movlw	0
 23545  01474A  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23546  01474C  0E00               	movlw	0
 23547  01474E  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23548  014750  515C               	movf	(___flmul@a+2)& (0+255),w,b
 23549  014752  0358               	mulwf	(___flmul@b+2)& (0+255),b
 23550  014754  CFF3 F16D          	movff	prodl,___flmul@temp
 23551  014758  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23552                           
 23553                           ; BSR set to: 1
 23554  01475C  516D               	movf	___flmul@temp& (0+255),w,b
 23555  01475E  6F5E               	movwf	??___flmul& (0+255),b
 23556  014760  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23557  014762  6F5F               	movwf	(??___flmul+1)& (0+255),b
 23558  014764  6B60               	clrf	(??___flmul+2)& (0+255),b
 23559  014766  6B61               	clrf	(??___flmul+3)& (0+255),b
 23560  014768  C160  F161         	movff	??___flmul+2,??___flmul+3
 23561  01476C  C15F  F160         	movff	??___flmul+1,??___flmul+2
 23562  014770  C15E  F15F         	movff	??___flmul,??___flmul+1
 23563  014774  6B5E               	clrf	??___flmul& (0+255),b
 23564  014776  515E               	movf	??___flmul& (0+255),w,b
 23565  014778  2769               	addwf	___flmul@prod& (0+255),f,b
 23566  01477A  515F               	movf	(??___flmul+1)& (0+255),w,b
 23567  01477C  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23568  01477E  5160               	movf	(??___flmul+2)& (0+255),w,b
 23569  014780  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23570  014782  5161               	movf	(??___flmul+3)& (0+255),w,b
 23571  014784  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23572                           
 23573                           ; BSR set to: 1
 23574  014786  C165  F15E         	movff	___flmul@grs,??___flmul
 23575  01478A  C166  F15F         	movff	___flmul@grs+1,??___flmul+1
 23576  01478E  C167  F160         	movff	___flmul@grs+2,??___flmul+2
 23577  014792  C168  F161         	movff	___flmul@grs+3,??___flmul+3
 23578  014796  0E19               	movlw	25
 23579  014798  D005               	goto	u24000
 23580  01479A                     u24005:
 23581  01479A  90D8               	bcf	status,0,c
 23582  01479C  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 23583  01479E  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 23584  0147A0  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 23585  0147A2  335E               	rrcf	??___flmul& (0+255),f,b
 23586  0147A4                     u24000:
 23587  0147A4  2EE8               	decfsz	wreg,f,c
 23588  0147A6  D7F9               	goto	u24005
 23589  0147A8  515E               	movf	??___flmul& (0+255),w,b
 23590  0147AA  2769               	addwf	___flmul@prod& (0+255),f,b
 23591  0147AC  515F               	movf	(??___flmul+1)& (0+255),w,b
 23592  0147AE  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23593  0147B0  5160               	movf	(??___flmul+2)& (0+255),w,b
 23594  0147B2  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23595  0147B4  5161               	movf	(??___flmul+3)& (0+255),w,b
 23596  0147B6  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23597                           
 23598                           ; BSR set to: 1
 23599  0147B8  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 23600  0147BC  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 23601  0147C0  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 23602  0147C4  6B65               	clrf	___flmul@grs& (0+255),b
 23603                           
 23604                           ; BSR set to: 1
 23605  0147C6  5163               	movf	___flmul@aexp& (0+255),w,b
 23606  0147C8  C164  F15E         	movff	___flmul@bexp,??___flmul
 23607  0147CC  6B5F               	clrf	(??___flmul+1)& (0+255),b
 23608  0147CE  275E               	addwf	??___flmul& (0+255),f,b
 23609  0147D0  0E00               	movlw	0
 23610  0147D2  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 23611  0147D4  0E82               	movlw	130
 23612  0147D6  255E               	addwf	??___flmul& (0+255),w,b
 23613  0147D8  6F6D               	movwf	___flmul@temp& (0+255),b
 23614  0147DA  0EFF               	movlw	255
 23615  0147DC  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 23616  0147DE  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 23617  0147E0  D00F               	goto	l2261
 23618  0147E2                     
 23619                           ; BSR set to: 1
 23620                           
 23621                           ; BSR set to: 1
 23622  0147E2  90D8               	bcf	status,0,c
 23623  0147E4  3769               	rlcf	___flmul@prod& (0+255),f,b
 23624  0147E6  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 23625  0147E8  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 23626  0147EA  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 23627                           
 23628                           ; BSR set to: 1
 23629  0147EC  BF68               	btfsc	(___flmul@grs+3)& (0+255),7,b
 23630                           
 23631                           ; BSR set to: 1
 23632  0147EE  8169               	bsf	___flmul@prod& (0+255),0,b
 23633                           
 23634                           ; BSR set to: 1
 23635  0147F0  90D8               	bcf	status,0,c
 23636  0147F2  3765               	rlcf	___flmul@grs& (0+255),f,b
 23637  0147F4  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
 23638  0147F6  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
 23639  0147F8  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
 23640  0147FA  076D               	decf	___flmul@temp& (0+255),f,b
 23641  0147FC  A0D8               	btfss	status,0,c
 23642  0147FE  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 23643  014800                     l2261:
 23644                           
 23645                           ; BSR set to: 1
 23646                           
 23647                           ; BSR set to: 1
 23648  014800  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 23649  014802  D7EF               	goto	l2262
 23650                           
 23651                           ; BSR set to: 1
 23652                           
 23653                           ; BSR set to: 1
 23654  014804  0E00               	movlw	0
 23655  014806  6F63               	movwf	___flmul@aexp& (0+255),b
 23656                           
 23657                           ; BSR set to: 1
 23658  014808  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
 23659  01480A  D016               	goto	l2268
 23660                           
 23661                           ; BSR set to: 1
 23662  01480C  0EFF               	movlw	255
 23663  01480E  1565               	andwf	___flmul@grs& (0+255),w,b
 23664  014810  6F5E               	movwf	??___flmul& (0+255),b
 23665  014812  0EFF               	movlw	255
 23666  014814  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
 23667  014816  6F5F               	movwf	(??___flmul+1)& (0+255),b
 23668  014818  0EFF               	movlw	255
 23669  01481A  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
 23670  01481C  6F60               	movwf	(??___flmul+2)& (0+255),b
 23671  01481E  0E7F               	movlw	127
 23672  014820  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
 23673  014822  6F61               	movwf	(??___flmul+3)& (0+255),b
 23674  014824  515E               	movf	??___flmul& (0+255),w,b
 23675  014826  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 23676  014828  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 23677  01482A  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 23678  01482C  A4D8               	btfss	status,2,c
 23679  01482E  D002               	goto	u24050
 23680                           
 23681                           ; BSR set to: 1
 23682                           
 23683                           ; BSR set to: 1
 23684  014830  A169               	btfss	___flmul@prod& (0+255),0,b
 23685  014832  D002               	goto	l2268
 23686  014834                     u24050:
 23687                           
 23688                           ; BSR set to: 1
 23689  014834  0E01               	movlw	1
 23690  014836  6F63               	movwf	___flmul@aexp& (0+255),b
 23691  014838                     l2268:
 23692                           
 23693                           ; BSR set to: 1
 23694                           
 23695                           ; BSR set to: 1
 23696                           
 23697                           ; BSR set to: 1
 23698  014838  5163               	movf	___flmul@aexp& (0+255),w,b
 23699  01483A  B4D8               	btfsc	status,2,c
 23700  01483C  D01F               	goto	l2270
 23701                           
 23702                           ; BSR set to: 1
 23703  01483E  0E01               	movlw	1
 23704  014840  2769               	addwf	___flmul@prod& (0+255),f,b
 23705  014842  0E00               	movlw	0
 23706  014844  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23707  014846  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23708  014848  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23709                           
 23710                           ; BSR set to: 1
 23711  01484A  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 23712  01484C  D017               	goto	l2270
 23713                           
 23714                           ; BSR set to: 1
 23715  01484E  C169  F15E         	movff	___flmul@prod,??___flmul
 23716  014852  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 23717  014856  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 23718  01485A  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 23719  01485E  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 23720  014860  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 23721  014862  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 23722  014864  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 23723  014866  335E               	rrcf	??___flmul& (0+255),f,b
 23724  014868  C15E  F169         	movff	??___flmul,___flmul@prod
 23725  01486C  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 23726  014870  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 23727  014874  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 23728                           
 23729                           ; BSR set to: 1
 23730  014878  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 23731  01487A  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 23732  01487C                     l2270:
 23733                           
 23734                           ; BSR set to: 1
 23735                           
 23736                           ; BSR set to: 1
 23737                           
 23738                           ; BSR set to: 1
 23739  01487C  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 23740  01487E  D00D               	goto	l2271
 23741  014880  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23742  014882  E103               	bnz	u24080
 23743  014884  296D               	incf	___flmul@temp& (0+255),w,b
 23744  014886  A0D8               	btfss	status,0,c
 23745  014888  D008               	goto	l2271
 23746  01488A                     u24080:
 23747                           
 23748                           ; BSR set to: 1
 23749  01488A  0E00               	movlw	0
 23750  01488C  6F69               	movwf	___flmul@prod& (0+255),b
 23751  01488E  0E00               	movlw	0
 23752  014890  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 23753  014892  0E80               	movlw	128
 23754  014894  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 23755  014896  0E7F               	movlw	127
 23756  014898  D020               	goto	L4
 23757  01489A                     l2271:
 23758                           
 23759                           ; BSR set to: 1
 23760                           
 23761                           ; BSR set to: 1
 23762  01489A  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 23763  01489C  D005               	goto	u24090
 23764  01489E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23765  0148A0  E10E               	bnz	l2273
 23766  0148A2  056D               	decf	___flmul@temp& (0+255),w,b
 23767  0148A4  B0D8               	btfsc	status,0,c
 23768  0148A6  D00B               	goto	l2273
 23769  0148A8                     u24090:
 23770                           
 23771                           ; BSR set to: 1
 23772  0148A8  0E00               	movlw	0
 23773  0148AA  6F69               	movwf	___flmul@prod& (0+255),b
 23774  0148AC  0E00               	movlw	0
 23775  0148AE  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 23776  0148B0  0E00               	movlw	0
 23777  0148B2  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 23778  0148B4  0E00               	movlw	0
 23779  0148B6  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 23780  0148B8  0E00               	movlw	0
 23781  0148BA  6F62               	movwf	___flmul@sign& (0+255),b
 23782  0148BC  D00F               	goto	l2274
 23783  0148BE                     l2273:
 23784                           
 23785                           ; BSR set to: 1
 23786  0148BE  C16D  F164         	movff	___flmul@temp,___flmul@bexp
 23787                           
 23788                           ; BSR set to: 1
 23789  0148C2  0EFF               	movlw	255
 23790  0148C4  1769               	andwf	___flmul@prod& (0+255),f,b
 23791  0148C6  0EFF               	movlw	255
 23792  0148C8  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 23793  0148CA  0E7F               	movlw	127
 23794  0148CC  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 23795  0148CE  0E00               	movlw	0
 23796  0148D0  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 23797                           
 23798                           ; BSR set to: 1
 23799  0148D2  B164               	btfsc	___flmul@bexp& (0+255),0,b
 23800                           
 23801                           ; BSR set to: 1
 23802  0148D4  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 23803                           
 23804                           ; BSR set to: 1
 23805                           
 23806                           ; BSR set to: 1
 23807  0148D6  90D8               	bcf	status,0,c
 23808  0148D8  3164               	rrcf	___flmul@bexp& (0+255),w,b
 23809  0148DA                     L4:
 23810  0148DA  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 23811  0148DC                     l2274:
 23812                           
 23813                           ; BSR set to: 1
 23814                           
 23815                           ; BSR set to: 1
 23816                           
 23817                           ; BSR set to: 1
 23818  0148DC  5162               	movf	___flmul@sign& (0+255),w,b
 23819  0148DE  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 23820                           
 23821                           ; BSR set to: 1
 23822  0148E0  C169  F156         	movff	___flmul@prod,?___flmul
 23823  0148E4  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 23824  0148E8  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 23825  0148EC  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 23826  0148F0  0012               	return	
 23827  0148F2                     __end_of___flmul:
 23828                           	opt stack 0
 23829                           tblptru	equ	0xFF8
 23830                           tblptrh	equ	0xFF7
 23831                           tblptrl	equ	0xFF6
 23832                           tablat	equ	0xFF5
 23833                           prodh	equ	0xFF4
 23834                           prodl	equ	0xFF3
 23835                           intcon	equ	0xFF2
 23836                           indf0	equ	0xFEF
 23837                           postinc0	equ	0xFEE
 23838                           fsr0h	equ	0xFEA
 23839                           fsr0l	equ	0xFE9
 23840                           wreg	equ	0xFE8
 23841                           indf1	equ	0xFE7
 23842                           postdec1	equ	0xFE5
 23843                           plusw1	equ	0xFE3
 23844                           fsr1h	equ	0xFE2
 23845                           fsr1l	equ	0xFE1
 23846                           indf2	equ	0xFDF
 23847                           postinc2	equ	0xFDE
 23848                           postdec2	equ	0xFDD
 23849                           plusw2	equ	0xFDB
 23850                           fsr2h	equ	0xFDA
 23851                           fsr2l	equ	0xFD9
 23852                           status	equ	0xFD8
 23853                           
 23854 ;; *************** function ___awmod *****************
 23855 ;; Defined at:
 23856 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 23857 ;; Parameters:    Size  Location     Type
 23858 ;;  dividend        2   23[BANK1 ] int 
 23859 ;;  divisor         2   25[BANK1 ] int 
 23860 ;; Auto vars:     Size  Location     Type
 23861 ;;  sign            1   28[BANK1 ] unsigned char 
 23862 ;;  counter         1   27[BANK1 ] unsigned char 
 23863 ;; Return value:  Size  Location     Type
 23864 ;;                  2   23[BANK1 ] int 
 23865 ;; Registers used:
 23866 ;;		wreg, status,2, status,0
 23867 ;; Tracked objects:
 23868 ;;		On entry : 0/0
 23869 ;;		On exit  : 0/0
 23870 ;;		Unchanged: 0/0
 23871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23872 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23873 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23875 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23876 ;;Total ram usage:        6 bytes
 23877 ;; Hardware stack levels used:    1
 23878 ;; Hardware stack levels required when called:   13
 23879 ;; This function calls:
 23880 ;;		Nothing
 23881 ;; This function is called by:
 23882 ;;		_fround
 23883 ;;		_scale
 23884 ;; This function uses a non-reentrant model
 23885 ;;
 23886                           
 23887                           	psect	text35
 23888  01851A                     __ptext35:
 23889                           	opt stack 0
 23890  01851A                     ___awmod:
 23891                           	opt stack 13
 23892                           
 23893                           ; BSR set to: 1
 23894                           ;incstack = 0
 23895  01851A  0E00               	movlw	0
 23896  01851C  0101               	movlb	1	; () banked
 23897  01851E  6F1C               	movwf	___awmod@sign& (0+255),b
 23898                           
 23899                           ; BSR set to: 1
 23900  018520  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23901  018522  D006               	goto	l1841
 23902                           
 23903                           ; BSR set to: 1
 23904  018524  6D17               	negf	___awmod@dividend& (0+255),b
 23905  018526  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 23906  018528  B0D8               	btfsc	status,0,c
 23907  01852A  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 23908                           
 23909                           ; BSR set to: 1
 23910  01852C  0E01               	movlw	1
 23911  01852E  6F1C               	movwf	___awmod@sign& (0+255),b
 23912  018530                     l1841:
 23913                           
 23914                           ; BSR set to: 1
 23915                           
 23916                           ; BSR set to: 1
 23917  018530  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23918  018532  D004               	goto	l1842
 23919                           
 23920                           ; BSR set to: 1
 23921  018534  6D19               	negf	___awmod@divisor& (0+255),b
 23922  018536  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 23923  018538  B0D8               	btfsc	status,0,c
 23924  01853A  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 23925  01853C                     l1842:
 23926                           
 23927                           ; BSR set to: 1
 23928                           
 23929                           ; BSR set to: 1
 23930  01853C  5119               	movf	___awmod@divisor& (0+255),w,b
 23931  01853E  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23932  018540  B4D8               	btfsc	status,2,c
 23933  018542  D018               	goto	l1849
 23934                           
 23935                           ; BSR set to: 1
 23936  018544  0E01               	movlw	1
 23937  018546  6F1B               	movwf	___awmod@counter& (0+255),b
 23938  018548  D004               	goto	l1844
 23939  01854A                     
 23940                           ; BSR set to: 1
 23941                           
 23942                           ; BSR set to: 1
 23943  01854A  90D8               	bcf	status,0,c
 23944  01854C  3719               	rlcf	___awmod@divisor& (0+255),f,b
 23945  01854E  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23946  018550  2B1B               	incf	___awmod@counter& (0+255),f,b
 23947  018552                     l1844:
 23948                           
 23949                           ; BSR set to: 1
 23950                           
 23951                           ; BSR set to: 1
 23952  018552  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23953  018554  D7FA               	goto	l1845
 23954  018556                     u24200:
 23955                           
 23956                           ; BSR set to: 1
 23957                           
 23958                           ; BSR set to: 1
 23959                           
 23960                           ; BSR set to: 1
 23961  018556  5119               	movf	___awmod@divisor& (0+255),w,b
 23962  018558  5D17               	subwf	___awmod@dividend& (0+255),w,b
 23963  01855A  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 23964  01855C  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23965  01855E  A0D8               	btfss	status,0,c
 23966  018560  D004               	goto	l1848
 23967                           
 23968                           ; BSR set to: 1
 23969  018562  5119               	movf	___awmod@divisor& (0+255),w,b
 23970  018564  5F17               	subwf	___awmod@dividend& (0+255),f,b
 23971  018566  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 23972  018568  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23973  01856A                     l1848:
 23974                           
 23975                           ; BSR set to: 1
 23976                           
 23977                           ; BSR set to: 1
 23978  01856A  90D8               	bcf	status,0,c
 23979  01856C  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23980  01856E  3319               	rrcf	___awmod@divisor& (0+255),f,b
 23981                           
 23982                           ; BSR set to: 1
 23983  018570  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 23984  018572  D7F1               	goto	u24200
 23985  018574                     l1849:
 23986                           
 23987                           ; BSR set to: 1
 23988                           
 23989                           ; BSR set to: 1
 23990                           
 23991                           ; BSR set to: 1
 23992  018574  511C               	movf	___awmod@sign& (0+255),w,b
 23993  018576  B4D8               	btfsc	status,2,c
 23994  018578  D004               	goto	l1850
 23995                           
 23996                           ; BSR set to: 1
 23997  01857A  6D17               	negf	___awmod@dividend& (0+255),b
 23998  01857C  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 23999  01857E  B0D8               	btfsc	status,0,c
 24000  018580  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 24001  018582                     l1850:
 24002                           
 24003                           ; BSR set to: 1
 24004                           
 24005                           ; BSR set to: 1
 24006  018582  C117  F117         	movff	___awmod@dividend,?___awmod
 24007  018586  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 24008  01858A  0012               	return	
 24009  01858C                     __end_of___awmod:
 24010                           	opt stack 0
 24011                           tblptru	equ	0xFF8
 24012                           tblptrh	equ	0xFF7
 24013                           tblptrl	equ	0xFF6
 24014                           tablat	equ	0xFF5
 24015                           prodh	equ	0xFF4
 24016                           prodl	equ	0xFF3
 24017                           intcon	equ	0xFF2
 24018                           indf0	equ	0xFEF
 24019                           postinc0	equ	0xFEE
 24020                           fsr0h	equ	0xFEA
 24021                           fsr0l	equ	0xFE9
 24022                           wreg	equ	0xFE8
 24023                           indf1	equ	0xFE7
 24024                           postdec1	equ	0xFE5
 24025                           plusw1	equ	0xFE3
 24026                           fsr1h	equ	0xFE2
 24027                           fsr1l	equ	0xFE1
 24028                           indf2	equ	0xFDF
 24029                           postinc2	equ	0xFDE
 24030                           postdec2	equ	0xFDD
 24031                           plusw2	equ	0xFDB
 24032                           fsr2h	equ	0xFDA
 24033                           fsr2l	equ	0xFD9
 24034                           status	equ	0xFD8
 24035                           
 24036 ;; *************** function ___awdiv *****************
 24037 ;; Defined at:
 24038 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 24039 ;; Parameters:    Size  Location     Type
 24040 ;;  dividend        2   29[BANK1 ] int 
 24041 ;;  divisor         2   31[BANK1 ] int 
 24042 ;; Auto vars:     Size  Location     Type
 24043 ;;  quotient        2   35[BANK1 ] int 
 24044 ;;  sign            1   34[BANK1 ] unsigned char 
 24045 ;;  counter         1   33[BANK1 ] unsigned char 
 24046 ;; Return value:  Size  Location     Type
 24047 ;;                  2   29[BANK1 ] int 
 24048 ;; Registers used:
 24049 ;;		wreg, status,2, status,0
 24050 ;; Tracked objects:
 24051 ;;		On entry : 0/0
 24052 ;;		On exit  : 0/0
 24053 ;;		Unchanged: 0/0
 24054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24055 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24056 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24058 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24059 ;;Total ram usage:        8 bytes
 24060 ;; Hardware stack levels used:    1
 24061 ;; Hardware stack levels required when called:   13
 24062 ;; This function calls:
 24063 ;;		Nothing
 24064 ;; This function is called by:
 24065 ;;		_fround
 24066 ;;		_scale
 24067 ;;		_printf
 24068 ;; This function uses a non-reentrant model
 24069 ;;
 24070                           
 24071                           	psect	text36
 24072  018214                     __ptext36:
 24073                           	opt stack 0
 24074  018214                     ___awdiv:
 24075                           	opt stack 13
 24076                           
 24077                           ; BSR set to: 1
 24078                           ;incstack = 0
 24079  018214  0E00               	movlw	0
 24080  018216  0101               	movlb	1	; () banked
 24081  018218  6F22               	movwf	___awdiv@sign& (0+255),b
 24082                           
 24083                           ; BSR set to: 1
 24084  01821A  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24085  01821C  D006               	goto	l1828
 24086                           
 24087                           ; BSR set to: 1
 24088  01821E  6D1F               	negf	___awdiv@divisor& (0+255),b
 24089  018220  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 24090  018222  B0D8               	btfsc	status,0,c
 24091  018224  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 24092                           
 24093                           ; BSR set to: 1
 24094  018226  0E01               	movlw	1
 24095  018228  6F22               	movwf	___awdiv@sign& (0+255),b
 24096  01822A                     l1828:
 24097                           
 24098                           ; BSR set to: 1
 24099                           
 24100                           ; BSR set to: 1
 24101  01822A  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 24102  01822C  D006               	goto	l1829
 24103                           
 24104                           ; BSR set to: 1
 24105  01822E  6D1D               	negf	___awdiv@dividend& (0+255),b
 24106  018230  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 24107  018232  B0D8               	btfsc	status,0,c
 24108  018234  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 24109                           
 24110                           ; BSR set to: 1
 24111  018236  0E01               	movlw	1
 24112  018238  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 24113  01823A                     l1829:
 24114                           
 24115                           ; BSR set to: 1
 24116                           
 24117                           ; BSR set to: 1
 24118  01823A  0E00               	movlw	0
 24119  01823C  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 24120  01823E  0E00               	movlw	0
 24121  018240  6F23               	movwf	___awdiv@quotient& (0+255),b
 24122                           
 24123                           ; BSR set to: 1
 24124  018242  511F               	movf	___awdiv@divisor& (0+255),w,b
 24125  018244  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 24126  018246  B4D8               	btfsc	status,2,c
 24127  018248  D01C               	goto	l1836
 24128                           
 24129                           ; BSR set to: 1
 24130  01824A  0E01               	movlw	1
 24131  01824C  6F21               	movwf	___awdiv@counter& (0+255),b
 24132  01824E  D004               	goto	l1831
 24133  018250                     
 24134                           ; BSR set to: 1
 24135                           
 24136                           ; BSR set to: 1
 24137  018250  90D8               	bcf	status,0,c
 24138  018252  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 24139  018254  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 24140  018256  2B21               	incf	___awdiv@counter& (0+255),f,b
 24141  018258                     l1831:
 24142                           
 24143                           ; BSR set to: 1
 24144                           
 24145                           ; BSR set to: 1
 24146  018258  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24147  01825A  D7FA               	goto	l1832
 24148  01825C                     u24140:
 24149                           
 24150                           ; BSR set to: 1
 24151                           
 24152                           ; BSR set to: 1
 24153                           
 24154                           ; BSR set to: 1
 24155  01825C  90D8               	bcf	status,0,c
 24156  01825E  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 24157  018260  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 24158                           
 24159                           ; BSR set to: 1
 24160  018262  511F               	movf	___awdiv@divisor& (0+255),w,b
 24161  018264  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 24162  018266  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24163  018268  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 24164  01826A  A0D8               	btfss	status,0,c
 24165  01826C  D005               	goto	l1835
 24166                           
 24167                           ; BSR set to: 1
 24168  01826E  511F               	movf	___awdiv@divisor& (0+255),w,b
 24169  018270  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 24170  018272  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24171  018274  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 24172                           
 24173                           ; BSR set to: 1
 24174  018276  8123               	bsf	___awdiv@quotient& (0+255),0,b
 24175  018278                     l1835:
 24176                           
 24177                           ; BSR set to: 1
 24178                           
 24179                           ; BSR set to: 1
 24180  018278  90D8               	bcf	status,0,c
 24181  01827A  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 24182  01827C  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 24183                           
 24184                           ; BSR set to: 1
 24185  01827E  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 24186  018280  D7ED               	goto	u24140
 24187  018282                     l1836:
 24188                           
 24189                           ; BSR set to: 1
 24190                           
 24191                           ; BSR set to: 1
 24192                           
 24193                           ; BSR set to: 1
 24194  018282  5122               	movf	___awdiv@sign& (0+255),w,b
 24195  018284  B4D8               	btfsc	status,2,c
 24196  018286  D004               	goto	l1837
 24197                           
 24198                           ; BSR set to: 1
 24199  018288  6D23               	negf	___awdiv@quotient& (0+255),b
 24200  01828A  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 24201  01828C  B0D8               	btfsc	status,0,c
 24202  01828E  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 24203  018290                     l1837:
 24204                           
 24205                           ; BSR set to: 1
 24206                           
 24207                           ; BSR set to: 1
 24208  018290  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 24209  018294  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 24210  018298  0012               	return	
 24211  01829A                     __end_of___awdiv:
 24212                           	opt stack 0
 24213                           tblptru	equ	0xFF8
 24214                           tblptrh	equ	0xFF7
 24215                           tblptrl	equ	0xFF6
 24216                           tablat	equ	0xFF5
 24217                           prodh	equ	0xFF4
 24218                           prodl	equ	0xFF3
 24219                           intcon	equ	0xFF2
 24220                           indf0	equ	0xFEF
 24221                           postinc0	equ	0xFEE
 24222                           fsr0h	equ	0xFEA
 24223                           fsr0l	equ	0xFE9
 24224                           wreg	equ	0xFE8
 24225                           indf1	equ	0xFE7
 24226                           postdec1	equ	0xFE5
 24227                           plusw1	equ	0xFE3
 24228                           fsr1h	equ	0xFE2
 24229                           fsr1l	equ	0xFE1
 24230                           indf2	equ	0xFDF
 24231                           postinc2	equ	0xFDE
 24232                           postdec2	equ	0xFDD
 24233                           plusw2	equ	0xFDB
 24234                           fsr2h	equ	0xFDA
 24235                           fsr2l	equ	0xFD9
 24236                           status	equ	0xFD8
 24237                           
 24238 ;; *************** function __tdiv_to_l_ *****************
 24239 ;; Defined at:
 24240 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 24241 ;; Parameters:    Size  Location     Type
 24242 ;;  f1              3   23[BANK1 ] float 
 24243 ;;  f2              3   26[BANK1 ] float 
 24244 ;; Auto vars:     Size  Location     Type
 24245 ;;  quot            4   32[BANK1 ] unsigned long 
 24246 ;;  exp1            1   37[BANK1 ] unsigned char 
 24247 ;;  cntr            1   36[BANK1 ] unsigned char 
 24248 ;; Return value:  Size  Location     Type
 24249 ;;                  4   23[BANK1 ] unsigned long 
 24250 ;; Registers used:
 24251 ;;		wreg, status,2, status,0
 24252 ;; Tracked objects:
 24253 ;;		On entry : 0/0
 24254 ;;		On exit  : 0/0
 24255 ;;		Unchanged: 0/0
 24256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24257 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24258 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24259 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24260 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24261 ;;Total ram usage:       15 bytes
 24262 ;; Hardware stack levels used:    1
 24263 ;; Hardware stack levels required when called:   13
 24264 ;; This function calls:
 24265 ;;		Nothing
 24266 ;; This function is called by:
 24267 ;;		_printf
 24268 ;; This function uses a non-reentrant model
 24269 ;;
 24270                           
 24271                           	psect	text37
 24272  016FEC                     __ptext37:
 24273                           	opt stack 0
 24274  016FEC                     __tdiv_to_l_:
 24275                           	opt stack 14
 24276                           
 24277                           ; BSR set to: 1
 24278                           ;incstack = 0
 24279  016FEC  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 24280  016FF0  0101               	movlb	1	; () banked
 24281  016FF2  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 24282  016FF4  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 24283  016FF6  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 24284  016FF8  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 24285  016FFA  E301               	bnc	u24321
 24286  016FFC  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 24287  016FFE                     u24321:
 24288  016FFE  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 24289  017000  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 24290  017002  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24291  017004  A4D8               	btfss	status,2,c
 24292  017006  D009               	goto	l1976
 24293                           
 24294                           ; BSR set to: 1
 24295  017008  0E00               	movlw	0
 24296  01700A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24297  01700C  0E00               	movlw	0
 24298  01700E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24299  017010  0E00               	movlw	0
 24300  017012  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24301  017014  0E00               	movlw	0
 24302  017016  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24303                           
 24304                           ; BSR set to: 1
 24305  017018  0012               	return	
 24306  01701A                     l1976:
 24307                           
 24308                           ; BSR set to: 1
 24309                           
 24310                           ; BSR set to: 1
 24311  01701A  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 24312  01701E  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 24313  017020  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 24314  017022  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24315  017024  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 24316  017026  E301               	bnc	u24341
 24317  017028  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 24318  01702A                     u24341:
 24319  01702A  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 24320  01702C  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 24321  01702E  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 24322  017030  A4D8               	btfss	status,2,c
 24323  017032  D009               	goto	l1978
 24324                           
 24325                           ; BSR set to: 1
 24326  017034  0E00               	movlw	0
 24327  017036  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24328  017038  0E00               	movlw	0
 24329  01703A  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24330  01703C  0E00               	movlw	0
 24331  01703E  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24332  017040  0E00               	movlw	0
 24333  017042  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24334                           
 24335                           ; BSR set to: 1
 24336  017044  0012               	return	
 24337  017046                     l1978:
 24338                           
 24339                           ; BSR set to: 1
 24340                           
 24341                           ; BSR set to: 1
 24342  017046  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 24343                           
 24344                           ; BSR set to: 1
 24345  017048  0EFF               	movlw	255
 24346  01704A  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 24347  01704C  0EFF               	movlw	255
 24348  01704E  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24349  017050  0E00               	movlw	0
 24350  017052  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24351  017054  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 24352                           
 24353                           ; BSR set to: 1
 24354  017056  0EFF               	movlw	255
 24355  017058  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 24356  01705A  0EFF               	movlw	255
 24357  01705C  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 24358  01705E  0E00               	movlw	0
 24359  017060  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 24360                           
 24361                           ; BSR set to: 1
 24362  017062  0E00               	movlw	0
 24363  017064  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 24364  017066  0E00               	movlw	0
 24365  017068  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 24366  01706A  0E00               	movlw	0
 24367  01706C  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 24368  01706E  0E00               	movlw	0
 24369  017070  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 24370                           
 24371                           ; BSR set to: 1
 24372  017072  0E7F               	movlw	127
 24373  017074  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 24374                           
 24375                           ; BSR set to: 1
 24376  017076  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 24377  017078  0F98               	addlw	152
 24378  01707A  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 24379                           
 24380                           ; BSR set to: 1
 24381  01707C  0E18               	movlw	24
 24382  01707E  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 24383  017080                     l1979:
 24384                           
 24385                           ; BSR set to: 1
 24386  017080  90D8               	bcf	status,0,c
 24387  017082  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 24388  017084  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24389  017086  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24390  017088  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24391                           
 24392                           ; BSR set to: 1
 24393  01708A  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 24394  01708C  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 24395  01708E  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24396  017090  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 24397  017092  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 24398  017094  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 24399  017096  A0D8               	btfss	status,0,c
 24400  017098  D007               	goto	l1980
 24401                           
 24402                           ; BSR set to: 1
 24403  01709A  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 24404  01709C  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 24405  01709E  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24406  0170A0  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24407  0170A2  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 24408  0170A4  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24409                           
 24410                           ; BSR set to: 1
 24411  0170A6  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 24412  0170A8                     l1980:
 24413                           
 24414                           ; BSR set to: 1
 24415  0170A8  90D8               	bcf	status,0,c
 24416  0170AA  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 24417  0170AC  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24418  0170AE  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24419                           
 24420                           ; BSR set to: 1
 24421  0170B0  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 24422  0170B2  D7E6               	goto	l1979
 24423                           
 24424                           ; BSR set to: 1
 24425                           
 24426                           ; BSR set to: 1
 24427  0170B4  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 24428  0170B6  D016               	goto	l1982
 24429                           
 24430                           ; BSR set to: 1
 24431  0170B8  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24432  0170BA  0A80               	xorlw	128
 24433  0170BC  0F97               	addlw	151
 24434  0170BE  B0D8               	btfsc	status,0,c
 24435  0170C0  D009               	goto	l1983
 24436                           
 24437                           ; BSR set to: 1
 24438  0170C2  0E00               	movlw	0
 24439  0170C4  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24440  0170C6  0E00               	movlw	0
 24441  0170C8  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24442  0170CA  0E00               	movlw	0
 24443  0170CC  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24444  0170CE  0E00               	movlw	0
 24445  0170D0  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24446                           
 24447                           ; BSR set to: 1
 24448  0170D2  0012               	return	
 24449  0170D4                     l1983:
 24450                           
 24451                           ; BSR set to: 1
 24452                           
 24453                           ; BSR set to: 1
 24454                           
 24455                           ; BSR set to: 1
 24456  0170D4  90D8               	bcf	status,0,c
 24457  0170D6  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24458  0170D8  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24459  0170DA  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24460  0170DC  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 24461                           
 24462                           ; BSR set to: 1
 24463  0170DE  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 24464  0170E0  D7F9               	goto	l1983
 24465                           
 24466                           ; BSR set to: 1
 24467  0170E2  D015               	goto	u24400
 24468  0170E4                     l1982:
 24469                           
 24470                           ; BSR set to: 1
 24471                           
 24472                           ; BSR set to: 1
 24473  0170E4  0E17               	movlw	23
 24474  0170E6  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 24475  0170E8  D00F               	goto	l1988
 24476                           
 24477                           ; BSR set to: 1
 24478  0170EA  0E00               	movlw	0
 24479  0170EC  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24480  0170EE  0E00               	movlw	0
 24481  0170F0  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24482  0170F2  0E00               	movlw	0
 24483  0170F4  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24484  0170F6  0E00               	movlw	0
 24485  0170F8  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24486                           
 24487                           ; BSR set to: 1
 24488  0170FA  0012               	return	
 24489  0170FC                     
 24490                           ; BSR set to: 1
 24491                           
 24492                           ; BSR set to: 1
 24493  0170FC  90D8               	bcf	status,0,c
 24494  0170FE  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 24495  017100  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24496  017102  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24497  017104  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24498  017106  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 24499  017108                     l1988:
 24500                           
 24501                           ; BSR set to: 1
 24502                           
 24503                           ; BSR set to: 1
 24504  017108  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24505  01710A  A4D8               	btfss	status,2,c
 24506  01710C  D7F7               	goto	l1989
 24507  01710E                     u24400:
 24508                           
 24509                           ; BSR set to: 1
 24510                           
 24511                           ; BSR set to: 1
 24512  01710E  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 24513  017112  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 24514  017116  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 24515  01711A  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 24516                           
 24517                           ; BSR set to: 1
 24518  01711E  0012               	return		;funcret
 24519  017120                     __end_of__tdiv_to_l_:
 24520                           	opt stack 0
 24521                           tblptru	equ	0xFF8
 24522                           tblptrh	equ	0xFF7
 24523                           tblptrl	equ	0xFF6
 24524                           tablat	equ	0xFF5
 24525                           prodh	equ	0xFF4
 24526                           prodl	equ	0xFF3
 24527                           intcon	equ	0xFF2
 24528                           indf0	equ	0xFEF
 24529                           postinc0	equ	0xFEE
 24530                           fsr0h	equ	0xFEA
 24531                           fsr0l	equ	0xFE9
 24532                           wreg	equ	0xFE8
 24533                           indf1	equ	0xFE7
 24534                           postdec1	equ	0xFE5
 24535                           plusw1	equ	0xFE3
 24536                           fsr1h	equ	0xFE2
 24537                           fsr1l	equ	0xFE1
 24538                           indf2	equ	0xFDF
 24539                           postinc2	equ	0xFDE
 24540                           postdec2	equ	0xFDD
 24541                           plusw2	equ	0xFDB
 24542                           fsr2h	equ	0xFDA
 24543                           fsr2l	equ	0xFD9
 24544                           status	equ	0xFD8
 24545                           
 24546 ;; *************** function __div_to_l_ *****************
 24547 ;; Defined at:
 24548 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 24549 ;; Parameters:    Size  Location     Type
 24550 ;;  f1              4   23[BANK1 ] unsigned long 
 24551 ;;  f2              4   27[BANK1 ] unsigned long 
 24552 ;; Auto vars:     Size  Location     Type
 24553 ;;  quot            4   31[BANK1 ] unsigned long 
 24554 ;;  exp1            1   36[BANK1 ] unsigned char 
 24555 ;;  cntr            1   35[BANK1 ] unsigned char 
 24556 ;; Return value:  Size  Location     Type
 24557 ;;                  4   23[BANK1 ] unsigned long 
 24558 ;; Registers used:
 24559 ;;		wreg, status,2, status,0
 24560 ;; Tracked objects:
 24561 ;;		On entry : 0/0
 24562 ;;		On exit  : 0/0
 24563 ;;		Unchanged: 0/0
 24564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24565 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24566 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24568 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24569 ;;Total ram usage:       14 bytes
 24570 ;; Hardware stack levels used:    1
 24571 ;; Hardware stack levels required when called:   13
 24572 ;; This function calls:
 24573 ;;		Nothing
 24574 ;; This function is called by:
 24575 ;;		_printf
 24576 ;; This function uses a non-reentrant model
 24577 ;;
 24578                           
 24579                           	psect	text38
 24580  017252                     __ptext38:
 24581                           	opt stack 0
 24582  017252                     __div_to_l_:
 24583                           	opt stack 14
 24584                           
 24585                           ; BSR set to: 1
 24586                           ;incstack = 0
 24587  017252  0101               	movlb	1	; () banked
 24588  017254  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 24589  017256  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 24590  017258  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 24591  01725A  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 24592  01725C  A4D8               	btfss	status,2,c
 24593  01725E  D009               	goto	l1872
 24594                           
 24595                           ; BSR set to: 1
 24596  017260  0E00               	movlw	0
 24597  017262  6F17               	movwf	?__div_to_l_& (0+255),b
 24598  017264  0E00               	movlw	0
 24599  017266  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 24600  017268  0E00               	movlw	0
 24601  01726A  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 24602  01726C  0E00               	movlw	0
 24603  01726E  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 24604                           
 24605                           ; BSR set to: 1
 24606  017270  0012               	return	
 24607  017272                     l1872:
 24608                           
 24609                           ; BSR set to: 1
 24610                           
 24611                           ; BSR set to: 1
 24612  017272  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 24613  017274  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 24614  017276  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 24615  017278  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 24616  01727A  A4D8               	btfss	status,2,c
 24617  01727C  D009               	goto	l1874
 24618                           
 24619                           ; BSR set to: 1
 24620  01727E  0E00               	movlw	0
 24621  017280  6F17               	movwf	?__div_to_l_& (0+255),b
 24622  017282  0E00               	movlw	0
 24623  017284  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 24624  017286  0E00               	movlw	0
 24625  017288  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 24626  01728A  0E00               	movlw	0
 24627  01728C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 24628                           
 24629                           ; BSR set to: 1
 24630  01728E  0012               	return	
 24631  017290                     l1874:
 24632                           
 24633                           ; BSR set to: 1
 24634                           
 24635                           ; BSR set to: 1
 24636  017290  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 24637                           
 24638                           ; BSR set to: 1
 24639  017292  0EFF               	movlw	255
 24640  017294  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 24641  017296  0EFF               	movlw	255
 24642  017298  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 24643  01729A  0EFF               	movlw	255
 24644  01729C  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 24645  01729E  0E00               	movlw	0
 24646  0172A0  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 24647                           
 24648                           ; BSR set to: 1
 24649  0172A2  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 24650  0172A4  0EFF               	movlw	255
 24651  0172A6  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 24652  0172A8  0EFF               	movlw	255
 24653  0172AA  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 24654  0172AC  0EFF               	movlw	255
 24655  0172AE  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 24656  0172B0  0E00               	movlw	0
 24657  0172B2  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 24658                           
 24659                           ; BSR set to: 1
 24660  0172B4  0E00               	movlw	0
 24661  0172B6  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 24662  0172B8  0E00               	movlw	0
 24663  0172BA  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 24664  0172BC  0E00               	movlw	0
 24665  0172BE  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 24666  0172C0  0E00               	movlw	0
 24667  0172C2  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 24668                           
 24669                           ; BSR set to: 1
 24670  0172C4  0E7F               	movlw	127
 24671  0172C6  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 24672                           
 24673                           ; BSR set to: 1
 24674  0172C8  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 24675  0172CA  0FA0               	addlw	160
 24676  0172CC  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 24677                           
 24678                           ; BSR set to: 1
 24679  0172CE  0E20               	movlw	32
 24680  0172D0  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 24681  0172D2                     
 24682                           ; BSR set to: 1
 24683                           
 24684                           ; BSR set to: 1
 24685  0172D2  90D8               	bcf	status,0,c
 24686  0172D4  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 24687  0172D6  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 24688  0172D8  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 24689  0172DA  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 24690                           
 24691                           ; BSR set to: 1
 24692  0172DC  511B               	movf	__div_to_l_@f2& (0+255),w,b
 24693  0172DE  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 24694  0172E0  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 24695  0172E2  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 24696  0172E4  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 24697  0172E6  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 24698  0172E8  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 24699  0172EA  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 24700  0172EC  A0D8               	btfss	status,0,c
 24701  0172EE  D009               	goto	l1876
 24702                           
 24703                           ; BSR set to: 1
 24704  0172F0  511B               	movf	__div_to_l_@f2& (0+255),w,b
 24705  0172F2  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 24706  0172F4  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 24707  0172F6  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 24708  0172F8  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 24709  0172FA  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 24710  0172FC  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 24711  0172FE  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 24712                           
 24713                           ; BSR set to: 1
 24714  017300  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 24715  017302                     l1876:
 24716                           
 24717                           ; BSR set to: 1
 24718                           
 24719                           ; BSR set to: 1
 24720  017302  90D8               	bcf	status,0,c
 24721  017304  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 24722  017306  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 24723  017308  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 24724  01730A  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 24725                           
 24726                           ; BSR set to: 1
 24727  01730C  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 24728  01730E  D7E1               	goto	l1875
 24729                           
 24730                           ; BSR set to: 1
 24731                           
 24732                           ; BSR set to: 1
 24733  017310  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 24734  017312  D016               	goto	l1878
 24735                           
 24736                           ; BSR set to: 1
 24737  017314  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 24738  017316  0A80               	xorlw	128
 24739  017318  0F9F               	addlw	159
 24740  01731A  B0D8               	btfsc	status,0,c
 24741  01731C  D009               	goto	l1879
 24742                           
 24743                           ; BSR set to: 1
 24744  01731E  0E00               	movlw	0
 24745  017320  6F17               	movwf	?__div_to_l_& (0+255),b
 24746  017322  0E00               	movlw	0
 24747  017324  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 24748  017326  0E00               	movlw	0
 24749  017328  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 24750  01732A  0E00               	movlw	0
 24751  01732C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 24752                           
 24753                           ; BSR set to: 1
 24754  01732E  0012               	return	
 24755  017330                     l1879:
 24756                           
 24757                           ; BSR set to: 1
 24758                           
 24759                           ; BSR set to: 1
 24760                           
 24761                           ; BSR set to: 1
 24762  017330  90D8               	bcf	status,0,c
 24763  017332  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 24764  017334  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 24765  017336  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 24766  017338  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 24767                           
 24768                           ; BSR set to: 1
 24769  01733A  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 24770  01733C  D7F9               	goto	l1879
 24771                           
 24772                           ; BSR set to: 1
 24773  01733E  D015               	goto	u24470
 24774  017340                     l1878:
 24775                           
 24776                           ; BSR set to: 1
 24777                           
 24778                           ; BSR set to: 1
 24779  017340  0E1F               	movlw	31
 24780  017342  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 24781  017344  D00F               	goto	l1884
 24782                           
 24783                           ; BSR set to: 1
 24784  017346  0E00               	movlw	0
 24785  017348  6F17               	movwf	?__div_to_l_& (0+255),b
 24786  01734A  0E00               	movlw	0
 24787  01734C  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 24788  01734E  0E00               	movlw	0
 24789  017350  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 24790  017352  0E00               	movlw	0
 24791  017354  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 24792                           
 24793                           ; BSR set to: 1
 24794  017356  0012               	return	
 24795  017358                     
 24796                           ; BSR set to: 1
 24797                           
 24798                           ; BSR set to: 1
 24799  017358  90D8               	bcf	status,0,c
 24800  01735A  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 24801  01735C  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 24802  01735E  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 24803  017360  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 24804  017362  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 24805  017364                     l1884:
 24806                           
 24807                           ; BSR set to: 1
 24808                           
 24809                           ; BSR set to: 1
 24810  017364  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 24811  017366  A4D8               	btfss	status,2,c
 24812  017368  D7F7               	goto	l1885
 24813  01736A                     u24470:
 24814                           
 24815                           ; BSR set to: 1
 24816                           
 24817                           ; BSR set to: 1
 24818  01736A  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 24819  01736E  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 24820  017372  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 24821  017376  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 24822                           
 24823                           ; BSR set to: 1
 24824  01737A  0012               	return		;funcret
 24825  01737C                     __end_of__div_to_l_:
 24826                           	opt stack 0
 24827                           tblptru	equ	0xFF8
 24828                           tblptrh	equ	0xFF7
 24829                           tblptrl	equ	0xFF6
 24830                           tablat	equ	0xFF5
 24831                           prodh	equ	0xFF4
 24832                           prodl	equ	0xFF3
 24833                           intcon	equ	0xFF2
 24834                           indf0	equ	0xFEF
 24835                           postinc0	equ	0xFEE
 24836                           fsr0h	equ	0xFEA
 24837                           fsr0l	equ	0xFE9
 24838                           wreg	equ	0xFE8
 24839                           indf1	equ	0xFE7
 24840                           postdec1	equ	0xFE5
 24841                           plusw1	equ	0xFE3
 24842                           fsr1h	equ	0xFE2
 24843                           fsr1l	equ	0xFE1
 24844                           indf2	equ	0xFDF
 24845                           postinc2	equ	0xFDE
 24846                           postdec2	equ	0xFDD
 24847                           plusw2	equ	0xFDB
 24848                           fsr2h	equ	0xFDA
 24849                           fsr2l	equ	0xFD9
 24850                           status	equ	0xFD8
 24851                           
 24852 ;; *************** function ___xxtofl *****************
 24853 ;; Defined at:
 24854 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 24855 ;; Parameters:    Size  Location     Type
 24856 ;;  sign            1    wreg     unsigned char 
 24857 ;;  val             4   23[BANK1 ] long 
 24858 ;; Auto vars:     Size  Location     Type
 24859 ;;  sign            1   31[BANK1 ] unsigned char 
 24860 ;;  arg             4   33[BANK1 ] unsigned long 
 24861 ;;  exp             1   32[BANK1 ] unsigned char 
 24862 ;; Return value:  Size  Location     Type
 24863 ;;                  4   23[BANK1 ] unsigned char 
 24864 ;; Registers used:
 24865 ;;		wreg, status,2, status,0
 24866 ;; Tracked objects:
 24867 ;;		On entry : 0/0
 24868 ;;		On exit  : 0/0
 24869 ;;		Unchanged: 0/0
 24870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24871 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24872 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24873 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24874 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24875 ;;Total ram usage:       14 bytes
 24876 ;; Hardware stack levels used:    1
 24877 ;; Hardware stack levels required when called:   13
 24878 ;; This function calls:
 24879 ;;		Nothing
 24880 ;; This function is called by:
 24881 ;;		_ringBufferLUT
 24882 ;;		_printf
 24883 ;; This function uses a non-reentrant model
 24884 ;;
 24885                           
 24886                           	psect	text39
 24887  016D48                     __ptext39:
 24888                           	opt stack 0
 24889  016D48                     ___xxtofl:
 24890                           	opt stack 14
 24891                           
 24892                           ; BSR set to: 1
 24893                           ;incstack = 0
 24894                           ;___xxtofl@sign stored from wreg
 24895  016D48  0101               	movlb	1	; () banked
 24896  016D4A  6F1F               	movwf	___xxtofl@sign& (0+255),b
 24897  016D4C  0101               	movlb	1	; () banked
 24898  016D4E  511F               	movf	___xxtofl@sign& (0+255),w,b
 24899  016D50  A4D8               	btfss	status,2,c
 24900                           
 24901                           ; BSR set to: 1
 24902  016D52  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 24903  016D54  D01A               	goto	l2352
 24904                           
 24905                           ; BSR set to: 1
 24906  016D56  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 24907  016D5A  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 24908  016D5E  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 24909  016D62  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 24910  016D66  1F1B               	comf	??___xxtofl& (0+255),f,b
 24911  016D68  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 24912  016D6A  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 24913  016D6C  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 24914  016D6E  2B1B               	incf	??___xxtofl& (0+255),f,b
 24915  016D70  0E00               	movlw	0
 24916  016D72  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 24917  016D74  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 24918  016D76  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 24919  016D78  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 24920  016D7C  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 24921  016D80  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 24922  016D84  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 24923  016D88  D008               	goto	l2353
 24924  016D8A                     l2352:
 24925                           
 24926                           ; BSR set to: 1
 24927  016D8A  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 24928  016D8E  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 24929  016D92  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 24930  016D96  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 24931  016D9A                     l2353:
 24932                           
 24933                           ; BSR set to: 1
 24934                           
 24935                           ; BSR set to: 1
 24936  016D9A  5117               	movf	___xxtofl@val& (0+255),w,b
 24937  016D9C  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 24938  016D9E  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 24939  016DA0  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 24940  016DA2  A4D8               	btfss	status,2,c
 24941  016DA4  D009               	goto	l2354
 24942                           
 24943                           ; BSR set to: 1
 24944  016DA6  0E00               	movlw	0
 24945  016DA8  6F17               	movwf	?___xxtofl& (0+255),b
 24946  016DAA  0E00               	movlw	0
 24947  016DAC  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 24948  016DAE  0E00               	movlw	0
 24949  016DB0  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 24950  016DB2  0E00               	movlw	0
 24951  016DB4  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 24952                           
 24953                           ; BSR set to: 1
 24954  016DB6  0012               	return	
 24955  016DB8                     l2354:
 24956                           
 24957                           ; BSR set to: 1
 24958                           
 24959                           ; BSR set to: 1
 24960  016DB8  0E96               	movlw	150
 24961  016DBA  6F20               	movwf	___xxtofl@exp& (0+255),b
 24962  016DBC  D006               	goto	l2356
 24963  016DBE                     
 24964                           ; BSR set to: 1
 24965                           
 24966                           ; BSR set to: 1
 24967  016DBE  2B20               	incf	___xxtofl@exp& (0+255),f,b
 24968  016DC0  90D8               	bcf	status,0,c
 24969  016DC2  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 24970  016DC4  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 24971  016DC6  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 24972  016DC8  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 24973  016DCA                     l2356:
 24974                           
 24975                           ; BSR set to: 1
 24976                           
 24977                           ; BSR set to: 1
 24978  016DCA  0E00               	movlw	0
 24979  016DCC  1521               	andwf	___xxtofl@arg& (0+255),w,b
 24980  016DCE  6F1B               	movwf	??___xxtofl& (0+255),b
 24981  016DD0  0E00               	movlw	0
 24982  016DD2  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 24983  016DD4  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 24984  016DD6  0E00               	movlw	0
 24985  016DD8  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 24986  016DDA  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 24987  016DDC  0EFE               	movlw	254
 24988  016DDE  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 24989  016DE0  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 24990  016DE2  511B               	movf	??___xxtofl& (0+255),w,b
 24991  016DE4  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 24992  016DE6  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 24993  016DE8  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 24994  016DEA  B4D8               	btfsc	status,2,c
 24995  016DEC  D00D               	goto	l2359
 24996  016DEE  D7E7               	goto	l2357
 24997  016DF0                     
 24998                           ; BSR set to: 1
 24999                           
 25000                           ; BSR set to: 1
 25001  016DF0  2B20               	incf	___xxtofl@exp& (0+255),f,b
 25002                           
 25003                           ; BSR set to: 1
 25004  016DF2  0E01               	movlw	1
 25005  016DF4  2721               	addwf	___xxtofl@arg& (0+255),f,b
 25006  016DF6  0E00               	movlw	0
 25007  016DF8  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 25008  016DFA  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 25009  016DFC  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 25010                           
 25011                           ; BSR set to: 1
 25012  016DFE  90D8               	bcf	status,0,c
 25013  016E00  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 25014  016E02  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 25015  016E04  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 25016  016E06  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 25017  016E08                     l2359:
 25018                           
 25019                           ; BSR set to: 1
 25020  016E08  0E00               	movlw	0
 25021  016E0A  1521               	andwf	___xxtofl@arg& (0+255),w,b
 25022  016E0C  6F1B               	movwf	??___xxtofl& (0+255),b
 25023  016E0E  0E00               	movlw	0
 25024  016E10  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 25025  016E12  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 25026  016E14  0E00               	movlw	0
 25027  016E16  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 25028  016E18  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 25029  016E1A  0EFF               	movlw	255
 25030  016E1C  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 25031  016E1E  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 25032  016E20  511B               	movf	??___xxtofl& (0+255),w,b
 25033  016E22  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 25034  016E24  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 25035  016E26  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 25036  016E28  B4D8               	btfsc	status,2,c
 25037  016E2A  D007               	goto	l2362
 25038  016E2C  D7E1               	goto	l2360
 25039  016E2E                     
 25040                           ; BSR set to: 1
 25041                           
 25042                           ; BSR set to: 1
 25043  016E2E  0720               	decf	___xxtofl@exp& (0+255),f,b
 25044  016E30  90D8               	bcf	status,0,c
 25045  016E32  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 25046  016E34  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 25047  016E36  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 25048  016E38  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 25049  016E3A                     l2362:
 25050                           
 25051                           ; BSR set to: 1
 25052                           
 25053                           ; BSR set to: 1
 25054  016E3A  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 25055  016E3C  D003               	goto	u24730
 25056                           
 25057                           ; BSR set to: 1
 25058  016E3E  0E02               	movlw	2
 25059  016E40  6120               	cpfslt	___xxtofl@exp& (0+255),b
 25060  016E42  D7F5               	goto	l2363
 25061  016E44                     u24730:
 25062                           
 25063                           ; BSR set to: 1
 25064                           
 25065                           ; BSR set to: 1
 25066  016E44  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 25067  016E46  D008               	goto	l2367
 25068                           
 25069                           ; BSR set to: 1
 25070  016E48  0EFF               	movlw	255
 25071  016E4A  1721               	andwf	___xxtofl@arg& (0+255),f,b
 25072  016E4C  0EFF               	movlw	255
 25073  016E4E  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 25074  016E50  0E7F               	movlw	127
 25075  016E52  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 25076  016E54  0EFF               	movlw	255
 25077  016E56  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 25078  016E58                     l2367:
 25079                           
 25080                           ; BSR set to: 1
 25081  016E58  90D8               	bcf	status,0,c
 25082  016E5A  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 25083  016E5C  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 25084  016E60  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 25085  016E62  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 25086  016E64  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 25087  016E66  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 25088  016E6A  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 25089  016E6C  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 25090  016E6E  6B1B               	clrf	??___xxtofl& (0+255),b
 25091  016E70  511B               	movf	??___xxtofl& (0+255),w,b
 25092  016E72  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 25093  016E74  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 25094  016E76  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 25095  016E78  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 25096  016E7A  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 25097  016E7C  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 25098  016E7E  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 25099                           
 25100                           ; BSR set to: 1
 25101  016E80  511F               	movf	___xxtofl@sign& (0+255),w,b
 25102  016E82  A4D8               	btfss	status,2,c
 25103                           
 25104                           ; BSR set to: 1
 25105  016E84  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 25106  016E86  D001               	goto	l2368
 25107                           
 25108                           ; BSR set to: 1
 25109  016E88  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 25110  016E8A                     l2368:
 25111                           
 25112                           ; BSR set to: 1
 25113                           
 25114                           ; BSR set to: 1
 25115  016E8A  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 25116  016E8E  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 25117  016E92  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 25118  016E96  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 25119  016E9A  0012               	return	
 25120  016E9C                     __end_of___xxtofl:
 25121                           	opt stack 0
 25122                           tblptru	equ	0xFF8
 25123                           tblptrh	equ	0xFF7
 25124                           tblptrl	equ	0xFF6
 25125                           tablat	equ	0xFF5
 25126                           prodh	equ	0xFF4
 25127                           prodl	equ	0xFF3
 25128                           intcon	equ	0xFF2
 25129                           indf0	equ	0xFEF
 25130                           postinc0	equ	0xFEE
 25131                           fsr0h	equ	0xFEA
 25132                           fsr0l	equ	0xFE9
 25133                           wreg	equ	0xFE8
 25134                           indf1	equ	0xFE7
 25135                           postdec1	equ	0xFE5
 25136                           plusw1	equ	0xFE3
 25137                           fsr1h	equ	0xFE2
 25138                           fsr1l	equ	0xFE1
 25139                           indf2	equ	0xFDF
 25140                           postinc2	equ	0xFDE
 25141                           postdec2	equ	0xFDD
 25142                           plusw2	equ	0xFDB
 25143                           fsr2h	equ	0xFDA
 25144                           fsr2l	equ	0xFD9
 25145                           status	equ	0xFD8
 25146                           
 25147 ;; *************** function ___wmul *****************
 25148 ;; Defined at:
 25149 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 25150 ;; Parameters:    Size  Location     Type
 25151 ;;  multiplier      2   23[BANK1 ] unsigned int 
 25152 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 25153 ;; Auto vars:     Size  Location     Type
 25154 ;;  product         2   27[BANK1 ] unsigned int 
 25155 ;; Return value:  Size  Location     Type
 25156 ;;                  2   23[BANK1 ] unsigned int 
 25157 ;; Registers used:
 25158 ;;		wreg, status,2, status,0, prodl, prodh
 25159 ;; Tracked objects:
 25160 ;;		On entry : 0/0
 25161 ;;		On exit  : 0/0
 25162 ;;		Unchanged: 0/0
 25163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25164 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25165 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25167 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25168 ;;Total ram usage:        6 bytes
 25169 ;; Hardware stack levels used:    1
 25170 ;; Hardware stack levels required when called:   13
 25171 ;; This function calls:
 25172 ;;		Nothing
 25173 ;; This function is called by:
 25174 ;;		_ringBufferLUT
 25175 ;;		_printf
 25176 ;;		_atoi
 25177 ;; This function uses a non-reentrant model
 25178 ;;
 25179                           
 25180                           	psect	text40
 25181  019058                     __ptext40:
 25182                           	opt stack 0
 25183  019058                     ___wmul:
 25184                           	opt stack 14
 25185                           
 25186                           ; BSR set to: 1
 25187                           ;incstack = 0
 25188  019058  0101               	movlb	1	; () banked
 25189  01905A  5117               	movf	___wmul@multiplier& (0+255),w,b
 25190  01905C  0319               	mulwf	___wmul@multiplicand& (0+255),b
 25191  01905E  CFF3 F11B          	movff	prodl,___wmul@product
 25192  019062  CFF4 F11C          	movff	prodh,___wmul@product+1
 25193  019066  5117               	movf	___wmul@multiplier& (0+255),w,b
 25194  019068  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 25195  01906A  50F3               	movf	prodl,w,c
 25196  01906C  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 25197  01906E  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 25198  019070  0319               	mulwf	___wmul@multiplicand& (0+255),b
 25199  019072  50F3               	movf	prodl,w,c
 25200  019074  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 25201                           
 25202                           ; BSR set to: 1
 25203  019076  C11B  F117         	movff	___wmul@product,?___wmul
 25204  01907A  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 25205  01907E  0012               	return	
 25206  019080                     __end_of___wmul:
 25207                           	opt stack 0
 25208                           tblptru	equ	0xFF8
 25209                           tblptrh	equ	0xFF7
 25210                           tblptrl	equ	0xFF6
 25211                           tablat	equ	0xFF5
 25212                           prodh	equ	0xFF4
 25213                           prodl	equ	0xFF3
 25214                           intcon	equ	0xFF2
 25215                           indf0	equ	0xFEF
 25216                           postinc0	equ	0xFEE
 25217                           fsr0h	equ	0xFEA
 25218                           fsr0l	equ	0xFE9
 25219                           wreg	equ	0xFE8
 25220                           indf1	equ	0xFE7
 25221                           postdec1	equ	0xFE5
 25222                           plusw1	equ	0xFE3
 25223                           fsr1h	equ	0xFE2
 25224                           fsr1l	equ	0xFE1
 25225                           indf2	equ	0xFDF
 25226                           postinc2	equ	0xFDE
 25227                           postdec2	equ	0xFDD
 25228                           plusw2	equ	0xFDB
 25229                           fsr2h	equ	0xFDA
 25230                           fsr2l	equ	0xFD9
 25231                           status	equ	0xFD8
 25232                           
 25233 ;; *************** function ___llmod *****************
 25234 ;; Defined at:
 25235 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 25236 ;; Parameters:    Size  Location     Type
 25237 ;;  dividend        4   36[BANK1 ] unsigned long 
 25238 ;;  divisor         4   40[BANK1 ] unsigned long 
 25239 ;; Auto vars:     Size  Location     Type
 25240 ;;  counter         1   44[BANK1 ] unsigned char 
 25241 ;; Return value:  Size  Location     Type
 25242 ;;                  4   36[BANK1 ] unsigned long 
 25243 ;; Registers used:
 25244 ;;		wreg, status,2, status,0
 25245 ;; Tracked objects:
 25246 ;;		On entry : 0/0
 25247 ;;		On exit  : 0/0
 25248 ;;		Unchanged: 0/0
 25249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25250 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25251 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25253 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25254 ;;Total ram usage:        9 bytes
 25255 ;; Hardware stack levels used:    1
 25256 ;; Hardware stack levels required when called:   13
 25257 ;; This function calls:
 25258 ;;		Nothing
 25259 ;; This function is called by:
 25260 ;;		_printf
 25261 ;; This function uses a non-reentrant model
 25262 ;;
 25263                           
 25264                           	psect	text41
 25265  01873C                     __ptext41:
 25266                           	opt stack 0
 25267  01873C                     ___llmod:
 25268                           	opt stack 14
 25269                           
 25270                           ; BSR set to: 1
 25271                           ;incstack = 0
 25272  01873C  0101               	movlb	1	; () banked
 25273  01873E  5128               	movf	___llmod@divisor& (0+255),w,b
 25274  018740  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 25275  018742  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 25276  018744  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 25277  018746  B4D8               	btfsc	status,2,c
 25278  018748  D024               	goto	l2077
 25279                           
 25280                           ; BSR set to: 1
 25281  01874A  0E01               	movlw	1
 25282  01874C  6F2C               	movwf	___llmod@counter& (0+255),b
 25283  01874E  D006               	goto	l2072
 25284  018750                     
 25285                           ; BSR set to: 1
 25286                           
 25287                           ; BSR set to: 1
 25288  018750  90D8               	bcf	status,0,c
 25289  018752  3728               	rlcf	___llmod@divisor& (0+255),f,b
 25290  018754  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 25291  018756  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 25292  018758  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 25293  01875A  2B2C               	incf	___llmod@counter& (0+255),f,b
 25294  01875C                     l2072:
 25295                           
 25296                           ; BSR set to: 1
 25297                           
 25298                           ; BSR set to: 1
 25299  01875C  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 25300  01875E  D7F8               	goto	l2073
 25301  018760                     u24650:
 25302                           
 25303                           ; BSR set to: 1
 25304                           
 25305                           ; BSR set to: 1
 25306                           
 25307                           ; BSR set to: 1
 25308  018760  5128               	movf	___llmod@divisor& (0+255),w,b
 25309  018762  5D24               	subwf	___llmod@dividend& (0+255),w,b
 25310  018764  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 25311  018766  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 25312  018768  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 25313  01876A  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 25314  01876C  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 25315  01876E  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 25316  018770  A0D8               	btfss	status,0,c
 25317  018772  D008               	goto	l2076
 25318                           
 25319                           ; BSR set to: 1
 25320  018774  5128               	movf	___llmod@divisor& (0+255),w,b
 25321  018776  5F24               	subwf	___llmod@dividend& (0+255),f,b
 25322  018778  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 25323  01877A  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 25324  01877C  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 25325  01877E  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 25326  018780  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 25327  018782  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 25328  018784                     l2076:
 25329                           
 25330                           ; BSR set to: 1
 25331                           
 25332                           ; BSR set to: 1
 25333  018784  90D8               	bcf	status,0,c
 25334  018786  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 25335  018788  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 25336  01878A  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 25337  01878C  3328               	rrcf	___llmod@divisor& (0+255),f,b
 25338                           
 25339                           ; BSR set to: 1
 25340  01878E  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 25341  018790  D7E7               	goto	u24650
 25342  018792                     l2077:
 25343                           
 25344                           ; BSR set to: 1
 25345                           
 25346                           ; BSR set to: 1
 25347  018792  C124  F124         	movff	___llmod@dividend,?___llmod
 25348  018796  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 25349  01879A  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 25350  01879E  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 25351                           
 25352                           ; BSR set to: 1
 25353  0187A2  0012               	return		;funcret
 25354  0187A4                     __end_of___llmod:
 25355                           	opt stack 0
 25356                           tblptru	equ	0xFF8
 25357                           tblptrh	equ	0xFF7
 25358                           tblptrl	equ	0xFF6
 25359                           tablat	equ	0xFF5
 25360                           prodh	equ	0xFF4
 25361                           prodl	equ	0xFF3
 25362                           intcon	equ	0xFF2
 25363                           indf0	equ	0xFEF
 25364                           postinc0	equ	0xFEE
 25365                           fsr0h	equ	0xFEA
 25366                           fsr0l	equ	0xFE9
 25367                           wreg	equ	0xFE8
 25368                           indf1	equ	0xFE7
 25369                           postdec1	equ	0xFE5
 25370                           plusw1	equ	0xFE3
 25371                           fsr1h	equ	0xFE2
 25372                           fsr1l	equ	0xFE1
 25373                           indf2	equ	0xFDF
 25374                           postinc2	equ	0xFDE
 25375                           postdec2	equ	0xFDD
 25376                           plusw2	equ	0xFDB
 25377                           fsr2h	equ	0xFDA
 25378                           fsr2l	equ	0xFD9
 25379                           status	equ	0xFD8
 25380                           
 25381 ;; *************** function ___lldiv *****************
 25382 ;; Defined at:
 25383 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 25384 ;; Parameters:    Size  Location     Type
 25385 ;;  dividend        4   23[BANK1 ] unsigned long 
 25386 ;;  divisor         4   27[BANK1 ] unsigned long 
 25387 ;; Auto vars:     Size  Location     Type
 25388 ;;  quotient        4   32[BANK1 ] unsigned long 
 25389 ;;  counter         1   31[BANK1 ] unsigned char 
 25390 ;; Return value:  Size  Location     Type
 25391 ;;                  4   23[BANK1 ] unsigned long 
 25392 ;; Registers used:
 25393 ;;		wreg, status,2, status,0
 25394 ;; Tracked objects:
 25395 ;;		On entry : 0/0
 25396 ;;		On exit  : 0/0
 25397 ;;		Unchanged: 0/0
 25398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25399 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25400 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25402 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25403 ;;Total ram usage:       13 bytes
 25404 ;; Hardware stack levels used:    1
 25405 ;; Hardware stack levels required when called:   13
 25406 ;; This function calls:
 25407 ;;		Nothing
 25408 ;; This function is called by:
 25409 ;;		_printf
 25410 ;; This function uses a non-reentrant model
 25411 ;;
 25412                           
 25413                           	psect	text42
 25414  01829A                     __ptext42:
 25415                           	opt stack 0
 25416  01829A                     ___lldiv:
 25417                           	opt stack 14
 25418                           
 25419                           ; BSR set to: 1
 25420                           ;incstack = 0
 25421  01829A  0E00               	movlw	0
 25422  01829C  0101               	movlb	1	; () banked
 25423  01829E  6F20               	movwf	___lldiv@quotient& (0+255),b
 25424  0182A0  0E00               	movlw	0
 25425  0182A2  6F21               	movwf	(___lldiv@quotient+1)& (0+255),b
 25426  0182A4  0E00               	movlw	0
 25427  0182A6  6F22               	movwf	(___lldiv@quotient+2)& (0+255),b
 25428  0182A8  0E00               	movlw	0
 25429  0182AA  6F23               	movwf	(___lldiv@quotient+3)& (0+255),b
 25430                           
 25431                           ; BSR set to: 1
 25432  0182AC  511B               	movf	___lldiv@divisor& (0+255),w,b
 25433  0182AE  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 25434  0182B0  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 25435  0182B2  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 25436  0182B4  B4D8               	btfsc	status,2,c
 25437  0182B6  D02A               	goto	l2067
 25438                           
 25439                           ; BSR set to: 1
 25440  0182B8  0E01               	movlw	1
 25441  0182BA  6F1F               	movwf	___lldiv@counter& (0+255),b
 25442  0182BC  D006               	goto	l2062
 25443  0182BE                     
 25444                           ; BSR set to: 1
 25445                           
 25446                           ; BSR set to: 1
 25447  0182BE  90D8               	bcf	status,0,c
 25448  0182C0  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 25449  0182C2  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 25450  0182C4  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 25451  0182C6  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 25452  0182C8  2B1F               	incf	___lldiv@counter& (0+255),f,b
 25453  0182CA                     l2062:
 25454                           
 25455                           ; BSR set to: 1
 25456                           
 25457                           ; BSR set to: 1
 25458  0182CA  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 25459  0182CC  D7F8               	goto	l2063
 25460  0182CE                     u24620:
 25461                           
 25462                           ; BSR set to: 1
 25463                           
 25464                           ; BSR set to: 1
 25465                           
 25466                           ; BSR set to: 1
 25467  0182CE  90D8               	bcf	status,0,c
 25468  0182D0  3720               	rlcf	___lldiv@quotient& (0+255),f,b
 25469  0182D2  3721               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 25470  0182D4  3722               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 25471  0182D6  3723               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 25472                           
 25473                           ; BSR set to: 1
 25474  0182D8  511B               	movf	___lldiv@divisor& (0+255),w,b
 25475  0182DA  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 25476  0182DC  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25477  0182DE  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 25478  0182E0  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25479  0182E2  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 25480  0182E4  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25481  0182E6  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 25482  0182E8  A0D8               	btfss	status,0,c
 25483  0182EA  D009               	goto	l2066
 25484                           
 25485                           ; BSR set to: 1
 25486  0182EC  511B               	movf	___lldiv@divisor& (0+255),w,b
 25487  0182EE  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 25488  0182F0  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25489  0182F2  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 25490  0182F4  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25491  0182F6  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 25492  0182F8  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25493  0182FA  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 25494                           
 25495                           ; BSR set to: 1
 25496  0182FC  8120               	bsf	___lldiv@quotient& (0+255),0,b
 25497  0182FE                     l2066:
 25498                           
 25499                           ; BSR set to: 1
 25500                           
 25501                           ; BSR set to: 1
 25502  0182FE  90D8               	bcf	status,0,c
 25503  018300  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 25504  018302  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 25505  018304  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 25506  018306  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 25507                           
 25508                           ; BSR set to: 1
 25509  018308  2F1F               	decfsz	___lldiv@counter& (0+255),f,b
 25510  01830A  D7E1               	goto	u24620
 25511  01830C                     l2067:
 25512                           
 25513                           ; BSR set to: 1
 25514                           
 25515                           ; BSR set to: 1
 25516  01830C  C120  F117         	movff	___lldiv@quotient,?___lldiv
 25517  018310  C121  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 25518  018314  C122  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 25519  018318  C123  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 25520                           
 25521                           ; BSR set to: 1
 25522  01831C  0012               	return		;funcret
 25523  01831E                     __end_of___lldiv:
 25524                           	opt stack 0
 25525                           tblptru	equ	0xFF8
 25526                           tblptrh	equ	0xFF7
 25527                           tblptrl	equ	0xFF6
 25528                           tablat	equ	0xFF5
 25529                           prodh	equ	0xFF4
 25530                           prodl	equ	0xFF3
 25531                           intcon	equ	0xFF2
 25532                           indf0	equ	0xFEF
 25533                           postinc0	equ	0xFEE
 25534                           fsr0h	equ	0xFEA
 25535                           fsr0l	equ	0xFE9
 25536                           wreg	equ	0xFE8
 25537                           indf1	equ	0xFE7
 25538                           postdec1	equ	0xFE5
 25539                           plusw1	equ	0xFE3
 25540                           fsr1h	equ	0xFE2
 25541                           fsr1l	equ	0xFE1
 25542                           indf2	equ	0xFDF
 25543                           postinc2	equ	0xFDE
 25544                           postdec2	equ	0xFDD
 25545                           plusw2	equ	0xFDB
 25546                           fsr2h	equ	0xFDA
 25547                           fsr2l	equ	0xFD9
 25548                           status	equ	0xFD8
 25549                           
 25550 ;; *************** function ___fltol *****************
 25551 ;; Defined at:
 25552 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 25553 ;; Parameters:    Size  Location     Type
 25554 ;;  f1              4  120[BANK1 ] unsigned long 
 25555 ;; Auto vars:     Size  Location     Type
 25556 ;;  exp1            1  129[BANK1 ] unsigned char 
 25557 ;;  sign1           1  128[BANK1 ] unsigned char 
 25558 ;; Return value:  Size  Location     Type
 25559 ;;                  4  120[BANK1 ] long 
 25560 ;; Registers used:
 25561 ;;		wreg, status,2, status,0
 25562 ;; Tracked objects:
 25563 ;;		On entry : 0/0
 25564 ;;		On exit  : 0/0
 25565 ;;		Unchanged: 0/0
 25566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25567 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25568 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25569 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25570 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25571 ;;Total ram usage:       10 bytes
 25572 ;; Hardware stack levels used:    1
 25573 ;; Hardware stack levels required when called:   13
 25574 ;; This function calls:
 25575 ;;		Nothing
 25576 ;; This function is called by:
 25577 ;;		_printf
 25578 ;; This function uses a non-reentrant model
 25579 ;;
 25580                           
 25581                           	psect	text43
 25582  017B26                     __ptext43:
 25583                           	opt stack 0
 25584  017B26                     ___fltol:
 25585                           	opt stack 14
 25586                           
 25587                           ; BSR set to: 1
 25588                           ;incstack = 0
 25589  017B26  0101               	movlb	1	; () banked
 25590  017B28  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 25591  017B2A  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 25592  017B2C  6F81               	movwf	___fltol@exp1& (0+255),b
 25593  017B2E  5181               	movf	___fltol@exp1& (0+255),w,b
 25594  017B30  A4D8               	btfss	status,2,c
 25595  017B32  D009               	goto	l1919
 25596                           
 25597                           ; BSR set to: 1
 25598  017B34  0E00               	movlw	0
 25599  017B36  6F78               	movwf	?___fltol& (0+255),b
 25600  017B38  0E00               	movlw	0
 25601  017B3A  6F79               	movwf	(?___fltol+1)& (0+255),b
 25602  017B3C  0E00               	movlw	0
 25603  017B3E  6F7A               	movwf	(?___fltol+2)& (0+255),b
 25604  017B40  0E00               	movlw	0
 25605  017B42  6F7B               	movwf	(?___fltol+3)& (0+255),b
 25606                           
 25607                           ; BSR set to: 1
 25608  017B44  0012               	return	
 25609  017B46                     l1919:
 25610                           
 25611                           ; BSR set to: 1
 25612                           
 25613                           ; BSR set to: 1
 25614  017B46  C178  F17C         	movff	___fltol@f1,??___fltol
 25615  017B4A  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 25616  017B4E  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 25617  017B52  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 25618  017B56  0E20               	movlw	32
 25619  017B58  D005               	goto	u24550
 25620  017B5A                     u24555:
 25621  017B5A  90D8               	bcf	status,0,c
 25622  017B5C  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 25623  017B5E  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 25624  017B60  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 25625  017B62  337C               	rrcf	??___fltol& (0+255),f,b
 25626  017B64                     u24550:
 25627  017B64  2EE8               	decfsz	wreg,f,c
 25628  017B66  D7F9               	goto	u24555
 25629  017B68  517C               	movf	??___fltol& (0+255),w,b
 25630  017B6A  6F80               	movwf	___fltol@sign1& (0+255),b
 25631                           
 25632                           ; BSR set to: 1
 25633  017B6C  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 25634                           
 25635                           ; BSR set to: 1
 25636  017B6E  0EFF               	movlw	255
 25637  017B70  1778               	andwf	___fltol@f1& (0+255),f,b
 25638  017B72  0EFF               	movlw	255
 25639  017B74  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 25640  017B76  0EFF               	movlw	255
 25641  017B78  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 25642  017B7A  0E00               	movlw	0
 25643  017B7C  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 25644                           
 25645                           ; BSR set to: 1
 25646  017B7E  0E96               	movlw	150
 25647  017B80  5F81               	subwf	___fltol@exp1& (0+255),f,b
 25648                           
 25649                           ; BSR set to: 1
 25650  017B82  AF81               	btfss	___fltol@exp1& (0+255),7,b
 25651  017B84  D016               	goto	l1921
 25652                           
 25653                           ; BSR set to: 1
 25654  017B86  5181               	movf	___fltol@exp1& (0+255),w,b
 25655  017B88  0A80               	xorlw	128
 25656  017B8A  0F97               	addlw	151
 25657  017B8C  B0D8               	btfsc	status,0,c
 25658  017B8E  D009               	goto	l1922
 25659                           
 25660                           ; BSR set to: 1
 25661  017B90  0E00               	movlw	0
 25662  017B92  6F78               	movwf	?___fltol& (0+255),b
 25663  017B94  0E00               	movlw	0
 25664  017B96  6F79               	movwf	(?___fltol+1)& (0+255),b
 25665  017B98  0E00               	movlw	0
 25666  017B9A  6F7A               	movwf	(?___fltol+2)& (0+255),b
 25667  017B9C  0E00               	movlw	0
 25668  017B9E  6F7B               	movwf	(?___fltol+3)& (0+255),b
 25669                           
 25670                           ; BSR set to: 1
 25671  017BA0  0012               	return	
 25672  017BA2                     l1922:
 25673                           
 25674                           ; BSR set to: 1
 25675                           
 25676                           ; BSR set to: 1
 25677                           
 25678                           ; BSR set to: 1
 25679  017BA2  90D8               	bcf	status,0,c
 25680  017BA4  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 25681  017BA6  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 25682  017BA8  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 25683  017BAA  3378               	rrcf	___fltol@f1& (0+255),f,b
 25684                           
 25685                           ; BSR set to: 1
 25686  017BAC  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 25687  017BAE  D7F9               	goto	l1922
 25688                           
 25689                           ; BSR set to: 1
 25690  017BB0  D015               	goto	u24590
 25691  017BB2                     l1921:
 25692                           
 25693                           ; BSR set to: 1
 25694                           
 25695                           ; BSR set to: 1
 25696  017BB2  0E1F               	movlw	31
 25697  017BB4  6581               	cpfsgt	___fltol@exp1& (0+255),b
 25698  017BB6  D00F               	goto	l1927
 25699                           
 25700                           ; BSR set to: 1
 25701  017BB8  0E00               	movlw	0
 25702  017BBA  6F78               	movwf	?___fltol& (0+255),b
 25703  017BBC  0E00               	movlw	0
 25704  017BBE  6F79               	movwf	(?___fltol+1)& (0+255),b
 25705  017BC0  0E00               	movlw	0
 25706  017BC2  6F7A               	movwf	(?___fltol+2)& (0+255),b
 25707  017BC4  0E00               	movlw	0
 25708  017BC6  6F7B               	movwf	(?___fltol+3)& (0+255),b
 25709                           
 25710                           ; BSR set to: 1
 25711  017BC8  0012               	return	
 25712  017BCA                     
 25713                           ; BSR set to: 1
 25714                           
 25715                           ; BSR set to: 1
 25716  017BCA  90D8               	bcf	status,0,c
 25717  017BCC  3778               	rlcf	___fltol@f1& (0+255),f,b
 25718  017BCE  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 25719  017BD0  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 25720  017BD2  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 25721  017BD4  0781               	decf	___fltol@exp1& (0+255),f,b
 25722  017BD6                     l1927:
 25723                           
 25724                           ; BSR set to: 1
 25725                           
 25726                           ; BSR set to: 1
 25727  017BD6  5181               	movf	___fltol@exp1& (0+255),w,b
 25728  017BD8  A4D8               	btfss	status,2,c
 25729  017BDA  D7F7               	goto	l1928
 25730  017BDC                     u24590:
 25731                           
 25732                           ; BSR set to: 1
 25733                           
 25734                           ; BSR set to: 1
 25735                           
 25736                           ; BSR set to: 1
 25737  017BDC  5180               	movf	___fltol@sign1& (0+255),w,b
 25738  017BDE  B4D8               	btfsc	status,2,c
 25739  017BE0  D008               	goto	l1930
 25740                           
 25741                           ; BSR set to: 1
 25742  017BE2  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 25743  017BE4  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 25744  017BE6  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 25745  017BE8  6D78               	negf	___fltol@f1& (0+255),b
 25746  017BEA  0E00               	movlw	0
 25747  017BEC  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 25748  017BEE  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 25749  017BF0  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 25750  017BF2                     l1930:
 25751                           
 25752                           ; BSR set to: 1
 25753                           
 25754                           ; BSR set to: 1
 25755  017BF2  C178  F178         	movff	___fltol@f1,?___fltol
 25756  017BF6  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 25757  017BFA  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 25758  017BFE  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 25759  017C02  0012               	return	
 25760  017C04                     __end_of___fltol:
 25761                           	opt stack 0
 25762                           tblptru	equ	0xFF8
 25763                           tblptrh	equ	0xFF7
 25764                           tblptrl	equ	0xFF6
 25765                           tablat	equ	0xFF5
 25766                           prodh	equ	0xFF4
 25767                           prodl	equ	0xFF3
 25768                           intcon	equ	0xFF2
 25769                           indf0	equ	0xFEF
 25770                           postinc0	equ	0xFEE
 25771                           fsr0h	equ	0xFEA
 25772                           fsr0l	equ	0xFE9
 25773                           wreg	equ	0xFE8
 25774                           indf1	equ	0xFE7
 25775                           postdec1	equ	0xFE5
 25776                           plusw1	equ	0xFE3
 25777                           fsr1h	equ	0xFE2
 25778                           fsr1l	equ	0xFE1
 25779                           indf2	equ	0xFDF
 25780                           postinc2	equ	0xFDE
 25781                           postdec2	equ	0xFDD
 25782                           plusw2	equ	0xFDB
 25783                           fsr2h	equ	0xFDA
 25784                           fsr2l	equ	0xFD9
 25785                           status	equ	0xFD8
 25786                           
 25787 ;; *************** function ___flsub *****************
 25788 ;; Defined at:
 25789 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 25790 ;; Parameters:    Size  Location     Type
 25791 ;;  b               4   61[BANK1 ] long 
 25792 ;;  a               4   65[BANK1 ] long 
 25793 ;; Auto vars:     Size  Location     Type
 25794 ;;		None
 25795 ;; Return value:  Size  Location     Type
 25796 ;;                  4   61[BANK1 ] long 
 25797 ;; Registers used:
 25798 ;;		wreg, status,2, status,0, cstack
 25799 ;; Tracked objects:
 25800 ;;		On entry : 0/0
 25801 ;;		On exit  : 0/0
 25802 ;;		Unchanged: 0/0
 25803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25804 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25807 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25808 ;;Total ram usage:        8 bytes
 25809 ;; Hardware stack levels used:    1
 25810 ;; Hardware stack levels required when called:   14
 25811 ;; This function calls:
 25812 ;;		___fladd
 25813 ;; This function is called by:
 25814 ;;		_printf
 25815 ;; This function uses a non-reentrant model
 25816 ;;
 25817                           
 25818                           	psect	text44
 25819  018C28                     __ptext44:
 25820                           	opt stack 0
 25821  018C28                     ___flsub:
 25822                           	opt stack 13
 25823                           
 25824                           ; BSR set to: 1
 25825                           ;incstack = 0
 25826  018C28  0E00               	movlw	0
 25827  018C2A  0101               	movlb	1	; () banked
 25828  018C2C  1B41               	xorwf	___flsub@a& (0+255),f,b
 25829  018C2E  0E00               	movlw	0
 25830  018C30  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 25831  018C32  0E00               	movlw	0
 25832  018C34  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 25833  018C36  0E80               	movlw	128
 25834  018C38  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 25835                           
 25836                           ; BSR set to: 1
 25837  018C3A  C13D  F129         	movff	___flsub@b,___fladd@b
 25838  018C3E  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 25839  018C42  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 25840  018C46  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 25841  018C4A  C141  F12D         	movff	___flsub@a,___fladd@a
 25842  018C4E  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 25843  018C52  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 25844  018C56  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 25845  018C5A  EC21  F0A6         	call	___fladd	;wreg free
 25846  018C5E  C129  F13D         	movff	?___fladd,?___flsub
 25847  018C62  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 25848  018C66  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 25849  018C6A  C12C  F140         	movff	?___fladd+3,?___flsub+3
 25850  018C6E  0012               	return	
 25851  018C70                     __end_of___flsub:
 25852                           	opt stack 0
 25853                           tblptru	equ	0xFF8
 25854                           tblptrh	equ	0xFF7
 25855                           tblptrl	equ	0xFF6
 25856                           tablat	equ	0xFF5
 25857                           prodh	equ	0xFF4
 25858                           prodl	equ	0xFF3
 25859                           intcon	equ	0xFF2
 25860                           indf0	equ	0xFEF
 25861                           postinc0	equ	0xFEE
 25862                           fsr0h	equ	0xFEA
 25863                           fsr0l	equ	0xFE9
 25864                           wreg	equ	0xFE8
 25865                           indf1	equ	0xFE7
 25866                           postdec1	equ	0xFE5
 25867                           plusw1	equ	0xFE3
 25868                           fsr1h	equ	0xFE2
 25869                           fsr1l	equ	0xFE1
 25870                           indf2	equ	0xFDF
 25871                           postinc2	equ	0xFDE
 25872                           postdec2	equ	0xFDD
 25873                           plusw2	equ	0xFDB
 25874                           fsr2h	equ	0xFDA
 25875                           fsr2l	equ	0xFD9
 25876                           status	equ	0xFD8
 25877                           
 25878 ;; *************** function ___fladd *****************
 25879 ;; Defined at:
 25880 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 25881 ;; Parameters:    Size  Location     Type
 25882 ;;  b               4   41[BANK1 ] long 
 25883 ;;  a               4   45[BANK1 ] long 
 25884 ;; Auto vars:     Size  Location     Type
 25885 ;;  grs             1   60[BANK1 ] unsigned char 
 25886 ;;  bexp            1   59[BANK1 ] unsigned char 
 25887 ;;  aexp            1   58[BANK1 ] unsigned char 
 25888 ;;  signs           1   57[BANK1 ] unsigned char 
 25889 ;; Return value:  Size  Location     Type
 25890 ;;                  4   41[BANK1 ] unsigned char 
 25891 ;; Registers used:
 25892 ;;		wreg, status,2, status,0
 25893 ;; Tracked objects:
 25894 ;;		On entry : 0/0
 25895 ;;		On exit  : 0/0
 25896 ;;		Unchanged: 0/0
 25897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25898 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25899 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25900 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25901 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25902 ;;Total ram usage:       20 bytes
 25903 ;; Hardware stack levels used:    1
 25904 ;; Hardware stack levels required when called:   13
 25905 ;; This function calls:
 25906 ;;		Nothing
 25907 ;; This function is called by:
 25908 ;;		_ringBufferLUT
 25909 ;;		_printf
 25910 ;;		___flsub
 25911 ;; This function uses a non-reentrant model
 25912 ;;
 25913                           
 25914                           	psect	text45
 25915  014C42                     __ptext45:
 25916                           	opt stack 0
 25917  014C42                     ___fladd:
 25918                           	opt stack 13
 25919                           
 25920                           ;incstack = 0
 25921  014C42  0101               	movlb	1	; () banked
 25922  014C44  512C               	movf	(___fladd@b+3)& (0+255),w,b
 25923  014C46  0B80               	andlw	128
 25924  014C48  6F39               	movwf	___fladd@signs& (0+255),b
 25925  014C4A  512C               	movf	(___fladd@b+3)& (0+255),w,b
 25926  014C4C  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 25927  014C4E  6F3B               	movwf	___fladd@bexp& (0+255),b
 25928                           
 25929                           ; BSR set to: 1
 25930  014C50  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 25931                           
 25932                           ; BSR set to: 1
 25933  014C52  813B               	bsf	___fladd@bexp& (0+255),0,b
 25934                           
 25935                           ; BSR set to: 1
 25936                           
 25937                           ; BSR set to: 1
 25938  014C54  513B               	movf	___fladd@bexp& (0+255),w,b
 25939  014C56  B4D8               	btfsc	status,2,c
 25940  014C58  D00D               	goto	l2159
 25941                           
 25942                           ; BSR set to: 1
 25943  014C5A  293B               	incf	___fladd@bexp& (0+255),w,b
 25944  014C5C  A4D8               	btfss	status,2,c
 25945  014C5E  D008               	goto	l2160
 25946                           
 25947                           ; BSR set to: 1
 25948  014C60  0E00               	movlw	0
 25949  014C62  6F29               	movwf	___fladd@b& (0+255),b
 25950  014C64  0E00               	movlw	0
 25951  014C66  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 25952  014C68  0E00               	movlw	0
 25953  014C6A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 25954  014C6C  0E00               	movlw	0
 25955  014C6E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 25956  014C70                     l2160:
 25957                           
 25958                           ; BSR set to: 1
 25959                           
 25960                           ; BSR set to: 1
 25961  014C70  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 25962  014C72  D006               	goto	L5
 25963  014C74                     l2159:
 25964                           
 25965                           ; BSR set to: 1
 25966                           
 25967                           ; BSR set to: 1
 25968  014C74  0E00               	movlw	0
 25969  014C76  6F29               	movwf	___fladd@b& (0+255),b
 25970  014C78  0E00               	movlw	0
 25971  014C7A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 25972  014C7C  0E00               	movlw	0
 25973  014C7E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 25974  014C80                     L5:
 25975  014C80  0E00               	movlw	0
 25976  014C82  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 25977                           
 25978                           ; BSR set to: 1
 25979                           
 25980                           ; BSR set to: 1
 25981  014C84  5130               	movf	(___fladd@a+3)& (0+255),w,b
 25982  014C86  0B80               	andlw	128
 25983  014C88  6F3A               	movwf	___fladd@aexp& (0+255),b
 25984                           
 25985                           ; BSR set to: 1
 25986  014C8A  5139               	movf	___fladd@signs& (0+255),w,b
 25987  014C8C  193A               	xorwf	___fladd@aexp& (0+255),w,b
 25988  014C8E  A4D8               	btfss	status,2,c
 25989                           
 25990                           ; BSR set to: 1
 25991  014C90  8D39               	bsf	___fladd@signs& (0+255),6,b
 25992                           
 25993                           ; BSR set to: 1
 25994                           
 25995                           ; BSR set to: 1
 25996  014C92  5130               	movf	(___fladd@a+3)& (0+255),w,b
 25997  014C94  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 25998  014C96  6F3A               	movwf	___fladd@aexp& (0+255),b
 25999                           
 26000                           ; BSR set to: 1
 26001  014C98  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 26002                           
 26003                           ; BSR set to: 1
 26004  014C9A  813A               	bsf	___fladd@aexp& (0+255),0,b
 26005                           
 26006                           ; BSR set to: 1
 26007                           
 26008                           ; BSR set to: 1
 26009  014C9C  513A               	movf	___fladd@aexp& (0+255),w,b
 26010  014C9E  B4D8               	btfsc	status,2,c
 26011  014CA0  D00D               	goto	l2164
 26012                           
 26013                           ; BSR set to: 1
 26014  014CA2  293A               	incf	___fladd@aexp& (0+255),w,b
 26015  014CA4  A4D8               	btfss	status,2,c
 26016  014CA6  D008               	goto	l2165
 26017                           
 26018                           ; BSR set to: 1
 26019  014CA8  0E00               	movlw	0
 26020  014CAA  6F2D               	movwf	___fladd@a& (0+255),b
 26021  014CAC  0E00               	movlw	0
 26022  014CAE  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 26023  014CB0  0E00               	movlw	0
 26024  014CB2  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 26025  014CB4  0E00               	movlw	0
 26026  014CB6  6F30               	movwf	(___fladd@a+3)& (0+255),b
 26027  014CB8                     l2165:
 26028                           
 26029                           ; BSR set to: 1
 26030                           
 26031                           ; BSR set to: 1
 26032  014CB8  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 26033  014CBA  D006               	goto	L6
 26034  014CBC                     l2164:
 26035                           
 26036                           ; BSR set to: 1
 26037                           
 26038                           ; BSR set to: 1
 26039  014CBC  0E00               	movlw	0
 26040  014CBE  6F2D               	movwf	___fladd@a& (0+255),b
 26041  014CC0  0E00               	movlw	0
 26042  014CC2  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 26043  014CC4  0E00               	movlw	0
 26044  014CC6  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 26045  014CC8                     L6:
 26046  014CC8  0E00               	movlw	0
 26047  014CCA  6F30               	movwf	(___fladd@a+3)& (0+255),b
 26048                           
 26049                           ; BSR set to: 1
 26050                           
 26051                           ; BSR set to: 1
 26052  014CCC  513B               	movf	___fladd@bexp& (0+255),w,b
 26053  014CCE  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 26054  014CD0  B0D8               	btfsc	status,0,c
 26055  014CD2  D022               	goto	l2167
 26056                           
 26057                           ; BSR set to: 1
 26058  014CD4  AD39               	btfss	___fladd@signs& (0+255),6,b
 26059  014CD6  D002               	goto	l2168
 26060                           
 26061                           ; BSR set to: 1
 26062  014CD8  0E80               	movlw	128
 26063  014CDA  1B39               	xorwf	___fladd@signs& (0+255),f,b
 26064  014CDC                     l2168:
 26065                           
 26066                           ; BSR set to: 1
 26067                           
 26068                           ; BSR set to: 1
 26069  014CDC  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 26070                           
 26071                           ; BSR set to: 1
 26072  014CE0  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 26073                           
 26074                           ; BSR set to: 1
 26075  014CE4  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 26076                           
 26077                           ; BSR set to: 1
 26078  014CE8  C129  F13C         	movff	___fladd@b,___fladd@grs
 26079                           
 26080                           ; BSR set to: 1
 26081  014CEC  C12D  F129         	movff	___fladd@a,___fladd@b
 26082                           
 26083                           ; BSR set to: 1
 26084  014CF0  C13C  F12D         	movff	___fladd@grs,___fladd@a
 26085                           
 26086                           ; BSR set to: 1
 26087  014CF4  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 26088                           
 26089                           ; BSR set to: 1
 26090  014CF8  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 26091                           
 26092                           ; BSR set to: 1
 26093  014CFC  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 26094                           
 26095                           ; BSR set to: 1
 26096  014D00  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 26097                           
 26098                           ; BSR set to: 1
 26099  014D04  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 26100                           
 26101                           ; BSR set to: 1
 26102  014D08  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 26103                           
 26104                           ; BSR set to: 1
 26105  014D0C  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 26106                           
 26107                           ; BSR set to: 1
 26108  014D10  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 26109                           
 26110                           ; BSR set to: 1
 26111  014D14  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 26112  014D18                     l2167:
 26113                           
 26114                           ; BSR set to: 1
 26115                           
 26116                           ; BSR set to: 1
 26117  014D18  0E00               	movlw	0
 26118  014D1A  6F3C               	movwf	___fladd@grs& (0+255),b
 26119                           
 26120                           ; BSR set to: 1
 26121  014D1C  513B               	movf	___fladd@bexp& (0+255),w,b
 26122  014D1E  6F31               	movwf	??___fladd& (0+255),b
 26123  014D20  6B32               	clrf	(??___fladd+1)& (0+255),b
 26124  014D22  1F31               	comf	??___fladd& (0+255),f,b
 26125  014D24  1F32               	comf	(??___fladd+1)& (0+255),f,b
 26126  014D26  4B31               	infsnz	??___fladd& (0+255),f,b
 26127  014D28  2B32               	incf	(??___fladd+1)& (0+255),f,b
 26128  014D2A  513A               	movf	___fladd@aexp& (0+255),w,b
 26129  014D2C  6F33               	movwf	(??___fladd+2)& (0+255),b
 26130  014D2E  6B34               	clrf	(??___fladd+3)& (0+255),b
 26131  014D30  5131               	movf	??___fladd& (0+255),w,b
 26132  014D32  2733               	addwf	(??___fladd+2)& (0+255),f,b
 26133  014D34  5132               	movf	(??___fladd+1)& (0+255),w,b
 26134  014D36  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 26135  014D38  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 26136  014D3A  D02C               	goto	l2171
 26137  014D3C  5134               	movf	(??___fladd+3)& (0+255),w,b
 26138  014D3E  E104               	bnz	u23620
 26139  014D40  0E1A               	movlw	26
 26140  014D42  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 26141  014D44  A0D8               	btfss	status,0,c
 26142  014D46  D026               	goto	l2171
 26143  014D48                     u23620:
 26144                           
 26145                           ; BSR set to: 1
 26146  014D48  5129               	movf	___fladd@b& (0+255),w,b
 26147  014D4A  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 26148  014D4C  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 26149  014D4E  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 26150  014D50  B4D8               	btfsc	status,2,c
 26151  014D52  D002               	goto	u23630
 26152  014D54  0E01               	movlw	1
 26153  014D56  D001               	goto	u23640
 26154  014D58                     u23630:
 26155  014D58  0E00               	movlw	0
 26156  014D5A                     u23640:
 26157  014D5A  6F3C               	movwf	___fladd@grs& (0+255),b
 26158                           
 26159                           ; BSR set to: 1
 26160  014D5C  0E00               	movlw	0
 26161  014D5E  6F29               	movwf	___fladd@b& (0+255),b
 26162  014D60  0E00               	movlw	0
 26163  014D62  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26164  014D64  0E00               	movlw	0
 26165  014D66  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26166  014D68  0E00               	movlw	0
 26167  014D6A  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26168                           
 26169                           ; BSR set to: 1
 26170  014D6C  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 26171  014D70  D015               	goto	u23670
 26172  014D72                     l2172:
 26173                           
 26174                           ; BSR set to: 1
 26175  014D72  A13C               	btfss	___fladd@grs& (0+255),0,b
 26176  014D74  D005               	goto	l2173
 26177                           
 26178                           ; BSR set to: 1
 26179  014D76  90D8               	bcf	status,0,c
 26180  014D78  313C               	rrcf	___fladd@grs& (0+255),w,b
 26181  014D7A  0901               	iorlw	1
 26182  014D7C  6F3C               	movwf	___fladd@grs& (0+255),b
 26183  014D7E  D002               	goto	l2174
 26184  014D80                     l2173:
 26185                           
 26186                           ; BSR set to: 1
 26187                           
 26188                           ; BSR set to: 1
 26189  014D80  90D8               	bcf	status,0,c
 26190  014D82  333C               	rrcf	___fladd@grs& (0+255),f,b
 26191  014D84                     l2174:
 26192                           
 26193                           ; BSR set to: 1
 26194                           
 26195                           ; BSR set to: 1
 26196  014D84  B129               	btfsc	___fladd@b& (0+255),0,b
 26197                           
 26198                           ; BSR set to: 1
 26199  014D86  8F3C               	bsf	___fladd@grs& (0+255),7,b
 26200                           
 26201                           ; BSR set to: 1
 26202                           
 26203                           ; BSR set to: 1
 26204  014D88  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 26205  014D8A  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 26206  014D8C  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 26207  014D8E  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 26208  014D90  3329               	rrcf	___fladd@b& (0+255),f,b
 26209                           
 26210                           ; BSR set to: 1
 26211  014D92  2B3B               	incf	___fladd@bexp& (0+255),f,b
 26212  014D94                     l2171:
 26213                           
 26214                           ; BSR set to: 1
 26215  014D94  513A               	movf	___fladd@aexp& (0+255),w,b
 26216  014D96  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 26217  014D98  A0D8               	btfss	status,0,c
 26218  014D9A  D7EB               	goto	l2172
 26219  014D9C                     u23670:
 26220                           
 26221                           ; BSR set to: 1
 26222                           
 26223                           ; BSR set to: 1
 26224  014D9C  BD39               	btfsc	___fladd@signs& (0+255),6,b
 26225  014D9E  D029               	goto	l2177
 26226                           
 26227                           ; BSR set to: 1
 26228  014DA0  513B               	movf	___fladd@bexp& (0+255),w,b
 26229  014DA2  A4D8               	btfss	status,2,c
 26230  014DA4  D009               	goto	l2178
 26231                           
 26232                           ; BSR set to: 1
 26233  014DA6  0E00               	movlw	0
 26234  014DA8  6F29               	movwf	?___fladd& (0+255),b
 26235  014DAA  0E00               	movlw	0
 26236  014DAC  6F2A               	movwf	(?___fladd+1)& (0+255),b
 26237  014DAE  0E00               	movlw	0
 26238  014DB0  6F2B               	movwf	(?___fladd+2)& (0+255),b
 26239  014DB2  0E00               	movlw	0
 26240  014DB4  6F2C               	movwf	(?___fladd+3)& (0+255),b
 26241                           
 26242                           ; BSR set to: 1
 26243  014DB6  0012               	return	
 26244  014DB8                     l2178:
 26245                           
 26246                           ; BSR set to: 1
 26247                           
 26248                           ; BSR set to: 1
 26249  014DB8  512D               	movf	___fladd@a& (0+255),w,b
 26250  014DBA  2729               	addwf	___fladd@b& (0+255),f,b
 26251  014DBC  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26252  014DBE  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26253  014DC0  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26254  014DC2  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26255  014DC4  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26256  014DC6  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26257                           
 26258                           ; BSR set to: 1
 26259  014DC8  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 26260  014DCA  D083               	goto	u23800
 26261                           
 26262                           ; BSR set to: 1
 26263  014DCC  A13C               	btfss	___fladd@grs& (0+255),0,b
 26264  014DCE  D006               	goto	l2181
 26265                           
 26266                           ; BSR set to: 1
 26267  014DD0  90D8               	bcf	status,0,c
 26268  014DD2  333C               	rrcf	___fladd@grs& (0+255),f,b
 26269  014DD4  513C               	movf	___fladd@grs& (0+255),w,b
 26270  014DD6  0901               	iorlw	1
 26271  014DD8  6F3C               	movwf	___fladd@grs& (0+255),b
 26272  014DDA  D002               	goto	l2182
 26273  014DDC                     l2181:
 26274                           
 26275                           ; BSR set to: 1
 26276                           
 26277                           ; BSR set to: 1
 26278  014DDC  90D8               	bcf	status,0,c
 26279  014DDE  333C               	rrcf	___fladd@grs& (0+255),f,b
 26280  014DE0                     l2182:
 26281                           
 26282                           ; BSR set to: 1
 26283                           
 26284                           ; BSR set to: 1
 26285  014DE0  B129               	btfsc	___fladd@b& (0+255),0,b
 26286                           
 26287                           ; BSR set to: 1
 26288  014DE2  8F3C               	bsf	___fladd@grs& (0+255),7,b
 26289                           
 26290                           ; BSR set to: 1
 26291                           
 26292                           ; BSR set to: 1
 26293  014DE4  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 26294  014DE6  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 26295  014DE8  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 26296  014DEA  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 26297  014DEC  3329               	rrcf	___fladd@b& (0+255),f,b
 26298                           
 26299                           ; BSR set to: 1
 26300  014DEE  2B3B               	incf	___fladd@bexp& (0+255),f,b
 26301                           
 26302                           ; BSR set to: 1
 26303  014DF0  D070               	goto	u23800
 26304  014DF2                     l2177:
 26305                           
 26306                           ; BSR set to: 1
 26307                           
 26308                           ; BSR set to: 1
 26309  014DF2  512D               	movf	___fladd@a& (0+255),w,b
 26310  014DF4  5D29               	subwf	___fladd@b& (0+255),w,b
 26311  014DF6  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26312  014DF8  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 26313  014DFA  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26314  014DFC  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 26315  014DFE  512C               	movf	(___fladd@b+3)& (0+255),w,b
 26316  014E00  0A80               	xorlw	128
 26317  014E02  6F31               	movwf	??___fladd& (0+255),b
 26318  014E04  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26319  014E06  0A80               	xorlw	128
 26320  014E08  5931               	subwfb	??___fladd& (0+255),w,b
 26321  014E0A  B0D8               	btfsc	status,0,c
 26322  014E0C  D036               	goto	l2185
 26323                           
 26324                           ; BSR set to: 1
 26325  014E0E  C129  F131         	movff	___fladd@b,??___fladd
 26326  014E12  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 26327  014E16  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 26328  014E1A  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 26329  014E1E  1F31               	comf	??___fladd& (0+255),f,b
 26330  014E20  1F32               	comf	(??___fladd+1)& (0+255),f,b
 26331  014E22  1F33               	comf	(??___fladd+2)& (0+255),f,b
 26332  014E24  1F34               	comf	(??___fladd+3)& (0+255),f,b
 26333  014E26  2B31               	incf	??___fladd& (0+255),f,b
 26334  014E28  0E00               	movlw	0
 26335  014E2A  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 26336  014E2C  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 26337  014E2E  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 26338  014E30  512D               	movf	___fladd@a& (0+255),w,b
 26339  014E32  2531               	addwf	??___fladd& (0+255),w,b
 26340  014E34  6F35               	movwf	(??___fladd+4)& (0+255),b
 26341  014E36  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26342  014E38  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 26343  014E3A  6F36               	movwf	(??___fladd+5)& (0+255),b
 26344  014E3C  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26345  014E3E  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 26346  014E40  6F37               	movwf	(??___fladd+6)& (0+255),b
 26347  014E42  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26348  014E44  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 26349  014E46  6F38               	movwf	(??___fladd+7)& (0+255),b
 26350  014E48  0EFF               	movlw	255
 26351  014E4A  2535               	addwf	(??___fladd+4)& (0+255),w,b
 26352  014E4C  6F29               	movwf	___fladd@b& (0+255),b
 26353  014E4E  0EFF               	movlw	255
 26354  014E50  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 26355  014E52  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26356  014E54  0EFF               	movlw	255
 26357  014E56  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 26358  014E58  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26359  014E5A  0EFF               	movlw	255
 26360  014E5C  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 26361  014E5E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26362  014E60  0E80               	movlw	128
 26363  014E62  1B39               	xorwf	___fladd@signs& (0+255),f,b
 26364                           
 26365                           ; BSR set to: 1
 26366  014E64  6D3C               	negf	___fladd@grs& (0+255),b
 26367                           
 26368                           ; BSR set to: 1
 26369  014E66  513C               	movf	___fladd@grs& (0+255),w,b
 26370  014E68  A4D8               	btfss	status,2,c
 26371  014E6A  D00F               	goto	l2187
 26372                           
 26373                           ; BSR set to: 1
 26374  014E6C  0E01               	movlw	1
 26375  014E6E  2729               	addwf	___fladd@b& (0+255),f,b
 26376  014E70  0E00               	movlw	0
 26377  014E72  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26378  014E74  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26379  014E76  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26380                           
 26381                           ; BSR set to: 1
 26382  014E78  D008               	goto	l2187
 26383  014E7A                     l2185:
 26384                           
 26385                           ; BSR set to: 1
 26386                           
 26387                           ; BSR set to: 1
 26388  014E7A  512D               	movf	___fladd@a& (0+255),w,b
 26389  014E7C  5F29               	subwf	___fladd@b& (0+255),f,b
 26390  014E7E  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26391  014E80  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 26392  014E82  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26393  014E84  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 26394  014E86  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26395  014E88  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 26396  014E8A                     l2187:
 26397                           
 26398                           ; BSR set to: 1
 26399  014E8A  5129               	movf	___fladd@b& (0+255),w,b
 26400  014E8C  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 26401  014E8E  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 26402  014E90  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 26403  014E92  A4D8               	btfss	status,2,c
 26404  014E94  D01C               	goto	l2194
 26405                           
 26406                           ; BSR set to: 1
 26407  014E96  513C               	movf	___fladd@grs& (0+255),w,b
 26408  014E98  A4D8               	btfss	status,2,c
 26409  014E9A  D019               	goto	l2194
 26410                           
 26411                           ; BSR set to: 1
 26412  014E9C  0E00               	movlw	0
 26413  014E9E  6F29               	movwf	?___fladd& (0+255),b
 26414  014EA0  0E00               	movlw	0
 26415  014EA2  6F2A               	movwf	(?___fladd+1)& (0+255),b
 26416  014EA4  0E00               	movlw	0
 26417  014EA6  6F2B               	movwf	(?___fladd+2)& (0+255),b
 26418  014EA8  0E00               	movlw	0
 26419  014EAA  6F2C               	movwf	(?___fladd+3)& (0+255),b
 26420                           
 26421                           ; BSR set to: 1
 26422  014EAC  0012               	return	
 26423  014EAE                     
 26424                           ; BSR set to: 1
 26425                           
 26426                           ; BSR set to: 1
 26427  014EAE  90D8               	bcf	status,0,c
 26428  014EB0  3729               	rlcf	___fladd@b& (0+255),f,b
 26429  014EB2  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 26430  014EB4  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 26431  014EB6  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 26432                           
 26433                           ; BSR set to: 1
 26434  014EB8  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 26435                           
 26436                           ; BSR set to: 1
 26437  014EBA  8129               	bsf	___fladd@b& (0+255),0,b
 26438                           
 26439                           ; BSR set to: 1
 26440                           
 26441                           ; BSR set to: 1
 26442  014EBC  A13C               	btfss	___fladd@grs& (0+255),0,b
 26443  014EBE  D002               	goto	l2192
 26444                           
 26445                           ; BSR set to: 1
 26446  014EC0  80D8               	bsf	status,0,c
 26447  014EC2  D001               	goto	L7
 26448  014EC4                     l2192:
 26449                           
 26450                           ; BSR set to: 1
 26451                           
 26452                           ; BSR set to: 1
 26453  014EC4  90D8               	bcf	status,0,c
 26454  014EC6                     L7:
 26455  014EC6  373C               	rlcf	___fladd@grs& (0+255),f,b
 26456                           
 26457                           ; BSR set to: 1
 26458                           
 26459                           ; BSR set to: 1
 26460  014EC8  513B               	movf	___fladd@bexp& (0+255),w,b
 26461  014ECA  A4D8               	btfss	status,2,c
 26462                           
 26463                           ; BSR set to: 1
 26464  014ECC  073B               	decf	___fladd@bexp& (0+255),f,b
 26465  014ECE                     l2194:
 26466                           
 26467                           ; BSR set to: 1
 26468                           
 26469                           ; BSR set to: 1
 26470                           
 26471                           ; BSR set to: 1
 26472  014ECE  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 26473  014ED0  D7EE               	goto	l2190
 26474  014ED2                     u23800:
 26475                           
 26476                           ; BSR set to: 1
 26477                           
 26478                           ; BSR set to: 1
 26479                           
 26480                           ; BSR set to: 1
 26481  014ED2  0E00               	movlw	0
 26482  014ED4  6F3A               	movwf	___fladd@aexp& (0+255),b
 26483                           
 26484                           ; BSR set to: 1
 26485  014ED6  AF3C               	btfss	___fladd@grs& (0+255),7,b
 26486  014ED8  D00A               	goto	l2199
 26487                           
 26488                           ; BSR set to: 1
 26489  014EDA  C13C  F131         	movff	___fladd@grs,??___fladd
 26490  014EDE  0E7F               	movlw	127
 26491  014EE0  1731               	andwf	??___fladd& (0+255),f,b
 26492  014EE2  A4D8               	btfss	status,2,c
 26493  014EE4  D002               	goto	u23830
 26494                           
 26495                           ; BSR set to: 1
 26496                           
 26497                           ; BSR set to: 1
 26498  014EE6  A129               	btfss	___fladd@b& (0+255),0,b
 26499  014EE8  D002               	goto	l2199
 26500  014EEA                     u23830:
 26501                           
 26502                           ; BSR set to: 1
 26503  014EEA  0E01               	movlw	1
 26504  014EEC  6F3A               	movwf	___fladd@aexp& (0+255),b
 26505  014EEE                     l2199:
 26506                           
 26507                           ; BSR set to: 1
 26508                           
 26509                           ; BSR set to: 1
 26510                           
 26511                           ; BSR set to: 1
 26512  014EEE  513A               	movf	___fladd@aexp& (0+255),w,b
 26513  014EF0  B4D8               	btfsc	status,2,c
 26514  014EF2  D020               	goto	l2202
 26515                           
 26516                           ; BSR set to: 1
 26517  014EF4  0E01               	movlw	1
 26518  014EF6  2729               	addwf	___fladd@b& (0+255),f,b
 26519  014EF8  0E00               	movlw	0
 26520  014EFA  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26521  014EFC  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26522  014EFE  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26523                           
 26524                           ; BSR set to: 1
 26525  014F00  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 26526  014F02  D018               	goto	l2202
 26527                           
 26528                           ; BSR set to: 1
 26529  014F04  C129  F131         	movff	___fladd@b,??___fladd
 26530  014F08  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 26531  014F0C  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 26532  014F10  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 26533  014F14  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 26534  014F16  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 26535  014F18  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 26536  014F1A  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 26537  014F1C  3331               	rrcf	??___fladd& (0+255),f,b
 26538  014F1E  C131  F129         	movff	??___fladd,___fladd@b
 26539  014F22  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 26540  014F26  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 26541  014F2A  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 26542  014F2E  293B               	incf	___fladd@bexp& (0+255),w,b
 26543  014F30  A4D8               	btfss	status,2,c
 26544                           
 26545                           ; BSR set to: 1
 26546  014F32  2B3B               	incf	___fladd@bexp& (0+255),f,b
 26547  014F34                     l2202:
 26548                           
 26549                           ; BSR set to: 1
 26550                           
 26551                           ; BSR set to: 1
 26552                           
 26553                           ; BSR set to: 1
 26554                           
 26555                           ; BSR set to: 1
 26556  014F34  293B               	incf	___fladd@bexp& (0+255),w,b
 26557  014F36  B4D8               	btfsc	status,2,c
 26558  014F38  D003               	goto	u23880
 26559                           
 26560                           ; BSR set to: 1
 26561  014F3A  513B               	movf	___fladd@bexp& (0+255),w,b
 26562  014F3C  A4D8               	btfss	status,2,c
 26563  014F3E  D00D               	goto	l2206
 26564  014F40                     u23880:
 26565                           
 26566                           ; BSR set to: 1
 26567                           
 26568                           ; BSR set to: 1
 26569  014F40  0E00               	movlw	0
 26570  014F42  6F29               	movwf	___fladd@b& (0+255),b
 26571  014F44  0E00               	movlw	0
 26572  014F46  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26573  014F48  0E00               	movlw	0
 26574  014F4A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26575  014F4C  0E00               	movlw	0
 26576  014F4E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26577  014F50  513B               	movf	___fladd@bexp& (0+255),w,b
 26578  014F52  A4D8               	btfss	status,2,c
 26579  014F54  D002               	goto	l2206
 26580                           
 26581                           ; BSR set to: 1
 26582  014F56  0E00               	movlw	0
 26583  014F58  6F39               	movwf	___fladd@signs& (0+255),b
 26584  014F5A                     l2206:
 26585                           
 26586                           ; BSR set to: 1
 26587                           
 26588                           ; BSR set to: 1
 26589                           
 26590                           ; BSR set to: 1
 26591  014F5A  A13B               	btfss	___fladd@bexp& (0+255),0,b
 26592  014F5C  D002               	goto	l2207
 26593                           
 26594                           ; BSR set to: 1
 26595  014F5E  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 26596  014F60  D001               	goto	l2208
 26597  014F62                     l2207:
 26598                           
 26599                           ; BSR set to: 1
 26600                           
 26601                           ; BSR set to: 1
 26602  014F62  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 26603  014F64                     l2208:
 26604                           
 26605                           ; BSR set to: 1
 26606                           
 26607                           ; BSR set to: 1
 26608  014F64  90D8               	bcf	status,0,c
 26609  014F66  313B               	rrcf	___fladd@bexp& (0+255),w,b
 26610  014F68  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26611                           
 26612                           ; BSR set to: 1
 26613  014F6A  BF39               	btfsc	___fladd@signs& (0+255),7,b
 26614                           
 26615                           ; BSR set to: 1
 26616  014F6C  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 26617                           
 26618                           ; BSR set to: 1
 26619                           
 26620                           ; BSR set to: 1
 26621  014F6E  C129  F129         	movff	___fladd@b,?___fladd
 26622  014F72  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 26623  014F76  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 26624  014F7A  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 26625  014F7E  0012               	return	
 26626  014F80                     __end_of___fladd:
 26627                           	opt stack 0
 26628                           tblptru	equ	0xFF8
 26629                           tblptrh	equ	0xFF7
 26630                           tblptrl	equ	0xFF6
 26631                           tablat	equ	0xFF5
 26632                           prodh	equ	0xFF4
 26633                           prodl	equ	0xFF3
 26634                           intcon	equ	0xFF2
 26635                           indf0	equ	0xFEF
 26636                           postinc0	equ	0xFEE
 26637                           fsr0h	equ	0xFEA
 26638                           fsr0l	equ	0xFE9
 26639                           wreg	equ	0xFE8
 26640                           indf1	equ	0xFE7
 26641                           postdec1	equ	0xFE5
 26642                           plusw1	equ	0xFE3
 26643                           fsr1h	equ	0xFE2
 26644                           fsr1l	equ	0xFE1
 26645                           indf2	equ	0xFDF
 26646                           postinc2	equ	0xFDE
 26647                           postdec2	equ	0xFDD
 26648                           plusw2	equ	0xFDB
 26649                           fsr2h	equ	0xFDA
 26650                           fsr2l	equ	0xFD9
 26651                           status	equ	0xFD8
 26652                           
 26653 ;; *************** function ___flneg *****************
 26654 ;; Defined at:
 26655 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 26656 ;; Parameters:    Size  Location     Type
 26657 ;;  f1              4   37[BANK1 ] unsigned char 
 26658 ;; Auto vars:     Size  Location     Type
 26659 ;;		None
 26660 ;; Return value:  Size  Location     Type
 26661 ;;                  4   37[BANK1 ] unsigned char 
 26662 ;; Registers used:
 26663 ;;		wreg, status,2, status,0
 26664 ;; Tracked objects:
 26665 ;;		On entry : 0/0
 26666 ;;		On exit  : 0/0
 26667 ;;		Unchanged: 0/0
 26668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26669 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26672 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26673 ;;Total ram usage:        4 bytes
 26674 ;; Hardware stack levels used:    1
 26675 ;; Hardware stack levels required when called:   13
 26676 ;; This function calls:
 26677 ;;		Nothing
 26678 ;; This function is called by:
 26679 ;;		_ringBufferLUT
 26680 ;;		_printf
 26681 ;; This function uses a non-reentrant model
 26682 ;;
 26683                           
 26684                           	psect	text46
 26685  018FA2                     __ptext46:
 26686                           	opt stack 0
 26687  018FA2                     ___flneg:
 26688                           	opt stack 14
 26689                           
 26690                           ; BSR set to: 1
 26691                           ;incstack = 0
 26692  018FA2  0101               	movlb	1	; () banked
 26693  018FA4  5125               	movf	___flneg@f1& (0+255),w,b
 26694  018FA6  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 26695  018FA8  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 26696  018FAA  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 26697  018FAC  B4D8               	btfsc	status,2,c
 26698  018FAE  D008               	goto	l1896
 26699                           
 26700                           ; BSR set to: 1
 26701  018FB0  0E00               	movlw	0
 26702  018FB2  1B25               	xorwf	___flneg@f1& (0+255),f,b
 26703  018FB4  0E00               	movlw	0
 26704  018FB6  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 26705  018FB8  0E00               	movlw	0
 26706  018FBA  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 26707  018FBC  0E80               	movlw	128
 26708  018FBE  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 26709  018FC0                     l1896:
 26710                           
 26711                           ; BSR set to: 1
 26712                           
 26713                           ; BSR set to: 1
 26714  018FC0  C125  F125         	movff	___flneg@f1,?___flneg
 26715  018FC4  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 26716  018FC8  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 26717  018FCC  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 26718  018FD0  0012               	return	
 26719  018FD2                     __end_of___flneg:
 26720                           	opt stack 0
 26721                           tblptru	equ	0xFF8
 26722                           tblptrh	equ	0xFF7
 26723                           tblptrl	equ	0xFF6
 26724                           tablat	equ	0xFF5
 26725                           prodh	equ	0xFF4
 26726                           prodl	equ	0xFF3
 26727                           intcon	equ	0xFF2
 26728                           indf0	equ	0xFEF
 26729                           postinc0	equ	0xFEE
 26730                           fsr0h	equ	0xFEA
 26731                           fsr0l	equ	0xFE9
 26732                           wreg	equ	0xFE8
 26733                           indf1	equ	0xFE7
 26734                           postdec1	equ	0xFE5
 26735                           plusw1	equ	0xFE3
 26736                           fsr1h	equ	0xFE2
 26737                           fsr1l	equ	0xFE1
 26738                           indf2	equ	0xFDF
 26739                           postinc2	equ	0xFDE
 26740                           postdec2	equ	0xFDD
 26741                           plusw2	equ	0xFDB
 26742                           fsr2h	equ	0xFDA
 26743                           fsr2l	equ	0xFD9
 26744                           status	equ	0xFD8
 26745                           
 26746 ;; *************** function _saveSRAMMaxToEEPROM *****************
 26747 ;; Defined at:
 26748 ;;		line 152 in file "main.c"
 26749 ;; Parameters:    Size  Location     Type
 26750 ;;		None
 26751 ;; Auto vars:     Size  Location     Type
 26752 ;;		None
 26753 ;; Return value:  Size  Location     Type
 26754 ;;                  1    wreg      void 
 26755 ;; Registers used:
 26756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26757 ;; Tracked objects:
 26758 ;;		On entry : 0/0
 26759 ;;		On exit  : 0/0
 26760 ;;		Unchanged: 0/0
 26761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26766 ;;Total ram usage:        0 bytes
 26767 ;; Hardware stack levels used:    1
 26768 ;; Hardware stack levels required when called:   15
 26769 ;; This function calls:
 26770 ;;		___flge
 26771 ;;		_writeDoubleToEEPROM
 26772 ;; This function is called by:
 26773 ;;		_main
 26774 ;; This function uses a non-reentrant model
 26775 ;;
 26776                           
 26777                           	psect	text47
 26778  016662                     __ptext47:
 26779                           	opt stack 0
 26780  016662                     _saveSRAMMaxToEEPROM:
 26781                           	opt stack 15
 26782                           
 26783                           ;main.c: 156: if (Irms > max_Irms) {
 26784                           
 26785                           ; BSR set to: 1
 26786                           ;incstack = 0
 26787  016662  C214  F117         	movff	_max_Irms,___flge@ff1	;volatile
 26788  016666  C215  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 26789  01666A  C216  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 26790  01666E  C217  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 26791  016672  C1C3  F11B         	movff	_Irms,___flge@ff2	;volatile
 26792  016676  C1C4  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 26793  01667A  C1C5  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 26794  01667E  C1C6  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 26795  016682  ECE4  F0BA         	call	___flge	;wreg free
 26796  016686  0101               	movlb	1	; () banked
 26797  016688  B0D8               	btfsc	status,0,c
 26798  01668A  D01E               	goto	l981
 26799                           
 26800                           ; BSR set to: 1
 26801                           ;main.c: 157: writeDoubleToEEPROM(Irms, max_Irms_address);
 26802  01668C  C1C3  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 26803  016690  C1C4  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 26804  016694  C1C5  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 26805  016698  C1C6  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 26806  01669C  0EFD               	movlw	low _max_Irms_address
 26807  01669E  6EF6               	movwf	tblptrl,c
 26808  0166A0                     	if	1	;There is more than 1 active tblptr byte
 26809  0166A0  0ED8               	movlw	high _max_Irms_address
 26810  0166A2  6EF7               	movwf	tblptrh,c
 26811  0166A4                     	endif
 26812  0166A4                     	if	1	;There are 3 active tblptr bytes
 26813  0166A4  0E00               	movlw	low (_max_Irms_address shr (0+16))
 26814  0166A6  6EF8               	movwf	tblptru,c
 26815  0166A8                     	endif
 26816  0166A8  0009               	tblrd		*+
 26817  0166AA  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 26818  0166AE  000A               	tblrd		*-
 26819  0166B0  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 26820  0166B4  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 26821                           
 26822                           ;main.c: 158: max_Irms = Irms;
 26823  0166B8  C1C3  F214         	movff	_Irms,_max_Irms	;volatile
 26824  0166BC  C1C4  F215         	movff	_Irms+1,_max_Irms+1	;volatile
 26825  0166C0  C1C5  F216         	movff	_Irms+2,_max_Irms+2	;volatile
 26826  0166C4  C1C6  F217         	movff	_Irms+3,_max_Irms+3	;volatile
 26827  0166C8                     l981:
 26828                           
 26829                           ;main.c: 159: }
 26830                           ;main.c: 161: if (Avg_Power > max_Power) {
 26831  0166C8  C210  F117         	movff	_max_Power,___flge@ff1	;volatile
 26832  0166CC  C211  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 26833  0166D0  C212  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 26834  0166D4  C213  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 26835  0166D8  C1BB  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 26836  0166DC  C1BC  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 26837  0166E0  C1BD  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 26838  0166E4  C1BE  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 26839  0166E8  ECE4  F0BA         	call	___flge	;wreg free
 26840  0166EC  0101               	movlb	1	; () banked
 26841  0166EE  B0D8               	btfsc	status,0,c
 26842  0166F0  D01E               	goto	l982
 26843                           
 26844                           ; BSR set to: 1
 26845                           ;main.c: 162: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 26846  0166F2  C1BB  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 26847  0166F6  C1BC  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 26848  0166FA  C1BD  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 26849  0166FE  C1BE  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 26850  016702  0EFB               	movlw	low _max_Power_address
 26851  016704  6EF6               	movwf	tblptrl,c
 26852  016706                     	if	1	;There is more than 1 active tblptr byte
 26853  016706  0ED8               	movlw	high _max_Power_address
 26854  016708  6EF7               	movwf	tblptrh,c
 26855  01670A                     	endif
 26856  01670A                     	if	1	;There are 3 active tblptr bytes
 26857  01670A  0E00               	movlw	low (_max_Power_address shr (0+16))
 26858  01670C  6EF8               	movwf	tblptru,c
 26859  01670E                     	endif
 26860  01670E  0009               	tblrd		*+
 26861  016710  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 26862  016714  000A               	tblrd		*-
 26863  016716  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 26864  01671A  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 26865                           
 26866                           ;main.c: 163: max_Power = Avg_Power;
 26867  01671E  C1BB  F210         	movff	_Avg_Power,_max_Power	;volatile
 26868  016722  C1BC  F211         	movff	_Avg_Power+1,_max_Power+1	;volatile
 26869  016726  C1BD  F212         	movff	_Avg_Power+2,_max_Power+2	;volatile
 26870  01672A  C1BE  F213         	movff	_Avg_Power+3,_max_Power+3	;volatile
 26871  01672E                     l982:
 26872                           
 26873                           ;main.c: 164: }
 26874                           ;main.c: 166: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 26875  01672E  C20C  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 26876  016732  C20D  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 26877  016736  C20E  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 26878  01673A  C20F  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 26879  01673E  C1D3  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 26880  016742  C1D4  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 26881  016746  C1D5  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 26882  01674A  C1D6  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 26883  01674E  ECE4  F0BA         	call	___flge	;wreg free
 26884  016752  0101               	movlb	1	; () banked
 26885  016754  B0D8               	btfsc	status,0,c
 26886  016756  D01E               	goto	l983
 26887                           
 26888                           ; BSR set to: 1
 26889                           ;main.c: 167: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 26890  016758  C1D3  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 26891  01675C  C1D4  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 26892  016760  C1D5  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 26893  016764  C1D6  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 26894  016768  0EF9               	movlw	low _max_POS3P3_ADC_Result_address
 26895  01676A  6EF6               	movwf	tblptrl,c
 26896  01676C                     	if	1	;There is more than 1 active tblptr byte
 26897  01676C  0ED8               	movlw	high _max_POS3P3_ADC_Result_address
 26898  01676E  6EF7               	movwf	tblptrh,c
 26899  016770                     	endif
 26900  016770                     	if	1	;There are 3 active tblptr bytes
 26901  016770  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 26902  016772  6EF8               	movwf	tblptru,c
 26903  016774                     	endif
 26904  016774  0009               	tblrd		*+
 26905  016776  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 26906  01677A  000A               	tblrd		*-
 26907  01677C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 26908  016780  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 26909                           
 26910                           ;main.c: 168: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 26911  016784  C1D3  F20C         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 26912  016788  C1D4  F20D         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 26913  01678C  C1D5  F20E         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 26914  016790  C1D6  F20F         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 26915  016794                     l983:
 26916                           
 26917                           ;main.c: 169: }
 26918                           ;main.c: 171: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 26919  016794  C208  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 26920  016798  C209  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 26921  01679C  C20A  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 26922  0167A0  C20B  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 26923  0167A4  C1CF  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 26924  0167A8  C1D0  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 26925  0167AC  C1D1  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 26926  0167B0  C1D2  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 26927  0167B4  ECE4  F0BA         	call	___flge	;wreg free
 26928  0167B8  0101               	movlb	1	; () banked
 26929  0167BA  B0D8               	btfsc	status,0,c
 26930  0167BC  D01E               	goto	l984
 26931                           
 26932                           ; BSR set to: 1
 26933                           ;main.c: 172: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 26934  0167BE  C1CF  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 26935  0167C2  C1D0  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 26936  0167C6  C1D1  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 26937  0167CA  C1D2  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 26938  0167CE  0EF7               	movlw	low _max_POS12_ADC_Result_address
 26939  0167D0  6EF6               	movwf	tblptrl,c
 26940  0167D2                     	if	1	;There is more than 1 active tblptr byte
 26941  0167D2  0ED8               	movlw	high _max_POS12_ADC_Result_address
 26942  0167D4  6EF7               	movwf	tblptrh,c
 26943  0167D6                     	endif
 26944  0167D6                     	if	1	;There are 3 active tblptr bytes
 26945  0167D6  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 26946  0167D8  6EF8               	movwf	tblptru,c
 26947  0167DA                     	endif
 26948  0167DA  0009               	tblrd		*+
 26949  0167DC  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 26950  0167E0  000A               	tblrd		*-
 26951  0167E2  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 26952  0167E6  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 26953                           
 26954                           ;main.c: 173: max_POS12_ADC_Result = POS12_ADC_Result;
 26955  0167EA  C1CF  F208         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 26956  0167EE  C1D0  F209         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 26957  0167F2  C1D1  F20A         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 26958  0167F6  C1D2  F20B         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 26959  0167FA                     l984:
 26960                           
 26961                           ;main.c: 174: }
 26962                           ;main.c: 176: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 26963  0167FA  C204  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 26964  0167FE  C205  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 26965  016802  C206  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 26966  016806  C207  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 26967  01680A  C1CB  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 26968  01680E  C1CC  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 26969  016812  C1CD  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 26970  016816  C1CE  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 26971  01681A  ECE4  F0BA         	call	___flge	;wreg free
 26972  01681E  0101               	movlb	1	; () banked
 26973  016820  B0D8               	btfsc	status,0,c
 26974  016822  D01E               	goto	l985
 26975                           
 26976                           ; BSR set to: 1
 26977                           ;main.c: 177: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 26978  016824  C1CB  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 26979  016828  C1CC  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 26980  01682C  C1CD  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 26981  016830  C1CE  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 26982  016834  0EF5               	movlw	low _max_Temp_ADC_Result_address
 26983  016836  6EF6               	movwf	tblptrl,c
 26984  016838                     	if	1	;There is more than 1 active tblptr byte
 26985  016838  0ED8               	movlw	high _max_Temp_ADC_Result_address
 26986  01683A  6EF7               	movwf	tblptrh,c
 26987  01683C                     	endif
 26988  01683C                     	if	1	;There are 3 active tblptr bytes
 26989  01683C  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 26990  01683E  6EF8               	movwf	tblptru,c
 26991  016840                     	endif
 26992  016840  0009               	tblrd		*+
 26993  016842  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 26994  016846  000A               	tblrd		*-
 26995  016848  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 26996  01684C  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 26997                           
 26998                           ;main.c: 178: max_Temp_ADC_Result = Temp_ADC_Result;
 26999  016850  C1CB  F204         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 27000  016854  C1CC  F205         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 27001  016858  C1CD  F206         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 27002  01685C  C1CE  F207         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 27003  016860                     l985:
 27004                           
 27005                           ;main.c: 179: }
 27006                           ;main.c: 181: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 27007  016860  C200  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 27008  016864  C201  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 27009  016868  C202  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 27010  01686C  C203  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 27011  016870  C1E4  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 27012  016874  C1E5  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 27013  016878  C1E6  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 27014  01687C  C1E7  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 27015  016880  ECE4  F0BA         	call	___flge	;wreg free
 27016  016884  0101               	movlb	1	; () banked
 27017  016886  B0D8               	btfsc	status,0,c
 27018  016888  0012               	return	
 27019                           
 27020                           ; BSR set to: 1
 27021                           ;main.c: 182: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 27022  01688A  C1E4  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27023  01688E  C1E5  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27024  016892  C1E6  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27025  016896  C1E7  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27026  01689A  0EF3               	movlw	low _max_FVR_ADC_Result_address
 27027  01689C  6EF6               	movwf	tblptrl,c
 27028  01689E                     	if	1	;There is more than 1 active tblptr byte
 27029  01689E  0ED8               	movlw	high _max_FVR_ADC_Result_address
 27030  0168A0  6EF7               	movwf	tblptrh,c
 27031  0168A2                     	endif
 27032  0168A2                     	if	1	;There are 3 active tblptr bytes
 27033  0168A2  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 27034  0168A4  6EF8               	movwf	tblptru,c
 27035  0168A6                     	endif
 27036  0168A6  0009               	tblrd		*+
 27037  0168A8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27038  0168AC  000A               	tblrd		*-
 27039  0168AE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27040  0168B2  EC0B  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 27041                           
 27042                           ;main.c: 183: max_FVR_ADC_Result = FVR_ADC_Result;
 27043  0168B6  C1E4  F200         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 27044  0168BA  C1E5  F201         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 27045  0168BE  C1E6  F202         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 27046  0168C2  C1E7  F203         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 27047  0168C6  0012               	return	
 27048  0168C8                     __end_of_saveSRAMMaxToEEPROM:
 27049                           	opt stack 0
 27050                           tblptru	equ	0xFF8
 27051                           tblptrh	equ	0xFF7
 27052                           tblptrl	equ	0xFF6
 27053                           tablat	equ	0xFF5
 27054                           prodh	equ	0xFF4
 27055                           prodl	equ	0xFF3
 27056                           intcon	equ	0xFF2
 27057                           indf0	equ	0xFEF
 27058                           postinc0	equ	0xFEE
 27059                           fsr0h	equ	0xFEA
 27060                           fsr0l	equ	0xFE9
 27061                           wreg	equ	0xFE8
 27062                           indf1	equ	0xFE7
 27063                           postdec1	equ	0xFE5
 27064                           plusw1	equ	0xFE3
 27065                           fsr1h	equ	0xFE2
 27066                           fsr1l	equ	0xFE1
 27067                           indf2	equ	0xFDF
 27068                           postinc2	equ	0xFDE
 27069                           postdec2	equ	0xFDD
 27070                           plusw2	equ	0xFDB
 27071                           fsr2h	equ	0xFDA
 27072                           fsr2l	equ	0xFD9
 27073                           status	equ	0xFD8
 27074                           
 27075 ;; *************** function _writeDoubleToEEPROM *****************
 27076 ;; Defined at:
 27077 ;;		line 6 in file "double_to_EEPROM.c"
 27078 ;; Parameters:    Size  Location     Type
 27079 ;;  input_double    4   27[BANK1 ] void 
 27080 ;;  starting_add    2   31[BANK1 ] unsigned int 
 27081 ;; Auto vars:     Size  Location     Type
 27082 ;;  byte_index      2   37[BANK1 ] int 
 27083 ;;  input_data      4   33[BANK1 ] struct .
 27084 ;; Return value:  Size  Location     Type
 27085 ;;                  1    wreg      void 
 27086 ;; Registers used:
 27087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27088 ;; Tracked objects:
 27089 ;;		On entry : 0/0
 27090 ;;		On exit  : 0/0
 27091 ;;		Unchanged: 0/0
 27092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27093 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27094 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27096 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27097 ;;Total ram usage:       12 bytes
 27098 ;; Hardware stack levels used:    1
 27099 ;; Hardware stack levels required when called:   14
 27100 ;; This function calls:
 27101 ;;		_DATAEE_WriteByte
 27102 ;; This function is called by:
 27103 ;;		_saveSRAMMaxToEEPROM
 27104 ;;		_ringBufferLUT
 27105 ;; This function uses a non-reentrant model
 27106 ;;
 27107                           
 27108                           	psect	text48
 27109  018A16                     __ptext48:
 27110                           	opt stack 0
 27111  018A16                     _writeDoubleToEEPROM:
 27112                           	opt stack 14
 27113                           
 27114                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 27115                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 27116                           
 27117                           ;incstack = 0
 27118  018A16  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 27119  018A1A  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 27120  018A1E  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 27121  018A22  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 27122                           
 27123                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 27124  018A26  0E00               	movlw	0
 27125  018A28  0101               	movlb	1	; () banked
 27126  018A2A  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 27127  018A2C  0E00               	movlw	0
 27128  018A2E  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 27129  018A30                     l19270:
 27130                           
 27131                           ; BSR set to: 1
 27132  018A30  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27133  018A32  E118               	bnz	l1424
 27134  018A34  0E04               	movlw	4
 27135  018A36  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27136  018A38  B0D8               	btfsc	status,0,c
 27137  018A3A  0012               	return	
 27138                           
 27139                           ; BSR set to: 1
 27140                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 27141                           
 27142                           ; BSR set to: 1
 27143                           
 27144                           ; BSR set to: 1
 27145  018A3C  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 27146  018A3E  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27147  018A40  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 27148  018A42  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 27149  018A44  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27150  018A46  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 27151  018A48  0E21               	movlw	low writeDoubleToEEPROM@input_data
 27152  018A4A  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27153  018A4C  6ED9               	movwf	fsr2l,c
 27154  018A4E  0E01               	movlw	high writeDoubleToEEPROM@input_data
 27155  018A50  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27156  018A52  6EDA               	movwf	fsr2h,c
 27157  018A54  50DF               	movf	indf2,w,c
 27158  018A56  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 27159  018A58  ECBF  F0C6         	call	_DATAEE_WriteByte	;wreg free
 27160  018A5C  0101               	movlb	1	; () banked
 27161  018A5E  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 27162  018A60  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 27163  018A62  D7E6               	goto	l19270
 27164  018A64                     l1424:
 27165                           
 27166                           ; BSR set to: 1
 27167  018A64  0012               	return		;funcret
 27168  018A66                     __end_of_writeDoubleToEEPROM:
 27169                           	opt stack 0
 27170                           tblptru	equ	0xFF8
 27171                           tblptrh	equ	0xFF7
 27172                           tblptrl	equ	0xFF6
 27173                           tablat	equ	0xFF5
 27174                           prodh	equ	0xFF4
 27175                           prodl	equ	0xFF3
 27176                           intcon	equ	0xFF2
 27177                           indf0	equ	0xFEF
 27178                           postinc0	equ	0xFEE
 27179                           fsr0h	equ	0xFEA
 27180                           fsr0l	equ	0xFE9
 27181                           wreg	equ	0xFE8
 27182                           indf1	equ	0xFE7
 27183                           postdec1	equ	0xFE5
 27184                           plusw1	equ	0xFE3
 27185                           fsr1h	equ	0xFE2
 27186                           fsr1l	equ	0xFE1
 27187                           indf2	equ	0xFDF
 27188                           postinc2	equ	0xFDE
 27189                           postdec2	equ	0xFDD
 27190                           plusw2	equ	0xFDB
 27191                           fsr2h	equ	0xFDA
 27192                           fsr2l	equ	0xFD9
 27193                           status	equ	0xFD8
 27194                           
 27195 ;; *************** function _DATAEE_WriteByte *****************
 27196 ;; Defined at:
 27197 ;;		line 168 in file "mcc_generated_files/memory.c"
 27198 ;; Parameters:    Size  Location     Type
 27199 ;;  bAdd            2   23[BANK1 ] unsigned int 
 27200 ;;  bData           1   25[BANK1 ] unsigned char 
 27201 ;; Auto vars:     Size  Location     Type
 27202 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 27203 ;; Return value:  Size  Location     Type
 27204 ;;                  1    wreg      void 
 27205 ;; Registers used:
 27206 ;;		wreg, status,2, status,0
 27207 ;; Tracked objects:
 27208 ;;		On entry : 0/0
 27209 ;;		On exit  : 0/0
 27210 ;;		Unchanged: 0/0
 27211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27212 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27213 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27215 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27216 ;;Total ram usage:        4 bytes
 27217 ;; Hardware stack levels used:    1
 27218 ;; Hardware stack levels required when called:   13
 27219 ;; This function calls:
 27220 ;;		Nothing
 27221 ;; This function is called by:
 27222 ;;		_writeDoubleToEEPROM
 27223 ;; This function uses a non-reentrant model
 27224 ;;
 27225                           
 27226                           	psect	text49
 27227  018D7E                     __ptext49:
 27228                           	opt stack 0
 27229  018D7E                     _DATAEE_WriteByte:
 27230                           	opt stack 14
 27231                           
 27232                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 27233                           
 27234                           ; BSR set to: 1
 27235                           ;incstack = 0
 27236  018D7E  0E00               	movlw	0
 27237  018D80  BEF2               	btfsc	intcon,7,c	;volatile
 27238  018D82  0E01               	movlw	1
 27239  018D84  0101               	movlb	1	; () banked
 27240  018D86  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 27241                           
 27242                           ; BSR set to: 1
 27243                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 27244  018D88  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 27245  018D8A  0B03               	andlw	3
 27246  018D8C  6E75               	movwf	3957,c	;volatile
 27247                           
 27248                           ; BSR set to: 1
 27249                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 27250  018D8E  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 27251                           
 27252                           ; BSR set to: 1
 27253                           ;memory.c: 174: NVMDAT = bData;
 27254  018D92  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 27255                           
 27256                           ; BSR set to: 1
 27257                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 27258  018D96  0E3F               	movlw	-193
 27259  018D98  1677               	andwf	3959,f,c	;volsfr
 27260                           
 27261                           ; BSR set to: 1
 27262                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 27263  018D9A  8477               	bsf	3959,2,c	;volsfr
 27264                           
 27265                           ; BSR set to: 1
 27266                           ;memory.c: 177: INTCONbits.GIE = 0;
 27267  018D9C  9EF2               	bcf	intcon,7,c	;volatile
 27268                           
 27269                           ; BSR set to: 1
 27270                           ;memory.c: 178: NVMCON2 = 0x55;
 27271  018D9E  0E55               	movlw	85
 27272  018DA0  6E78               	movwf	3960,c	;volsfr
 27273                           
 27274                           ; BSR set to: 1
 27275                           ;memory.c: 179: NVMCON2 = 0xAA;
 27276  018DA2  0EAA               	movlw	170
 27277  018DA4  6E78               	movwf	3960,c	;volsfr
 27278                           
 27279                           ; BSR set to: 1
 27280                           ;memory.c: 180: NVMCON1bits.WR = 1;
 27281  018DA6  8277               	bsf	3959,1,c	;volsfr
 27282  018DA8                     
 27283                           ; BSR set to: 1
 27284                           ;memory.c: 183: {
 27285  018DA8  B277               	btfsc	3959,1,c	;volsfr
 27286  018DAA  D7FE               	goto	l789
 27287                           
 27288                           ;memory.c: 184: }
 27289                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 27290  018DAC  9477               	bcf	3959,2,c	;volsfr
 27291                           
 27292                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 27293  018DAE  0101               	movlb	1	; () banked
 27294  018DB0  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 27295  018DB2  D002               	bra	u25615
 27296  018DB4  9EF2               	bcf	intcon,7,c	;volatile
 27297  018DB6  D001               	bra	u25616
 27298  018DB8                     u25615:
 27299  018DB8  8EF2               	bsf	intcon,7,c	;volatile
 27300  018DBA                     u25616:
 27301  018DBA  0012               	return		;funcret
 27302  018DBC                     __end_of_DATAEE_WriteByte:
 27303                           	opt stack 0
 27304                           tblptru	equ	0xFF8
 27305                           tblptrh	equ	0xFF7
 27306                           tblptrl	equ	0xFF6
 27307                           tablat	equ	0xFF5
 27308                           prodh	equ	0xFF4
 27309                           prodl	equ	0xFF3
 27310                           intcon	equ	0xFF2
 27311                           indf0	equ	0xFEF
 27312                           postinc0	equ	0xFEE
 27313                           fsr0h	equ	0xFEA
 27314                           fsr0l	equ	0xFE9
 27315                           wreg	equ	0xFE8
 27316                           indf1	equ	0xFE7
 27317                           postdec1	equ	0xFE5
 27318                           plusw1	equ	0xFE3
 27319                           fsr1h	equ	0xFE2
 27320                           fsr1l	equ	0xFE1
 27321                           indf2	equ	0xFDF
 27322                           postinc2	equ	0xFDE
 27323                           postdec2	equ	0xFDD
 27324                           plusw2	equ	0xFDB
 27325                           fsr2h	equ	0xFDA
 27326                           fsr2l	equ	0xFD9
 27327                           status	equ	0xFD8
 27328                           
 27329 ;; *************** function ___flge *****************
 27330 ;; Defined at:
 27331 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 27332 ;; Parameters:    Size  Location     Type
 27333 ;;  ff1             4   23[BANK1 ] void 
 27334 ;;  ff2             4   27[BANK1 ] void 
 27335 ;; Auto vars:     Size  Location     Type
 27336 ;;		None
 27337 ;; Return value:  Size  Location     Type
 27338 ;;		None               void
 27339 ;; Registers used:
 27340 ;;		wreg, status,2, status,0
 27341 ;; Tracked objects:
 27342 ;;		On entry : 0/0
 27343 ;;		On exit  : 0/0
 27344 ;;		Unchanged: 0/0
 27345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27346 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27348 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27349 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27350 ;;Total ram usage:       12 bytes
 27351 ;; Hardware stack levels used:    1
 27352 ;; Hardware stack levels required when called:   13
 27353 ;; This function calls:
 27354 ;;		Nothing
 27355 ;; This function is called by:
 27356 ;;		_saveSRAMMaxToEEPROM
 27357 ;;		_printf
 27358 ;; This function uses a non-reentrant model
 27359 ;;
 27360                           
 27361                           	psect	text50
 27362  0175C8                     __ptext50:
 27363                           	opt stack 0
 27364  0175C8                     ___flge:
 27365                           	opt stack 14
 27366                           
 27367                           ;incstack = 0
 27368  0175C8  0E00               	movlw	0
 27369  0175CA  0101               	movlb	1	; () banked
 27370  0175CC  1517               	andwf	___flge@ff1& (0+255),w,b
 27371  0175CE  6F1F               	movwf	??___flge& (0+255),b
 27372  0175D0  0E00               	movlw	0
 27373  0175D2  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 27374  0175D4  6F20               	movwf	(??___flge+1)& (0+255),b
 27375  0175D6  0E80               	movlw	128
 27376  0175D8  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 27377  0175DA  6F21               	movwf	(??___flge+2)& (0+255),b
 27378  0175DC  0E7F               	movlw	127
 27379  0175DE  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 27380  0175E0  6F22               	movwf	(??___flge+3)& (0+255),b
 27381  0175E2  511F               	movf	??___flge& (0+255),w,b
 27382  0175E4  1120               	iorwf	(??___flge+1)& (0+255),w,b
 27383  0175E6  1121               	iorwf	(??___flge+2)& (0+255),w,b
 27384  0175E8  1122               	iorwf	(??___flge+3)& (0+255),w,b
 27385  0175EA  A4D8               	btfss	status,2,c
 27386  0175EC  D008               	goto	l1889
 27387                           
 27388                           ; BSR set to: 1
 27389  0175EE  0E00               	movlw	0
 27390  0175F0  6F17               	movwf	___flge@ff1& (0+255),b
 27391  0175F2  0E00               	movlw	0
 27392  0175F4  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 27393  0175F6  0E00               	movlw	0
 27394  0175F8  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 27395  0175FA  0E00               	movlw	0
 27396  0175FC  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 27397  0175FE                     l1889:
 27398                           
 27399                           ; BSR set to: 1
 27400                           
 27401                           ; BSR set to: 1
 27402  0175FE  0E00               	movlw	0
 27403  017600  151B               	andwf	___flge@ff2& (0+255),w,b
 27404  017602  6F1F               	movwf	??___flge& (0+255),b
 27405  017604  0E00               	movlw	0
 27406  017606  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 27407  017608  6F20               	movwf	(??___flge+1)& (0+255),b
 27408  01760A  0E80               	movlw	128
 27409  01760C  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 27410  01760E  6F21               	movwf	(??___flge+2)& (0+255),b
 27411  017610  0E7F               	movlw	127
 27412  017612  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 27413  017614  6F22               	movwf	(??___flge+3)& (0+255),b
 27414  017616  511F               	movf	??___flge& (0+255),w,b
 27415  017618  1120               	iorwf	(??___flge+1)& (0+255),w,b
 27416  01761A  1121               	iorwf	(??___flge+2)& (0+255),w,b
 27417  01761C  1122               	iorwf	(??___flge+3)& (0+255),w,b
 27418  01761E  A4D8               	btfss	status,2,c
 27419  017620  D008               	goto	l1890
 27420                           
 27421                           ; BSR set to: 1
 27422  017622  0E00               	movlw	0
 27423  017624  6F1B               	movwf	___flge@ff2& (0+255),b
 27424  017626  0E00               	movlw	0
 27425  017628  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 27426  01762A  0E00               	movlw	0
 27427  01762C  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 27428  01762E  0E00               	movlw	0
 27429  017630  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 27430  017632                     l1890:
 27431                           
 27432                           ; BSR set to: 1
 27433                           
 27434                           ; BSR set to: 1
 27435  017632  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 27436  017634  D01D               	goto	l1891
 27437                           
 27438                           ; BSR set to: 1
 27439  017636  C117  F11F         	movff	___flge@ff1,??___flge
 27440  01763A  C118  F120         	movff	___flge@ff1+1,??___flge+1
 27441  01763E  C119  F121         	movff	___flge@ff1+2,??___flge+2
 27442  017642  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 27443  017646  1F1F               	comf	??___flge& (0+255),f,b
 27444  017648  1F20               	comf	(??___flge+1)& (0+255),f,b
 27445  01764A  1F21               	comf	(??___flge+2)& (0+255),f,b
 27446  01764C  1F22               	comf	(??___flge+3)& (0+255),f,b
 27447  01764E  2B1F               	incf	??___flge& (0+255),f,b
 27448  017650  0E00               	movlw	0
 27449  017652  2320               	addwfc	(??___flge+1)& (0+255),f,b
 27450  017654  2321               	addwfc	(??___flge+2)& (0+255),f,b
 27451  017656  2322               	addwfc	(??___flge+3)& (0+255),f,b
 27452  017658  0E00               	movlw	0
 27453  01765A  251F               	addwf	??___flge& (0+255),w,b
 27454  01765C  6F17               	movwf	___flge@ff1& (0+255),b
 27455  01765E  0E00               	movlw	0
 27456  017660  2120               	addwfc	(??___flge+1)& (0+255),w,b
 27457  017662  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 27458  017664  0E00               	movlw	0
 27459  017666  2121               	addwfc	(??___flge+2)& (0+255),w,b
 27460  017668  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 27461  01766A  0E80               	movlw	128
 27462  01766C  2122               	addwfc	(??___flge+3)& (0+255),w,b
 27463  01766E  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 27464  017670                     l1891:
 27465                           
 27466                           ; BSR set to: 1
 27467                           
 27468                           ; BSR set to: 1
 27469  017670  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 27470  017672  D01D               	goto	l1892
 27471                           
 27472                           ; BSR set to: 1
 27473  017674  C11B  F11F         	movff	___flge@ff2,??___flge
 27474  017678  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 27475  01767C  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 27476  017680  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 27477  017684  1F1F               	comf	??___flge& (0+255),f,b
 27478  017686  1F20               	comf	(??___flge+1)& (0+255),f,b
 27479  017688  1F21               	comf	(??___flge+2)& (0+255),f,b
 27480  01768A  1F22               	comf	(??___flge+3)& (0+255),f,b
 27481  01768C  2B1F               	incf	??___flge& (0+255),f,b
 27482  01768E  0E00               	movlw	0
 27483  017690  2320               	addwfc	(??___flge+1)& (0+255),f,b
 27484  017692  2321               	addwfc	(??___flge+2)& (0+255),f,b
 27485  017694  2322               	addwfc	(??___flge+3)& (0+255),f,b
 27486  017696  0E00               	movlw	0
 27487  017698  251F               	addwf	??___flge& (0+255),w,b
 27488  01769A  6F1B               	movwf	___flge@ff2& (0+255),b
 27489  01769C  0E00               	movlw	0
 27490  01769E  2120               	addwfc	(??___flge+1)& (0+255),w,b
 27491  0176A0  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 27492  0176A2  0E00               	movlw	0
 27493  0176A4  2121               	addwfc	(??___flge+2)& (0+255),w,b
 27494  0176A6  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 27495  0176A8  0E80               	movlw	128
 27496  0176AA  2122               	addwfc	(??___flge+3)& (0+255),w,b
 27497  0176AC  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 27498  0176AE                     l1892:
 27499                           
 27500                           ; BSR set to: 1
 27501  0176AE  0E00               	movlw	0
 27502  0176B0  1B17               	xorwf	___flge@ff1& (0+255),f,b
 27503  0176B2  0E00               	movlw	0
 27504  0176B4  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 27505  0176B6  0E00               	movlw	0
 27506  0176B8  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 27507  0176BA  0E80               	movlw	128
 27508  0176BC  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 27509  0176BE  0E00               	movlw	0
 27510  0176C0  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 27511  0176C2  0E00               	movlw	0
 27512  0176C4  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 27513  0176C6  0E00               	movlw	0
 27514  0176C8  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 27515  0176CA  0E80               	movlw	128
 27516  0176CC  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 27517  0176CE  511B               	movf	___flge@ff2& (0+255),w,b
 27518  0176D0  5D17               	subwf	___flge@ff1& (0+255),w,b
 27519  0176D2  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 27520  0176D4  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 27521  0176D6  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 27522  0176D8  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 27523  0176DA  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 27524  0176DC  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 27525  0176DE  B0D8               	btfsc	status,0,c
 27526  0176E0  D002               	goto	l17908
 27527                           
 27528                           ; BSR set to: 1
 27529  0176E2  90D8               	bcf	status,0,c
 27530  0176E4  0012               	return	
 27531  0176E6                     l17908:
 27532                           
 27533                           ; BSR set to: 1
 27534                           
 27535                           ; BSR set to: 1
 27536  0176E6  80D8               	bsf	status,0,c
 27537                           
 27538                           ; BSR set to: 1
 27539  0176E8  0012               	return	
 27540  0176EA                     __end_of___flge:
 27541                           	opt stack 0
 27542                           tblptru	equ	0xFF8
 27543                           tblptrh	equ	0xFF7
 27544                           tblptrl	equ	0xFF6
 27545                           tablat	equ	0xFF5
 27546                           prodh	equ	0xFF4
 27547                           prodl	equ	0xFF3
 27548                           intcon	equ	0xFF2
 27549                           indf0	equ	0xFEF
 27550                           postinc0	equ	0xFEE
 27551                           fsr0h	equ	0xFEA
 27552                           fsr0l	equ	0xFE9
 27553                           wreg	equ	0xFE8
 27554                           indf1	equ	0xFE7
 27555                           postdec1	equ	0xFE5
 27556                           plusw1	equ	0xFE3
 27557                           fsr1h	equ	0xFE2
 27558                           fsr1l	equ	0xFE1
 27559                           indf2	equ	0xFDF
 27560                           postinc2	equ	0xFDE
 27561                           postdec2	equ	0xFDD
 27562                           plusw2	equ	0xFDB
 27563                           fsr2h	equ	0xFDA
 27564                           fsr2l	equ	0xFD9
 27565                           status	equ	0xFD8
 27566                           
 27567 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 27568 ;; Defined at:
 27569 ;;		line 189 in file "main.c"
 27570 ;; Parameters:    Size  Location     Type
 27571 ;;		None
 27572 ;; Auto vars:     Size  Location     Type
 27573 ;;		None
 27574 ;; Return value:  Size  Location     Type
 27575 ;;                  1    wreg      void 
 27576 ;; Registers used:
 27577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27578 ;; Tracked objects:
 27579 ;;		On entry : 0/0
 27580 ;;		On exit  : 0/0
 27581 ;;		Unchanged: 0/0
 27582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27587 ;;Total ram usage:        0 bytes
 27588 ;; Hardware stack levels used:    1
 27589 ;; Hardware stack levels required when called:   15
 27590 ;; This function calls:
 27591 ;;		_readDoubleFromEEPROM
 27592 ;; This function is called by:
 27593 ;;		_main
 27594 ;; This function uses a non-reentrant model
 27595 ;;
 27596                           
 27597                           	psect	text51
 27598  01791C                     __ptext51:
 27599                           	opt stack 0
 27600  01791C                     _recoverSRAMMaxFromEEPROM:
 27601                           	opt stack 15
 27602                           
 27603                           ;main.c: 191: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 27604                           
 27605                           ; BSR set to: 1
 27606                           ;incstack = 0
 27607  01791C  0EFD               	movlw	low _max_Irms_address
 27608  01791E  6EF6               	movwf	tblptrl,c
 27609  017920                     	if	1	;There is more than 1 active tblptr byte
 27610  017920  0ED8               	movlw	high _max_Irms_address
 27611  017922  6EF7               	movwf	tblptrh,c
 27612  017924                     	endif
 27613  017924                     	if	1	;There are 3 active tblptr bytes
 27614  017924  0E00               	movlw	low (_max_Irms_address shr (0+16))
 27615  017926  6EF8               	movwf	tblptru,c
 27616  017928                     	endif
 27617  017928  0009               	tblrd		*+
 27618  01792A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27619  01792E  000A               	tblrd		*-
 27620  017930  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27621  017934  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27622  017938  C119  F214         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 27623  01793C  C11A  F215         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 27624  017940  C11B  F216         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 27625  017944  C11C  F217         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 27626                           
 27627                           ;main.c: 192: max_Power = readDoubleFromEEPROM(max_Power_address);
 27628  017948  0EFB               	movlw	low _max_Power_address
 27629  01794A  6EF6               	movwf	tblptrl,c
 27630  01794C                     	if	1	;There is more than 1 active tblptr byte
 27631  01794C  0ED8               	movlw	high _max_Power_address
 27632  01794E  6EF7               	movwf	tblptrh,c
 27633  017950                     	endif
 27634  017950                     	if	1	;There are 3 active tblptr bytes
 27635  017950  0E00               	movlw	low (_max_Power_address shr (0+16))
 27636  017952  6EF8               	movwf	tblptru,c
 27637  017954                     	endif
 27638  017954  0009               	tblrd		*+
 27639  017956  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27640  01795A  000A               	tblrd		*-
 27641  01795C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27642  017960  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27643  017964  C119  F210         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 27644  017968  C11A  F211         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 27645  01796C  C11B  F212         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 27646  017970  C11C  F213         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 27647                           
 27648                           ;main.c: 193: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 27649  017974  0EF9               	movlw	low _max_POS3P3_ADC_Result_address
 27650  017976  6EF6               	movwf	tblptrl,c
 27651  017978                     	if	1	;There is more than 1 active tblptr byte
 27652  017978  0ED8               	movlw	high _max_POS3P3_ADC_Result_address
 27653  01797A  6EF7               	movwf	tblptrh,c
 27654  01797C                     	endif
 27655  01797C                     	if	1	;There are 3 active tblptr bytes
 27656  01797C  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 27657  01797E  6EF8               	movwf	tblptru,c
 27658  017980                     	endif
 27659  017980  0009               	tblrd		*+
 27660  017982  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27661  017986  000A               	tblrd		*-
 27662  017988  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27663  01798C  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27664  017990  C119  F20C         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 27665  017994  C11A  F20D         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 27666  017998  C11B  F20E         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 27667  01799C  C11C  F20F         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 27668                           
 27669                           ;main.c: 194: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 27670  0179A0  0EF7               	movlw	low _max_POS12_ADC_Result_address
 27671  0179A2  6EF6               	movwf	tblptrl,c
 27672  0179A4                     	if	1	;There is more than 1 active tblptr byte
 27673  0179A4  0ED8               	movlw	high _max_POS12_ADC_Result_address
 27674  0179A6  6EF7               	movwf	tblptrh,c
 27675  0179A8                     	endif
 27676  0179A8                     	if	1	;There are 3 active tblptr bytes
 27677  0179A8  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 27678  0179AA  6EF8               	movwf	tblptru,c
 27679  0179AC                     	endif
 27680  0179AC  0009               	tblrd		*+
 27681  0179AE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27682  0179B2  000A               	tblrd		*-
 27683  0179B4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27684  0179B8  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27685  0179BC  C119  F208         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 27686  0179C0  C11A  F209         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 27687  0179C4  C11B  F20A         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 27688  0179C8  C11C  F20B         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 27689                           
 27690                           ;main.c: 195: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 27691  0179CC  0EF5               	movlw	low _max_Temp_ADC_Result_address
 27692  0179CE  6EF6               	movwf	tblptrl,c
 27693  0179D0                     	if	1	;There is more than 1 active tblptr byte
 27694  0179D0  0ED8               	movlw	high _max_Temp_ADC_Result_address
 27695  0179D2  6EF7               	movwf	tblptrh,c
 27696  0179D4                     	endif
 27697  0179D4                     	if	1	;There are 3 active tblptr bytes
 27698  0179D4  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 27699  0179D6  6EF8               	movwf	tblptru,c
 27700  0179D8                     	endif
 27701  0179D8  0009               	tblrd		*+
 27702  0179DA  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27703  0179DE  000A               	tblrd		*-
 27704  0179E0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27705  0179E4  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27706  0179E8  C119  F204         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 27707  0179EC  C11A  F205         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 27708  0179F0  C11B  F206         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 27709  0179F4  C11C  F207         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 27710                           
 27711                           ;main.c: 196: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 27712  0179F8  0EF3               	movlw	low _max_FVR_ADC_Result_address
 27713  0179FA  6EF6               	movwf	tblptrl,c
 27714  0179FC                     	if	1	;There is more than 1 active tblptr byte
 27715  0179FC  0ED8               	movlw	high _max_FVR_ADC_Result_address
 27716  0179FE  6EF7               	movwf	tblptrh,c
 27717  017A00                     	endif
 27718  017A00                     	if	1	;There are 3 active tblptr bytes
 27719  017A00  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 27720  017A02  6EF8               	movwf	tblptru,c
 27721  017A04                     	endif
 27722  017A04  0009               	tblrd		*+
 27723  017A06  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27724  017A0A  000A               	tblrd		*-
 27725  017A0C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27726  017A10  EC91  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27727  017A14  C119  F200         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 27728  017A18  C11A  F201         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 27729  017A1C  C11B  F202         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 27730  017A20  C11C  F203         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 27731  017A24  0012               	return		;funcret
 27732  017A26                     __end_of_recoverSRAMMaxFromEEPROM:
 27733                           	opt stack 0
 27734                           tblptru	equ	0xFF8
 27735                           tblptrh	equ	0xFF7
 27736                           tblptrl	equ	0xFF6
 27737                           tablat	equ	0xFF5
 27738                           prodh	equ	0xFF4
 27739                           prodl	equ	0xFF3
 27740                           intcon	equ	0xFF2
 27741                           indf0	equ	0xFEF
 27742                           postinc0	equ	0xFEE
 27743                           fsr0h	equ	0xFEA
 27744                           fsr0l	equ	0xFE9
 27745                           wreg	equ	0xFE8
 27746                           indf1	equ	0xFE7
 27747                           postdec1	equ	0xFE5
 27748                           plusw1	equ	0xFE3
 27749                           fsr1h	equ	0xFE2
 27750                           fsr1l	equ	0xFE1
 27751                           indf2	equ	0xFDF
 27752                           postinc2	equ	0xFDE
 27753                           postdec2	equ	0xFDD
 27754                           plusw2	equ	0xFDB
 27755                           fsr2h	equ	0xFDA
 27756                           fsr2l	equ	0xFD9
 27757                           status	equ	0xFD8
 27758                           
 27759 ;; *************** function _readDoubleFromEEPROM *****************
 27760 ;; Defined at:
 27761 ;;		line 22 in file "double_to_EEPROM.c"
 27762 ;; Parameters:    Size  Location     Type
 27763 ;;  starting_add    2   25[BANK1 ] unsigned int 
 27764 ;; Auto vars:     Size  Location     Type
 27765 ;;  byte_index      2   33[BANK1 ] int 
 27766 ;;  output_data     4   29[BANK1 ] struct .
 27767 ;; Return value:  Size  Location     Type
 27768 ;;                  4   25[BANK1 ] struct .
 27769 ;; Registers used:
 27770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27771 ;; Tracked objects:
 27772 ;;		On entry : 0/0
 27773 ;;		On exit  : 0/0
 27774 ;;		Unchanged: 0/0
 27775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27776 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27777 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27779 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27780 ;;Total ram usage:       10 bytes
 27781 ;; Hardware stack levels used:    1
 27782 ;; Hardware stack levels required when called:   14
 27783 ;; This function calls:
 27784 ;;		_DATAEE_ReadByte
 27785 ;; This function is called by:
 27786 ;;		_recoverSRAMMaxFromEEPROM
 27787 ;;		_ringBufferLUT
 27788 ;; This function uses a non-reentrant model
 27789 ;;
 27790                           
 27791                           	psect	text52
 27792  018922                     __ptext52:
 27793                           	opt stack 0
 27794  018922                     _readDoubleFromEEPROM:
 27795                           	opt stack 14
 27796                           
 27797                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 27798                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 27799                           
 27800                           ;incstack = 0
 27801  018922  0E00               	movlw	0
 27802  018924  0101               	movlb	1	; () banked
 27803  018926  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 27804  018928  0E00               	movlw	0
 27805  01892A  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 27806                           
 27807                           ; BSR set to: 1
 27808  01892C  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 27809  01892E  E119               	bnz	l1428
 27810  018930  D014               	goto	L8
 27811  018932                     
 27812                           ; BSR set to: 1
 27813                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 27814                           
 27815                           ; BSR set to: 1
 27816  018932  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 27817  018934  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 27818  018936  6ED9               	movwf	fsr2l,c
 27819  018938  0E01               	movlw	high readDoubleFromEEPROM@output_data
 27820  01893A  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 27821  01893C  6EDA               	movwf	fsr2h,c
 27822  01893E  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 27823  018940  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 27824  018942  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 27825  018944  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 27826  018946  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 27827  018948  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 27828  01894A  EC1A  F0C9         	call	_DATAEE_ReadByte	;wreg free
 27829  01894E  6EDF               	movwf	indf2,c
 27830  018950  0101               	movlb	1	; () banked
 27831  018952  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 27832  018954  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 27833                           
 27834                           ; BSR set to: 1
 27835  018956  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 27836  018958  E104               	bnz	u25720
 27837  01895A                     L8:
 27838  01895A  0E04               	movlw	4
 27839  01895C  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 27840  01895E  A0D8               	btfss	status,0,c
 27841  018960  D7E8               	goto	l1427
 27842  018962                     u25720:
 27843  018962                     l1428:
 27844                           
 27845                           ; BSR set to: 1
 27846                           ;double_to_EEPROM.c: 32: }
 27847                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 27848  018962  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 27849  018966  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 27850  01896A  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 27851  01896E  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 27852                           
 27853                           ; BSR set to: 1
 27854  018972  0012               	return		;funcret
 27855  018974                     __end_of_readDoubleFromEEPROM:
 27856                           	opt stack 0
 27857                           tblptru	equ	0xFF8
 27858                           tblptrh	equ	0xFF7
 27859                           tblptrl	equ	0xFF6
 27860                           tablat	equ	0xFF5
 27861                           prodh	equ	0xFF4
 27862                           prodl	equ	0xFF3
 27863                           intcon	equ	0xFF2
 27864                           indf0	equ	0xFEF
 27865                           postinc0	equ	0xFEE
 27866                           fsr0h	equ	0xFEA
 27867                           fsr0l	equ	0xFE9
 27868                           wreg	equ	0xFE8
 27869                           indf1	equ	0xFE7
 27870                           postdec1	equ	0xFE5
 27871                           plusw1	equ	0xFE3
 27872                           fsr1h	equ	0xFE2
 27873                           fsr1l	equ	0xFE1
 27874                           indf2	equ	0xFDF
 27875                           postinc2	equ	0xFDE
 27876                           postdec2	equ	0xFDD
 27877                           plusw2	equ	0xFDB
 27878                           fsr2h	equ	0xFDA
 27879                           fsr2l	equ	0xFD9
 27880                           status	equ	0xFD8
 27881                           
 27882 ;; *************** function _DATAEE_ReadByte *****************
 27883 ;; Defined at:
 27884 ;;		line 190 in file "mcc_generated_files/memory.c"
 27885 ;; Parameters:    Size  Location     Type
 27886 ;;  bAdd            2   23[BANK1 ] unsigned int 
 27887 ;; Auto vars:     Size  Location     Type
 27888 ;;		None
 27889 ;; Return value:  Size  Location     Type
 27890 ;;                  1    wreg      unsigned char 
 27891 ;; Registers used:
 27892 ;;		wreg, status,2, status,0
 27893 ;; Tracked objects:
 27894 ;;		On entry : 0/0
 27895 ;;		On exit  : 0/0
 27896 ;;		Unchanged: 0/0
 27897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27898 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27901 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27902 ;;Total ram usage:        2 bytes
 27903 ;; Hardware stack levels used:    1
 27904 ;; Hardware stack levels required when called:   13
 27905 ;; This function calls:
 27906 ;;		Nothing
 27907 ;; This function is called by:
 27908 ;;		_readDoubleFromEEPROM
 27909 ;; This function uses a non-reentrant model
 27910 ;;
 27911                           
 27912                           	psect	text53
 27913  019234                     __ptext53:
 27914                           	opt stack 0
 27915  019234                     _DATAEE_ReadByte:
 27916                           	opt stack 14
 27917                           
 27918                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 27919                           
 27920                           ; BSR set to: 1
 27921                           ;incstack = 0
 27922  019234  0101               	movlb	1	; () banked
 27923  019236  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 27924  019238  0B03               	andlw	3
 27925  01923A  6E75               	movwf	3957,c	;volatile
 27926                           
 27927                           ; BSR set to: 1
 27928                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 27929  01923C  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 27930                           
 27931                           ; BSR set to: 1
 27932                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 27933  019240  0E3F               	movlw	-193
 27934  019242  1677               	andwf	3959,f,c	;volsfr
 27935                           
 27936                           ; BSR set to: 1
 27937                           ;memory.c: 195: NVMCON1bits.RD = 1;
 27938  019244  8077               	bsf	3959,0,c	;volsfr
 27939                           
 27940                           ; BSR set to: 1
 27941                           ;memory.c: 196: __nop();
 27942  019246  F000               	nop	
 27943                           
 27944                           ;memory.c: 197: __nop();
 27945  019248  F000               	nop	
 27946                           
 27947                           ;memory.c: 199: return (NVMDAT);
 27948  01924A  5076               	movf	3958,w,c	;volatile
 27949  01924C  0012               	return	
 27950  01924E                     __end_of_DATAEE_ReadByte:
 27951                           	opt stack 0
 27952                           tblptru	equ	0xFF8
 27953                           tblptrh	equ	0xFF7
 27954                           tblptrl	equ	0xFF6
 27955                           tablat	equ	0xFF5
 27956                           prodh	equ	0xFF4
 27957                           prodl	equ	0xFF3
 27958                           intcon	equ	0xFF2
 27959                           indf0	equ	0xFEF
 27960                           postinc0	equ	0xFEE
 27961                           fsr0h	equ	0xFEA
 27962                           fsr0l	equ	0xFE9
 27963                           wreg	equ	0xFE8
 27964                           indf1	equ	0xFE7
 27965                           postdec1	equ	0xFE5
 27966                           plusw1	equ	0xFE3
 27967                           fsr1h	equ	0xFE2
 27968                           fsr1l	equ	0xFE1
 27969                           indf2	equ	0xFDF
 27970                           postinc2	equ	0xFDE
 27971                           postdec2	equ	0xFDD
 27972                           plusw2	equ	0xFDB
 27973                           fsr2h	equ	0xFDA
 27974                           fsr2l	equ	0xFD9
 27975                           status	equ	0xFD8
 27976                           
 27977 ;; *************** function _getCauseOfReset *****************
 27978 ;; Defined at:
 27979 ;;		line 11 in file "cause_of_reset.c"
 27980 ;; Parameters:    Size  Location     Type
 27981 ;;		None
 27982 ;; Auto vars:     Size  Location     Type
 27983 ;;  return_reset    1   23[BANK1 ] enum E17455
 27984 ;; Return value:  Size  Location     Type
 27985 ;;                  1    wreg      enum E17948
 27986 ;; Registers used:
 27987 ;;		wreg, status,2
 27988 ;; Tracked objects:
 27989 ;;		On entry : 0/0
 27990 ;;		On exit  : 0/0
 27991 ;;		Unchanged: 0/0
 27992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27994 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27996 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27997 ;;Total ram usage:        1 bytes
 27998 ;; Hardware stack levels used:    1
 27999 ;; Hardware stack levels required when called:   13
 28000 ;; This function calls:
 28001 ;;		Nothing
 28002 ;; This function is called by:
 28003 ;;		_main
 28004 ;; This function uses a non-reentrant model
 28005 ;;
 28006                           
 28007                           	psect	text54
 28008  018974                     __ptext54:
 28009                           	opt stack 0
 28010  018974                     _getCauseOfReset:
 28011                           	opt stack 17
 28012                           
 28013                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 28014                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 28015                           
 28016                           ;incstack = 0
 28017  018974  AED7               	btfss	4055,7,c	;volatile
 28018  018976  D002               	goto	l1394
 28019                           
 28020                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 28021  018978  0E07               	movlw	7
 28022  01897A  D019               	goto	L15
 28023  01897C                     l1394:
 28024                           
 28025                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 28026  01897C  ACD7               	btfss	4055,6,c	;volatile
 28027  01897E  D002               	goto	l1396
 28028                           
 28029                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 28030  018980  0E08               	movlw	8
 28031  018982  D015               	goto	L15
 28032  018984                     l1396:
 28033                           
 28034                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 28035  018984  BAD7               	btfsc	4055,5,c	;volatile
 28036  018986  D002               	goto	l1398
 28037                           
 28038                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 28039  018988  0E05               	movlw	5
 28040  01898A  D011               	goto	L15
 28041  01898C                     l1398:
 28042                           
 28043                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 28044  01898C  B6D7               	btfsc	4055,3,c	;volatile
 28045  01898E  D002               	goto	l1400
 28046                           
 28047                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 28048  018990  0E03               	movlw	3
 28049  018992  D00D               	goto	L15
 28050  018994                     l1400:
 28051                           
 28052                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 28053  018994  B4D7               	btfsc	4055,2,c	;volatile
 28054  018996  D002               	goto	l1402
 28055                           
 28056                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 28057  018998  0E06               	movlw	6
 28058  01899A  D009               	goto	L15
 28059  01899C                     l1402:
 28060                           
 28061                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 28062  01899C  B2D7               	btfsc	4055,1,c	;volatile
 28063  01899E  D002               	goto	l1404
 28064                           
 28065                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 28066  0189A0  0E01               	movlw	1
 28067  0189A2  D005               	goto	L15
 28068  0189A4                     l1404:
 28069                           
 28070                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 28071  0189A4  B0D7               	btfsc	4055,0,c	;volatile
 28072  0189A6  D002               	goto	l1406
 28073                           
 28074                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 28075  0189A8  0E02               	movlw	2
 28076  0189AA  D001               	goto	L15
 28077  0189AC                     l1406:
 28078                           
 28079                           ;cause_of_reset.c: 60: else {
 28080                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 28081                           
 28082                           ; BSR set to: 1
 28083  0189AC  0E00               	movlw	0
 28084  0189AE                     L15:
 28085  0189AE  0101               	movlb	1	; () banked
 28086  0189B0  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 28087                           
 28088                           ; BSR set to: 1
 28089                           ;cause_of_reset.c: 64: }
 28090                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 28091                           
 28092                           ; BSR set to: 1
 28093                           
 28094                           ; BSR set to: 1
 28095                           
 28096                           ; BSR set to: 1
 28097                           
 28098                           ; BSR set to: 1
 28099                           
 28100                           ; BSR set to: 1
 28101                           
 28102                           ; BSR set to: 1
 28103                           
 28104                           ; BSR set to: 1
 28105  0189B2  9ED7               	bcf	4055,7,c	;volatile
 28106                           
 28107                           ; BSR set to: 1
 28108                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 28109  0189B4  9CD7               	bcf	4055,6,c	;volatile
 28110                           
 28111                           ; BSR set to: 1
 28112                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 28113  0189B6  8AD7               	bsf	4055,5,c	;volatile
 28114                           
 28115                           ; BSR set to: 1
 28116                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 28117  0189B8  88D7               	bsf	4055,4,c	;volatile
 28118                           
 28119                           ; BSR set to: 1
 28120                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 28121  0189BA  86D7               	bsf	4055,3,c	;volatile
 28122                           
 28123                           ; BSR set to: 1
 28124                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 28125  0189BC  84D7               	bsf	4055,2,c	;volatile
 28126                           
 28127                           ; BSR set to: 1
 28128                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 28129  0189BE  82D7               	bsf	4055,1,c	;volatile
 28130                           
 28131                           ; BSR set to: 1
 28132                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 28133  0189C0  80D7               	bsf	4055,0,c	;volatile
 28134                           
 28135                           ;cause_of_reset.c: 76: return return_reset_cause;
 28136  0189C2  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 28137  0189C4  0012               	return	
 28138  0189C6                     __end_of_getCauseOfReset:
 28139                           	opt stack 0
 28140                           tblptru	equ	0xFF8
 28141                           tblptrh	equ	0xFF7
 28142                           tblptrl	equ	0xFF6
 28143                           tablat	equ	0xFF5
 28144                           prodh	equ	0xFF4
 28145                           prodl	equ	0xFF3
 28146                           intcon	equ	0xFF2
 28147                           indf0	equ	0xFEF
 28148                           postinc0	equ	0xFEE
 28149                           fsr0h	equ	0xFEA
 28150                           fsr0l	equ	0xFE9
 28151                           wreg	equ	0xFE8
 28152                           indf1	equ	0xFE7
 28153                           postdec1	equ	0xFE5
 28154                           plusw1	equ	0xFE3
 28155                           fsr1h	equ	0xFE2
 28156                           fsr1l	equ	0xFE1
 28157                           indf2	equ	0xFDF
 28158                           postinc2	equ	0xFDE
 28159                           postdec2	equ	0xFDD
 28160                           plusw2	equ	0xFDB
 28161                           fsr2h	equ	0xFDA
 28162                           fsr2l	equ	0xFD9
 28163                           status	equ	0xFD8
 28164                           
 28165 ;; *************** function _SYSTEM_Initialize *****************
 28166 ;; Defined at:
 28167 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28168 ;; Parameters:    Size  Location     Type
 28169 ;;		None
 28170 ;; Auto vars:     Size  Location     Type
 28171 ;;		None
 28172 ;; Return value:  Size  Location     Type
 28173 ;;                  1    wreg      void 
 28174 ;; Registers used:
 28175 ;;		wreg, status,2, status,0, cstack
 28176 ;; Tracked objects:
 28177 ;;		On entry : 0/0
 28178 ;;		On exit  : 0/0
 28179 ;;		Unchanged: 0/0
 28180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28185 ;;Total ram usage:        0 bytes
 28186 ;; Hardware stack levels used:    1
 28187 ;; Hardware stack levels required when called:   15
 28188 ;; This function calls:
 28189 ;;		_ADCC_Initialize
 28190 ;;		_EUSART2_Initialize
 28191 ;;		_FVR_Initialize
 28192 ;;		_HLVD_Initialize
 28193 ;;		_INTERRUPT_Initialize
 28194 ;;		_OSCILLATOR_Initialize
 28195 ;;		_PIN_MANAGER_Initialize
 28196 ;;		_PMD_Initialize
 28197 ;;		_TMR5_Initialize
 28198 ;;		_TMR6_Initialize
 28199 ;;		_TMR7_Initialize
 28200 ;; This function is called by:
 28201 ;;		_main
 28202 ;; This function uses a non-reentrant model
 28203 ;;
 28204                           
 28205                           	psect	text55
 28206  018FD2                     __ptext55:
 28207                           	opt stack 0
 28208  018FD2                     _SYSTEM_Initialize:
 28209                           	opt stack 15
 28210                           
 28211                           ;mcc.c: 52: INTERRUPT_Initialize();
 28212                           
 28213                           ; BSR set to: 1
 28214                           ;incstack = 0
 28215  018FD2  EC27  F0C9         	call	_INTERRUPT_Initialize	;wreg free
 28216                           
 28217                           ;mcc.c: 53: PMD_Initialize();
 28218  018FD6  ECE3  F0C8         	call	_PMD_Initialize	;wreg free
 28219                           
 28220                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 28221  018FDA  EC9A  F0BF         	call	_PIN_MANAGER_Initialize	;wreg free
 28222                           
 28223                           ;mcc.c: 55: OSCILLATOR_Initialize();
 28224  018FDE  ECF1  F0C8         	call	_OSCILLATOR_Initialize	;wreg free
 28225                           
 28226                           ;mcc.c: 56: HLVD_Initialize();
 28227  018FE2  EC6F  F0C9         	call	_HLVD_Initialize	;wreg free
 28228                           
 28229                           ;mcc.c: 57: FVR_Initialize();
 28230  018FE6  ECBA  F0C9         	call	_FVR_Initialize	;wreg free
 28231                           
 28232                           ;mcc.c: 58: TMR7_Initialize();
 28233  018FEA  EC33  F0C5         	call	_TMR7_Initialize	;wreg free
 28234                           
 28235                           ;mcc.c: 59: TMR6_Initialize();
 28236  018FEE  ECA0  F0C7         	call	_TMR6_Initialize	;wreg free
 28237                           
 28238                           ;mcc.c: 60: ADCC_Initialize();
 28239  018FF2  EC35  F0C4         	call	_ADCC_Initialize	;wreg free
 28240                           
 28241                           ;mcc.c: 61: TMR5_Initialize();
 28242  018FF6  ECA6  F0C5         	call	_TMR5_Initialize	;wreg free
 28243                           
 28244                           ;mcc.c: 62: EUSART2_Initialize();
 28245  018FFA  EC35  F0C3         	call	_EUSART2_Initialize	;wreg free
 28246  018FFE  0012               	return		;funcret
 28247  019000                     __end_of_SYSTEM_Initialize:
 28248                           	opt stack 0
 28249                           tblptru	equ	0xFF8
 28250                           tblptrh	equ	0xFF7
 28251                           tblptrl	equ	0xFF6
 28252                           tablat	equ	0xFF5
 28253                           prodh	equ	0xFF4
 28254                           prodl	equ	0xFF3
 28255                           intcon	equ	0xFF2
 28256                           indf0	equ	0xFEF
 28257                           postinc0	equ	0xFEE
 28258                           fsr0h	equ	0xFEA
 28259                           fsr0l	equ	0xFE9
 28260                           wreg	equ	0xFE8
 28261                           indf1	equ	0xFE7
 28262                           postdec1	equ	0xFE5
 28263                           plusw1	equ	0xFE3
 28264                           fsr1h	equ	0xFE2
 28265                           fsr1l	equ	0xFE1
 28266                           indf2	equ	0xFDF
 28267                           postinc2	equ	0xFDE
 28268                           postdec2	equ	0xFDD
 28269                           plusw2	equ	0xFDB
 28270                           fsr2h	equ	0xFDA
 28271                           fsr2l	equ	0xFD9
 28272                           status	equ	0xFD8
 28273                           
 28274 ;; *************** function _TMR7_Initialize *****************
 28275 ;; Defined at:
 28276 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 28277 ;; Parameters:    Size  Location     Type
 28278 ;;		None
 28279 ;; Auto vars:     Size  Location     Type
 28280 ;;		None
 28281 ;; Return value:  Size  Location     Type
 28282 ;;                  1    wreg      void 
 28283 ;; Registers used:
 28284 ;;		wreg, status,2, status,0, cstack
 28285 ;; Tracked objects:
 28286 ;;		On entry : 0/0
 28287 ;;		On exit  : 0/0
 28288 ;;		Unchanged: 0/0
 28289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28292 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28293 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28294 ;;Total ram usage:        2 bytes
 28295 ;; Hardware stack levels used:    1
 28296 ;; Hardware stack levels required when called:   14
 28297 ;; This function calls:
 28298 ;;		_TMR7_SetInterruptHandler
 28299 ;; This function is called by:
 28300 ;;		_SYSTEM_Initialize
 28301 ;; This function uses a non-reentrant model
 28302 ;;
 28303                           
 28304                           	psect	text56
 28305  018A66                     __ptext56:
 28306                           	opt stack 0
 28307  018A66                     _TMR7_Initialize:
 28308                           	opt stack 15
 28309                           
 28310                           ;tmr7.c: 69: T7GCON = 0x00;
 28311                           
 28312                           ;incstack = 0
 28313  018A66  0E00               	movlw	0
 28314  018A68  010F               	movlb	15	; () banked
 28315  018A6A  6F31               	movwf	49,b	;volatile
 28316                           
 28317                           ;tmr7.c: 72: T7GATE = 0x00;
 28318  018A6C  0E00               	movlw	0
 28319  018A6E  6F32               	movwf	50,b	;volatile
 28320                           
 28321                           ;tmr7.c: 75: T7CLK = 0x03;
 28322  018A70  0E03               	movlw	3
 28323  018A72  6F33               	movwf	51,b	;volatile
 28324                           
 28325                           ;tmr7.c: 78: TMR7H = 0xEC;
 28326  018A74  0EEC               	movlw	236
 28327  018A76  6F2F               	movwf	47,b	;volatile
 28328                           
 28329                           ;tmr7.c: 81: TMR7L = 0x78;
 28330  018A78  0E78               	movlw	120
 28331  018A7A  6F2E               	movwf	46,b	;volatile
 28332                           
 28333                           ; BSR set to: 15
 28334                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 28335  018A7C  512E               	movf	46,w,b	;volatile
 28336  018A7E  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 28337  018A82  0101               	movlb	1	; () banked
 28338  018A84  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 28339  018A86  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 28340  018A8A  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 28341  018A8C  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 28342  018A8E  6FDD               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 28343  018A90  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 28344  018A92  6FDE               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 28345                           
 28346                           ; BSR set to: 1
 28347                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 28348  018A94  010E               	movlb	14	; () banked
 28349  018A96  9D38               	bcf	56,6,b	;volatile
 28350                           
 28351                           ; BSR set to: 14
 28352                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 28353  018A98  8D2E               	bsf	46,6,b	;volatile
 28354                           
 28355                           ; BSR set to: 14
 28356                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 28357  018A9A  0EA8               	movlw	low _TMR7_DefaultInterruptHandler
 28358  018A9C  0101               	movlb	1	; () banked
 28359  018A9E  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 28360  018AA0  0E93               	movlw	high _TMR7_DefaultInterruptHandler
 28361  018AA2  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 28362  018AA4  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 28363  018AA6  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 28364  018AA8  EC7E  F0C9         	call	_TMR7_SetInterruptHandler	;wreg free
 28365                           
 28366                           ;tmr7.c: 96: T7CON = 0x31;
 28367  018AAC  0E31               	movlw	49
 28368  018AAE  010F               	movlb	15	; () banked
 28369  018AB0  6F30               	movwf	48,b	;volatile
 28370                           
 28371                           ; BSR set to: 15
 28372  018AB2  0012               	return		;funcret
 28373  018AB4                     __end_of_TMR7_Initialize:
 28374                           	opt stack 0
 28375                           tblptru	equ	0xFF8
 28376                           tblptrh	equ	0xFF7
 28377                           tblptrl	equ	0xFF6
 28378                           tablat	equ	0xFF5
 28379                           prodh	equ	0xFF4
 28380                           prodl	equ	0xFF3
 28381                           intcon	equ	0xFF2
 28382                           indf0	equ	0xFEF
 28383                           postinc0	equ	0xFEE
 28384                           fsr0h	equ	0xFEA
 28385                           fsr0l	equ	0xFE9
 28386                           wreg	equ	0xFE8
 28387                           indf1	equ	0xFE7
 28388                           postdec1	equ	0xFE5
 28389                           plusw1	equ	0xFE3
 28390                           fsr1h	equ	0xFE2
 28391                           fsr1l	equ	0xFE1
 28392                           indf2	equ	0xFDF
 28393                           postinc2	equ	0xFDE
 28394                           postdec2	equ	0xFDD
 28395                           plusw2	equ	0xFDB
 28396                           fsr2h	equ	0xFDA
 28397                           fsr2l	equ	0xFD9
 28398                           status	equ	0xFD8
 28399                           
 28400 ;; *************** function _TMR7_SetInterruptHandler *****************
 28401 ;; Defined at:
 28402 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 28403 ;; Parameters:    Size  Location     Type
 28404 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 28405 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 28406 ;; Auto vars:     Size  Location     Type
 28407 ;;		None
 28408 ;; Return value:  Size  Location     Type
 28409 ;;                  1    wreg      void 
 28410 ;; Registers used:
 28411 ;;		wreg, status,2, status,0
 28412 ;; Tracked objects:
 28413 ;;		On entry : 0/0
 28414 ;;		On exit  : 0/0
 28415 ;;		Unchanged: 0/0
 28416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28417 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28420 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28421 ;;Total ram usage:        3 bytes
 28422 ;; Hardware stack levels used:    1
 28423 ;; Hardware stack levels required when called:   13
 28424 ;; This function calls:
 28425 ;;		Nothing
 28426 ;; This function is called by:
 28427 ;;		_TMR7_Initialize
 28428 ;;		_main
 28429 ;; This function uses a non-reentrant model
 28430 ;;
 28431                           
 28432                           	psect	text57
 28433  0192FC                     __ptext57:
 28434                           	opt stack 0
 28435  0192FC                     _TMR7_SetInterruptHandler:
 28436                           	opt stack 17
 28437                           
 28438                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 28439                           
 28440                           ; BSR set to: 15
 28441                           ;incstack = 0
 28442  0192FC  C117  F22B         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 28443  019300  C118  F22C         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 28444  019304  C119  F22D         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 28445  019308  0012               	return		;funcret
 28446  01930A                     __end_of_TMR7_SetInterruptHandler:
 28447                           	opt stack 0
 28448                           tblptru	equ	0xFF8
 28449                           tblptrh	equ	0xFF7
 28450                           tblptrl	equ	0xFF6
 28451                           tablat	equ	0xFF5
 28452                           prodh	equ	0xFF4
 28453                           prodl	equ	0xFF3
 28454                           intcon	equ	0xFF2
 28455                           indf0	equ	0xFEF
 28456                           postinc0	equ	0xFEE
 28457                           fsr0h	equ	0xFEA
 28458                           fsr0l	equ	0xFE9
 28459                           wreg	equ	0xFE8
 28460                           indf1	equ	0xFE7
 28461                           postdec1	equ	0xFE5
 28462                           plusw1	equ	0xFE3
 28463                           fsr1h	equ	0xFE2
 28464                           fsr1l	equ	0xFE1
 28465                           indf2	equ	0xFDF
 28466                           postinc2	equ	0xFDE
 28467                           postdec2	equ	0xFDD
 28468                           plusw2	equ	0xFDB
 28469                           fsr2h	equ	0xFDA
 28470                           fsr2l	equ	0xFD9
 28471                           status	equ	0xFD8
 28472                           
 28473 ;; *************** function _TMR6_Initialize *****************
 28474 ;; Defined at:
 28475 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 28476 ;; Parameters:    Size  Location     Type
 28477 ;;		None
 28478 ;; Auto vars:     Size  Location     Type
 28479 ;;		None
 28480 ;; Return value:  Size  Location     Type
 28481 ;;                  1    wreg      void 
 28482 ;; Registers used:
 28483 ;;		wreg, status,2, status,0, cstack
 28484 ;; Tracked objects:
 28485 ;;		On entry : 0/0
 28486 ;;		On exit  : 0/0
 28487 ;;		Unchanged: 0/0
 28488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28493 ;;Total ram usage:        0 bytes
 28494 ;; Hardware stack levels used:    1
 28495 ;; Hardware stack levels required when called:   14
 28496 ;; This function calls:
 28497 ;;		_TMR6_SetInterruptHandler
 28498 ;; This function is called by:
 28499 ;;		_SYSTEM_Initialize
 28500 ;; This function uses a non-reentrant model
 28501 ;;
 28502                           
 28503                           	psect	text58
 28504  018F40                     __ptext58:
 28505                           	opt stack 0
 28506  018F40                     _TMR6_Initialize:
 28507                           	opt stack 15
 28508                           
 28509                           ;tmr6.c: 69: T6CLKCON = 0x04;
 28510                           
 28511                           ;incstack = 0
 28512  018F40  0E04               	movlw	4
 28513  018F42  6EB3               	movwf	4019,c	;volatile
 28514                           
 28515                           ;tmr6.c: 72: T6HLT = 0x20;
 28516  018F44  0E20               	movlw	32
 28517  018F46  6EB2               	movwf	4018,c	;volatile
 28518                           
 28519                           ;tmr6.c: 75: T6RST = 0x00;
 28520  018F48  0E00               	movlw	0
 28521  018F4A  6EB4               	movwf	4020,c	;volatile
 28522                           
 28523                           ;tmr6.c: 78: T6PR = 0xF1;
 28524  018F4C  0EF1               	movlw	241
 28525  018F4E  6EB0               	movwf	4016,c	;volatile
 28526                           
 28527                           ;tmr6.c: 81: T6TMR = 0x00;
 28528  018F50  0E00               	movlw	0
 28529  018F52  6EAF               	movwf	4015,c	;volatile
 28530                           
 28531                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 28532  018F54  010E               	movlb	14	; () banked
 28533  018F56  9B38               	bcf	56,5,b	;volatile
 28534                           
 28535                           ; BSR set to: 14
 28536                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 28537  018F58  8B2E               	bsf	46,5,b	;volatile
 28538                           
 28539                           ; BSR set to: 14
 28540                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 28541  018F5A  0EAA               	movlw	low _TMR6_DefaultInterruptHandler
 28542  018F5C  0101               	movlb	1	; () banked
 28543  018F5E  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 28544  018F60  0E93               	movlw	high _TMR6_DefaultInterruptHandler
 28545  018F62  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 28546  018F64  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 28547  018F66  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 28548  018F68  EC85  F0C9         	call	_TMR6_SetInterruptHandler	;wreg free
 28549                           
 28550                           ;tmr6.c: 93: T6CON = 0xBF;
 28551  018F6C  0EBF               	movlw	191
 28552  018F6E  6EB1               	movwf	4017,c	;volatile
 28553  018F70  0012               	return		;funcret
 28554  018F72                     __end_of_TMR6_Initialize:
 28555                           	opt stack 0
 28556                           tblptru	equ	0xFF8
 28557                           tblptrh	equ	0xFF7
 28558                           tblptrl	equ	0xFF6
 28559                           tablat	equ	0xFF5
 28560                           prodh	equ	0xFF4
 28561                           prodl	equ	0xFF3
 28562                           intcon	equ	0xFF2
 28563                           indf0	equ	0xFEF
 28564                           postinc0	equ	0xFEE
 28565                           fsr0h	equ	0xFEA
 28566                           fsr0l	equ	0xFE9
 28567                           wreg	equ	0xFE8
 28568                           indf1	equ	0xFE7
 28569                           postdec1	equ	0xFE5
 28570                           plusw1	equ	0xFE3
 28571                           fsr1h	equ	0xFE2
 28572                           fsr1l	equ	0xFE1
 28573                           indf2	equ	0xFDF
 28574                           postinc2	equ	0xFDE
 28575                           postdec2	equ	0xFDD
 28576                           plusw2	equ	0xFDB
 28577                           fsr2h	equ	0xFDA
 28578                           fsr2l	equ	0xFD9
 28579                           status	equ	0xFD8
 28580                           
 28581 ;; *************** function _TMR6_SetInterruptHandler *****************
 28582 ;; Defined at:
 28583 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 28584 ;; Parameters:    Size  Location     Type
 28585 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 28586 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 28587 ;; Auto vars:     Size  Location     Type
 28588 ;;		None
 28589 ;; Return value:  Size  Location     Type
 28590 ;;                  1    wreg      void 
 28591 ;; Registers used:
 28592 ;;		wreg, status,2, status,0
 28593 ;; Tracked objects:
 28594 ;;		On entry : 0/0
 28595 ;;		On exit  : 0/0
 28596 ;;		Unchanged: 0/0
 28597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28598 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28601 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28602 ;;Total ram usage:        3 bytes
 28603 ;; Hardware stack levels used:    1
 28604 ;; Hardware stack levels required when called:   13
 28605 ;; This function calls:
 28606 ;;		Nothing
 28607 ;; This function is called by:
 28608 ;;		_TMR6_Initialize
 28609 ;;		_main
 28610 ;; This function uses a non-reentrant model
 28611 ;;
 28612                           
 28613                           	psect	text59
 28614  01930A                     __ptext59:
 28615                           	opt stack 0
 28616  01930A                     _TMR6_SetInterruptHandler:
 28617                           	opt stack 17
 28618                           
 28619                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 28620                           
 28621                           ;incstack = 0
 28622  01930A  C117  F231         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 28623  01930E  C118  F232         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 28624  019312  C119  F233         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 28625  019316  0012               	return		;funcret
 28626  019318                     __end_of_TMR6_SetInterruptHandler:
 28627                           	opt stack 0
 28628                           tblptru	equ	0xFF8
 28629                           tblptrh	equ	0xFF7
 28630                           tblptrl	equ	0xFF6
 28631                           tablat	equ	0xFF5
 28632                           prodh	equ	0xFF4
 28633                           prodl	equ	0xFF3
 28634                           intcon	equ	0xFF2
 28635                           indf0	equ	0xFEF
 28636                           postinc0	equ	0xFEE
 28637                           fsr0h	equ	0xFEA
 28638                           fsr0l	equ	0xFE9
 28639                           wreg	equ	0xFE8
 28640                           indf1	equ	0xFE7
 28641                           postdec1	equ	0xFE5
 28642                           plusw1	equ	0xFE3
 28643                           fsr1h	equ	0xFE2
 28644                           fsr1l	equ	0xFE1
 28645                           indf2	equ	0xFDF
 28646                           postinc2	equ	0xFDE
 28647                           postdec2	equ	0xFDD
 28648                           plusw2	equ	0xFDB
 28649                           fsr2h	equ	0xFDA
 28650                           fsr2l	equ	0xFD9
 28651                           status	equ	0xFD8
 28652                           
 28653 ;; *************** function _TMR5_Initialize *****************
 28654 ;; Defined at:
 28655 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 28656 ;; Parameters:    Size  Location     Type
 28657 ;;		None
 28658 ;; Auto vars:     Size  Location     Type
 28659 ;;		None
 28660 ;; Return value:  Size  Location     Type
 28661 ;;                  1    wreg      void 
 28662 ;; Registers used:
 28663 ;;		wreg, status,2, status,0, cstack
 28664 ;; Tracked objects:
 28665 ;;		On entry : 0/0
 28666 ;;		On exit  : 0/0
 28667 ;;		Unchanged: 0/0
 28668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28671 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28672 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28673 ;;Total ram usage:        2 bytes
 28674 ;; Hardware stack levels used:    1
 28675 ;; Hardware stack levels required when called:   14
 28676 ;; This function calls:
 28677 ;;		_TMR5_SetInterruptHandler
 28678 ;; This function is called by:
 28679 ;;		_SYSTEM_Initialize
 28680 ;; This function uses a non-reentrant model
 28681 ;;
 28682                           
 28683                           	psect	text60
 28684  018B4C                     __ptext60:
 28685                           	opt stack 0
 28686  018B4C                     _TMR5_Initialize:
 28687                           	opt stack 15
 28688                           
 28689                           ;tmr5.c: 69: T5GCON = 0x00;
 28690                           
 28691                           ;incstack = 0
 28692  018B4C  0E00               	movlw	0
 28693  018B4E  6EC4               	movwf	4036,c	;volatile
 28694                           
 28695                           ;tmr5.c: 72: T5GATE = 0x00;
 28696  018B50  0E00               	movlw	0
 28697  018B52  6EC5               	movwf	4037,c	;volatile
 28698                           
 28699                           ;tmr5.c: 75: T5CLK = 0x01;
 28700  018B54  0E01               	movlw	1
 28701  018B56  6EC6               	movwf	4038,c	;volatile
 28702                           
 28703                           ;tmr5.c: 78: TMR5H = 0x00;
 28704  018B58  0E00               	movlw	0
 28705  018B5A  6EC2               	movwf	4034,c	;volatile
 28706                           
 28707                           ;tmr5.c: 81: TMR5L = 0x00;
 28708  018B5C  0E00               	movlw	0
 28709  018B5E  6EC1               	movwf	4033,c	;volatile
 28710                           
 28711                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 28712  018B60  50C1               	movf	4033,w,c	;volatile
 28713  018B62  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 28714  018B66  0101               	movlb	1	; () banked
 28715  018B68  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 28716  018B6A  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 28717  018B6E  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 28718  018B70  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 28719  018B72  6FDB               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 28720  018B74  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 28721  018B76  6FDC               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 28722                           
 28723                           ; BSR set to: 1
 28724                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 28725  018B78  010E               	movlb	14	; () banked
 28726  018B7A  9938               	bcf	56,4,b	;volatile
 28727                           
 28728                           ; BSR set to: 14
 28729                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 28730  018B7C  892E               	bsf	46,4,b	;volatile
 28731                           
 28732                           ; BSR set to: 14
 28733                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 28734  018B7E  0EAC               	movlw	low _TMR5_DefaultInterruptHandler
 28735  018B80  0101               	movlb	1	; () banked
 28736  018B82  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 28737  018B84  0E93               	movlw	high _TMR5_DefaultInterruptHandler
 28738  018B86  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 28739  018B88  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 28740  018B8A  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 28741  018B8C  EC8C  F0C9         	call	_TMR5_SetInterruptHandler	;wreg free
 28742                           
 28743                           ;tmr5.c: 96: T5CON = 0x13;
 28744  018B90  0E13               	movlw	19
 28745  018B92  6EC3               	movwf	4035,c	;volatile
 28746  018B94  0012               	return		;funcret
 28747  018B96                     __end_of_TMR5_Initialize:
 28748                           	opt stack 0
 28749                           tblptru	equ	0xFF8
 28750                           tblptrh	equ	0xFF7
 28751                           tblptrl	equ	0xFF6
 28752                           tablat	equ	0xFF5
 28753                           prodh	equ	0xFF4
 28754                           prodl	equ	0xFF3
 28755                           intcon	equ	0xFF2
 28756                           indf0	equ	0xFEF
 28757                           postinc0	equ	0xFEE
 28758                           fsr0h	equ	0xFEA
 28759                           fsr0l	equ	0xFE9
 28760                           wreg	equ	0xFE8
 28761                           indf1	equ	0xFE7
 28762                           postdec1	equ	0xFE5
 28763                           plusw1	equ	0xFE3
 28764                           fsr1h	equ	0xFE2
 28765                           fsr1l	equ	0xFE1
 28766                           indf2	equ	0xFDF
 28767                           postinc2	equ	0xFDE
 28768                           postdec2	equ	0xFDD
 28769                           plusw2	equ	0xFDB
 28770                           fsr2h	equ	0xFDA
 28771                           fsr2l	equ	0xFD9
 28772                           status	equ	0xFD8
 28773                           
 28774 ;; *************** function _TMR5_SetInterruptHandler *****************
 28775 ;; Defined at:
 28776 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 28777 ;; Parameters:    Size  Location     Type
 28778 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 28779 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 28780 ;; Auto vars:     Size  Location     Type
 28781 ;;		None
 28782 ;; Return value:  Size  Location     Type
 28783 ;;                  1    wreg      void 
 28784 ;; Registers used:
 28785 ;;		wreg, status,2, status,0
 28786 ;; Tracked objects:
 28787 ;;		On entry : 0/0
 28788 ;;		On exit  : 0/0
 28789 ;;		Unchanged: 0/0
 28790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28791 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28794 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28795 ;;Total ram usage:        3 bytes
 28796 ;; Hardware stack levels used:    1
 28797 ;; Hardware stack levels required when called:   13
 28798 ;; This function calls:
 28799 ;;		Nothing
 28800 ;; This function is called by:
 28801 ;;		_TMR5_Initialize
 28802 ;; This function uses a non-reentrant model
 28803 ;;
 28804                           
 28805                           	psect	text61
 28806  019318                     __ptext61:
 28807                           	opt stack 0
 28808  019318                     _TMR5_SetInterruptHandler:
 28809                           	opt stack 15
 28810                           
 28811                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 28812                           
 28813                           ;incstack = 0
 28814  019318  C117  F228         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 28815  01931C  C118  F229         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 28816  019320  C119  F22A         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 28817  019324  0012               	return		;funcret
 28818  019326                     __end_of_TMR5_SetInterruptHandler:
 28819                           	opt stack 0
 28820                           tblptru	equ	0xFF8
 28821                           tblptrh	equ	0xFF7
 28822                           tblptrl	equ	0xFF6
 28823                           tablat	equ	0xFF5
 28824                           prodh	equ	0xFF4
 28825                           prodl	equ	0xFF3
 28826                           intcon	equ	0xFF2
 28827                           indf0	equ	0xFEF
 28828                           postinc0	equ	0xFEE
 28829                           fsr0h	equ	0xFEA
 28830                           fsr0l	equ	0xFE9
 28831                           wreg	equ	0xFE8
 28832                           indf1	equ	0xFE7
 28833                           postdec1	equ	0xFE5
 28834                           plusw1	equ	0xFE3
 28835                           fsr1h	equ	0xFE2
 28836                           fsr1l	equ	0xFE1
 28837                           indf2	equ	0xFDF
 28838                           postinc2	equ	0xFDE
 28839                           postdec2	equ	0xFDD
 28840                           plusw2	equ	0xFDB
 28841                           fsr2h	equ	0xFDA
 28842                           fsr2l	equ	0xFD9
 28843                           status	equ	0xFD8
 28844                           
 28845 ;; *************** function _PMD_Initialize *****************
 28846 ;; Defined at:
 28847 ;;		line 83 in file "mcc_generated_files/mcc.c"
 28848 ;; Parameters:    Size  Location     Type
 28849 ;;		None
 28850 ;; Auto vars:     Size  Location     Type
 28851 ;;		None
 28852 ;; Return value:  Size  Location     Type
 28853 ;;                  1    wreg      void 
 28854 ;; Registers used:
 28855 ;;		wreg, status,2
 28856 ;; Tracked objects:
 28857 ;;		On entry : 0/0
 28858 ;;		On exit  : 0/0
 28859 ;;		Unchanged: 0/0
 28860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28865 ;;Total ram usage:        0 bytes
 28866 ;; Hardware stack levels used:    1
 28867 ;; Hardware stack levels required when called:   13
 28868 ;; This function calls:
 28869 ;;		Nothing
 28870 ;; This function is called by:
 28871 ;;		_SYSTEM_Initialize
 28872 ;; This function uses a non-reentrant model
 28873 ;;
 28874                           
 28875                           	psect	text62
 28876  0191C6                     __ptext62:
 28877                           	opt stack 0
 28878  0191C6                     _PMD_Initialize:
 28879                           	opt stack 16
 28880                           
 28881                           ;mcc.c: 86: PMD0 = 0x00;
 28882                           
 28883                           ;incstack = 0
 28884  0191C6  0E00               	movlw	0
 28885  0191C8  010E               	movlb	14	; () banked
 28886  0191CA  6F4C               	movwf	76,b	;volatile
 28887                           
 28888                           ;mcc.c: 88: PMD1 = 0x00;
 28889  0191CC  0E00               	movlw	0
 28890  0191CE  6F4D               	movwf	77,b	;volatile
 28891                           
 28892                           ;mcc.c: 90: PMD2 = 0x00;
 28893  0191D0  0E00               	movlw	0
 28894  0191D2  6F4E               	movwf	78,b	;volatile
 28895                           
 28896                           ;mcc.c: 92: PMD3 = 0x00;
 28897  0191D4  0E00               	movlw	0
 28898  0191D6  6F4F               	movwf	79,b	;volatile
 28899                           
 28900                           ;mcc.c: 94: PMD4 = 0x00;
 28901  0191D8  0E00               	movlw	0
 28902  0191DA  6F50               	movwf	80,b	;volatile
 28903                           
 28904                           ;mcc.c: 96: PMD5 = 0x00;
 28905  0191DC  0E00               	movlw	0
 28906  0191DE  6F51               	movwf	81,b	;volatile
 28907                           
 28908                           ; BSR set to: 14
 28909  0191E0  0012               	return		;funcret
 28910  0191E2                     __end_of_PMD_Initialize:
 28911                           	opt stack 0
 28912                           tblptru	equ	0xFF8
 28913                           tblptrh	equ	0xFF7
 28914                           tblptrl	equ	0xFF6
 28915                           tablat	equ	0xFF5
 28916                           prodh	equ	0xFF4
 28917                           prodl	equ	0xFF3
 28918                           intcon	equ	0xFF2
 28919                           indf0	equ	0xFEF
 28920                           postinc0	equ	0xFEE
 28921                           fsr0h	equ	0xFEA
 28922                           fsr0l	equ	0xFE9
 28923                           wreg	equ	0xFE8
 28924                           indf1	equ	0xFE7
 28925                           postdec1	equ	0xFE5
 28926                           plusw1	equ	0xFE3
 28927                           fsr1h	equ	0xFE2
 28928                           fsr1l	equ	0xFE1
 28929                           indf2	equ	0xFDF
 28930                           postinc2	equ	0xFDE
 28931                           postdec2	equ	0xFDD
 28932                           plusw2	equ	0xFDB
 28933                           fsr2h	equ	0xFDA
 28934                           fsr2l	equ	0xFD9
 28935                           status	equ	0xFD8
 28936                           
 28937 ;; *************** function _PIN_MANAGER_Initialize *****************
 28938 ;; Defined at:
 28939 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 28940 ;; Parameters:    Size  Location     Type
 28941 ;;		None
 28942 ;; Auto vars:     Size  Location     Type
 28943 ;;		None
 28944 ;; Return value:  Size  Location     Type
 28945 ;;                  1    wreg      void 
 28946 ;; Registers used:
 28947 ;;		wreg, status,2
 28948 ;; Tracked objects:
 28949 ;;		On entry : 0/0
 28950 ;;		On exit  : 0/0
 28951 ;;		Unchanged: 0/0
 28952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28957 ;;Total ram usage:        0 bytes
 28958 ;; Hardware stack levels used:    1
 28959 ;; Hardware stack levels required when called:   13
 28960 ;; This function calls:
 28961 ;;		Nothing
 28962 ;; This function is called by:
 28963 ;;		_SYSTEM_Initialize
 28964 ;; This function uses a non-reentrant model
 28965 ;;
 28966                           
 28967                           	psect	text63
 28968  017F34                     __ptext63:
 28969                           	opt stack 0
 28970  017F34                     _PIN_MANAGER_Initialize:
 28971                           	opt stack 16
 28972                           
 28973                           ;pin_manager.c: 62: LATE = 0x00;
 28974                           
 28975                           ; BSR set to: 14
 28976                           ;incstack = 0
 28977  017F34  0E00               	movlw	0
 28978  017F36  6E7D               	movwf	3965,c	;volatile
 28979                           
 28980                           ;pin_manager.c: 63: LATD = 0x00;
 28981  017F38  0E00               	movlw	0
 28982  017F3A  6E7C               	movwf	3964,c	;volatile
 28983                           
 28984                           ;pin_manager.c: 64: LATA = 0x00;
 28985  017F3C  0E00               	movlw	0
 28986  017F3E  6E79               	movwf	3961,c	;volatile
 28987                           
 28988                           ;pin_manager.c: 65: LATF = 0x00;
 28989  017F40  0E00               	movlw	0
 28990  017F42  6E7E               	movwf	3966,c	;volatile
 28991                           
 28992                           ;pin_manager.c: 66: LATB = 0x00;
 28993  017F44  0E00               	movlw	0
 28994  017F46  6E7A               	movwf	3962,c	;volatile
 28995                           
 28996                           ;pin_manager.c: 67: LATG = 0x00;
 28997  017F48  0E00               	movlw	0
 28998  017F4A  6E7F               	movwf	3967,c	;volatile
 28999                           
 29000                           ;pin_manager.c: 68: LATC = 0x00;
 29001  017F4C  0E00               	movlw	0
 29002  017F4E  6E7B               	movwf	3963,c	;volatile
 29003                           
 29004                           ;pin_manager.c: 69: LATH = 0x00;
 29005  017F50  0E00               	movlw	0
 29006  017F52  6E80               	movwf	3968,c	;volatile
 29007                           
 29008                           ;pin_manager.c: 74: TRISE = 0xFF;
 29009  017F54  6885               	setf	3973,c	;volatile
 29010                           
 29011                           ;pin_manager.c: 75: TRISF = 0xF0;
 29012  017F56  0EF0               	movlw	240
 29013  017F58  6E86               	movwf	3974,c	;volatile
 29014                           
 29015                           ;pin_manager.c: 76: TRISA = 0xFF;
 29016  017F5A  6881               	setf	3969,c	;volatile
 29017                           
 29018                           ;pin_manager.c: 77: TRISG = 0x5C;
 29019  017F5C  0E5C               	movlw	92
 29020  017F5E  6E87               	movwf	3975,c	;volatile
 29021                           
 29022                           ;pin_manager.c: 78: TRISB = 0xFF;
 29023  017F60  6882               	setf	3970,c	;volatile
 29024                           
 29025                           ;pin_manager.c: 79: TRISH = 0x0F;
 29026  017F62  0E0F               	movlw	15
 29027  017F64  6E88               	movwf	3976,c	;volatile
 29028                           
 29029                           ;pin_manager.c: 80: TRISC = 0xFF;
 29030  017F66  6883               	setf	3971,c	;volatile
 29031                           
 29032                           ;pin_manager.c: 81: TRISD = 0xFF;
 29033  017F68  6884               	setf	3972,c	;volatile
 29034                           
 29035                           ;pin_manager.c: 86: ANSELD = 0xFF;
 29036  017F6A  010E               	movlb	14	; () banked
 29037  017F6C  69A7               	setf	167,b	;volatile
 29038                           
 29039                           ; BSR set to: 14
 29040                           ;pin_manager.c: 87: ANSELB = 0xFF;
 29041  017F6E  699A               	setf	154,b	;volatile
 29042                           
 29043                           ; BSR set to: 14
 29044                           ;pin_manager.c: 88: ANSELE = 0xFF;
 29045  017F70  69AF               	setf	175,b	;volatile
 29046                           
 29047                           ;pin_manager.c: 89: ANSELG = 0x3C;
 29048  017F72  0E3C               	movlw	60
 29049  017F74  6FBC               	movwf	188,b	;volatile
 29050                           
 29051                           ;pin_manager.c: 90: ANSELF = 0xF0;
 29052  017F76  0EF0               	movlw	240
 29053  017F78  6FB4               	movwf	180,b	;volatile
 29054                           
 29055                           ; BSR set to: 14
 29056                           ;pin_manager.c: 91: ANSELA = 0xFF;
 29057  017F7A  6992               	setf	146,b	;volatile
 29058                           
 29059                           ;pin_manager.c: 96: WPUD = 0x00;
 29060  017F7C  0E00               	movlw	0
 29061  017F7E  6FA6               	movwf	166,b	;volatile
 29062                           
 29063                           ;pin_manager.c: 97: WPUF = 0x00;
 29064  017F80  0E00               	movlw	0
 29065  017F82  6FB3               	movwf	179,b	;volatile
 29066                           
 29067                           ;pin_manager.c: 98: WPUE = 0x00;
 29068  017F84  0E00               	movlw	0
 29069  017F86  6FAE               	movwf	174,b	;volatile
 29070                           
 29071                           ;pin_manager.c: 99: WPUB = 0x00;
 29072  017F88  0E00               	movlw	0
 29073  017F8A  6F99               	movwf	153,b	;volatile
 29074                           
 29075                           ;pin_manager.c: 100: WPUG = 0x00;
 29076  017F8C  0E00               	movlw	0
 29077  017F8E  6FBB               	movwf	187,b	;volatile
 29078                           
 29079                           ;pin_manager.c: 101: WPUA = 0x00;
 29080  017F90  0E00               	movlw	0
 29081  017F92  6F91               	movwf	145,b	;volatile
 29082                           
 29083                           ;pin_manager.c: 102: WPUC = 0x00;
 29084  017F94  0E00               	movlw	0
 29085  017F96  6FA1               	movwf	161,b	;volatile
 29086                           
 29087                           ;pin_manager.c: 103: WPUH = 0x00;
 29088  017F98  0E00               	movlw	0
 29089  017F9A  6FC0               	movwf	192,b	;volatile
 29090                           
 29091                           ;pin_manager.c: 108: ODCONE = 0x00;
 29092  017F9C  0E00               	movlw	0
 29093  017F9E  6FAD               	movwf	173,b	;volatile
 29094                           
 29095                           ;pin_manager.c: 109: ODCONF = 0x01;
 29096  017FA0  0E01               	movlw	1
 29097  017FA2  6FB2               	movwf	178,b	;volatile
 29098                           
 29099                           ;pin_manager.c: 110: ODCONA = 0x00;
 29100  017FA4  0E00               	movlw	0
 29101  017FA6  6F90               	movwf	144,b	;volatile
 29102                           
 29103                           ;pin_manager.c: 111: ODCONG = 0x00;
 29104  017FA8  0E00               	movlw	0
 29105  017FAA  6FBA               	movwf	186,b	;volatile
 29106                           
 29107                           ;pin_manager.c: 112: ODCONB = 0x00;
 29108  017FAC  0E00               	movlw	0
 29109  017FAE  6F98               	movwf	152,b	;volatile
 29110                           
 29111                           ;pin_manager.c: 113: ODCONH = 0x00;
 29112  017FB0  0E00               	movlw	0
 29113  017FB2  6FBF               	movwf	191,b	;volatile
 29114                           
 29115                           ;pin_manager.c: 114: ODCONC = 0x00;
 29116  017FB4  0E00               	movlw	0
 29117  017FB6  6FA0               	movwf	160,b	;volatile
 29118                           
 29119                           ;pin_manager.c: 115: ODCOND = 0x00;
 29120  017FB8  0E00               	movlw	0
 29121  017FBA  6FA5               	movwf	165,b	;volatile
 29122                           
 29123                           ; BSR set to: 14
 29124                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 29125  017FBC  698F               	setf	143,b	;volatile
 29126                           
 29127                           ; BSR set to: 14
 29128                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 29129  017FBE  6997               	setf	151,b	;volatile
 29130                           
 29131                           ; BSR set to: 14
 29132                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 29133  017FC0  699F               	setf	159,b	;volatile
 29134                           
 29135                           ; BSR set to: 14
 29136                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 29137  017FC2  69A4               	setf	164,b	;volatile
 29138                           
 29139                           ; BSR set to: 14
 29140                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 29141  017FC4  69AC               	setf	172,b	;volatile
 29142                           
 29143                           ; BSR set to: 14
 29144                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 29145  017FC6  69B1               	setf	177,b	;volatile
 29146                           
 29147                           ; BSR set to: 14
 29148                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 29149  017FC8  69B9               	setf	185,b	;volatile
 29150                           
 29151                           ; BSR set to: 14
 29152                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 29153  017FCA  69BE               	setf	190,b	;volatile
 29154                           
 29155                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 29156  017FCC  0E0E               	movlw	14
 29157  017FCE  6F89               	movwf	137,b	;volatile
 29158                           
 29159                           ;pin_manager.c: 137: RX2PPS = 0x36;
 29160  017FD0  0E36               	movlw	54
 29161  017FD2  6F11               	movwf	17,b	;volatile
 29162                           
 29163                           ; BSR set to: 14
 29164  017FD4  0012               	return		;funcret
 29165  017FD6                     __end_of_PIN_MANAGER_Initialize:
 29166                           	opt stack 0
 29167                           tblptru	equ	0xFF8
 29168                           tblptrh	equ	0xFF7
 29169                           tblptrl	equ	0xFF6
 29170                           tablat	equ	0xFF5
 29171                           prodh	equ	0xFF4
 29172                           prodl	equ	0xFF3
 29173                           intcon	equ	0xFF2
 29174                           indf0	equ	0xFEF
 29175                           postinc0	equ	0xFEE
 29176                           fsr0h	equ	0xFEA
 29177                           fsr0l	equ	0xFE9
 29178                           wreg	equ	0xFE8
 29179                           indf1	equ	0xFE7
 29180                           postdec1	equ	0xFE5
 29181                           plusw1	equ	0xFE3
 29182                           fsr1h	equ	0xFE2
 29183                           fsr1l	equ	0xFE1
 29184                           indf2	equ	0xFDF
 29185                           postinc2	equ	0xFDE
 29186                           postdec2	equ	0xFDD
 29187                           plusw2	equ	0xFDB
 29188                           fsr2h	equ	0xFDA
 29189                           fsr2l	equ	0xFD9
 29190                           status	equ	0xFD8
 29191                           
 29192 ;; *************** function _OSCILLATOR_Initialize *****************
 29193 ;; Defined at:
 29194 ;;		line 65 in file "mcc_generated_files/mcc.c"
 29195 ;; Parameters:    Size  Location     Type
 29196 ;;		None
 29197 ;; Auto vars:     Size  Location     Type
 29198 ;;		None
 29199 ;; Return value:  Size  Location     Type
 29200 ;;                  1    wreg      void 
 29201 ;; Registers used:
 29202 ;;		wreg, status,2
 29203 ;; Tracked objects:
 29204 ;;		On entry : 0/0
 29205 ;;		On exit  : 0/0
 29206 ;;		Unchanged: 0/0
 29207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29212 ;;Total ram usage:        0 bytes
 29213 ;; Hardware stack levels used:    1
 29214 ;; Hardware stack levels required when called:   13
 29215 ;; This function calls:
 29216 ;;		Nothing
 29217 ;; This function is called by:
 29218 ;;		_SYSTEM_Initialize
 29219 ;; This function uses a non-reentrant model
 29220 ;;
 29221                           
 29222                           	psect	text64
 29223  0191E2                     __ptext64:
 29224                           	opt stack 0
 29225  0191E2                     _OSCILLATOR_Initialize:
 29226                           	opt stack 16
 29227                           
 29228                           ;mcc.c: 68: OSCCON1 = 0x20;
 29229                           
 29230                           ; BSR set to: 14
 29231                           ;incstack = 0
 29232  0191E2  0E20               	movlw	32
 29233  0191E4  010E               	movlb	14	; () banked
 29234  0191E6  6F43               	movwf	67,b	;volatile
 29235                           
 29236                           ;mcc.c: 70: OSCCON3 = 0x00;
 29237  0191E8  0E00               	movlw	0
 29238  0191EA  6F45               	movwf	69,b	;volatile
 29239                           
 29240                           ;mcc.c: 72: OSCEN = 0x00;
 29241  0191EC  0E00               	movlw	0
 29242  0191EE  6F47               	movwf	71,b	;volatile
 29243                           
 29244                           ;mcc.c: 74: OSCFRQ = 0x02;
 29245  0191F0  0E02               	movlw	2
 29246  0191F2  6F49               	movwf	73,b	;volatile
 29247                           
 29248                           ;mcc.c: 76: OSCTUNE = 0x00;
 29249  0191F4  0E00               	movlw	0
 29250  0191F6  6F48               	movwf	72,b	;volatile
 29251  0191F8                     
 29252                           ; BSR set to: 14
 29253                           
 29254                           ; BSR set to: 14
 29255                           ;mcc.c: 79: {
 29256  0191F8  B146               	btfsc	70,0,b	;volatile
 29257  0191FA  0012               	return	
 29258  0191FC  D7FD               	goto	l57
 29259  0191FE                     __end_of_OSCILLATOR_Initialize:
 29260                           	opt stack 0
 29261                           tblptru	equ	0xFF8
 29262                           tblptrh	equ	0xFF7
 29263                           tblptrl	equ	0xFF6
 29264                           tablat	equ	0xFF5
 29265                           prodh	equ	0xFF4
 29266                           prodl	equ	0xFF3
 29267                           intcon	equ	0xFF2
 29268                           indf0	equ	0xFEF
 29269                           postinc0	equ	0xFEE
 29270                           fsr0h	equ	0xFEA
 29271                           fsr0l	equ	0xFE9
 29272                           wreg	equ	0xFE8
 29273                           indf1	equ	0xFE7
 29274                           postdec1	equ	0xFE5
 29275                           plusw1	equ	0xFE3
 29276                           fsr1h	equ	0xFE2
 29277                           fsr1l	equ	0xFE1
 29278                           indf2	equ	0xFDF
 29279                           postinc2	equ	0xFDE
 29280                           postdec2	equ	0xFDD
 29281                           plusw2	equ	0xFDB
 29282                           fsr2h	equ	0xFDA
 29283                           fsr2l	equ	0xFD9
 29284                           status	equ	0xFD8
 29285                           
 29286 ;; *************** function _INTERRUPT_Initialize *****************
 29287 ;; Defined at:
 29288 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29289 ;; Parameters:    Size  Location     Type
 29290 ;;		None
 29291 ;; Auto vars:     Size  Location     Type
 29292 ;;		None
 29293 ;; Return value:  Size  Location     Type
 29294 ;;                  1    wreg      void 
 29295 ;; Registers used:
 29296 ;;		None
 29297 ;; Tracked objects:
 29298 ;;		On entry : 0/0
 29299 ;;		On exit  : 0/0
 29300 ;;		Unchanged: 0/0
 29301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29306 ;;Total ram usage:        0 bytes
 29307 ;; Hardware stack levels used:    1
 29308 ;; Hardware stack levels required when called:   13
 29309 ;; This function calls:
 29310 ;;		Nothing
 29311 ;; This function is called by:
 29312 ;;		_SYSTEM_Initialize
 29313 ;; This function uses a non-reentrant model
 29314 ;;
 29315                           
 29316                           	psect	text65
 29317  01924E                     __ptext65:
 29318                           	opt stack 0
 29319  01924E                     _INTERRUPT_Initialize:
 29320                           	opt stack 16
 29321                           
 29322                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 29323                           
 29324                           ; BSR set to: 14
 29325                           ;incstack = 0
 29326  01924E  8AF2               	bsf	intcon,5,c	;volatile
 29327                           
 29328                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 29329  019250  010E               	movlb	14	; () banked
 29330  019252  8F22               	bsf	34,7,b	;volatile
 29331                           
 29332                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 29333  019254  8924               	bsf	36,4,b	;volatile
 29334                           
 29335                           ;interrupt_manager.c: 66: IPR1bits.ADTIP = 1;
 29336  019256  8320               	bsf	32,1,b	;volatile
 29337                           
 29338                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 29339  019258  9B24               	bcf	36,5,b	;volatile
 29340                           
 29341                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 29342  01925A  9D22               	bcf	34,6,b	;volatile
 29343                           
 29344                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 29345  01925C  9D24               	bcf	36,6,b	;volatile
 29346                           
 29347                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 29348  01925E  9F21               	bcf	33,7,b	;volatile
 29349                           
 29350                           ; BSR set to: 14
 29351  019260  0012               	return		;funcret
 29352  019262                     __end_of_INTERRUPT_Initialize:
 29353                           	opt stack 0
 29354                           tblptru	equ	0xFF8
 29355                           tblptrh	equ	0xFF7
 29356                           tblptrl	equ	0xFF6
 29357                           tablat	equ	0xFF5
 29358                           prodh	equ	0xFF4
 29359                           prodl	equ	0xFF3
 29360                           intcon	equ	0xFF2
 29361                           indf0	equ	0xFEF
 29362                           postinc0	equ	0xFEE
 29363                           fsr0h	equ	0xFEA
 29364                           fsr0l	equ	0xFE9
 29365                           wreg	equ	0xFE8
 29366                           indf1	equ	0xFE7
 29367                           postdec1	equ	0xFE5
 29368                           plusw1	equ	0xFE3
 29369                           fsr1h	equ	0xFE2
 29370                           fsr1l	equ	0xFE1
 29371                           indf2	equ	0xFDF
 29372                           postinc2	equ	0xFDE
 29373                           postdec2	equ	0xFDD
 29374                           plusw2	equ	0xFDB
 29375                           fsr2h	equ	0xFDA
 29376                           fsr2l	equ	0xFD9
 29377                           status	equ	0xFD8
 29378                           
 29379 ;; *************** function _HLVD_Initialize *****************
 29380 ;; Defined at:
 29381 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 29382 ;; Parameters:    Size  Location     Type
 29383 ;;		None
 29384 ;; Auto vars:     Size  Location     Type
 29385 ;;		None
 29386 ;; Return value:  Size  Location     Type
 29387 ;;                  1    wreg      void 
 29388 ;; Registers used:
 29389 ;;		wreg, status,2
 29390 ;; Tracked objects:
 29391 ;;		On entry : 0/0
 29392 ;;		On exit  : 0/0
 29393 ;;		Unchanged: 0/0
 29394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29399 ;;Total ram usage:        0 bytes
 29400 ;; Hardware stack levels used:    1
 29401 ;; Hardware stack levels required when called:   13
 29402 ;; This function calls:
 29403 ;;		Nothing
 29404 ;; This function is called by:
 29405 ;;		_SYSTEM_Initialize
 29406 ;; This function uses a non-reentrant model
 29407 ;;
 29408                           
 29409                           	psect	text66
 29410  0192DE                     __ptext66:
 29411                           	opt stack 0
 29412  0192DE                     _HLVD_Initialize:
 29413                           	opt stack 16
 29414                           
 29415                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 29416                           
 29417                           ; BSR set to: 14
 29418                           ;incstack = 0
 29419  0192DE  0E09               	movlw	9
 29420  0192E0  010E               	movlb	14	; () banked
 29421  0192E2  6FC3               	movwf	195,b	;volatile
 29422                           
 29423                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 29424  0192E4  0E82               	movlw	130
 29425  0192E6  6FC2               	movwf	194,b	;volatile
 29426                           
 29427                           ; BSR set to: 14
 29428                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 29429  0192E8  9F35               	bcf	53,7,b	;volatile
 29430                           
 29431                           ; BSR set to: 14
 29432                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 29433  0192EA  8F2B               	bsf	43,7,b	;volatile
 29434                           
 29435                           ; BSR set to: 14
 29436  0192EC  0012               	return		;funcret
 29437  0192EE                     __end_of_HLVD_Initialize:
 29438                           	opt stack 0
 29439                           tblptru	equ	0xFF8
 29440                           tblptrh	equ	0xFF7
 29441                           tblptrl	equ	0xFF6
 29442                           tablat	equ	0xFF5
 29443                           prodh	equ	0xFF4
 29444                           prodl	equ	0xFF3
 29445                           intcon	equ	0xFF2
 29446                           indf0	equ	0xFEF
 29447                           postinc0	equ	0xFEE
 29448                           fsr0h	equ	0xFEA
 29449                           fsr0l	equ	0xFE9
 29450                           wreg	equ	0xFE8
 29451                           indf1	equ	0xFE7
 29452                           postdec1	equ	0xFE5
 29453                           plusw1	equ	0xFE3
 29454                           fsr1h	equ	0xFE2
 29455                           fsr1l	equ	0xFE1
 29456                           indf2	equ	0xFDF
 29457                           postinc2	equ	0xFDE
 29458                           postdec2	equ	0xFDD
 29459                           plusw2	equ	0xFDB
 29460                           fsr2h	equ	0xFDA
 29461                           fsr2l	equ	0xFD9
 29462                           status	equ	0xFD8
 29463                           
 29464 ;; *************** function _FVR_Initialize *****************
 29465 ;; Defined at:
 29466 ;;		line 58 in file "mcc_generated_files/fvr.c"
 29467 ;; Parameters:    Size  Location     Type
 29468 ;;		None
 29469 ;; Auto vars:     Size  Location     Type
 29470 ;;		None
 29471 ;; Return value:  Size  Location     Type
 29472 ;;                  1    wreg      void 
 29473 ;; Registers used:
 29474 ;;		wreg, status,2
 29475 ;; Tracked objects:
 29476 ;;		On entry : 0/0
 29477 ;;		On exit  : 0/0
 29478 ;;		Unchanged: 0/0
 29479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29484 ;;Total ram usage:        0 bytes
 29485 ;; Hardware stack levels used:    1
 29486 ;; Hardware stack levels required when called:   13
 29487 ;; This function calls:
 29488 ;;		Nothing
 29489 ;; This function is called by:
 29490 ;;		_SYSTEM_Initialize
 29491 ;; This function uses a non-reentrant model
 29492 ;;
 29493                           
 29494                           	psect	text67
 29495  019374                     __ptext67:
 29496                           	opt stack 0
 29497  019374                     _FVR_Initialize:
 29498                           	opt stack 16
 29499                           
 29500                           ;fvr.c: 61: FVRCON = 0xA6;
 29501                           
 29502                           ; BSR set to: 14
 29503                           ;incstack = 0
 29504  019374  0EA6               	movlw	166
 29505  019376  010E               	movlb	14	; () banked
 29506  019378  6FC4               	movwf	196,b	;volatile
 29507                           
 29508                           ; BSR set to: 14
 29509  01937A  0012               	return		;funcret
 29510  01937C                     __end_of_FVR_Initialize:
 29511                           	opt stack 0
 29512                           tblptru	equ	0xFF8
 29513                           tblptrh	equ	0xFF7
 29514                           tblptrl	equ	0xFF6
 29515                           tablat	equ	0xFF5
 29516                           prodh	equ	0xFF4
 29517                           prodl	equ	0xFF3
 29518                           intcon	equ	0xFF2
 29519                           indf0	equ	0xFEF
 29520                           postinc0	equ	0xFEE
 29521                           fsr0h	equ	0xFEA
 29522                           fsr0l	equ	0xFE9
 29523                           wreg	equ	0xFE8
 29524                           indf1	equ	0xFE7
 29525                           postdec1	equ	0xFE5
 29526                           plusw1	equ	0xFE3
 29527                           fsr1h	equ	0xFE2
 29528                           fsr1l	equ	0xFE1
 29529                           indf2	equ	0xFDF
 29530                           postinc2	equ	0xFDE
 29531                           postdec2	equ	0xFDD
 29532                           plusw2	equ	0xFDB
 29533                           fsr2h	equ	0xFDA
 29534                           fsr2l	equ	0xFD9
 29535                           status	equ	0xFD8
 29536                           
 29537 ;; *************** function _EUSART2_Initialize *****************
 29538 ;; Defined at:
 29539 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 29540 ;; Parameters:    Size  Location     Type
 29541 ;;		None
 29542 ;; Auto vars:     Size  Location     Type
 29543 ;;		None
 29544 ;; Return value:  Size  Location     Type
 29545 ;;                  1    wreg      void 
 29546 ;; Registers used:
 29547 ;;		wreg, status,2, status,0, cstack
 29548 ;; Tracked objects:
 29549 ;;		On entry : 0/0
 29550 ;;		On exit  : 0/0
 29551 ;;		Unchanged: 0/0
 29552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29557 ;;Total ram usage:        0 bytes
 29558 ;; Hardware stack levels used:    1
 29559 ;; Hardware stack levels required when called:   14
 29560 ;; This function calls:
 29561 ;;		_EUSART2_SetRxInterruptHandler
 29562 ;;		_EUSART2_SetTxInterruptHandler
 29563 ;; This function is called by:
 29564 ;;		_SYSTEM_Initialize
 29565 ;; This function uses a non-reentrant model
 29566 ;;
 29567                           
 29568                           	psect	text68
 29569  01866A                     __ptext68:
 29570                           	opt stack 0
 29571  01866A                     _EUSART2_Initialize:
 29572                           	opt stack 15
 29573                           
 29574                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 29575                           
 29576                           ; BSR set to: 14
 29577                           ;incstack = 0
 29578  01866A  827E               	bsf	3966,1,c	;volatile
 29579                           
 29580                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 29581  01866C  010E               	movlb	14	; () banked
 29582  01866E  9F2C               	bcf	44,7,b	;volatile
 29583                           
 29584                           ; BSR set to: 14
 29585                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 29586  018670  0E86               	movlw	low _EUSART2_Receive_ISR
 29587  018672  0101               	movlb	1	; () banked
 29588  018674  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 29589  018676  0E7E               	movlw	high _EUSART2_Receive_ISR
 29590  018678  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 29591  01867A  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 29592  01867C  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 29593  01867E  EC9A  F0C9         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 29594                           
 29595                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 29596  018682  010E               	movlb	14	; () banked
 29597  018684  9D2C               	bcf	44,6,b	;volatile
 29598                           
 29599                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 29600  018686  0EA2               	movlw	low _EUSART2_Transmit_ISR
 29601  018688  0101               	movlb	1	; () banked
 29602  01868A  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 29603  01868C  0E8E               	movlw	high _EUSART2_Transmit_ISR
 29604  01868E  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 29605  018690  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 29606  018692  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 29607  018694  EC93  F0C9         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 29608                           
 29609                           ;eusart2.c: 91: BAUD2CON = 0x08;
 29610  018698  0E08               	movlw	8
 29611  01869A  010E               	movlb	14	; () banked
 29612  01869C  6FF7               	movwf	247,b	;volatile
 29613                           
 29614                           ; BSR set to: 14
 29615                           ;eusart2.c: 94: RC2STA = 0x90;
 29616  01869E  0E90               	movlw	144
 29617  0186A0  6FF5               	movwf	245,b	;volatile
 29618                           
 29619                           ; BSR set to: 14
 29620                           ;eusart2.c: 97: TX2STA = 0x24;
 29621  0186A2  0E24               	movlw	36
 29622  0186A4  6FF6               	movwf	246,b	;volatile
 29623                           
 29624                           ; BSR set to: 14
 29625                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 29626  0186A6  0E8A               	movlw	138
 29627  0186A8  6FF3               	movwf	243,b	;volatile
 29628                           
 29629                           ; BSR set to: 14
 29630                           ;eusart2.c: 103: SP2BRGH = 0x00;
 29631  0186AA  0E00               	movlw	0
 29632  0186AC  6FF4               	movwf	244,b	;volatile
 29633                           
 29634                           ; BSR set to: 14
 29635                           ;eusart2.c: 107: eusart2TxHead = 0;
 29636  0186AE  0E00               	movlw	0
 29637  0186B0  0101               	movlb	1	; () banked
 29638  0186B2  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 29639                           
 29640                           ; BSR set to: 1
 29641                           ;eusart2.c: 108: eusart2TxTail = 0;
 29642  0186B4  0E00               	movlw	0
 29643  0186B6  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 29644                           
 29645                           ; BSR set to: 1
 29646                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 29647  0186B8  0E80               	movlw	128
 29648  0186BA  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 29649                           
 29650                           ; BSR set to: 1
 29651                           ;eusart2.c: 111: eusart2RxHead = 0;
 29652  0186BC  0E00               	movlw	0
 29653  0186BE  0100               	movlb	0	; () banked
 29654  0186C0  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 29655                           
 29656                           ; BSR set to: 0
 29657                           ;eusart2.c: 112: eusart2RxTail = 0;
 29658  0186C2  0E00               	movlw	0
 29659  0186C4  0101               	movlb	1	; () banked
 29660  0186C6  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 29661                           
 29662                           ; BSR set to: 1
 29663                           ;eusart2.c: 113: eusart2RxCount = 0;
 29664  0186C8  0E00               	movlw	0
 29665  0186CA  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
 29666                           
 29667                           ; BSR set to: 1
 29668                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 29669  0186CC  010E               	movlb	14	; () banked
 29670  0186CE  8F2C               	bsf	44,7,b	;volatile
 29671                           
 29672                           ; BSR set to: 14
 29673                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 29674  0186D0  927E               	bcf	3966,1,c	;volatile
 29675                           
 29676                           ; BSR set to: 14
 29677  0186D2  0012               	return		;funcret
 29678  0186D4                     __end_of_EUSART2_Initialize:
 29679                           	opt stack 0
 29680                           tblptru	equ	0xFF8
 29681                           tblptrh	equ	0xFF7
 29682                           tblptrl	equ	0xFF6
 29683                           tablat	equ	0xFF5
 29684                           prodh	equ	0xFF4
 29685                           prodl	equ	0xFF3
 29686                           intcon	equ	0xFF2
 29687                           indf0	equ	0xFEF
 29688                           postinc0	equ	0xFEE
 29689                           fsr0h	equ	0xFEA
 29690                           fsr0l	equ	0xFE9
 29691                           wreg	equ	0xFE8
 29692                           indf1	equ	0xFE7
 29693                           postdec1	equ	0xFE5
 29694                           plusw1	equ	0xFE3
 29695                           fsr1h	equ	0xFE2
 29696                           fsr1l	equ	0xFE1
 29697                           indf2	equ	0xFDF
 29698                           postinc2	equ	0xFDE
 29699                           postdec2	equ	0xFDD
 29700                           plusw2	equ	0xFDB
 29701                           fsr2h	equ	0xFDA
 29702                           fsr2l	equ	0xFD9
 29703                           status	equ	0xFD8
 29704                           
 29705 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 29706 ;; Defined at:
 29707 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 29708 ;; Parameters:    Size  Location     Type
 29709 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 29710 ;;		 -> EUSART2_Transmit_ISR(1), 
 29711 ;; Auto vars:     Size  Location     Type
 29712 ;;		None
 29713 ;; Return value:  Size  Location     Type
 29714 ;;                  1    wreg      void 
 29715 ;; Registers used:
 29716 ;;		wreg, status,2, status,0
 29717 ;; Tracked objects:
 29718 ;;		On entry : 0/0
 29719 ;;		On exit  : 0/0
 29720 ;;		Unchanged: 0/0
 29721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29722 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29725 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29726 ;;Total ram usage:        3 bytes
 29727 ;; Hardware stack levels used:    1
 29728 ;; Hardware stack levels required when called:   13
 29729 ;; This function calls:
 29730 ;;		Nothing
 29731 ;; This function is called by:
 29732 ;;		_EUSART2_Initialize
 29733 ;; This function uses a non-reentrant model
 29734 ;;
 29735                           
 29736                           	psect	text69
 29737  019326                     __ptext69:
 29738                           	opt stack 0
 29739  019326                     _EUSART2_SetTxInterruptHandler:
 29740                           	opt stack 15
 29741                           
 29742                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 29743                           
 29744                           ; BSR set to: 14
 29745                           ;incstack = 0
 29746  019326  C117  F237         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 29747  01932A  C118  F238         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 29748  01932E  C119  F239         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 29749  019332  0012               	return		;funcret
 29750  019334                     __end_of_EUSART2_SetTxInterruptHandler:
 29751                           	opt stack 0
 29752                           tblptru	equ	0xFF8
 29753                           tblptrh	equ	0xFF7
 29754                           tblptrl	equ	0xFF6
 29755                           tablat	equ	0xFF5
 29756                           prodh	equ	0xFF4
 29757                           prodl	equ	0xFF3
 29758                           intcon	equ	0xFF2
 29759                           indf0	equ	0xFEF
 29760                           postinc0	equ	0xFEE
 29761                           fsr0h	equ	0xFEA
 29762                           fsr0l	equ	0xFE9
 29763                           wreg	equ	0xFE8
 29764                           indf1	equ	0xFE7
 29765                           postdec1	equ	0xFE5
 29766                           plusw1	equ	0xFE3
 29767                           fsr1h	equ	0xFE2
 29768                           fsr1l	equ	0xFE1
 29769                           indf2	equ	0xFDF
 29770                           postinc2	equ	0xFDE
 29771                           postdec2	equ	0xFDD
 29772                           plusw2	equ	0xFDB
 29773                           fsr2h	equ	0xFDA
 29774                           fsr2l	equ	0xFD9
 29775                           status	equ	0xFD8
 29776                           
 29777 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 29778 ;; Defined at:
 29779 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 29780 ;; Parameters:    Size  Location     Type
 29781 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 29782 ;;		 -> EUSART2_Receive_ISR(1), 
 29783 ;; Auto vars:     Size  Location     Type
 29784 ;;		None
 29785 ;; Return value:  Size  Location     Type
 29786 ;;                  1    wreg      void 
 29787 ;; Registers used:
 29788 ;;		wreg, status,2, status,0
 29789 ;; Tracked objects:
 29790 ;;		On entry : 0/0
 29791 ;;		On exit  : 0/0
 29792 ;;		Unchanged: 0/0
 29793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29794 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29797 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29798 ;;Total ram usage:        3 bytes
 29799 ;; Hardware stack levels used:    1
 29800 ;; Hardware stack levels required when called:   13
 29801 ;; This function calls:
 29802 ;;		Nothing
 29803 ;; This function is called by:
 29804 ;;		_EUSART2_Initialize
 29805 ;; This function uses a non-reentrant model
 29806 ;;
 29807                           
 29808                           	psect	text70
 29809  019334                     __ptext70:
 29810                           	opt stack 0
 29811  019334                     _EUSART2_SetRxInterruptHandler:
 29812                           	opt stack 15
 29813                           
 29814                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 29815                           
 29816                           ;incstack = 0
 29817  019334  C117  F234         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 29818  019338  C118  F235         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 29819  01933C  C119  F236         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 29820  019340  0012               	return		;funcret
 29821  019342                     __end_of_EUSART2_SetRxInterruptHandler:
 29822                           	opt stack 0
 29823                           tblptru	equ	0xFF8
 29824                           tblptrh	equ	0xFF7
 29825                           tblptrl	equ	0xFF6
 29826                           tablat	equ	0xFF5
 29827                           prodh	equ	0xFF4
 29828                           prodl	equ	0xFF3
 29829                           intcon	equ	0xFF2
 29830                           indf0	equ	0xFEF
 29831                           postinc0	equ	0xFEE
 29832                           fsr0h	equ	0xFEA
 29833                           fsr0l	equ	0xFE9
 29834                           wreg	equ	0xFE8
 29835                           indf1	equ	0xFE7
 29836                           postdec1	equ	0xFE5
 29837                           plusw1	equ	0xFE3
 29838                           fsr1h	equ	0xFE2
 29839                           fsr1l	equ	0xFE1
 29840                           indf2	equ	0xFDF
 29841                           postinc2	equ	0xFDE
 29842                           postdec2	equ	0xFDD
 29843                           plusw2	equ	0xFDB
 29844                           fsr2h	equ	0xFDA
 29845                           fsr2l	equ	0xFD9
 29846                           status	equ	0xFD8
 29847                           
 29848 ;; *************** function _ADCC_Initialize *****************
 29849 ;; Defined at:
 29850 ;;		line 63 in file "mcc_generated_files/adcc.c"
 29851 ;; Parameters:    Size  Location     Type
 29852 ;;		None
 29853 ;; Auto vars:     Size  Location     Type
 29854 ;;		None
 29855 ;; Return value:  Size  Location     Type
 29856 ;;                  1    wreg      void 
 29857 ;; Registers used:
 29858 ;;		wreg, status,2, status,0, cstack
 29859 ;; Tracked objects:
 29860 ;;		On entry : 0/0
 29861 ;;		On exit  : 0/0
 29862 ;;		Unchanged: 0/0
 29863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29868 ;;Total ram usage:        0 bytes
 29869 ;; Hardware stack levels used:    1
 29870 ;; Hardware stack levels required when called:   14
 29871 ;; This function calls:
 29872 ;;		_ADCC_SetADTIInterruptHandler
 29873 ;; This function is called by:
 29874 ;;		_SYSTEM_Initialize
 29875 ;; This function uses a non-reentrant model
 29876 ;;
 29877                           
 29878                           	psect	text71
 29879  01886A                     __ptext71:
 29880                           	opt stack 0
 29881  01886A                     _ADCC_Initialize:
 29882                           	opt stack 15
 29883                           
 29884                           ;adcc.c: 67: ADLTHL = 0x00;
 29885                           
 29886                           ;incstack = 0
 29887  01886A  0E00               	movlw	0
 29888  01886C  6E6A               	movwf	3946,c	;volatile
 29889                           
 29890                           ;adcc.c: 69: ADLTHH = 0x00;
 29891  01886E  0E00               	movlw	0
 29892  018870  6E6B               	movwf	3947,c	;volatile
 29893                           
 29894                           ;adcc.c: 71: ADUTHL = 0x00;
 29895  018872  0E00               	movlw	0
 29896  018874  6E6C               	movwf	3948,c	;volatile
 29897                           
 29898                           ;adcc.c: 73: ADUTHH = 0x00;
 29899  018876  0E00               	movlw	0
 29900  018878  6E6D               	movwf	3949,c	;volatile
 29901                           
 29902                           ;adcc.c: 75: ADSTPTL = 0x00;
 29903  01887A  0E00               	movlw	0
 29904  01887C  6E68               	movwf	3944,c	;volatile
 29905                           
 29906                           ;adcc.c: 77: ADSTPTH = 0x00;
 29907  01887E  0E00               	movlw	0
 29908  018880  6E69               	movwf	3945,c	;volatile
 29909                           
 29910                           ;adcc.c: 79: ADRPT = 0xFF;
 29911  018882  6866               	setf	3942,c	;volatile
 29912                           
 29913                           ;adcc.c: 81: ADPCH = 0x00;
 29914  018884  0E00               	movlw	0
 29915  018886  010F               	movlb	15	; () banked
 29916  018888  6F5F               	movwf	95,b	;volatile
 29917                           
 29918                           ;adcc.c: 83: ADCAP = 0x00;
 29919  01888A  0E00               	movlw	0
 29920  01888C  6F5D               	movwf	93,b	;volatile
 29921                           
 29922                           ;adcc.c: 85: ADCON1 = 0x00;
 29923  01888E  0E00               	movlw	0
 29924  018890  6F59               	movwf	89,b	;volatile
 29925                           
 29926                           ;adcc.c: 87: ADCON2 = 0x04;
 29927  018892  0E04               	movlw	4
 29928  018894  6F5A               	movwf	90,b	;volatile
 29929                           
 29930                           ;adcc.c: 89: ADCON3 = 0x5F;
 29931  018896  0E5F               	movlw	95
 29932  018898  6F5B               	movwf	91,b	;volatile
 29933                           
 29934                           ;adcc.c: 91: ADSTAT = 0x00;
 29935  01889A  0E00               	movlw	0
 29936  01889C  6E65               	movwf	3941,c	;volatile
 29937                           
 29938                           ;adcc.c: 93: ADREF = 0x12;
 29939  01889E  0E12               	movlw	18
 29940  0188A0  6F58               	movwf	88,b	;volatile
 29941                           
 29942                           ;adcc.c: 95: ADACT = 0x00;
 29943  0188A2  0E00               	movlw	0
 29944  0188A4  6F56               	movwf	86,b	;volatile
 29945                           
 29946                           ;adcc.c: 97: ADCLK = 0x1F;
 29947  0188A6  0E1F               	movlw	31
 29948  0188A8  6F57               	movwf	87,b	;volatile
 29949                           
 29950                           ;adcc.c: 99: ADCON0 = 0xC4;
 29951  0188AA  0EC4               	movlw	196
 29952  0188AC  6E60               	movwf	3936,c	;volatile
 29953                           
 29954                           ; BSR set to: 15
 29955                           ;adcc.c: 101: ADACQ = 0xFF;
 29956  0188AE  695C               	setf	92,b	;volatile
 29957                           
 29958                           ; BSR set to: 15
 29959                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 29960  0188B0  010E               	movlb	14	; () banked
 29961  0188B2  9334               	bcf	52,1,b	;volatile
 29962                           
 29963                           ; BSR set to: 14
 29964                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 29965  0188B4  832A               	bsf	42,1,b	;volatile
 29966                           
 29967                           ; BSR set to: 14
 29968                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 29969  0188B6  0EAE               	movlw	low _ADCC_DefaultInterruptHandler
 29970  0188B8  0101               	movlb	1	; () banked
 29971  0188BA  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 29972  0188BC  0E93               	movlw	high _ADCC_DefaultInterruptHandler
 29973  0188BE  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 29974  0188C0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 29975  0188C2  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 29976  0188C4  ECA1  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 29977  0188C8  0012               	return		;funcret
 29978  0188CA                     __end_of_ADCC_Initialize:
 29979                           	opt stack 0
 29980                           tblptru	equ	0xFF8
 29981                           tblptrh	equ	0xFF7
 29982                           tblptrl	equ	0xFF6
 29983                           tablat	equ	0xFF5
 29984                           prodh	equ	0xFF4
 29985                           prodl	equ	0xFF3
 29986                           intcon	equ	0xFF2
 29987                           indf0	equ	0xFEF
 29988                           postinc0	equ	0xFEE
 29989                           fsr0h	equ	0xFEA
 29990                           fsr0l	equ	0xFE9
 29991                           wreg	equ	0xFE8
 29992                           indf1	equ	0xFE7
 29993                           postdec1	equ	0xFE5
 29994                           plusw1	equ	0xFE3
 29995                           fsr1h	equ	0xFE2
 29996                           fsr1l	equ	0xFE1
 29997                           indf2	equ	0xFDF
 29998                           postinc2	equ	0xFDE
 29999                           postdec2	equ	0xFDD
 30000                           plusw2	equ	0xFDB
 30001                           fsr2h	equ	0xFDA
 30002                           fsr2l	equ	0xFD9
 30003                           status	equ	0xFD8
 30004                           
 30005 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 30006 ;; Defined at:
 30007 ;;		line 307 in file "mcc_generated_files/adcc.c"
 30008 ;; Parameters:    Size  Location     Type
 30009 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 30010 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 30011 ;; Auto vars:     Size  Location     Type
 30012 ;;		None
 30013 ;; Return value:  Size  Location     Type
 30014 ;;                  1    wreg      void 
 30015 ;; Registers used:
 30016 ;;		wreg, status,2, status,0
 30017 ;; Tracked objects:
 30018 ;;		On entry : 0/0
 30019 ;;		On exit  : 0/0
 30020 ;;		Unchanged: 0/0
 30021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30022 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30025 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30026 ;;Total ram usage:        3 bytes
 30027 ;; Hardware stack levels used:    1
 30028 ;; Hardware stack levels required when called:   13
 30029 ;; This function calls:
 30030 ;;		Nothing
 30031 ;; This function is called by:
 30032 ;;		_ADCC_Initialize
 30033 ;;		_main
 30034 ;; This function uses a non-reentrant model
 30035 ;;
 30036                           
 30037                           	psect	text72
 30038  019342                     __ptext72:
 30039                           	opt stack 0
 30040  019342                     _ADCC_SetADTIInterruptHandler:
 30041                           	opt stack 15
 30042                           
 30043                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 30044                           
 30045                           ;incstack = 0
 30046  019342  C117  F22E         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 30047  019346  C118  F22F         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 30048  01934A  C119  F230         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 30049  01934E  0012               	return		;funcret
 30050  019350                     __end_of_ADCC_SetADTIInterruptHandler:
 30051                           	opt stack 0
 30052                           tblptru	equ	0xFF8
 30053                           tblptrh	equ	0xFF7
 30054                           tblptrl	equ	0xFF6
 30055                           tablat	equ	0xFF5
 30056                           prodh	equ	0xFF4
 30057                           prodl	equ	0xFF3
 30058                           intcon	equ	0xFF2
 30059                           indf0	equ	0xFEF
 30060                           postinc0	equ	0xFEE
 30061                           fsr0h	equ	0xFEA
 30062                           fsr0l	equ	0xFE9
 30063                           wreg	equ	0xFE8
 30064                           indf1	equ	0xFE7
 30065                           postdec1	equ	0xFE5
 30066                           plusw1	equ	0xFE3
 30067                           fsr1h	equ	0xFE2
 30068                           fsr1l	equ	0xFE1
 30069                           indf2	equ	0xFDF
 30070                           postinc2	equ	0xFDE
 30071                           postdec2	equ	0xFDD
 30072                           plusw2	equ	0xFDB
 30073                           fsr2h	equ	0xFDA
 30074                           fsr2l	equ	0xFD9
 30075                           status	equ	0xFD8
 30076                           
 30077 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 30078 ;; Defined at:
 30079 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 30080 ;; Parameters:    Size  Location     Type
 30081 ;;		None
 30082 ;; Auto vars:     Size  Location     Type
 30083 ;;		None
 30084 ;; Return value:  Size  Location     Type
 30085 ;;                  1    wreg      void 
 30086 ;; Registers used:
 30087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 30088 ;; Tracked objects:
 30089 ;;		On entry : 0/0
 30090 ;;		On exit  : 0/0
 30091 ;;		Unchanged: 0/0
 30092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30095 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30096 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30097 ;;Total ram usage:       21 bytes
 30098 ;; Hardware stack levels used:    1
 30099 ;; Hardware stack levels required when called:   12
 30100 ;; This function calls:
 30101 ;;		Absolute function
 30102 ;;		_EUSART2_Transmit_ISR
 30103 ;;		_HLVD_ISR
 30104 ;;		_TMR6_ISR
 30105 ;;		_TMR7_ISR
 30106 ;; This function is called by:
 30107 ;;		Interrupt level 1
 30108 ;; This function uses a non-reentrant model
 30109 ;;
 30110                           
 30111                           	psect	intcodelo
 30112  000018                     __pintcodelo:
 30113                           	opt stack 0
 30114  000018                     _INTERRUPT_InterruptManagerLow:
 30115                           	opt stack 11
 30116                           
 30117                           ;incstack = 0
 30118  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 30119  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 30120  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 30121  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 30122  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 30123  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 30124  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 30125  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 30126  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 30127  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 30128  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 30129  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 30130  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 30131  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 30132  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 30133  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 30134  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 30135  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 30136  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 30137  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 30138  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 30139  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 30140                           
 30141                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 30142  00006E  010E               	movlb	14	; () banked
 30143  000070  BB2E               	btfsc	46,5,b	;volatile
 30144                           
 30145                           ; BSR set to: 14
 30146  000072  AB38               	btfss	56,5,b	;volatile
 30147  000074  D003               	goto	i1l223
 30148                           
 30149                           ; BSR set to: 14
 30150                           ;interrupt_manager.c: 108: {
 30151                           ;interrupt_manager.c: 109: TMR6_ISR();
 30152  000076  EC40  F0C8         	call	_TMR6_ISR	;wreg free
 30153                           
 30154                           ;interrupt_manager.c: 110: }
 30155  00007A  D01B               	goto	i1l229
 30156  00007C                     i1l223:
 30157                           
 30158                           ; BSR set to: 14
 30159                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 30160  00007C  BD2C               	btfsc	44,6,b	;volatile
 30161                           
 30162                           ; BSR set to: 14
 30163  00007E  AD36               	btfss	54,6,b	;volatile
 30164  000080  D00D               	goto	i1l225
 30165                           
 30166                           ; BSR set to: 14
 30167                           ;interrupt_manager.c: 112: {
 30168                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 30169  000082  D801               	call	i1u2697_28
 30170  000084  D016               	goto	i1l229
 30171  000086                     i1u2697_28:
 30172  000086  0005               	push	
 30173  000088  6EFA               	movwf	pclath,c
 30174  00008A  0102               	movlb	2	; () banked
 30175  00008C  5137               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 30176  00008E  6EFD               	movwf	tosl,c
 30177  000090  5138               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 30178  000092  6EFE               	movwf	tosh,c
 30179  000094  5139               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 30180  000096  6EFF               	movwf	tosu,c
 30181  000098  50FA               	movf	pclath,w,c
 30182  00009A  0012               	return		;indir
 30183  00009C                     i1l225:
 30184                           
 30185                           ; BSR set to: 14
 30186                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 30187  00009C  BD2E               	btfsc	46,6,b	;volatile
 30188                           
 30189                           ; BSR set to: 14
 30190  00009E  AD38               	btfss	56,6,b	;volatile
 30191  0000A0  D003               	goto	i1l227
 30192                           
 30193                           ; BSR set to: 14
 30194                           ;interrupt_manager.c: 116: {
 30195                           ;interrupt_manager.c: 117: TMR7_ISR();
 30196  0000A2  EC6C  F0C7         	call	_TMR7_ISR	;wreg free
 30197                           
 30198                           ;interrupt_manager.c: 118: }
 30199  0000A6  D005               	goto	i1l229
 30200  0000A8                     i1l227:
 30201                           
 30202                           ; BSR set to: 14
 30203                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 30204  0000A8  BF2B               	btfsc	43,7,b	;volatile
 30205                           
 30206                           ; BSR set to: 14
 30207  0000AA  AF35               	btfss	53,7,b	;volatile
 30208  0000AC  D002               	goto	i1l229
 30209                           
 30210                           ; BSR set to: 14
 30211                           ;interrupt_manager.c: 120: {
 30212                           ;interrupt_manager.c: 121: HLVD_ISR();
 30213  0000AE  ECC2  F0C9         	call	_HLVD_ISR	;wreg free
 30214  0000B2                     i1l229:
 30215                           
 30216                           ;interrupt_manager.c: 123: else
 30217                           ;interrupt_manager.c: 124: {
 30218  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 30219  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 30220  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 30221  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 30222  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 30223  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 30224  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 30225  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 30226  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 30227  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 30228  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 30229  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 30230  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 30231  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 30232  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 30233  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 30234  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 30235  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 30236  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 30237  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 30238  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 30239  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 30240  000108  0010               	retfie	
 30241  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 30242                           	opt stack 0
 30243                           tosu	equ	0xFFF
 30244                           tosh	equ	0xFFE
 30245                           tosl	equ	0xFFD
 30246                           pclatu	equ	0xFFB
 30247                           pclath	equ	0xFFA
 30248                           tblptru	equ	0xFF8
 30249                           tblptrh	equ	0xFF7
 30250                           tblptrl	equ	0xFF6
 30251                           tablat	equ	0xFF5
 30252                           prodh	equ	0xFF4
 30253                           prodl	equ	0xFF3
 30254                           intcon	equ	0xFF2
 30255                           indf0	equ	0xFEF
 30256                           postinc0	equ	0xFEE
 30257                           fsr0h	equ	0xFEA
 30258                           fsr0l	equ	0xFE9
 30259                           wreg	equ	0xFE8
 30260                           indf1	equ	0xFE7
 30261                           postdec1	equ	0xFE5
 30262                           plusw1	equ	0xFE3
 30263                           fsr1h	equ	0xFE2
 30264                           fsr1l	equ	0xFE1
 30265                           bsr	equ	0xFE0
 30266                           indf2	equ	0xFDF
 30267                           postinc2	equ	0xFDE
 30268                           postdec2	equ	0xFDD
 30269                           plusw2	equ	0xFDB
 30270                           fsr2h	equ	0xFDA
 30271                           fsr2l	equ	0xFD9
 30272                           status	equ	0xFD8
 30273                           
 30274 ;; *************** function _TMR7_ISR *****************
 30275 ;; Defined at:
 30276 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 30277 ;; Parameters:    Size  Location     Type
 30278 ;;		None
 30279 ;; Auto vars:     Size  Location     Type
 30280 ;;		None
 30281 ;; Return value:  Size  Location     Type
 30282 ;;                  1    wreg      void 
 30283 ;; Registers used:
 30284 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 30285 ;; Tracked objects:
 30286 ;;		On entry : 0/0
 30287 ;;		On exit  : 0/0
 30288 ;;		Unchanged: 0/0
 30289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30294 ;;Total ram usage:        0 bytes
 30295 ;; Hardware stack levels used:    1
 30296 ;; Hardware stack levels required when called:   11
 30297 ;; This function calls:
 30298 ;;		Absolute function
 30299 ;;		_TMR7_DefaultInterruptHandler
 30300 ;;		_TMR7_WriteTimer
 30301 ;;		_acquisitionTimerCallback
 30302 ;; This function is called by:
 30303 ;;		_INTERRUPT_InterruptManagerLow
 30304 ;; This function uses a non-reentrant model
 30305 ;;
 30306                           
 30307                           	psect	text74
 30308  018ED8                     __ptext74:
 30309                           	opt stack 0
 30310  018ED8                     _TMR7_ISR:
 30311                           	opt stack 11
 30312                           
 30313                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 30314                           
 30315                           ;incstack = 0
 30316  018ED8  010E               	movlb	14	; () banked
 30317  018EDA  9D38               	bcf	56,6,b	;volatile
 30318                           
 30319                           ; BSR set to: 14
 30320                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 30321  018EDC  C1DD  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 30322  018EE0  C1DE  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 30323  018EE4  EC7B  F0C8         	call	_TMR7_WriteTimer	;wreg free
 30324                           
 30325                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 30326  018EE8  0102               	movlb	2	; () banked
 30327  018EEA  512B               	movf	_TMR7_InterruptHandler& (0+255),w,b
 30328  018EEC  112C               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 30329  018EEE  112D               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 30330  018EF0  B4D8               	btfsc	status,2,c
 30331  018EF2  0012               	return	
 30332                           
 30333                           ; BSR set to: 2
 30334                           ;tmr7.c: 172: {
 30335                           ;tmr7.c: 173: TMR7_InterruptHandler();
 30336  018EF4  D801               	call	i1u2674_28
 30337  018EF6  0012               	return	
 30338  018EF8                     i1u2674_28:
 30339  018EF8  0005               	push	
 30340  018EFA  6EFA               	movwf	pclath,c
 30341  018EFC  512B               	movf	_TMR7_InterruptHandler& (0+255),w,b
 30342  018EFE  6EFD               	movwf	tosl,c
 30343  018F00  512C               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 30344  018F02  6EFE               	movwf	tosh,c
 30345  018F04  512D               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 30346  018F06  6EFF               	movwf	tosu,c
 30347  018F08  50FA               	movf	pclath,w,c
 30348  018F0A  0012               	return		;indir
 30349  018F0C                     __end_of_TMR7_ISR:
 30350                           	opt stack 0
 30351                           tosu	equ	0xFFF
 30352                           tosh	equ	0xFFE
 30353                           tosl	equ	0xFFD
 30354                           pclatu	equ	0xFFB
 30355                           pclath	equ	0xFFA
 30356                           tblptru	equ	0xFF8
 30357                           tblptrh	equ	0xFF7
 30358                           tblptrl	equ	0xFF6
 30359                           tablat	equ	0xFF5
 30360                           prodh	equ	0xFF4
 30361                           prodl	equ	0xFF3
 30362                           intcon	equ	0xFF2
 30363                           indf0	equ	0xFEF
 30364                           postinc0	equ	0xFEE
 30365                           fsr0h	equ	0xFEA
 30366                           fsr0l	equ	0xFE9
 30367                           wreg	equ	0xFE8
 30368                           indf1	equ	0xFE7
 30369                           postdec1	equ	0xFE5
 30370                           plusw1	equ	0xFE3
 30371                           fsr1h	equ	0xFE2
 30372                           fsr1l	equ	0xFE1
 30373                           bsr	equ	0xFE0
 30374                           indf2	equ	0xFDF
 30375                           postinc2	equ	0xFDE
 30376                           postdec2	equ	0xFDD
 30377                           plusw2	equ	0xFDB
 30378                           fsr2h	equ	0xFDA
 30379                           fsr2l	equ	0xFD9
 30380                           status	equ	0xFD8
 30381                           
 30382 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 30383 ;; Defined at:
 30384 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 30385 ;; Parameters:    Size  Location     Type
 30386 ;;		None
 30387 ;; Auto vars:     Size  Location     Type
 30388 ;;		None
 30389 ;; Return value:  Size  Location     Type
 30390 ;;                  1    wreg      void 
 30391 ;; Registers used:
 30392 ;;		None
 30393 ;; Tracked objects:
 30394 ;;		On entry : 0/0
 30395 ;;		On exit  : 0/0
 30396 ;;		Unchanged: 0/0
 30397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30402 ;;Total ram usage:        0 bytes
 30403 ;; Hardware stack levels used:    1
 30404 ;; Hardware stack levels required when called:    9
 30405 ;; This function calls:
 30406 ;;		Nothing
 30407 ;; This function is called by:
 30408 ;;		_TMR7_Initialize
 30409 ;;		_TMR7_ISR
 30410 ;; This function uses a non-reentrant model
 30411 ;;
 30412                           
 30413                           	psect	text75
 30414  0193A8                     __ptext75:
 30415                           	opt stack 0
 30416  0193A8                     _TMR7_DefaultInterruptHandler:
 30417                           	opt stack 12
 30418                           
 30419                           ;incstack = 0
 30420  0193A8  0012               	return		;funcret
 30421  0193AA                     __end_of_TMR7_DefaultInterruptHandler:
 30422                           	opt stack 0
 30423                           tosu	equ	0xFFF
 30424                           tosh	equ	0xFFE
 30425                           tosl	equ	0xFFD
 30426                           pclatu	equ	0xFFB
 30427                           pclath	equ	0xFFA
 30428                           tblptru	equ	0xFF8
 30429                           tblptrh	equ	0xFF7
 30430                           tblptrl	equ	0xFF6
 30431                           tablat	equ	0xFF5
 30432                           prodh	equ	0xFF4
 30433                           prodl	equ	0xFF3
 30434                           intcon	equ	0xFF2
 30435                           indf0	equ	0xFEF
 30436                           postinc0	equ	0xFEE
 30437                           fsr0h	equ	0xFEA
 30438                           fsr0l	equ	0xFE9
 30439                           wreg	equ	0xFE8
 30440                           indf1	equ	0xFE7
 30441                           postdec1	equ	0xFE5
 30442                           plusw1	equ	0xFE3
 30443                           fsr1h	equ	0xFE2
 30444                           fsr1l	equ	0xFE1
 30445                           bsr	equ	0xFE0
 30446                           indf2	equ	0xFDF
 30447                           postinc2	equ	0xFDE
 30448                           postdec2	equ	0xFDD
 30449                           plusw2	equ	0xFDB
 30450                           fsr2h	equ	0xFDA
 30451                           fsr2l	equ	0xFD9
 30452                           status	equ	0xFD8
 30453                           
 30454 ;; *************** function _acquisitionTimerCallback *****************
 30455 ;; Defined at:
 30456 ;;		line 425 in file "main.c"
 30457 ;; Parameters:    Size  Location     Type
 30458 ;;		None
 30459 ;; Auto vars:     Size  Location     Type
 30460 ;;		None
 30461 ;; Return value:  Size  Location     Type
 30462 ;;                  1    wreg      void 
 30463 ;; Registers used:
 30464 ;;		wreg, status,2, cstack
 30465 ;; Tracked objects:
 30466 ;;		On entry : 0/0
 30467 ;;		On exit  : 0/0
 30468 ;;		Unchanged: 0/0
 30469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30474 ;;Total ram usage:        0 bytes
 30475 ;; Hardware stack levels used:    1
 30476 ;; Hardware stack levels required when called:   10
 30477 ;; This function calls:
 30478 ;;		_ADCC_ClearAccumulator
 30479 ;;		_ADCC_DischargeSampleCapacitor
 30480 ;;		_ADCC_StartConversion
 30481 ;; This function is called by:
 30482 ;;		_main
 30483 ;;		_TMR7_ISR
 30484 ;; This function uses a non-reentrant model
 30485 ;;
 30486                           
 30487                           	psect	text76
 30488  01929C                     __ptext76:
 30489                           	opt stack 0
 30490  01929C                     _acquisitionTimerCallback:
 30491                           	opt stack 11
 30492                           
 30493                           ;main.c: 428: ADCC_DischargeSampleCapacitor();
 30494                           
 30495                           ;incstack = 0
 30496  01929C  ECBE  F0C9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 30497                           
 30498                           ;main.c: 431: ADCC_ClearAccumulator();
 30499  0192A0  ECCC  F0C9         	call	_ADCC_ClearAccumulator	;wreg free
 30500                           
 30501                           ;main.c: 434: ADCC_StartConversion(next_channel);
 30502  0192A4  0101               	movlb	1	; () banked
 30503  0192A6  51E8               	movf	_next_channel& (0+255),w,b
 30504  0192A8  ECA8  F0C9         	call	_ADCC_StartConversion
 30505  0192AC  0012               	return		;funcret
 30506  0192AE                     __end_of_acquisitionTimerCallback:
 30507                           	opt stack 0
 30508                           tosu	equ	0xFFF
 30509                           tosh	equ	0xFFE
 30510                           tosl	equ	0xFFD
 30511                           pclatu	equ	0xFFB
 30512                           pclath	equ	0xFFA
 30513                           tblptru	equ	0xFF8
 30514                           tblptrh	equ	0xFF7
 30515                           tblptrl	equ	0xFF6
 30516                           tablat	equ	0xFF5
 30517                           prodh	equ	0xFF4
 30518                           prodl	equ	0xFF3
 30519                           intcon	equ	0xFF2
 30520                           indf0	equ	0xFEF
 30521                           postinc0	equ	0xFEE
 30522                           fsr0h	equ	0xFEA
 30523                           fsr0l	equ	0xFE9
 30524                           wreg	equ	0xFE8
 30525                           indf1	equ	0xFE7
 30526                           postdec1	equ	0xFE5
 30527                           plusw1	equ	0xFE3
 30528                           fsr1h	equ	0xFE2
 30529                           fsr1l	equ	0xFE1
 30530                           bsr	equ	0xFE0
 30531                           indf2	equ	0xFDF
 30532                           postinc2	equ	0xFDE
 30533                           postdec2	equ	0xFDD
 30534                           plusw2	equ	0xFDB
 30535                           fsr2h	equ	0xFDA
 30536                           fsr2l	equ	0xFD9
 30537                           status	equ	0xFD8
 30538                           
 30539 ;; *************** function _ADCC_StartConversion *****************
 30540 ;; Defined at:
 30541 ;;		line 112 in file "mcc_generated_files/adcc.c"
 30542 ;; Parameters:    Size  Location     Type
 30543 ;;  channel         1    wreg     enum E17310
 30544 ;; Auto vars:     Size  Location     Type
 30545 ;;  channel         1    0[BANK1 ] enum E17310
 30546 ;; Return value:  Size  Location     Type
 30547 ;;                  1    wreg      void 
 30548 ;; Registers used:
 30549 ;;		wreg
 30550 ;; Tracked objects:
 30551 ;;		On entry : 0/0
 30552 ;;		On exit  : 0/0
 30553 ;;		Unchanged: 0/0
 30554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30556 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30558 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30559 ;;Total ram usage:        1 bytes
 30560 ;; Hardware stack levels used:    1
 30561 ;; Hardware stack levels required when called:    9
 30562 ;; This function calls:
 30563 ;;		Nothing
 30564 ;; This function is called by:
 30565 ;;		_acquisitionTimerCallback
 30566 ;; This function uses a non-reentrant model
 30567 ;;
 30568                           
 30569                           	psect	text77
 30570  019350                     __ptext77:
 30571                           	opt stack 0
 30572  019350                     _ADCC_StartConversion:
 30573                           	opt stack 11
 30574                           
 30575                           ;incstack = 0
 30576                           ;ADCC_StartConversion@channel stored from wreg
 30577  019350  0101               	movlb	1	; () banked
 30578  019352  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 30579                           
 30580                           ;adcc.c: 115: ADPCH = channel;
 30581  019354  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 30582                           
 30583                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 30584  019358  8E60               	bsf	3936,7,c	;volatile
 30585                           
 30586                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 30587  01935A  8060               	bsf	3936,0,c	;volatile
 30588  01935C  0012               	return		;funcret
 30589  01935E                     __end_of_ADCC_StartConversion:
 30590                           	opt stack 0
 30591                           tosu	equ	0xFFF
 30592                           tosh	equ	0xFFE
 30593                           tosl	equ	0xFFD
 30594                           pclatu	equ	0xFFB
 30595                           pclath	equ	0xFFA
 30596                           tblptru	equ	0xFF8
 30597                           tblptrh	equ	0xFF7
 30598                           tblptrl	equ	0xFF6
 30599                           tablat	equ	0xFF5
 30600                           prodh	equ	0xFF4
 30601                           prodl	equ	0xFF3
 30602                           intcon	equ	0xFF2
 30603                           indf0	equ	0xFEF
 30604                           postinc0	equ	0xFEE
 30605                           fsr0h	equ	0xFEA
 30606                           fsr0l	equ	0xFE9
 30607                           wreg	equ	0xFE8
 30608                           indf1	equ	0xFE7
 30609                           postdec1	equ	0xFE5
 30610                           plusw1	equ	0xFE3
 30611                           fsr1h	equ	0xFE2
 30612                           fsr1l	equ	0xFE1
 30613                           bsr	equ	0xFE0
 30614                           indf2	equ	0xFDF
 30615                           postinc2	equ	0xFDE
 30616                           postdec2	equ	0xFDD
 30617                           plusw2	equ	0xFDB
 30618                           fsr2h	equ	0xFDA
 30619                           fsr2l	equ	0xFD9
 30620                           status	equ	0xFD8
 30621                           
 30622 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 30623 ;; Defined at:
 30624 ;;		line 174 in file "mcc_generated_files/adcc.c"
 30625 ;; Parameters:    Size  Location     Type
 30626 ;;		None
 30627 ;; Auto vars:     Size  Location     Type
 30628 ;;		None
 30629 ;; Return value:  Size  Location     Type
 30630 ;;                  1    wreg      void 
 30631 ;; Registers used:
 30632 ;;		wreg, status,2
 30633 ;; Tracked objects:
 30634 ;;		On entry : 0/0
 30635 ;;		On exit  : 0/0
 30636 ;;		Unchanged: 0/0
 30637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30642 ;;Total ram usage:        0 bytes
 30643 ;; Hardware stack levels used:    1
 30644 ;; Hardware stack levels required when called:    9
 30645 ;; This function calls:
 30646 ;;		Nothing
 30647 ;; This function is called by:
 30648 ;;		_acquisitionTimerCallback
 30649 ;; This function uses a non-reentrant model
 30650 ;;
 30651                           
 30652                           	psect	text78
 30653  01937C                     __ptext78:
 30654                           	opt stack 0
 30655  01937C                     _ADCC_DischargeSampleCapacitor:
 30656                           	opt stack 11
 30657                           
 30658                           ;adcc.c: 177: ADPCH = 0x3c;
 30659                           
 30660                           ;incstack = 0
 30661  01937C  0E3C               	movlw	60
 30662  01937E  010F               	movlb	15	; () banked
 30663  019380  6F5F               	movwf	95,b	;volatile
 30664                           
 30665                           ; BSR set to: 15
 30666  019382  0012               	return		;funcret
 30667  019384                     __end_of_ADCC_DischargeSampleCapacitor:
 30668                           	opt stack 0
 30669                           tosu	equ	0xFFF
 30670                           tosh	equ	0xFFE
 30671                           tosl	equ	0xFFD
 30672                           pclatu	equ	0xFFB
 30673                           pclath	equ	0xFFA
 30674                           tblptru	equ	0xFF8
 30675                           tblptrh	equ	0xFF7
 30676                           tblptrl	equ	0xFF6
 30677                           tablat	equ	0xFF5
 30678                           prodh	equ	0xFF4
 30679                           prodl	equ	0xFF3
 30680                           intcon	equ	0xFF2
 30681                           indf0	equ	0xFEF
 30682                           postinc0	equ	0xFEE
 30683                           fsr0h	equ	0xFEA
 30684                           fsr0l	equ	0xFE9
 30685                           wreg	equ	0xFE8
 30686                           indf1	equ	0xFE7
 30687                           postdec1	equ	0xFE5
 30688                           plusw1	equ	0xFE3
 30689                           fsr1h	equ	0xFE2
 30690                           fsr1l	equ	0xFE1
 30691                           bsr	equ	0xFE0
 30692                           indf2	equ	0xFDF
 30693                           postinc2	equ	0xFDE
 30694                           postdec2	equ	0xFDD
 30695                           plusw2	equ	0xFDB
 30696                           fsr2h	equ	0xFDA
 30697                           fsr2l	equ	0xFD9
 30698                           status	equ	0xFD8
 30699                           
 30700 ;; *************** function _ADCC_ClearAccumulator *****************
 30701 ;; Defined at:
 30702 ;;		line 204 in file "mcc_generated_files/adcc.c"
 30703 ;; Parameters:    Size  Location     Type
 30704 ;;		None
 30705 ;; Auto vars:     Size  Location     Type
 30706 ;;		None
 30707 ;; Return value:  Size  Location     Type
 30708 ;;                  1    wreg      void 
 30709 ;; Registers used:
 30710 ;;		None
 30711 ;; Tracked objects:
 30712 ;;		On entry : 0/0
 30713 ;;		On exit  : 0/0
 30714 ;;		Unchanged: 0/0
 30715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30720 ;;Total ram usage:        0 bytes
 30721 ;; Hardware stack levels used:    1
 30722 ;; Hardware stack levels required when called:    9
 30723 ;; This function calls:
 30724 ;;		Nothing
 30725 ;; This function is called by:
 30726 ;;		_acquisitionTimerCallback
 30727 ;; This function uses a non-reentrant model
 30728 ;;
 30729                           
 30730                           	psect	text79
 30731  019398                     __ptext79:
 30732                           	opt stack 0
 30733  019398                     _ADCC_ClearAccumulator:
 30734                           	opt stack 11
 30735                           
 30736                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 30737                           
 30738                           ; BSR set to: 15
 30739                           ;incstack = 0
 30740  019398  010F               	movlb	15	; () banked
 30741  01939A  875A               	bsf	90,3,b	;volatile
 30742                           
 30743                           ; BSR set to: 15
 30744  01939C  0012               	return		;funcret
 30745  01939E                     __end_of_ADCC_ClearAccumulator:
 30746                           	opt stack 0
 30747                           tosu	equ	0xFFF
 30748                           tosh	equ	0xFFE
 30749                           tosl	equ	0xFFD
 30750                           pclatu	equ	0xFFB
 30751                           pclath	equ	0xFFA
 30752                           tblptru	equ	0xFF8
 30753                           tblptrh	equ	0xFF7
 30754                           tblptrl	equ	0xFF6
 30755                           tablat	equ	0xFF5
 30756                           prodh	equ	0xFF4
 30757                           prodl	equ	0xFF3
 30758                           intcon	equ	0xFF2
 30759                           indf0	equ	0xFEF
 30760                           postinc0	equ	0xFEE
 30761                           fsr0h	equ	0xFEA
 30762                           fsr0l	equ	0xFE9
 30763                           wreg	equ	0xFE8
 30764                           indf1	equ	0xFE7
 30765                           postdec1	equ	0xFE5
 30766                           plusw1	equ	0xFE3
 30767                           fsr1h	equ	0xFE2
 30768                           fsr1l	equ	0xFE1
 30769                           bsr	equ	0xFE0
 30770                           indf2	equ	0xFDF
 30771                           postinc2	equ	0xFDE
 30772                           postdec2	equ	0xFDD
 30773                           plusw2	equ	0xFDB
 30774                           fsr2h	equ	0xFDA
 30775                           fsr2l	equ	0xFD9
 30776                           status	equ	0xFD8
 30777                           
 30778 ;; *************** function _TMR7_WriteTimer *****************
 30779 ;; Defined at:
 30780 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 30781 ;; Parameters:    Size  Location     Type
 30782 ;;  timerVal        2    0[BANK1 ] unsigned int 
 30783 ;; Auto vars:     Size  Location     Type
 30784 ;;		None
 30785 ;; Return value:  Size  Location     Type
 30786 ;;                  1    wreg      void 
 30787 ;; Registers used:
 30788 ;;		wreg, status,2
 30789 ;; Tracked objects:
 30790 ;;		On entry : 0/0
 30791 ;;		On exit  : 0/0
 30792 ;;		Unchanged: 0/0
 30793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30794 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30797 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30798 ;;Total ram usage:        2 bytes
 30799 ;; Hardware stack levels used:    1
 30800 ;; Hardware stack levels required when called:    9
 30801 ;; This function calls:
 30802 ;;		Nothing
 30803 ;; This function is called by:
 30804 ;;		_TMR7_ISR
 30805 ;;		_TMR7_Reload
 30806 ;; This function uses a non-reentrant model
 30807 ;;
 30808                           
 30809                           	psect	text80
 30810  0190F6                     __ptext80:
 30811                           	opt stack 0
 30812  0190F6                     _TMR7_WriteTimer:
 30813                           	opt stack 12
 30814                           
 30815                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 30816                           
 30817                           ; BSR set to: 15
 30818                           ;incstack = 0
 30819  0190F6  010F               	movlb	15	; () banked
 30820  0190F8  A530               	btfss	48,2,b	;volatile
 30821  0190FA  D009               	goto	i1l640
 30822                           
 30823                           ; BSR set to: 15
 30824                           ;tmr7.c: 130: {
 30825                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 30826  0190FC  9130               	bcf	48,0,b	;volatile
 30827                           
 30828                           ; BSR set to: 15
 30829                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 30830  0190FE  0101               	movlb	1	; () banked
 30831  019100  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 30832  019102  010F               	movlb	15	; () banked
 30833  019104  6F2F               	movwf	47,b	;volatile
 30834                           
 30835                           ; BSR set to: 15
 30836                           ;tmr7.c: 136: TMR7L = timerVal;
 30837  019106  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 30838                           
 30839                           ; BSR set to: 15
 30840                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 30841  01910A  8130               	bsf	48,0,b	;volatile
 30842                           
 30843                           ;tmr7.c: 140: }
 30844  01910C  0012               	return	
 30845  01910E                     i1l640:
 30846                           
 30847                           ; BSR set to: 15
 30848                           ;tmr7.c: 141: else
 30849                           ;tmr7.c: 142: {
 30850                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 30851                           
 30852                           ; BSR set to: 15
 30853  01910E  0101               	movlb	1	; () banked
 30854  019110  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 30855  019112  010F               	movlb	15	; () banked
 30856  019114  6F2F               	movwf	47,b	;volatile
 30857                           
 30858                           ; BSR set to: 15
 30859                           ;tmr7.c: 145: TMR7L = timerVal;
 30860  019116  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 30861  01911A  0012               	return	
 30862  01911C                     __end_of_TMR7_WriteTimer:
 30863                           	opt stack 0
 30864                           tosu	equ	0xFFF
 30865                           tosh	equ	0xFFE
 30866                           tosl	equ	0xFFD
 30867                           pclatu	equ	0xFFB
 30868                           pclath	equ	0xFFA
 30869                           tblptru	equ	0xFF8
 30870                           tblptrh	equ	0xFF7
 30871                           tblptrl	equ	0xFF6
 30872                           tablat	equ	0xFF5
 30873                           prodh	equ	0xFF4
 30874                           prodl	equ	0xFF3
 30875                           intcon	equ	0xFF2
 30876                           indf0	equ	0xFEF
 30877                           postinc0	equ	0xFEE
 30878                           fsr0h	equ	0xFEA
 30879                           fsr0l	equ	0xFE9
 30880                           wreg	equ	0xFE8
 30881                           indf1	equ	0xFE7
 30882                           postdec1	equ	0xFE5
 30883                           plusw1	equ	0xFE3
 30884                           fsr1h	equ	0xFE2
 30885                           fsr1l	equ	0xFE1
 30886                           bsr	equ	0xFE0
 30887                           indf2	equ	0xFDF
 30888                           postinc2	equ	0xFDE
 30889                           postdec2	equ	0xFDD
 30890                           plusw2	equ	0xFDB
 30891                           fsr2h	equ	0xFDA
 30892                           fsr2l	equ	0xFD9
 30893                           status	equ	0xFD8
 30894                           
 30895 ;; *************** function _TMR6_ISR *****************
 30896 ;; Defined at:
 30897 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 30898 ;; Parameters:    Size  Location     Type
 30899 ;;		None
 30900 ;; Auto vars:     Size  Location     Type
 30901 ;;		None
 30902 ;; Return value:  Size  Location     Type
 30903 ;;                  1    wreg      void 
 30904 ;; Registers used:
 30905 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 30906 ;; Tracked objects:
 30907 ;;		On entry : 0/0
 30908 ;;		On exit  : 0/0
 30909 ;;		Unchanged: 0/0
 30910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30915 ;;Total ram usage:        0 bytes
 30916 ;; Hardware stack levels used:    1
 30917 ;; Hardware stack levels required when called:   10
 30918 ;; This function calls:
 30919 ;;		Absolute function
 30920 ;;		_TMR6_DefaultInterruptHandler
 30921 ;;		_heartbeatTimerCallback
 30922 ;; This function is called by:
 30923 ;;		_INTERRUPT_InterruptManagerLow
 30924 ;; This function uses a non-reentrant model
 30925 ;;
 30926                           
 30927                           	psect	text81
 30928  019080                     __ptext81:
 30929                           	opt stack 0
 30930  019080                     _TMR6_ISR:
 30931                           	opt stack 12
 30932                           
 30933                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 30934                           
 30935                           ; BSR set to: 15
 30936                           ;incstack = 0
 30937  019080  010E               	movlb	14	; () banked
 30938  019082  9B38               	bcf	56,5,b	;volatile
 30939                           
 30940                           ; BSR set to: 14
 30941                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 30942  019084  0102               	movlb	2	; () banked
 30943  019086  5131               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30944  019088  1132               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30945  01908A  1133               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30946  01908C  B4D8               	btfsc	status,2,c
 30947  01908E  0012               	return	
 30948                           
 30949                           ; BSR set to: 2
 30950                           ;tmr6.c: 172: {
 30951                           ;tmr6.c: 173: TMR6_InterruptHandler();
 30952  019090  D801               	call	i1u2672_28
 30953  019092  0012               	return	
 30954  019094                     i1u2672_28:
 30955  019094  0005               	push	
 30956  019096  6EFA               	movwf	pclath,c
 30957  019098  5131               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30958  01909A  6EFD               	movwf	tosl,c
 30959  01909C  5132               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30960  01909E  6EFE               	movwf	tosh,c
 30961  0190A0  5133               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30962  0190A2  6EFF               	movwf	tosu,c
 30963  0190A4  50FA               	movf	pclath,w,c
 30964  0190A6  0012               	return		;indir
 30965  0190A8                     __end_of_TMR6_ISR:
 30966                           	opt stack 0
 30967                           tosu	equ	0xFFF
 30968                           tosh	equ	0xFFE
 30969                           tosl	equ	0xFFD
 30970                           pclatu	equ	0xFFB
 30971                           pclath	equ	0xFFA
 30972                           tblptru	equ	0xFF8
 30973                           tblptrh	equ	0xFF7
 30974                           tblptrl	equ	0xFF6
 30975                           tablat	equ	0xFF5
 30976                           prodh	equ	0xFF4
 30977                           prodl	equ	0xFF3
 30978                           intcon	equ	0xFF2
 30979                           indf0	equ	0xFEF
 30980                           postinc0	equ	0xFEE
 30981                           fsr0h	equ	0xFEA
 30982                           fsr0l	equ	0xFE9
 30983                           wreg	equ	0xFE8
 30984                           indf1	equ	0xFE7
 30985                           postdec1	equ	0xFE5
 30986                           plusw1	equ	0xFE3
 30987                           fsr1h	equ	0xFE2
 30988                           fsr1l	equ	0xFE1
 30989                           bsr	equ	0xFE0
 30990                           indf2	equ	0xFDF
 30991                           postinc2	equ	0xFDE
 30992                           postdec2	equ	0xFDD
 30993                           plusw2	equ	0xFDB
 30994                           fsr2h	equ	0xFDA
 30995                           fsr2l	equ	0xFD9
 30996                           status	equ	0xFD8
 30997                           
 30998 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 30999 ;; Defined at:
 31000 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31001 ;; Parameters:    Size  Location     Type
 31002 ;;		None
 31003 ;; Auto vars:     Size  Location     Type
 31004 ;;		None
 31005 ;; Return value:  Size  Location     Type
 31006 ;;                  1    wreg      void 
 31007 ;; Registers used:
 31008 ;;		None
 31009 ;; Tracked objects:
 31010 ;;		On entry : 0/0
 31011 ;;		On exit  : 0/0
 31012 ;;		Unchanged: 0/0
 31013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31018 ;;Total ram usage:        0 bytes
 31019 ;; Hardware stack levels used:    1
 31020 ;; Hardware stack levels required when called:    9
 31021 ;; This function calls:
 31022 ;;		Nothing
 31023 ;; This function is called by:
 31024 ;;		_TMR6_Initialize
 31025 ;;		_TMR6_ISR
 31026 ;; This function uses a non-reentrant model
 31027 ;;
 31028                           
 31029                           	psect	text82
 31030  0193AA                     __ptext82:
 31031                           	opt stack 0
 31032  0193AA                     _TMR6_DefaultInterruptHandler:
 31033                           	opt stack 12
 31034                           
 31035                           ;incstack = 0
 31036  0193AA  0012               	return		;funcret
 31037  0193AC                     __end_of_TMR6_DefaultInterruptHandler:
 31038                           	opt stack 0
 31039                           tosu	equ	0xFFF
 31040                           tosh	equ	0xFFE
 31041                           tosl	equ	0xFFD
 31042                           pclatu	equ	0xFFB
 31043                           pclath	equ	0xFFA
 31044                           tblptru	equ	0xFF8
 31045                           tblptrh	equ	0xFF7
 31046                           tblptrl	equ	0xFF6
 31047                           tablat	equ	0xFF5
 31048                           prodh	equ	0xFF4
 31049                           prodl	equ	0xFF3
 31050                           intcon	equ	0xFF2
 31051                           indf0	equ	0xFEF
 31052                           postinc0	equ	0xFEE
 31053                           fsr0h	equ	0xFEA
 31054                           fsr0l	equ	0xFE9
 31055                           wreg	equ	0xFE8
 31056                           indf1	equ	0xFE7
 31057                           postdec1	equ	0xFE5
 31058                           plusw1	equ	0xFE3
 31059                           fsr1h	equ	0xFE2
 31060                           fsr1l	equ	0xFE1
 31061                           bsr	equ	0xFE0
 31062                           indf2	equ	0xFDF
 31063                           postinc2	equ	0xFDE
 31064                           postdec2	equ	0xFDD
 31065                           plusw2	equ	0xFDB
 31066                           fsr2h	equ	0xFDA
 31067                           fsr2l	equ	0xFD9
 31068                           status	equ	0xFD8
 31069                           
 31070 ;; *************** function _heartbeatTimerCallback *****************
 31071 ;; Defined at:
 31072 ;;		line 206 in file "main.c"
 31073 ;; Parameters:    Size  Location     Type
 31074 ;;		None
 31075 ;; Auto vars:     Size  Location     Type
 31076 ;;		None
 31077 ;; Return value:  Size  Location     Type
 31078 ;;                  1    wreg      void 
 31079 ;; Registers used:
 31080 ;;		wreg, status,2, status,0
 31081 ;; Tracked objects:
 31082 ;;		On entry : 0/0
 31083 ;;		On exit  : 0/0
 31084 ;;		Unchanged: 0/0
 31085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31088 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31089 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31090 ;;Total ram usage:        1 bytes
 31091 ;; Hardware stack levels used:    1
 31092 ;; Hardware stack levels required when called:    9
 31093 ;; This function calls:
 31094 ;;		Nothing
 31095 ;; This function is called by:
 31096 ;;		_main
 31097 ;;		_TMR6_ISR
 31098 ;; This function uses a non-reentrant model
 31099 ;;
 31100                           
 31101                           	psect	text83
 31102  018D3E                     __ptext83:
 31103                           	opt stack 0
 31104  018D3E                     _heartbeatTimerCallback:
 31105                           	opt stack 12
 31106                           
 31107                           ;main.c: 209: LATFbits.LATF2 = !LATFbits.LATF2;
 31108                           
 31109                           ;incstack = 0
 31110  018D3E  B47E               	btfsc	3966,2,c	;volatile
 31111  018D40  D004               	goto	i1u1118_20
 31112  018D42  0101               	movlb	1	; () banked
 31113  018D44  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 31114  018D46  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 31115  018D48  D002               	goto	i1u1119_28
 31116  018D4A                     i1u1118_20:
 31117  018D4A  0101               	movlb	1	; () banked
 31118  018D4C  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 31119  018D4E                     i1u1119_28:
 31120  018D4E  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 31121  018D50  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 31122  018D52  507E               	movf	3966,w,c	;volatile
 31123  018D54  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 31124  018D56  0BFB               	andlw	-5
 31125  018D58  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 31126  018D5A  6E7E               	movwf	3966,c	;volatile
 31127                           
 31128                           ;main.c: 212: dev_on_time++;
 31129  018D5C  0E01               	movlw	1
 31130  018D5E  0102               	movlb	2	; () banked
 31131  018D60  271C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 31132  018D62  0E00               	movlw	0
 31133  018D64  231D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 31134  018D66  231E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 31135  018D68  231F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 31136                           
 31137                           ; BSR set to: 2
 31138                           ;main.c: 215: if (load_enable) {
 31139  018D6A  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 31140  018D6C  D006               	goto	i1l993
 31141                           
 31142                           ; BSR set to: 2
 31143                           ;main.c: 217: load_on_time++;
 31144  018D6E  0E01               	movlw	1
 31145  018D70  2718               	addwf	_load_on_time& (0+255),f,b	;volatile
 31146  018D72  0E00               	movlw	0
 31147  018D74  2319               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 31148  018D76  231A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 31149  018D78  231B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 31150  018D7A                     i1l993:
 31151                           
 31152                           ; BSR set to: 2
 31153  018D7A  0004               	clrwdt		;# 
 31154  018D7C  0012               	return		;funcret
 31155  018D7E                     __end_of_heartbeatTimerCallback:
 31156                           	opt stack 0
 31157                           tosu	equ	0xFFF
 31158                           tosh	equ	0xFFE
 31159                           tosl	equ	0xFFD
 31160                           pclatu	equ	0xFFB
 31161                           pclath	equ	0xFFA
 31162                           tblptru	equ	0xFF8
 31163                           tblptrh	equ	0xFF7
 31164                           tblptrl	equ	0xFF6
 31165                           tablat	equ	0xFF5
 31166                           prodh	equ	0xFF4
 31167                           prodl	equ	0xFF3
 31168                           intcon	equ	0xFF2
 31169                           indf0	equ	0xFEF
 31170                           postinc0	equ	0xFEE
 31171                           fsr0h	equ	0xFEA
 31172                           fsr0l	equ	0xFE9
 31173                           wreg	equ	0xFE8
 31174                           indf1	equ	0xFE7
 31175                           postdec1	equ	0xFE5
 31176                           plusw1	equ	0xFE3
 31177                           fsr1h	equ	0xFE2
 31178                           fsr1l	equ	0xFE1
 31179                           bsr	equ	0xFE0
 31180                           indf2	equ	0xFDF
 31181                           postinc2	equ	0xFDE
 31182                           postdec2	equ	0xFDD
 31183                           plusw2	equ	0xFDB
 31184                           fsr2h	equ	0xFDA
 31185                           fsr2l	equ	0xFD9
 31186                           status	equ	0xFD8
 31187                           
 31188 ;; *************** function _HLVD_ISR *****************
 31189 ;; Defined at:
 31190 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 31191 ;; Parameters:    Size  Location     Type
 31192 ;;		None
 31193 ;; Auto vars:     Size  Location     Type
 31194 ;;		None
 31195 ;; Return value:  Size  Location     Type
 31196 ;;                  1    wreg      void 
 31197 ;; Registers used:
 31198 ;;		None
 31199 ;; Tracked objects:
 31200 ;;		On entry : 0/0
 31201 ;;		On exit  : 0/0
 31202 ;;		Unchanged: 0/0
 31203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31208 ;;Total ram usage:        0 bytes
 31209 ;; Hardware stack levels used:    1
 31210 ;; Hardware stack levels required when called:    9
 31211 ;; This function calls:
 31212 ;;		Nothing
 31213 ;; This function is called by:
 31214 ;;		_INTERRUPT_InterruptManagerLow
 31215 ;; This function uses a non-reentrant model
 31216 ;;
 31217                           
 31218                           	psect	text84
 31219  019384                     __ptext84:
 31220                           	opt stack 0
 31221  019384                     _HLVD_ISR:
 31222                           	opt stack 13
 31223                           
 31224                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 31225                           
 31226                           ;incstack = 0
 31227  019384  010E               	movlb	14	; () banked
 31228  019386  9F35               	bcf	53,7,b	;volatile
 31229                           
 31230                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 31231  019388  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 31232                           
 31233                           ; BSR set to: 14
 31234  01938A  0012               	return		;funcret
 31235  01938C                     __end_of_HLVD_ISR:
 31236                           	opt stack 0
 31237                           tosu	equ	0xFFF
 31238                           tosh	equ	0xFFE
 31239                           tosl	equ	0xFFD
 31240                           pclatu	equ	0xFFB
 31241                           pclath	equ	0xFFA
 31242                           tblptru	equ	0xFF8
 31243                           tblptrh	equ	0xFF7
 31244                           tblptrl	equ	0xFF6
 31245                           tablat	equ	0xFF5
 31246                           prodh	equ	0xFF4
 31247                           prodl	equ	0xFF3
 31248                           intcon	equ	0xFF2
 31249                           indf0	equ	0xFEF
 31250                           postinc0	equ	0xFEE
 31251                           fsr0h	equ	0xFEA
 31252                           fsr0l	equ	0xFE9
 31253                           wreg	equ	0xFE8
 31254                           indf1	equ	0xFE7
 31255                           postdec1	equ	0xFE5
 31256                           plusw1	equ	0xFE3
 31257                           fsr1h	equ	0xFE2
 31258                           fsr1l	equ	0xFE1
 31259                           bsr	equ	0xFE0
 31260                           indf2	equ	0xFDF
 31261                           postinc2	equ	0xFDE
 31262                           postdec2	equ	0xFDD
 31263                           plusw2	equ	0xFDB
 31264                           fsr2h	equ	0xFDA
 31265                           fsr2l	equ	0xFD9
 31266                           status	equ	0xFD8
 31267                           
 31268 ;; *************** function _EUSART2_Transmit_ISR *****************
 31269 ;; Defined at:
 31270 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 31271 ;; Parameters:    Size  Location     Type
 31272 ;;		None
 31273 ;; Auto vars:     Size  Location     Type
 31274 ;;		None
 31275 ;; Return value:  Size  Location     Type
 31276 ;;                  1    wreg      void 
 31277 ;; Registers used:
 31278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31279 ;; Tracked objects:
 31280 ;;		On entry : 0/0
 31281 ;;		On exit  : 0/0
 31282 ;;		Unchanged: 0/0
 31283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31288 ;;Total ram usage:        0 bytes
 31289 ;; Hardware stack levels used:    1
 31290 ;; Hardware stack levels required when called:    9
 31291 ;; This function calls:
 31292 ;;		Nothing
 31293 ;; This function is called by:
 31294 ;;		_EUSART2_Initialize
 31295 ;;		_INTERRUPT_InterruptManagerLow
 31296 ;; This function uses a non-reentrant model
 31297 ;;
 31298                           
 31299                           	psect	text85
 31300  018EA2                     __ptext85:
 31301                           	opt stack 0
 31302  018EA2                     _EUSART2_Transmit_ISR:
 31303                           	opt stack 13
 31304                           
 31305                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 31306                           
 31307                           ; BSR set to: 14
 31308                           ;incstack = 0
 31309  018EA2  0E80               	movlw	128
 31310  018EA4  0101               	movlb	1	; () banked
 31311  018EA6  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 31312  018EA8  D014               	goto	i1l403
 31313                           
 31314                           ; BSR set to: 1
 31315                           ;eusart2.c: 203: {
 31316                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 31317  018EAA  51E2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 31318  018EAC  0D01               	mullw	1
 31319  018EAE  0E00               	movlw	low _eusart2TxBuffer
 31320  018EB0  24F3               	addwf	prodl,w,c
 31321  018EB2  6ED9               	movwf	fsr2l,c
 31322  018EB4  0E03               	movlw	high _eusart2TxBuffer
 31323  018EB6  20F4               	addwfc	prodh,w,c
 31324  018EB8  6EDA               	movwf	fsr2h,c
 31325  018EBA  50DF               	movf	indf2,w,c
 31326  018EBC  010E               	movlb	14	; () banked
 31327  018EBE  6FF2               	movwf	242,b	;volatile
 31328                           
 31329                           ; BSR set to: 14
 31330  018EC0  0101               	movlb	1	; () banked
 31331  018EC2  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 31332                           
 31333                           ; BSR set to: 1
 31334                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 31335  018EC4  0E7F               	movlw	127
 31336  018EC6  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 31337  018EC8  D002               	goto	i1l404
 31338                           
 31339                           ; BSR set to: 1
 31340                           ;eusart2.c: 206: {
 31341                           ;eusart2.c: 207: eusart2TxTail = 0;
 31342  018ECA  0E00               	movlw	0
 31343  018ECC  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 31344  018ECE                     i1l404:
 31345                           
 31346                           ; BSR set to: 1
 31347                           ;eusart2.c: 208: }
 31348                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 31349                           
 31350                           ; BSR set to: 1
 31351  018ECE  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 31352                           
 31353                           ;eusart2.c: 210: }
 31354  018ED0  0012               	return	
 31355  018ED2                     i1l403:
 31356                           
 31357                           ; BSR set to: 1
 31358                           ;eusart2.c: 211: else
 31359                           ;eusart2.c: 212: {
 31360                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 31361  018ED2  010E               	movlb	14	; () banked
 31362  018ED4  9D2C               	bcf	44,6,b	;volatile
 31363  018ED6  0012               	return	
 31364  018ED8                     __end_of_EUSART2_Transmit_ISR:
 31365                           	opt stack 0
 31366                           tosu	equ	0xFFF
 31367                           tosh	equ	0xFFE
 31368                           tosl	equ	0xFFD
 31369                           pclatu	equ	0xFFB
 31370                           pclath	equ	0xFFA
 31371                           tblptru	equ	0xFF8
 31372                           tblptrh	equ	0xFF7
 31373                           tblptrl	equ	0xFF6
 31374                           tablat	equ	0xFF5
 31375                           prodh	equ	0xFF4
 31376                           prodl	equ	0xFF3
 31377                           intcon	equ	0xFF2
 31378                           indf0	equ	0xFEF
 31379                           postinc0	equ	0xFEE
 31380                           fsr0h	equ	0xFEA
 31381                           fsr0l	equ	0xFE9
 31382                           wreg	equ	0xFE8
 31383                           indf1	equ	0xFE7
 31384                           postdec1	equ	0xFE5
 31385                           plusw1	equ	0xFE3
 31386                           fsr1h	equ	0xFE2
 31387                           fsr1l	equ	0xFE1
 31388                           bsr	equ	0xFE0
 31389                           indf2	equ	0xFDF
 31390                           postinc2	equ	0xFDE
 31391                           postdec2	equ	0xFDD
 31392                           plusw2	equ	0xFDB
 31393                           fsr2h	equ	0xFDA
 31394                           fsr2l	equ	0xFD9
 31395                           status	equ	0xFD8
 31396                           
 31397 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 31398 ;; Defined at:
 31399 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 31400 ;; Parameters:    Size  Location     Type
 31401 ;;		None
 31402 ;; Auto vars:     Size  Location     Type
 31403 ;;		None
 31404 ;; Return value:  Size  Location     Type
 31405 ;;                  1    wreg      void 
 31406 ;; Registers used:
 31407 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31408 ;; Tracked objects:
 31409 ;;		On entry : 0/0
 31410 ;;		On exit  : 0/0
 31411 ;;		Unchanged: 0/0
 31412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31415 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31416 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31417 ;;Total ram usage:       18 bytes
 31418 ;; Hardware stack levels used:    1
 31419 ;; Hardware stack levels required when called:    8
 31420 ;; This function calls:
 31421 ;;		Absolute function
 31422 ;;		_ADCC_ThresholdISR
 31423 ;;		_EUSART2_Receive_ISR
 31424 ;;		_TMR5_ISR
 31425 ;; This function is called by:
 31426 ;;		Interrupt level 2
 31427 ;; This function uses a non-reentrant model
 31428 ;;
 31429                           
 31430                           	psect	intcode
 31431  000008                     __pintcode:
 31432                           	opt stack 0
 31433  000008                     _INTERRUPT_InterruptManagerHigh:
 31434                           	opt stack 11
 31435                           
 31436                           ;incstack = 0
 31437  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 31438  00000A  EFDD  F0BE         	goto	int_func
 31439                           tosu	equ	0xFFF
 31440                           tosh	equ	0xFFE
 31441                           tosl	equ	0xFFD
 31442                           pclatu	equ	0xFFB
 31443                           pclath	equ	0xFFA
 31444                           tblptru	equ	0xFF8
 31445                           tblptrh	equ	0xFF7
 31446                           tblptrl	equ	0xFF6
 31447                           tablat	equ	0xFF5
 31448                           prodh	equ	0xFF4
 31449                           prodl	equ	0xFF3
 31450                           intcon	equ	0xFF2
 31451                           indf0	equ	0xFEF
 31452                           postinc0	equ	0xFEE
 31453                           fsr0h	equ	0xFEA
 31454                           fsr0l	equ	0xFE9
 31455                           wreg	equ	0xFE8
 31456                           indf1	equ	0xFE7
 31457                           postdec1	equ	0xFE5
 31458                           plusw1	equ	0xFE3
 31459                           fsr1h	equ	0xFE2
 31460                           fsr1l	equ	0xFE1
 31461                           bsr	equ	0xFE0
 31462                           indf2	equ	0xFDF
 31463                           postinc2	equ	0xFDE
 31464                           postdec2	equ	0xFDD
 31465                           plusw2	equ	0xFDB
 31466                           fsr2h	equ	0xFDA
 31467                           fsr2l	equ	0xFD9
 31468                           status	equ	0xFD8
 31469                           
 31470                           	psect	intcode_body
 31471  017DBA                     __pintcode_body:
 31472                           	opt stack 11
 31473  017DBA                     int_func:
 31474                           	opt stack 11
 31475  017DBA  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 31476  017DBE  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 31477  017DC2  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 31478  017DC6  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 31479  017DCA  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 31480  017DCE  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 31481  017DD2  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 31482  017DD6  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 31483  017DDA  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 31484  017DDE  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 31485  017DE2  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 31486  017DE6  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 31487  017DEA  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 31488  017DEE  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 31489  017DF2  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 31490  017DF6  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 31491  017DFA  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 31492  017DFE  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 31493                           
 31494                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 31495  017E02  010E               	movlb	14	; () banked
 31496  017E04  BF2C               	btfsc	44,7,b	;volatile
 31497                           
 31498                           ; BSR set to: 14
 31499  017E06  AF36               	btfss	54,7,b	;volatile
 31500  017E08  D00D               	goto	i2l212
 31501                           
 31502                           ; BSR set to: 14
 31503                           ;interrupt_manager.c: 87: {
 31504                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 31505  017E0A  D801               	call	i2u2688_48
 31506  017E0C  D016               	goto	i2l216
 31507  017E0E                     i2u2688_48:
 31508  017E0E  0005               	push	
 31509  017E10  6EFA               	movwf	pclath,c
 31510  017E12  0102               	movlb	2	; () banked
 31511  017E14  5134               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 31512  017E16  6EFD               	movwf	tosl,c
 31513  017E18  5135               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 31514  017E1A  6EFE               	movwf	tosh,c
 31515  017E1C  5136               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 31516  017E1E  6EFF               	movwf	tosu,c
 31517  017E20  50FA               	movf	pclath,w,c
 31518  017E22  0012               	return		;indir
 31519  017E24                     i2l212:
 31520                           
 31521                           ; BSR set to: 14
 31522                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 31523  017E24  B92E               	btfsc	46,4,b	;volatile
 31524                           
 31525                           ; BSR set to: 14
 31526  017E26  A938               	btfss	56,4,b	;volatile
 31527  017E28  D003               	goto	i2l214
 31528                           
 31529                           ; BSR set to: 14
 31530                           ;interrupt_manager.c: 91: {
 31531                           ;interrupt_manager.c: 92: TMR5_ISR();
 31532  017E2A  EC86  F0C7         	call	_TMR5_ISR	;wreg free
 31533                           
 31534                           ;interrupt_manager.c: 93: }
 31535  017E2E  D005               	goto	i2l216
 31536  017E30                     i2l214:
 31537                           
 31538                           ; BSR set to: 14
 31539                           ;interrupt_manager.c: 94: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 31540  017E30  B32A               	btfsc	42,1,b	;volatile
 31541                           
 31542                           ; BSR set to: 14
 31543  017E32  A334               	btfss	52,1,b	;volatile
 31544  017E34  D002               	goto	i2l216
 31545                           
 31546                           ; BSR set to: 14
 31547                           ;interrupt_manager.c: 95: {
 31548                           ;interrupt_manager.c: 96: ADCC_ThresholdISR();
 31549  017E36  EC54  F0C8         	call	_ADCC_ThresholdISR	;wreg free
 31550  017E3A                     i2l216:
 31551                           
 31552                           ;interrupt_manager.c: 98: else
 31553                           ;interrupt_manager.c: 99: {
 31554  017E3A  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 31555  017E3E  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 31556  017E42  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 31557  017E46  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 31558  017E4A  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 31559  017E4E  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 31560  017E52  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 31561  017E56  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 31562  017E5A  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 31563  017E5E  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 31564  017E62  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 31565  017E66  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 31566  017E6A  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 31567  017E6E  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 31568  017E72  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 31569  017E76  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 31570  017E7A  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 31571  017E7E  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 31572  017E82  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 31573  017E84  0011               	retfie		f
 31574  017E86                     __end_of_INTERRUPT_InterruptManagerHigh:
 31575                           	opt stack 0
 31576                           tosu	equ	0xFFF
 31577                           tosh	equ	0xFFE
 31578                           tosl	equ	0xFFD
 31579                           pclatu	equ	0xFFB
 31580                           pclath	equ	0xFFA
 31581                           tblptru	equ	0xFF8
 31582                           tblptrh	equ	0xFF7
 31583                           tblptrl	equ	0xFF6
 31584                           tablat	equ	0xFF5
 31585                           prodh	equ	0xFF4
 31586                           prodl	equ	0xFF3
 31587                           intcon	equ	0xFF2
 31588                           indf0	equ	0xFEF
 31589                           postinc0	equ	0xFEE
 31590                           fsr0h	equ	0xFEA
 31591                           fsr0l	equ	0xFE9
 31592                           wreg	equ	0xFE8
 31593                           indf1	equ	0xFE7
 31594                           postdec1	equ	0xFE5
 31595                           plusw1	equ	0xFE3
 31596                           fsr1h	equ	0xFE2
 31597                           fsr1l	equ	0xFE1
 31598                           bsr	equ	0xFE0
 31599                           indf2	equ	0xFDF
 31600                           postinc2	equ	0xFDE
 31601                           postdec2	equ	0xFDD
 31602                           plusw2	equ	0xFDB
 31603                           fsr2h	equ	0xFDA
 31604                           fsr2l	equ	0xFD9
 31605                           status	equ	0xFD8
 31606                           
 31607 ;; *************** function _TMR5_ISR *****************
 31608 ;; Defined at:
 31609 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31610 ;; Parameters:    Size  Location     Type
 31611 ;;		None
 31612 ;; Auto vars:     Size  Location     Type
 31613 ;;		None
 31614 ;; Return value:  Size  Location     Type
 31615 ;;                  1    wreg      void 
 31616 ;; Registers used:
 31617 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31618 ;; Tracked objects:
 31619 ;;		On entry : 0/0
 31620 ;;		On exit  : 0/0
 31621 ;;		Unchanged: 0/0
 31622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31627 ;;Total ram usage:        0 bytes
 31628 ;; Hardware stack levels used:    1
 31629 ;; Hardware stack levels required when called:    1
 31630 ;; This function calls:
 31631 ;;		Absolute function
 31632 ;;		_TMR5_DefaultInterruptHandler
 31633 ;;		_TMR5_WriteTimer
 31634 ;; This function is called by:
 31635 ;;		_INTERRUPT_InterruptManagerHigh
 31636 ;; This function uses a non-reentrant model
 31637 ;;
 31638                           
 31639                           	psect	text87
 31640  018F0C                     __ptext87:
 31641                           	opt stack 0
 31642  018F0C                     _TMR5_ISR:
 31643                           	opt stack 17
 31644                           
 31645                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 31646                           
 31647                           ;incstack = 0
 31648  018F0C  010E               	movlb	14	; () banked
 31649  018F0E  9938               	bcf	56,4,b	;volatile
 31650                           
 31651                           ; BSR set to: 14
 31652                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 31653  018F10  C1DB  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 31654  018F14  C1DC  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 31655  018F18  ECFF  F0C8         	call	_TMR5_WriteTimer	;wreg free
 31656                           
 31657                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 31658  018F1C  0102               	movlb	2	; () banked
 31659  018F1E  5128               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31660  018F20  1129               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31661  018F22  112A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31662  018F24  B4D8               	btfsc	status,2,c
 31663  018F26  0012               	return	
 31664                           
 31665                           ; BSR set to: 2
 31666                           ;tmr5.c: 172: {
 31667                           ;tmr5.c: 173: TMR5_InterruptHandler();
 31668  018F28  D801               	call	i2u2668_48
 31669  018F2A  0012               	return	
 31670  018F2C                     i2u2668_48:
 31671  018F2C  0005               	push	
 31672  018F2E  6EFA               	movwf	pclath,c
 31673  018F30  5128               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31674  018F32  6EFD               	movwf	tosl,c
 31675  018F34  5129               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31676  018F36  6EFE               	movwf	tosh,c
 31677  018F38  512A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31678  018F3A  6EFF               	movwf	tosu,c
 31679  018F3C  50FA               	movf	pclath,w,c
 31680  018F3E  0012               	return		;indir
 31681  018F40                     __end_of_TMR5_ISR:
 31682                           	opt stack 0
 31683                           tosu	equ	0xFFF
 31684                           tosh	equ	0xFFE
 31685                           tosl	equ	0xFFD
 31686                           pclatu	equ	0xFFB
 31687                           pclath	equ	0xFFA
 31688                           tblptru	equ	0xFF8
 31689                           tblptrh	equ	0xFF7
 31690                           tblptrl	equ	0xFF6
 31691                           tablat	equ	0xFF5
 31692                           prodh	equ	0xFF4
 31693                           prodl	equ	0xFF3
 31694                           intcon	equ	0xFF2
 31695                           indf0	equ	0xFEF
 31696                           postinc0	equ	0xFEE
 31697                           fsr0h	equ	0xFEA
 31698                           fsr0l	equ	0xFE9
 31699                           wreg	equ	0xFE8
 31700                           indf1	equ	0xFE7
 31701                           postdec1	equ	0xFE5
 31702                           plusw1	equ	0xFE3
 31703                           fsr1h	equ	0xFE2
 31704                           fsr1l	equ	0xFE1
 31705                           bsr	equ	0xFE0
 31706                           indf2	equ	0xFDF
 31707                           postinc2	equ	0xFDE
 31708                           postdec2	equ	0xFDD
 31709                           plusw2	equ	0xFDB
 31710                           fsr2h	equ	0xFDA
 31711                           fsr2l	equ	0xFD9
 31712                           status	equ	0xFD8
 31713                           
 31714 ;; *************** function _TMR5_WriteTimer *****************
 31715 ;; Defined at:
 31716 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 31717 ;; Parameters:    Size  Location     Type
 31718 ;;  timerVal        2    0[COMRAM] unsigned int 
 31719 ;; Auto vars:     Size  Location     Type
 31720 ;;		None
 31721 ;; Return value:  Size  Location     Type
 31722 ;;                  1    wreg      void 
 31723 ;; Registers used:
 31724 ;;		wreg, status,2
 31725 ;; Tracked objects:
 31726 ;;		On entry : 0/0
 31727 ;;		On exit  : 0/0
 31728 ;;		Unchanged: 0/0
 31729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31734 ;;Total ram usage:        2 bytes
 31735 ;; Hardware stack levels used:    1
 31736 ;; This function calls:
 31737 ;;		Nothing
 31738 ;; This function is called by:
 31739 ;;		_TMR5_ISR
 31740 ;;		_TMR5_Reload
 31741 ;; This function uses a non-reentrant model
 31742 ;;
 31743                           
 31744                           	psect	text88
 31745  0191FE                     __ptext88:
 31746                           	opt stack 0
 31747  0191FE                     _TMR5_WriteTimer:
 31748                           	opt stack 17
 31749                           
 31750                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 31751                           
 31752                           ;incstack = 0
 31753  0191FE  A4C3               	btfss	4035,2,c	;volatile
 31754  019200  D007               	goto	i2l714
 31755                           
 31756                           ;tmr5.c: 130: {
 31757                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 31758  019202  90C3               	bcf	4035,0,c	;volatile
 31759                           
 31760                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 31761  019204  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 31762  019206  6EC2               	movwf	4034,c	;volatile
 31763                           
 31764                           ;tmr5.c: 136: TMR5L = timerVal;
 31765  019208  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 31766                           
 31767                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 31768  01920C  80C3               	bsf	4035,0,c	;volatile
 31769                           
 31770                           ;tmr5.c: 140: }
 31771  01920E  0012               	return	
 31772  019210                     i2l714:
 31773                           
 31774                           ;tmr5.c: 141: else
 31775                           ;tmr5.c: 142: {
 31776                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 31777  019210  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 31778  019212  6EC2               	movwf	4034,c	;volatile
 31779                           
 31780                           ;tmr5.c: 145: TMR5L = timerVal;
 31781  019214  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 31782  019218  0012               	return	
 31783  01921A                     __end_of_TMR5_WriteTimer:
 31784                           	opt stack 0
 31785                           tosu	equ	0xFFF
 31786                           tosh	equ	0xFFE
 31787                           tosl	equ	0xFFD
 31788                           pclatu	equ	0xFFB
 31789                           pclath	equ	0xFFA
 31790                           tblptru	equ	0xFF8
 31791                           tblptrh	equ	0xFF7
 31792                           tblptrl	equ	0xFF6
 31793                           tablat	equ	0xFF5
 31794                           prodh	equ	0xFF4
 31795                           prodl	equ	0xFF3
 31796                           intcon	equ	0xFF2
 31797                           indf0	equ	0xFEF
 31798                           postinc0	equ	0xFEE
 31799                           fsr0h	equ	0xFEA
 31800                           fsr0l	equ	0xFE9
 31801                           wreg	equ	0xFE8
 31802                           indf1	equ	0xFE7
 31803                           postdec1	equ	0xFE5
 31804                           plusw1	equ	0xFE3
 31805                           fsr1h	equ	0xFE2
 31806                           fsr1l	equ	0xFE1
 31807                           bsr	equ	0xFE0
 31808                           indf2	equ	0xFDF
 31809                           postinc2	equ	0xFDE
 31810                           postdec2	equ	0xFDD
 31811                           plusw2	equ	0xFDB
 31812                           fsr2h	equ	0xFDA
 31813                           fsr2l	equ	0xFD9
 31814                           status	equ	0xFD8
 31815                           
 31816 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31817 ;; Defined at:
 31818 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31819 ;; Parameters:    Size  Location     Type
 31820 ;;		None
 31821 ;; Auto vars:     Size  Location     Type
 31822 ;;		None
 31823 ;; Return value:  Size  Location     Type
 31824 ;;                  1    wreg      void 
 31825 ;; Registers used:
 31826 ;;		None
 31827 ;; Tracked objects:
 31828 ;;		On entry : 0/0
 31829 ;;		On exit  : 0/0
 31830 ;;		Unchanged: 0/0
 31831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31836 ;;Total ram usage:        0 bytes
 31837 ;; Hardware stack levels used:    1
 31838 ;; This function calls:
 31839 ;;		Nothing
 31840 ;; This function is called by:
 31841 ;;		_TMR5_Initialize
 31842 ;;		_TMR5_ISR
 31843 ;; This function uses a non-reentrant model
 31844 ;;
 31845                           
 31846                           	psect	text89
 31847  0193AC                     __ptext89:
 31848                           	opt stack 0
 31849  0193AC                     _TMR5_DefaultInterruptHandler:
 31850                           	opt stack 17
 31851                           
 31852                           ;incstack = 0
 31853  0193AC  0012               	return		;funcret
 31854  0193AE                     __end_of_TMR5_DefaultInterruptHandler:
 31855                           	opt stack 0
 31856                           tosu	equ	0xFFF
 31857                           tosh	equ	0xFFE
 31858                           tosl	equ	0xFFD
 31859                           pclatu	equ	0xFFB
 31860                           pclath	equ	0xFFA
 31861                           tblptru	equ	0xFF8
 31862                           tblptrh	equ	0xFF7
 31863                           tblptrl	equ	0xFF6
 31864                           tablat	equ	0xFF5
 31865                           prodh	equ	0xFF4
 31866                           prodl	equ	0xFF3
 31867                           intcon	equ	0xFF2
 31868                           indf0	equ	0xFEF
 31869                           postinc0	equ	0xFEE
 31870                           fsr0h	equ	0xFEA
 31871                           fsr0l	equ	0xFE9
 31872                           wreg	equ	0xFE8
 31873                           indf1	equ	0xFE7
 31874                           postdec1	equ	0xFE5
 31875                           plusw1	equ	0xFE3
 31876                           fsr1h	equ	0xFE2
 31877                           fsr1l	equ	0xFE1
 31878                           bsr	equ	0xFE0
 31879                           indf2	equ	0xFDF
 31880                           postinc2	equ	0xFDE
 31881                           postdec2	equ	0xFDD
 31882                           plusw2	equ	0xFDB
 31883                           fsr2h	equ	0xFDA
 31884                           fsr2l	equ	0xFD9
 31885                           status	equ	0xFD8
 31886                           
 31887 ;; *************** function _EUSART2_Receive_ISR *****************
 31888 ;; Defined at:
 31889 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 31890 ;; Parameters:    Size  Location     Type
 31891 ;;		None
 31892 ;; Auto vars:     Size  Location     Type
 31893 ;;		None
 31894 ;; Return value:  Size  Location     Type
 31895 ;;                  1    wreg      void 
 31896 ;; Registers used:
 31897 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31898 ;; Tracked objects:
 31899 ;;		On entry : 0/0
 31900 ;;		On exit  : 0/0
 31901 ;;		Unchanged: 0/0
 31902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31907 ;;Total ram usage:        0 bytes
 31908 ;; Hardware stack levels used:    1
 31909 ;; Hardware stack levels required when called:    3
 31910 ;; This function calls:
 31911 ;;		i2_printf
 31912 ;; This function is called by:
 31913 ;;		_EUSART2_Initialize
 31914 ;;		_INTERRUPT_InterruptManagerHigh
 31915 ;; This function uses a non-reentrant model
 31916 ;;
 31917                           
 31918                           	psect	text90
 31919  017E86                     __ptext90:
 31920                           	opt stack 0
 31921  017E86                     _EUSART2_Receive_ISR:
 31922                           	opt stack 15
 31923                           
 31924                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 31925                           
 31926                           ;incstack = 0
 31927  017E86  010E               	movlb	14	; () banked
 31928  017E88  A3F5               	btfss	245,1,b	;volatile
 31929  017E8A  D003               	goto	i2l409
 31930                           
 31931                           ; BSR set to: 14
 31932                           ;eusart2.c: 221: {
 31933                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 31934  017E8C  99F5               	bcf	245,4,b	;volatile
 31935                           
 31936                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 31937  017E8E  89F5               	bsf	245,4,b	;volatile
 31938                           
 31939                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 31940  017E90  827E               	bsf	3966,1,c	;volatile
 31941  017E92                     i2l409:
 31942                           
 31943                           ; BSR set to: 14
 31944                           ;eusart2.c: 227: }
 31945                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 31946  017E92  927E               	bcf	3966,1,c	;volatile
 31947                           
 31948                           ; BSR set to: 14
 31949                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 31950  017E94  0100               	movlb	0	; () banked
 31951  017E96  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 31952  017E98  0D01               	mullw	1
 31953  017E9A  0E80               	movlw	low _eusart2RxBuffer
 31954  017E9C  24F3               	addwf	prodl,w,c
 31955  017E9E  6ED9               	movwf	fsr2l,c
 31956  017EA0  0E03               	movlw	high _eusart2RxBuffer
 31957  017EA2  20F4               	addwfc	prodh,w,c
 31958  017EA4  6EDA               	movwf	fsr2h,c
 31959  017EA6  CEF1 FFDF          	movff	3825,indf2	;volatile
 31960                           
 31961                           ; BSR set to: 0
 31962  017EAA  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 31963                           
 31964                           ; BSR set to: 0
 31965                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 31966  017EAC  0E3F               	movlw	63
 31967  017EAE  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 31968  017EB0  D002               	goto	i2l410
 31969                           
 31970                           ; BSR set to: 0
 31971                           ;eusart2.c: 234: {
 31972                           ;eusart2.c: 235: eusart2RxHead = 0;
 31973  017EB2  0E00               	movlw	0
 31974  017EB4  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 31975  017EB6                     i2l410:
 31976                           
 31977                           ; BSR set to: 0
 31978                           ;eusart2.c: 236: }
 31979                           ;eusart2.c: 237: eusart2RxCount++;
 31980                           
 31981                           ; BSR set to: 0
 31982  017EB6  0101               	movlb	1	; () banked
 31983  017EB8  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 31984                           
 31985                           ; BSR set to: 1
 31986                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 31987  017EBA  0E0A               	movlw	10
 31988  017EBC  010E               	movlb	14	; () banked
 31989  017EBE  19F1               	xorwf	241,w,b	;volatile
 31990  017EC0  B4D8               	btfsc	status,2,c
 31991  017EC2  D004               	goto	i2u1931_40
 31992                           
 31993                           ; BSR set to: 14
 31994  017EC4  0E0D               	movlw	13
 31995  017EC6  19F1               	xorwf	241,w,b	;volatile
 31996  017EC8  A4D8               	btfss	status,2,c
 31997  017ECA  D006               	goto	i2l411
 31998  017ECC                     i2u1931_40:
 31999                           
 32000                           ; BSR set to: 14
 32001                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 32002  017ECC  0100               	movlb	0	; () banked
 32003  017ECE  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 32004                           
 32005                           ; BSR set to: 0
 32006                           ;eusart2.c: 248: RC2REG = 0;
 32007  017ED0  0E00               	movlw	0
 32008  017ED2  010E               	movlb	14	; () banked
 32009  017ED4  6FF1               	movwf	241,b	;volatile
 32010                           
 32011                           ;eusart2.c: 250: }
 32012  017ED6  D002               	goto	i2l414
 32013  017ED8                     i2l411:
 32014                           
 32015                           ; BSR set to: 14
 32016                           ;eusart2.c: 252: else {
 32017                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 32018  017ED8  0100               	movlb	0	; () banked
 32019  017EDA  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 32020  017EDC                     i2l414:
 32021                           
 32022                           ;eusart2.c: 256: }
 32023                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 32024                           
 32025                           ; BSR set to: 0
 32026  017EDC  0E08               	movlw	8
 32027  017EDE  010E               	movlb	14	; () banked
 32028  017EE0  19F1               	xorwf	241,w,b	;volatile
 32029  017EE2  A4D8               	btfss	status,2,c
 32030  017EE4  0012               	return	
 32031                           
 32032                           ; BSR set to: 14
 32033                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 32034  017EE6  0100               	movlb	0	; () banked
 32035  017EE8  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 32036  017EEA  0D01               	mullw	1
 32037  017EEC  0E80               	movlw	low _eusart2RxBuffer
 32038  017EEE  24F3               	addwf	prodl,w,c
 32039  017EF0  6ED9               	movwf	fsr2l,c
 32040  017EF2  0E03               	movlw	high _eusart2RxBuffer
 32041  017EF4  20F4               	addwfc	prodh,w,c
 32042  017EF6  6EDA               	movwf	fsr2h,c
 32043  017EF8  0E00               	movlw	0
 32044  017EFA  6EDF               	movwf	indf2,c
 32045                           
 32046                           ; BSR set to: 0
 32047                           ;eusart2.c: 262: eusart2RxHead--;
 32048  017EFC  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 32049                           
 32050                           ; BSR set to: 0
 32051                           ;eusart2.c: 265: printf("\033[K");
 32052  017EFE  0EC5               	movlw	low STR_1
 32053  017F00  6F88               	movwf	i2printf@f& (0+255),b
 32054  017F02  0EFF               	movlw	high STR_1
 32055  017F04  6F89               	movwf	(i2printf@f+1)& (0+255),b
 32056  017F06  ECB8  F090         	call	i2_printf	;wreg free
 32057                           
 32058                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 32059  017F0A  0101               	movlb	1	; () banked
 32060  017F0C  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 32061  017F0E  0100               	movlb	0	; () banked
 32062  017F10  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 32063  017F12  B4D8               	btfsc	status,2,c
 32064  017F14  D00B               	goto	i2l416
 32065                           
 32066                           ; BSR set to: 0
 32067                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 32068  017F16  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 32069  017F18  0D01               	mullw	1
 32070  017F1A  0E80               	movlw	low _eusart2RxBuffer
 32071  017F1C  24F3               	addwf	prodl,w,c
 32072  017F1E  6ED9               	movwf	fsr2l,c
 32073  017F20  0E03               	movlw	high _eusart2RxBuffer
 32074  017F22  20F4               	addwfc	prodh,w,c
 32075  017F24  6EDA               	movwf	fsr2h,c
 32076  017F26  0E00               	movlw	0
 32077  017F28  6EDF               	movwf	indf2,c
 32078                           
 32079                           ; BSR set to: 0
 32080                           ;eusart2.c: 270: eusart2RxHead--;
 32081  017F2A  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 32082  017F2C                     i2l416:
 32083                           
 32084                           ; BSR set to: 0
 32085                           ;eusart2.c: 272: }
 32086                           ;eusart2.c: 274: RC2REG = 0;
 32087                           
 32088                           ; BSR set to: 0
 32089  017F2C  0E00               	movlw	0
 32090  017F2E  010E               	movlb	14	; () banked
 32091  017F30  6FF1               	movwf	241,b	;volatile
 32092  017F32  0012               	return	
 32093  017F34                     __end_of_EUSART2_Receive_ISR:
 32094                           	opt stack 0
 32095                           tosu	equ	0xFFF
 32096                           tosh	equ	0xFFE
 32097                           tosl	equ	0xFFD
 32098                           pclatu	equ	0xFFB
 32099                           pclath	equ	0xFFA
 32100                           tblptru	equ	0xFF8
 32101                           tblptrh	equ	0xFF7
 32102                           tblptrl	equ	0xFF6
 32103                           tablat	equ	0xFF5
 32104                           prodh	equ	0xFF4
 32105                           prodl	equ	0xFF3
 32106                           intcon	equ	0xFF2
 32107                           indf0	equ	0xFEF
 32108                           postinc0	equ	0xFEE
 32109                           fsr0h	equ	0xFEA
 32110                           fsr0l	equ	0xFE9
 32111                           wreg	equ	0xFE8
 32112                           indf1	equ	0xFE7
 32113                           postdec1	equ	0xFE5
 32114                           plusw1	equ	0xFE3
 32115                           fsr1h	equ	0xFE2
 32116                           fsr1l	equ	0xFE1
 32117                           bsr	equ	0xFE0
 32118                           indf2	equ	0xFDF
 32119                           postinc2	equ	0xFDE
 32120                           postdec2	equ	0xFDD
 32121                           plusw2	equ	0xFDB
 32122                           fsr2h	equ	0xFDA
 32123                           fsr2l	equ	0xFD9
 32124                           status	equ	0xFD8
 32125                           
 32126 ;; *************** function i2_printf *****************
 32127 ;; Defined at:
 32128 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 32129 ;; Parameters:    Size  Location     Type
 32130 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 32131 ;;		 -> STR_150(30), STR_149(46), STR_148(39), STR_147(62), 
 32132 ;;		 -> STR_146(55), STR_145(470), STR_143(2891), STR_141(492), 
 32133 ;;		 -> STR_139(605), STR_137(720), STR_135(922), STR_133(54), 
 32134 ;;		 -> STR_131(54), STR_129(45), STR_127(51), STR_125(52), 
 32135 ;;		 -> STR_123(46), STR_121(51), STR_119(53), STR_117(58), 
 32136 ;;		 -> STR_115(71), STR_114(63), STR_113(37), STR_112(46), 
 32137 ;;		 -> STR_111(102), STR_110(86), STR_108(25), STR_106(42), 
 32138 ;;		 -> STR_105(53), STR_104(31), STR_102(29), STR_101(28), 
 32139 ;;		 -> STR_99(42), STR_97(41), STR_95(40), STR_93(56), 
 32140 ;;		 -> STR_91(34), STR_89(34), STR_87(32), STR_85(37), 
 32141 ;;		 -> STR_83(58), STR_81(36), STR_79(36), STR_77(37), 
 32142 ;;		 -> STR_75(45), STR_74(66), STR_72(21), STR_70(24), 
 32143 ;;		 -> STR_69(48), STR_59(54), STR_58(64), STR_56(59), 
 32144 ;;		 -> STR_54(85), STR_52(47), STR_51(17), STR_48(52), 
 32145 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 32146 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 32147 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 32148 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 32149 ;; Auto vars:     Size  Location     Type
 32150 ;;  printf          4   69[BANK0 ] PTR const unsigned char 
 32151 ;;  printf          4   65[BANK0 ] unsigned long 
 32152 ;;  printf          4   59[BANK0 ] struct .
 32153 ;;  printf          2   77[BANK0 ] int 
 32154 ;;  printf          2   75[BANK0 ] int 
 32155 ;;  printf          2   73[BANK0 ] unsigned short 
 32156 ;;  printf          2   63[BANK0 ] int 
 32157 ;;  printf          2   57[BANK0 ] PTR void [1]
 32158 ;;		 -> ?i2_printf(2), ?_printf(2), 
 32159 ;;  printf          2   55[BANK0 ] unsigned int 
 32160 ;;  printf          2   53[BANK0 ] PTR const unsigned char 
 32161 ;;		 -> STR_164(7), printf@c(1), STR_163(16), STR_162(22), 
 32162 ;;		 -> STR_161(21), STR_160(27), STR_159(41), STR_158(32), 
 32163 ;;		 -> STR_157(19), STR_156(16), STR_155(15), STR_154(16), 
 32164 ;;		 -> STR_153(10), STR_152(13), STR_151(12), ringBufferLUT@channel_name(22), 
 32165 ;;		 -> TRIAC_Firing_Angle(4), 
 32166 ;;  printf          1   79[BANK0 ] char 
 32167 ;;  printf          1   52[BANK0 ] unsigned char 
 32168 ;;  printf          1    0        unsigned char 
 32169 ;; Return value:  Size  Location     Type
 32170 ;;                  2   40[BANK0 ] int 
 32171 ;; Registers used:
 32172 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32173 ;; Tracked objects:
 32174 ;;		On entry : 0/0
 32175 ;;		On exit  : 0/0
 32176 ;;		Unchanged: 0/0
 32177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32179 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32180 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32181 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32182 ;;Total ram usage:       40 bytes
 32183 ;; Hardware stack levels used:    1
 32184 ;; Hardware stack levels required when called:    2
 32185 ;; This function calls:
 32186 ;;		i2___awdiv
 32187 ;;		i2___fladd
 32188 ;;		i2___flge
 32189 ;;		i2___flmul
 32190 ;;		i2___flneg
 32191 ;;		i2___flsub
 32192 ;;		i2___fltol
 32193 ;;		i2___lldiv
 32194 ;;		i2___llmod
 32195 ;;		i2___wmul
 32196 ;;		i2___xxtofl
 32197 ;;		i2__div_to_l_
 32198 ;;		i2__tdiv_to_l_
 32199 ;;		i2_fround
 32200 ;;		i2_isdigit
 32201 ;;		i2_putch
 32202 ;;		i2_scale
 32203 ;; This function is called by:
 32204 ;;		_EUSART2_Receive_ISR
 32205 ;; This function uses a non-reentrant model
 32206 ;;
 32207                           
 32208                           	psect	text91
 32209  012170                     __ptext91:
 32210                           	opt stack 0
 32211  012170                     i2_printf:
 32212                           	opt stack 15
 32213                           
 32214                           ;doprnt.c: 466: va_list ap;
 32215                           ;doprnt.c: 499: signed char c;
 32216                           ;doprnt.c: 501: int width;
 32217                           ;doprnt.c: 504: int prec;
 32218                           ;doprnt.c: 508: unsigned short flag;
 32219                           ;doprnt.c: 515: char d;
 32220                           ;doprnt.c: 516: double fval;
 32221                           ;doprnt.c: 517: int exp;
 32222                           ;doprnt.c: 523: union {
 32223                           ;doprnt.c: 524: unsigned long vd;
 32224                           ;doprnt.c: 525: double integ;
 32225                           ;doprnt.c: 526: } tmpval;
 32226                           ;doprnt.c: 528: unsigned long val;
 32227                           ;doprnt.c: 529: unsigned len;
 32228                           ;doprnt.c: 530: const char * cp;
 32229                           ;doprnt.c: 533: *ap = __va_start();
 32230                           
 32231                           ; BSR set to: 14
 32232                           ;incstack = 0
 32233  012170  0E8A               	movlw	low (?i2_printf+2)
 32234  012172  0100               	movlb	0	; () banked
 32235  012174  6F99               	movwf	i2printf@ap& (0+255),b
 32236  012176  0E00               	movlw	high (?i2_printf+2)
 32237  012178  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 32238                           
 32239                           ;doprnt.c: 536: while(c = *f++) {
 32240  01217A  EF7B  F097         	goto	i2u1917_40
 32241  01217E                     
 32242                           ; BSR set to: 0
 32243                           ;doprnt.c: 538: if(c != '%')
 32244                           
 32245                           ; BSR set to: 0
 32246  01217E  0E25               	movlw	37
 32247  012180  19AF               	xorwf	i2printf@c& (0+255),w,b
 32248  012182  B4D8               	btfsc	status,2,c
 32249  012184  D005               	goto	i2l1470
 32250                           
 32251                           ; BSR set to: 0
 32252                           ;doprnt.c: 540: {
 32253                           ;doprnt.c: 541: (putch(c) );
 32254  012186  51AF               	movf	i2printf@c& (0+255),w,b
 32255  012188  ECB5  F0C9         	call	i2_putch
 32256                           
 32257                           ;doprnt.c: 542: continue;
 32258  01218C  EF7B  F097         	goto	i2u1917_40
 32259  012190                     i2l1470:
 32260                           
 32261                           ;doprnt.c: 543: }
 32262                           ;doprnt.c: 546: width = 0;
 32263  012190  0E00               	movlw	0
 32264  012192  0100               	movlb	0	; () banked
 32265  012194  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 32266  012196  0E00               	movlw	0
 32267  012198  6FAB               	movwf	i2printf@width& (0+255),b
 32268                           
 32269                           ;doprnt.c: 548: flag = 0;
 32270  01219A  0E00               	movlw	0
 32271  01219C  6FAA               	movwf	(i2printf@flag+1)& (0+255),b
 32272  01219E  0E00               	movlw	0
 32273  0121A0  6FA9               	movwf	i2printf@flag& (0+255),b
 32274                           
 32275                           ; BSR set to: 0
 32276                           ;doprnt.c: 551: switch(*f) {
 32277                           
 32278                           ;doprnt.c: 550: for(;;) {
 32279  0121A2  D004               	goto	i2l1472
 32280  0121A4                     
 32281                           ;doprnt.c: 580: flag |= 0x04;
 32282                           
 32283                           ; BSR set to: 0
 32284  0121A4  0100               	movlb	0	; () banked
 32285  0121A6  85A9               	bsf	i2printf@flag& (0+255),2,b
 32286                           
 32287                           ;doprnt.c: 581: f++;
 32288  0121A8  4B88               	infsnz	i2printf@f& (0+255),f,b
 32289  0121AA  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 32290  0121AC                     i2l1472:
 32291                           
 32292                           ; BSR set to: 0
 32293  0121AC  C088  FFF6         	movff	i2printf@f,tblptrl
 32294  0121B0  C089  FFF7         	movff	i2printf@f+1,tblptrh
 32295  0121B4  0E00               	movlw	low (__mediumconst shr (0+16))
 32296  0121B6  6EF8               	movwf	tblptru,c
 32297  0121B8  0E0D               	movlw	(high __ramtop+-1)
 32298  0121BA  64F7               	cpfsgt	tblptrh,c
 32299  0121BC  D003               	bra	i2u1843_47
 32300  0121BE  0008               	tblrd		*
 32301  0121C0  50F5               	movf	tablat,w,c
 32302  0121C2  D005               	bra	i2u1843_40
 32303  0121C4                     i2u1843_47:
 32304  0121C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 32305  0121C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 32306  0121CC  50EF               	movf	indf0,w,c
 32307  0121CE                     i2u1843_40:
 32308                           
 32309                           ; Switch size 1, requested type "space"
 32310                           ; Number of cases is 1, Range of values is 48 to 48
 32311                           ; switch strategies available:
 32312                           ; Name         Instructions Cycles
 32313                           ; simple_byte            4     3 (average)
 32314                           ;	Chosen strategy is simple_byte
 32315  0121CE  0A30               	xorlw	48	; case 48
 32316  0121D0  B4D8               	btfsc	status,2,c
 32317  0121D2  D7E8               	goto	i2l1473
 32318                           
 32319                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 32320                           
 32321                           ;doprnt.c: 586: }
 32322                           
 32323                           ;doprnt.c: 585: break;
 32324  0121D4  C088  FFF6         	movff	i2printf@f,tblptrl
 32325  0121D8  C089  FFF7         	movff	i2printf@f+1,tblptrh
 32326  0121DC  0E00               	movlw	low (__mediumconst shr (0+16))
 32327  0121DE  6EF8               	movwf	tblptru,c
 32328  0121E0  0E0D               	movlw	(high __ramtop+-1)
 32329  0121E2  64F7               	cpfsgt	tblptrh,c
 32330  0121E4  D003               	bra	i2u1844_47
 32331  0121E6  0008               	tblrd		*
 32332  0121E8  50F5               	movf	tablat,w,c
 32333  0121EA  D005               	bra	i2u1844_40
 32334  0121EC                     i2u1844_47:
 32335  0121EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 32336  0121F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 32337  0121F4  50EF               	movf	indf0,w,c
 32338  0121F6                     i2u1844_40:
 32339  0121F6  ECD4  F0C8         	call	i2_isdigit
 32340  0121FA  A0D8               	btfss	status,0,c
 32341  0121FC  D04B               	goto	i2u1848_40
 32342                           
 32343                           ;doprnt.c: 598: width = 0;
 32344  0121FE  0E00               	movlw	0
 32345  012200  0100               	movlb	0	; () banked
 32346  012202  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 32347  012204  0E00               	movlw	0
 32348  012206  6FAB               	movwf	i2printf@width& (0+255),b
 32349  012208                     
 32350                           ;doprnt.c: 600: width *= 10;
 32351                           
 32352                           ; BSR set to: 0
 32353  012208  C0AB  F001         	movff	i2printf@width,i2___wmul@multiplier
 32354  01220C  C0AC  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 32355  012210  0E00               	movlw	0
 32356  012212  6E04               	movwf	i2___wmul@multiplicand+1,c
 32357  012214  0E0A               	movlw	10
 32358  012216  6E03               	movwf	i2___wmul@multiplicand,c
 32359  012218  EC8E  F0C8         	call	i2___wmul	;wreg free
 32360  01221C  C001  F0AB         	movff	?i2___wmul,i2printf@width
 32361  012220  C002  F0AC         	movff	?i2___wmul+1,i2printf@width+1
 32362                           
 32363                           ;doprnt.c: 601: width += *f++ - '0';
 32364  012224  0ED0               	movlw	208
 32365  012226  0100               	movlb	0	; () banked
 32366  012228  6F8A               	movwf	??i2_printf& (0+255),b
 32367  01222A  0EFF               	movlw	255
 32368  01222C  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 32369  01222E  C088  FFF6         	movff	i2printf@f,tblptrl
 32370  012232  C089  FFF7         	movff	i2printf@f+1,tblptrh
 32371  012236  0E00               	movlw	low (__mediumconst shr (0+16))
 32372  012238  6EF8               	movwf	tblptru,c
 32373  01223A  0E0D               	movlw	(high __ramtop+-1)
 32374  01223C  64F7               	cpfsgt	tblptrh,c
 32375  01223E  D003               	bra	i2u1846_47
 32376  012240  0008               	tblrd		*
 32377  012242  50F5               	movf	tablat,w,c
 32378  012244  D005               	bra	i2u1846_40
 32379  012246                     i2u1846_47:
 32380  012246  CFF6 FFE9          	movff	tblptrl,fsr0l
 32381  01224A  CFF7 FFEA          	movff	tblptrh,fsr0h
 32382  01224E  50EF               	movf	indf0,w,c
 32383  012250                     i2u1846_40:
 32384  012250  0100               	movlb	0	; () banked
 32385  012252  6F8C               	movwf	(??i2_printf+2)& (0+255),b
 32386  012254  6B8D               	clrf	(??i2_printf+3)& (0+255),b
 32387  012256  518A               	movf	??i2_printf& (0+255),w,b
 32388  012258  278C               	addwf	(??i2_printf+2)& (0+255),f,b
 32389  01225A  518B               	movf	(??i2_printf+1)& (0+255),w,b
 32390  01225C  238D               	addwfc	(??i2_printf+3)& (0+255),f,b
 32391  01225E  518C               	movf	(??i2_printf+2)& (0+255),w,b
 32392  012260  27AB               	addwf	i2printf@width& (0+255),f,b
 32393  012262  518D               	movf	(??i2_printf+3)& (0+255),w,b
 32394  012264  23AC               	addwfc	(i2printf@width+1)& (0+255),f,b
 32395                           
 32396                           ; BSR set to: 0
 32397  012266  4B88               	infsnz	i2printf@f& (0+255),f,b
 32398  012268  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 32399                           
 32400                           ; BSR set to: 0
 32401                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 32402  01226A  C088  FFF6         	movff	i2printf@f,tblptrl
 32403  01226E  C089  FFF7         	movff	i2printf@f+1,tblptrh
 32404  012272  0E00               	movlw	low (__mediumconst shr (0+16))
 32405  012274  6EF8               	movwf	tblptru,c
 32406  012276  0E0D               	movlw	(high __ramtop+-1)
 32407  012278  64F7               	cpfsgt	tblptrh,c
 32408  01227A  D003               	bra	i2u1847_47
 32409  01227C  0008               	tblrd		*
 32410  01227E  50F5               	movf	tablat,w,c
 32411  012280  D005               	bra	i2u1847_40
 32412  012282                     i2u1847_47:
 32413  012282  CFF6 FFE9          	movff	tblptrl,fsr0l
 32414  012286  CFF7 FFEA          	movff	tblptrh,fsr0h
 32415  01228A  50EF               	movf	indf0,w,c
 32416  01228C                     i2u1847_40:
 32417  01228C  ECD4  F0C8         	call	i2_isdigit
 32418  012290  B0D8               	btfsc	status,0,c
 32419  012292  D7BA               	goto	i2l1478
 32420  012294                     i2u1848_40:
 32421                           
 32422                           ;doprnt.c: 608: }
 32423                           ;doprnt.c: 611: if(*f == '.') {
 32424  012294  C088  FFF6         	movff	i2printf@f,tblptrl
 32425  012298  C089  FFF7         	movff	i2printf@f+1,tblptrh
 32426  01229C  0E00               	movlw	low (__mediumconst shr (0+16))
 32427  01229E  6EF8               	movwf	tblptru,c
 32428  0122A0  0E0D               	movlw	(high __ramtop+-1)
 32429  0122A2  64F7               	cpfsgt	tblptrh,c
 32430  0122A4  D003               	bra	i2u1849_47
 32431  0122A6  0008               	tblrd		*
 32432  0122A8  50F5               	movf	tablat,w,c
 32433  0122AA  D005               	bra	i2u1849_40
 32434  0122AC                     i2u1849_47:
 32435  0122AC  CFF6 FFE9          	movff	tblptrl,fsr0l
 32436  0122B0  CFF7 FFEA          	movff	tblptrh,fsr0h
 32437  0122B4  50EF               	movf	indf0,w,c
 32438  0122B6                     i2u1849_40:
 32439  0122B6  0A2E               	xorlw	46
 32440  0122B8  A4D8               	btfss	status,2,c
 32441  0122BA  D048               	goto	i2l1480
 32442                           
 32443                           ;doprnt.c: 612: flag |= 0x4000;
 32444  0122BC  0100               	movlb	0	; () banked
 32445  0122BE  8DAA               	bsf	(i2printf@flag+1)& (0+255),6,b
 32446                           
 32447                           ;doprnt.c: 613: f++;
 32448  0122C0  4B88               	infsnz	i2printf@f& (0+255),f,b
 32449  0122C2  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 32450                           
 32451                           ; BSR set to: 0
 32452                           ;doprnt.c: 620: {
 32453                           ;doprnt.c: 621: prec = 0;
 32454  0122C4  0E00               	movlw	0
 32455  0122C6  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 32456  0122C8  0E00               	movlw	0
 32457  0122CA  6FAD               	movwf	i2printf@prec& (0+255),b
 32458                           
 32459                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 32460  0122CC  D029               	goto	i2l1481
 32461  0122CE                     
 32462                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 32463                           
 32464                           ; BSR set to: 0
 32465  0122CE  C0AD  F001         	movff	i2printf@prec,i2___wmul@multiplier
 32466  0122D2  C0AE  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 32467  0122D6  0E00               	movlw	0
 32468  0122D8  6E04               	movwf	i2___wmul@multiplicand+1,c
 32469  0122DA  0E0A               	movlw	10
 32470  0122DC  6E03               	movwf	i2___wmul@multiplicand,c
 32471  0122DE  EC8E  F0C8         	call	i2___wmul	;wreg free
 32472  0122E2  C088  FFF6         	movff	i2printf@f,tblptrl
 32473  0122E6  C089  FFF7         	movff	i2printf@f+1,tblptrh
 32474  0122EA  0E00               	movlw	low (__mediumconst shr (0+16))
 32475  0122EC  6EF8               	movwf	tblptru,c
 32476  0122EE  0E0D               	movlw	(high __ramtop+-1)
 32477  0122F0  64F7               	cpfsgt	tblptrh,c
 32478  0122F2  D003               	bra	i2u1851_47
 32479  0122F4  0008               	tblrd		*
 32480  0122F6  50F5               	movf	tablat,w,c
 32481  0122F8  D005               	bra	i2u1851_40
 32482  0122FA                     i2u1851_47:
 32483  0122FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 32484  0122FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 32485  012302  50EF               	movf	indf0,w,c
 32486  012304                     i2u1851_40:
 32487  012304  0100               	movlb	0	; () banked
 32488  012306  6F8A               	movwf	??i2_printf& (0+255),b
 32489  012308  518A               	movf	??i2_printf& (0+255),w,b
 32490  01230A  2601               	addwf	?i2___wmul,f,c
 32491  01230C  0E00               	movlw	0
 32492  01230E  2202               	addwfc	?i2___wmul+1,f,c
 32493  012310  0ED0               	movlw	208
 32494  012312  2401               	addwf	?i2___wmul,w,c
 32495  012314  6FAD               	movwf	i2printf@prec& (0+255),b
 32496  012316  0EFF               	movlw	255
 32497  012318  2002               	addwfc	?i2___wmul+1,w,c
 32498  01231A  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 32499                           
 32500                           ; BSR set to: 0
 32501  01231C  4B88               	infsnz	i2printf@f& (0+255),f,b
 32502  01231E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 32503  012320                     i2l1481:
 32504                           
 32505                           ; BSR set to: 0
 32506                           
 32507                           ; BSR set to: 0
 32508  012320  C088  FFF6         	movff	i2printf@f,tblptrl
 32509  012324  C089  FFF7         	movff	i2printf@f+1,tblptrh
 32510  012328  0E00               	movlw	low (__mediumconst shr (0+16))
 32511  01232A  6EF8               	movwf	tblptru,c
 32512  01232C  0E0D               	movlw	(high __ramtop+-1)
 32513  01232E  64F7               	cpfsgt	tblptrh,c
 32514  012330  D003               	bra	i2u1852_47
 32515  012332  0008               	tblrd		*
 32516  012334  50F5               	movf	tablat,w,c
 32517  012336  D005               	bra	i2u1852_40
 32518  012338                     i2u1852_47:
 32519  012338  CFF6 FFE9          	movff	tblptrl,fsr0l
 32520  01233C  CFF7 FFEA          	movff	tblptrh,fsr0h
 32521  012340  50EF               	movf	indf0,w,c
 32522  012342                     i2u1852_40:
 32523  012342  ECD4  F0C8         	call	i2_isdigit
 32524  012346  A0D8               	btfss	status,0,c
 32525  012348  D0A4               	goto	i2l1485
 32526  01234A  D7C1               	goto	i2l1482
 32527  01234C                     i2l1480:
 32528                           
 32529                           ;doprnt.c: 626: prec = 0;
 32530  01234C  0E00               	movlw	0
 32531  01234E  0100               	movlb	0	; () banked
 32532  012350  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 32533  012352  0E00               	movlw	0
 32534  012354  6FAD               	movwf	i2printf@prec& (0+255),b
 32535                           
 32536                           ; BSR set to: 0
 32537                           ;doprnt.c: 628: flag |= 0x1000;
 32538  012356  89AA               	bsf	(i2printf@flag+1)& (0+255),4,b
 32539                           
 32540                           ; BSR set to: 0
 32541                           ;doprnt.c: 630: }
 32542                           ;doprnt.c: 635: switch(c = *f++) {
 32543  012358  D09C               	goto	i2l1485
 32544  01235A                     
 32545                           ; BSR set to: 0
 32546                           ;doprnt.c: 663: flag |= 0x400;
 32547                           
 32548                           ; BSR set to: 0
 32549  01235A  85AA               	bsf	(i2printf@flag+1)& (0+255),2,b
 32550                           
 32551                           ; BSR set to: 0
 32552                           ;doprnt.c: 698: case 'i':
 32553                           ;doprnt.c: 699: break;
 32554                           
 32555                           ; BSR set to: 0
 32556                           
 32557                           ;doprnt.c: 697: case 'd':
 32558                           
 32559                           ;doprnt.c: 664: break;
 32560  01235C  D0D1               	goto	i2l1489
 32561  01235E                     
 32562                           ; BSR set to: 0
 32563                           ;doprnt.c: 718: case 'x':
 32564                           ;doprnt.c: 721: flag |= 0x80;
 32565                           
 32566                           ; BSR set to: 0
 32567                           
 32568                           ; BSR set to: 0
 32569  01235E  8FA9               	bsf	i2printf@flag& (0+255),7,b
 32570                           
 32571                           ;doprnt.c: 723: break;
 32572  012360  D0CF               	goto	i2l1489
 32573  012362                     
 32574                           ; BSR set to: 0
 32575                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 32576                           
 32577                           ; BSR set to: 0
 32578  012362  C099  FFD9         	movff	i2printf@ap,fsr2l
 32579  012366  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 32580  01236A  CFDE F095          	movff	postinc2,i2printf@cp
 32581  01236E  CFDD F096          	movff	postdec2,i2printf@cp+1
 32582                           
 32583                           ; BSR set to: 0
 32584  012372  0E02               	movlw	2
 32585  012374  2799               	addwf	i2printf@ap& (0+255),f,b
 32586  012376  0E00               	movlw	0
 32587  012378  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 32588                           
 32589                           ; BSR set to: 0
 32590                           ;doprnt.c: 740: if(!cp)
 32591  01237A  5195               	movf	i2printf@cp& (0+255),w,b
 32592  01237C  1196               	iorwf	(i2printf@cp+1)& (0+255),w,b
 32593  01237E  A4D8               	btfss	status,2,c
 32594  012380  D004               	goto	i2l1495
 32595                           
 32596                           ; BSR set to: 0
 32597                           ;doprnt.c: 741: cp = "(null)";
 32598  012382  0E86               	movlw	low STR_164
 32599  012384  6F95               	movwf	i2printf@cp& (0+255),b
 32600  012386  0EFF               	movlw	high STR_164
 32601  012388  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 32602  01238A                     i2l1495:
 32603                           
 32604                           ; BSR set to: 0
 32605                           ;doprnt.c: 745: len = 0;
 32606                           
 32607                           ; BSR set to: 0
 32608  01238A  0E00               	movlw	0
 32609  01238C  6F98               	movwf	(i2printf@len+1)& (0+255),b
 32610  01238E  0E00               	movlw	0
 32611  012390  6F97               	movwf	i2printf@len& (0+255),b
 32612                           
 32613                           ;doprnt.c: 746: while(cp[len])
 32614  012392  D003               	goto	i2l1496
 32615  012394                     
 32616                           ;doprnt.c: 747: len++;
 32617                           
 32618                           ; BSR set to: 0
 32619  012394  0100               	movlb	0	; () banked
 32620  012396  4B97               	infsnz	i2printf@len& (0+255),f,b
 32621  012398  2B98               	incf	(i2printf@len+1)& (0+255),f,b
 32622  01239A                     i2l1496:
 32623                           
 32624                           ; BSR set to: 0
 32625                           
 32626                           ; BSR set to: 0
 32627  01239A  5197               	movf	i2printf@len& (0+255),w,b
 32628  01239C  2595               	addwf	i2printf@cp& (0+255),w,b
 32629  01239E  6F8A               	movwf	??i2_printf& (0+255),b
 32630  0123A0  5198               	movf	(i2printf@len+1)& (0+255),w,b
 32631  0123A2  2196               	addwfc	(i2printf@cp+1)& (0+255),w,b
 32632  0123A4  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 32633  0123A6  C08A  FFF6         	movff	??i2_printf,tblptrl
 32634  0123AA  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 32635  0123AE  0E00               	movlw	low (__mediumconst shr (0+16))
 32636  0123B0  6EF8               	movwf	tblptru,c
 32637  0123B2  0E0D               	movlw	(high __ramtop+-1)
 32638  0123B4  64F7               	cpfsgt	tblptrh,c
 32639  0123B6  D003               	bra	i2u1855_47
 32640  0123B8  0008               	tblrd		*
 32641  0123BA  50F5               	movf	tablat,w,c
 32642  0123BC  D005               	bra	i2u1855_40
 32643  0123BE                     i2u1855_47:
 32644  0123BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 32645  0123C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 32646  0123C6  50EF               	movf	indf0,w,c
 32647  0123C8                     i2u1855_40:
 32648  0123C8  0900               	iorlw	0
 32649  0123CA  A4D8               	btfss	status,2,c
 32650  0123CC  D7E3               	goto	i2l1497
 32651  0123CE                     i2u1856_40:
 32652                           
 32653                           ;doprnt.c: 753: if(prec && prec < len)
 32654                           
 32655                           ;doprnt.c: 750: dostring:
 32656  0123CE  0100               	movlb	0	; () banked
 32657  0123D0  51AD               	movf	i2printf@prec& (0+255),w,b
 32658  0123D2  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 32659  0123D4  B4D8               	btfsc	status,2,c
 32660  0123D6  D00A               	goto	i2l1500
 32661                           
 32662                           ; BSR set to: 0
 32663  0123D8  5197               	movf	i2printf@len& (0+255),w,b
 32664  0123DA  5DAD               	subwf	i2printf@prec& (0+255),w,b
 32665  0123DC  5198               	movf	(i2printf@len+1)& (0+255),w,b
 32666  0123DE  59AE               	subwfb	(i2printf@prec+1)& (0+255),w,b
 32667  0123E0  B0D8               	btfsc	status,0,c
 32668  0123E2  D004               	goto	i2l1500
 32669                           
 32670                           ; BSR set to: 0
 32671                           ;doprnt.c: 754: len = prec;
 32672  0123E4  C0AD  F097         	movff	i2printf@prec,i2printf@len
 32673  0123E8  C0AE  F098         	movff	i2printf@prec+1,i2printf@len+1
 32674  0123EC                     i2l1500:
 32675                           
 32676                           ; BSR set to: 0
 32677                           ;doprnt.c: 757: if(width > len)
 32678                           
 32679                           ; BSR set to: 0
 32680  0123EC  51AB               	movf	i2printf@width& (0+255),w,b
 32681  0123EE  5D97               	subwf	i2printf@len& (0+255),w,b
 32682  0123F0  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 32683  0123F2  5998               	subwfb	(i2printf@len+1)& (0+255),w,b
 32684  0123F4  B0D8               	btfsc	status,0,c
 32685  0123F6  D005               	goto	i2l1501
 32686                           
 32687                           ; BSR set to: 0
 32688                           ;doprnt.c: 758: width -= len;
 32689  0123F8  5197               	movf	i2printf@len& (0+255),w,b
 32690  0123FA  5FAB               	subwf	i2printf@width& (0+255),f,b
 32691  0123FC  5198               	movf	(i2printf@len+1)& (0+255),w,b
 32692  0123FE  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 32693  012400  D008               	goto	i2l1503
 32694  012402                     i2l1501:
 32695                           
 32696                           ; BSR set to: 0
 32697                           ;doprnt.c: 759: else
 32698                           ;doprnt.c: 760: width = 0;
 32699                           
 32700                           ; BSR set to: 0
 32701  012402  0E00               	movlw	0
 32702  012404  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 32703  012406  0E00               	movlw	0
 32704  012408  6FAB               	movwf	i2printf@width& (0+255),b
 32705                           
 32706                           ; BSR set to: 0
 32707                           ;doprnt.c: 764: while(width--)
 32708  01240A  D003               	goto	i2l1503
 32709  01240C                     i2l14924:
 32710                           
 32711                           ; BSR set to: 0
 32712                           ;doprnt.c: 765: (putch(' ') );
 32713  01240C  0E20               	movlw	32
 32714  01240E  ECB5  F0C9         	call	i2_putch
 32715  012412                     i2l1503:
 32716  012412  0100               	movlb	0	; () banked
 32717  012414  07AB               	decf	i2printf@width& (0+255),f,b
 32718  012416  A0D8               	btfss	status,0,c
 32719  012418  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 32720  01241A  29AB               	incf	i2printf@width& (0+255),w,b
 32721  01241C  E1F7               	bnz	i2l14924
 32722  01241E  29AC               	incf	(i2printf@width+1)& (0+255),w,b
 32723  012420  B4D8               	btfsc	status,2,c
 32724  012422  D017               	goto	i2l1506
 32725  012424  D7F3               	goto	i2l1504
 32726  012426                     i2l14928:
 32727                           
 32728                           ; BSR set to: 0
 32729                           ;doprnt.c: 768: (putch(*cp++) );
 32730  012426  C095  FFF6         	movff	i2printf@cp,tblptrl
 32731  01242A  C096  FFF7         	movff	i2printf@cp+1,tblptrh
 32732  01242E  0E00               	movlw	low (__mediumconst shr (0+16))
 32733  012430  6EF8               	movwf	tblptru,c
 32734  012432  0E0D               	movlw	(high __ramtop+-1)
 32735  012434  64F7               	cpfsgt	tblptrh,c
 32736  012436  D003               	bra	i2u1861_47
 32737  012438  0008               	tblrd		*
 32738  01243A  50F5               	movf	tablat,w,c
 32739  01243C  D005               	bra	i2u1861_40
 32740  01243E                     i2u1861_47:
 32741  01243E  CFF6 FFE9          	movff	tblptrl,fsr0l
 32742  012442  CFF7 FFEA          	movff	tblptrh,fsr0h
 32743  012446  50EF               	movf	indf0,w,c
 32744  012448                     i2u1861_40:
 32745  012448  ECB5  F0C9         	call	i2_putch
 32746  01244C  0100               	movlb	0	; () banked
 32747  01244E  4B95               	infsnz	i2printf@cp& (0+255),f,b
 32748  012450  2B96               	incf	(i2printf@cp+1)& (0+255),f,b
 32749  012452                     i2l1506:
 32750                           
 32751                           ; BSR set to: 0
 32752                           
 32753                           ; BSR set to: 0
 32754  012452  0797               	decf	i2printf@len& (0+255),f,b
 32755  012454  A0D8               	btfss	status,0,c
 32756  012456  0798               	decf	(i2printf@len+1)& (0+255),f,b
 32757  012458  2997               	incf	i2printf@len& (0+255),w,b
 32758  01245A  E1E5               	bnz	i2l14928
 32759  01245C  2998               	incf	(i2printf@len+1)& (0+255),w,b
 32760  01245E  B4D8               	btfsc	status,2,c
 32761  012460  EF7B  F097         	goto	i2u1917_40
 32762  012464  D7E0               	goto	i2l1507
 32763  012466                     
 32764                           ; BSR set to: 0
 32765                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 32766                           
 32767                           ; BSR set to: 0
 32768  012466  C099  FFD9         	movff	i2printf@ap,fsr2l
 32769  01246A  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 32770  01246E  50DF               	movf	indf2,w,c
 32771  012470  6FAF               	movwf	i2printf@c& (0+255),b
 32772                           
 32773                           ; BSR set to: 0
 32774  012472  0E02               	movlw	2
 32775  012474  2799               	addwf	i2printf@ap& (0+255),f,b
 32776  012476  0E00               	movlw	0
 32777  012478  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 32778  01247A                     
 32779                           ; BSR set to: 0
 32780                           ;doprnt.c: 805: cp = (char *)&c;
 32781                           
 32782                           ; BSR set to: 0
 32783  01247A  0EAF               	movlw	low i2printf@c
 32784  01247C  6F95               	movwf	i2printf@cp& (0+255),b
 32785  01247E  0E00               	movlw	high i2printf@c
 32786  012480  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 32787                           
 32788                           ; BSR set to: 0
 32789                           ;doprnt.c: 806: len = 1;
 32790  012482  0E00               	movlw	0
 32791  012484  6F98               	movwf	(i2printf@len+1)& (0+255),b
 32792  012486  0E01               	movlw	1
 32793  012488  6F97               	movwf	i2printf@len& (0+255),b
 32794                           
 32795                           ;doprnt.c: 807: goto dostring;
 32796  01248A  D7A1               	goto	i2u1856_40
 32797  01248C                     
 32798                           ; BSR set to: 0
 32799                           ;doprnt.c: 818: flag |= 0xC0;
 32800                           
 32801                           ; BSR set to: 0
 32802  01248C  0EC0               	movlw	192
 32803  01248E  13A9               	iorwf	i2printf@flag& (0+255),f,b
 32804                           
 32805                           ; BSR set to: 0
 32806                           ;doprnt.c: 822: }
 32807                           
 32808                           ;doprnt.c: 819: break;
 32809  012490  D037               	goto	i2l1489
 32810  012492                     i2l1485:
 32811                           
 32812                           ; BSR set to: 0
 32813  012492  0100               	movlb	0	; () banked
 32814  012494  5188               	movf	i2printf@f& (0+255),w,b
 32815  012496  6F8A               	movwf	??i2_printf& (0+255),b
 32816  012498  5189               	movf	(i2printf@f+1)& (0+255),w,b
 32817  01249A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 32818  01249C  4B88               	infsnz	i2printf@f& (0+255),f,b
 32819  01249E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 32820  0124A0  C08A  FFF6         	movff	??i2_printf,tblptrl
 32821  0124A4  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 32822  0124A8  0E00               	movlw	low (__mediumconst shr (0+16))
 32823  0124AA  6EF8               	movwf	tblptru,c
 32824  0124AC  0E0D               	movlw	(high __ramtop+-1)
 32825  0124AE  64F7               	cpfsgt	tblptrh,c
 32826  0124B0  D003               	bra	i2u1863_47
 32827  0124B2  0008               	tblrd		*
 32828  0124B4  50F5               	movf	tablat,w,c
 32829  0124B6  D005               	bra	i2u1863_40
 32830  0124B8                     i2u1863_47:
 32831  0124B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 32832  0124BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 32833  0124C0  50EF               	movf	indf0,w,c
 32834  0124C2                     i2u1863_40:
 32835  0124C2  0100               	movlb	0	; () banked
 32836  0124C4  6FAF               	movwf	i2printf@c& (0+255),b
 32837  0124C6  51AF               	movf	i2printf@c& (0+255),w,b
 32838                           
 32839                           ; Switch size 1, requested type "space"
 32840                           ; Number of cases is 9, Range of values is 0 to 120
 32841                           ; switch strategies available:
 32842                           ; Name         Instructions Cycles
 32843                           ; simple_byte           28    15 (average)
 32844                           ;	Chosen strategy is simple_byte
 32845  0124C8  0A00               	xorlw	0	; case 0
 32846  0124CA  B4D8               	btfsc	status,2,c
 32847  0124CC  0012               	return	
 32848  0124CE  0A58               	xorlw	88	; case 88
 32849  0124D0  B4D8               	btfsc	status,2,c
 32850  0124D2  D745               	goto	i2l1492
 32851  0124D4  0A3B               	xorlw	59	; case 99
 32852  0124D6  B4D8               	btfsc	status,2,c
 32853  0124D8  D7C6               	goto	i2l1509
 32854  0124DA  0A07               	xorlw	7	; case 100
 32855  0124DC  B4D8               	btfsc	status,2,c
 32856  0124DE  D010               	goto	i2l1489
 32857  0124E0  0A02               	xorlw	2	; case 102
 32858  0124E2  B4D8               	btfsc	status,2,c
 32859  0124E4  D73A               	goto	i2l1488
 32860  0124E6  0A0F               	xorlw	15	; case 105
 32861  0124E8  B4D8               	btfsc	status,2,c
 32862  0124EA  D00A               	goto	i2l1489
 32863  0124EC  0A1A               	xorlw	26	; case 115
 32864  0124EE  B4D8               	btfsc	status,2,c
 32865  0124F0  D738               	goto	i2l1494
 32866  0124F2  0A06               	xorlw	6	; case 117
 32867  0124F4  B4D8               	btfsc	status,2,c
 32868  0124F6  D7CA               	goto	i2l1511
 32869  0124F8  0A0D               	xorlw	13	; case 120
 32870  0124FA  B4D8               	btfsc	status,2,c
 32871  0124FC  D730               	goto	i2l1492
 32872  0124FE  D7BD               	goto	i2l1510
 32873  012500                     i2l1489:
 32874                           
 32875                           ; BSR set to: 0
 32876                           ;doprnt.c: 825: if(flag & (0x700)) {
 32877                           
 32878                           ; BSR set to: 0
 32879  012500  0E07               	movlw	7
 32880  012502  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 32881  012504  B4D8               	btfsc	status,2,c
 32882  012506  D33B               	goto	i2l1512
 32883                           
 32884                           ; BSR set to: 0
 32885                           ;doprnt.c: 827: if(flag & 0x1000)
 32886  012508  A9AA               	btfss	(i2printf@flag+1)& (0+255),4,b
 32887  01250A  D004               	goto	i2l1513
 32888                           
 32889                           ; BSR set to: 0
 32890                           ;doprnt.c: 829: prec = 6;
 32891  01250C  0E00               	movlw	0
 32892  01250E  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 32893  012510  0E06               	movlw	6
 32894  012512  6FAD               	movwf	i2printf@prec& (0+255),b
 32895  012514                     i2l1513:
 32896                           
 32897                           ; BSR set to: 0
 32898                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 32899                           
 32900                           ; BSR set to: 0
 32901  012514  C099  FFD9         	movff	i2printf@ap,fsr2l
 32902  012518  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 32903  01251C  CFDE F0A5          	movff	postinc2,i2printf@fval
 32904  012520  CFDE F0A6          	movff	postinc2,i2printf@fval+1
 32905  012524  CFDE F0A7          	movff	postinc2,i2printf@fval+2
 32906  012528  CFDE F0A8          	movff	postinc2,i2printf@fval+3
 32907                           
 32908                           ; BSR set to: 0
 32909  01252C  0E04               	movlw	4
 32910  01252E  2799               	addwf	i2printf@ap& (0+255),f,b
 32911  012530  0E00               	movlw	0
 32912  012532  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 32913                           
 32914                           ; BSR set to: 0
 32915                           ;doprnt.c: 831: if(fval < 0.0) {
 32916  012534  AFA8               	btfss	(i2printf@fval+3)& (0+255),7,b
 32917  012536  D015               	goto	i2l1514
 32918                           
 32919                           ; BSR set to: 0
 32920                           ;doprnt.c: 832: fval = -fval;
 32921  012538  C0A5  F02C         	movff	i2printf@fval,i2___flneg@f1
 32922  01253C  C0A6  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 32923  012540  C0A7  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 32924  012544  C0A8  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 32925  012548  EC00  F0C8         	call	i2___flneg	;wreg free
 32926  01254C  C02C  F0A5         	movff	?i2___flneg,i2printf@fval
 32927  012550  C02D  F0A6         	movff	?i2___flneg+1,i2printf@fval+1
 32928  012554  C02E  F0A7         	movff	?i2___flneg+2,i2printf@fval+2
 32929  012558  C02F  F0A8         	movff	?i2___flneg+3,i2printf@fval+3
 32930                           
 32931                           ;doprnt.c: 833: flag |= 0x03;
 32932  01255C  0E03               	movlw	3
 32933  01255E  0100               	movlb	0	; () banked
 32934  012560  13A9               	iorwf	i2printf@flag& (0+255),f,b
 32935  012562                     i2l1514:
 32936                           
 32937                           ; BSR set to: 0
 32938                           ;doprnt.c: 834: }
 32939                           ;doprnt.c: 835: exp = 0;
 32940                           
 32941                           ; BSR set to: 0
 32942  012562  0E00               	movlw	0
 32943  012564  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 32944  012566  0E00               	movlw	0
 32945  012568  6F9F               	movwf	i2printf@exp& (0+255),b
 32946                           
 32947                           ; BSR set to: 0
 32948                           ;doprnt.c: 836: if( fval!=0) {
 32949  01256A  51A5               	movf	i2printf@fval& (0+255),w,b
 32950  01256C  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 32951  01256E  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 32952  012570  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 32953  012572  B4D8               	btfsc	status,2,c
 32954  012574  D082               	goto	i2l1519
 32955                           
 32956                           ; BSR set to: 0
 32957                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 32958  012576  35A7               	rlcf	(i2printf@fval+2)& (0+255),w,b
 32959  012578  35A8               	rlcf	(i2printf@fval+3)& (0+255),w,b
 32960  01257A  0F82               	addlw	130
 32961  01257C  6F9F               	movwf	i2printf@exp& (0+255),b
 32962  01257E  6BA0               	clrf	(i2printf@exp+1)& (0+255),b
 32963  012580  0EFF               	movlw	255
 32964  012582  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 32965                           
 32966                           ; BSR set to: 0
 32967                           ;doprnt.c: 838: exp--;
 32968  012584  079F               	decf	i2printf@exp& (0+255),f,b
 32969  012586  A0D8               	btfss	status,0,c
 32970  012588  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 32971                           
 32972                           ; BSR set to: 0
 32973                           ;doprnt.c: 839: exp *= 3;
 32974  01258A  C09F  F001         	movff	i2printf@exp,i2___wmul@multiplier
 32975  01258E  C0A0  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 32976  012592  0E00               	movlw	0
 32977  012594  6E04               	movwf	i2___wmul@multiplicand+1,c
 32978  012596  0E03               	movlw	3
 32979  012598  6E03               	movwf	i2___wmul@multiplicand,c
 32980  01259A  EC8E  F0C8         	call	i2___wmul	;wreg free
 32981  01259E  C001  F09F         	movff	?i2___wmul,i2printf@exp
 32982  0125A2  C002  F0A0         	movff	?i2___wmul+1,i2printf@exp+1
 32983                           
 32984                           ;doprnt.c: 840: exp /= 10;
 32985  0125A6  C09F  F007         	movff	i2printf@exp,i2___awdiv@dividend
 32986  0125AA  C0A0  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 32987  0125AE  0E00               	movlw	0
 32988  0125B0  6E0A               	movwf	i2___awdiv@divisor+1,c
 32989  0125B2  0E0A               	movlw	10
 32990  0125B4  6E09               	movwf	i2___awdiv@divisor,c
 32991  0125B6  EC8F  F0C1         	call	i2___awdiv	;wreg free
 32992  0125BA  C007  F09F         	movff	?i2___awdiv,i2printf@exp
 32993  0125BE  C008  F0A0         	movff	?i2___awdiv+1,i2printf@exp+1
 32994                           
 32995                           ;doprnt.c: 841: if(exp < 0)
 32996  0125C2  0100               	movlb	0	; () banked
 32997  0125C4  AFA0               	btfss	(i2printf@exp+1)& (0+255),7,b
 32998  0125C6  D003               	goto	i2l1516
 32999                           
 33000                           ; BSR set to: 0
 33001                           ;doprnt.c: 842: exp--;
 33002  0125C8  079F               	decf	i2printf@exp& (0+255),f,b
 33003  0125CA  A0D8               	btfss	status,0,c
 33004  0125CC  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 33005  0125CE                     i2l1516:
 33006                           
 33007                           ; BSR set to: 0
 33008                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 33009                           
 33010                           ; BSR set to: 0
 33011  0125CE  519F               	movf	i2printf@exp& (0+255),w,b
 33012  0125D0  0800               	sublw	0
 33013  0125D2  ECDC  F09E         	call	i2_scale
 33014  0125D6  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 33015  0125DA  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 33016  0125DE  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 33017  0125E2  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 33018                           
 33019                           ;doprnt.c: 847: tmpval.integ *= fval;
 33020  0125E6  C09B  F030         	movff	i2printf@tmpval,i2___flmul@b
 33021  0125EA  C09C  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 33022  0125EE  C09D  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 33023  0125F2  C09E  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 33024  0125F6  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 33025  0125FA  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 33026  0125FE  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 33027  012602  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 33028  012606  EC79  F0A4         	call	i2___flmul	;wreg free
 33029  01260A  C030  F09B         	movff	?i2___flmul,i2printf@tmpval
 33030  01260E  C031  F09C         	movff	?i2___flmul+1,i2printf@tmpval+1
 33031  012612  C032  F09D         	movff	?i2___flmul+2,i2printf@tmpval+2
 33032  012616  C033  F09E         	movff	?i2___flmul+3,i2printf@tmpval+3
 33033                           
 33034                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 33035  01261A  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 33036  01261E  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 33037  012622  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 33038  012626  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 33039  01262A  0E00               	movlw	0
 33040  01262C  6E38               	movwf	i2___flge@ff2,c
 33041  01262E  0E00               	movlw	0
 33042  012630  6E39               	movwf	i2___flge@ff2+1,c
 33043  012632  0E80               	movlw	128
 33044  012634  6E3A               	movwf	i2___flge@ff2+2,c
 33045  012636  0E3F               	movlw	63
 33046  012638  6E3B               	movwf	i2___flge@ff2+3,c
 33047  01263A  EC75  F0BB         	call	i2___flge	;wreg free
 33048  01263E  B0D8               	btfsc	status,0,c
 33049  012640  D005               	goto	i2l1517
 33050                           
 33051                           ;doprnt.c: 849: exp--;
 33052  012642  0100               	movlb	0	; () banked
 33053  012644  079F               	decf	i2printf@exp& (0+255),f,b
 33054  012646  A0D8               	btfss	status,0,c
 33055  012648  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 33056  01264A  D017               	goto	i2l1519
 33057  01264C                     i2l1517:
 33058                           
 33059                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 33060                           
 33061                           ; BSR set to: 0
 33062  01264C  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 33063  012650  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 33064  012654  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 33065  012658  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 33066  01265C  0E00               	movlw	0
 33067  01265E  6E38               	movwf	i2___flge@ff2,c
 33068  012660  0E00               	movlw	0
 33069  012662  6E39               	movwf	i2___flge@ff2+1,c
 33070  012664  0E20               	movlw	32
 33071  012666  6E3A               	movwf	i2___flge@ff2+2,c
 33072  012668  0E41               	movlw	65
 33073  01266A  6E3B               	movwf	i2___flge@ff2+3,c
 33074  01266C  EC75  F0BB         	call	i2___flge	;wreg free
 33075  012670  A0D8               	btfss	status,0,c
 33076  012672  D003               	goto	i2l1519
 33077                           
 33078                           ;doprnt.c: 851: exp++;
 33079  012674  0100               	movlb	0	; () banked
 33080  012676  4B9F               	infsnz	i2printf@exp& (0+255),f,b
 33081  012678  2BA0               	incf	(i2printf@exp+1)& (0+255),f,b
 33082  01267A                     i2l1519:
 33083                           
 33084                           ;doprnt.c: 852: }
 33085                           ;doprnt.c: 1112: if(prec <= 12)
 33086                           
 33087                           ; BSR set to: 0
 33088                           
 33089                           ; BSR set to: 0
 33090                           
 33091                           ; BSR set to: 0
 33092  01267A  0100               	movlb	0	; () banked
 33093  01267C  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 33094  01267E  D006               	goto	i2u1871_40
 33095  012680  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 33096  012682  E121               	bnz	i2l14996
 33097  012684  0E0D               	movlw	13
 33098  012686  5DAD               	subwf	i2printf@prec& (0+255),w,b
 33099  012688  B0D8               	btfsc	status,0,c
 33100  01268A  D01D               	goto	i2l1520
 33101  01268C                     i2u1871_40:
 33102                           
 33103                           ; BSR set to: 0
 33104                           ;doprnt.c: 1113: fval += fround(prec);
 33105  01268C  C0A5  F056         	movff	i2printf@fval,i2___fladd@b
 33106  012690  C0A6  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 33107  012694  C0A7  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 33108  012698  C0A8  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 33109  01269C  51AD               	movf	i2printf@prec& (0+255),w,b
 33110  01269E  ECDA  F0B1         	call	i2_fround
 33111  0126A2  C049  F05A         	movff	?i2_fround,i2___fladd@a
 33112  0126A6  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 33113  0126AA  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 33114  0126AE  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 33115  0126B2  ECC0  F0A7         	call	i2___fladd	;wreg free
 33116  0126B6  C056  F0A5         	movff	?i2___fladd,i2printf@fval
 33117  0126BA  C057  F0A6         	movff	?i2___fladd+1,i2printf@fval+1
 33118  0126BE  C058  F0A7         	movff	?i2___fladd+2,i2printf@fval+2
 33119  0126C2  C059  F0A8         	movff	?i2___fladd+3,i2printf@fval+3
 33120  0126C6                     i2l1520:
 33121  0126C6                     i2l14996:
 33122                           
 33123                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 33124  0126C6  0100               	movlb	0	; () banked
 33125  0126C8  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 33126  0126CA  D006               	goto	i2u1872_40
 33127  0126CC  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 33128  0126CE  E122               	bnz	i2l15004
 33129  0126D0  0E0A               	movlw	10
 33130  0126D2  5D9F               	subwf	i2printf@exp& (0+255),w,b
 33131  0126D4  B0D8               	btfsc	status,0,c
 33132  0126D6  D01E               	goto	i2u1875_40
 33133  0126D8                     i2u1872_40:
 33134                           
 33135                           ; BSR set to: 0
 33136  0126D8  51A5               	movf	i2printf@fval& (0+255),w,b
 33137  0126DA  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 33138  0126DC  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 33139  0126DE  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 33140  0126E0  B4D8               	btfsc	status,2,c
 33141  0126E2  D063               	goto	i2l1521
 33142                           
 33143                           ; BSR set to: 0
 33144  0126E4  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 33145  0126E8  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 33146  0126EC  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 33147  0126F0  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 33148  0126F4  EC02  F0BE         	call	i2___fltol	;wreg free
 33149  0126F8  0100               	movlb	0	; () banked
 33150  0126FA  516C               	movf	?i2___fltol& (0+255),w,b
 33151  0126FC  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 33152  0126FE  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 33153  012700  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 33154  012702  B4D8               	btfsc	status,2,c
 33155                           
 33156                           ; BSR set to: 0
 33157  012704  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 33158  012706  D051               	goto	i2l1521
 33159  012708  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 33160  01270A  E104               	bnz	i2l15004
 33161  01270C  0E02               	movlw	2
 33162  01270E  5D9F               	subwf	i2printf@exp& (0+255),w,b
 33163  012710  A0D8               	btfss	status,0,c
 33164  012712  D04B               	goto	i2l1521
 33165  012714                     i2u1875_40:
 33166  012714                     i2l15004:
 33167                           
 33168                           ; BSR set to: 0
 33169                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 33170  012714  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 33171  012718  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 33172  01271C  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 33173  012720  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 33174  012724  0E5F               	movlw	95
 33175  012726  6E38               	movwf	i2___flge@ff2,c
 33176  012728  0E70               	movlw	112
 33177  01272A  6E39               	movwf	i2___flge@ff2+1,c
 33178  01272C  0E89               	movlw	137
 33179  01272E  6E3A               	movwf	i2___flge@ff2+2,c
 33180  012730  0E40               	movlw	64
 33181  012732  6E3B               	movwf	i2___flge@ff2+3,c
 33182  012734  EC75  F0BB         	call	i2___flge	;wreg free
 33183  012738  B0D8               	btfsc	status,0,c
 33184  01273A  D003               	goto	i2l1524
 33185                           
 33186                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 33187  01273C  0100               	movlb	0	; () banked
 33188  01273E  0EF7               	movlw	247
 33189  012740  D002               	goto	L16
 33190  012742                     i2l1524:
 33191                           
 33192                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 33193                           
 33194                           ; BSR set to: 0
 33195  012742  0100               	movlb	0	; () banked
 33196  012744  0EF8               	movlw	248
 33197  012746                     L16:
 33198  012746  279F               	addwf	i2printf@exp& (0+255),f,b
 33199  012748  0EFF               	movlw	255
 33200  01274A  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 33201                           
 33202                           ; BSR set to: 0
 33203                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 33204                           
 33205                           ; BSR set to: 0
 33206  01274C  519F               	movf	i2printf@exp& (0+255),w,b
 33207  01274E  ECDC  F09E         	call	i2_scale
 33208  012752  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 33209  012756  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 33210  01275A  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 33211  01275E  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 33212  012762  C0A5  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 33213  012766  C0A6  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 33214  01276A  C0A7  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 33215  01276E  C0A8  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 33216  012772  C09B  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 33217  012776  C09C  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 33218  01277A  C09D  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 33219  01277E  C09E  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 33220  012782  ECBE  F0B9         	call	i2__div_to_l_	;wreg free
 33221  012786  C001  F0A1         	movff	?i2__div_to_l_,i2printf@val
 33222  01278A  C002  F0A2         	movff	?i2__div_to_l_+1,i2printf@val+1
 33223  01278E  C003  F0A3         	movff	?i2__div_to_l_+2,i2printf@val+2
 33224  012792  C004  F0A4         	movff	?i2__div_to_l_+3,i2printf@val+3
 33225                           
 33226                           ;doprnt.c: 1129: fval = 0.0;
 33227  012796  0E00               	movlw	0
 33228  012798  0100               	movlb	0	; () banked
 33229  01279A  6FA5               	movwf	i2printf@fval& (0+255),b
 33230  01279C  0E00               	movlw	0
 33231  01279E  6FA6               	movwf	(i2printf@fval+1)& (0+255),b
 33232  0127A0  0E00               	movlw	0
 33233  0127A2  6FA7               	movwf	(i2printf@fval+2)& (0+255),b
 33234  0127A4  0E00               	movlw	0
 33235  0127A6  6FA8               	movwf	(i2printf@fval+3)& (0+255),b
 33236                           
 33237                           ;doprnt.c: 1130: } else {
 33238  0127A8  D03C               	goto	i2l1530
 33239  0127AA                     i2l1521:
 33240                           
 33241                           ; BSR set to: 0
 33242                           ;doprnt.c: 1131: val = (unsigned long)fval;
 33243                           
 33244                           ; BSR set to: 0
 33245  0127AA  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 33246  0127AE  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 33247  0127B2  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 33248  0127B6  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 33249  0127BA  EC02  F0BE         	call	i2___fltol	;wreg free
 33250  0127BE  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 33251  0127C2  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 33252  0127C6  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 33253  0127CA  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 33254                           
 33255                           ;doprnt.c: 1132: fval -= (double)val;
 33256  0127CE  C0A5  F080         	movff	i2printf@fval,i2___flsub@b
 33257  0127D2  C0A6  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 33258  0127D6  C0A7  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 33259  0127DA  C0A8  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 33260  0127DE  C0A1  F005         	movff	i2printf@val,i2___xxtofl@val
 33261  0127E2  C0A2  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 33262  0127E6  C0A3  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 33263  0127EA  C0A4  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 33264  0127EE  0E00               	movlw	0
 33265  0127F0  EC4E  F0B7         	call	i2___xxtofl
 33266  0127F4  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 33267  0127F8  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 33268  0127FC  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 33269  012800  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 33270  012804  EC38  F0C6         	call	i2___flsub	;wreg free
 33271  012808  C080  F0A5         	movff	?i2___flsub,i2printf@fval
 33272  01280C  C081  F0A6         	movff	?i2___flsub+1,i2printf@fval+1
 33273  012810  C082  F0A7         	movff	?i2___flsub+2,i2printf@fval+2
 33274  012814  C083  F0A8         	movff	?i2___flsub+3,i2printf@fval+3
 33275                           
 33276                           ;doprnt.c: 1133: exp = 0;
 33277  012818  0E00               	movlw	0
 33278  01281A  0100               	movlb	0	; () banked
 33279  01281C  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 33280  01281E  0E00               	movlw	0
 33281  012820  6F9F               	movwf	i2printf@exp& (0+255),b
 33282  012822                     i2l1530:
 33283                           
 33284                           ; BSR set to: 0
 33285                           ;doprnt.c: 1134: }
 33286                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 33287                           
 33288                           ; BSR set to: 0
 33289  012822  0E01               	movlw	1
 33290  012824  6FAF               	movwf	i2printf@c& (0+255),b
 33291  012826                     i2l15024:
 33292                           
 33293                           ; BSR set to: 0
 33294  012826  0E0A               	movlw	10
 33295  012828  19AF               	xorwf	i2printf@c& (0+255),w,b
 33296  01282A  B4D8               	btfsc	status,2,c
 33297  01282C  D01B               	goto	i2u1879_40
 33298                           
 33299                           ; BSR set to: 0
 33300                           ;doprnt.c: 1137: if(val < dpowers[c])
 33301                           
 33302                           ; BSR set to: 0
 33303                           
 33304                           ; BSR set to: 0
 33305  01282E  51AF               	movf	i2printf@c& (0+255),w,b
 33306  012830  0D04               	mullw	4
 33307  012832  0EAB               	movlw	low _dpowers
 33308  012834  24F3               	addwf	prodl,w,c
 33309  012836  6EF6               	movwf	tblptrl,c
 33310  012838  0ED8               	movlw	high _dpowers
 33311  01283A  20F4               	addwfc	prodh,w,c
 33312  01283C  6EF7               	movwf	tblptrh,c
 33313  01283E                     	if	1	;There are 3 active tblptr bytes
 33314  01283E  6AF8               	clrf	tblptru,c
 33315  012840  0E00               	movlw	low (__mediumconst shr (0+16))
 33316  012842  22F8               	addwfc	tblptru,f,c
 33317  012844                     	endif
 33318  012844  0009               	tblrd		*+
 33319  012846  50F5               	movf	tablat,w,c
 33320  012848  5DA1               	subwf	i2printf@val& (0+255),w,b
 33321  01284A  0009               	tblrd		*+
 33322  01284C  50F5               	movf	tablat,w,c
 33323  01284E  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 33324  012850  0009               	tblrd		*+
 33325  012852  50F5               	movf	tablat,w,c
 33326  012854  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 33327  012856  0009               	tblrd		*+
 33328  012858  50F5               	movf	tablat,w,c
 33329  01285A  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 33330  01285C  A0D8               	btfss	status,0,c
 33331  01285E  D002               	goto	i2u1879_40
 33332                           
 33333                           ; BSR set to: 0
 33334                           
 33335                           ; BSR set to: 0
 33336                           
 33337                           ; BSR set to: 0
 33338                           ;doprnt.c: 1138: break;
 33339  012860  2BAF               	incf	i2printf@c& (0+255),f,b
 33340  012862  D7E1               	goto	i2l15024
 33341  012864                     i2u1879_40:
 33342                           
 33343                           ; BSR set to: 0
 33344                           ;doprnt.c: 1142: width -= prec + c + exp;
 33345                           
 33346                           ; BSR set to: 0
 33347  012864  C0AF  F08A         	movff	i2printf@c,??i2_printf
 33348  012868  6B8B               	clrf	(??i2_printf+1)& (0+255),b
 33349  01286A  BF8A               	btfsc	??i2_printf& (0+255),7,b
 33350  01286C  078B               	decf	(??i2_printf+1)& (0+255),f,b
 33351  01286E  51AD               	movf	i2printf@prec& (0+255),w,b
 33352  012870  278A               	addwf	??i2_printf& (0+255),f,b
 33353  012872  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 33354  012874  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 33355  012876  519F               	movf	i2printf@exp& (0+255),w,b
 33356  012878  278A               	addwf	??i2_printf& (0+255),f,b
 33357  01287A  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 33358  01287C  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 33359  01287E  518A               	movf	??i2_printf& (0+255),w,b
 33360  012880  5FAB               	subwf	i2printf@width& (0+255),f,b
 33361  012882  518B               	movf	(??i2_printf+1)& (0+255),w,b
 33362  012884  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 33363                           
 33364                           ;doprnt.c: 1143: if(
 33365                           ;doprnt.c: 1147: prec)
 33366  012886  51AD               	movf	i2printf@prec& (0+255),w,b
 33367  012888  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 33368  01288A  B4D8               	btfsc	status,2,c
 33369  01288C  D003               	goto	i2l1534
 33370                           
 33371                           ; BSR set to: 0
 33372                           ;doprnt.c: 1148: width--;
 33373  01288E  07AB               	decf	i2printf@width& (0+255),f,b
 33374  012890  A0D8               	btfss	status,0,c
 33375  012892  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 33376  012894                     i2l1534:
 33377                           
 33378                           ; BSR set to: 0
 33379                           ;doprnt.c: 1149: if(flag & 0x03)
 33380                           
 33381                           ; BSR set to: 0
 33382  012894  0E03               	movlw	3
 33383  012896  15A9               	andwf	i2printf@flag& (0+255),w,b
 33384  012898  6F8A               	movwf	??i2_printf& (0+255),b
 33385  01289A  0E00               	movlw	0
 33386  01289C  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 33387  01289E  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 33388  0128A0  518A               	movf	??i2_printf& (0+255),w,b
 33389  0128A2  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 33390  0128A4  B4D8               	btfsc	status,2,c
 33391  0128A6  D003               	goto	i2l1535
 33392                           
 33393                           ; BSR set to: 0
 33394                           ;doprnt.c: 1150: width--;
 33395  0128A8  07AB               	decf	i2printf@width& (0+255),f,b
 33396  0128AA  A0D8               	btfss	status,0,c
 33397  0128AC  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 33398  0128AE                     i2l1535:
 33399                           
 33400                           ; BSR set to: 0
 33401                           ;doprnt.c: 1153: if(flag & 0x04) {
 33402                           
 33403                           ; BSR set to: 0
 33404  0128AE  A5A9               	btfss	i2printf@flag& (0+255),2,b
 33405  0128B0  D025               	goto	i2l1542
 33406                           
 33407                           ; BSR set to: 0
 33408                           ;doprnt.c: 1157: if(flag & 0x03)
 33409  0128B2  0E03               	movlw	3
 33410  0128B4  15A9               	andwf	i2printf@flag& (0+255),w,b
 33411  0128B6  6F8A               	movwf	??i2_printf& (0+255),b
 33412  0128B8  0E00               	movlw	0
 33413  0128BA  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 33414  0128BC  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 33415  0128BE  518A               	movf	??i2_printf& (0+255),w,b
 33416  0128C0  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 33417  0128C2  B4D8               	btfsc	status,2,c
 33418  0128C4  D00B               	goto	i2l1538
 33419                           
 33420                           ; BSR set to: 0
 33421                           ;doprnt.c: 1159: (putch('-') );
 33422  0128C6  0E2D               	movlw	45
 33423  0128C8  ECB5  F0C9         	call	i2_putch
 33424                           
 33425                           ;doprnt.c: 1168: while(width > 0) {
 33426  0128CC  D007               	goto	i2l1538
 33427  0128CE                     i2l15050:
 33428                           
 33429                           ;doprnt.c: 1169: (putch('0') );
 33430  0128CE  0E30               	movlw	48
 33431  0128D0  ECB5  F0C9         	call	i2_putch
 33432                           
 33433                           ;doprnt.c: 1170: width--;
 33434  0128D4  0100               	movlb	0	; () banked
 33435  0128D6  07AB               	decf	i2printf@width& (0+255),f,b
 33436  0128D8  A0D8               	btfss	status,0,c
 33437  0128DA  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 33438  0128DC                     i2l1538:
 33439                           
 33440                           ; BSR set to: 0
 33441  0128DC  0100               	movlb	0	; () banked
 33442  0128DE  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 33443  0128E0  D06B               	goto	i2l1546
 33444  0128E2  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 33445  0128E4  E1F4               	bnz	i2l15050
 33446  0128E6  05AB               	decf	i2printf@width& (0+255),w,b
 33447  0128E8  A0D8               	btfss	status,0,c
 33448  0128EA  D066               	goto	i2l1546
 33449  0128EC  D7F0               	goto	i2l1539
 33450  0128EE                     i2l15056:
 33451                           
 33452                           ; BSR set to: 0
 33453                           ;doprnt.c: 1181: (putch(' ') );
 33454  0128EE  0E20               	movlw	32
 33455  0128F0  ECB5  F0C9         	call	i2_putch
 33456                           
 33457                           ;doprnt.c: 1182: width--;
 33458  0128F4  0100               	movlb	0	; () banked
 33459  0128F6  07AB               	decf	i2printf@width& (0+255),f,b
 33460  0128F8  A0D8               	btfss	status,0,c
 33461  0128FA  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 33462  0128FC                     i2l1542:
 33463                           
 33464                           ; BSR set to: 0
 33465                           
 33466                           ; BSR set to: 0
 33467  0128FC  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 33468  0128FE  D005               	goto	i2u1885_40
 33469  012900  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 33470  012902  E1F5               	bnz	i2l15056
 33471  012904  05AB               	decf	i2printf@width& (0+255),w,b
 33472  012906  B0D8               	btfsc	status,0,c
 33473  012908  D7F2               	goto	i2l1543
 33474  01290A                     i2u1885_40:
 33475                           
 33476                           ; BSR set to: 0
 33477                           ;doprnt.c: 1183: }
 33478                           ;doprnt.c: 1188: if(flag & 0x03)
 33479                           
 33480                           ; BSR set to: 0
 33481  01290A  0E03               	movlw	3
 33482  01290C  15A9               	andwf	i2printf@flag& (0+255),w,b
 33483  01290E  6F8A               	movwf	??i2_printf& (0+255),b
 33484  012910  0E00               	movlw	0
 33485  012912  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 33486  012914  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 33487  012916  518A               	movf	??i2_printf& (0+255),w,b
 33488  012918  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 33489  01291A  B4D8               	btfsc	status,2,c
 33490  01291C  D04D               	goto	i2l1546
 33491                           
 33492                           ; BSR set to: 0
 33493                           ;doprnt.c: 1190: (putch('-') );
 33494  01291E  0E2D               	movlw	45
 33495  012920  ECB5  F0C9         	call	i2_putch
 33496                           
 33497                           ;doprnt.c: 1195: }
 33498                           ;doprnt.c: 1196: while(c--) {
 33499  012924  D049               	goto	i2l1546
 33500  012926                     
 33501                           ;doprnt.c: 1200: {
 33502                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 33503  012926  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 33504  01292A  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 33505  01292E  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 33506  012932  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 33507  012936  0100               	movlb	0	; () banked
 33508  012938  51AF               	movf	i2printf@c& (0+255),w,b
 33509  01293A  0D04               	mullw	4
 33510  01293C  0EAB               	movlw	low _dpowers
 33511  01293E  24F3               	addwf	prodl,w,c
 33512  012940  6EF6               	movwf	tblptrl,c
 33513  012942  0ED8               	movlw	high _dpowers
 33514  012944  20F4               	addwfc	prodh,w,c
 33515  012946  6EF7               	movwf	tblptrh,c
 33516  012948                     	if	1	;There are 3 active tblptr bytes
 33517  012948  6AF8               	clrf	tblptru,c
 33518  01294A  0E00               	movlw	low (__mediumconst shr (0+16))
 33519  01294C  22F8               	addwfc	tblptru,f,c
 33520  01294E                     	endif
 33521  01294E  0009               	tblrd		*+
 33522  012950  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 33523  012954  0009               	tblrd		*+
 33524  012956  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 33525  01295A  0009               	tblrd		*+
 33526  01295C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 33527  012960  000A               	tblrd		*-
 33528  012962  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 33529  012966  ECD1  F0C1         	call	i2___lldiv	;wreg free
 33530  01296A  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 33531  01296E  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 33532  012972  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 33533  012976  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 33534                           
 33535                           ;doprnt.c: 1202: tmpval.vd %= 10;
 33536  01297A  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 33537  01297E  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 33538  012982  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 33539  012986  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 33540  01298A  0E0A               	movlw	10
 33541  01298C  6E12               	movwf	i2___llmod@divisor,c
 33542  01298E  0E00               	movlw	0
 33543  012990  6E13               	movwf	i2___llmod@divisor+1,c
 33544  012992  0E00               	movlw	0
 33545  012994  6E14               	movwf	i2___llmod@divisor+2,c
 33546  012996  0E00               	movlw	0
 33547  012998  6E15               	movwf	i2___llmod@divisor+3,c
 33548  01299A  ECD2  F0C3         	call	i2___llmod	;wreg free
 33549  01299E  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 33550  0129A2  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 33551  0129A6  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 33552  0129AA  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 33553                           
 33554                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 33555  0129AE  0100               	movlb	0	; () banked
 33556  0129B0  519B               	movf	i2printf@tmpval& (0+255),w,b
 33557  0129B2  0F30               	addlw	48
 33558  0129B4  ECB5  F0C9         	call	i2_putch
 33559  0129B8                     i2l1546:
 33560  0129B8  0100               	movlb	0	; () banked
 33561  0129BA  07AF               	decf	i2printf@c& (0+255),f,b
 33562  0129BC  29AF               	incf	i2printf@c& (0+255),w,b
 33563  0129BE  B4D8               	btfsc	status,2,c
 33564  0129C0  D008               	goto	i2l1549
 33565  0129C2  D7B1               	goto	i2l1547
 33566  0129C4                     i2l15074:
 33567                           
 33568                           ; BSR set to: 0
 33569                           ;doprnt.c: 1208: (putch('0') );
 33570  0129C4  0E30               	movlw	48
 33571  0129C6  ECB5  F0C9         	call	i2_putch
 33572                           
 33573                           ;doprnt.c: 1209: exp--;
 33574  0129CA  0100               	movlb	0	; () banked
 33575  0129CC  079F               	decf	i2printf@exp& (0+255),f,b
 33576  0129CE  A0D8               	btfss	status,0,c
 33577  0129D0  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 33578  0129D2                     i2l1549:
 33579                           
 33580                           ; BSR set to: 0
 33581                           
 33582                           ; BSR set to: 0
 33583  0129D2  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 33584  0129D4  D005               	goto	i2u1888_40
 33585  0129D6  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 33586  0129D8  E1F5               	bnz	i2l15074
 33587  0129DA  059F               	decf	i2printf@exp& (0+255),w,b
 33588  0129DC  B0D8               	btfsc	status,0,c
 33589  0129DE  D7F2               	goto	i2l1550
 33590  0129E0                     i2u1888_40:
 33591                           
 33592                           ; BSR set to: 0
 33593                           ;doprnt.c: 1210: }
 33594                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 33595                           
 33596                           ; BSR set to: 0
 33597  0129E0  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 33598  0129E2  D009               	goto	i2l1552
 33599  0129E4  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 33600  0129E6  E104               	bnz	i2u1889_40
 33601  0129E8  0E09               	movlw	9
 33602  0129EA  5DAD               	subwf	i2printf@prec& (0+255),w,b
 33603  0129EC  A0D8               	btfss	status,0,c
 33604  0129EE  D003               	goto	i2l1552
 33605  0129F0                     i2u1889_40:
 33606                           
 33607                           ; BSR set to: 0
 33608                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 33609  0129F0  0E08               	movlw	8
 33610  0129F2  6FAF               	movwf	i2printf@c& (0+255),b
 33611  0129F4  D002               	goto	i2l1553
 33612  0129F6                     i2l1552:
 33613                           
 33614                           ; BSR set to: 0
 33615                           ;doprnt.c: 1213: else
 33616                           ;doprnt.c: 1214: c = prec;
 33617  0129F6  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 33618  0129FA                     i2l1553:
 33619                           
 33620                           ; BSR set to: 0
 33621                           ;doprnt.c: 1215: prec -= c;
 33622                           
 33623                           ; BSR set to: 0
 33624  0129FA  51AF               	movf	i2printf@c& (0+255),w,b
 33625  0129FC  5FAD               	subwf	i2printf@prec& (0+255),f,b
 33626  0129FE  0E00               	movlw	0
 33627  012A00  BFAF               	btfsc	i2printf@c& (0+255),7,b
 33628  012A02  0EFF               	movlw	255
 33629  012A04  5BAE               	subwfb	(i2printf@prec+1)& (0+255),f,b
 33630                           
 33631                           ; BSR set to: 0
 33632                           ;doprnt.c: 1219: if(c)
 33633  012A06  51AF               	movf	i2printf@c& (0+255),w,b
 33634  012A08  B4D8               	btfsc	status,2,c
 33635  012A0A  D003               	goto	i2l1554
 33636                           
 33637                           ; BSR set to: 0
 33638                           ;doprnt.c: 1221: (putch('.') );
 33639  012A0C  0E2E               	movlw	46
 33640  012A0E  ECB5  F0C9         	call	i2_putch
 33641  012A12                     i2l1554:
 33642                           
 33643                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 33644  012A12  0100               	movlb	0	; () banked
 33645  012A14  51AF               	movf	i2printf@c& (0+255),w,b
 33646  012A16  ECDC  F09E         	call	i2_scale
 33647  012A1A  C049  F090         	movff	?i2_scale,i2_printf$4194
 33648  012A1E  C04A  F091         	movff	?i2_scale+1,i2_printf$4194+1
 33649  012A22  C04B  F092         	movff	?i2_scale+2,i2_printf$4194+2
 33650  012A26  C04C  F093         	movff	?i2_scale+3,i2_printf$4194+3
 33651                           
 33652                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 33653  012A2A  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 33654  012A2E  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 33655  012A32  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 33656  012A36  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 33657  012A3A  C090  F030         	movff	i2_printf$4194,i2___flmul@b
 33658  012A3E  C091  F031         	movff	i2_printf$4194+1,i2___flmul@b+1
 33659  012A42  C092  F032         	movff	i2_printf$4194+2,i2___flmul@b+2
 33660  012A46  C093  F033         	movff	i2_printf$4194+3,i2___flmul@b+3
 33661  012A4A  EC79  F0A4         	call	i2___flmul	;wreg free
 33662  012A4E  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 33663  012A52  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 33664  012A56  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 33665  012A5A  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 33666  012A5E  EC02  F0BE         	call	i2___fltol	;wreg free
 33667  012A62  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 33668  012A66  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 33669  012A6A  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 33670  012A6E  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 33671                           
 33672                           ;doprnt.c: 1228: while(c--) {
 33673  012A72  D073               	goto	i2l1555
 33674  012A74                     
 33675                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 33676  012A74  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 33677  012A78  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 33678  012A7C  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 33679  012A80  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 33680  012A84  0100               	movlb	0	; () banked
 33681  012A86  51AF               	movf	i2printf@c& (0+255),w,b
 33682  012A88  0D04               	mullw	4
 33683  012A8A  0EAB               	movlw	low _dpowers
 33684  012A8C  24F3               	addwf	prodl,w,c
 33685  012A8E  6EF6               	movwf	tblptrl,c
 33686  012A90  0ED8               	movlw	high _dpowers
 33687  012A92  20F4               	addwfc	prodh,w,c
 33688  012A94  6EF7               	movwf	tblptrh,c
 33689  012A96                     	if	1	;There are 3 active tblptr bytes
 33690  012A96  6AF8               	clrf	tblptru,c
 33691  012A98  0E00               	movlw	low (__mediumconst shr (0+16))
 33692  012A9A  22F8               	addwfc	tblptru,f,c
 33693  012A9C                     	endif
 33694  012A9C  0009               	tblrd		*+
 33695  012A9E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 33696  012AA2  0009               	tblrd		*+
 33697  012AA4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 33698  012AA8  0009               	tblrd		*+
 33699  012AAA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 33700  012AAE  000A               	tblrd		*-
 33701  012AB0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 33702  012AB4  ECD1  F0C1         	call	i2___lldiv	;wreg free
 33703  012AB8  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 33704  012ABC  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 33705  012AC0  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 33706  012AC4  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 33707                           
 33708                           ;doprnt.c: 1230: tmpval.vd %= 10;
 33709  012AC8  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 33710  012ACC  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 33711  012AD0  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 33712  012AD4  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 33713  012AD8  0E0A               	movlw	10
 33714  012ADA  6E12               	movwf	i2___llmod@divisor,c
 33715  012ADC  0E00               	movlw	0
 33716  012ADE  6E13               	movwf	i2___llmod@divisor+1,c
 33717  012AE0  0E00               	movlw	0
 33718  012AE2  6E14               	movwf	i2___llmod@divisor+2,c
 33719  012AE4  0E00               	movlw	0
 33720  012AE6  6E15               	movwf	i2___llmod@divisor+3,c
 33721  012AE8  ECD2  F0C3         	call	i2___llmod	;wreg free
 33722  012AEC  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 33723  012AF0  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 33724  012AF4  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 33725  012AF8  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 33726                           
 33727                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 33728  012AFC  0100               	movlb	0	; () banked
 33729  012AFE  519B               	movf	i2printf@tmpval& (0+255),w,b
 33730  012B00  0F30               	addlw	48
 33731  012B02  ECB5  F0C9         	call	i2_putch
 33732                           
 33733                           ;doprnt.c: 1232: val %= dpowers[c];
 33734  012B06  C0A1  F00E         	movff	i2printf@val,i2___llmod@dividend
 33735  012B0A  C0A2  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 33736  012B0E  C0A3  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 33737  012B12  C0A4  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 33738  012B16  0100               	movlb	0	; () banked
 33739  012B18  51AF               	movf	i2printf@c& (0+255),w,b
 33740  012B1A  0D04               	mullw	4
 33741  012B1C  0EAB               	movlw	low _dpowers
 33742  012B1E  24F3               	addwf	prodl,w,c
 33743  012B20  6EF6               	movwf	tblptrl,c
 33744  012B22  0ED8               	movlw	high _dpowers
 33745  012B24  20F4               	addwfc	prodh,w,c
 33746  012B26  6EF7               	movwf	tblptrh,c
 33747  012B28                     	if	1	;There are 3 active tblptr bytes
 33748  012B28  6AF8               	clrf	tblptru,c
 33749  012B2A  0E00               	movlw	low (__mediumconst shr (0+16))
 33750  012B2C  22F8               	addwfc	tblptru,f,c
 33751  012B2E                     	endif
 33752  012B2E  0009               	tblrd		*+
 33753  012B30  CFF5 F012          	movff	tablat,i2___llmod@divisor
 33754  012B34  0009               	tblrd		*+
 33755  012B36  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 33756  012B3A  0009               	tblrd		*+
 33757  012B3C  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 33758  012B40  000A               	tblrd		*-
 33759  012B42  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 33760  012B46  ECD2  F0C3         	call	i2___llmod	;wreg free
 33761  012B4A  C00E  F0A1         	movff	?i2___llmod,i2printf@val
 33762  012B4E  C00F  F0A2         	movff	?i2___llmod+1,i2printf@val+1
 33763  012B52  C010  F0A3         	movff	?i2___llmod+2,i2printf@val+2
 33764  012B56  C011  F0A4         	movff	?i2___llmod+3,i2printf@val+3
 33765  012B5A                     i2l1555:
 33766  012B5A  0100               	movlb	0	; () banked
 33767  012B5C  07AF               	decf	i2printf@c& (0+255),f,b
 33768  012B5E  29AF               	incf	i2printf@c& (0+255),w,b
 33769  012B60  B4D8               	btfsc	status,2,c
 33770  012B62  D008               	goto	i2l1558
 33771  012B64  D787               	goto	i2l1556
 33772  012B66                     
 33773                           ; BSR set to: 0
 33774                           ;doprnt.c: 1236: (putch('0') );
 33775                           
 33776                           ; BSR set to: 0
 33777  012B66  0E30               	movlw	48
 33778  012B68  ECB5  F0C9         	call	i2_putch
 33779                           
 33780                           ;doprnt.c: 1237: prec--;
 33781  012B6C  0100               	movlb	0	; () banked
 33782  012B6E  07AD               	decf	i2printf@prec& (0+255),f,b
 33783  012B70  A0D8               	btfss	status,0,c
 33784  012B72  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 33785  012B74                     i2l1558:
 33786                           
 33787                           ; BSR set to: 0
 33788                           
 33789                           ; BSR set to: 0
 33790  012B74  51AD               	movf	i2printf@prec& (0+255),w,b
 33791  012B76  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 33792  012B78  B4D8               	btfsc	status,2,c
 33793  012B7A  D1BD               	goto	i2u1917_40
 33794  012B7C  D7F4               	goto	i2l1559
 33795  012B7E                     i2l1512:
 33796                           
 33797                           ; BSR set to: 0
 33798                           ;doprnt.c: 1246: }
 33799                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 33800                           
 33801                           ; BSR set to: 0
 33802  012B7E  0EC0               	movlw	192
 33803  012B80  15A9               	andwf	i2printf@flag& (0+255),w,b
 33804  012B82  6F8A               	movwf	??i2_printf& (0+255),b
 33805  012B84  0E00               	movlw	0
 33806  012B86  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 33807  012B88  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 33808  012B8A  518A               	movf	??i2_printf& (0+255),w,b
 33809  012B8C  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 33810  012B8E  A4D8               	btfss	status,2,c
 33811  012B90  D01E               	goto	i2l1561
 33812                           
 33813                           ; BSR set to: 0
 33814                           ;doprnt.c: 1253: {
 33815                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 33816  012B92  C099  FFD9         	movff	i2printf@ap,fsr2l
 33817  012B96  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 33818  012B9A  CFDE F0A1          	movff	postinc2,i2printf@val
 33819  012B9E  CFDD F0A2          	movff	postdec2,i2printf@val+1
 33820  012BA2  0E00               	movlw	0
 33821  012BA4  BFA2               	btfsc	(i2printf@val+1)& (0+255),7,b
 33822  012BA6  0EFF               	movlw	-1
 33823  012BA8  6FA3               	movwf	(i2printf@val+2)& (0+255),b
 33824  012BAA  6FA4               	movwf	(i2printf@val+3)& (0+255),b
 33825                           
 33826                           ; BSR set to: 0
 33827  012BAC  0E02               	movlw	2
 33828  012BAE  2799               	addwf	i2printf@ap& (0+255),f,b
 33829  012BB0  0E00               	movlw	0
 33830  012BB2  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 33831                           
 33832                           ; BSR set to: 0
 33833                           ;doprnt.c: 1261: if((long)val < 0) {
 33834  012BB4  AFA4               	btfss	(i2printf@val+3)& (0+255),7,b
 33835  012BB6  D01D               	goto	i2l1563
 33836                           
 33837                           ; BSR set to: 0
 33838                           ;doprnt.c: 1262: flag |= 0x03;
 33839  012BB8  0E03               	movlw	3
 33840  012BBA  13A9               	iorwf	i2printf@flag& (0+255),f,b
 33841                           
 33842                           ; BSR set to: 0
 33843                           ;doprnt.c: 1263: val = -val;
 33844  012BBC  1FA4               	comf	(i2printf@val+3)& (0+255),f,b
 33845  012BBE  1FA3               	comf	(i2printf@val+2)& (0+255),f,b
 33846  012BC0  1FA2               	comf	(i2printf@val+1)& (0+255),f,b
 33847  012BC2  6DA1               	negf	i2printf@val& (0+255),b
 33848  012BC4  0E00               	movlw	0
 33849  012BC6  23A2               	addwfc	(i2printf@val+1)& (0+255),f,b
 33850  012BC8  23A3               	addwfc	(i2printf@val+2)& (0+255),f,b
 33851  012BCA  23A4               	addwfc	(i2printf@val+3)& (0+255),f,b
 33852                           
 33853                           ; BSR set to: 0
 33854                           ;doprnt.c: 1264: }
 33855                           ;doprnt.c: 1266: }
 33856  012BCC  D012               	goto	i2l1563
 33857  012BCE                     i2l1561:
 33858                           
 33859                           ; BSR set to: 0
 33860                           ;doprnt.c: 1268: else
 33861                           ;doprnt.c: 1273: {
 33862                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 33863                           
 33864                           ; BSR set to: 0
 33865  012BCE  C099  FFD9         	movff	i2printf@ap,fsr2l
 33866  012BD2  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 33867  012BD6  CFDE F08A          	movff	postinc2,??i2_printf
 33868  012BDA  CFDD F08B          	movff	postdec2,??i2_printf+1
 33869  012BDE  C08A  F0A1         	movff	??i2_printf,i2printf@val
 33870  012BE2  C08B  F0A2         	movff	??i2_printf+1,i2printf@val+1
 33871  012BE6  6BA3               	clrf	(i2printf@val+2)& (0+255),b
 33872  012BE8  6BA4               	clrf	(i2printf@val+3)& (0+255),b
 33873                           
 33874                           ; BSR set to: 0
 33875  012BEA  0E02               	movlw	2
 33876  012BEC  2799               	addwf	i2printf@ap& (0+255),f,b
 33877  012BEE  0E00               	movlw	0
 33878  012BF0  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 33879  012BF2                     i2l1563:
 33880                           
 33881                           ; BSR set to: 0
 33882                           ;doprnt.c: 1287: }
 33883                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 33884                           
 33885                           ; BSR set to: 0
 33886  012BF2  51AD               	movf	i2printf@prec& (0+255),w,b
 33887  012BF4  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 33888  012BF6  A4D8               	btfss	status,2,c
 33889  012BF8  D04B               	goto	i2l1565
 33890                           
 33891                           ; BSR set to: 0
 33892  012BFA  51A1               	movf	i2printf@val& (0+255),w,b
 33893  012BFC  11A2               	iorwf	(i2printf@val+1)& (0+255),w,b
 33894  012BFE  11A3               	iorwf	(i2printf@val+2)& (0+255),w,b
 33895  012C00  11A4               	iorwf	(i2printf@val+3)& (0+255),w,b
 33896  012C02  A4D8               	btfss	status,2,c
 33897  012C04  D045               	goto	i2l1565
 33898                           
 33899                           ; BSR set to: 0
 33900                           ;doprnt.c: 1291: prec++;
 33901  012C06  4BAD               	infsnz	i2printf@prec& (0+255),f,b
 33902  012C08  2BAE               	incf	(i2printf@prec+1)& (0+255),f,b
 33903                           
 33904                           ; BSR set to: 0
 33905                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 33906  012C0A  D042               	goto	i2l1565
 33907  012C0C                     
 33908                           ; BSR set to: 0
 33909                           ;doprnt.c: 1302: case 0xC0:
 33910                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 33911                           
 33912                           ; BSR set to: 0
 33913                           
 33914                           ; BSR set to: 0
 33915  012C0C  0E01               	movlw	1
 33916  012C0E  6FAF               	movwf	i2printf@c& (0+255),b
 33917  012C10                     i2l15134:
 33918                           
 33919                           ; BSR set to: 0
 33920  012C10  0E0A               	movlw	10
 33921  012C12  19AF               	xorwf	i2printf@c& (0+255),w,b
 33922  012C14  B4D8               	btfsc	status,2,c
 33923  012C16  D047               	goto	i2l1571
 33924                           
 33925                           ; BSR set to: 0
 33926                           ;doprnt.c: 1306: if(val < dpowers[c])
 33927                           
 33928                           ; BSR set to: 0
 33929                           
 33930                           ; BSR set to: 0
 33931  012C18  51AF               	movf	i2printf@c& (0+255),w,b
 33932  012C1A  0D04               	mullw	4
 33933  012C1C  0EAB               	movlw	low _dpowers
 33934  012C1E  24F3               	addwf	prodl,w,c
 33935  012C20  6EF6               	movwf	tblptrl,c
 33936  012C22  0ED8               	movlw	high _dpowers
 33937  012C24  20F4               	addwfc	prodh,w,c
 33938  012C26  6EF7               	movwf	tblptrh,c
 33939  012C28                     	if	1	;There are 3 active tblptr bytes
 33940  012C28  6AF8               	clrf	tblptru,c
 33941  012C2A  0E00               	movlw	low (__mediumconst shr (0+16))
 33942  012C2C  22F8               	addwfc	tblptru,f,c
 33943  012C2E                     	endif
 33944  012C2E  0009               	tblrd		*+
 33945  012C30  50F5               	movf	tablat,w,c
 33946  012C32  5DA1               	subwf	i2printf@val& (0+255),w,b
 33947  012C34  0009               	tblrd		*+
 33948  012C36  50F5               	movf	tablat,w,c
 33949  012C38  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 33950  012C3A  0009               	tblrd		*+
 33951  012C3C  50F5               	movf	tablat,w,c
 33952  012C3E  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 33953  012C40  0009               	tblrd		*+
 33954  012C42  50F5               	movf	tablat,w,c
 33955  012C44  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 33956  012C46  A0D8               	btfss	status,0,c
 33957  012C48  D02E               	goto	i2l1571
 33958                           
 33959                           ; BSR set to: 0
 33960                           
 33961                           ; BSR set to: 0
 33962                           
 33963                           ; BSR set to: 0
 33964                           ;doprnt.c: 1307: break;
 33965  012C4A  2BAF               	incf	i2printf@c& (0+255),f,b
 33966  012C4C  D7E1               	goto	i2l15134
 33967  012C4E                     
 33968                           ; BSR set to: 0
 33969                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 33970                           
 33971                           ; BSR set to: 0
 33972  012C4E  0E01               	movlw	1
 33973  012C50  6FAF               	movwf	i2printf@c& (0+255),b
 33974  012C52                     i2l15148:
 33975                           
 33976                           ; BSR set to: 0
 33977  012C52  0E08               	movlw	8
 33978  012C54  19AF               	xorwf	i2printf@c& (0+255),w,b
 33979  012C56  B4D8               	btfsc	status,2,c
 33980  012C58  D026               	goto	i2l1571
 33981                           
 33982                           ; BSR set to: 0
 33983                           ;doprnt.c: 1317: if(val < hexpowers[c])
 33984                           
 33985                           ; BSR set to: 0
 33986                           
 33987                           ; BSR set to: 0
 33988  012C5A  51AF               	movf	i2printf@c& (0+255),w,b
 33989  012C5C  0D04               	mullw	4
 33990  012C5E  0ED3               	movlw	low _hexpowers
 33991  012C60  24F3               	addwf	prodl,w,c
 33992  012C62  6EF6               	movwf	tblptrl,c
 33993  012C64  0ED8               	movlw	high _hexpowers
 33994  012C66  20F4               	addwfc	prodh,w,c
 33995  012C68  6EF7               	movwf	tblptrh,c
 33996  012C6A                     	if	1	;There are 3 active tblptr bytes
 33997  012C6A  6AF8               	clrf	tblptru,c
 33998  012C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 33999  012C6E  22F8               	addwfc	tblptru,f,c
 34000  012C70                     	endif
 34001  012C70  0009               	tblrd		*+
 34002  012C72  50F5               	movf	tablat,w,c
 34003  012C74  5DA1               	subwf	i2printf@val& (0+255),w,b
 34004  012C76  0009               	tblrd		*+
 34005  012C78  50F5               	movf	tablat,w,c
 34006  012C7A  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 34007  012C7C  0009               	tblrd		*+
 34008  012C7E  50F5               	movf	tablat,w,c
 34009  012C80  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 34010  012C82  0009               	tblrd		*+
 34011  012C84  50F5               	movf	tablat,w,c
 34012  012C86  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 34013  012C88  A0D8               	btfss	status,0,c
 34014  012C8A  D00D               	goto	i2l1571
 34015                           
 34016                           ; BSR set to: 0
 34017                           
 34018                           ; BSR set to: 0
 34019                           
 34020                           ; BSR set to: 0
 34021                           ;doprnt.c: 1318: break;
 34022  012C8C  2BAF               	incf	i2printf@c& (0+255),f,b
 34023  012C8E  D7E1               	goto	i2l15148
 34024  012C90                     i2l1565:
 34025                           
 34026                           ; BSR set to: 0
 34027                           
 34028                           ; BSR set to: 0
 34029  012C90  51A9               	movf	i2printf@flag& (0+255),w,b
 34030  012C92  0BC0               	andlw	192
 34031                           
 34032                           ; Switch size 1, requested type "space"
 34033                           ; Number of cases is 3, Range of values is 0 to 192
 34034                           ; switch strategies available:
 34035                           ; Name         Instructions Cycles
 34036                           ; simple_byte           10     6 (average)
 34037                           ;	Chosen strategy is simple_byte
 34038  012C94  0A00               	xorlw	0	; case 0
 34039  012C96  B4D8               	btfsc	status,2,c
 34040  012C98  D7B9               	goto	i2l1566
 34041  012C9A  0A80               	xorlw	128	; case 128
 34042  012C9C  B4D8               	btfsc	status,2,c
 34043  012C9E  D7D7               	goto	i2l1572
 34044  012CA0  0A40               	xorlw	64	; case 192
 34045  012CA2  B4D8               	btfsc	status,2,c
 34046  012CA4  D7B3               	goto	i2l1566
 34047  012CA6                     i2l1571:
 34048                           
 34049                           ; BSR set to: 0
 34050                           ;doprnt.c: 1339: if(c < prec)
 34051                           
 34052                           ; BSR set to: 0
 34053  012CA6  0E80               	movlw	128
 34054  012CA8  BFAF               	btfsc	i2printf@c& (0+255),7,b
 34055  012CAA  0E7F               	movlw	127
 34056  012CAC  6F8A               	movwf	??i2_printf& (0+255),b
 34057  012CAE  51AD               	movf	i2printf@prec& (0+255),w,b
 34058  012CB0  5DAF               	subwf	i2printf@c& (0+255),w,b
 34059  012CB2  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34060  012CB4  0A80               	xorlw	128
 34061  012CB6  598A               	subwfb	??i2_printf& (0+255),w,b
 34062  012CB8  B0D8               	btfsc	status,0,c
 34063  012CBA  D003               	goto	i2l1576
 34064                           
 34065                           ; BSR set to: 0
 34066                           ;doprnt.c: 1340: c = prec;
 34067  012CBC  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 34068  012CC0  D010               	goto	i2l1578
 34069  012CC2                     i2l1576:
 34070                           
 34071                           ; BSR set to: 0
 34072                           ;doprnt.c: 1341: else if(prec < c)
 34073                           
 34074                           ; BSR set to: 0
 34075  012CC2  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34076  012CC4  0A80               	xorlw	128
 34077  012CC6  6F8A               	movwf	??i2_printf& (0+255),b
 34078  012CC8  51AF               	movf	i2printf@c& (0+255),w,b
 34079  012CCA  5DAD               	subwf	i2printf@prec& (0+255),w,b
 34080  012CCC  0E80               	movlw	128
 34081  012CCE  BFAF               	btfsc	i2printf@c& (0+255),7,b
 34082  012CD0  0E7F               	movlw	127
 34083  012CD2  598A               	subwfb	??i2_printf& (0+255),w,b
 34084  012CD4  B0D8               	btfsc	status,0,c
 34085  012CD6  D005               	goto	i2l1578
 34086                           
 34087                           ; BSR set to: 0
 34088                           ;doprnt.c: 1342: prec = c;
 34089  012CD8  51AF               	movf	i2printf@c& (0+255),w,b
 34090  012CDA  6FAD               	movwf	i2printf@prec& (0+255),b
 34091  012CDC  6BAE               	clrf	(i2printf@prec+1)& (0+255),b
 34092  012CDE  BFAD               	btfsc	i2printf@prec& (0+255),7,b
 34093  012CE0  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 34094  012CE2                     i2l1578:
 34095                           
 34096                           ; BSR set to: 0
 34097                           ;doprnt.c: 1345: if(width && flag & 0x03)
 34098                           
 34099                           ; BSR set to: 0
 34100                           
 34101                           ; BSR set to: 0
 34102  012CE2  51AB               	movf	i2printf@width& (0+255),w,b
 34103  012CE4  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 34104  012CE6  B4D8               	btfsc	status,2,c
 34105  012CE8  D00D               	goto	i2l1579
 34106                           
 34107                           ; BSR set to: 0
 34108  012CEA  0E03               	movlw	3
 34109  012CEC  15A9               	andwf	i2printf@flag& (0+255),w,b
 34110  012CEE  6F8A               	movwf	??i2_printf& (0+255),b
 34111  012CF0  0E00               	movlw	0
 34112  012CF2  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34113  012CF4  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34114  012CF6  518A               	movf	??i2_printf& (0+255),w,b
 34115  012CF8  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34116  012CFA  B4D8               	btfsc	status,2,c
 34117  012CFC  D003               	goto	i2l1579
 34118                           
 34119                           ; BSR set to: 0
 34120                           ;doprnt.c: 1346: width--;
 34121  012CFE  07AB               	decf	i2printf@width& (0+255),f,b
 34122  012D00  A0D8               	btfss	status,0,c
 34123  012D02  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34124  012D04                     i2l1579:
 34125                           
 34126                           ; BSR set to: 0
 34127                           ;doprnt.c: 1348: if(flag & 0x4000) {
 34128                           
 34129                           ; BSR set to: 0
 34130  012D04  ADAA               	btfss	(i2printf@flag+1)& (0+255),6,b
 34131  012D06  D013               	goto	i2l1582
 34132                           
 34133                           ; BSR set to: 0
 34134                           ;doprnt.c: 1349: if(width > prec)
 34135  012D08  51AB               	movf	i2printf@width& (0+255),w,b
 34136  012D0A  5DAD               	subwf	i2printf@prec& (0+255),w,b
 34137  012D0C  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34138  012D0E  0A80               	xorlw	128
 34139  012D10  6F8A               	movwf	??i2_printf& (0+255),b
 34140  012D12  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 34141  012D14  0A80               	xorlw	128
 34142  012D16  598A               	subwfb	??i2_printf& (0+255),w,b
 34143  012D18  B0D8               	btfsc	status,0,c
 34144  012D1A  D005               	goto	i2l1581
 34145                           
 34146                           ; BSR set to: 0
 34147                           ;doprnt.c: 1350: width -= prec;
 34148  012D1C  51AD               	movf	i2printf@prec& (0+255),w,b
 34149  012D1E  5FAB               	subwf	i2printf@width& (0+255),f,b
 34150  012D20  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34151  012D22  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 34152  012D24  D004               	goto	i2l1582
 34153  012D26                     i2l1581:
 34154                           
 34155                           ; BSR set to: 0
 34156                           ;doprnt.c: 1351: else
 34157                           ;doprnt.c: 1352: width = 0;
 34158                           
 34159                           ; BSR set to: 0
 34160  012D26  0E00               	movlw	0
 34161  012D28  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 34162  012D2A  0E00               	movlw	0
 34163  012D2C  6FAB               	movwf	i2printf@width& (0+255),b
 34164  012D2E                     i2l1582:
 34165                           
 34166                           ; BSR set to: 0
 34167                           ;doprnt.c: 1353: }
 34168                           ;doprnt.c: 1381: if(width > c)
 34169                           
 34170                           ; BSR set to: 0
 34171                           
 34172                           ; BSR set to: 0
 34173  012D2E  0E80               	movlw	128
 34174  012D30  BFAF               	btfsc	i2printf@c& (0+255),7,b
 34175  012D32  0E7F               	movlw	127
 34176  012D34  6F8A               	movwf	??i2_printf& (0+255),b
 34177  012D36  51AB               	movf	i2printf@width& (0+255),w,b
 34178  012D38  5DAF               	subwf	i2printf@c& (0+255),w,b
 34179  012D3A  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 34180  012D3C  0A80               	xorlw	128
 34181  012D3E  598A               	subwfb	??i2_printf& (0+255),w,b
 34182  012D40  B0D8               	btfsc	status,0,c
 34183  012D42  D007               	goto	i2l1583
 34184                           
 34185                           ; BSR set to: 0
 34186                           ;doprnt.c: 1382: width -= c;
 34187  012D44  51AF               	movf	i2printf@c& (0+255),w,b
 34188  012D46  5FAB               	subwf	i2printf@width& (0+255),f,b
 34189  012D48  0E00               	movlw	0
 34190  012D4A  BFAF               	btfsc	i2printf@c& (0+255),7,b
 34191  012D4C  0EFF               	movlw	255
 34192  012D4E  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 34193  012D50  D004               	goto	i2l1584
 34194  012D52                     i2l1583:
 34195                           
 34196                           ; BSR set to: 0
 34197                           ;doprnt.c: 1383: else
 34198                           ;doprnt.c: 1384: width = 0;
 34199                           
 34200                           ; BSR set to: 0
 34201  012D52  0E00               	movlw	0
 34202  012D54  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 34203  012D56  0E00               	movlw	0
 34204  012D58  6FAB               	movwf	i2printf@width& (0+255),b
 34205  012D5A                     i2l1584:
 34206                           
 34207                           ; BSR set to: 0
 34208                           ;doprnt.c: 1387: if(flag & 0x04) {
 34209                           
 34210                           ; BSR set to: 0
 34211  012D5A  A5A9               	btfss	i2printf@flag& (0+255),2,b
 34212  012D5C  D01A               	goto	i2l1585
 34213                           
 34214                           ; BSR set to: 0
 34215                           ;doprnt.c: 1392: if(flag & 0x03)
 34216  012D5E  0E03               	movlw	3
 34217  012D60  15A9               	andwf	i2printf@flag& (0+255),w,b
 34218  012D62  6F8A               	movwf	??i2_printf& (0+255),b
 34219  012D64  0E00               	movlw	0
 34220  012D66  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34221  012D68  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34222  012D6A  518A               	movf	??i2_printf& (0+255),w,b
 34223  012D6C  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34224  012D6E  B4D8               	btfsc	status,2,c
 34225  012D70  D003               	goto	i2l1586
 34226                           
 34227                           ; BSR set to: 0
 34228                           ;doprnt.c: 1393: (putch('-') );
 34229  012D72  0E2D               	movlw	45
 34230  012D74  ECB5  F0C9         	call	i2_putch
 34231  012D78                     i2l1586:
 34232                           
 34233                           ;doprnt.c: 1415: if(width)
 34234  012D78  0100               	movlb	0	; () banked
 34235  012D7A  51AB               	movf	i2printf@width& (0+255),w,b
 34236  012D7C  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 34237  012D7E  B4D8               	btfsc	status,2,c
 34238  012D80  D0B1               	goto	i2l1595
 34239                           
 34240                           ; BSR set to: 0
 34241                           ;doprnt.c: 1417: (putch('0') );
 34242                           
 34243                           ; BSR set to: 0
 34244                           
 34245                           ;doprnt.c: 1416: do
 34246  012D82  0E30               	movlw	48
 34247  012D84  ECB5  F0C9         	call	i2_putch
 34248                           
 34249                           ;doprnt.c: 1418: while(--width);
 34250  012D88  0100               	movlb	0	; () banked
 34251  012D8A  07AB               	decf	i2printf@width& (0+255),f,b
 34252  012D8C  A0D8               	btfss	status,0,c
 34253  012D8E  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34254  012D90  D7F4               	goto	L26
 34255  012D92                     i2l1585:
 34256                           
 34257                           ; BSR set to: 0
 34258                           ;doprnt.c: 1422: {
 34259                           ;doprnt.c: 1424: if(width
 34260                           ;doprnt.c: 1428: )
 34261                           
 34262                           ; BSR set to: 0
 34263  012D92  51AB               	movf	i2printf@width& (0+255),w,b
 34264  012D94  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 34265  012D96  B4D8               	btfsc	status,2,c
 34266  012D98  D00B               	goto	i2u1915_40
 34267  012D9A                     i2u1914_40:
 34268                           
 34269                           ; BSR set to: 0
 34270                           ;doprnt.c: 1430: (putch(' ') );
 34271                           
 34272                           ; BSR set to: 0
 34273                           
 34274                           ;doprnt.c: 1429: do
 34275  012D9A  0E20               	movlw	32
 34276  012D9C  ECB5  F0C9         	call	i2_putch
 34277                           
 34278                           ;doprnt.c: 1431: while(--width);
 34279  012DA0  0100               	movlb	0	; () banked
 34280  012DA2  07AB               	decf	i2printf@width& (0+255),f,b
 34281  012DA4  A0D8               	btfss	status,0,c
 34282  012DA6  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34283  012DA8  51AB               	movf	i2printf@width& (0+255),w,b
 34284  012DAA  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 34285  012DAC  A4D8               	btfss	status,2,c
 34286  012DAE  D7F5               	goto	i2u1914_40
 34287  012DB0                     i2u1915_40:
 34288                           
 34289                           ; BSR set to: 0
 34290                           ;doprnt.c: 1438: if(flag & 0x03)
 34291                           
 34292                           ; BSR set to: 0
 34293                           
 34294                           ; BSR set to: 0
 34295  012DB0  0E03               	movlw	3
 34296  012DB2  15A9               	andwf	i2printf@flag& (0+255),w,b
 34297  012DB4  6F8A               	movwf	??i2_printf& (0+255),b
 34298  012DB6  0E00               	movlw	0
 34299  012DB8  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34300  012DBA  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34301  012DBC  518A               	movf	??i2_printf& (0+255),w,b
 34302  012DBE  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34303  012DC0  B4D8               	btfsc	status,2,c
 34304  012DC2  D090               	goto	i2l1595
 34305                           
 34306                           ; BSR set to: 0
 34307                           ;doprnt.c: 1439: (putch('-') );
 34308  012DC4  0E2D               	movlw	45
 34309  012DC6  ECB5  F0C9         	call	i2_putch
 34310                           
 34311                           ;doprnt.c: 1469: }
 34312                           ;doprnt.c: 1474: while(prec--) {
 34313  012DCA  D08C               	goto	i2l1595
 34314  012DCC                     
 34315                           ;doprnt.c: 1486: case 0xC0:
 34316                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 34317  012DCC  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 34318  012DD0  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 34319  012DD4  0100               	movlb	0	; () banked
 34320  012DD6  90D8               	bcf	status,0,c
 34321  012DD8  378A               	rlcf	??i2_printf& (0+255),f,b
 34322  012DDA  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 34323  012DDC  90D8               	bcf	status,0,c
 34324  012DDE  378A               	rlcf	??i2_printf& (0+255),f,b
 34325  012DE0  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 34326  012DE2  0EAB               	movlw	low _dpowers
 34327  012DE4  258A               	addwf	??i2_printf& (0+255),w,b
 34328  012DE6  6EF6               	movwf	tblptrl,c
 34329  012DE8  0ED8               	movlw	high _dpowers
 34330  012DEA  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 34331  012DEC  6EF7               	movwf	tblptrh,c
 34332  012DEE                     	if	1	;There are 3 active tblptr bytes
 34333  012DEE  6AF8               	clrf	tblptru,c
 34334  012DF0  0E00               	movlw	low (__mediumconst shr (0+16))
 34335  012DF2  22F8               	addwfc	tblptru,f,c
 34336  012DF4                     	endif
 34337  012DF4  0009               	tblrd		*+
 34338  012DF6  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 34339  012DFA  0009               	tblrd		*+
 34340  012DFC  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 34341  012E00  0009               	tblrd		*+
 34342  012E02  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 34343  012E06  000A               	tblrd		*-
 34344  012E08  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 34345  012E0C  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 34346  012E10  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 34347  012E14  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 34348  012E18  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 34349  012E1C  ECD1  F0C1         	call	i2___lldiv	;wreg free
 34350  012E20  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 34351  012E24  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 34352  012E28  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 34353  012E2C  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 34354  012E30  0E0A               	movlw	10
 34355  012E32  6E12               	movwf	i2___llmod@divisor,c
 34356  012E34  0E00               	movlw	0
 34357  012E36  6E13               	movwf	i2___llmod@divisor+1,c
 34358  012E38  0E00               	movlw	0
 34359  012E3A  6E14               	movwf	i2___llmod@divisor+2,c
 34360  012E3C  0E00               	movlw	0
 34361  012E3E  6E15               	movwf	i2___llmod@divisor+3,c
 34362  012E40  ECD2  F0C3         	call	i2___llmod	;wreg free
 34363  012E44  500E               	movf	?i2___llmod,w,c
 34364  012E46  0F30               	addlw	48
 34365  012E48  0100               	movlb	0	; () banked
 34366  012E4A  6FAF               	movwf	i2printf@c& (0+255),b
 34367                           
 34368                           ;doprnt.c: 1491: break;
 34369  012E4C  D048               	goto	i2l1600
 34370  012E4E                     
 34371                           ; BSR set to: 0
 34372                           ;doprnt.c: 1499: {
 34373                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 34374                           
 34375                           ; BSR set to: 0
 34376  012E4E  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 34377  012E52  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 34378  012E56  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 34379  012E5A  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 34380  012E5E  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 34381  012E62  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 34382  012E66  90D8               	bcf	status,0,c
 34383  012E68  378A               	rlcf	??i2_printf& (0+255),f,b
 34384  012E6A  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 34385  012E6C  90D8               	bcf	status,0,c
 34386  012E6E  378A               	rlcf	??i2_printf& (0+255),f,b
 34387  012E70  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 34388  012E72  0ED3               	movlw	low _hexpowers
 34389  012E74  258A               	addwf	??i2_printf& (0+255),w,b
 34390  012E76  6EF6               	movwf	tblptrl,c
 34391  012E78  0ED8               	movlw	high _hexpowers
 34392  012E7A  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 34393  012E7C  6EF7               	movwf	tblptrh,c
 34394  012E7E                     	if	1	;There are 3 active tblptr bytes
 34395  012E7E  6AF8               	clrf	tblptru,c
 34396  012E80  0E00               	movlw	low (__mediumconst shr (0+16))
 34397  012E82  22F8               	addwfc	tblptru,f,c
 34398  012E84                     	endif
 34399  012E84  0009               	tblrd		*+
 34400  012E86  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 34401  012E8A  0009               	tblrd		*+
 34402  012E8C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 34403  012E90  0009               	tblrd		*+
 34404  012E92  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 34405  012E96  000A               	tblrd		*-
 34406  012E98  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 34407  012E9C  ECD1  F0C1         	call	i2___lldiv	;wreg free
 34408  012EA0  5001               	movf	?i2___lldiv,w,c
 34409  012EA2  0B0F               	andlw	15
 34410  012EA4  0100               	movlb	0	; () banked
 34411  012EA6  6F94               	movwf	i2printf@idx& (0+255),b
 34412                           
 34413                           ; BSR set to: 0
 34414                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 34415  012EA8  5194               	movf	i2printf@idx& (0+255),w,b
 34416  012EAA  0D01               	mullw	1
 34417  012EAC  0E77               	movlw	low STR_165
 34418  012EAE  24F3               	addwf	prodl,w,c
 34419  012EB0  6EF6               	movwf	tblptrl,c
 34420  012EB2  0EFD               	movlw	high STR_165
 34421  012EB4  20F4               	addwfc	prodh,w,c
 34422  012EB6  6EF7               	movwf	tblptrh,c
 34423  012EB8                     	if	1	;There are 3 active tblptr bytes
 34424  012EB8  6AF8               	clrf	tblptru,c
 34425  012EBA  0E00               	movlw	low (__mediumconst shr (0+16))
 34426  012EBC  22F8               	addwfc	tblptru,f,c
 34427  012EBE                     	endif
 34428  012EBE  0008               	tblrd		*
 34429  012EC0  CFF5 F0AF          	movff	tablat,i2printf@c
 34430                           
 34431                           ; BSR set to: 0
 34432                           ;doprnt.c: 1523: }
 34433                           
 34434                           ;doprnt.c: 1508: }
 34435                           ;doprnt.c: 1510: break;
 34436  012EC4  D00C               	goto	i2l1600
 34437  012EC6                     i2l15222:
 34438  012EC6  0100               	movlb	0	; () banked
 34439  012EC8  51A9               	movf	i2printf@flag& (0+255),w,b
 34440  012ECA  0BC0               	andlw	192
 34441                           
 34442                           ; Switch size 1, requested type "space"
 34443                           ; Number of cases is 3, Range of values is 0 to 192
 34444                           ; switch strategies available:
 34445                           ; Name         Instructions Cycles
 34446                           ; simple_byte           10     6 (average)
 34447                           ;	Chosen strategy is simple_byte
 34448  012ECC  0A00               	xorlw	0	; case 0
 34449  012ECE  B4D8               	btfsc	status,2,c
 34450  012ED0  D77D               	goto	i2l1598
 34451  012ED2  0A80               	xorlw	128	; case 128
 34452  012ED4  B4D8               	btfsc	status,2,c
 34453  012ED6  D7BB               	goto	i2l1601
 34454  012ED8  0A40               	xorlw	64	; case 192
 34455  012EDA  B4D8               	btfsc	status,2,c
 34456  012EDC  D777               	goto	i2l1598
 34457  012EDE                     i2l1600:
 34458                           
 34459                           ; BSR set to: 0
 34460                           ;doprnt.c: 1524: (putch(c) );
 34461                           
 34462                           ; BSR set to: 0
 34463  012EDE  51AF               	movf	i2printf@c& (0+255),w,b
 34464  012EE0  ECB5  F0C9         	call	i2_putch
 34465  012EE4                     i2l1595:
 34466  012EE4  0100               	movlb	0	; () banked
 34467  012EE6  07AD               	decf	i2printf@prec& (0+255),f,b
 34468  012EE8  A0D8               	btfss	status,0,c
 34469  012EEA  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 34470  012EEC  29AD               	incf	i2printf@prec& (0+255),w,b
 34471  012EEE  E1EB               	bnz	i2l15222
 34472  012EF0  29AE               	incf	(i2printf@prec+1)& (0+255),w,b
 34473  012EF2  A4D8               	btfss	status,2,c
 34474  012EF4  D7E8               	goto	i2l1597
 34475  012EF6                     i2u1917_40:
 34476                           
 34477                           ; BSR set to: 0
 34478                           
 34479                           ; BSR set to: 0
 34480  012EF6  0100               	movlb	0	; () banked
 34481  012EF8  5188               	movf	i2printf@f& (0+255),w,b
 34482  012EFA  6F8A               	movwf	??i2_printf& (0+255),b
 34483  012EFC  5189               	movf	(i2printf@f+1)& (0+255),w,b
 34484  012EFE  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34485  012F00  4B88               	infsnz	i2printf@f& (0+255),f,b
 34486  012F02  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 34487  012F04  C08A  FFF6         	movff	??i2_printf,tblptrl
 34488  012F08  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 34489  012F0C  0E00               	movlw	low (__mediumconst shr (0+16))
 34490  012F0E  6EF8               	movwf	tblptru,c
 34491  012F10  0E0D               	movlw	(high __ramtop+-1)
 34492  012F12  64F7               	cpfsgt	tblptrh,c
 34493  012F14  D003               	bra	i2u1918_47
 34494  012F16  0008               	tblrd		*
 34495  012F18  50F5               	movf	tablat,w,c
 34496  012F1A  D005               	bra	i2u1918_40
 34497  012F1C                     i2u1918_47:
 34498  012F1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 34499  012F20  CFF7 FFEA          	movff	tblptrh,fsr0h
 34500  012F24  50EF               	movf	indf0,w,c
 34501  012F26                     i2u1918_40:
 34502  012F26  0100               	movlb	0	; () banked
 34503  012F28  6FAF               	movwf	i2printf@c& (0+255),b
 34504  012F2A  51AF               	movf	i2printf@c& (0+255),w,b
 34505  012F2C  B4D8               	btfsc	status,2,c
 34506  012F2E  0012               	return	
 34507  012F30  EFBF  F090         	goto	i2l1469
 34508  012F34                     __end_ofi2_printf:
 34509                           	opt stack 0
 34510                           tosu	equ	0xFFF
 34511                           tosh	equ	0xFFE
 34512                           tosl	equ	0xFFD
 34513                           pclatu	equ	0xFFB
 34514                           pclath	equ	0xFFA
 34515                           tblptru	equ	0xFF8
 34516                           tblptrh	equ	0xFF7
 34517                           tblptrl	equ	0xFF6
 34518                           tablat	equ	0xFF5
 34519                           prodh	equ	0xFF4
 34520                           prodl	equ	0xFF3
 34521                           intcon	equ	0xFF2
 34522                           indf0	equ	0xFEF
 34523                           postinc0	equ	0xFEE
 34524                           fsr0h	equ	0xFEA
 34525                           fsr0l	equ	0xFE9
 34526                           wreg	equ	0xFE8
 34527                           indf1	equ	0xFE7
 34528                           postdec1	equ	0xFE5
 34529                           plusw1	equ	0xFE3
 34530                           fsr1h	equ	0xFE2
 34531                           fsr1l	equ	0xFE1
 34532                           bsr	equ	0xFE0
 34533                           indf2	equ	0xFDF
 34534                           postinc2	equ	0xFDE
 34535                           postdec2	equ	0xFDD
 34536                           plusw2	equ	0xFDB
 34537                           fsr2h	equ	0xFDA
 34538                           fsr2l	equ	0xFD9
 34539                           status	equ	0xFD8
 34540                           
 34541 ;; *************** function i2_scale *****************
 34542 ;; Defined at:
 34543 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 34544 ;; Parameters:    Size  Location     Type
 34545 ;;  scl             1    wreg     char 
 34546 ;; Auto vars:     Size  Location     Type
 34547 ;;  scl             1   80[COMRAM] char 
 34548 ;; Return value:  Size  Location     Type
 34549 ;;                  4   72[COMRAM] char 
 34550 ;; Registers used:
 34551 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34552 ;; Tracked objects:
 34553 ;;		On entry : 0/0
 34554 ;;		On exit  : 0/0
 34555 ;;		Unchanged: 0/0
 34556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34558 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34560 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34561 ;;Total ram usage:        9 bytes
 34562 ;; Hardware stack levels used:    1
 34563 ;; Hardware stack levels required when called:    1
 34564 ;; This function calls:
 34565 ;;		i2___awdiv
 34566 ;;		i2___awmod
 34567 ;;		i2___flmul
 34568 ;; This function is called by:
 34569 ;;		i2_printf
 34570 ;; This function uses a non-reentrant model
 34571 ;;
 34572                           
 34573                           	psect	text92
 34574  013DB8                     __ptext92:
 34575                           	opt stack 0
 34576  013DB8                     i2_scale:
 34577                           	opt stack 15
 34578                           
 34579                           ; BSR set to: 0
 34580                           ;incstack = 0
 34581                           ;i2scale@scl stored from wreg
 34582  013DB8  6E51               	movwf	i2scale@scl,c
 34583                           
 34584                           ;doprnt.c: 428: if(scl < 0) {
 34585  013DBA  AE51               	btfss	i2scale@scl,7,c
 34586  013DBC  D11F               	goto	i2l1458
 34587                           
 34588                           ;doprnt.c: 429: scl = -scl;
 34589  013DBE  6C51               	negf	i2scale@scl,c
 34590                           
 34591                           ;doprnt.c: 430: if(scl>=110)
 34592  013DC0  5051               	movf	i2scale@scl,w,c
 34593  013DC2  0A80               	xorlw	128
 34594  013DC4  0F12               	addlw	-238
 34595  013DC6  A0D8               	btfss	status,0,c
 34596  013DC8  D0A1               	goto	i2l1459
 34597                           
 34598                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 34599  013DCA  0E00               	movlw	0
 34600  013DCC  6E0A               	movwf	i2___awdiv@divisor+1,c
 34601  013DCE  0E0A               	movlw	10
 34602  013DD0  6E09               	movwf	i2___awdiv@divisor,c
 34603  013DD2  0E00               	movlw	0
 34604  013DD4  6E04               	movwf	i2___awmod@divisor+1,c
 34605  013DD6  0E64               	movlw	100
 34606  013DD8  6E03               	movwf	i2___awmod@divisor,c
 34607  013DDA  5051               	movf	i2scale@scl,w,c
 34608  013DDC  6E01               	movwf	i2___awmod@dividend,c
 34609  013DDE  6A02               	clrf	i2___awmod@dividend+1,c
 34610  013DE0  BE01               	btfsc	i2___awmod@dividend,7,c
 34611  013DE2  0602               	decf	i2___awmod@dividend+1,f,c
 34612  013DE4  ECC6  F0C2         	call	i2___awmod	;wreg free
 34613  013DE8  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 34614  013DEC  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 34615  013DF0  EC8F  F0C1         	call	i2___awdiv	;wreg free
 34616  013DF4  90D8               	bcf	status,0,c
 34617  013DF6  3607               	rlcf	?i2___awdiv,f,c
 34618  013DF8  3608               	rlcf	?i2___awdiv+1,f,c
 34619  013DFA  90D8               	bcf	status,0,c
 34620  013DFC  3607               	rlcf	?i2___awdiv,f,c
 34621  013DFE  3608               	rlcf	?i2___awdiv+1,f,c
 34622  013E00  0E24               	movlw	36
 34623  013E02  2607               	addwf	?i2___awdiv,f,c
 34624  013E04  0E00               	movlw	0
 34625  013E06  2208               	addwfc	?i2___awdiv+1,f,c
 34626  013E08  0E77               	movlw	low __npowers_
 34627  013E0A  2407               	addwf	?i2___awdiv,w,c
 34628  013E0C  6EF6               	movwf	tblptrl,c
 34629  013E0E  0ED8               	movlw	high __npowers_
 34630  013E10  2008               	addwfc	?i2___awdiv+1,w,c
 34631  013E12  6EF7               	movwf	tblptrh,c
 34632  013E14                     	if	1	;There are 3 active tblptr bytes
 34633  013E14  6AF8               	clrf	tblptru,c
 34634  013E16  0E00               	movlw	low (__mediumconst shr (0+16))
 34635  013E18  22F8               	addwfc	tblptru,f,c
 34636  013E1A                     	endif
 34637  013E1A  0009               	tblrd		*+
 34638  013E1C  CFF5 F034          	movff	tablat,i2___flmul@a
 34639  013E20  0009               	tblrd		*+
 34640  013E22  CFF5 F035          	movff	tablat,i2___flmul@a+1
 34641  013E26  0009               	tblrd		*+
 34642  013E28  CFF5 F036          	movff	tablat,i2___flmul@a+2
 34643  013E2C  000A               	tblrd		*-
 34644  013E2E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 34645  013E32  0E00               	movlw	0
 34646  013E34  6E0A               	movwf	i2___awdiv@divisor+1,c
 34647  013E36  0E64               	movlw	100
 34648  013E38  6E09               	movwf	i2___awdiv@divisor,c
 34649  013E3A  5051               	movf	i2scale@scl,w,c
 34650  013E3C  6E07               	movwf	i2___awdiv@dividend,c
 34651  013E3E  6A08               	clrf	i2___awdiv@dividend+1,c
 34652  013E40  BE07               	btfsc	i2___awdiv@dividend,7,c
 34653  013E42  0608               	decf	i2___awdiv@dividend+1,f,c
 34654  013E44  EC8F  F0C1         	call	i2___awdiv	;wreg free
 34655  013E48  90D8               	bcf	status,0,c
 34656  013E4A  3607               	rlcf	?i2___awdiv,f,c
 34657  013E4C  3608               	rlcf	?i2___awdiv+1,f,c
 34658  013E4E  90D8               	bcf	status,0,c
 34659  013E50  3607               	rlcf	?i2___awdiv,f,c
 34660  013E52  3608               	rlcf	?i2___awdiv+1,f,c
 34661  013E54  0E48               	movlw	72
 34662  013E56  2607               	addwf	?i2___awdiv,f,c
 34663  013E58  0E00               	movlw	0
 34664  013E5A  2208               	addwfc	?i2___awdiv+1,f,c
 34665  013E5C  0E77               	movlw	low __npowers_
 34666  013E5E  2407               	addwf	?i2___awdiv,w,c
 34667  013E60  6EF6               	movwf	tblptrl,c
 34668  013E62  0ED8               	movlw	high __npowers_
 34669  013E64  2008               	addwfc	?i2___awdiv+1,w,c
 34670  013E66  6EF7               	movwf	tblptrh,c
 34671  013E68                     	if	1	;There are 3 active tblptr bytes
 34672  013E68  6AF8               	clrf	tblptru,c
 34673  013E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 34674  013E6C  22F8               	addwfc	tblptru,f,c
 34675  013E6E                     	endif
 34676  013E6E  0009               	tblrd		*+
 34677  013E70  CFF5 F030          	movff	tablat,i2___flmul@b
 34678  013E74  0009               	tblrd		*+
 34679  013E76  CFF5 F031          	movff	tablat,i2___flmul@b+1
 34680  013E7A  0009               	tblrd		*+
 34681  013E7C  CFF5 F032          	movff	tablat,i2___flmul@b+2
 34682  013E80  000A               	tblrd		*-
 34683  013E82  CFF5 F033          	movff	tablat,i2___flmul@b+3
 34684  013E86  EC79  F0A4         	call	i2___flmul	;wreg free
 34685  013E8A  C030  F04D         	movff	?i2___flmul,i2_scale$4193
 34686  013E8E  C031  F04E         	movff	?i2___flmul+1,i2_scale$4193+1
 34687  013E92  C032  F04F         	movff	?i2___flmul+2,i2_scale$4193+2
 34688  013E96  C033  F050         	movff	?i2___flmul+3,i2_scale$4193+3
 34689                           
 34690                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 34691  013E9A  C04D  F030         	movff	i2_scale$4193,i2___flmul@b
 34692  013E9E  C04E  F031         	movff	i2_scale$4193+1,i2___flmul@b+1
 34693  013EA2  C04F  F032         	movff	i2_scale$4193+2,i2___flmul@b+2
 34694  013EA6  C050  F033         	movff	i2_scale$4193+3,i2___flmul@b+3
 34695  013EAA  0E00               	movlw	0
 34696  013EAC  6E04               	movwf	i2___awmod@divisor+1,c
 34697  013EAE  0E0A               	movlw	10
 34698  013EB0  6E03               	movwf	i2___awmod@divisor,c
 34699  013EB2  5051               	movf	i2scale@scl,w,c
 34700  013EB4  6E01               	movwf	i2___awmod@dividend,c
 34701  013EB6  6A02               	clrf	i2___awmod@dividend+1,c
 34702  013EB8  BE01               	btfsc	i2___awmod@dividend,7,c
 34703  013EBA  0602               	decf	i2___awmod@dividend+1,f,c
 34704  013EBC  ECC6  F0C2         	call	i2___awmod	;wreg free
 34705  013EC0  90D8               	bcf	status,0,c
 34706  013EC2  3601               	rlcf	?i2___awmod,f,c
 34707  013EC4  3602               	rlcf	?i2___awmod+1,f,c
 34708  013EC6  90D8               	bcf	status,0,c
 34709  013EC8  3601               	rlcf	?i2___awmod,f,c
 34710  013ECA  3602               	rlcf	?i2___awmod+1,f,c
 34711  013ECC  0E77               	movlw	low __npowers_
 34712  013ECE  2401               	addwf	?i2___awmod,w,c
 34713  013ED0  6EF6               	movwf	tblptrl,c
 34714  013ED2  0ED8               	movlw	high __npowers_
 34715  013ED4  2002               	addwfc	?i2___awmod+1,w,c
 34716  013ED6  6EF7               	movwf	tblptrh,c
 34717  013ED8                     	if	1	;There are 3 active tblptr bytes
 34718  013ED8  6AF8               	clrf	tblptru,c
 34719  013EDA  0E00               	movlw	low (__mediumconst shr (0+16))
 34720  013EDC  22F8               	addwfc	tblptru,f,c
 34721  013EDE                     	endif
 34722  013EDE  0009               	tblrd		*+
 34723  013EE0  CFF5 F034          	movff	tablat,i2___flmul@a
 34724  013EE4  0009               	tblrd		*+
 34725  013EE6  CFF5 F035          	movff	tablat,i2___flmul@a+1
 34726  013EEA  0009               	tblrd		*+
 34727  013EEC  CFF5 F036          	movff	tablat,i2___flmul@a+2
 34728  013EF0  000A               	tblrd		*-
 34729  013EF2  CFF5 F037          	movff	tablat,i2___flmul@a+3
 34730  013EF6  EC79  F0A4         	call	i2___flmul	;wreg free
 34731  013EFA  C030  F049         	movff	?i2___flmul,?i2_scale
 34732  013EFE  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 34733  013F02  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 34734  013F06  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 34735  013F0A  0012               	return	
 34736  013F0C                     i2l1459:
 34737                           
 34738                           ;doprnt.c: 432: else if(scl > 10)
 34739  013F0C  5051               	movf	i2scale@scl,w,c
 34740  013F0E  0A80               	xorlw	128
 34741  013F10  0F75               	addlw	-139
 34742  013F12  A0D8               	btfss	status,0,c
 34743  013F14  D05B               	goto	i2l1462
 34744                           
 34745                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 34746  013F16  0E00               	movlw	0
 34747  013F18  6E0A               	movwf	i2___awdiv@divisor+1,c
 34748  013F1A  0E0A               	movlw	10
 34749  013F1C  6E09               	movwf	i2___awdiv@divisor,c
 34750  013F1E  5051               	movf	i2scale@scl,w,c
 34751  013F20  6E07               	movwf	i2___awdiv@dividend,c
 34752  013F22  6A08               	clrf	i2___awdiv@dividend+1,c
 34753  013F24  BE07               	btfsc	i2___awdiv@dividend,7,c
 34754  013F26  0608               	decf	i2___awdiv@dividend+1,f,c
 34755  013F28  EC8F  F0C1         	call	i2___awdiv	;wreg free
 34756  013F2C  90D8               	bcf	status,0,c
 34757  013F2E  3607               	rlcf	?i2___awdiv,f,c
 34758  013F30  3608               	rlcf	?i2___awdiv+1,f,c
 34759  013F32  90D8               	bcf	status,0,c
 34760  013F34  3607               	rlcf	?i2___awdiv,f,c
 34761  013F36  3608               	rlcf	?i2___awdiv+1,f,c
 34762  013F38  0E24               	movlw	36
 34763  013F3A  2607               	addwf	?i2___awdiv,f,c
 34764  013F3C  0E00               	movlw	0
 34765  013F3E  2208               	addwfc	?i2___awdiv+1,f,c
 34766  013F40  0E77               	movlw	low __npowers_
 34767  013F42  2407               	addwf	?i2___awdiv,w,c
 34768  013F44  6EF6               	movwf	tblptrl,c
 34769  013F46  0ED8               	movlw	high __npowers_
 34770  013F48  2008               	addwfc	?i2___awdiv+1,w,c
 34771  013F4A  6EF7               	movwf	tblptrh,c
 34772  013F4C                     	if	1	;There are 3 active tblptr bytes
 34773  013F4C  6AF8               	clrf	tblptru,c
 34774  013F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 34775  013F50  22F8               	addwfc	tblptru,f,c
 34776  013F52                     	endif
 34777  013F52  0009               	tblrd		*+
 34778  013F54  CFF5 F030          	movff	tablat,i2___flmul@b
 34779  013F58  0009               	tblrd		*+
 34780  013F5A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 34781  013F5E  0009               	tblrd		*+
 34782  013F60  CFF5 F032          	movff	tablat,i2___flmul@b+2
 34783  013F64  000A               	tblrd		*-
 34784  013F66  CFF5 F033          	movff	tablat,i2___flmul@b+3
 34785  013F6A  0E00               	movlw	0
 34786  013F6C  6E04               	movwf	i2___awmod@divisor+1,c
 34787  013F6E  0E0A               	movlw	10
 34788  013F70  6E03               	movwf	i2___awmod@divisor,c
 34789  013F72  5051               	movf	i2scale@scl,w,c
 34790  013F74  6E01               	movwf	i2___awmod@dividend,c
 34791  013F76  6A02               	clrf	i2___awmod@dividend+1,c
 34792  013F78  BE01               	btfsc	i2___awmod@dividend,7,c
 34793  013F7A  0602               	decf	i2___awmod@dividend+1,f,c
 34794  013F7C  ECC6  F0C2         	call	i2___awmod	;wreg free
 34795  013F80  90D8               	bcf	status,0,c
 34796  013F82  3601               	rlcf	?i2___awmod,f,c
 34797  013F84  3602               	rlcf	?i2___awmod+1,f,c
 34798  013F86  90D8               	bcf	status,0,c
 34799  013F88  3601               	rlcf	?i2___awmod,f,c
 34800  013F8A  3602               	rlcf	?i2___awmod+1,f,c
 34801  013F8C  0E77               	movlw	low __npowers_
 34802  013F8E  2401               	addwf	?i2___awmod,w,c
 34803  013F90  6EF6               	movwf	tblptrl,c
 34804  013F92  0ED8               	movlw	high __npowers_
 34805  013F94  2002               	addwfc	?i2___awmod+1,w,c
 34806  013F96  6EF7               	movwf	tblptrh,c
 34807  013F98                     	if	1	;There are 3 active tblptr bytes
 34808  013F98  6AF8               	clrf	tblptru,c
 34809  013F9A  0E00               	movlw	low (__mediumconst shr (0+16))
 34810  013F9C  22F8               	addwfc	tblptru,f,c
 34811  013F9E                     	endif
 34812  013F9E  0009               	tblrd		*+
 34813  013FA0  CFF5 F034          	movff	tablat,i2___flmul@a
 34814  013FA4  0009               	tblrd		*+
 34815  013FA6  CFF5 F035          	movff	tablat,i2___flmul@a+1
 34816  013FAA  0009               	tblrd		*+
 34817  013FAC  CFF5 F036          	movff	tablat,i2___flmul@a+2
 34818  013FB0  000A               	tblrd		*-
 34819  013FB2  CFF5 F037          	movff	tablat,i2___flmul@a+3
 34820  013FB6  EC79  F0A4         	call	i2___flmul	;wreg free
 34821  013FBA  C030  F049         	movff	?i2___flmul,?i2_scale
 34822  013FBE  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 34823  013FC2  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 34824  013FC6  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 34825  013FCA  0012               	return	
 34826  013FCC                     i2l1462:
 34827                           
 34828                           ;doprnt.c: 434: return _npowers_[scl];
 34829  013FCC  5051               	movf	i2scale@scl,w,c
 34830  013FCE  0D04               	mullw	4
 34831  013FD0  0E77               	movlw	low __npowers_
 34832  013FD2  24F3               	addwf	prodl,w,c
 34833  013FD4  6EF6               	movwf	tblptrl,c
 34834  013FD6  0ED8               	movlw	high __npowers_
 34835  013FD8  20F4               	addwfc	prodh,w,c
 34836  013FDA  6EF7               	movwf	tblptrh,c
 34837  013FDC                     	if	1	;There are 3 active tblptr bytes
 34838  013FDC  6AF8               	clrf	tblptru,c
 34839  013FDE  0E00               	movlw	low (__mediumconst shr (0+16))
 34840  013FE0  22F8               	addwfc	tblptru,f,c
 34841  013FE2                     	endif
 34842  013FE2  0009               	tblrd		*+
 34843  013FE4  CFF5 F049          	movff	tablat,?i2_scale
 34844  013FE8  0009               	tblrd		*+
 34845  013FEA  CFF5 F04A          	movff	tablat,?i2_scale+1
 34846  013FEE  0009               	tblrd		*+
 34847  013FF0  CFF5 F04B          	movff	tablat,?i2_scale+2
 34848  013FF4  000A               	tblrd		*-
 34849  013FF6  CFF5 F04C          	movff	tablat,?i2_scale+3
 34850  013FFA  0012               	return	
 34851  013FFC                     i2l1458:
 34852                           
 34853                           ;doprnt.c: 435: }
 34854                           ;doprnt.c: 436: if(scl>=110)
 34855  013FFC  5051               	movf	i2scale@scl,w,c
 34856  013FFE  0A80               	xorlw	128
 34857  014000  0F12               	addlw	-238
 34858  014002  A0D8               	btfss	status,0,c
 34859  014004  D0A1               	goto	i2l1463
 34860                           
 34861                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 34862  014006  0E00               	movlw	0
 34863  014008  6E0A               	movwf	i2___awdiv@divisor+1,c
 34864  01400A  0E0A               	movlw	10
 34865  01400C  6E09               	movwf	i2___awdiv@divisor,c
 34866  01400E  0E00               	movlw	0
 34867  014010  6E04               	movwf	i2___awmod@divisor+1,c
 34868  014012  0E64               	movlw	100
 34869  014014  6E03               	movwf	i2___awmod@divisor,c
 34870  014016  5051               	movf	i2scale@scl,w,c
 34871  014018  6E01               	movwf	i2___awmod@dividend,c
 34872  01401A  6A02               	clrf	i2___awmod@dividend+1,c
 34873  01401C  BE01               	btfsc	i2___awmod@dividend,7,c
 34874  01401E  0602               	decf	i2___awmod@dividend+1,f,c
 34875  014020  ECC6  F0C2         	call	i2___awmod	;wreg free
 34876  014024  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 34877  014028  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 34878  01402C  EC8F  F0C1         	call	i2___awdiv	;wreg free
 34879  014030  90D8               	bcf	status,0,c
 34880  014032  3607               	rlcf	?i2___awdiv,f,c
 34881  014034  3608               	rlcf	?i2___awdiv+1,f,c
 34882  014036  90D8               	bcf	status,0,c
 34883  014038  3607               	rlcf	?i2___awdiv,f,c
 34884  01403A  3608               	rlcf	?i2___awdiv+1,f,c
 34885  01403C  0E24               	movlw	36
 34886  01403E  2607               	addwf	?i2___awdiv,f,c
 34887  014040  0E00               	movlw	0
 34888  014042  2208               	addwfc	?i2___awdiv+1,f,c
 34889  014044  0E43               	movlw	low __powers_
 34890  014046  2407               	addwf	?i2___awdiv,w,c
 34891  014048  6EF6               	movwf	tblptrl,c
 34892  01404A  0ED8               	movlw	high __powers_
 34893  01404C  2008               	addwfc	?i2___awdiv+1,w,c
 34894  01404E  6EF7               	movwf	tblptrh,c
 34895  014050                     	if	1	;There are 3 active tblptr bytes
 34896  014050  6AF8               	clrf	tblptru,c
 34897  014052  0E00               	movlw	low (__mediumconst shr (0+16))
 34898  014054  22F8               	addwfc	tblptru,f,c
 34899  014056                     	endif
 34900  014056  0009               	tblrd		*+
 34901  014058  CFF5 F034          	movff	tablat,i2___flmul@a
 34902  01405C  0009               	tblrd		*+
 34903  01405E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 34904  014062  0009               	tblrd		*+
 34905  014064  CFF5 F036          	movff	tablat,i2___flmul@a+2
 34906  014068  000A               	tblrd		*-
 34907  01406A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 34908  01406E  0E00               	movlw	0
 34909  014070  6E0A               	movwf	i2___awdiv@divisor+1,c
 34910  014072  0E64               	movlw	100
 34911  014074  6E09               	movwf	i2___awdiv@divisor,c
 34912  014076  5051               	movf	i2scale@scl,w,c
 34913  014078  6E07               	movwf	i2___awdiv@dividend,c
 34914  01407A  6A08               	clrf	i2___awdiv@dividend+1,c
 34915  01407C  BE07               	btfsc	i2___awdiv@dividend,7,c
 34916  01407E  0608               	decf	i2___awdiv@dividend+1,f,c
 34917  014080  EC8F  F0C1         	call	i2___awdiv	;wreg free
 34918  014084  90D8               	bcf	status,0,c
 34919  014086  3607               	rlcf	?i2___awdiv,f,c
 34920  014088  3608               	rlcf	?i2___awdiv+1,f,c
 34921  01408A  90D8               	bcf	status,0,c
 34922  01408C  3607               	rlcf	?i2___awdiv,f,c
 34923  01408E  3608               	rlcf	?i2___awdiv+1,f,c
 34924  014090  0E48               	movlw	72
 34925  014092  2607               	addwf	?i2___awdiv,f,c
 34926  014094  0E00               	movlw	0
 34927  014096  2208               	addwfc	?i2___awdiv+1,f,c
 34928  014098  0E43               	movlw	low __powers_
 34929  01409A  2407               	addwf	?i2___awdiv,w,c
 34930  01409C  6EF6               	movwf	tblptrl,c
 34931  01409E  0ED8               	movlw	high __powers_
 34932  0140A0  2008               	addwfc	?i2___awdiv+1,w,c
 34933  0140A2  6EF7               	movwf	tblptrh,c
 34934  0140A4                     	if	1	;There are 3 active tblptr bytes
 34935  0140A4  6AF8               	clrf	tblptru,c
 34936  0140A6  0E00               	movlw	low (__mediumconst shr (0+16))
 34937  0140A8  22F8               	addwfc	tblptru,f,c
 34938  0140AA                     	endif
 34939  0140AA  0009               	tblrd		*+
 34940  0140AC  CFF5 F030          	movff	tablat,i2___flmul@b
 34941  0140B0  0009               	tblrd		*+
 34942  0140B2  CFF5 F031          	movff	tablat,i2___flmul@b+1
 34943  0140B6  0009               	tblrd		*+
 34944  0140B8  CFF5 F032          	movff	tablat,i2___flmul@b+2
 34945  0140BC  000A               	tblrd		*-
 34946  0140BE  CFF5 F033          	movff	tablat,i2___flmul@b+3
 34947  0140C2  EC79  F0A4         	call	i2___flmul	;wreg free
 34948  0140C6  C030  F04D         	movff	?i2___flmul,i2_scale$4193
 34949  0140CA  C031  F04E         	movff	?i2___flmul+1,i2_scale$4193+1
 34950  0140CE  C032  F04F         	movff	?i2___flmul+2,i2_scale$4193+2
 34951  0140D2  C033  F050         	movff	?i2___flmul+3,i2_scale$4193+3
 34952                           
 34953                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 34954  0140D6  C04D  F030         	movff	i2_scale$4193,i2___flmul@b
 34955  0140DA  C04E  F031         	movff	i2_scale$4193+1,i2___flmul@b+1
 34956  0140DE  C04F  F032         	movff	i2_scale$4193+2,i2___flmul@b+2
 34957  0140E2  C050  F033         	movff	i2_scale$4193+3,i2___flmul@b+3
 34958  0140E6  0E00               	movlw	0
 34959  0140E8  6E04               	movwf	i2___awmod@divisor+1,c
 34960  0140EA  0E0A               	movlw	10
 34961  0140EC  6E03               	movwf	i2___awmod@divisor,c
 34962  0140EE  5051               	movf	i2scale@scl,w,c
 34963  0140F0  6E01               	movwf	i2___awmod@dividend,c
 34964  0140F2  6A02               	clrf	i2___awmod@dividend+1,c
 34965  0140F4  BE01               	btfsc	i2___awmod@dividend,7,c
 34966  0140F6  0602               	decf	i2___awmod@dividend+1,f,c
 34967  0140F8  ECC6  F0C2         	call	i2___awmod	;wreg free
 34968  0140FC  90D8               	bcf	status,0,c
 34969  0140FE  3601               	rlcf	?i2___awmod,f,c
 34970  014100  3602               	rlcf	?i2___awmod+1,f,c
 34971  014102  90D8               	bcf	status,0,c
 34972  014104  3601               	rlcf	?i2___awmod,f,c
 34973  014106  3602               	rlcf	?i2___awmod+1,f,c
 34974  014108  0E43               	movlw	low __powers_
 34975  01410A  2401               	addwf	?i2___awmod,w,c
 34976  01410C  6EF6               	movwf	tblptrl,c
 34977  01410E  0ED8               	movlw	high __powers_
 34978  014110  2002               	addwfc	?i2___awmod+1,w,c
 34979  014112  6EF7               	movwf	tblptrh,c
 34980  014114                     	if	1	;There are 3 active tblptr bytes
 34981  014114  6AF8               	clrf	tblptru,c
 34982  014116  0E00               	movlw	low (__mediumconst shr (0+16))
 34983  014118  22F8               	addwfc	tblptru,f,c
 34984  01411A                     	endif
 34985  01411A  0009               	tblrd		*+
 34986  01411C  CFF5 F034          	movff	tablat,i2___flmul@a
 34987  014120  0009               	tblrd		*+
 34988  014122  CFF5 F035          	movff	tablat,i2___flmul@a+1
 34989  014126  0009               	tblrd		*+
 34990  014128  CFF5 F036          	movff	tablat,i2___flmul@a+2
 34991  01412C  000A               	tblrd		*-
 34992  01412E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 34993  014132  EC79  F0A4         	call	i2___flmul	;wreg free
 34994  014136  C030  F049         	movff	?i2___flmul,?i2_scale
 34995  01413A  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 34996  01413E  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 34997  014142  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 34998  014146  0012               	return	
 34999  014148                     i2l1463:
 35000                           
 35001                           ;doprnt.c: 438: else if(scl > 10)
 35002  014148  5051               	movf	i2scale@scl,w,c
 35003  01414A  0A80               	xorlw	128
 35004  01414C  0F75               	addlw	-139
 35005  01414E  A0D8               	btfss	status,0,c
 35006  014150  D05B               	goto	i2l1465
 35007                           
 35008                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 35009  014152  0E00               	movlw	0
 35010  014154  6E0A               	movwf	i2___awdiv@divisor+1,c
 35011  014156  0E0A               	movlw	10
 35012  014158  6E09               	movwf	i2___awdiv@divisor,c
 35013  01415A  5051               	movf	i2scale@scl,w,c
 35014  01415C  6E07               	movwf	i2___awdiv@dividend,c
 35015  01415E  6A08               	clrf	i2___awdiv@dividend+1,c
 35016  014160  BE07               	btfsc	i2___awdiv@dividend,7,c
 35017  014162  0608               	decf	i2___awdiv@dividend+1,f,c
 35018  014164  EC8F  F0C1         	call	i2___awdiv	;wreg free
 35019  014168  90D8               	bcf	status,0,c
 35020  01416A  3607               	rlcf	?i2___awdiv,f,c
 35021  01416C  3608               	rlcf	?i2___awdiv+1,f,c
 35022  01416E  90D8               	bcf	status,0,c
 35023  014170  3607               	rlcf	?i2___awdiv,f,c
 35024  014172  3608               	rlcf	?i2___awdiv+1,f,c
 35025  014174  0E24               	movlw	36
 35026  014176  2607               	addwf	?i2___awdiv,f,c
 35027  014178  0E00               	movlw	0
 35028  01417A  2208               	addwfc	?i2___awdiv+1,f,c
 35029  01417C  0E43               	movlw	low __powers_
 35030  01417E  2407               	addwf	?i2___awdiv,w,c
 35031  014180  6EF6               	movwf	tblptrl,c
 35032  014182  0ED8               	movlw	high __powers_
 35033  014184  2008               	addwfc	?i2___awdiv+1,w,c
 35034  014186  6EF7               	movwf	tblptrh,c
 35035  014188                     	if	1	;There are 3 active tblptr bytes
 35036  014188  6AF8               	clrf	tblptru,c
 35037  01418A  0E00               	movlw	low (__mediumconst shr (0+16))
 35038  01418C  22F8               	addwfc	tblptru,f,c
 35039  01418E                     	endif
 35040  01418E  0009               	tblrd		*+
 35041  014190  CFF5 F030          	movff	tablat,i2___flmul@b
 35042  014194  0009               	tblrd		*+
 35043  014196  CFF5 F031          	movff	tablat,i2___flmul@b+1
 35044  01419A  0009               	tblrd		*+
 35045  01419C  CFF5 F032          	movff	tablat,i2___flmul@b+2
 35046  0141A0  000A               	tblrd		*-
 35047  0141A2  CFF5 F033          	movff	tablat,i2___flmul@b+3
 35048  0141A6  0E00               	movlw	0
 35049  0141A8  6E04               	movwf	i2___awmod@divisor+1,c
 35050  0141AA  0E0A               	movlw	10
 35051  0141AC  6E03               	movwf	i2___awmod@divisor,c
 35052  0141AE  5051               	movf	i2scale@scl,w,c
 35053  0141B0  6E01               	movwf	i2___awmod@dividend,c
 35054  0141B2  6A02               	clrf	i2___awmod@dividend+1,c
 35055  0141B4  BE01               	btfsc	i2___awmod@dividend,7,c
 35056  0141B6  0602               	decf	i2___awmod@dividend+1,f,c
 35057  0141B8  ECC6  F0C2         	call	i2___awmod	;wreg free
 35058  0141BC  90D8               	bcf	status,0,c
 35059  0141BE  3601               	rlcf	?i2___awmod,f,c
 35060  0141C0  3602               	rlcf	?i2___awmod+1,f,c
 35061  0141C2  90D8               	bcf	status,0,c
 35062  0141C4  3601               	rlcf	?i2___awmod,f,c
 35063  0141C6  3602               	rlcf	?i2___awmod+1,f,c
 35064  0141C8  0E43               	movlw	low __powers_
 35065  0141CA  2401               	addwf	?i2___awmod,w,c
 35066  0141CC  6EF6               	movwf	tblptrl,c
 35067  0141CE  0ED8               	movlw	high __powers_
 35068  0141D0  2002               	addwfc	?i2___awmod+1,w,c
 35069  0141D2  6EF7               	movwf	tblptrh,c
 35070  0141D4                     	if	1	;There are 3 active tblptr bytes
 35071  0141D4  6AF8               	clrf	tblptru,c
 35072  0141D6  0E00               	movlw	low (__mediumconst shr (0+16))
 35073  0141D8  22F8               	addwfc	tblptru,f,c
 35074  0141DA                     	endif
 35075  0141DA  0009               	tblrd		*+
 35076  0141DC  CFF5 F034          	movff	tablat,i2___flmul@a
 35077  0141E0  0009               	tblrd		*+
 35078  0141E2  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35079  0141E6  0009               	tblrd		*+
 35080  0141E8  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35081  0141EC  000A               	tblrd		*-
 35082  0141EE  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35083  0141F2  EC79  F0A4         	call	i2___flmul	;wreg free
 35084  0141F6  C030  F049         	movff	?i2___flmul,?i2_scale
 35085  0141FA  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 35086  0141FE  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 35087  014202  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 35088  014206  0012               	return	
 35089  014208                     i2l1465:
 35090                           
 35091                           ;doprnt.c: 440: return _powers_[scl];
 35092  014208  5051               	movf	i2scale@scl,w,c
 35093  01420A  0D04               	mullw	4
 35094  01420C  0E43               	movlw	low __powers_
 35095  01420E  24F3               	addwf	prodl,w,c
 35096  014210  6EF6               	movwf	tblptrl,c
 35097  014212  0ED8               	movlw	high __powers_
 35098  014214  20F4               	addwfc	prodh,w,c
 35099  014216  6EF7               	movwf	tblptrh,c
 35100  014218                     	if	1	;There are 3 active tblptr bytes
 35101  014218  6AF8               	clrf	tblptru,c
 35102  01421A  0E00               	movlw	low (__mediumconst shr (0+16))
 35103  01421C  22F8               	addwfc	tblptru,f,c
 35104  01421E                     	endif
 35105  01421E  0009               	tblrd		*+
 35106  014220  CFF5 F049          	movff	tablat,?i2_scale
 35107  014224  0009               	tblrd		*+
 35108  014226  CFF5 F04A          	movff	tablat,?i2_scale+1
 35109  01422A  0009               	tblrd		*+
 35110  01422C  CFF5 F04B          	movff	tablat,?i2_scale+2
 35111  014230  000A               	tblrd		*-
 35112  014232  CFF5 F04C          	movff	tablat,?i2_scale+3
 35113  014236  0012               	return	
 35114  014238                     __end_ofi2_scale:
 35115                           	opt stack 0
 35116                           tosu	equ	0xFFF
 35117                           tosh	equ	0xFFE
 35118                           tosl	equ	0xFFD
 35119                           pclatu	equ	0xFFB
 35120                           pclath	equ	0xFFA
 35121                           tblptru	equ	0xFF8
 35122                           tblptrh	equ	0xFF7
 35123                           tblptrl	equ	0xFF6
 35124                           tablat	equ	0xFF5
 35125                           prodh	equ	0xFF4
 35126                           prodl	equ	0xFF3
 35127                           intcon	equ	0xFF2
 35128                           indf0	equ	0xFEF
 35129                           postinc0	equ	0xFEE
 35130                           fsr0h	equ	0xFEA
 35131                           fsr0l	equ	0xFE9
 35132                           wreg	equ	0xFE8
 35133                           indf1	equ	0xFE7
 35134                           postdec1	equ	0xFE5
 35135                           plusw1	equ	0xFE3
 35136                           fsr1h	equ	0xFE2
 35137                           fsr1l	equ	0xFE1
 35138                           bsr	equ	0xFE0
 35139                           indf2	equ	0xFDF
 35140                           postinc2	equ	0xFDE
 35141                           postdec2	equ	0xFDD
 35142                           plusw2	equ	0xFDB
 35143                           fsr2h	equ	0xFDA
 35144                           fsr2l	equ	0xFD9
 35145                           status	equ	0xFD8
 35146                           
 35147 ;; *************** function i2_putch *****************
 35148 ;; Defined at:
 35149 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 35150 ;; Parameters:    Size  Location     Type
 35151 ;;  txData          1    wreg     unsigned char 
 35152 ;; Auto vars:     Size  Location     Type
 35153 ;;  txData          1    1[COMRAM] unsigned char 
 35154 ;; Return value:  Size  Location     Type
 35155 ;;                  1    wreg      void 
 35156 ;; Registers used:
 35157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35158 ;; Tracked objects:
 35159 ;;		On entry : 0/0
 35160 ;;		On exit  : 0/0
 35161 ;;		Unchanged: 0/0
 35162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35167 ;;Total ram usage:        1 bytes
 35168 ;; Hardware stack levels used:    1
 35169 ;; Hardware stack levels required when called:    1
 35170 ;; This function calls:
 35171 ;;		i2_EUSART2_Write
 35172 ;; This function is called by:
 35173 ;;		i2_printf
 35174 ;; This function uses a non-reentrant model
 35175 ;;
 35176                           
 35177                           	psect	text93
 35178  01936A                     __ptext93:
 35179                           	opt stack 0
 35180  01936A                     i2_putch:
 35181                           	opt stack 15
 35182                           
 35183                           ;incstack = 0
 35184                           ;i2putch@txData stored from wreg
 35185  01936A  6E02               	movwf	i2putch@txData,c
 35186                           
 35187                           ;eusart2.c: 195: EUSART2_Write(txData);
 35188  01936C  5002               	movf	i2putch@txData,w,c
 35189  01936E  ECCB  F0C5         	call	i2_EUSART2_Write
 35190  019372  0012               	return		;funcret
 35191  019374                     __end_ofi2_putch:
 35192                           	opt stack 0
 35193                           tosu	equ	0xFFF
 35194                           tosh	equ	0xFFE
 35195                           tosl	equ	0xFFD
 35196                           pclatu	equ	0xFFB
 35197                           pclath	equ	0xFFA
 35198                           tblptru	equ	0xFF8
 35199                           tblptrh	equ	0xFF7
 35200                           tblptrl	equ	0xFF6
 35201                           tablat	equ	0xFF5
 35202                           prodh	equ	0xFF4
 35203                           prodl	equ	0xFF3
 35204                           intcon	equ	0xFF2
 35205                           indf0	equ	0xFEF
 35206                           postinc0	equ	0xFEE
 35207                           fsr0h	equ	0xFEA
 35208                           fsr0l	equ	0xFE9
 35209                           wreg	equ	0xFE8
 35210                           indf1	equ	0xFE7
 35211                           postdec1	equ	0xFE5
 35212                           plusw1	equ	0xFE3
 35213                           fsr1h	equ	0xFE2
 35214                           fsr1l	equ	0xFE1
 35215                           bsr	equ	0xFE0
 35216                           indf2	equ	0xFDF
 35217                           postinc2	equ	0xFDE
 35218                           postdec2	equ	0xFDD
 35219                           plusw2	equ	0xFDB
 35220                           fsr2h	equ	0xFDA
 35221                           fsr2l	equ	0xFD9
 35222                           status	equ	0xFD8
 35223                           
 35224 ;; *************** function i2_EUSART2_Write *****************
 35225 ;; Defined at:
 35226 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 35227 ;; Parameters:    Size  Location     Type
 35228 ;;  txData          1    wreg     unsigned char 
 35229 ;; Auto vars:     Size  Location     Type
 35230 ;;  txData          1    0[COMRAM] unsigned char 
 35231 ;; Return value:  Size  Location     Type
 35232 ;;                  1    wreg      void 
 35233 ;; Registers used:
 35234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35235 ;; Tracked objects:
 35236 ;;		On entry : 0/0
 35237 ;;		On exit  : 0/0
 35238 ;;		Unchanged: 0/0
 35239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35244 ;;Total ram usage:        1 bytes
 35245 ;; Hardware stack levels used:    1
 35246 ;; This function calls:
 35247 ;;		Nothing
 35248 ;; This function is called by:
 35249 ;;		i2_putch
 35250 ;; This function uses a non-reentrant model
 35251 ;;
 35252                           
 35253                           	psect	text94
 35254  018B96                     __ptext94:
 35255                           	opt stack 0
 35256  018B96                     i2_EUSART2_Write:
 35257                           	opt stack 15
 35258                           
 35259                           ;incstack = 0
 35260                           ;i2EUSART2_Write@txData stored from wreg
 35261  018B96  6E01               	movwf	i2EUSART2_Write@txData,c
 35262                           
 35263                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 35264  018B98  D002               	goto	i2l388
 35265  018B9A                     i2l389:
 35266                           
 35267                           ; BSR set to: 1
 35268  018B9A  0004               	clrwdt		;# 
 35269                           
 35270                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 35271  018B9C  827E               	bsf	3966,1,c	;volatile
 35272  018B9E                     i2l388:
 35273  018B9E  0101               	movlb	1	; () banked
 35274  018BA0  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 35275  018BA2  B4D8               	btfsc	status,2,c
 35276  018BA4  D7FA               	goto	i2l389
 35277                           
 35278                           ; BSR set to: 1
 35279                           ;eusart2.c: 167: }
 35280                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 35281  018BA6  927E               	bcf	3966,1,c	;volatile
 35282                           
 35283                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 35284  018BA8  010E               	movlb	14	; () banked
 35285  018BAA  BD2C               	btfsc	44,6,b	;volatile
 35286  018BAC  D003               	goto	i2l391
 35287                           
 35288                           ; BSR set to: 14
 35289                           ;eusart2.c: 172: {
 35290                           ;eusart2.c: 173: TX2REG = txData;
 35291  018BAE  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 35292                           
 35293                           ;eusart2.c: 174: }
 35294  018BB2  D013               	goto	i2l392
 35295  018BB4                     i2l391:
 35296                           
 35297                           ; BSR set to: 14
 35298                           ;eusart2.c: 175: else
 35299                           ;eusart2.c: 176: {
 35300                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 35301  018BB4  9D2C               	bcf	44,6,b	;volatile
 35302                           
 35303                           ; BSR set to: 14
 35304                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 35305  018BB6  0101               	movlb	1	; () banked
 35306  018BB8  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 35307  018BBA  0D01               	mullw	1
 35308  018BBC  0E00               	movlw	low _eusart2TxBuffer
 35309  018BBE  24F3               	addwf	prodl,w,c
 35310  018BC0  6ED9               	movwf	fsr2l,c
 35311  018BC2  0E03               	movlw	high _eusart2TxBuffer
 35312  018BC4  20F4               	addwfc	prodh,w,c
 35313  018BC6  6EDA               	movwf	fsr2h,c
 35314  018BC8  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 35315                           
 35316                           ; BSR set to: 1
 35317  018BCC  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 35318                           
 35319                           ; BSR set to: 1
 35320                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 35321  018BCE  0E7F               	movlw	127
 35322  018BD0  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 35323  018BD2  D002               	goto	i2l393
 35324                           
 35325                           ; BSR set to: 1
 35326                           ;eusart2.c: 180: {
 35327                           ;eusart2.c: 181: eusart2TxHead = 0;
 35328  018BD4  0E00               	movlw	0
 35329  018BD6  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 35330  018BD8                     i2l393:
 35331                           
 35332                           ; BSR set to: 1
 35333                           ;eusart2.c: 182: }
 35334                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 35335                           
 35336                           ; BSR set to: 1
 35337  018BD8  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 35338  018BDA                     i2l392:
 35339                           
 35340                           ;eusart2.c: 184: }
 35341                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 35342                           
 35343                           ; BSR set to: 1
 35344  018BDA  010E               	movlb	14	; () banked
 35345  018BDC  8D2C               	bsf	44,6,b	;volatile
 35346                           
 35347                           ; BSR set to: 14
 35348  018BDE  0012               	return		;funcret
 35349  018BE0                     __end_ofi2_EUSART2_Write:
 35350                           	opt stack 0
 35351                           tosu	equ	0xFFF
 35352                           tosh	equ	0xFFE
 35353                           tosl	equ	0xFFD
 35354                           pclatu	equ	0xFFB
 35355                           pclath	equ	0xFFA
 35356                           tblptru	equ	0xFF8
 35357                           tblptrh	equ	0xFF7
 35358                           tblptrl	equ	0xFF6
 35359                           tablat	equ	0xFF5
 35360                           prodh	equ	0xFF4
 35361                           prodl	equ	0xFF3
 35362                           intcon	equ	0xFF2
 35363                           indf0	equ	0xFEF
 35364                           postinc0	equ	0xFEE
 35365                           fsr0h	equ	0xFEA
 35366                           fsr0l	equ	0xFE9
 35367                           wreg	equ	0xFE8
 35368                           indf1	equ	0xFE7
 35369                           postdec1	equ	0xFE5
 35370                           plusw1	equ	0xFE3
 35371                           fsr1h	equ	0xFE2
 35372                           fsr1l	equ	0xFE1
 35373                           bsr	equ	0xFE0
 35374                           indf2	equ	0xFDF
 35375                           postinc2	equ	0xFDE
 35376                           postdec2	equ	0xFDD
 35377                           plusw2	equ	0xFDB
 35378                           fsr2h	equ	0xFDA
 35379                           fsr2l	equ	0xFD9
 35380                           status	equ	0xFD8
 35381                           
 35382 ;; *************** function i2_isdigit *****************
 35383 ;; Defined at:
 35384 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 35385 ;; Parameters:    Size  Location     Type
 35386 ;;  c               1    wreg     unsigned char 
 35387 ;; Auto vars:     Size  Location     Type
 35388 ;;  c               1    2[COMRAM] unsigned char 
 35389 ;; Return value:  Size  Location     Type
 35390 ;;		None               void
 35391 ;; Registers used:
 35392 ;;		wreg, status,2, status,0
 35393 ;; Tracked objects:
 35394 ;;		On entry : 0/0
 35395 ;;		On exit  : 0/0
 35396 ;;		Unchanged: 0/0
 35397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35401 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35402 ;;Total ram usage:        3 bytes
 35403 ;; Hardware stack levels used:    1
 35404 ;; This function calls:
 35405 ;;		Nothing
 35406 ;; This function is called by:
 35407 ;;		i2_printf
 35408 ;; This function uses a non-reentrant model
 35409 ;;
 35410                           
 35411                           	psect	text95
 35412  0191A8                     __ptext95:
 35413                           	opt stack 0
 35414  0191A8                     i2_isdigit:
 35415                           	opt stack 16
 35416                           
 35417                           ; BSR set to: 14
 35418                           ;incstack = 0
 35419                           ;i2isdigit@c stored from wreg
 35420  0191A8  6E03               	movwf	i2isdigit@c,c
 35421  0191AA  0E00               	movlw	0
 35422  0191AC  6E02               	movwf	i2_isdigit$3272,c
 35423  0191AE  0E3A               	movlw	58
 35424  0191B0  6003               	cpfslt	i2isdigit@c,c
 35425  0191B2  D005               	goto	i2l2036
 35426  0191B4  0E2F               	movlw	47
 35427  0191B6  6403               	cpfsgt	i2isdigit@c,c
 35428  0191B8  D002               	goto	i2l2036
 35429  0191BA  0E01               	movlw	1
 35430  0191BC  6E02               	movwf	i2_isdigit$3272,c
 35431  0191BE                     i2l2036:
 35432  0191BE  C002  F001         	movff	i2_isdigit$3272,??i2_isdigit
 35433  0191C2  3001               	rrcf	??i2_isdigit,w,c
 35434  0191C4  0012               	return	
 35435  0191C6                     __end_ofi2_isdigit:
 35436                           	opt stack 0
 35437                           tosu	equ	0xFFF
 35438                           tosh	equ	0xFFE
 35439                           tosl	equ	0xFFD
 35440                           pclatu	equ	0xFFB
 35441                           pclath	equ	0xFFA
 35442                           tblptru	equ	0xFF8
 35443                           tblptrh	equ	0xFF7
 35444                           tblptrl	equ	0xFF6
 35445                           tablat	equ	0xFF5
 35446                           prodh	equ	0xFF4
 35447                           prodl	equ	0xFF3
 35448                           intcon	equ	0xFF2
 35449                           indf0	equ	0xFEF
 35450                           postinc0	equ	0xFEE
 35451                           fsr0h	equ	0xFEA
 35452                           fsr0l	equ	0xFE9
 35453                           wreg	equ	0xFE8
 35454                           indf1	equ	0xFE7
 35455                           postdec1	equ	0xFE5
 35456                           plusw1	equ	0xFE3
 35457                           fsr1h	equ	0xFE2
 35458                           fsr1l	equ	0xFE1
 35459                           bsr	equ	0xFE0
 35460                           indf2	equ	0xFDF
 35461                           postinc2	equ	0xFDE
 35462                           postdec2	equ	0xFDD
 35463                           plusw2	equ	0xFDB
 35464                           fsr2h	equ	0xFDA
 35465                           fsr2l	equ	0xFD9
 35466                           status	equ	0xFD8
 35467                           
 35468 ;; *************** function i2_fround *****************
 35469 ;; Defined at:
 35470 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 35471 ;; Parameters:    Size  Location     Type
 35472 ;;  prec            1    wreg     unsigned char 
 35473 ;; Auto vars:     Size  Location     Type
 35474 ;;  prec            1   84[COMRAM] unsigned char 
 35475 ;; Return value:  Size  Location     Type
 35476 ;;                  4   72[COMRAM] unsigned char 
 35477 ;; Registers used:
 35478 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35479 ;; Tracked objects:
 35480 ;;		On entry : 0/0
 35481 ;;		On exit  : 0/0
 35482 ;;		Unchanged: 0/0
 35483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35485 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35487 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35488 ;;Total ram usage:       13 bytes
 35489 ;; Hardware stack levels used:    1
 35490 ;; Hardware stack levels required when called:    1
 35491 ;; This function calls:
 35492 ;;		i2___awdiv
 35493 ;;		i2___awmod
 35494 ;;		i2___flmul
 35495 ;; This function is called by:
 35496 ;;		i2_printf
 35497 ;; This function uses a non-reentrant model
 35498 ;;
 35499                           
 35500                           	psect	text96
 35501  0163B4                     __ptext96:
 35502                           	opt stack 0
 35503  0163B4                     i2_fround:
 35504                           	opt stack 15
 35505                           
 35506                           ;incstack = 0
 35507                           ;i2fround@prec stored from wreg
 35508  0163B4  6E55               	movwf	i2fround@prec,c
 35509                           
 35510                           ;doprnt.c: 413: if(prec>=110)
 35511  0163B6  0E6D               	movlw	109
 35512  0163B8  6455               	cpfsgt	i2fround@prec,c
 35513  0163BA  D0B5               	goto	i2l1452
 35514                           
 35515                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 35516  0163BC  0E00               	movlw	0
 35517  0163BE  6E0A               	movwf	i2___awdiv@divisor+1,c
 35518  0163C0  0E0A               	movlw	10
 35519  0163C2  6E09               	movwf	i2___awdiv@divisor,c
 35520  0163C4  0E00               	movlw	0
 35521  0163C6  6E04               	movwf	i2___awmod@divisor+1,c
 35522  0163C8  0E64               	movlw	100
 35523  0163CA  6E03               	movwf	i2___awmod@divisor,c
 35524  0163CC  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 35525  0163D0  6A02               	clrf	i2___awmod@dividend+1,c
 35526  0163D2  ECC6  F0C2         	call	i2___awmod	;wreg free
 35527  0163D6  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 35528  0163DA  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 35529  0163DE  EC8F  F0C1         	call	i2___awdiv	;wreg free
 35530  0163E2  90D8               	bcf	status,0,c
 35531  0163E4  3607               	rlcf	?i2___awdiv,f,c
 35532  0163E6  3608               	rlcf	?i2___awdiv+1,f,c
 35533  0163E8  90D8               	bcf	status,0,c
 35534  0163EA  3607               	rlcf	?i2___awdiv,f,c
 35535  0163EC  3608               	rlcf	?i2___awdiv+1,f,c
 35536  0163EE  0E24               	movlw	36
 35537  0163F0  2607               	addwf	?i2___awdiv,f,c
 35538  0163F2  0E00               	movlw	0
 35539  0163F4  2208               	addwfc	?i2___awdiv+1,f,c
 35540  0163F6  0E77               	movlw	low __npowers_
 35541  0163F8  2407               	addwf	?i2___awdiv,w,c
 35542  0163FA  6EF6               	movwf	tblptrl,c
 35543  0163FC  0ED8               	movlw	high __npowers_
 35544  0163FE  2008               	addwfc	?i2___awdiv+1,w,c
 35545  016400  6EF7               	movwf	tblptrh,c
 35546  016402                     	if	1	;There are 3 active tblptr bytes
 35547  016402  6AF8               	clrf	tblptru,c
 35548  016404  0E00               	movlw	low (__mediumconst shr (0+16))
 35549  016406  22F8               	addwfc	tblptru,f,c
 35550  016408                     	endif
 35551  016408  0009               	tblrd		*+
 35552  01640A  CFF5 F034          	movff	tablat,i2___flmul@a
 35553  01640E  0009               	tblrd		*+
 35554  016410  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35555  016414  0009               	tblrd		*+
 35556  016416  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35557  01641A  000A               	tblrd		*-
 35558  01641C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35559  016420  0E00               	movlw	0
 35560  016422  6E0A               	movwf	i2___awdiv@divisor+1,c
 35561  016424  0E64               	movlw	100
 35562  016426  6E09               	movwf	i2___awdiv@divisor,c
 35563  016428  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 35564  01642C  6A08               	clrf	i2___awdiv@dividend+1,c
 35565  01642E  EC8F  F0C1         	call	i2___awdiv	;wreg free
 35566  016432  90D8               	bcf	status,0,c
 35567  016434  3607               	rlcf	?i2___awdiv,f,c
 35568  016436  3608               	rlcf	?i2___awdiv+1,f,c
 35569  016438  90D8               	bcf	status,0,c
 35570  01643A  3607               	rlcf	?i2___awdiv,f,c
 35571  01643C  3608               	rlcf	?i2___awdiv+1,f,c
 35572  01643E  0E48               	movlw	72
 35573  016440  2607               	addwf	?i2___awdiv,f,c
 35574  016442  0E00               	movlw	0
 35575  016444  2208               	addwfc	?i2___awdiv+1,f,c
 35576  016446  0E77               	movlw	low __npowers_
 35577  016448  2407               	addwf	?i2___awdiv,w,c
 35578  01644A  6EF6               	movwf	tblptrl,c
 35579  01644C  0ED8               	movlw	high __npowers_
 35580  01644E  2008               	addwfc	?i2___awdiv+1,w,c
 35581  016450  6EF7               	movwf	tblptrh,c
 35582  016452                     	if	1	;There are 3 active tblptr bytes
 35583  016452  6AF8               	clrf	tblptru,c
 35584  016454  0E00               	movlw	low (__mediumconst shr (0+16))
 35585  016456  22F8               	addwfc	tblptru,f,c
 35586  016458                     	endif
 35587  016458  0009               	tblrd		*+
 35588  01645A  CFF5 F030          	movff	tablat,i2___flmul@b
 35589  01645E  0009               	tblrd		*+
 35590  016460  CFF5 F031          	movff	tablat,i2___flmul@b+1
 35591  016464  0009               	tblrd		*+
 35592  016466  CFF5 F032          	movff	tablat,i2___flmul@b+2
 35593  01646A  000A               	tblrd		*-
 35594  01646C  CFF5 F033          	movff	tablat,i2___flmul@b+3
 35595  016470  EC79  F0A4         	call	i2___flmul	;wreg free
 35596  016474  C030  F051         	movff	?i2___flmul,i2_fround$4191
 35597  016478  C031  F052         	movff	?i2___flmul+1,i2_fround$4191+1
 35598  01647C  C032  F053         	movff	?i2___flmul+2,i2_fround$4191+2
 35599  016480  C033  F054         	movff	?i2___flmul+3,i2_fround$4191+3
 35600                           
 35601                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 35602  016484  0E00               	movlw	0
 35603  016486  6E04               	movwf	i2___awmod@divisor+1,c
 35604  016488  0E0A               	movlw	10
 35605  01648A  6E03               	movwf	i2___awmod@divisor,c
 35606  01648C  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 35607  016490  6A02               	clrf	i2___awmod@dividend+1,c
 35608  016492  ECC6  F0C2         	call	i2___awmod	;wreg free
 35609  016496  90D8               	bcf	status,0,c
 35610  016498  3601               	rlcf	?i2___awmod,f,c
 35611  01649A  3602               	rlcf	?i2___awmod+1,f,c
 35612  01649C  90D8               	bcf	status,0,c
 35613  01649E  3601               	rlcf	?i2___awmod,f,c
 35614  0164A0  3602               	rlcf	?i2___awmod+1,f,c
 35615  0164A2  0E77               	movlw	low __npowers_
 35616  0164A4  2401               	addwf	?i2___awmod,w,c
 35617  0164A6  6EF6               	movwf	tblptrl,c
 35618  0164A8  0ED8               	movlw	high __npowers_
 35619  0164AA  2002               	addwfc	?i2___awmod+1,w,c
 35620  0164AC  6EF7               	movwf	tblptrh,c
 35621  0164AE                     	if	1	;There are 3 active tblptr bytes
 35622  0164AE  6AF8               	clrf	tblptru,c
 35623  0164B0  0E00               	movlw	low (__mediumconst shr (0+16))
 35624  0164B2  22F8               	addwfc	tblptru,f,c
 35625  0164B4                     	endif
 35626  0164B4  0009               	tblrd		*+
 35627  0164B6  CFF5 F034          	movff	tablat,i2___flmul@a
 35628  0164BA  0009               	tblrd		*+
 35629  0164BC  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35630  0164C0  0009               	tblrd		*+
 35631  0164C2  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35632  0164C6  000A               	tblrd		*-
 35633  0164C8  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35634  0164CC  C051  F030         	movff	i2_fround$4191,i2___flmul@b
 35635  0164D0  C052  F031         	movff	i2_fround$4191+1,i2___flmul@b+1
 35636  0164D4  C053  F032         	movff	i2_fround$4191+2,i2___flmul@b+2
 35637  0164D8  C054  F033         	movff	i2_fround$4191+3,i2___flmul@b+3
 35638  0164DC  EC79  F0A4         	call	i2___flmul	;wreg free
 35639  0164E0  C030  F04D         	movff	?i2___flmul,i2_fround$4192
 35640  0164E4  C031  F04E         	movff	?i2___flmul+1,i2_fround$4192+1
 35641  0164E8  C032  F04F         	movff	?i2___flmul+2,i2_fround$4192+2
 35642  0164EC  C033  F050         	movff	?i2___flmul+3,i2_fround$4192+3
 35643                           
 35644                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 35645  0164F0  C04D  F030         	movff	i2_fround$4192,i2___flmul@b
 35646  0164F4  C04E  F031         	movff	i2_fround$4192+1,i2___flmul@b+1
 35647  0164F8  C04F  F032         	movff	i2_fround$4192+2,i2___flmul@b+2
 35648  0164FC  C050  F033         	movff	i2_fround$4192+3,i2___flmul@b+3
 35649  016500  0E00               	movlw	0
 35650  016502  6E34               	movwf	i2___flmul@a,c
 35651  016504  0E00               	movlw	0
 35652  016506  6E35               	movwf	i2___flmul@a+1,c
 35653  016508  0E00               	movlw	0
 35654  01650A  6E36               	movwf	i2___flmul@a+2,c
 35655  01650C  0E3F               	movlw	63
 35656  01650E  6E37               	movwf	i2___flmul@a+3,c
 35657  016510  EC79  F0A4         	call	i2___flmul	;wreg free
 35658  016514  C030  F049         	movff	?i2___flmul,?i2_fround
 35659  016518  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 35660  01651C  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 35661  016520  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 35662  016524  0012               	return	
 35663  016526                     i2l1452:
 35664                           
 35665                           ;doprnt.c: 415: else if(prec > 10)
 35666  016526  0E0A               	movlw	10
 35667  016528  6455               	cpfsgt	i2fround@prec,c
 35668  01652A  D071               	goto	i2l1455
 35669                           
 35670                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 35671  01652C  0E00               	movlw	0
 35672  01652E  6E04               	movwf	i2___awmod@divisor+1,c
 35673  016530  0E0A               	movlw	10
 35674  016532  6E03               	movwf	i2___awmod@divisor,c
 35675  016534  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 35676  016538  6A02               	clrf	i2___awmod@dividend+1,c
 35677  01653A  ECC6  F0C2         	call	i2___awmod	;wreg free
 35678  01653E  90D8               	bcf	status,0,c
 35679  016540  3601               	rlcf	?i2___awmod,f,c
 35680  016542  3602               	rlcf	?i2___awmod+1,f,c
 35681  016544  90D8               	bcf	status,0,c
 35682  016546  3601               	rlcf	?i2___awmod,f,c
 35683  016548  3602               	rlcf	?i2___awmod+1,f,c
 35684  01654A  0E77               	movlw	low __npowers_
 35685  01654C  2401               	addwf	?i2___awmod,w,c
 35686  01654E  6EF6               	movwf	tblptrl,c
 35687  016550  0ED8               	movlw	high __npowers_
 35688  016552  2002               	addwfc	?i2___awmod+1,w,c
 35689  016554  6EF7               	movwf	tblptrh,c
 35690  016556                     	if	1	;There are 3 active tblptr bytes
 35691  016556  6AF8               	clrf	tblptru,c
 35692  016558  0E00               	movlw	low (__mediumconst shr (0+16))
 35693  01655A  22F8               	addwfc	tblptru,f,c
 35694  01655C                     	endif
 35695  01655C  0009               	tblrd		*+
 35696  01655E  CFF5 F034          	movff	tablat,i2___flmul@a
 35697  016562  0009               	tblrd		*+
 35698  016564  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35699  016568  0009               	tblrd		*+
 35700  01656A  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35701  01656E  000A               	tblrd		*-
 35702  016570  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35703  016574  0E00               	movlw	0
 35704  016576  6E0A               	movwf	i2___awdiv@divisor+1,c
 35705  016578  0E0A               	movlw	10
 35706  01657A  6E09               	movwf	i2___awdiv@divisor,c
 35707  01657C  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 35708  016580  6A08               	clrf	i2___awdiv@dividend+1,c
 35709  016582  EC8F  F0C1         	call	i2___awdiv	;wreg free
 35710  016586  90D8               	bcf	status,0,c
 35711  016588  3607               	rlcf	?i2___awdiv,f,c
 35712  01658A  3608               	rlcf	?i2___awdiv+1,f,c
 35713  01658C  90D8               	bcf	status,0,c
 35714  01658E  3607               	rlcf	?i2___awdiv,f,c
 35715  016590  3608               	rlcf	?i2___awdiv+1,f,c
 35716  016592  0E24               	movlw	36
 35717  016594  2607               	addwf	?i2___awdiv,f,c
 35718  016596  0E00               	movlw	0
 35719  016598  2208               	addwfc	?i2___awdiv+1,f,c
 35720  01659A  0E77               	movlw	low __npowers_
 35721  01659C  2407               	addwf	?i2___awdiv,w,c
 35722  01659E  6EF6               	movwf	tblptrl,c
 35723  0165A0  0ED8               	movlw	high __npowers_
 35724  0165A2  2008               	addwfc	?i2___awdiv+1,w,c
 35725  0165A4  6EF7               	movwf	tblptrh,c
 35726  0165A6                     	if	1	;There are 3 active tblptr bytes
 35727  0165A6  6AF8               	clrf	tblptru,c
 35728  0165A8  0E00               	movlw	low (__mediumconst shr (0+16))
 35729  0165AA  22F8               	addwfc	tblptru,f,c
 35730  0165AC                     	endif
 35731  0165AC  0009               	tblrd		*+
 35732  0165AE  CFF5 F030          	movff	tablat,i2___flmul@b
 35733  0165B2  0009               	tblrd		*+
 35734  0165B4  CFF5 F031          	movff	tablat,i2___flmul@b+1
 35735  0165B8  0009               	tblrd		*+
 35736  0165BA  CFF5 F032          	movff	tablat,i2___flmul@b+2
 35737  0165BE  000A               	tblrd		*-
 35738  0165C0  CFF5 F033          	movff	tablat,i2___flmul@b+3
 35739  0165C4  EC79  F0A4         	call	i2___flmul	;wreg free
 35740  0165C8  C030  F051         	movff	?i2___flmul,i2_fround$4191
 35741  0165CC  C031  F052         	movff	?i2___flmul+1,i2_fround$4191+1
 35742  0165D0  C032  F053         	movff	?i2___flmul+2,i2_fround$4191+2
 35743  0165D4  C033  F054         	movff	?i2___flmul+3,i2_fround$4191+3
 35744                           
 35745                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 35746  0165D8  C051  F030         	movff	i2_fround$4191,i2___flmul@b
 35747  0165DC  C052  F031         	movff	i2_fround$4191+1,i2___flmul@b+1
 35748  0165E0  C053  F032         	movff	i2_fround$4191+2,i2___flmul@b+2
 35749  0165E4  C054  F033         	movff	i2_fround$4191+3,i2___flmul@b+3
 35750  0165E8  0E00               	movlw	0
 35751  0165EA  6E34               	movwf	i2___flmul@a,c
 35752  0165EC  0E00               	movlw	0
 35753  0165EE  6E35               	movwf	i2___flmul@a+1,c
 35754  0165F0  0E00               	movlw	0
 35755  0165F2  6E36               	movwf	i2___flmul@a+2,c
 35756  0165F4  0E3F               	movlw	63
 35757  0165F6  6E37               	movwf	i2___flmul@a+3,c
 35758  0165F8  EC79  F0A4         	call	i2___flmul	;wreg free
 35759  0165FC  C030  F049         	movff	?i2___flmul,?i2_fround
 35760  016600  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 35761  016604  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 35762  016608  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 35763  01660C  0012               	return	
 35764  01660E                     i2l1455:
 35765                           
 35766                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 35767  01660E  5055               	movf	i2fround@prec,w,c
 35768  016610  0D04               	mullw	4
 35769  016612  0E77               	movlw	low __npowers_
 35770  016614  24F3               	addwf	prodl,w,c
 35771  016616  6EF6               	movwf	tblptrl,c
 35772  016618  0ED8               	movlw	high __npowers_
 35773  01661A  20F4               	addwfc	prodh,w,c
 35774  01661C  6EF7               	movwf	tblptrh,c
 35775  01661E                     	if	1	;There are 3 active tblptr bytes
 35776  01661E  6AF8               	clrf	tblptru,c
 35777  016620  0E00               	movlw	low (__mediumconst shr (0+16))
 35778  016622  22F8               	addwfc	tblptru,f,c
 35779  016624                     	endif
 35780  016624  0009               	tblrd		*+
 35781  016626  CFF5 F030          	movff	tablat,i2___flmul@b
 35782  01662A  0009               	tblrd		*+
 35783  01662C  CFF5 F031          	movff	tablat,i2___flmul@b+1
 35784  016630  0009               	tblrd		*+
 35785  016632  CFF5 F032          	movff	tablat,i2___flmul@b+2
 35786  016636  000A               	tblrd		*-
 35787  016638  CFF5 F033          	movff	tablat,i2___flmul@b+3
 35788  01663C  0E00               	movlw	0
 35789  01663E  6E34               	movwf	i2___flmul@a,c
 35790  016640  0E00               	movlw	0
 35791  016642  6E35               	movwf	i2___flmul@a+1,c
 35792  016644  0E00               	movlw	0
 35793  016646  6E36               	movwf	i2___flmul@a+2,c
 35794  016648  0E3F               	movlw	63
 35795  01664A  6E37               	movwf	i2___flmul@a+3,c
 35796  01664C  EC79  F0A4         	call	i2___flmul	;wreg free
 35797  016650  C030  F049         	movff	?i2___flmul,?i2_fround
 35798  016654  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 35799  016658  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 35800  01665C  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 35801  016660  0012               	return	
 35802  016662                     __end_ofi2_fround:
 35803                           	opt stack 0
 35804                           tosu	equ	0xFFF
 35805                           tosh	equ	0xFFE
 35806                           tosl	equ	0xFFD
 35807                           pclatu	equ	0xFFB
 35808                           pclath	equ	0xFFA
 35809                           tblptru	equ	0xFF8
 35810                           tblptrh	equ	0xFF7
 35811                           tblptrl	equ	0xFF6
 35812                           tablat	equ	0xFF5
 35813                           prodh	equ	0xFF4
 35814                           prodl	equ	0xFF3
 35815                           intcon	equ	0xFF2
 35816                           indf0	equ	0xFEF
 35817                           postinc0	equ	0xFEE
 35818                           fsr0h	equ	0xFEA
 35819                           fsr0l	equ	0xFE9
 35820                           wreg	equ	0xFE8
 35821                           indf1	equ	0xFE7
 35822                           postdec1	equ	0xFE5
 35823                           plusw1	equ	0xFE3
 35824                           fsr1h	equ	0xFE2
 35825                           fsr1l	equ	0xFE1
 35826                           bsr	equ	0xFE0
 35827                           indf2	equ	0xFDF
 35828                           postinc2	equ	0xFDE
 35829                           postdec2	equ	0xFDD
 35830                           plusw2	equ	0xFDB
 35831                           fsr2h	equ	0xFDA
 35832                           fsr2l	equ	0xFD9
 35833                           status	equ	0xFD8
 35834                           
 35835 ;; *************** function i2___awmod *****************
 35836 ;; Defined at:
 35837 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 35838 ;; Parameters:    Size  Location     Type
 35839 ;;  dividend        2    0[COMRAM] int 
 35840 ;;  divisor         2    2[COMRAM] int 
 35841 ;; Auto vars:     Size  Location     Type
 35842 ;;  __awmod         1    5[COMRAM] unsigned char 
 35843 ;;  __awmod         1    4[COMRAM] unsigned char 
 35844 ;; Return value:  Size  Location     Type
 35845 ;;                  2    0[COMRAM] int 
 35846 ;; Registers used:
 35847 ;;		wreg, status,2, status,0
 35848 ;; Tracked objects:
 35849 ;;		On entry : 0/0
 35850 ;;		On exit  : 0/0
 35851 ;;		Unchanged: 0/0
 35852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35857 ;;Total ram usage:        6 bytes
 35858 ;; Hardware stack levels used:    1
 35859 ;; This function calls:
 35860 ;;		Nothing
 35861 ;; This function is called by:
 35862 ;;		i2_fround
 35863 ;;		i2_scale
 35864 ;; This function uses a non-reentrant model
 35865 ;;
 35866                           
 35867                           	psect	text97
 35868  01858C                     __ptext97:
 35869                           	opt stack 0
 35870  01858C                     i2___awmod:
 35871                           	opt stack 15
 35872                           
 35873                           ;incstack = 0
 35874  01858C  0E00               	movlw	0
 35875  01858E  6E06               	movwf	i2___awmod@sign,c
 35876  018590  AE02               	btfss	i2___awmod@dividend+1,7,c
 35877  018592  D006               	goto	i2l1841
 35878  018594  6C01               	negf	i2___awmod@dividend,c
 35879  018596  1E02               	comf	i2___awmod@dividend+1,f,c
 35880  018598  B0D8               	btfsc	status,0,c
 35881  01859A  2A02               	incf	i2___awmod@dividend+1,f,c
 35882  01859C  0E01               	movlw	1
 35883  01859E  6E06               	movwf	i2___awmod@sign,c
 35884  0185A0                     i2l1841:
 35885  0185A0  AE04               	btfss	i2___awmod@divisor+1,7,c
 35886  0185A2  D004               	goto	i2l1842
 35887  0185A4  6C03               	negf	i2___awmod@divisor,c
 35888  0185A6  1E04               	comf	i2___awmod@divisor+1,f,c
 35889  0185A8  B0D8               	btfsc	status,0,c
 35890  0185AA  2A04               	incf	i2___awmod@divisor+1,f,c
 35891  0185AC                     i2l1842:
 35892  0185AC  5003               	movf	i2___awmod@divisor,w,c
 35893  0185AE  1004               	iorwf	i2___awmod@divisor+1,w,c
 35894  0185B0  B4D8               	btfsc	status,2,c
 35895  0185B2  D018               	goto	i2l1849
 35896  0185B4  0E01               	movlw	1
 35897  0185B6  6E05               	movwf	i2___awmod@counter,c
 35898  0185B8  D004               	goto	i2l1844
 35899  0185BA  90D8               	bcf	status,0,c
 35900  0185BC  3603               	rlcf	i2___awmod@divisor,f,c
 35901  0185BE  3604               	rlcf	i2___awmod@divisor+1,f,c
 35902  0185C0  2A05               	incf	i2___awmod@counter,f,c
 35903  0185C2                     i2l1844:
 35904  0185C2  AE04               	btfss	i2___awmod@divisor+1,7,c
 35905  0185C4  D7FA               	goto	i2l1845
 35906  0185C6                     i2u1691_40:
 35907  0185C6  5003               	movf	i2___awmod@divisor,w,c
 35908  0185C8  5C01               	subwf	i2___awmod@dividend,w,c
 35909  0185CA  5004               	movf	i2___awmod@divisor+1,w,c
 35910  0185CC  5802               	subwfb	i2___awmod@dividend+1,w,c
 35911  0185CE  A0D8               	btfss	status,0,c
 35912  0185D0  D004               	goto	i2l1848
 35913  0185D2  5003               	movf	i2___awmod@divisor,w,c
 35914  0185D4  5E01               	subwf	i2___awmod@dividend,f,c
 35915  0185D6  5004               	movf	i2___awmod@divisor+1,w,c
 35916  0185D8  5A02               	subwfb	i2___awmod@dividend+1,f,c
 35917  0185DA                     i2l1848:
 35918  0185DA  90D8               	bcf	status,0,c
 35919  0185DC  3204               	rrcf	i2___awmod@divisor+1,f,c
 35920  0185DE  3203               	rrcf	i2___awmod@divisor,f,c
 35921  0185E0  2E05               	decfsz	i2___awmod@counter,f,c
 35922  0185E2  D7F1               	goto	i2u1691_40
 35923  0185E4                     i2l1849:
 35924  0185E4  5006               	movf	i2___awmod@sign,w,c
 35925  0185E6  B4D8               	btfsc	status,2,c
 35926  0185E8  D004               	goto	i2l1850
 35927  0185EA  6C01               	negf	i2___awmod@dividend,c
 35928  0185EC  1E02               	comf	i2___awmod@dividend+1,f,c
 35929  0185EE  B0D8               	btfsc	status,0,c
 35930  0185F0  2A02               	incf	i2___awmod@dividend+1,f,c
 35931  0185F2                     i2l1850:
 35932  0185F2  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 35933  0185F6  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 35934  0185FA  0012               	return	
 35935  0185FC                     __end_ofi2___awmod:
 35936                           	opt stack 0
 35937                           tosu	equ	0xFFF
 35938                           tosh	equ	0xFFE
 35939                           tosl	equ	0xFFD
 35940                           pclatu	equ	0xFFB
 35941                           pclath	equ	0xFFA
 35942                           tblptru	equ	0xFF8
 35943                           tblptrh	equ	0xFF7
 35944                           tblptrl	equ	0xFF6
 35945                           tablat	equ	0xFF5
 35946                           prodh	equ	0xFF4
 35947                           prodl	equ	0xFF3
 35948                           intcon	equ	0xFF2
 35949                           indf0	equ	0xFEF
 35950                           postinc0	equ	0xFEE
 35951                           fsr0h	equ	0xFEA
 35952                           fsr0l	equ	0xFE9
 35953                           wreg	equ	0xFE8
 35954                           indf1	equ	0xFE7
 35955                           postdec1	equ	0xFE5
 35956                           plusw1	equ	0xFE3
 35957                           fsr1h	equ	0xFE2
 35958                           fsr1l	equ	0xFE1
 35959                           bsr	equ	0xFE0
 35960                           indf2	equ	0xFDF
 35961                           postinc2	equ	0xFDE
 35962                           postdec2	equ	0xFDD
 35963                           plusw2	equ	0xFDB
 35964                           fsr2h	equ	0xFDA
 35965                           fsr2l	equ	0xFD9
 35966                           status	equ	0xFD8
 35967                           
 35968 ;; *************** function i2___awdiv *****************
 35969 ;; Defined at:
 35970 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 35971 ;; Parameters:    Size  Location     Type
 35972 ;;  dividend        2    6[COMRAM] int 
 35973 ;;  divisor         2    8[COMRAM] int 
 35974 ;; Auto vars:     Size  Location     Type
 35975 ;;  __awdiv         2   12[COMRAM] int 
 35976 ;;  __awdiv         1   11[COMRAM] unsigned char 
 35977 ;;  __awdiv         1   10[COMRAM] unsigned char 
 35978 ;; Return value:  Size  Location     Type
 35979 ;;                  2    6[COMRAM] int 
 35980 ;; Registers used:
 35981 ;;		wreg, status,2, status,0
 35982 ;; Tracked objects:
 35983 ;;		On entry : 0/0
 35984 ;;		On exit  : 0/0
 35985 ;;		Unchanged: 0/0
 35986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35988 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35990 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35991 ;;Total ram usage:        8 bytes
 35992 ;; Hardware stack levels used:    1
 35993 ;; This function calls:
 35994 ;;		Nothing
 35995 ;; This function is called by:
 35996 ;;		i2_fround
 35997 ;;		i2_scale
 35998 ;;		i2_printf
 35999 ;; This function uses a non-reentrant model
 36000 ;;
 36001                           
 36002                           	psect	text98
 36003  01831E                     __ptext98:
 36004                           	opt stack 0
 36005  01831E                     i2___awdiv:
 36006                           	opt stack 15
 36007                           
 36008                           ;incstack = 0
 36009  01831E  0E00               	movlw	0
 36010  018320  6E0C               	movwf	i2___awdiv@sign,c
 36011  018322  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 36012  018324  D006               	goto	i2l1828
 36013  018326  6C09               	negf	i2___awdiv@divisor,c
 36014  018328  1E0A               	comf	i2___awdiv@divisor+1,f,c
 36015  01832A  B0D8               	btfsc	status,0,c
 36016  01832C  2A0A               	incf	i2___awdiv@divisor+1,f,c
 36017  01832E  0E01               	movlw	1
 36018  018330  6E0C               	movwf	i2___awdiv@sign,c
 36019  018332                     i2l1828:
 36020  018332  AE08               	btfss	i2___awdiv@dividend+1,7,c
 36021  018334  D006               	goto	i2l1829
 36022  018336  6C07               	negf	i2___awdiv@dividend,c
 36023  018338  1E08               	comf	i2___awdiv@dividend+1,f,c
 36024  01833A  B0D8               	btfsc	status,0,c
 36025  01833C  2A08               	incf	i2___awdiv@dividend+1,f,c
 36026  01833E  0E01               	movlw	1
 36027  018340  1A0C               	xorwf	i2___awdiv@sign,f,c
 36028  018342                     i2l1829:
 36029  018342  0E00               	movlw	0
 36030  018344  6E0E               	movwf	i2___awdiv@quotient+1,c
 36031  018346  0E00               	movlw	0
 36032  018348  6E0D               	movwf	i2___awdiv@quotient,c
 36033  01834A  5009               	movf	i2___awdiv@divisor,w,c
 36034  01834C  100A               	iorwf	i2___awdiv@divisor+1,w,c
 36035  01834E  B4D8               	btfsc	status,2,c
 36036  018350  D01C               	goto	i2l1836
 36037  018352  0E01               	movlw	1
 36038  018354  6E0B               	movwf	i2___awdiv@counter,c
 36039  018356  D004               	goto	i2l1831
 36040  018358  90D8               	bcf	status,0,c
 36041  01835A  3609               	rlcf	i2___awdiv@divisor,f,c
 36042  01835C  360A               	rlcf	i2___awdiv@divisor+1,f,c
 36043  01835E  2A0B               	incf	i2___awdiv@counter,f,c
 36044  018360                     i2l1831:
 36045  018360  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 36046  018362  D7FA               	goto	i2l1832
 36047  018364                     i2u1685_40:
 36048  018364  90D8               	bcf	status,0,c
 36049  018366  360D               	rlcf	i2___awdiv@quotient,f,c
 36050  018368  360E               	rlcf	i2___awdiv@quotient+1,f,c
 36051  01836A  5009               	movf	i2___awdiv@divisor,w,c
 36052  01836C  5C07               	subwf	i2___awdiv@dividend,w,c
 36053  01836E  500A               	movf	i2___awdiv@divisor+1,w,c
 36054  018370  5808               	subwfb	i2___awdiv@dividend+1,w,c
 36055  018372  A0D8               	btfss	status,0,c
 36056  018374  D005               	goto	i2l1835
 36057  018376  5009               	movf	i2___awdiv@divisor,w,c
 36058  018378  5E07               	subwf	i2___awdiv@dividend,f,c
 36059  01837A  500A               	movf	i2___awdiv@divisor+1,w,c
 36060  01837C  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 36061  01837E  800D               	bsf	i2___awdiv@quotient,0,c
 36062  018380                     i2l1835:
 36063  018380  90D8               	bcf	status,0,c
 36064  018382  320A               	rrcf	i2___awdiv@divisor+1,f,c
 36065  018384  3209               	rrcf	i2___awdiv@divisor,f,c
 36066  018386  2E0B               	decfsz	i2___awdiv@counter,f,c
 36067  018388  D7ED               	goto	i2u1685_40
 36068  01838A                     i2l1836:
 36069  01838A  500C               	movf	i2___awdiv@sign,w,c
 36070  01838C  B4D8               	btfsc	status,2,c
 36071  01838E  D004               	goto	i2l1837
 36072  018390  6C0D               	negf	i2___awdiv@quotient,c
 36073  018392  1E0E               	comf	i2___awdiv@quotient+1,f,c
 36074  018394  B0D8               	btfsc	status,0,c
 36075  018396  2A0E               	incf	i2___awdiv@quotient+1,f,c
 36076  018398                     i2l1837:
 36077  018398  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 36078  01839C  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 36079  0183A0  0012               	return	
 36080  0183A2                     __end_ofi2___awdiv:
 36081                           	opt stack 0
 36082                           tosu	equ	0xFFF
 36083                           tosh	equ	0xFFE
 36084                           tosl	equ	0xFFD
 36085                           pclatu	equ	0xFFB
 36086                           pclath	equ	0xFFA
 36087                           tblptru	equ	0xFF8
 36088                           tblptrh	equ	0xFF7
 36089                           tblptrl	equ	0xFF6
 36090                           tablat	equ	0xFF5
 36091                           prodh	equ	0xFF4
 36092                           prodl	equ	0xFF3
 36093                           intcon	equ	0xFF2
 36094                           indf0	equ	0xFEF
 36095                           postinc0	equ	0xFEE
 36096                           fsr0h	equ	0xFEA
 36097                           fsr0l	equ	0xFE9
 36098                           wreg	equ	0xFE8
 36099                           indf1	equ	0xFE7
 36100                           postdec1	equ	0xFE5
 36101                           plusw1	equ	0xFE3
 36102                           fsr1h	equ	0xFE2
 36103                           fsr1l	equ	0xFE1
 36104                           bsr	equ	0xFE0
 36105                           indf2	equ	0xFDF
 36106                           postinc2	equ	0xFDE
 36107                           postdec2	equ	0xFDD
 36108                           plusw2	equ	0xFDB
 36109                           fsr2h	equ	0xFDA
 36110                           fsr2l	equ	0xFD9
 36111                           status	equ	0xFD8
 36112                           
 36113 ;; *************** function i2__tdiv_to_l_ *****************
 36114 ;; Defined at:
 36115 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 36116 ;; Parameters:    Size  Location     Type
 36117 ;;  f1              3    0[COMRAM] float 
 36118 ;;  f2              3    3[COMRAM] float 
 36119 ;; Auto vars:     Size  Location     Type
 36120 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 36121 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 36122 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 36123 ;; Return value:  Size  Location     Type
 36124 ;;                  4    0[COMRAM] unsigned long 
 36125 ;; Registers used:
 36126 ;;		wreg, status,2, status,0
 36127 ;; Tracked objects:
 36128 ;;		On entry : 0/0
 36129 ;;		On exit  : 0/0
 36130 ;;		Unchanged: 0/0
 36131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36132 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36133 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36135 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36136 ;;Total ram usage:       15 bytes
 36137 ;; Hardware stack levels used:    1
 36138 ;; This function calls:
 36139 ;;		Nothing
 36140 ;; This function is called by:
 36141 ;;		i2_printf
 36142 ;; This function uses a non-reentrant model
 36143 ;;
 36144                           
 36145                           	psect	text99
 36146  017120                     __ptext99:
 36147                           	opt stack 0
 36148  017120                     i2__tdiv_to_l_:
 36149                           	opt stack 16
 36150                           
 36151                           ;incstack = 0
 36152  017120  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 36153  017124  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 36154  017126  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 36155  017128  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 36156  01712A  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 36157  01712C  E301               	bnc	u1752_41
 36158  01712E  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 36159  017130                     u1752_41:
 36160  017130  5007               	movf	??i2__tdiv_to_l_,w,c
 36161  017132  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 36162  017134  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 36163  017136  A4D8               	btfss	status,2,c
 36164  017138  D009               	goto	i2l1976
 36165  01713A  0E00               	movlw	0
 36166  01713C  6E01               	movwf	?i2__tdiv_to_l_,c
 36167  01713E  0E00               	movlw	0
 36168  017140  6E02               	movwf	?i2__tdiv_to_l_+1,c
 36169  017142  0E00               	movlw	0
 36170  017144  6E03               	movwf	?i2__tdiv_to_l_+2,c
 36171  017146  0E00               	movlw	0
 36172  017148  6E04               	movwf	?i2__tdiv_to_l_+3,c
 36173  01714A  0012               	return	
 36174  01714C                     i2l1976:
 36175  01714C  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 36176  017150  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 36177  017152  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 36178  017154  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 36179  017156  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 36180  017158  E301               	bnc	u1754_41
 36181  01715A  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 36182  01715C                     u1754_41:
 36183  01715C  5007               	movf	??i2__tdiv_to_l_,w,c
 36184  01715E  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 36185  017160  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 36186  017162  A4D8               	btfss	status,2,c
 36187  017164  D009               	goto	i2l1978
 36188  017166  0E00               	movlw	0
 36189  017168  6E01               	movwf	?i2__tdiv_to_l_,c
 36190  01716A  0E00               	movlw	0
 36191  01716C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 36192  01716E  0E00               	movlw	0
 36193  017170  6E03               	movwf	?i2__tdiv_to_l_+2,c
 36194  017172  0E00               	movlw	0
 36195  017174  6E04               	movwf	?i2__tdiv_to_l_+3,c
 36196  017176  0012               	return	
 36197  017178                     i2l1978:
 36198  017178  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 36199  01717A  0EFF               	movlw	255
 36200  01717C  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 36201  01717E  0EFF               	movlw	255
 36202  017180  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 36203  017182  0E00               	movlw	0
 36204  017184  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 36205  017186  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 36206  017188  0EFF               	movlw	255
 36207  01718A  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 36208  01718C  0EFF               	movlw	255
 36209  01718E  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 36210  017190  0E00               	movlw	0
 36211  017192  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 36212  017194  0E00               	movlw	0
 36213  017196  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 36214  017198  0E00               	movlw	0
 36215  01719A  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 36216  01719C  0E00               	movlw	0
 36217  01719E  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 36218  0171A0  0E00               	movlw	0
 36219  0171A2  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 36220  0171A4  0E7F               	movlw	127
 36221  0171A6  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 36222  0171A8  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 36223  0171AA  0F98               	addlw	152
 36224  0171AC  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 36225  0171AE  0E18               	movlw	24
 36226  0171B0  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 36227  0171B2                     i2l1979:
 36228  0171B2  90D8               	bcf	status,0,c
 36229  0171B4  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 36230  0171B6  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 36231  0171B8  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 36232  0171BA  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 36233  0171BC  5004               	movf	i2__tdiv_to_l_@f2,w,c
 36234  0171BE  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 36235  0171C0  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 36236  0171C2  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 36237  0171C4  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 36238  0171C6  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 36239  0171C8  A0D8               	btfss	status,0,c
 36240  0171CA  D007               	goto	i2l1980
 36241  0171CC  5004               	movf	i2__tdiv_to_l_@f2,w,c
 36242  0171CE  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 36243  0171D0  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 36244  0171D2  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 36245  0171D4  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 36246  0171D6  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 36247  0171D8  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 36248  0171DA                     i2l1980:
 36249  0171DA  90D8               	bcf	status,0,c
 36250  0171DC  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 36251  0171DE  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 36252  0171E0  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 36253  0171E2  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 36254  0171E4  D7E6               	goto	i2l1979
 36255  0171E6  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 36256  0171E8  D016               	goto	i2l1982
 36257  0171EA  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 36258  0171EC  0A80               	xorlw	128
 36259  0171EE  0F97               	addlw	151
 36260  0171F0  B0D8               	btfsc	status,0,c
 36261  0171F2  D009               	goto	i2l1983
 36262  0171F4  0E00               	movlw	0
 36263  0171F6  6E01               	movwf	?i2__tdiv_to_l_,c
 36264  0171F8  0E00               	movlw	0
 36265  0171FA  6E02               	movwf	?i2__tdiv_to_l_+1,c
 36266  0171FC  0E00               	movlw	0
 36267  0171FE  6E03               	movwf	?i2__tdiv_to_l_+2,c
 36268  017200  0E00               	movlw	0
 36269  017202  6E04               	movwf	?i2__tdiv_to_l_+3,c
 36270  017204  0012               	return	
 36271  017206                     i2l1983:
 36272  017206  90D8               	bcf	status,0,c
 36273  017208  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 36274  01720A  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 36275  01720C  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 36276  01720E  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 36277  017210  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 36278  017212  D7F9               	goto	i2l1983
 36279  017214  D015               	goto	i2u1760_40
 36280  017216                     i2l1982:
 36281  017216  0E17               	movlw	23
 36282  017218  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 36283  01721A  D00F               	goto	i2l1988
 36284  01721C  0E00               	movlw	0
 36285  01721E  6E01               	movwf	?i2__tdiv_to_l_,c
 36286  017220  0E00               	movlw	0
 36287  017222  6E02               	movwf	?i2__tdiv_to_l_+1,c
 36288  017224  0E00               	movlw	0
 36289  017226  6E03               	movwf	?i2__tdiv_to_l_+2,c
 36290  017228  0E00               	movlw	0
 36291  01722A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 36292  01722C  0012               	return	
 36293  01722E  90D8               	bcf	status,0,c
 36294  017230  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 36295  017232  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 36296  017234  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 36297  017236  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 36298  017238  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 36299  01723A                     i2l1988:
 36300  01723A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 36301  01723C  A4D8               	btfss	status,2,c
 36302  01723E  D7F7               	goto	i2l1989
 36303  017240                     i2u1760_40:
 36304  017240  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 36305  017244  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 36306  017248  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 36307  01724C  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 36308  017250  0012               	return		;funcret
 36309  017252                     __end_ofi2__tdiv_to_l_:
 36310                           	opt stack 0
 36311                           tosu	equ	0xFFF
 36312                           tosh	equ	0xFFE
 36313                           tosl	equ	0xFFD
 36314                           pclatu	equ	0xFFB
 36315                           pclath	equ	0xFFA
 36316                           tblptru	equ	0xFF8
 36317                           tblptrh	equ	0xFF7
 36318                           tblptrl	equ	0xFF6
 36319                           tablat	equ	0xFF5
 36320                           prodh	equ	0xFF4
 36321                           prodl	equ	0xFF3
 36322                           intcon	equ	0xFF2
 36323                           indf0	equ	0xFEF
 36324                           postinc0	equ	0xFEE
 36325                           fsr0h	equ	0xFEA
 36326                           fsr0l	equ	0xFE9
 36327                           wreg	equ	0xFE8
 36328                           indf1	equ	0xFE7
 36329                           postdec1	equ	0xFE5
 36330                           plusw1	equ	0xFE3
 36331                           fsr1h	equ	0xFE2
 36332                           fsr1l	equ	0xFE1
 36333                           bsr	equ	0xFE0
 36334                           indf2	equ	0xFDF
 36335                           postinc2	equ	0xFDE
 36336                           postdec2	equ	0xFDD
 36337                           plusw2	equ	0xFDB
 36338                           fsr2h	equ	0xFDA
 36339                           fsr2l	equ	0xFD9
 36340                           status	equ	0xFD8
 36341                           
 36342 ;; *************** function i2__div_to_l_ *****************
 36343 ;; Defined at:
 36344 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 36345 ;; Parameters:    Size  Location     Type
 36346 ;;  f1              4    0[COMRAM] unsigned long 
 36347 ;;  f2              4    4[COMRAM] unsigned long 
 36348 ;; Auto vars:     Size  Location     Type
 36349 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 36350 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 36351 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 36352 ;; Return value:  Size  Location     Type
 36353 ;;                  4    0[COMRAM] unsigned long 
 36354 ;; Registers used:
 36355 ;;		wreg, status,2, status,0
 36356 ;; Tracked objects:
 36357 ;;		On entry : 0/0
 36358 ;;		On exit  : 0/0
 36359 ;;		Unchanged: 0/0
 36360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36361 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36362 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36364 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36365 ;;Total ram usage:       14 bytes
 36366 ;; Hardware stack levels used:    1
 36367 ;; This function calls:
 36368 ;;		Nothing
 36369 ;; This function is called by:
 36370 ;;		i2_printf
 36371 ;; This function uses a non-reentrant model
 36372 ;;
 36373                           
 36374                           	psect	text100
 36375  01737C                     __ptext100:
 36376                           	opt stack 0
 36377  01737C                     i2__div_to_l_:
 36378                           	opt stack 16
 36379                           
 36380                           ;incstack = 0
 36381  01737C  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 36382  01737E  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 36383  017380  6E0E               	movwf	i2__div_to_l_@exp1,c
 36384  017382  500E               	movf	i2__div_to_l_@exp1,w,c
 36385  017384  A4D8               	btfss	status,2,c
 36386  017386  D009               	goto	i2l1872
 36387  017388  0E00               	movlw	0
 36388  01738A  6E01               	movwf	?i2__div_to_l_,c
 36389  01738C  0E00               	movlw	0
 36390  01738E  6E02               	movwf	?i2__div_to_l_+1,c
 36391  017390  0E00               	movlw	0
 36392  017392  6E03               	movwf	?i2__div_to_l_+2,c
 36393  017394  0E00               	movlw	0
 36394  017396  6E04               	movwf	?i2__div_to_l_+3,c
 36395  017398  0012               	return	
 36396  01739A                     i2l1872:
 36397  01739A  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 36398  01739C  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 36399  01739E  6E0D               	movwf	i2__div_to_l_@cntr,c
 36400  0173A0  500D               	movf	i2__div_to_l_@cntr,w,c
 36401  0173A2  A4D8               	btfss	status,2,c
 36402  0173A4  D009               	goto	i2l1874
 36403  0173A6  0E00               	movlw	0
 36404  0173A8  6E01               	movwf	?i2__div_to_l_,c
 36405  0173AA  0E00               	movlw	0
 36406  0173AC  6E02               	movwf	?i2__div_to_l_+1,c
 36407  0173AE  0E00               	movlw	0
 36408  0173B0  6E03               	movwf	?i2__div_to_l_+2,c
 36409  0173B2  0E00               	movlw	0
 36410  0173B4  6E04               	movwf	?i2__div_to_l_+3,c
 36411  0173B6  0012               	return	
 36412  0173B8                     i2l1874:
 36413  0173B8  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 36414  0173BA  0EFF               	movlw	255
 36415  0173BC  1601               	andwf	i2__div_to_l_@f1,f,c
 36416  0173BE  0EFF               	movlw	255
 36417  0173C0  1602               	andwf	i2__div_to_l_@f1+1,f,c
 36418  0173C2  0EFF               	movlw	255
 36419  0173C4  1603               	andwf	i2__div_to_l_@f1+2,f,c
 36420  0173C6  0E00               	movlw	0
 36421  0173C8  1604               	andwf	i2__div_to_l_@f1+3,f,c
 36422  0173CA  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 36423  0173CC  0EFF               	movlw	255
 36424  0173CE  1605               	andwf	i2__div_to_l_@f2,f,c
 36425  0173D0  0EFF               	movlw	255
 36426  0173D2  1606               	andwf	i2__div_to_l_@f2+1,f,c
 36427  0173D4  0EFF               	movlw	255
 36428  0173D6  1607               	andwf	i2__div_to_l_@f2+2,f,c
 36429  0173D8  0E00               	movlw	0
 36430  0173DA  1608               	andwf	i2__div_to_l_@f2+3,f,c
 36431  0173DC  0E00               	movlw	0
 36432  0173DE  6E09               	movwf	i2__div_to_l_@quot,c
 36433  0173E0  0E00               	movlw	0
 36434  0173E2  6E0A               	movwf	i2__div_to_l_@quot+1,c
 36435  0173E4  0E00               	movlw	0
 36436  0173E6  6E0B               	movwf	i2__div_to_l_@quot+2,c
 36437  0173E8  0E00               	movlw	0
 36438  0173EA  6E0C               	movwf	i2__div_to_l_@quot+3,c
 36439  0173EC  0E7F               	movlw	127
 36440  0173EE  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 36441  0173F0  500D               	movf	i2__div_to_l_@cntr,w,c
 36442  0173F2  0FA0               	addlw	160
 36443  0173F4  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 36444  0173F6  0E20               	movlw	32
 36445  0173F8  6E0D               	movwf	i2__div_to_l_@cntr,c
 36446  0173FA  90D8               	bcf	status,0,c
 36447  0173FC  3609               	rlcf	i2__div_to_l_@quot,f,c
 36448  0173FE  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 36449  017400  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 36450  017402  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 36451  017404  5005               	movf	i2__div_to_l_@f2,w,c
 36452  017406  5C01               	subwf	i2__div_to_l_@f1,w,c
 36453  017408  5006               	movf	i2__div_to_l_@f2+1,w,c
 36454  01740A  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 36455  01740C  5007               	movf	i2__div_to_l_@f2+2,w,c
 36456  01740E  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 36457  017410  5008               	movf	i2__div_to_l_@f2+3,w,c
 36458  017412  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 36459  017414  A0D8               	btfss	status,0,c
 36460  017416  D009               	goto	i2l1876
 36461  017418  5005               	movf	i2__div_to_l_@f2,w,c
 36462  01741A  5E01               	subwf	i2__div_to_l_@f1,f,c
 36463  01741C  5006               	movf	i2__div_to_l_@f2+1,w,c
 36464  01741E  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 36465  017420  5007               	movf	i2__div_to_l_@f2+2,w,c
 36466  017422  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 36467  017424  5008               	movf	i2__div_to_l_@f2+3,w,c
 36468  017426  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 36469  017428  8009               	bsf	i2__div_to_l_@quot,0,c
 36470  01742A                     i2l1876:
 36471  01742A  90D8               	bcf	status,0,c
 36472  01742C  3601               	rlcf	i2__div_to_l_@f1,f,c
 36473  01742E  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 36474  017430  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 36475  017432  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 36476  017434  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 36477  017436  D7E1               	goto	i2l1875
 36478  017438  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 36479  01743A  D016               	goto	i2l1878
 36480  01743C  500E               	movf	i2__div_to_l_@exp1,w,c
 36481  01743E  0A80               	xorlw	128
 36482  017440  0F9F               	addlw	159
 36483  017442  B0D8               	btfsc	status,0,c
 36484  017444  D009               	goto	i2l1879
 36485  017446  0E00               	movlw	0
 36486  017448  6E01               	movwf	?i2__div_to_l_,c
 36487  01744A  0E00               	movlw	0
 36488  01744C  6E02               	movwf	?i2__div_to_l_+1,c
 36489  01744E  0E00               	movlw	0
 36490  017450  6E03               	movwf	?i2__div_to_l_+2,c
 36491  017452  0E00               	movlw	0
 36492  017454  6E04               	movwf	?i2__div_to_l_+3,c
 36493  017456  0012               	return	
 36494  017458                     i2l1879:
 36495  017458  90D8               	bcf	status,0,c
 36496  01745A  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 36497  01745C  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 36498  01745E  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 36499  017460  3209               	rrcf	i2__div_to_l_@quot,f,c
 36500  017462  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 36501  017464  D7F9               	goto	i2l1879
 36502  017466  D015               	goto	i2u1751_40
 36503  017468                     i2l1878:
 36504  017468  0E1F               	movlw	31
 36505  01746A  640E               	cpfsgt	i2__div_to_l_@exp1,c
 36506  01746C  D00F               	goto	i2l1884
 36507  01746E  0E00               	movlw	0
 36508  017470  6E01               	movwf	?i2__div_to_l_,c
 36509  017472  0E00               	movlw	0
 36510  017474  6E02               	movwf	?i2__div_to_l_+1,c
 36511  017476  0E00               	movlw	0
 36512  017478  6E03               	movwf	?i2__div_to_l_+2,c
 36513  01747A  0E00               	movlw	0
 36514  01747C  6E04               	movwf	?i2__div_to_l_+3,c
 36515  01747E  0012               	return	
 36516  017480  90D8               	bcf	status,0,c
 36517  017482  3609               	rlcf	i2__div_to_l_@quot,f,c
 36518  017484  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 36519  017486  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 36520  017488  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 36521  01748A  060E               	decf	i2__div_to_l_@exp1,f,c
 36522  01748C                     i2l1884:
 36523  01748C  500E               	movf	i2__div_to_l_@exp1,w,c
 36524  01748E  A4D8               	btfss	status,2,c
 36525  017490  D7F7               	goto	i2l1885
 36526  017492                     i2u1751_40:
 36527  017492  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 36528  017496  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 36529  01749A  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 36530  01749E  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 36531  0174A2  0012               	return		;funcret
 36532  0174A4                     __end_ofi2__div_to_l_:
 36533                           	opt stack 0
 36534                           tosu	equ	0xFFF
 36535                           tosh	equ	0xFFE
 36536                           tosl	equ	0xFFD
 36537                           pclatu	equ	0xFFB
 36538                           pclath	equ	0xFFA
 36539                           tblptru	equ	0xFF8
 36540                           tblptrh	equ	0xFF7
 36541                           tblptrl	equ	0xFF6
 36542                           tablat	equ	0xFF5
 36543                           prodh	equ	0xFF4
 36544                           prodl	equ	0xFF3
 36545                           intcon	equ	0xFF2
 36546                           indf0	equ	0xFEF
 36547                           postinc0	equ	0xFEE
 36548                           fsr0h	equ	0xFEA
 36549                           fsr0l	equ	0xFE9
 36550                           wreg	equ	0xFE8
 36551                           indf1	equ	0xFE7
 36552                           postdec1	equ	0xFE5
 36553                           plusw1	equ	0xFE3
 36554                           fsr1h	equ	0xFE2
 36555                           fsr1l	equ	0xFE1
 36556                           bsr	equ	0xFE0
 36557                           indf2	equ	0xFDF
 36558                           postinc2	equ	0xFDE
 36559                           postdec2	equ	0xFDD
 36560                           plusw2	equ	0xFDB
 36561                           fsr2h	equ	0xFDA
 36562                           fsr2l	equ	0xFD9
 36563                           status	equ	0xFD8
 36564                           
 36565 ;; *************** function i2___wmul *****************
 36566 ;; Defined at:
 36567 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 36568 ;; Parameters:    Size  Location     Type
 36569 ;;  multiplier      2    0[COMRAM] unsigned int 
 36570 ;;  multiplicand    2    2[COMRAM] unsigned int 
 36571 ;; Auto vars:     Size  Location     Type
 36572 ;;  __wmul          2    4[COMRAM] unsigned int 
 36573 ;; Return value:  Size  Location     Type
 36574 ;;                  2    0[COMRAM] unsigned int 
 36575 ;; Registers used:
 36576 ;;		wreg, status,2, status,0, prodl, prodh
 36577 ;; Tracked objects:
 36578 ;;		On entry : 0/0
 36579 ;;		On exit  : 0/0
 36580 ;;		Unchanged: 0/0
 36581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36585 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36586 ;;Total ram usage:        6 bytes
 36587 ;; Hardware stack levels used:    1
 36588 ;; This function calls:
 36589 ;;		Nothing
 36590 ;; This function is called by:
 36591 ;;		i2_printf
 36592 ;; This function uses a non-reentrant model
 36593 ;;
 36594                           
 36595                           	psect	text101
 36596  01911C                     __ptext101:
 36597                           	opt stack 0
 36598  01911C                     i2___wmul:
 36599                           	opt stack 16
 36600                           
 36601                           ;incstack = 0
 36602  01911C  5001               	movf	i2___wmul@multiplier,w,c
 36603  01911E  0203               	mulwf	i2___wmul@multiplicand,c
 36604  019120  CFF3 F005          	movff	prodl,i2___wmul@product
 36605  019124  CFF4 F006          	movff	prodh,i2___wmul@product+1
 36606  019128  5001               	movf	i2___wmul@multiplier,w,c
 36607  01912A  0204               	mulwf	i2___wmul@multiplicand+1,c
 36608  01912C  50F3               	movf	prodl,w,c
 36609  01912E  2606               	addwf	i2___wmul@product+1,f,c
 36610  019130  5002               	movf	i2___wmul@multiplier+1,w,c
 36611  019132  0203               	mulwf	i2___wmul@multiplicand,c
 36612  019134  50F3               	movf	prodl,w,c
 36613  019136  2606               	addwf	i2___wmul@product+1,f,c
 36614  019138  C005  F001         	movff	i2___wmul@product,?i2___wmul
 36615  01913C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 36616  019140  0012               	return	
 36617  019142                     __end_ofi2___wmul:
 36618                           	opt stack 0
 36619                           tosu	equ	0xFFF
 36620                           tosh	equ	0xFFE
 36621                           tosl	equ	0xFFD
 36622                           pclatu	equ	0xFFB
 36623                           pclath	equ	0xFFA
 36624                           tblptru	equ	0xFF8
 36625                           tblptrh	equ	0xFF7
 36626                           tblptrl	equ	0xFF6
 36627                           tablat	equ	0xFF5
 36628                           prodh	equ	0xFF4
 36629                           prodl	equ	0xFF3
 36630                           intcon	equ	0xFF2
 36631                           indf0	equ	0xFEF
 36632                           postinc0	equ	0xFEE
 36633                           fsr0h	equ	0xFEA
 36634                           fsr0l	equ	0xFE9
 36635                           wreg	equ	0xFE8
 36636                           indf1	equ	0xFE7
 36637                           postdec1	equ	0xFE5
 36638                           plusw1	equ	0xFE3
 36639                           fsr1h	equ	0xFE2
 36640                           fsr1l	equ	0xFE1
 36641                           bsr	equ	0xFE0
 36642                           indf2	equ	0xFDF
 36643                           postinc2	equ	0xFDE
 36644                           postdec2	equ	0xFDD
 36645                           plusw2	equ	0xFDB
 36646                           fsr2h	equ	0xFDA
 36647                           fsr2l	equ	0xFD9
 36648                           status	equ	0xFD8
 36649                           
 36650 ;; *************** function i2___llmod *****************
 36651 ;; Defined at:
 36652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 36653 ;; Parameters:    Size  Location     Type
 36654 ;;  dividend        4   13[COMRAM] unsigned long 
 36655 ;;  divisor         4   17[COMRAM] unsigned long 
 36656 ;; Auto vars:     Size  Location     Type
 36657 ;;  __llmod         1   21[COMRAM] unsigned char 
 36658 ;; Return value:  Size  Location     Type
 36659 ;;                  4   13[COMRAM] unsigned long 
 36660 ;; Registers used:
 36661 ;;		wreg, status,2, status,0
 36662 ;; Tracked objects:
 36663 ;;		On entry : 0/0
 36664 ;;		On exit  : 0/0
 36665 ;;		Unchanged: 0/0
 36666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36667 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36670 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36671 ;;Total ram usage:        9 bytes
 36672 ;; Hardware stack levels used:    1
 36673 ;; This function calls:
 36674 ;;		Nothing
 36675 ;; This function is called by:
 36676 ;;		i2_printf
 36677 ;; This function uses a non-reentrant model
 36678 ;;
 36679                           
 36680                           	psect	text102
 36681  0187A4                     __ptext102:
 36682                           	opt stack 0
 36683  0187A4                     i2___llmod:
 36684                           	opt stack 16
 36685                           
 36686                           ;incstack = 0
 36687  0187A4  5012               	movf	i2___llmod@divisor,w,c
 36688  0187A6  1013               	iorwf	i2___llmod@divisor+1,w,c
 36689  0187A8  1014               	iorwf	i2___llmod@divisor+2,w,c
 36690  0187AA  1015               	iorwf	i2___llmod@divisor+3,w,c
 36691  0187AC  B4D8               	btfsc	status,2,c
 36692  0187AE  D024               	goto	i2l2077
 36693  0187B0  0E01               	movlw	1
 36694  0187B2  6E16               	movwf	i2___llmod@counter,c
 36695  0187B4  D006               	goto	i2l2072
 36696  0187B6  90D8               	bcf	status,0,c
 36697  0187B8  3612               	rlcf	i2___llmod@divisor,f,c
 36698  0187BA  3613               	rlcf	i2___llmod@divisor+1,f,c
 36699  0187BC  3614               	rlcf	i2___llmod@divisor+2,f,c
 36700  0187BE  3615               	rlcf	i2___llmod@divisor+3,f,c
 36701  0187C0  2A16               	incf	i2___llmod@counter,f,c
 36702  0187C2                     i2l2072:
 36703  0187C2  AE15               	btfss	i2___llmod@divisor+3,7,c
 36704  0187C4  D7F8               	goto	i2l2073
 36705  0187C6                     i2u1767_40:
 36706  0187C6  5012               	movf	i2___llmod@divisor,w,c
 36707  0187C8  5C0E               	subwf	i2___llmod@dividend,w,c
 36708  0187CA  5013               	movf	i2___llmod@divisor+1,w,c
 36709  0187CC  580F               	subwfb	i2___llmod@dividend+1,w,c
 36710  0187CE  5014               	movf	i2___llmod@divisor+2,w,c
 36711  0187D0  5810               	subwfb	i2___llmod@dividend+2,w,c
 36712  0187D2  5015               	movf	i2___llmod@divisor+3,w,c
 36713  0187D4  5811               	subwfb	i2___llmod@dividend+3,w,c
 36714  0187D6  A0D8               	btfss	status,0,c
 36715  0187D8  D008               	goto	i2l2076
 36716  0187DA  5012               	movf	i2___llmod@divisor,w,c
 36717  0187DC  5E0E               	subwf	i2___llmod@dividend,f,c
 36718  0187DE  5013               	movf	i2___llmod@divisor+1,w,c
 36719  0187E0  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 36720  0187E2  5014               	movf	i2___llmod@divisor+2,w,c
 36721  0187E4  5A10               	subwfb	i2___llmod@dividend+2,f,c
 36722  0187E6  5015               	movf	i2___llmod@divisor+3,w,c
 36723  0187E8  5A11               	subwfb	i2___llmod@dividend+3,f,c
 36724  0187EA                     i2l2076:
 36725  0187EA  90D8               	bcf	status,0,c
 36726  0187EC  3215               	rrcf	i2___llmod@divisor+3,f,c
 36727  0187EE  3214               	rrcf	i2___llmod@divisor+2,f,c
 36728  0187F0  3213               	rrcf	i2___llmod@divisor+1,f,c
 36729  0187F2  3212               	rrcf	i2___llmod@divisor,f,c
 36730  0187F4  2E16               	decfsz	i2___llmod@counter,f,c
 36731  0187F6  D7E7               	goto	i2u1767_40
 36732  0187F8                     i2l2077:
 36733  0187F8  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 36734  0187FC  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 36735  018800  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 36736  018804  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 36737  018808  0012               	return		;funcret
 36738  01880A                     __end_ofi2___llmod:
 36739                           	opt stack 0
 36740                           tosu	equ	0xFFF
 36741                           tosh	equ	0xFFE
 36742                           tosl	equ	0xFFD
 36743                           pclatu	equ	0xFFB
 36744                           pclath	equ	0xFFA
 36745                           tblptru	equ	0xFF8
 36746                           tblptrh	equ	0xFF7
 36747                           tblptrl	equ	0xFF6
 36748                           tablat	equ	0xFF5
 36749                           prodh	equ	0xFF4
 36750                           prodl	equ	0xFF3
 36751                           intcon	equ	0xFF2
 36752                           indf0	equ	0xFEF
 36753                           postinc0	equ	0xFEE
 36754                           fsr0h	equ	0xFEA
 36755                           fsr0l	equ	0xFE9
 36756                           wreg	equ	0xFE8
 36757                           indf1	equ	0xFE7
 36758                           postdec1	equ	0xFE5
 36759                           plusw1	equ	0xFE3
 36760                           fsr1h	equ	0xFE2
 36761                           fsr1l	equ	0xFE1
 36762                           bsr	equ	0xFE0
 36763                           indf2	equ	0xFDF
 36764                           postinc2	equ	0xFDE
 36765                           postdec2	equ	0xFDD
 36766                           plusw2	equ	0xFDB
 36767                           fsr2h	equ	0xFDA
 36768                           fsr2l	equ	0xFD9
 36769                           status	equ	0xFD8
 36770                           
 36771 ;; *************** function i2___lldiv *****************
 36772 ;; Defined at:
 36773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 36774 ;; Parameters:    Size  Location     Type
 36775 ;;  dividend        4    0[COMRAM] unsigned long 
 36776 ;;  divisor         4    4[COMRAM] unsigned long 
 36777 ;; Auto vars:     Size  Location     Type
 36778 ;;  __lldiv         4    8[COMRAM] unsigned long 
 36779 ;;  __lldiv         1   12[COMRAM] unsigned char 
 36780 ;; Return value:  Size  Location     Type
 36781 ;;                  4    0[COMRAM] unsigned long 
 36782 ;; Registers used:
 36783 ;;		wreg, status,2, status,0
 36784 ;; Tracked objects:
 36785 ;;		On entry : 0/0
 36786 ;;		On exit  : 0/0
 36787 ;;		Unchanged: 0/0
 36788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36789 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36790 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36792 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36793 ;;Total ram usage:       13 bytes
 36794 ;; Hardware stack levels used:    1
 36795 ;; This function calls:
 36796 ;;		Nothing
 36797 ;; This function is called by:
 36798 ;;		i2_printf
 36799 ;; This function uses a non-reentrant model
 36800 ;;
 36801                           
 36802                           	psect	text103
 36803  0183A2                     __ptext103:
 36804                           	opt stack 0
 36805  0183A2                     i2___lldiv:
 36806                           	opt stack 16
 36807                           
 36808                           ;incstack = 0
 36809  0183A2  0E00               	movlw	0
 36810  0183A4  6E09               	movwf	i2___lldiv@quotient,c
 36811  0183A6  0E00               	movlw	0
 36812  0183A8  6E0A               	movwf	i2___lldiv@quotient+1,c
 36813  0183AA  0E00               	movlw	0
 36814  0183AC  6E0B               	movwf	i2___lldiv@quotient+2,c
 36815  0183AE  0E00               	movlw	0
 36816  0183B0  6E0C               	movwf	i2___lldiv@quotient+3,c
 36817  0183B2  5005               	movf	i2___lldiv@divisor,w,c
 36818  0183B4  1006               	iorwf	i2___lldiv@divisor+1,w,c
 36819  0183B6  1007               	iorwf	i2___lldiv@divisor+2,w,c
 36820  0183B8  1008               	iorwf	i2___lldiv@divisor+3,w,c
 36821  0183BA  B4D8               	btfsc	status,2,c
 36822  0183BC  D02A               	goto	i2l2067
 36823  0183BE  0E01               	movlw	1
 36824  0183C0  6E0D               	movwf	i2___lldiv@counter,c
 36825  0183C2  D006               	goto	i2l2062
 36826  0183C4  90D8               	bcf	status,0,c
 36827  0183C6  3605               	rlcf	i2___lldiv@divisor,f,c
 36828  0183C8  3606               	rlcf	i2___lldiv@divisor+1,f,c
 36829  0183CA  3607               	rlcf	i2___lldiv@divisor+2,f,c
 36830  0183CC  3608               	rlcf	i2___lldiv@divisor+3,f,c
 36831  0183CE  2A0D               	incf	i2___lldiv@counter,f,c
 36832  0183D0                     i2l2062:
 36833  0183D0  AE08               	btfss	i2___lldiv@divisor+3,7,c
 36834  0183D2  D7F8               	goto	i2l2063
 36835  0183D4                     i2u1764_40:
 36836  0183D4  90D8               	bcf	status,0,c
 36837  0183D6  3609               	rlcf	i2___lldiv@quotient,f,c
 36838  0183D8  360A               	rlcf	i2___lldiv@quotient+1,f,c
 36839  0183DA  360B               	rlcf	i2___lldiv@quotient+2,f,c
 36840  0183DC  360C               	rlcf	i2___lldiv@quotient+3,f,c
 36841  0183DE  5005               	movf	i2___lldiv@divisor,w,c
 36842  0183E0  5C01               	subwf	i2___lldiv@dividend,w,c
 36843  0183E2  5006               	movf	i2___lldiv@divisor+1,w,c
 36844  0183E4  5802               	subwfb	i2___lldiv@dividend+1,w,c
 36845  0183E6  5007               	movf	i2___lldiv@divisor+2,w,c
 36846  0183E8  5803               	subwfb	i2___lldiv@dividend+2,w,c
 36847  0183EA  5008               	movf	i2___lldiv@divisor+3,w,c
 36848  0183EC  5804               	subwfb	i2___lldiv@dividend+3,w,c
 36849  0183EE  A0D8               	btfss	status,0,c
 36850  0183F0  D009               	goto	i2l2066
 36851  0183F2  5005               	movf	i2___lldiv@divisor,w,c
 36852  0183F4  5E01               	subwf	i2___lldiv@dividend,f,c
 36853  0183F6  5006               	movf	i2___lldiv@divisor+1,w,c
 36854  0183F8  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 36855  0183FA  5007               	movf	i2___lldiv@divisor+2,w,c
 36856  0183FC  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 36857  0183FE  5008               	movf	i2___lldiv@divisor+3,w,c
 36858  018400  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 36859  018402  8009               	bsf	i2___lldiv@quotient,0,c
 36860  018404                     i2l2066:
 36861  018404  90D8               	bcf	status,0,c
 36862  018406  3208               	rrcf	i2___lldiv@divisor+3,f,c
 36863  018408  3207               	rrcf	i2___lldiv@divisor+2,f,c
 36864  01840A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 36865  01840C  3205               	rrcf	i2___lldiv@divisor,f,c
 36866  01840E  2E0D               	decfsz	i2___lldiv@counter,f,c
 36867  018410  D7E1               	goto	i2u1764_40
 36868  018412                     i2l2067:
 36869  018412  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 36870  018416  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 36871  01841A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 36872  01841E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 36873  018422  0012               	return		;funcret
 36874  018424                     __end_ofi2___lldiv:
 36875                           	opt stack 0
 36876                           tosu	equ	0xFFF
 36877                           tosh	equ	0xFFE
 36878                           tosl	equ	0xFFD
 36879                           pclatu	equ	0xFFB
 36880                           pclath	equ	0xFFA
 36881                           tblptru	equ	0xFF8
 36882                           tblptrh	equ	0xFF7
 36883                           tblptrl	equ	0xFF6
 36884                           tablat	equ	0xFF5
 36885                           prodh	equ	0xFF4
 36886                           prodl	equ	0xFF3
 36887                           intcon	equ	0xFF2
 36888                           indf0	equ	0xFEF
 36889                           postinc0	equ	0xFEE
 36890                           fsr0h	equ	0xFEA
 36891                           fsr0l	equ	0xFE9
 36892                           wreg	equ	0xFE8
 36893                           indf1	equ	0xFE7
 36894                           postdec1	equ	0xFE5
 36895                           plusw1	equ	0xFE3
 36896                           fsr1h	equ	0xFE2
 36897                           fsr1l	equ	0xFE1
 36898                           bsr	equ	0xFE0
 36899                           indf2	equ	0xFDF
 36900                           postinc2	equ	0xFDE
 36901                           postdec2	equ	0xFDD
 36902                           plusw2	equ	0xFDB
 36903                           fsr2h	equ	0xFDA
 36904                           fsr2l	equ	0xFD9
 36905                           status	equ	0xFD8
 36906                           
 36907 ;; *************** function _ADCC_ThresholdISR *****************
 36908 ;; Defined at:
 36909 ;;		line 298 in file "mcc_generated_files/adcc.c"
 36910 ;; Parameters:    Size  Location     Type
 36911 ;;		None
 36912 ;; Auto vars:     Size  Location     Type
 36913 ;;		None
 36914 ;; Return value:  Size  Location     Type
 36915 ;;                  1    wreg      void 
 36916 ;; Registers used:
 36917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36918 ;; Tracked objects:
 36919 ;;		On entry : 0/0
 36920 ;;		On exit  : 0/0
 36921 ;;		Unchanged: 0/0
 36922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36927 ;;Total ram usage:        0 bytes
 36928 ;; Hardware stack levels used:    1
 36929 ;; Hardware stack levels required when called:    7
 36930 ;; This function calls:
 36931 ;;		Absolute function
 36932 ;;		_ADCC_DefaultInterruptHandler
 36933 ;;		_ADCPostProcessingCallback
 36934 ;; This function is called by:
 36935 ;;		_INTERRUPT_InterruptManagerHigh
 36936 ;; This function uses a non-reentrant model
 36937 ;;
 36938                           
 36939                           	psect	text104
 36940  0190A8                     __ptext104:
 36941                           	opt stack 0
 36942  0190A8                     _ADCC_ThresholdISR:
 36943                           	opt stack 11
 36944                           
 36945                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 36946                           
 36947                           ;incstack = 0
 36948  0190A8  010E               	movlb	14	; () banked
 36949  0190AA  9334               	bcf	52,1,b	;volatile
 36950                           
 36951                           ; BSR set to: 14
 36952                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 36953  0190AC  0102               	movlb	2	; () banked
 36954  0190AE  512E               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36955  0190B0  112F               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36956  0190B2  1130               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36957  0190B4  B4D8               	btfsc	status,2,c
 36958  0190B6  0012               	return	
 36959                           
 36960                           ; BSR set to: 2
 36961                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 36962  0190B8  D801               	call	i2u2670_48
 36963  0190BA  0012               	return	
 36964  0190BC                     i2u2670_48:
 36965  0190BC  0005               	push	
 36966  0190BE  6EFA               	movwf	pclath,c
 36967  0190C0  512E               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36968  0190C2  6EFD               	movwf	tosl,c
 36969  0190C4  512F               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36970  0190C6  6EFE               	movwf	tosh,c
 36971  0190C8  5130               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36972  0190CA  6EFF               	movwf	tosu,c
 36973  0190CC  50FA               	movf	pclath,w,c
 36974  0190CE  0012               	return		;indir
 36975  0190D0                     __end_of_ADCC_ThresholdISR:
 36976                           	opt stack 0
 36977                           tosu	equ	0xFFF
 36978                           tosh	equ	0xFFE
 36979                           tosl	equ	0xFFD
 36980                           pclatu	equ	0xFFB
 36981                           pclath	equ	0xFFA
 36982                           tblptru	equ	0xFF8
 36983                           tblptrh	equ	0xFF7
 36984                           tblptrl	equ	0xFF6
 36985                           tablat	equ	0xFF5
 36986                           prodh	equ	0xFF4
 36987                           prodl	equ	0xFF3
 36988                           intcon	equ	0xFF2
 36989                           indf0	equ	0xFEF
 36990                           postinc0	equ	0xFEE
 36991                           fsr0h	equ	0xFEA
 36992                           fsr0l	equ	0xFE9
 36993                           wreg	equ	0xFE8
 36994                           indf1	equ	0xFE7
 36995                           postdec1	equ	0xFE5
 36996                           plusw1	equ	0xFE3
 36997                           fsr1h	equ	0xFE2
 36998                           fsr1l	equ	0xFE1
 36999                           bsr	equ	0xFE0
 37000                           indf2	equ	0xFDF
 37001                           postinc2	equ	0xFDE
 37002                           postdec2	equ	0xFDD
 37003                           plusw2	equ	0xFDB
 37004                           fsr2h	equ	0xFDA
 37005                           fsr2l	equ	0xFD9
 37006                           status	equ	0xFD8
 37007                           
 37008 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 37009 ;; Defined at:
 37010 ;;		line 310 in file "mcc_generated_files/adcc.c"
 37011 ;; Parameters:    Size  Location     Type
 37012 ;;		None
 37013 ;; Auto vars:     Size  Location     Type
 37014 ;;		None
 37015 ;; Return value:  Size  Location     Type
 37016 ;;                  1    wreg      void 
 37017 ;; Registers used:
 37018 ;;		None
 37019 ;; Tracked objects:
 37020 ;;		On entry : 0/0
 37021 ;;		On exit  : 0/0
 37022 ;;		Unchanged: 0/0
 37023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37028 ;;Total ram usage:        0 bytes
 37029 ;; Hardware stack levels used:    1
 37030 ;; This function calls:
 37031 ;;		Nothing
 37032 ;; This function is called by:
 37033 ;;		_ADCC_Initialize
 37034 ;;		_ADCC_ThresholdISR
 37035 ;; This function uses a non-reentrant model
 37036 ;;
 37037                           
 37038                           	psect	text105
 37039  0193AE                     __ptext105:
 37040                           	opt stack 0
 37041  0193AE                     _ADCC_DefaultInterruptHandler:
 37042                           	opt stack 17
 37043                           
 37044                           ;incstack = 0
 37045  0193AE  0012               	return		;funcret
 37046  0193B0                     __end_of_ADCC_DefaultInterruptHandler:
 37047                           	opt stack 0
 37048                           tosu	equ	0xFFF
 37049                           tosh	equ	0xFFE
 37050                           tosl	equ	0xFFD
 37051                           pclatu	equ	0xFFB
 37052                           pclath	equ	0xFFA
 37053                           tblptru	equ	0xFF8
 37054                           tblptrh	equ	0xFF7
 37055                           tblptrl	equ	0xFF6
 37056                           tablat	equ	0xFF5
 37057                           prodh	equ	0xFF4
 37058                           prodl	equ	0xFF3
 37059                           intcon	equ	0xFF2
 37060                           indf0	equ	0xFEF
 37061                           postinc0	equ	0xFEE
 37062                           fsr0h	equ	0xFEA
 37063                           fsr0l	equ	0xFE9
 37064                           wreg	equ	0xFE8
 37065                           indf1	equ	0xFE7
 37066                           postdec1	equ	0xFE5
 37067                           plusw1	equ	0xFE3
 37068                           fsr1h	equ	0xFE2
 37069                           fsr1l	equ	0xFE1
 37070                           bsr	equ	0xFE0
 37071                           indf2	equ	0xFDF
 37072                           postinc2	equ	0xFDE
 37073                           postdec2	equ	0xFDD
 37074                           plusw2	equ	0xFDB
 37075                           fsr2h	equ	0xFDA
 37076                           fsr2l	equ	0xFD9
 37077                           status	equ	0xFD8
 37078                           
 37079 ;; *************** function _ADCPostProcessingCallback *****************
 37080 ;; Defined at:
 37081 ;;		line 227 in file "main.c"
 37082 ;; Parameters:    Size  Location     Type
 37083 ;;		None
 37084 ;; Auto vars:     Size  Location     Type
 37085 ;;  current_adc_    1  117[BANK0 ] enum E17425
 37086 ;; Return value:  Size  Location     Type
 37087 ;;                  1    wreg      void 
 37088 ;; Registers used:
 37089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37090 ;; Tracked objects:
 37091 ;;		On entry : 0/0
 37092 ;;		On exit  : 0/0
 37093 ;;		Unchanged: 0/0
 37094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37096 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37098 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37099 ;;Total ram usage:       21 bytes
 37100 ;; Hardware stack levels used:    1
 37101 ;; Hardware stack levels required when called:    6
 37102 ;; This function calls:
 37103 ;;		_ADCC_GetConversionResult
 37104 ;;		_ADCC_GetFilterValue
 37105 ;;		_ADCC_HasAccumulatorOverflowed
 37106 ;;		_ADCC_StopConversion
 37107 ;;		_abs
 37108 ;;		_currentMeasuredToPeak
 37109 ;;		_peakToRMS
 37110 ;;		i2_TMR7_StopTimer
 37111 ;;		i2___fladd
 37112 ;;		i2___fldiv
 37113 ;;		i2___flge
 37114 ;;		i2___flmul
 37115 ;;		i2___flneg
 37116 ;;		i2___fltol
 37117 ;;		i2___xxtofl
 37118 ;; This function is called by:
 37119 ;;		_main
 37120 ;;		_ADCC_ThresholdISR
 37121 ;; This function uses a non-reentrant model
 37122 ;;
 37123                           
 37124                           	psect	text106
 37125  012F34                     __ptext106:
 37126                           	opt stack 0
 37127  012F34                     _ADCPostProcessingCallback:
 37128                           	opt stack 11
 37129                           
 37130                           ;main.c: 230: ADCC_StopConversion();
 37131                           
 37132                           ;incstack = 0
 37133  012F34  ECD2  F0C9         	call	_ADCC_StopConversion	;wreg free
 37134                           
 37135                           ;main.c: 233: adcc_channel_t current_adc_channel = ADPCH;
 37136  012F38  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 37137                           
 37138                           ;main.c: 236: switch (current_adc_channel) {
 37139  012F3C  EF72  F09C         	goto	i2l997
 37140  012F40                     
 37141                           ;main.c: 240: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 37142  012F40  EC3B  F0C9         	call	_ADCC_GetConversionResult	;wreg free
 37143  012F44  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 37144  012F48  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 37145  012F4C  6A07               	clrf	i2___xxtofl@val+2,c
 37146  012F4E  6A08               	clrf	i2___xxtofl@val+3,c
 37147  012F50  0E00               	movlw	0
 37148  012F52  EC4E  F0B7         	call	i2___xxtofl
 37149  012F56  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 37150  012F5A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 37151  012F5E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 37152  012F62  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 37153  012F66  0E0D               	movlw	13
 37154  012F68  6E34               	movwf	i2___flmul@a,c
 37155  012F6A  0E68               	movlw	104
 37156  012F6C  6E35               	movwf	i2___flmul@a+1,c
 37157  012F6E  0E53               	movlw	83
 37158  012F70  6E36               	movwf	i2___flmul@a+2,c
 37159  012F72  0E3B               	movlw	59
 37160  012F74  6E37               	movwf	i2___flmul@a+3,c
 37161  012F76  EC79  F0A4         	call	i2___flmul	;wreg free
 37162  012F7A  C030  F1D7         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 37163  012F7E  C031  F1D8         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 37164  012F82  C032  F1D9         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 37165  012F86  C033  F1DA         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 37166                           
 37167                           ;main.c: 242: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 37168  012F8A  0E0A               	movlw	10
 37169  012F8C  6E34               	movwf	i2___flge@ff1,c
 37170  012F8E  0ED7               	movlw	215
 37171  012F90  6E35               	movwf	i2___flge@ff1+1,c
 37172  012F92  0E23               	movlw	35
 37173  012F94  6E36               	movwf	i2___flge@ff1+2,c
 37174  012F96  0E3C               	movlw	60
 37175  012F98  6E37               	movwf	i2___flge@ff1+3,c
 37176  012F9A  C1D7  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 37177  012F9E  C1D8  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 37178  012FA2  C1D9  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 37179  012FA6  C1DA  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 37180  012FAA  EC75  F0BB         	call	i2___flge	;wreg free
 37181  012FAE  A0D8               	btfss	status,0,c
 37182  012FB0  D005               	goto	i2u1773_40
 37183  012FB2  ECAF  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 37184  012FB6  0900               	iorlw	0
 37185  012FB8  B4D8               	btfsc	status,2,c
 37186  012FBA  D007               	goto	i2l999
 37187  012FBC                     i2u1773_40:
 37188                           
 37189                           ;main.c: 244: LATFbits.LATF3 = 1;
 37190  012FBC  867E               	bsf	3966,3,c	;volatile
 37191                           
 37192                           ;main.c: 245: adc_error_flag = 1;
 37193  012FBE  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 37194                           
 37195                           ;main.c: 247: PIE5bits.TMR7IE = 0;
 37196  012FC0  010E               	movlb	14	; () banked
 37197  012FC2  9D2E               	bcf	46,6,b	;volatile
 37198                           
 37199                           ; BSR set to: 14
 37200                           ;main.c: 248: TMR7_StopTimer();
 37201  012FC4  ECCF  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 37202                           
 37203                           ;main.c: 249: return;
 37204  012FC8  0012               	return	
 37205  012FCA                     i2l999:
 37206                           
 37207                           ;main.c: 251: }
 37208                           ;main.c: 253: next_channel = channel_FVR_buf1;
 37209  012FCA  0E3F               	movlw	63
 37210  012FCC  0101               	movlb	1	; () banked
 37211  012FCE  6FE8               	movwf	_next_channel& (0+255),b
 37212                           
 37213                           ;main.c: 255: break;
 37214  012FD0  0012               	return	
 37215  012FD2                     
 37216                           ;main.c: 260: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 37217                           
 37218                           ; BSR set to: 1
 37219  012FD2  0E0D               	movlw	13
 37220  012FD4  6E34               	movwf	i2___flmul@a,c
 37221  012FD6  0E68               	movlw	104
 37222  012FD8  6E35               	movwf	i2___flmul@a+1,c
 37223  012FDA  0E53               	movlw	83
 37224  012FDC  6E36               	movwf	i2___flmul@a+2,c
 37225  012FDE  0E3B               	movlw	59
 37226  012FE0  6E37               	movwf	i2___flmul@a+3,c
 37227  012FE2  EC3B  F0C9         	call	_ADCC_GetConversionResult	;wreg free
 37228  012FE6  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 37229  012FEA  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 37230  012FEE  6A07               	clrf	i2___xxtofl@val+2,c
 37231  012FF0  6A08               	clrf	i2___xxtofl@val+3,c
 37232  012FF2  0E00               	movlw	0
 37233  012FF4  EC4E  F0B7         	call	i2___xxtofl
 37234  012FF8  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 37235  012FFC  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 37236  013000  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 37237  013004  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 37238  013008  EC79  F0A4         	call	i2___flmul	;wreg free
 37239  01300C  C030  F056         	movff	?i2___flmul,i2___fladd@b
 37240  013010  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 37241  013014  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 37242  013018  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 37243  01301C  C1D7  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 37244  013020  C1D8  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 37245  013024  C1D9  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 37246  013028  C1DA  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 37247  01302C  ECC0  F0A7         	call	i2___fladd	;wreg free
 37248  013030  C056  F1E4         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 37249  013034  C057  F1E5         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 37250  013038  C058  F1E6         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 37251  01303C  C059  F1E7         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 37252                           
 37253                           ;main.c: 261: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 37254  013040  0E6F               	movlw	111
 37255  013042  6E13               	movwf	i2___fldiv@b,c
 37256  013044  0E12               	movlw	18
 37257  013046  6E14               	movwf	i2___fldiv@b+1,c
 37258  013048  0E03               	movlw	3
 37259  01304A  6E15               	movwf	i2___fldiv@b+2,c
 37260  01304C  0E40               	movlw	64
 37261  01304E  6E16               	movwf	i2___fldiv@b+3,c
 37262  013050  C1E4  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 37263  013054  C1E5  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 37264  013058  C1E6  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 37265  01305C  C1E7  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 37266  013060  EC80  F0B0         	call	i2___fldiv	;wreg free
 37267  013064  C013  F224         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 37268  013068  C014  F225         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 37269  01306C  C015  F226         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 37270  013070  C016  F227         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 37271                           
 37272                           ;main.c: 263: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 37273  013074  0E00               	movlw	0
 37274  013076  6E34               	movwf	i2___flge@ff1,c
 37275  013078  0E00               	movlw	0
 37276  01307A  6E35               	movwf	i2___flge@ff1+1,c
 37277  01307C  0E20               	movlw	32
 37278  01307E  6E36               	movwf	i2___flge@ff1+2,c
 37279  013080  0E40               	movlw	64
 37280  013082  6E37               	movwf	i2___flge@ff1+3,c
 37281  013084  C1E4  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 37282  013088  C1E5  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 37283  01308C  C1E6  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 37284  013090  C1E7  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 37285  013094  EC75  F0BB         	call	i2___flge	;wreg free
 37286  013098  A0D8               	btfss	status,0,c
 37287  01309A  D019               	goto	i2u1776_40
 37288  01309C  C1E4  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 37289  0130A0  C1E5  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 37290  0130A4  C1E6  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 37291  0130A8  C1E7  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 37292  0130AC  0E00               	movlw	0
 37293  0130AE  6E38               	movwf	i2___flge@ff2,c
 37294  0130B0  0E00               	movlw	0
 37295  0130B2  6E39               	movwf	i2___flge@ff2+1,c
 37296  0130B4  0E00               	movlw	0
 37297  0130B6  6E3A               	movwf	i2___flge@ff2+2,c
 37298  0130B8  0E40               	movlw	64
 37299  0130BA  6E3B               	movwf	i2___flge@ff2+3,c
 37300  0130BC  EC75  F0BB         	call	i2___flge	;wreg free
 37301  0130C0  A0D8               	btfss	status,0,c
 37302  0130C2  D005               	goto	i2u1776_40
 37303  0130C4  ECAF  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 37304  0130C8  0900               	iorlw	0
 37305  0130CA  B4D8               	btfsc	status,2,c
 37306  0130CC  D007               	goto	i2l1005
 37307  0130CE                     i2u1776_40:
 37308                           
 37309                           ;main.c: 265: LATFbits.LATF3 = 1;
 37310  0130CE  867E               	bsf	3966,3,c	;volatile
 37311                           
 37312                           ;main.c: 266: adc_error_flag = 1;
 37313  0130D0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 37314                           
 37315                           ;main.c: 268: PIE5bits.TMR7IE = 0;
 37316  0130D2  010E               	movlb	14	; () banked
 37317  0130D4  9D2E               	bcf	46,6,b	;volatile
 37318                           
 37319                           ; BSR set to: 14
 37320                           ;main.c: 269: TMR7_StopTimer();
 37321  0130D6  ECCF  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 37322                           
 37323                           ;main.c: 270: return;
 37324  0130DA  0012               	return	
 37325  0130DC                     i2l1005:
 37326                           
 37327                           ;main.c: 272: }
 37328                           ;main.c: 274: next_channel = POS3P3_ADC;
 37329  0130DC  0E22               	movlw	34
 37330  0130DE  0101               	movlb	1	; () banked
 37331  0130E0  6FE8               	movwf	_next_channel& (0+255),b
 37332                           
 37333                           ;main.c: 276: break;
 37334  0130E2  0012               	return	
 37335  0130E4                     
 37336                           ;main.c: 281: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 37337                           
 37338                           ; BSR set to: 1
 37339  0130E4  C224  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 37340  0130E8  C225  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 37341  0130EC  C226  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 37342  0130F0  C227  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 37343  0130F4  EC31  F0C9         	call	_ADCC_GetFilterValue	;wreg free
 37344  0130F8  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 37345  0130FC  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 37346  013100  6A07               	clrf	i2___xxtofl@val+2,c
 37347  013102  6A08               	clrf	i2___xxtofl@val+3,c
 37348  013104  0E00               	movlw	0
 37349  013106  EC4E  F0B7         	call	i2___xxtofl
 37350  01310A  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 37351  01310E  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 37352  013112  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 37353  013116  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 37354  01311A  EC79  F0A4         	call	i2___flmul	;wreg free
 37355  01311E  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4181
 37356  013122  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4181+1
 37357  013126  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4181+2
 37358  01312A  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4181+3
 37359                           
 37360                           ;main.c: 281: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 37361  01312E  C0D6  F030         	movff	_ADCPostProcessingCallback$4181,i2___flmul@b
 37362  013132  C0D7  F031         	movff	_ADCPostProcessingCallback$4181+1,i2___flmul@b+1
 37363  013136  C0D8  F032         	movff	_ADCPostProcessingCallback$4181+2,i2___flmul@b+2
 37364  01313A  C0D9  F033         	movff	_ADCPostProcessingCallback$4181+3,i2___flmul@b+3
 37365  01313E  0E0D               	movlw	13
 37366  013140  6E34               	movwf	i2___flmul@a,c
 37367  013142  0E68               	movlw	104
 37368  013144  6E35               	movwf	i2___flmul@a+1,c
 37369  013146  0ED3               	movlw	211
 37370  013148  6E36               	movwf	i2___flmul@a+2,c
 37371  01314A  0E3B               	movlw	59
 37372  01314C  6E37               	movwf	i2___flmul@a+3,c
 37373  01314E  EC79  F0A4         	call	i2___flmul	;wreg free
 37374  013152  C030  F1D3         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 37375  013156  C031  F1D4         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 37376  01315A  C032  F1D5         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 37377  01315E  C033  F1D6         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 37378                           
 37379                           ;main.c: 283: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 37380  013162  0E00               	movlw	0
 37381  013164  6E34               	movwf	i2___flge@ff1,c
 37382  013166  0E00               	movlw	0
 37383  013168  6E35               	movwf	i2___flge@ff1+1,c
 37384  01316A  0E60               	movlw	96
 37385  01316C  6E36               	movwf	i2___flge@ff1+2,c
 37386  01316E  0E40               	movlw	64
 37387  013170  6E37               	movwf	i2___flge@ff1+3,c
 37388  013172  C1D3  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 37389  013176  C1D4  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 37390  01317A  C1D5  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 37391  01317E  C1D6  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 37392  013182  EC75  F0BB         	call	i2___flge	;wreg free
 37393  013186  A0D8               	btfss	status,0,c
 37394  013188  D005               	goto	i2u1778_40
 37395  01318A  ECAF  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 37396  01318E  0900               	iorlw	0
 37397  013190  B4D8               	btfsc	status,2,c
 37398  013192  D007               	goto	i2l1009
 37399  013194                     i2u1778_40:
 37400                           
 37401                           ;main.c: 285: LATFbits.LATF3 = 1;
 37402  013194  867E               	bsf	3966,3,c	;volatile
 37403                           
 37404                           ;main.c: 286: adc_error_flag = 1;
 37405  013196  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 37406                           
 37407                           ;main.c: 288: PIE5bits.TMR7IE = 0;
 37408  013198  010E               	movlb	14	; () banked
 37409  01319A  9D2E               	bcf	46,6,b	;volatile
 37410                           
 37411                           ; BSR set to: 14
 37412                           ;main.c: 289: TMR7_StopTimer();
 37413  01319C  ECCF  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 37414                           
 37415                           ;main.c: 290: return;
 37416  0131A0  0012               	return	
 37417  0131A2                     i2l1009:
 37418                           
 37419                           ;main.c: 292: }
 37420                           ;main.c: 294: next_channel = ISNS_ADC;
 37421  0131A2  0E00               	movlw	0
 37422  0131A4  0101               	movlb	1	; () banked
 37423  0131A6  6FE8               	movwf	_next_channel& (0+255),b
 37424                           
 37425                           ;main.c: 296: break;
 37426  0131A8  0012               	return	
 37427  0131AA                     
 37428                           ;main.c: 301: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 37429                           
 37430                           ; BSR set to: 1
 37431  0131AA  0E00               	movlw	0
 37432  0131AC  6E17               	movwf	i2___fldiv@a,c
 37433  0131AE  0EC0               	movlw	192
 37434  0131B0  6E18               	movwf	i2___fldiv@a+1,c
 37435  0131B2  0E7F               	movlw	127
 37436  0131B4  6E19               	movwf	i2___fldiv@a+2,c
 37437  0131B6  0E44               	movlw	68
 37438  0131B8  6E1A               	movwf	i2___fldiv@a+3,c
 37439  0131BA  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 37440  0131BE  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 37441  0131C2  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 37442  0131C6  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 37443  0131CA  EC80  F0B0         	call	i2___fldiv	;wreg free
 37444  0131CE  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 37445  0131D2  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 37446  0131D6  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 37447  0131DA  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 37448  0131DE  EC31  F0C9         	call	_ADCC_GetFilterValue	;wreg free
 37449  0131E2  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 37450  0131E6  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 37451  0131EA  6A07               	clrf	i2___xxtofl@val+2,c
 37452  0131EC  6A08               	clrf	i2___xxtofl@val+3,c
 37453  0131EE  0E00               	movlw	0
 37454  0131F0  EC4E  F0B7         	call	i2___xxtofl
 37455  0131F4  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 37456  0131F8  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 37457  0131FC  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 37458  013200  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 37459  013204  EC79  F0A4         	call	i2___flmul	;wreg free
 37460  013208  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4181
 37461  01320C  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4181+1
 37462  013210  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4181+2
 37463  013214  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4181+3
 37464                           
 37465                           ;main.c: 301: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 37466  013218  C0D6  F030         	movff	_ADCPostProcessingCallback$4181,i2___flmul@b
 37467  01321C  C0D7  F031         	movff	_ADCPostProcessingCallback$4181+1,i2___flmul@b+1
 37468  013220  C0D8  F032         	movff	_ADCPostProcessingCallback$4181+2,i2___flmul@b+2
 37469  013224  C0D9  F033         	movff	_ADCPostProcessingCallback$4181+3,i2___flmul@b+3
 37470  013228  0E35               	movlw	53
 37471  01322A  6E34               	movwf	i2___flmul@a,c
 37472  01322C  0E5E               	movlw	94
 37473  01322E  6E35               	movwf	i2___flmul@a+1,c
 37474  013230  0EF2               	movlw	242
 37475  013232  6E36               	movwf	i2___flmul@a+2,c
 37476  013234  0E3F               	movlw	63
 37477  013236  6E37               	movwf	i2___flmul@a+3,c
 37478  013238  EC79  F0A4         	call	i2___flmul	;wreg free
 37479  01323C  C030  F1C7         	movff	?i2___flmul,_Imeas	;volatile
 37480  013240  C031  F1C8         	movff	?i2___flmul+1,_Imeas+1	;volatile
 37481  013244  C032  F1C9         	movff	?i2___flmul+2,_Imeas+2	;volatile
 37482  013248  C033  F1CA         	movff	?i2___flmul+3,_Imeas+3	;volatile
 37483                           
 37484                           ;main.c: 305: if (LATGbits.LATG0 != 1) {
 37485  01324C  B07F               	btfsc	3967,0,c	;volatile
 37486  01324E  D128               	goto	i2l1013
 37487                           
 37488                           ;main.c: 310: if (load_enable) {
 37489  013250  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 37490  013252  D0CD               	goto	i2l1014
 37491                           
 37492                           ;main.c: 313: if (dimming_period < 0x7FEE) {
 37493  013254  0EEE               	movlw	238
 37494  013256  0100               	movlb	0	; () banked
 37495  013258  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 37496  01325A  0E7F               	movlw	127
 37497  01325C  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 37498  01325E  B0D8               	btfsc	status,0,c
 37499  013260  D052               	goto	i2l1015
 37500                           
 37501                           ; BSR set to: 0
 37502                           ;main.c: 315: Ipk = Imeas;
 37503  013262  C1C7  F0F6         	movff	_Imeas,_Ipk	;volatile
 37504  013266  C1C8  F0F7         	movff	_Imeas+1,_Ipk+1	;volatile
 37505  01326A  C1C9  F0F8         	movff	_Imeas+2,_Ipk+2	;volatile
 37506  01326E  C1CA  F0F9         	movff	_Imeas+3,_Ipk+3	;volatile
 37507                           
 37508                           ; BSR set to: 0
 37509                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 37510  013272  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 37511  013276  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 37512  01327A  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 37513  01327E  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 37514  013282  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 37515  013286  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 37516  01328A  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 37517  01328E  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 37518  013292  EC64  F0B4         	call	_peakToRMS	;wreg free
 37519  013296  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4182
 37520  01329A  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4182+1
 37521  01329E  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4182+2
 37522  0132A2  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4182+3
 37523                           
 37524                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 37525  0132A6  C2EB  F05A         	movff	_Irms_offset,i2___fladd@a
 37526  0132AA  C2EC  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 37527  0132AE  C2ED  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 37528  0132B2  C2EE  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 37529  0132B6  C0DA  F056         	movff	_ADCPostProcessingCallback$4182,i2___fladd@b
 37530  0132BA  C0DB  F057         	movff	_ADCPostProcessingCallback$4182+1,i2___fladd@b+1
 37531  0132BE  C0DC  F058         	movff	_ADCPostProcessingCallback$4182+2,i2___fladd@b+2
 37532  0132C2  C0DD  F059         	movff	_ADCPostProcessingCallback$4182+3,i2___fladd@b+3
 37533  0132C6  ECC0  F0A7         	call	i2___fladd	;wreg free
 37534  0132CA  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 37535  0132CE  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 37536  0132D2  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 37537  0132D6  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 37538  0132DA  EC02  F0BE         	call	i2___fltol	;wreg free
 37539  0132DE  C06C  F076         	movff	?i2___fltol,abs@a
 37540  0132E2  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 37541  0132E6  EC17  F0C8         	call	_abs	;wreg free
 37542  0132EA  0100               	movlb	0	; () banked
 37543  0132EC  C076  F005         	movff	?_abs,i2___xxtofl@val
 37544  0132F0  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 37545  0132F4  0E00               	movlw	0
 37546  0132F6  BE06               	btfsc	i2___xxtofl@val+1,7,c
 37547  0132F8  0EFF               	movlw	-1
 37548  0132FA  6E07               	movwf	i2___xxtofl@val+2,c
 37549  0132FC  6E08               	movwf	i2___xxtofl@val+3,c
 37550  0132FE  0E01               	movlw	1
 37551  013300  EC4E  F0B7         	call	i2___xxtofl
 37552  013304  D063               	goto	L17
 37553  013306                     i2l1015:
 37554                           
 37555                           ;main.c: 321: else {
 37556                           ;main.c: 323: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 37557  013306  C1C7  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 37558  01330A  C1C8  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 37559  01330E  C1C9  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 37560  013312  C1CA  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 37561  013316  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 37562  01331A  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 37563  01331E  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 37564  013322  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 37565  013326  EC12  F0C2         	call	_currentMeasuredToPeak	;wreg free
 37566  01332A  C099  F0F6         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 37567  01332E  C09A  F0F7         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 37568  013332  C09B  F0F8         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 37569  013336  C09C  F0F9         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 37570                           
 37571                           ;main.c: 324: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 37572  01333A  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 37573  01333E  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 37574  013342  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 37575  013346  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 37576  01334A  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 37577  01334E  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 37578  013352  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 37579  013356  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 37580  01335A  EC64  F0B4         	call	_peakToRMS	;wreg free
 37581  01335E  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4182
 37582  013362  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4182+1
 37583  013366  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4182+2
 37584  01336A  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4182+3
 37585                           
 37586                           ;main.c: 324: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 37587  01336E  C2EB  F05A         	movff	_Irms_offset,i2___fladd@a
 37588  013372  C2EC  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 37589  013376  C2ED  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 37590  01337A  C2EE  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 37591  01337E  C0DA  F056         	movff	_ADCPostProcessingCallback$4182,i2___fladd@b
 37592  013382  C0DB  F057         	movff	_ADCPostProcessingCallback$4182+1,i2___fladd@b+1
 37593  013386  C0DC  F058         	movff	_ADCPostProcessingCallback$4182+2,i2___fladd@b+2
 37594  01338A  C0DD  F059         	movff	_ADCPostProcessingCallback$4182+3,i2___fladd@b+3
 37595  01338E  ECC0  F0A7         	call	i2___fladd	;wreg free
 37596  013392  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 37597  013396  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 37598  01339A  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 37599  01339E  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 37600  0133A2  EC02  F0BE         	call	i2___fltol	;wreg free
 37601  0133A6  C06C  F076         	movff	?i2___fltol,abs@a
 37602  0133AA  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 37603  0133AE  EC17  F0C8         	call	_abs	;wreg free
 37604  0133B2  0100               	movlb	0	; () banked
 37605  0133B4  C076  F005         	movff	?_abs,i2___xxtofl@val
 37606  0133B8  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 37607  0133BC  0E00               	movlw	0
 37608  0133BE  BE06               	btfsc	i2___xxtofl@val+1,7,c
 37609  0133C0  0EFF               	movlw	-1
 37610  0133C2  6E07               	movwf	i2___xxtofl@val+2,c
 37611  0133C4  6E08               	movwf	i2___xxtofl@val+3,c
 37612  0133C6  0E01               	movlw	1
 37613  0133C8  EC4E  F0B7         	call	i2___xxtofl
 37614  0133CC                     L17:
 37615  0133CC  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 37616  0133D0  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 37617  0133D4  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 37618  0133D8  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 37619                           
 37620                           ;main.c: 326: }
 37621                           ;main.c: 328: Vpk = Vpk_const;
 37622  0133DC  C2EF  F220         	movff	_Vpk_const,_Vpk	;volatile
 37623  0133E0  C2F0  F221         	movff	_Vpk_const+1,_Vpk+1	;volatile
 37624  0133E4  C2F1  F222         	movff	_Vpk_const+2,_Vpk+2	;volatile
 37625  0133E8  C2F2  F223         	movff	_Vpk_const+3,_Vpk+3	;volatile
 37626                           
 37627                           ;main.c: 330: }
 37628  0133EC  D02C               	goto	i2l1017
 37629  0133EE                     i2l1014:
 37630                           
 37631                           ;main.c: 332: else {
 37632                           ;main.c: 334: Ipk = 0.0;
 37633  0133EE  0E00               	movlw	0
 37634  0133F0  0100               	movlb	0	; () banked
 37635  0133F2  6FF6               	movwf	_Ipk& (0+255),b	;volatile
 37636  0133F4  0E00               	movlw	0
 37637  0133F6  6FF7               	movwf	(_Ipk+1)& (0+255),b	;volatile
 37638  0133F8  0E00               	movlw	0
 37639  0133FA  6FF8               	movwf	(_Ipk+2)& (0+255),b	;volatile
 37640  0133FC  0E00               	movlw	0
 37641  0133FE  6FF9               	movwf	(_Ipk+3)& (0+255),b	;volatile
 37642                           
 37643                           ;main.c: 335: Vpk = 0.0;
 37644  013400  0E00               	movlw	0
 37645  013402  0102               	movlb	2	; () banked
 37646  013404  6F20               	movwf	_Vpk& (0+255),b	;volatile
 37647  013406  0E00               	movlw	0
 37648  013408  6F21               	movwf	(_Vpk+1)& (0+255),b	;volatile
 37649  01340A  0E00               	movlw	0
 37650  01340C  6F22               	movwf	(_Vpk+2)& (0+255),b	;volatile
 37651  01340E  0E00               	movlw	0
 37652  013410  6F23               	movwf	(_Vpk+3)& (0+255),b	;volatile
 37653                           
 37654                           ; BSR set to: 2
 37655                           ;main.c: 336: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 37656  013412  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 37657  013416  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 37658  01341A  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 37659  01341E  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 37660  013422  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 37661  013426  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 37662  01342A  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 37663  01342E  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 37664  013432  EC64  F0B4         	call	_peakToRMS	;wreg free
 37665  013436  C0B1  F1C3         	movff	?_peakToRMS,_Irms	;volatile
 37666  01343A  C0B2  F1C4         	movff	?_peakToRMS+1,_Irms+1	;volatile
 37667  01343E  C0B3  F1C5         	movff	?_peakToRMS+2,_Irms+2	;volatile
 37668  013442  C0B4  F1C6         	movff	?_peakToRMS+3,_Irms+3	;volatile
 37669  013446                     i2l1017:
 37670                           
 37671                           ;main.c: 338: }
 37672                           ;main.c: 340: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 37673  013446  C220  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 37674  01344A  C221  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 37675  01344E  C222  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 37676  013452  C223  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 37677  013456  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 37678  01345A  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 37679  01345E  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 37680  013462  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 37681  013466  EC64  F0B4         	call	_peakToRMS	;wreg free
 37682  01346A  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 37683  01346E  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 37684  013472  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 37685  013476  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 37686                           
 37687                           ;main.c: 341: Avg_Power = Vrms * Irms;
 37688  01347A  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 37689  01347E  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 37690  013482  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 37691  013486  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 37692  01348A  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 37693  01348E  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 37694  013492  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 37695  013496  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 37696  01349A  EC79  F0A4         	call	i2___flmul	;wreg free
 37697  01349E  D087               	goto	L18
 37698  0134A0                     i2l1013:
 37699                           
 37700                           ;main.c: 346: else {
 37701                           ;main.c: 348: Ipk = Imeas;
 37702  0134A0  C1C7  F0F6         	movff	_Imeas,_Ipk	;volatile
 37703  0134A4  C1C8  F0F7         	movff	_Imeas+1,_Ipk+1	;volatile
 37704  0134A8  C1C9  F0F8         	movff	_Imeas+2,_Ipk+2	;volatile
 37705  0134AC  C1CA  F0F9         	movff	_Imeas+3,_Ipk+3	;volatile
 37706                           
 37707                           ;main.c: 349: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 37708  0134B0  0E00               	movlw	0
 37709  0134B2  0100               	movlb	0	; () banked
 37710  0134B4  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 37711  0134B6  0E00               	movlw	0
 37712  0134B8  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 37713  0134BA  0E00               	movlw	0
 37714  0134BC  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 37715  0134BE  0E00               	movlw	0
 37716  0134C0  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 37717  0134C2  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 37718  0134C6  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 37719  0134CA  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 37720  0134CE  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 37721  0134D2  EC64  F0B4         	call	_peakToRMS	;wreg free
 37722  0134D6  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4182
 37723  0134DA  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4182+1
 37724  0134DE  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4182+2
 37725  0134E2  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4182+3
 37726                           
 37727                           ;main.c: 349: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 37728  0134E6  C2EB  F05A         	movff	_Irms_offset,i2___fladd@a
 37729  0134EA  C2EC  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 37730  0134EE  C2ED  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 37731  0134F2  C2EE  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 37732  0134F6  C0DA  F056         	movff	_ADCPostProcessingCallback$4182,i2___fladd@b
 37733  0134FA  C0DB  F057         	movff	_ADCPostProcessingCallback$4182+1,i2___fladd@b+1
 37734  0134FE  C0DC  F058         	movff	_ADCPostProcessingCallback$4182+2,i2___fladd@b+2
 37735  013502  C0DD  F059         	movff	_ADCPostProcessingCallback$4182+3,i2___fladd@b+3
 37736  013506  ECC0  F0A7         	call	i2___fladd	;wreg free
 37737  01350A  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 37738  01350E  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 37739  013512  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 37740  013516  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 37741  01351A  EC02  F0BE         	call	i2___fltol	;wreg free
 37742  01351E  C06C  F076         	movff	?i2___fltol,abs@a
 37743  013522  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 37744  013526  EC17  F0C8         	call	_abs	;wreg free
 37745  01352A  0100               	movlb	0	; () banked
 37746  01352C  C076  F005         	movff	?_abs,i2___xxtofl@val
 37747  013530  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 37748  013534  0E00               	movlw	0
 37749  013536  BE06               	btfsc	i2___xxtofl@val+1,7,c
 37750  013538  0EFF               	movlw	-1
 37751  01353A  6E07               	movwf	i2___xxtofl@val+2,c
 37752  01353C  6E08               	movwf	i2___xxtofl@val+3,c
 37753  01353E  0E01               	movlw	1
 37754  013540  EC4E  F0B7         	call	i2___xxtofl
 37755  013544  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 37756  013548  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 37757  01354C  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 37758  013550  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 37759                           
 37760                           ;main.c: 350: Vrms = peakToRMS(Vpk_const, 0.0);
 37761  013554  C2EF  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 37762  013558  C2F0  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 37763  01355C  C2F1  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 37764  013560  C2F2  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 37765  013564  0E00               	movlw	0
 37766  013566  0100               	movlb	0	; () banked
 37767  013568  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 37768  01356A  0E00               	movlw	0
 37769  01356C  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 37770  01356E  0E00               	movlw	0
 37771  013570  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 37772  013572  0E00               	movlw	0
 37773  013574  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 37774  013576  EC64  F0B4         	call	_peakToRMS	;wreg free
 37775  01357A  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 37776  01357E  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 37777  013582  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 37778  013586  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 37779                           
 37780                           ;main.c: 351: Avg_Power = Vrms * Irms;
 37781  01358A  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 37782  01358E  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 37783  013592  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 37784  013596  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 37785  01359A  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 37786  01359E  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 37787  0135A2  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 37788  0135A6  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 37789  0135AA  EC79  F0A4         	call	i2___flmul	;wreg free
 37790  0135AE                     L18:
 37791  0135AE  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 37792  0135B2  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 37793  0135B6  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 37794  0135BA  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 37795                           
 37796                           ;main.c: 353: }
 37797                           ;main.c: 355: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 37798  0135BE  0E00               	movlw	0
 37799  0135C0  6E34               	movwf	i2___flge@ff1,c
 37800  0135C2  0E00               	movlw	0
 37801  0135C4  6E35               	movwf	i2___flge@ff1+1,c
 37802  0135C6  0EA0               	movlw	160
 37803  0135C8  6E36               	movwf	i2___flge@ff1+2,c
 37804  0135CA  0E40               	movlw	64
 37805  0135CC  6E37               	movwf	i2___flge@ff1+3,c
 37806  0135CE  C1C3  F038         	movff	_Irms,i2___flge@ff2	;volatile
 37807  0135D2  C1C4  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 37808  0135D6  C1C5  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 37809  0135DA  C1C6  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 37810  0135DE  EC75  F0BB         	call	i2___flge	;wreg free
 37811  0135E2  A0D8               	btfss	status,0,c
 37812  0135E4  D005               	goto	i2u1783_40
 37813  0135E6  ECAF  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 37814  0135EA  0900               	iorlw	0
 37815  0135EC  B4D8               	btfsc	status,2,c
 37816  0135EE  D007               	goto	i2l1019
 37817  0135F0                     i2u1783_40:
 37818                           
 37819                           ;main.c: 357: LATFbits.LATF3 = 1;
 37820  0135F0  867E               	bsf	3966,3,c	;volatile
 37821                           
 37822                           ;main.c: 358: adc_error_flag = 1;
 37823  0135F2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 37824                           
 37825                           ;main.c: 360: PIE5bits.TMR7IE = 0;
 37826  0135F4  010E               	movlb	14	; () banked
 37827  0135F6  9D2E               	bcf	46,6,b	;volatile
 37828                           
 37829                           ; BSR set to: 14
 37830                           ;main.c: 361: TMR7_StopTimer();
 37831  0135F8  ECCF  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 37832                           
 37833                           ;main.c: 362: return;
 37834  0135FC  0012               	return	
 37835  0135FE                     i2l1019:
 37836                           
 37837                           ;main.c: 364: }
 37838                           ;main.c: 366: next_channel = POS12_ADC;
 37839  0135FE  0E04               	movlw	4
 37840  013600  0101               	movlb	1	; () banked
 37841  013602  6FE8               	movwf	_next_channel& (0+255),b
 37842                           
 37843                           ;main.c: 368: break;
 37844  013604  0012               	return	
 37845  013606                     
 37846                           ;main.c: 373: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 37847                           
 37848                           ; BSR set to: 1
 37849  013606  0E00               	movlw	0
 37850  013608  6E17               	movwf	i2___fldiv@a,c
 37851  01360A  0EC0               	movlw	192
 37852  01360C  6E18               	movwf	i2___fldiv@a+1,c
 37853  01360E  0E7F               	movlw	127
 37854  013610  6E19               	movwf	i2___fldiv@a+2,c
 37855  013612  0E44               	movlw	68
 37856  013614  6E1A               	movwf	i2___fldiv@a+3,c
 37857  013616  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 37858  01361A  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 37859  01361E  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 37860  013622  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 37861  013626  EC80  F0B0         	call	i2___fldiv	;wreg free
 37862  01362A  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 37863  01362E  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 37864  013632  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 37865  013636  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 37866  01363A  EC31  F0C9         	call	_ADCC_GetFilterValue	;wreg free
 37867  01363E  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 37868  013642  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 37869  013646  6A07               	clrf	i2___xxtofl@val+2,c
 37870  013648  6A08               	clrf	i2___xxtofl@val+3,c
 37871  01364A  0E00               	movlw	0
 37872  01364C  EC4E  F0B7         	call	i2___xxtofl
 37873  013650  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 37874  013654  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 37875  013658  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 37876  01365C  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 37877  013660  EC79  F0A4         	call	i2___flmul	;wreg free
 37878  013664  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4181
 37879  013668  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4181+1
 37880  01366C  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4181+2
 37881  013670  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4181+3
 37882                           
 37883                           ;main.c: 373: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 37884  013674  C0D6  F030         	movff	_ADCPostProcessingCallback$4181,i2___flmul@b
 37885  013678  C0D7  F031         	movff	_ADCPostProcessingCallback$4181+1,i2___flmul@b+1
 37886  01367C  C0D8  F032         	movff	_ADCPostProcessingCallback$4181+2,i2___flmul@b+2
 37887  013680  C0D9  F033         	movff	_ADCPostProcessingCallback$4181+3,i2___flmul@b+3
 37888  013684  0E3E               	movlw	62
 37889  013686  6E34               	movwf	i2___flmul@a,c
 37890  013688  0EF8               	movlw	248
 37891  01368A  6E35               	movwf	i2___flmul@a+1,c
 37892  01368C  0E80               	movlw	128
 37893  01368E  6E36               	movwf	i2___flmul@a+2,c
 37894  013690  0E40               	movlw	64
 37895  013692  6E37               	movwf	i2___flmul@a+3,c
 37896  013694  EC79  F0A4         	call	i2___flmul	;wreg free
 37897  013698  C030  F1CF         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 37898  01369C  C031  F1D0         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 37899  0136A0  C032  F1D1         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 37900  0136A4  C033  F1D2         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 37901                           
 37902                           ;main.c: 375: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 37903  0136A8  0E9A               	movlw	154
 37904  0136AA  6E34               	movwf	i2___flge@ff1,c
 37905  0136AC  0E99               	movlw	153
 37906  0136AE  6E35               	movwf	i2___flge@ff1+1,c
 37907  0136B0  0E59               	movlw	89
 37908  0136B2  6E36               	movwf	i2___flge@ff1+2,c
 37909  0136B4  0E41               	movlw	65
 37910  0136B6  6E37               	movwf	i2___flge@ff1+3,c
 37911  0136B8  C1CF  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 37912  0136BC  C1D0  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 37913  0136C0  C1D1  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 37914  0136C4  C1D2  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 37915  0136C8  EC75  F0BB         	call	i2___flge	;wreg free
 37916  0136CC  A0D8               	btfss	status,0,c
 37917  0136CE  D005               	goto	i2u1785_40
 37918  0136D0  ECAF  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 37919  0136D4  0900               	iorlw	0
 37920  0136D6  B4D8               	btfsc	status,2,c
 37921  0136D8  D007               	goto	i2l1023
 37922  0136DA                     i2u1785_40:
 37923                           
 37924                           ;main.c: 377: LATFbits.LATF3 = 1;
 37925  0136DA  867E               	bsf	3966,3,c	;volatile
 37926                           
 37927                           ;main.c: 378: adc_error_flag = 1;
 37928  0136DC  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 37929                           
 37930                           ;main.c: 380: PIE5bits.TMR7IE = 0;
 37931  0136DE  010E               	movlb	14	; () banked
 37932  0136E0  9D2E               	bcf	46,6,b	;volatile
 37933                           
 37934                           ; BSR set to: 14
 37935                           ;main.c: 381: TMR7_StopTimer();
 37936  0136E2  ECCF  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 37937                           
 37938                           ;main.c: 382: return;
 37939  0136E6  0012               	return	
 37940  0136E8                     i2l1023:
 37941                           
 37942                           ;main.c: 384: }
 37943                           ;main.c: 386: next_channel = channel_Temp;
 37944  0136E8  0E3D               	movlw	61
 37945  0136EA  0101               	movlb	1	; () banked
 37946  0136EC  6FE8               	movwf	_next_channel& (0+255),b
 37947                           
 37948                           ;main.c: 388: break;
 37949  0136EE  0012               	return	
 37950  0136F0                     
 37951                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 37952                           
 37953                           ; BSR set to: 1
 37954  0136F0  0E00               	movlw	0
 37955  0136F2  6E17               	movwf	i2___fldiv@a,c
 37956  0136F4  0E00               	movlw	0
 37957  0136F6  6E18               	movwf	i2___fldiv@a+1,c
 37958  0136F8  0E00               	movlw	0
 37959  0136FA  6E19               	movwf	i2___fldiv@a+2,c
 37960  0136FC  0E40               	movlw	64
 37961  0136FE  6E1A               	movwf	i2___fldiv@a+3,c
 37962  013700  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 37963  013704  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 37964  013708  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 37965  01370C  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 37966  013710  EC80  F0B0         	call	i2___fldiv	;wreg free
 37967  013714  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 37968  013718  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 37969  01371C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 37970  013720  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 37971  013724  0E00               	movlw	0
 37972  013726  6E5A               	movwf	i2___fladd@a,c
 37973  013728  0E00               	movlw	0
 37974  01372A  6E5B               	movwf	i2___fladd@a+1,c
 37975  01372C  0E80               	movlw	128
 37976  01372E  6E5C               	movwf	i2___fladd@a+2,c
 37977  013730  0E3F               	movlw	63
 37978  013732  6E5D               	movwf	i2___fladd@a+3,c
 37979  013734  0E00               	movlw	0
 37980  013736  6E17               	movwf	i2___fldiv@a,c
 37981  013738  0EC0               	movlw	192
 37982  01373A  6E18               	movwf	i2___fldiv@a+1,c
 37983  01373C  0E7F               	movlw	127
 37984  01373E  6E19               	movwf	i2___fldiv@a+2,c
 37985  013740  0E44               	movlw	68
 37986  013742  6E1A               	movwf	i2___fldiv@a+3,c
 37987  013744  EC31  F0C9         	call	_ADCC_GetFilterValue	;wreg free
 37988  013748  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 37989  01374C  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 37990  013750  6A07               	clrf	i2___xxtofl@val+2,c
 37991  013752  6A08               	clrf	i2___xxtofl@val+3,c
 37992  013754  0E00               	movlw	0
 37993  013756  EC4E  F0B7         	call	i2___xxtofl
 37994  01375A  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 37995  01375E  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 37996  013762  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 37997  013766  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 37998  01376A  EC80  F0B0         	call	i2___fldiv	;wreg free
 37999  01376E  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 38000  013772  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 38001  013776  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 38002  01377A  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 38003  01377E  EC00  F0C8         	call	i2___flneg	;wreg free
 38004  013782  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38005  013786  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38006  01378A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38007  01378E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38008  013792  ECC0  F0A7         	call	i2___fladd	;wreg free
 38009  013796  C056  F030         	movff	?i2___fladd,i2___flmul@b
 38010  01379A  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 38011  01379E  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 38012  0137A2  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 38013  0137A6  EC79  F0A4         	call	i2___flmul	;wreg free
 38014  0137AA  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4183
 38015  0137AE  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4183+1
 38016  0137B2  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4183+2
 38017  0137B6  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4183+3
 38018                           
 38019                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 38020  0137BA  0EDA               	movlw	218
 38021  0137BC  6E17               	movwf	i2___fldiv@a,c
 38022  0137BE  0E03               	movlw	3
 38023  0137C0  6E18               	movwf	i2___fldiv@a+1,c
 38024  0137C2  0EAD               	movlw	173
 38025  0137C4  6E19               	movwf	i2___fldiv@a+2,c
 38026  0137C6  0E3A               	movlw	58
 38027  0137C8  6E1A               	movwf	i2___fldiv@a+3,c
 38028  0137CA  0E39               	movlw	57
 38029  0137CC  6E5A               	movwf	i2___fladd@a,c
 38030  0137CE  0EB4               	movlw	180
 38031  0137D0  6E5B               	movwf	i2___fladd@a+1,c
 38032  0137D2  0E28               	movlw	40
 38033  0137D4  6E5C               	movwf	i2___fladd@a+2,c
 38034  0137D6  0E3F               	movlw	63
 38035  0137D8  6E5D               	movwf	i2___fladd@a+3,c
 38036  0137DA  C0C9  F02C         	movff	_ADCPostProcessingCallback$4183,i2___flneg@f1
 38037  0137DE  C0CA  F02D         	movff	_ADCPostProcessingCallback$4183+1,i2___flneg@f1+1
 38038  0137E2  C0CB  F02E         	movff	_ADCPostProcessingCallback$4183+2,i2___flneg@f1+2
 38039  0137E6  C0CC  F02F         	movff	_ADCPostProcessingCallback$4183+3,i2___flneg@f1+3
 38040  0137EA  EC00  F0C8         	call	i2___flneg	;wreg free
 38041  0137EE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38042  0137F2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38043  0137F6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38044  0137FA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38045  0137FE  ECC0  F0A7         	call	i2___fladd	;wreg free
 38046  013802  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 38047  013806  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 38048  01380A  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 38049  01380E  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 38050  013812  EC80  F0B0         	call	i2___fldiv	;wreg free
 38051  013816  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4184
 38052  01381A  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4184+1
 38053  01381E  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4184+2
 38054  013822  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4184+3
 38055                           
 38056                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 38057  013826  C2F3  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 38058  01382A  C2F4  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 38059  01382E  C2F5  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 38060  013832  C2F6  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 38061  013836  C0CD  F056         	movff	_ADCPostProcessingCallback$4184,i2___fladd@b
 38062  01383A  C0CE  F057         	movff	_ADCPostProcessingCallback$4184+1,i2___fladd@b+1
 38063  01383E  C0CF  F058         	movff	_ADCPostProcessingCallback$4184+2,i2___fladd@b+2
 38064  013842  C0D0  F059         	movff	_ADCPostProcessingCallback$4184+3,i2___fladd@b+3
 38065  013846  ECC0  F0A7         	call	i2___fladd	;wreg free
 38066  01384A  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4185
 38067  01384E  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4185+1
 38068  013852  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4185+2
 38069  013856  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4185+3
 38070                           
 38071                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 38072  01385A  C0D1  F056         	movff	_ADCPostProcessingCallback$4185,i2___fladd@b
 38073  01385E  C0D2  F057         	movff	_ADCPostProcessingCallback$4185+1,i2___fladd@b+1
 38074  013862  C0D3  F058         	movff	_ADCPostProcessingCallback$4185+2,i2___fladd@b+2
 38075  013866  C0D4  F059         	movff	_ADCPostProcessingCallback$4185+3,i2___fladd@b+3
 38076  01386A  0E00               	movlw	0
 38077  01386C  6E5A               	movwf	i2___fladd@a,c
 38078  01386E  0E00               	movlw	0
 38079  013870  6E5B               	movwf	i2___fladd@a+1,c
 38080  013872  0E20               	movlw	32
 38081  013874  6E5C               	movwf	i2___fladd@a+2,c
 38082  013876  0EC2               	movlw	194
 38083  013878  6E5D               	movwf	i2___fladd@a+3,c
 38084  01387A  ECC0  F0A7         	call	i2___fladd	;wreg free
 38085  01387E  C056  F1CB         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 38086  013882  C057  F1CC         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 38087  013886  C058  F1CD         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 38088  01388A  C059  F1CE         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 38089                           
 38090                           ;main.c: 395: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 38091  01388E  0E00               	movlw	0
 38092  013890  6E34               	movwf	i2___flge@ff1,c
 38093  013892  0E00               	movlw	0
 38094  013894  6E35               	movwf	i2___flge@ff1+1,c
 38095  013896  0E20               	movlw	32
 38096  013898  6E36               	movwf	i2___flge@ff1+2,c
 38097  01389A  0E42               	movlw	66
 38098  01389C  6E37               	movwf	i2___flge@ff1+3,c
 38099  01389E  C1CB  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 38100  0138A2  C1CC  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 38101  0138A6  C1CD  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 38102  0138AA  C1CE  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 38103  0138AE  EC75  F0BB         	call	i2___flge	;wreg free
 38104  0138B2  A0D8               	btfss	status,0,c
 38105  0138B4  D005               	goto	i2u1787_40
 38106  0138B6  ECAF  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38107  0138BA  0900               	iorlw	0
 38108  0138BC  B4D8               	btfsc	status,2,c
 38109  0138BE  D007               	goto	i2l1027
 38110  0138C0                     i2u1787_40:
 38111                           
 38112                           ;main.c: 397: LATFbits.LATF3 = 1;
 38113  0138C0  867E               	bsf	3966,3,c	;volatile
 38114                           
 38115                           ;main.c: 398: adc_error_flag = 1;
 38116  0138C2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38117                           
 38118                           ;main.c: 400: PIE5bits.TMR7IE = 0;
 38119  0138C4  010E               	movlb	14	; () banked
 38120  0138C6  9D2E               	bcf	46,6,b	;volatile
 38121                           
 38122                           ; BSR set to: 14
 38123                           ;main.c: 401: TMR7_StopTimer();
 38124  0138C8  ECCF  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 38125                           
 38126                           ;main.c: 402: return;
 38127  0138CC  0012               	return	
 38128  0138CE                     i2l1027:
 38129                           
 38130                           ;main.c: 404: }
 38131                           ;main.c: 406: next_channel = channel_VSS;
 38132  0138CE  0E3C               	movlw	60
 38133  0138D0  0101               	movlb	1	; () banked
 38134  0138D2  6FE8               	movwf	_next_channel& (0+255),b
 38135                           
 38136                           ;main.c: 408: break;
 38137  0138D4  0012               	return	
 38138  0138D6                     i2l1030:
 38139                           
 38140                           ; BSR set to: 0
 38141                           ;main.c: 413: LATFbits.LATF3 = 1;
 38142  0138D6  867E               	bsf	3966,3,c	;volatile
 38143                           
 38144                           ;main.c: 414: adc_error_flag = 1;
 38145  0138D8  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38146                           
 38147                           ; BSR set to: 0
 38148                           ;main.c: 416: PIE5bits.TMR7IE == 0;
 38149  0138DA  010E               	movlb	14	; () banked
 38150  0138DC  512E               	movf	46,w,b	;volatile
 38151                           
 38152                           ; BSR set to: 14
 38153                           ;main.c: 417: TMR7_StopTimer();
 38154  0138DE  ECCF  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 38155                           
 38156                           ;main.c: 420: }
 38157                           
 38158                           ;main.c: 418: break;
 38159  0138E2  0012               	return	
 38160  0138E4                     i2l997:
 38161  0138E4  0100               	movlb	0	; () banked
 38162  0138E6  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 38163                           
 38164                           ; Switch size 1, requested type "space"
 38165                           ; Number of cases is 6, Range of values is 0 to 63
 38166                           ; switch strategies available:
 38167                           ; Name         Instructions Cycles
 38168                           ; simple_byte           19    10 (average)
 38169                           ;	Chosen strategy is simple_byte
 38170  0138E8  0A00               	xorlw	0	; case 0
 38171  0138EA  B4D8               	btfsc	status,2,c
 38172  0138EC  D45E               	goto	i2l1012
 38173  0138EE  0A04               	xorlw	4	; case 4
 38174  0138F0  B4D8               	btfsc	status,2,c
 38175  0138F2  D689               	goto	i2l1022
 38176  0138F4  0A26               	xorlw	38	; case 34
 38177  0138F6  B4D8               	btfsc	status,2,c
 38178  0138F8  EF72  F098         	goto	i2l1008
 38179  0138FC  0A1E               	xorlw	30	; case 60
 38180  0138FE  B4D8               	btfsc	status,2,c
 38181  013900  EFA0  F097         	goto	i2l998
 38182  013904  0A01               	xorlw	1	; case 61
 38183  013906  B4D8               	btfsc	status,2,c
 38184  013908  D6F3               	goto	i2l1026
 38185  01390A  0A02               	xorlw	2	; case 63
 38186  01390C  B4D8               	btfsc	status,2,c
 38187  01390E  EFE9  F097         	goto	i2l1004
 38188  013912  D7E1               	goto	i2l1030
 38189  013914                     __end_of_ADCPostProcessingCallback:
 38190                           	opt stack 0
 38191                           tosu	equ	0xFFF
 38192                           tosh	equ	0xFFE
 38193                           tosl	equ	0xFFD
 38194                           pclatu	equ	0xFFB
 38195                           pclath	equ	0xFFA
 38196                           tblptru	equ	0xFF8
 38197                           tblptrh	equ	0xFF7
 38198                           tblptrl	equ	0xFF6
 38199                           tablat	equ	0xFF5
 38200                           prodh	equ	0xFF4
 38201                           prodl	equ	0xFF3
 38202                           intcon	equ	0xFF2
 38203                           indf0	equ	0xFEF
 38204                           postinc0	equ	0xFEE
 38205                           fsr0h	equ	0xFEA
 38206                           fsr0l	equ	0xFE9
 38207                           wreg	equ	0xFE8
 38208                           indf1	equ	0xFE7
 38209                           postdec1	equ	0xFE5
 38210                           plusw1	equ	0xFE3
 38211                           fsr1h	equ	0xFE2
 38212                           fsr1l	equ	0xFE1
 38213                           bsr	equ	0xFE0
 38214                           indf2	equ	0xFDF
 38215                           postinc2	equ	0xFDE
 38216                           postdec2	equ	0xFDD
 38217                           plusw2	equ	0xFDB
 38218                           fsr2h	equ	0xFDA
 38219                           fsr2l	equ	0xFD9
 38220                           status	equ	0xFD8
 38221                           
 38222 ;; *************** function i2_TMR7_StopTimer *****************
 38223 ;; Defined at:
 38224 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 38225 ;; Parameters:    Size  Location     Type
 38226 ;;		None
 38227 ;; Auto vars:     Size  Location     Type
 38228 ;;		None
 38229 ;; Return value:  Size  Location     Type
 38230 ;;                  1    wreg      void 
 38231 ;; Registers used:
 38232 ;;		None
 38233 ;; Tracked objects:
 38234 ;;		On entry : 0/0
 38235 ;;		On exit  : 0/0
 38236 ;;		Unchanged: 0/0
 38237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38242 ;;Total ram usage:        0 bytes
 38243 ;; Hardware stack levels used:    1
 38244 ;; This function calls:
 38245 ;;		Nothing
 38246 ;; This function is called by:
 38247 ;;		_ADCPostProcessingCallback
 38248 ;; This function uses a non-reentrant model
 38249 ;;
 38250                           
 38251                           	psect	text107
 38252  01939E                     __ptext107:
 38253                           	opt stack 0
 38254  01939E                     i2_TMR7_StopTimer:
 38255                           	opt stack 16
 38256                           
 38257                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 38258                           
 38259                           ;incstack = 0
 38260  01939E  010F               	movlb	15	; () banked
 38261  0193A0  9130               	bcf	48,0,b	;volatile
 38262                           
 38263                           ; BSR set to: 15
 38264  0193A2  0012               	return		;funcret
 38265  0193A4                     __end_ofi2_TMR7_StopTimer:
 38266                           	opt stack 0
 38267                           tosu	equ	0xFFF
 38268                           tosh	equ	0xFFE
 38269                           tosl	equ	0xFFD
 38270                           pclatu	equ	0xFFB
 38271                           pclath	equ	0xFFA
 38272                           tblptru	equ	0xFF8
 38273                           tblptrh	equ	0xFF7
 38274                           tblptrl	equ	0xFF6
 38275                           tablat	equ	0xFF5
 38276                           prodh	equ	0xFF4
 38277                           prodl	equ	0xFF3
 38278                           intcon	equ	0xFF2
 38279                           indf0	equ	0xFEF
 38280                           postinc0	equ	0xFEE
 38281                           fsr0h	equ	0xFEA
 38282                           fsr0l	equ	0xFE9
 38283                           wreg	equ	0xFE8
 38284                           indf1	equ	0xFE7
 38285                           postdec1	equ	0xFE5
 38286                           plusw1	equ	0xFE3
 38287                           fsr1h	equ	0xFE2
 38288                           fsr1l	equ	0xFE1
 38289                           bsr	equ	0xFE0
 38290                           indf2	equ	0xFDF
 38291                           postinc2	equ	0xFDE
 38292                           postdec2	equ	0xFDD
 38293                           plusw2	equ	0xFDB
 38294                           fsr2h	equ	0xFDA
 38295                           fsr2l	equ	0xFD9
 38296                           status	equ	0xFD8
 38297                           
 38298 ;; *************** function _peakToRMS *****************
 38299 ;; Defined at:
 38300 ;;		line 122 in file "main.c"
 38301 ;; Parameters:    Size  Location     Type
 38302 ;;  Peak            4   81[BANK0 ] void 
 38303 ;;  Angle           4   85[BANK0 ] void 
 38304 ;; Auto vars:     Size  Location     Type
 38305 ;;  RMS             4  101[BANK0 ] void 
 38306 ;; Return value:  Size  Location     Type
 38307 ;;                  4   81[BANK0 ] void 
 38308 ;; Registers used:
 38309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38310 ;; Tracked objects:
 38311 ;;		On entry : 0/0
 38312 ;;		On exit  : 0/0
 38313 ;;		Unchanged: 0/0
 38314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38315 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38316 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38318 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38319 ;;Total ram usage:       24 bytes
 38320 ;; Hardware stack levels used:    1
 38321 ;; Hardware stack levels required when called:    5
 38322 ;; This function calls:
 38323 ;;		_acos
 38324 ;;		_sin
 38325 ;;		_sqrt
 38326 ;;		i2___fladd
 38327 ;;		i2___fldiv
 38328 ;;		i2___flmul
 38329 ;;		i2___flneg
 38330 ;; This function is called by:
 38331 ;;		_ADCPostProcessingCallback
 38332 ;; This function uses a non-reentrant model
 38333 ;;
 38334                           
 38335                           	psect	text108
 38336  0168C8                     __ptext108:
 38337                           	opt stack 0
 38338  0168C8                     _peakToRMS:
 38339                           	opt stack 11
 38340                           
 38341                           ;main.c: 125: double RMS = 0.0;
 38342                           
 38343                           ; BSR set to: 15
 38344                           ;incstack = 0
 38345  0168C8  0E00               	movlw	0
 38346  0168CA  0100               	movlb	0	; () banked
 38347  0168CC  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 38348  0168CE  0E00               	movlw	0
 38349  0168D0  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 38350  0168D2  0E00               	movlw	0
 38351  0168D4  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 38352  0168D6  0E00               	movlw	0
 38353  0168D8  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 38354                           
 38355                           ; BSR set to: 0
 38356                           ;main.c: 128: RMS = 2.0 * acos(-1.0);
 38357  0168DA  0E00               	movlw	0
 38358  0168DC  6FA9               	movwf	acos@x& (0+255),b
 38359  0168DE  0E00               	movlw	0
 38360  0168E0  6FAA               	movwf	(acos@x+1)& (0+255),b
 38361  0168E2  0E80               	movlw	128
 38362  0168E4  6FAB               	movwf	(acos@x+2)& (0+255),b
 38363  0168E6  0EBF               	movlw	191
 38364  0168E8  6FAC               	movwf	(acos@x+3)& (0+255),b
 38365  0168EA  ECFE  F0C2         	call	_acos	;wreg free
 38366  0168EE  C0A9  F0C1         	movff	?_acos,_peakToRMS$4178
 38367  0168F2  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4178+1
 38368  0168F6  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4178+2
 38369  0168FA  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4178+3
 38370                           
 38371                           ;main.c: 128: RMS = 2.0 * acos(-1.0);
 38372  0168FE  C0C1  F030         	movff	_peakToRMS$4178,i2___flmul@b
 38373  016902  C0C2  F031         	movff	_peakToRMS$4178+1,i2___flmul@b+1
 38374  016906  C0C3  F032         	movff	_peakToRMS$4178+2,i2___flmul@b+2
 38375  01690A  C0C4  F033         	movff	_peakToRMS$4178+3,i2___flmul@b+3
 38376  01690E  0E00               	movlw	0
 38377  016910  6E34               	movwf	i2___flmul@a,c
 38378  016912  0E00               	movlw	0
 38379  016914  6E35               	movwf	i2___flmul@a+1,c
 38380  016916  0E00               	movlw	0
 38381  016918  6E36               	movwf	i2___flmul@a+2,c
 38382  01691A  0E40               	movlw	64
 38383  01691C  6E37               	movwf	i2___flmul@a+3,c
 38384  01691E  EC79  F0A4         	call	i2___flmul	;wreg free
 38385  016922  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 38386  016926  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 38387  01692A  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 38388  01692E  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 38389                           
 38390                           ;main.c: 129: RMS = RMS - (2.0 * Angle);
 38391  016932  0E00               	movlw	0
 38392  016934  6E34               	movwf	i2___flmul@a,c
 38393  016936  0E00               	movlw	0
 38394  016938  6E35               	movwf	i2___flmul@a+1,c
 38395  01693A  0E00               	movlw	0
 38396  01693C  6E36               	movwf	i2___flmul@a+2,c
 38397  01693E  0E40               	movlw	64
 38398  016940  6E37               	movwf	i2___flmul@a+3,c
 38399  016942  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 38400  016946  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 38401  01694A  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 38402  01694E  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 38403  016952  EC79  F0A4         	call	i2___flmul	;wreg free
 38404  016956  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 38405  01695A  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 38406  01695E  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 38407  016962  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 38408  016966  EC00  F0C8         	call	i2___flneg	;wreg free
 38409  01696A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38410  01696E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38411  016972  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38412  016976  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38413  01697A  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 38414  01697E  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 38415  016982  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 38416  016986  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 38417  01698A  ECC0  F0A7         	call	i2___fladd	;wreg free
 38418  01698E  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 38419  016992  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 38420  016996  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 38421  01699A  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 38422                           
 38423                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 38424  01699E  0E00               	movlw	0
 38425  0169A0  6E34               	movwf	i2___flmul@a,c
 38426  0169A2  0E00               	movlw	0
 38427  0169A4  6E35               	movwf	i2___flmul@a+1,c
 38428  0169A6  0E00               	movlw	0
 38429  0169A8  6E36               	movwf	i2___flmul@a+2,c
 38430  0169AA  0E40               	movlw	64
 38431  0169AC  6E37               	movwf	i2___flmul@a+3,c
 38432  0169AE  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 38433  0169B2  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 38434  0169B6  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 38435  0169BA  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 38436  0169BE  EC79  F0A4         	call	i2___flmul	;wreg free
 38437  0169C2  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4179
 38438  0169C6  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4179+1
 38439  0169CA  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4179+2
 38440  0169CE  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4179+3
 38441                           
 38442                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 38443  0169D2  C0B9  F088         	movff	_peakToRMS$4179,sin@f
 38444  0169D6  C0BA  F089         	movff	_peakToRMS$4179+1,sin@f+1
 38445  0169DA  C0BB  F08A         	movff	_peakToRMS$4179+2,sin@f+2
 38446  0169DE  C0BC  F08B         	movff	_peakToRMS$4179+3,sin@f+3
 38447  0169E2  ECE1  F0AA         	call	_sin	;wreg free
 38448  0169E6  C088  F0BD         	movff	?_sin,_peakToRMS$4180
 38449  0169EA  C089  F0BE         	movff	?_sin+1,_peakToRMS$4180+1
 38450  0169EE  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4180+2
 38451  0169F2  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4180+3
 38452                           
 38453                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 38454  0169F6  C0BD  F056         	movff	_peakToRMS$4180,i2___fladd@b
 38455  0169FA  C0BE  F057         	movff	_peakToRMS$4180+1,i2___fladd@b+1
 38456  0169FE  C0BF  F058         	movff	_peakToRMS$4180+2,i2___fladd@b+2
 38457  016A02  C0C0  F059         	movff	_peakToRMS$4180+3,i2___fladd@b+3
 38458  016A06  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 38459  016A0A  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 38460  016A0E  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 38461  016A12  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 38462  016A16  ECC0  F0A7         	call	i2___fladd	;wreg free
 38463  016A1A  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 38464  016A1E  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 38465  016A22  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 38466  016A26  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 38467                           
 38468                           ;main.c: 131: RMS = RMS / (4.0 * acos(-1.0));
 38469  016A2A  0E00               	movlw	0
 38470  016A2C  0100               	movlb	0	; () banked
 38471  016A2E  6FA9               	movwf	acos@x& (0+255),b
 38472  016A30  0E00               	movlw	0
 38473  016A32  6FAA               	movwf	(acos@x+1)& (0+255),b
 38474  016A34  0E80               	movlw	128
 38475  016A36  6FAB               	movwf	(acos@x+2)& (0+255),b
 38476  016A38  0EBF               	movlw	191
 38477  016A3A  6FAC               	movwf	(acos@x+3)& (0+255),b
 38478  016A3C  ECFE  F0C2         	call	_acos	;wreg free
 38479  016A40  C0A9  F0C1         	movff	?_acos,_peakToRMS$4178
 38480  016A44  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4178+1
 38481  016A48  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4178+2
 38482  016A4C  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4178+3
 38483                           
 38484                           ;main.c: 131: RMS = RMS / (4.0 * acos(-1.0));
 38485  016A50  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 38486  016A54  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 38487  016A58  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 38488  016A5C  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 38489  016A60  0E00               	movlw	0
 38490  016A62  6E34               	movwf	i2___flmul@a,c
 38491  016A64  0E00               	movlw	0
 38492  016A66  6E35               	movwf	i2___flmul@a+1,c
 38493  016A68  0E80               	movlw	128
 38494  016A6A  6E36               	movwf	i2___flmul@a+2,c
 38495  016A6C  0E40               	movlw	64
 38496  016A6E  6E37               	movwf	i2___flmul@a+3,c
 38497  016A70  C0C1  F030         	movff	_peakToRMS$4178,i2___flmul@b
 38498  016A74  C0C2  F031         	movff	_peakToRMS$4178+1,i2___flmul@b+1
 38499  016A78  C0C3  F032         	movff	_peakToRMS$4178+2,i2___flmul@b+2
 38500  016A7C  C0C4  F033         	movff	_peakToRMS$4178+3,i2___flmul@b+3
 38501  016A80  EC79  F0A4         	call	i2___flmul	;wreg free
 38502  016A84  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 38503  016A88  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 38504  016A8C  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 38505  016A90  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 38506  016A94  EC80  F0B0         	call	i2___fldiv	;wreg free
 38507  016A98  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 38508  016A9C  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 38509  016AA0  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 38510  016AA4  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 38511                           
 38512                           ;main.c: 132: RMS = sqrt(RMS);
 38513  016AA8  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 38514  016AAC  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 38515  016AB0  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 38516  016AB4  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 38517  016AB8  EC5E  F0AC         	call	_sqrt	;wreg free
 38518  016ABC  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 38519  016AC0  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 38520  016AC4  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 38521  016AC8  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 38522                           
 38523                           ;main.c: 133: RMS = Peak * RMS;
 38524  016ACC  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 38525  016AD0  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 38526  016AD4  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 38527  016AD8  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 38528  016ADC  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 38529  016AE0  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 38530  016AE4  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 38531  016AE8  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 38532  016AEC  EC79  F0A4         	call	i2___flmul	;wreg free
 38533  016AF0  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 38534  016AF4  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 38535  016AF8  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 38536  016AFC  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 38537                           
 38538                           ;main.c: 134: return RMS;
 38539  016B00  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 38540  016B04  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 38541  016B08  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 38542  016B0C  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 38543  016B10  0012               	return	
 38544  016B12                     __end_of_peakToRMS:
 38545                           	opt stack 0
 38546                           tosu	equ	0xFFF
 38547                           tosh	equ	0xFFE
 38548                           tosl	equ	0xFFD
 38549                           pclatu	equ	0xFFB
 38550                           pclath	equ	0xFFA
 38551                           tblptru	equ	0xFF8
 38552                           tblptrh	equ	0xFF7
 38553                           tblptrl	equ	0xFF6
 38554                           tablat	equ	0xFF5
 38555                           prodh	equ	0xFF4
 38556                           prodl	equ	0xFF3
 38557                           intcon	equ	0xFF2
 38558                           indf0	equ	0xFEF
 38559                           postinc0	equ	0xFEE
 38560                           fsr0h	equ	0xFEA
 38561                           fsr0l	equ	0xFE9
 38562                           wreg	equ	0xFE8
 38563                           indf1	equ	0xFE7
 38564                           postdec1	equ	0xFE5
 38565                           plusw1	equ	0xFE3
 38566                           fsr1h	equ	0xFE2
 38567                           fsr1l	equ	0xFE1
 38568                           bsr	equ	0xFE0
 38569                           indf2	equ	0xFDF
 38570                           postinc2	equ	0xFDE
 38571                           postdec2	equ	0xFDD
 38572                           plusw2	equ	0xFDB
 38573                           fsr2h	equ	0xFDA
 38574                           fsr2l	equ	0xFD9
 38575                           status	equ	0xFD8
 38576                           
 38577 ;; *************** function _acos *****************
 38578 ;; Defined at:
 38579 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 38580 ;; Parameters:    Size  Location     Type
 38581 ;;  x               4   73[BANK0 ] void 
 38582 ;; Auto vars:     Size  Location     Type
 38583 ;;		None
 38584 ;; Return value:  Size  Location     Type
 38585 ;;                  4   73[BANK0 ] void 
 38586 ;; Registers used:
 38587 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38588 ;; Tracked objects:
 38589 ;;		On entry : 0/0
 38590 ;;		On exit  : 0/0
 38591 ;;		Unchanged: 0/0
 38592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38594 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38596 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38597 ;;Total ram usage:        8 bytes
 38598 ;; Hardware stack levels used:    1
 38599 ;; Hardware stack levels required when called:    4
 38600 ;; This function calls:
 38601 ;;		_asin
 38602 ;;		i2___fladd
 38603 ;;		i2___flneg
 38604 ;; This function is called by:
 38605 ;;		_peakToRMS
 38606 ;; This function uses a non-reentrant model
 38607 ;;
 38608                           
 38609                           	psect	text109
 38610  0185FC                     __ptext109:
 38611                           	opt stack 0
 38612  0185FC                     _acos:
 38613                           	opt stack 11
 38614                           
 38615                           ;incstack = 0
 38616  0185FC  C0A9  F091         	movff	acos@x,asin@x
 38617  018600  C0AA  F092         	movff	acos@x+1,asin@x+1
 38618  018604  C0AB  F093         	movff	acos@x+2,asin@x+2
 38619  018608  C0AC  F094         	movff	acos@x+3,asin@x+3
 38620  01860C  EC5F  F0A9         	call	_asin	;wreg free
 38621  018610  C091  F0AD         	movff	?_asin,_acos$4186
 38622  018614  C092  F0AE         	movff	?_asin+1,_acos$4186+1
 38623  018618  C093  F0AF         	movff	?_asin+2,_acos$4186+2
 38624  01861C  C094  F0B0         	movff	?_asin+3,_acos$4186+3
 38625  018620  C0AD  F02C         	movff	_acos$4186,i2___flneg@f1
 38626  018624  C0AE  F02D         	movff	_acos$4186+1,i2___flneg@f1+1
 38627  018628  C0AF  F02E         	movff	_acos$4186+2,i2___flneg@f1+2
 38628  01862C  C0B0  F02F         	movff	_acos$4186+3,i2___flneg@f1+3
 38629  018630  EC00  F0C8         	call	i2___flneg	;wreg free
 38630  018634  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38631  018638  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38632  01863C  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38633  018640  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38634  018644  0EDB               	movlw	219
 38635  018646  6E5A               	movwf	i2___fladd@a,c
 38636  018648  0E0F               	movlw	15
 38637  01864A  6E5B               	movwf	i2___fladd@a+1,c
 38638  01864C  0EC9               	movlw	201
 38639  01864E  6E5C               	movwf	i2___fladd@a+2,c
 38640  018650  0E3F               	movlw	63
 38641  018652  6E5D               	movwf	i2___fladd@a+3,c
 38642  018654  ECC0  F0A7         	call	i2___fladd	;wreg free
 38643  018658  C056  F0A9         	movff	?i2___fladd,?_acos
 38644  01865C  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 38645  018660  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 38646  018664  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 38647  018668  0012               	return	
 38648  01866A                     __end_of_acos:
 38649                           	opt stack 0
 38650                           tosu	equ	0xFFF
 38651                           tosh	equ	0xFFE
 38652                           tosl	equ	0xFFD
 38653                           pclatu	equ	0xFFB
 38654                           pclath	equ	0xFFA
 38655                           tblptru	equ	0xFF8
 38656                           tblptrh	equ	0xFF7
 38657                           tblptrl	equ	0xFF6
 38658                           tablat	equ	0xFF5
 38659                           prodh	equ	0xFF4
 38660                           prodl	equ	0xFF3
 38661                           intcon	equ	0xFF2
 38662                           indf0	equ	0xFEF
 38663                           postinc0	equ	0xFEE
 38664                           fsr0h	equ	0xFEA
 38665                           fsr0l	equ	0xFE9
 38666                           wreg	equ	0xFE8
 38667                           indf1	equ	0xFE7
 38668                           postdec1	equ	0xFE5
 38669                           plusw1	equ	0xFE3
 38670                           fsr1h	equ	0xFE2
 38671                           fsr1l	equ	0xFE1
 38672                           bsr	equ	0xFE0
 38673                           indf2	equ	0xFDF
 38674                           postinc2	equ	0xFDE
 38675                           postdec2	equ	0xFDD
 38676                           plusw2	equ	0xFDB
 38677                           fsr2h	equ	0xFDA
 38678                           fsr2l	equ	0xFD9
 38679                           status	equ	0xFD8
 38680                           
 38681 ;; *************** function _asin *****************
 38682 ;; Defined at:
 38683 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 38684 ;; Parameters:    Size  Location     Type
 38685 ;;  x               4   49[BANK0 ] void 
 38686 ;; Auto vars:     Size  Location     Type
 38687 ;;  y               4   65[BANK0 ] void 
 38688 ;;  sgn             4   53[BANK0 ] void 
 38689 ;; Return value:  Size  Location     Type
 38690 ;;                  4   49[BANK0 ] void 
 38691 ;; Registers used:
 38692 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38693 ;; Tracked objects:
 38694 ;;		On entry : 0/0
 38695 ;;		On exit  : 0/0
 38696 ;;		Unchanged: 0/0
 38697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38699 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38701 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38702 ;;Total ram usage:       24 bytes
 38703 ;; Hardware stack levels used:    1
 38704 ;; Hardware stack levels required when called:    3
 38705 ;; This function calls:
 38706 ;;		_atan
 38707 ;;		_fabs
 38708 ;;		_sqrt
 38709 ;;		i2___fladd
 38710 ;;		i2___fldiv
 38711 ;;		i2___flge
 38712 ;;		i2___flmul
 38713 ;;		i2___flneg
 38714 ;; This function is called by:
 38715 ;;		_acos
 38716 ;; This function uses a non-reentrant model
 38717 ;;
 38718                           
 38719                           	psect	text110
 38720  0152BE                     __ptext110:
 38721                           	opt stack 0
 38722  0152BE                     _asin:
 38723                           	opt stack 11
 38724                           
 38725                           ;incstack = 0
 38726  0152BE  0E00               	movlw	0
 38727  0152C0  6E34               	movwf	i2___flge@ff1,c
 38728  0152C2  0E00               	movlw	0
 38729  0152C4  6E35               	movwf	i2___flge@ff1+1,c
 38730  0152C6  0E80               	movlw	128
 38731  0152C8  6E36               	movwf	i2___flge@ff1+2,c
 38732  0152CA  0E3F               	movlw	63
 38733  0152CC  6E37               	movwf	i2___flge@ff1+3,c
 38734  0152CE  C091  F030         	movff	asin@x,fabs@d
 38735  0152D2  C092  F031         	movff	asin@x+1,fabs@d+1
 38736  0152D6  C093  F032         	movff	asin@x+2,fabs@d+2
 38737  0152DA  C094  F033         	movff	asin@x+3,fabs@d+3
 38738  0152DE  ECFC  F0C6         	call	_fabs	;wreg free
 38739  0152E2  C030  F038         	movff	?_fabs,i2___flge@ff2
 38740  0152E6  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 38741  0152EA  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 38742  0152EE  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 38743  0152F2  EC75  F0BB         	call	i2___flge	;wreg free
 38744  0152F6  B0D8               	btfsc	status,0,c
 38745  0152F8  D00F               	goto	i2l1752
 38746  0152FA  0E00               	movlw	0
 38747  0152FC  0102               	movlb	2	; () banked
 38748  0152FE  6F3B               	movwf	(_errno+1)& (0+255),b
 38749  015300  0E21               	movlw	33
 38750  015302  6F3A               	movwf	_errno& (0+255),b
 38751  015304  0E00               	movlw	0
 38752  015306  0100               	movlb	0	; () banked
 38753  015308  6F91               	movwf	?_asin& (0+255),b
 38754  01530A  0E00               	movlw	0
 38755  01530C  6F92               	movwf	(?_asin+1)& (0+255),b
 38756  01530E  0E00               	movlw	0
 38757  015310  6F93               	movwf	(?_asin+2)& (0+255),b
 38758  015312  0E00               	movlw	0
 38759  015314  6F94               	movwf	(?_asin+3)& (0+255),b
 38760                           
 38761                           ; BSR set to: 0
 38762  015316  0012               	return	
 38763  015318                     i2l1752:
 38764                           
 38765                           ; BSR set to: 0
 38766  015318  0E00               	movlw	0
 38767  01531A  0100               	movlb	0	; () banked
 38768  01531C  6F95               	movwf	asin@sgn& (0+255),b
 38769  01531E  0E00               	movlw	0
 38770  015320  6F96               	movwf	(asin@sgn+1)& (0+255),b
 38771  015322  0E80               	movlw	128
 38772  015324  6F97               	movwf	(asin@sgn+2)& (0+255),b
 38773  015326  0E3F               	movlw	63
 38774  015328  6F98               	movwf	(asin@sgn+3)& (0+255),b
 38775                           
 38776                           ; BSR set to: 0
 38777  01532A  C091  F034         	movff	asin@x,i2___flmul@a
 38778  01532E  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 38779  015332  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 38780  015336  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 38781  01533A  C091  F030         	movff	asin@x,i2___flmul@b
 38782  01533E  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 38783  015342  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 38784  015346  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 38785  01534A  EC79  F0A4         	call	i2___flmul	;wreg free
 38786  01534E  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 38787  015352  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 38788  015356  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 38789  01535A  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 38790  01535E  EC00  F0C8         	call	i2___flneg	;wreg free
 38791  015362  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38792  015366  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38793  01536A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38794  01536E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38795  015372  0E00               	movlw	0
 38796  015374  6E5A               	movwf	i2___fladd@a,c
 38797  015376  0E00               	movlw	0
 38798  015378  6E5B               	movwf	i2___fladd@a+1,c
 38799  01537A  0E80               	movlw	128
 38800  01537C  6E5C               	movwf	i2___fladd@a+2,c
 38801  01537E  0E3F               	movlw	63
 38802  015380  6E5D               	movwf	i2___fladd@a+3,c
 38803  015382  ECC0  F0A7         	call	i2___fladd	;wreg free
 38804  015386  C056  F06C         	movff	?i2___fladd,sqrt@a
 38805  01538A  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 38806  01538E  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 38807  015392  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 38808  015396  EC5E  F0AC         	call	_sqrt	;wreg free
 38809  01539A  C06C  F0A1         	movff	?_sqrt,asin@y
 38810  01539E  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 38811  0153A2  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 38812  0153A6  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 38813  0153AA  C091  F030         	movff	asin@x,fabs@d
 38814  0153AE  C092  F031         	movff	asin@x+1,fabs@d+1
 38815  0153B2  C093  F032         	movff	asin@x+2,fabs@d+2
 38816  0153B6  C094  F033         	movff	asin@x+3,fabs@d+3
 38817  0153BA  ECFC  F0C6         	call	_fabs	;wreg free
 38818  0153BE  C030  F034         	movff	?_fabs,i2___flge@ff1
 38819  0153C2  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 38820  0153C6  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 38821  0153CA  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 38822  0153CE  0E8F               	movlw	143
 38823  0153D0  6E38               	movwf	i2___flge@ff2,c
 38824  0153D2  0EC2               	movlw	194
 38825  0153D4  6E39               	movwf	i2___flge@ff2+1,c
 38826  0153D6  0E35               	movlw	53
 38827  0153D8  6E3A               	movwf	i2___flge@ff2+2,c
 38828  0153DA  0E3F               	movlw	63
 38829  0153DC  6E3B               	movwf	i2___flge@ff2+3,c
 38830  0153DE  EC75  F0BB         	call	i2___flge	;wreg free
 38831  0153E2  B0D8               	btfsc	status,0,c
 38832  0153E4  D02D               	goto	i2l1754
 38833  0153E6  C091  F013         	movff	asin@x,i2___fldiv@b
 38834  0153EA  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 38835  0153EE  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 38836  0153F2  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 38837  0153F6  C0A1  F017         	movff	asin@y,i2___fldiv@a
 38838  0153FA  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 38839  0153FE  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 38840  015402  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 38841  015406  EC80  F0B0         	call	i2___fldiv	;wreg free
 38842  01540A  C013  F0A5         	movff	?i2___fldiv,_asin$4187
 38843  01540E  C014  F0A6         	movff	?i2___fldiv+1,_asin$4187+1
 38844  015412  C015  F0A7         	movff	?i2___fldiv+2,_asin$4187+2
 38845  015416  C016  F0A8         	movff	?i2___fldiv+3,_asin$4187+3
 38846  01541A  C0A5  F07C         	movff	_asin$4187,atan@f
 38847  01541E  C0A6  F07D         	movff	_asin$4187+1,atan@f+1
 38848  015422  C0A7  F07E         	movff	_asin$4187+2,atan@f+2
 38849  015426  C0A8  F07F         	movff	_asin$4187+3,atan@f+3
 38850  01542A  EC89  F0B5         	call	_atan	;wreg free
 38851  01542E  C07C  F091         	movff	?_atan,?_asin
 38852  015432  C07D  F092         	movff	?_atan+1,?_asin+1
 38853  015436  C07E  F093         	movff	?_atan+2,?_asin+2
 38854  01543A  C07F  F094         	movff	?_atan+3,?_asin+3
 38855  01543E  0012               	return	
 38856  015440                     i2l1754:
 38857  015440  0100               	movlb	0	; () banked
 38858  015442  AF94               	btfss	(asin@x+3)& (0+255),7,b
 38859  015444  D06D               	goto	i2l1755
 38860                           
 38861                           ; BSR set to: 0
 38862  015446  C091  F017         	movff	asin@x,i2___fldiv@a
 38863  01544A  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 38864  01544E  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 38865  015452  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 38866  015456  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 38867  01545A  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 38868  01545E  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 38869  015462  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 38870  015466  EC00  F0C8         	call	i2___flneg	;wreg free
 38871  01546A  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 38872  01546E  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 38873  015472  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 38874  015476  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 38875  01547A  EC80  F0B0         	call	i2___fldiv	;wreg free
 38876  01547E  C013  F0A5         	movff	?i2___fldiv,_asin$4187
 38877  015482  C014  F0A6         	movff	?i2___fldiv+1,_asin$4187+1
 38878  015486  C015  F0A7         	movff	?i2___fldiv+2,_asin$4187+2
 38879  01548A  C016  F0A8         	movff	?i2___fldiv+3,_asin$4187+3
 38880  01548E  C0A5  F07C         	movff	_asin$4187,atan@f
 38881  015492  C0A6  F07D         	movff	_asin$4187+1,atan@f+1
 38882  015496  C0A7  F07E         	movff	_asin$4187+2,atan@f+2
 38883  01549A  C0A8  F07F         	movff	_asin$4187+3,atan@f+3
 38884  01549E  EC89  F0B5         	call	_atan	;wreg free
 38885  0154A2  C07C  F09D         	movff	?_atan,_asin$4188
 38886  0154A6  C07D  F09E         	movff	?_atan+1,_asin$4188+1
 38887  0154AA  C07E  F09F         	movff	?_atan+2,_asin$4188+2
 38888  0154AE  C07F  F0A0         	movff	?_atan+3,_asin$4188+3
 38889  0154B2  0EDB               	movlw	219
 38890  0154B4  6E5A               	movwf	i2___fladd@a,c
 38891  0154B6  0E0F               	movlw	15
 38892  0154B8  6E5B               	movwf	i2___fladd@a+1,c
 38893  0154BA  0EC9               	movlw	201
 38894  0154BC  6E5C               	movwf	i2___fladd@a+2,c
 38895  0154BE  0E3F               	movlw	63
 38896  0154C0  6E5D               	movwf	i2___fladd@a+3,c
 38897  0154C2  C09D  F02C         	movff	_asin$4188,i2___flneg@f1
 38898  0154C6  C09E  F02D         	movff	_asin$4188+1,i2___flneg@f1+1
 38899  0154CA  C09F  F02E         	movff	_asin$4188+2,i2___flneg@f1+2
 38900  0154CE  C0A0  F02F         	movff	_asin$4188+3,i2___flneg@f1+3
 38901  0154D2  EC00  F0C8         	call	i2___flneg	;wreg free
 38902  0154D6  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38903  0154DA  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38904  0154DE  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38905  0154E2  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38906  0154E6  ECC0  F0A7         	call	i2___fladd	;wreg free
 38907  0154EA  C056  F099         	movff	?i2___fladd,_asin$4189
 38908  0154EE  C057  F09A         	movff	?i2___fladd+1,_asin$4189+1
 38909  0154F2  C058  F09B         	movff	?i2___fladd+2,_asin$4189+2
 38910  0154F6  C059  F09C         	movff	?i2___fladd+3,_asin$4189+3
 38911  0154FA  C099  F02C         	movff	_asin$4189,i2___flneg@f1
 38912  0154FE  C09A  F02D         	movff	_asin$4189+1,i2___flneg@f1+1
 38913  015502  C09B  F02E         	movff	_asin$4189+2,i2___flneg@f1+2
 38914  015506  C09C  F02F         	movff	_asin$4189+3,i2___flneg@f1+3
 38915  01550A  EC00  F0C8         	call	i2___flneg	;wreg free
 38916  01550E  C02C  F091         	movff	?i2___flneg,?_asin
 38917  015512  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 38918  015516  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 38919  01551A  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 38920  01551E  0012               	return	
 38921  015520                     i2l1755:
 38922  015520  C091  F017         	movff	asin@x,i2___fldiv@a
 38923  015524  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 38924  015528  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 38925  01552C  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 38926  015530  C0A1  F013         	movff	asin@y,i2___fldiv@b
 38927  015534  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 38928  015538  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 38929  01553C  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 38930  015540  EC80  F0B0         	call	i2___fldiv	;wreg free
 38931  015544  C013  F0A5         	movff	?i2___fldiv,_asin$4187
 38932  015548  C014  F0A6         	movff	?i2___fldiv+1,_asin$4187+1
 38933  01554C  C015  F0A7         	movff	?i2___fldiv+2,_asin$4187+2
 38934  015550  C016  F0A8         	movff	?i2___fldiv+3,_asin$4187+3
 38935  015554  C0A5  F07C         	movff	_asin$4187,atan@f
 38936  015558  C0A6  F07D         	movff	_asin$4187+1,atan@f+1
 38937  01555C  C0A7  F07E         	movff	_asin$4187+2,atan@f+2
 38938  015560  C0A8  F07F         	movff	_asin$4187+3,atan@f+3
 38939  015564  EC89  F0B5         	call	_atan	;wreg free
 38940  015568  C07C  F09D         	movff	?_atan,_asin$4188
 38941  01556C  C07D  F09E         	movff	?_atan+1,_asin$4188+1
 38942  015570  C07E  F09F         	movff	?_atan+2,_asin$4188+2
 38943  015574  C07F  F0A0         	movff	?_atan+3,_asin$4188+3
 38944  015578  C09D  F02C         	movff	_asin$4188,i2___flneg@f1
 38945  01557C  C09E  F02D         	movff	_asin$4188+1,i2___flneg@f1+1
 38946  015580  C09F  F02E         	movff	_asin$4188+2,i2___flneg@f1+2
 38947  015584  C0A0  F02F         	movff	_asin$4188+3,i2___flneg@f1+3
 38948  015588  EC00  F0C8         	call	i2___flneg	;wreg free
 38949  01558C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38950  015590  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38951  015594  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38952  015598  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38953  01559C  0EDB               	movlw	219
 38954  01559E  6E5A               	movwf	i2___fladd@a,c
 38955  0155A0  0E0F               	movlw	15
 38956  0155A2  6E5B               	movwf	i2___fladd@a+1,c
 38957  0155A4  0EC9               	movlw	201
 38958  0155A6  6E5C               	movwf	i2___fladd@a+2,c
 38959  0155A8  0E3F               	movlw	63
 38960  0155AA  6E5D               	movwf	i2___fladd@a+3,c
 38961  0155AC  ECC0  F0A7         	call	i2___fladd	;wreg free
 38962  0155B0  C056  F091         	movff	?i2___fladd,?_asin
 38963  0155B4  C057  F092         	movff	?i2___fladd+1,?_asin+1
 38964  0155B8  C058  F093         	movff	?i2___fladd+2,?_asin+2
 38965  0155BC  C059  F094         	movff	?i2___fladd+3,?_asin+3
 38966  0155C0  0012               	return	
 38967  0155C2                     __end_of_asin:
 38968                           	opt stack 0
 38969                           tosu	equ	0xFFF
 38970                           tosh	equ	0xFFE
 38971                           tosl	equ	0xFFD
 38972                           pclatu	equ	0xFFB
 38973                           pclath	equ	0xFFA
 38974                           tblptru	equ	0xFF8
 38975                           tblptrh	equ	0xFF7
 38976                           tblptrl	equ	0xFF6
 38977                           tablat	equ	0xFF5
 38978                           prodh	equ	0xFF4
 38979                           prodl	equ	0xFF3
 38980                           intcon	equ	0xFF2
 38981                           indf0	equ	0xFEF
 38982                           postinc0	equ	0xFEE
 38983                           fsr0h	equ	0xFEA
 38984                           fsr0l	equ	0xFE9
 38985                           wreg	equ	0xFE8
 38986                           indf1	equ	0xFE7
 38987                           postdec1	equ	0xFE5
 38988                           plusw1	equ	0xFE3
 38989                           fsr1h	equ	0xFE2
 38990                           fsr1l	equ	0xFE1
 38991                           bsr	equ	0xFE0
 38992                           indf2	equ	0xFDF
 38993                           postinc2	equ	0xFDE
 38994                           postdec2	equ	0xFDD
 38995                           plusw2	equ	0xFDB
 38996                           fsr2h	equ	0xFDA
 38997                           fsr2l	equ	0xFD9
 38998                           status	equ	0xFD8
 38999                           
 39000 ;; *************** function _sqrt *****************
 39001 ;; Defined at:
 39002 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 39003 ;; Parameters:    Size  Location     Type
 39004 ;;  a               4   12[BANK0 ] void 
 39005 ;; Auto vars:     Size  Location     Type
 39006 ;;  frac            4   37[BANK0 ] unsigned long 
 39007 ;;  root            4   33[BANK0 ] struct .
 39008 ;;  grs             4   27[BANK0 ] unsigned long 
 39009 ;;  tfrac           4   22[BANK0 ] unsigned long 
 39010 ;;  exp             2   31[BANK0 ] int 
 39011 ;;  p               1   26[BANK0 ] unsigned char 
 39012 ;;  i               1   21[BANK0 ] unsigned char 
 39013 ;;  sign            1   20[BANK0 ] unsigned char 
 39014 ;; Return value:  Size  Location     Type
 39015 ;;                  4   12[BANK0 ] unsigned char 
 39016 ;; Registers used:
 39017 ;;		wreg, status,2, status,0
 39018 ;; Tracked objects:
 39019 ;;		On entry : 0/0
 39020 ;;		On exit  : 0/0
 39021 ;;		Unchanged: 0/0
 39022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39023 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39024 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39026 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39027 ;;Total ram usage:       29 bytes
 39028 ;; Hardware stack levels used:    1
 39029 ;; This function calls:
 39030 ;;		Nothing
 39031 ;; This function is called by:
 39032 ;;		_peakToRMS
 39033 ;;		_asin
 39034 ;; This function uses a non-reentrant model
 39035 ;;
 39036                           
 39037                           	psect	text111
 39038  0158BC                     __ptext111:
 39039                           	opt stack 0
 39040  0158BC                     _sqrt:
 39041                           	opt stack 15
 39042                           
 39043                           ;incstack = 0
 39044  0158BC  0100               	movlb	0	; () banked
 39045  0158BE  516F               	movf	(sqrt@a+3)& (0+255),w,b
 39046  0158C0  0B80               	andlw	128
 39047  0158C2  6F74               	movwf	sqrt@sign& (0+255),b
 39048  0158C4  516F               	movf	(sqrt@a+3)& (0+255),w,b
 39049  0158C6  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 39050  0158C8  6F7A               	movwf	sqrt@p& (0+255),b
 39051                           
 39052                           ; BSR set to: 0
 39053  0158CA  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 39054                           
 39055                           ; BSR set to: 0
 39056  0158CC  817A               	bsf	sqrt@p& (0+255),0,b
 39057                           
 39058                           ; BSR set to: 0
 39059                           
 39060                           ; BSR set to: 0
 39061  0158CE  C07A  F07F         	movff	sqrt@p,sqrt@exp
 39062  0158D2  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 39063                           
 39064                           ; BSR set to: 0
 39065  0158D4  0EFF               	movlw	255
 39066  0158D6  156C               	andwf	sqrt@a& (0+255),w,b
 39067  0158D8  6F85               	movwf	sqrt@frac& (0+255),b
 39068  0158DA  0EFF               	movlw	255
 39069  0158DC  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 39070  0158DE  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 39071  0158E0  0E7F               	movlw	127
 39072  0158E2  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 39073  0158E4  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 39074  0158E6  0E00               	movlw	0
 39075  0158E8  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 39076  0158EA  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 39077                           
 39078                           ; BSR set to: 0
 39079  0158EC  517F               	movf	sqrt@exp& (0+255),w,b
 39080  0158EE  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 39081  0158F0  B4D8               	btfsc	status,2,c
 39082  0158F2  D005               	goto	i2l2281
 39083                           
 39084                           ; BSR set to: 0
 39085  0158F4  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 39086                           
 39087                           ; BSR set to: 0
 39088  0158F6  297F               	incf	sqrt@exp& (0+255),w,b
 39089  0158F8  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 39090  0158FA  A4D8               	btfss	status,2,c
 39091  0158FC  D008               	goto	i2l2283
 39092  0158FE                     i2l2281:
 39093                           
 39094                           ; BSR set to: 0
 39095                           
 39096                           ; BSR set to: 0
 39097  0158FE  0E00               	movlw	0
 39098  015900  6F85               	movwf	sqrt@frac& (0+255),b
 39099  015902  0E00               	movlw	0
 39100  015904  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 39101  015906  0E00               	movlw	0
 39102  015908  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 39103  01590A  0E00               	movlw	0
 39104  01590C  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 39105  01590E                     i2l2283:
 39106                           
 39107                           ; BSR set to: 0
 39108                           
 39109                           ; BSR set to: 0
 39110  01590E  517F               	movf	sqrt@exp& (0+255),w,b
 39111  015910  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 39112  015912  A4D8               	btfss	status,2,c
 39113  015914  D009               	goto	i2l2284
 39114                           
 39115                           ; BSR set to: 0
 39116  015916  0E00               	movlw	0
 39117  015918  6F6C               	movwf	?_sqrt& (0+255),b
 39118  01591A  0E00               	movlw	0
 39119  01591C  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 39120  01591E  0E00               	movlw	0
 39121  015920  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 39122  015922  0E00               	movlw	0
 39123  015924  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 39124                           
 39125                           ; BSR set to: 0
 39126  015926  0012               	return	
 39127  015928                     i2l2284:
 39128                           
 39129                           ; BSR set to: 0
 39130                           
 39131                           ; BSR set to: 0
 39132  015928  5174               	movf	sqrt@sign& (0+255),w,b
 39133  01592A  B4D8               	btfsc	status,2,c
 39134  01592C  D01A               	goto	i2l2286
 39135                           
 39136                           ; BSR set to: 0
 39137  01592E  0E00               	movlw	0
 39138  015930  6F81               	movwf	sqrt@root& (0+255),b
 39139  015932  0E00               	movlw	0
 39140  015934  6F82               	movwf	(sqrt@root+1)& (0+255),b
 39141  015936  0E40               	movlw	64
 39142  015938  6F83               	movwf	(sqrt@root+2)& (0+255),b
 39143  01593A  0E00               	movlw	0
 39144  01593C  6F84               	movwf	(sqrt@root+3)& (0+255),b
 39145                           
 39146                           ; BSR set to: 0
 39147  01593E  0E80               	movlw	128
 39148  015940  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 39149  015942  0EFF               	movlw	255
 39150  015944  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 39151                           
 39152                           ; BSR set to: 0
 39153  015946  0E00               	movlw	0
 39154  015948  0102               	movlb	2	; () banked
 39155  01594A  6F3B               	movwf	(_errno+1)& (0+255),b
 39156  01594C  0E21               	movlw	33
 39157  01594E  6F3A               	movwf	_errno& (0+255),b
 39158                           
 39159                           ; BSR set to: 2
 39160  015950  C081  F06C         	movff	sqrt@root,?_sqrt
 39161  015954  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 39162  015958  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 39163  01595C  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 39164                           
 39165                           ; BSR set to: 2
 39166  015960  0012               	return	
 39167  015962                     i2l2286:
 39168                           
 39169                           ; BSR set to: 2
 39170  015962  0100               	movlb	0	; () banked
 39171  015964  297F               	incf	sqrt@exp& (0+255),w,b
 39172  015966  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 39173  015968  A4D8               	btfss	status,2,c
 39174  01596A  D011               	goto	i2l2287
 39175                           
 39176                           ; BSR set to: 0
 39177  01596C  0E00               	movlw	0
 39178  01596E  6F81               	movwf	sqrt@root& (0+255),b
 39179  015970  0E00               	movlw	0
 39180  015972  6F82               	movwf	(sqrt@root+1)& (0+255),b
 39181  015974  0E80               	movlw	128
 39182  015976  6F83               	movwf	(sqrt@root+2)& (0+255),b
 39183  015978  0E7F               	movlw	127
 39184  01597A  6F84               	movwf	(sqrt@root+3)& (0+255),b
 39185                           
 39186                           ; BSR set to: 0
 39187  01597C  C081  F06C         	movff	sqrt@root,?_sqrt
 39188  015980  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 39189  015984  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 39190  015988  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 39191                           
 39192                           ; BSR set to: 0
 39193  01598C  0012               	return	
 39194  01598E                     i2l2287:
 39195                           
 39196                           ; BSR set to: 0
 39197                           
 39198                           ; BSR set to: 0
 39199  01598E  0E81               	movlw	129
 39200  015990  277F               	addwf	sqrt@exp& (0+255),f,b
 39201  015992  0EFF               	movlw	255
 39202  015994  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 39203  015996  517F               	movf	sqrt@exp& (0+255),w,b
 39204  015998  0B01               	andlw	1
 39205  01599A  6F7A               	movwf	sqrt@p& (0+255),b
 39206  01599C  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 39207  01599E  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 39208  0159A0  337F               	rrcf	sqrt@exp& (0+255),f,b
 39209  0159A2  0E7F               	movlw	127
 39210  0159A4  277F               	addwf	sqrt@exp& (0+255),f,b
 39211  0159A6  0E00               	movlw	0
 39212  0159A8  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 39213  0159AA  90D8               	bcf	status,0,c
 39214  0159AC  3585               	rlcf	sqrt@frac& (0+255),w,b
 39215  0159AE  6F76               	movwf	sqrt@tfrac& (0+255),b
 39216  0159B0  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 39217  0159B2  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 39218  0159B4  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 39219  0159B6  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 39220  0159B8  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 39221  0159BA  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 39222                           
 39223                           ; BSR set to: 0
 39224  0159BC  0E00               	movlw	0
 39225  0159BE  6F85               	movwf	sqrt@frac& (0+255),b
 39226  0159C0  0E00               	movlw	0
 39227  0159C2  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 39228  0159C4  0E00               	movlw	0
 39229  0159C6  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 39230  0159C8  0E00               	movlw	0
 39231  0159CA  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 39232                           
 39233                           ; BSR set to: 0
 39234  0159CC  0E00               	movlw	0
 39235  0159CE  6F7B               	movwf	sqrt@grs& (0+255),b
 39236  0159D0  0E00               	movlw	0
 39237  0159D2  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 39238  0159D4  0E00               	movlw	0
 39239  0159D6  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 39240  0159D8  0E01               	movlw	1
 39241  0159DA  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 39242                           
 39243                           ; BSR set to: 0
 39244  0159DC  517A               	movf	sqrt@p& (0+255),w,b
 39245  0159DE  B4D8               	btfsc	status,2,c
 39246  0159E0  D005               	goto	i2l2288
 39247                           
 39248                           ; BSR set to: 0
 39249  0159E2  90D8               	bcf	status,0,c
 39250  0159E4  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 39251  0159E6  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 39252  0159E8  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 39253  0159EA  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 39254  0159EC                     i2l2288:
 39255                           
 39256                           ; BSR set to: 0
 39257                           
 39258                           ; BSR set to: 0
 39259  0159EC  0E00               	movlw	0
 39260  0159EE  6F75               	movwf	sqrt@i& (0+255),b
 39261  0159F0  D052               	goto	i2l2289
 39262  0159F2                     
 39263                           ; BSR set to: 0
 39264                           
 39265                           ; BSR set to: 0
 39266  0159F2  517B               	movf	sqrt@grs& (0+255),w,b
 39267  0159F4  1385               	iorwf	sqrt@frac& (0+255),f,b
 39268  0159F6  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 39269  0159F8  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 39270  0159FA  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 39271  0159FC  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 39272  0159FE  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 39273  015A00  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 39274  015A02  5185               	movf	sqrt@frac& (0+255),w,b
 39275  015A04  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 39276  015A06  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 39277  015A08  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 39278  015A0A  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 39279  015A0C  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 39280  015A0E  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 39281  015A10  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 39282  015A12  A0D8               	btfss	status,0,c
 39283  015A14  D011               	goto	i2l2291
 39284                           
 39285                           ; BSR set to: 0
 39286  015A16  5185               	movf	sqrt@frac& (0+255),w,b
 39287  015A18  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 39288  015A1A  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 39289  015A1C  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 39290  015A1E  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 39291  015A20  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 39292  015A22  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 39293  015A24  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 39294  015A26  517B               	movf	sqrt@grs& (0+255),w,b
 39295  015A28  2785               	addwf	sqrt@frac& (0+255),f,b
 39296  015A2A  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 39297  015A2C  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 39298  015A2E  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 39299  015A30  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 39300  015A32  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 39301  015A34  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 39302  015A36  D014               	goto	i2l2292
 39303  015A38                     i2l2291:
 39304                           
 39305                           ; BSR set to: 0
 39306                           
 39307                           ; BSR set to: 0
 39308  015A38  C07B  F070         	movff	sqrt@grs,??_sqrt
 39309  015A3C  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 39310  015A40  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 39311  015A44  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 39312  015A48  1F70               	comf	??_sqrt& (0+255),f,b
 39313  015A4A  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 39314  015A4C  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 39315  015A4E  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 39316  015A50  5170               	movf	??_sqrt& (0+255),w,b
 39317  015A52  1785               	andwf	sqrt@frac& (0+255),f,b
 39318  015A54  5171               	movf	(??_sqrt+1)& (0+255),w,b
 39319  015A56  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 39320  015A58  5172               	movf	(??_sqrt+2)& (0+255),w,b
 39321  015A5A  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 39322  015A5C  5173               	movf	(??_sqrt+3)& (0+255),w,b
 39323  015A5E  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 39324  015A60                     i2l2292:
 39325                           
 39326                           ; BSR set to: 0
 39327                           
 39328                           ; BSR set to: 0
 39329  015A60  C07B  F070         	movff	sqrt@grs,??_sqrt
 39330  015A64  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 39331  015A68  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 39332  015A6C  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 39333  015A70  90D8               	bcf	status,0,c
 39334  015A72  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 39335  015A74  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 39336  015A76  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 39337  015A78  3370               	rrcf	??_sqrt& (0+255),f,b
 39338  015A7A  C070  F07B         	movff	??_sqrt,sqrt@grs
 39339  015A7E  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 39340  015A82  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 39341  015A86  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 39342                           
 39343                           ; BSR set to: 0
 39344  015A8A  90D8               	bcf	status,0,c
 39345  015A8C  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 39346  015A8E  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 39347  015A90  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 39348  015A92  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 39349                           
 39350                           ; BSR set to: 0
 39351  015A94  2B75               	incf	sqrt@i& (0+255),f,b
 39352  015A96                     i2l2289:
 39353                           
 39354                           ; BSR set to: 0
 39355                           
 39356                           ; BSR set to: 0
 39357  015A96  0E18               	movlw	24
 39358  015A98  6575               	cpfsgt	sqrt@i& (0+255),b
 39359  015A9A  D7AB               	goto	i2l2290
 39360                           
 39361                           ; BSR set to: 0
 39362                           
 39363                           ; BSR set to: 0
 39364  015A9C  C085  F070         	movff	sqrt@frac,??_sqrt
 39365  015AA0  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 39366  015AA4  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 39367  015AA8  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 39368  015AAC  90D8               	bcf	status,0,c
 39369  015AAE  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 39370  015AB0  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 39371  015AB2  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 39372  015AB4  3370               	rrcf	??_sqrt& (0+255),f,b
 39373  015AB6  C070  F085         	movff	??_sqrt,sqrt@frac
 39374  015ABA  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 39375  015ABE  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 39376  015AC2  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 39377                           
 39378                           ; BSR set to: 0
 39379  015AC6  0E01               	movlw	1
 39380  015AC8  1585               	andwf	sqrt@frac& (0+255),w,b
 39381  015ACA  6F7B               	movwf	sqrt@grs& (0+255),b
 39382  015ACC  0E00               	movlw	0
 39383  015ACE  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 39384  015AD0  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 39385  015AD2  0E00               	movlw	0
 39386  015AD4  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 39387  015AD6  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 39388  015AD8  0E00               	movlw	0
 39389  015ADA  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 39390  015ADC  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 39391                           
 39392                           ; BSR set to: 0
 39393  015ADE  C085  F070         	movff	sqrt@frac,??_sqrt
 39394  015AE2  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 39395  015AE6  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 39396  015AEA  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 39397  015AEE  90D8               	bcf	status,0,c
 39398  015AF0  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 39399  015AF2  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 39400  015AF4  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 39401  015AF6  3370               	rrcf	??_sqrt& (0+255),f,b
 39402  015AF8  C070  F085         	movff	??_sqrt,sqrt@frac
 39403  015AFC  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 39404  015B00  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 39405  015B04  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 39406  015B08  517B               	movf	sqrt@grs& (0+255),w,b
 39407  015B0A  2785               	addwf	sqrt@frac& (0+255),f,b
 39408  015B0C  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 39409  015B0E  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 39410  015B10  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 39411  015B12  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 39412  015B14  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 39413  015B16  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 39414                           
 39415                           ; BSR set to: 0
 39416  015B18  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 39417  015B1A  D017               	goto	i2l2294
 39418                           
 39419                           ; BSR set to: 0
 39420  015B1C  C085  F070         	movff	sqrt@frac,??_sqrt
 39421  015B20  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 39422  015B24  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 39423  015B28  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 39424  015B2C  90D8               	bcf	status,0,c
 39425  015B2E  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 39426  015B30  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 39427  015B32  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 39428  015B34  3370               	rrcf	??_sqrt& (0+255),f,b
 39429  015B36  C070  F085         	movff	??_sqrt,sqrt@frac
 39430  015B3A  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 39431  015B3E  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 39432  015B42  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 39433  015B46  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 39434  015B48  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 39435  015B4A                     i2l2294:
 39436                           
 39437                           ; BSR set to: 0
 39438                           
 39439                           ; BSR set to: 0
 39440  015B4A  0EFF               	movlw	255
 39441  015B4C  1585               	andwf	sqrt@frac& (0+255),w,b
 39442  015B4E  6F81               	movwf	sqrt@root& (0+255),b
 39443  015B50  0EFF               	movlw	255
 39444  015B52  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 39445  015B54  6F82               	movwf	(sqrt@root+1)& (0+255),b
 39446  015B56  0E7F               	movlw	127
 39447  015B58  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 39448  015B5A  6F83               	movwf	(sqrt@root+2)& (0+255),b
 39449  015B5C  0E00               	movlw	0
 39450  015B5E  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 39451  015B60  6F84               	movwf	(sqrt@root+3)& (0+255),b
 39452                           
 39453                           ; BSR set to: 0
 39454  015B62  C07F  F07A         	movff	sqrt@exp,sqrt@p
 39455                           
 39456                           ; BSR set to: 0
 39457  015B66  B17A               	btfsc	sqrt@p& (0+255),0,b
 39458                           
 39459                           ; BSR set to: 0
 39460  015B68  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 39461                           
 39462                           ; BSR set to: 0
 39463                           
 39464                           ; BSR set to: 0
 39465  015B6A  90D8               	bcf	status,0,c
 39466  015B6C  317A               	rrcf	sqrt@p& (0+255),w,b
 39467  015B6E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 39468                           
 39469                           ; BSR set to: 0
 39470  015B70  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 39471                           
 39472                           ; BSR set to: 0
 39473  015B72  C081  F06C         	movff	sqrt@root,?_sqrt
 39474  015B76  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 39475  015B7A  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 39476  015B7E  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 39477  015B82  0012               	return	
 39478  015B84                     __end_of_sqrt:
 39479                           	opt stack 0
 39480                           tosu	equ	0xFFF
 39481                           tosh	equ	0xFFE
 39482                           tosl	equ	0xFFD
 39483                           pclatu	equ	0xFFB
 39484                           pclath	equ	0xFFA
 39485                           tblptru	equ	0xFF8
 39486                           tblptrh	equ	0xFF7
 39487                           tblptrl	equ	0xFF6
 39488                           tablat	equ	0xFF5
 39489                           prodh	equ	0xFF4
 39490                           prodl	equ	0xFF3
 39491                           intcon	equ	0xFF2
 39492                           indf0	equ	0xFEF
 39493                           postinc0	equ	0xFEE
 39494                           fsr0h	equ	0xFEA
 39495                           fsr0l	equ	0xFE9
 39496                           wreg	equ	0xFE8
 39497                           indf1	equ	0xFE7
 39498                           postdec1	equ	0xFE5
 39499                           plusw1	equ	0xFE3
 39500                           fsr1h	equ	0xFE2
 39501                           fsr1l	equ	0xFE1
 39502                           bsr	equ	0xFE0
 39503                           indf2	equ	0xFDF
 39504                           postinc2	equ	0xFDE
 39505                           postdec2	equ	0xFDD
 39506                           plusw2	equ	0xFDB
 39507                           fsr2h	equ	0xFDA
 39508                           fsr2l	equ	0xFD9
 39509                           status	equ	0xFD8
 39510                           
 39511 ;; *************** function _atan *****************
 39512 ;; Defined at:
 39513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 39514 ;; Parameters:    Size  Location     Type
 39515 ;;  f               4   28[BANK0 ] unsigned char 
 39516 ;; Auto vars:     Size  Location     Type
 39517 ;;  val             4   45[BANK0 ] unsigned char 
 39518 ;;  val_squared     4   41[BANK0 ] unsigned char 
 39519 ;;  x               4   36[BANK0 ] unsigned char 
 39520 ;;  y               4   32[BANK0 ] unsigned char 
 39521 ;;  recip           1   40[BANK0 ] unsigned char 
 39522 ;; Return value:  Size  Location     Type
 39523 ;;                  4   28[BANK0 ] unsigned char 
 39524 ;; Registers used:
 39525 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39526 ;; Tracked objects:
 39527 ;;		On entry : 0/0
 39528 ;;		On exit  : 0/0
 39529 ;;		Unchanged: 0/0
 39530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39532 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39534 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39535 ;;Total ram usage:       21 bytes
 39536 ;; Hardware stack levels used:    1
 39537 ;; Hardware stack levels required when called:    2
 39538 ;; This function calls:
 39539 ;;		_eval_poly
 39540 ;;		_fabs
 39541 ;;		i2___fladd
 39542 ;;		i2___fldiv
 39543 ;;		i2___flge
 39544 ;;		i2___flmul
 39545 ;;		i2___flneg
 39546 ;; This function is called by:
 39547 ;;		_asin
 39548 ;; This function uses a non-reentrant model
 39549 ;;
 39550                           
 39551                           	psect	text112
 39552  016B12                     __ptext112:
 39553                           	opt stack 0
 39554  016B12                     _atan:
 39555                           	opt stack 11
 39556                           
 39557                           ;incstack = 0
 39558  016B12  C07C  F030         	movff	atan@f,fabs@d
 39559  016B16  C07D  F031         	movff	atan@f+1,fabs@d+1
 39560  016B1A  C07E  F032         	movff	atan@f+2,fabs@d+2
 39561  016B1E  C07F  F033         	movff	atan@f+3,fabs@d+3
 39562  016B22  ECFC  F0C6         	call	_fabs	;wreg free
 39563  016B26  C030  F08D         	movff	?_fabs,atan@val
 39564  016B2A  C031  F08E         	movff	?_fabs+1,atan@val+1
 39565  016B2E  C032  F08F         	movff	?_fabs+2,atan@val+2
 39566  016B32  C033  F090         	movff	?_fabs+3,atan@val+3
 39567  016B36  0100               	movlb	0	; () banked
 39568  016B38  518D               	movf	atan@val& (0+255),w,b
 39569  016B3A  118E               	iorwf	(atan@val+1)& (0+255),w,b
 39570  016B3C  118F               	iorwf	(atan@val+2)& (0+255),w,b
 39571  016B3E  1190               	iorwf	(atan@val+3)& (0+255),w,b
 39572  016B40  A4D8               	btfss	status,2,c
 39573  016B42  D009               	goto	i2l1771
 39574                           
 39575                           ; BSR set to: 0
 39576  016B44  0E00               	movlw	0
 39577  016B46  6F7C               	movwf	?_atan& (0+255),b
 39578  016B48  0E00               	movlw	0
 39579  016B4A  6F7D               	movwf	(?_atan+1)& (0+255),b
 39580  016B4C  0E00               	movlw	0
 39581  016B4E  6F7E               	movwf	(?_atan+2)& (0+255),b
 39582  016B50  0E00               	movlw	0
 39583  016B52  6F7F               	movwf	(?_atan+3)& (0+255),b
 39584                           
 39585                           ; BSR set to: 0
 39586  016B54  0012               	return	
 39587  016B56                     i2l1771:
 39588                           
 39589                           ; BSR set to: 0
 39590                           
 39591                           ; BSR set to: 0
 39592  016B56  0E00               	movlw	0
 39593  016B58  6E34               	movwf	i2___flge@ff1,c
 39594  016B5A  0E00               	movlw	0
 39595  016B5C  6E35               	movwf	i2___flge@ff1+1,c
 39596  016B5E  0E80               	movlw	128
 39597  016B60  6E36               	movwf	i2___flge@ff1+2,c
 39598  016B62  0E3F               	movlw	63
 39599  016B64  6E37               	movwf	i2___flge@ff1+3,c
 39600  016B66  C08D  F038         	movff	atan@val,i2___flge@ff2
 39601  016B6A  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 39602  016B6E  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 39603  016B72  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 39604  016B76  EC75  F0BB         	call	i2___flge	;wreg free
 39605  016B7A  B0D8               	btfsc	status,0,c
 39606  016B7C  D002               	goto	i2u1521_40
 39607  016B7E  0E01               	movlw	1
 39608  016B80  D001               	goto	i2u1522_40
 39609  016B82                     i2u1521_40:
 39610  016B82  0E00               	movlw	0
 39611  016B84                     i2u1522_40:
 39612  016B84  0100               	movlb	0	; () banked
 39613  016B86  6F88               	movwf	atan@recip& (0+255),b
 39614  016B88  5188               	movf	atan@recip& (0+255),w,b
 39615  016B8A  B4D8               	btfsc	status,2,c
 39616  016B8C  D01A               	goto	i2l1773
 39617                           
 39618                           ; BSR set to: 0
 39619  016B8E  0E00               	movlw	0
 39620  016B90  6E13               	movwf	i2___fldiv@b,c
 39621  016B92  0E00               	movlw	0
 39622  016B94  6E14               	movwf	i2___fldiv@b+1,c
 39623  016B96  0E80               	movlw	128
 39624  016B98  6E15               	movwf	i2___fldiv@b+2,c
 39625  016B9A  0E3F               	movlw	63
 39626  016B9C  6E16               	movwf	i2___fldiv@b+3,c
 39627  016B9E  C08D  F017         	movff	atan@val,i2___fldiv@a
 39628  016BA2  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 39629  016BA6  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 39630  016BAA  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 39631  016BAE  EC80  F0B0         	call	i2___fldiv	;wreg free
 39632  016BB2  C013  F08D         	movff	?i2___fldiv,atan@val
 39633  016BB6  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 39634  016BBA  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 39635  016BBE  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 39636  016BC2                     i2l1773:
 39637  016BC2  C08D  F030         	movff	atan@val,i2___flmul@b
 39638  016BC6  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 39639  016BCA  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 39640  016BCE  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 39641  016BD2  C08D  F034         	movff	atan@val,i2___flmul@a
 39642  016BD6  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 39643  016BDA  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 39644  016BDE  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 39645  016BE2  EC79  F0A4         	call	i2___flmul	;wreg free
 39646  016BE6  C030  F089         	movff	?i2___flmul,atan@val_squared
 39647  016BEA  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 39648  016BEE  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 39649  016BF2  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 39650  016BF6  C089  F06C         	movff	atan@val_squared,eval_poly@x
 39651  016BFA  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 39652  016BFE  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 39653  016C02  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 39654  016C06  0E2B               	movlw	low atan@coeff_b
 39655  016C08  0100               	movlb	0	; () banked
 39656  016C0A  6F70               	movwf	eval_poly@d& (0+255),b
 39657  016C0C  0ED9               	movlw	high atan@coeff_b
 39658  016C0E  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 39659  016C10  0E00               	movlw	0
 39660  016C12  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 39661  016C14  0E04               	movlw	4
 39662  016C16  6F72               	movwf	eval_poly@n& (0+255),b
 39663  016C18  EC13  F0BD         	call	_eval_poly	;wreg free
 39664  016C1C  C06C  F080         	movff	?_eval_poly,atan@y
 39665  016C20  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 39666  016C24  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 39667  016C28  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 39668  016C2C  C089  F06C         	movff	atan@val_squared,eval_poly@x
 39669  016C30  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 39670  016C34  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 39671  016C38  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 39672  016C3C  0EFF               	movlw	low atan@coeff_a
 39673  016C3E  0100               	movlb	0	; () banked
 39674  016C40  6F70               	movwf	eval_poly@d& (0+255),b
 39675  016C42  0ED8               	movlw	high atan@coeff_a
 39676  016C44  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 39677  016C46  0E00               	movlw	0
 39678  016C48  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 39679  016C4A  0E05               	movlw	5
 39680  016C4C  6F72               	movwf	eval_poly@n& (0+255),b
 39681  016C4E  EC13  F0BD         	call	_eval_poly	;wreg free
 39682  016C52  C06C  F084         	movff	?_eval_poly,atan@x
 39683  016C56  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 39684  016C5A  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 39685  016C5E  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 39686  016C62  C08D  F030         	movff	atan@val,i2___flmul@b
 39687  016C66  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 39688  016C6A  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 39689  016C6E  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 39690  016C72  C080  F017         	movff	atan@y,i2___fldiv@a
 39691  016C76  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 39692  016C7A  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 39693  016C7E  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 39694  016C82  C084  F013         	movff	atan@x,i2___fldiv@b
 39695  016C86  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 39696  016C8A  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 39697  016C8E  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 39698  016C92  EC80  F0B0         	call	i2___fldiv	;wreg free
 39699  016C96  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 39700  016C9A  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 39701  016C9E  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 39702  016CA2  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 39703  016CA6  EC79  F0A4         	call	i2___flmul	;wreg free
 39704  016CAA  C030  F08D         	movff	?i2___flmul,atan@val
 39705  016CAE  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 39706  016CB2  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 39707  016CB6  C033  F090         	movff	?i2___flmul+3,atan@val+3
 39708  016CBA  0100               	movlb	0	; () banked
 39709  016CBC  5188               	movf	atan@recip& (0+255),w,b
 39710  016CBE  B4D8               	btfsc	status,2,c
 39711  016CC0  D024               	goto	i2l1774
 39712                           
 39713                           ; BSR set to: 0
 39714  016CC2  C08D  F02C         	movff	atan@val,i2___flneg@f1
 39715  016CC6  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 39716  016CCA  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 39717  016CCE  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 39718  016CD2  EC00  F0C8         	call	i2___flneg	;wreg free
 39719  016CD6  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 39720  016CDA  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 39721  016CDE  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 39722  016CE2  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 39723  016CE6  0EDB               	movlw	219
 39724  016CE8  6E5A               	movwf	i2___fladd@a,c
 39725  016CEA  0E0F               	movlw	15
 39726  016CEC  6E5B               	movwf	i2___fladd@a+1,c
 39727  016CEE  0EC9               	movlw	201
 39728  016CF0  6E5C               	movwf	i2___fladd@a+2,c
 39729  016CF2  0E3F               	movlw	63
 39730  016CF4  6E5D               	movwf	i2___fladd@a+3,c
 39731  016CF6  ECC0  F0A7         	call	i2___fladd	;wreg free
 39732  016CFA  C056  F08D         	movff	?i2___fladd,atan@val
 39733  016CFE  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 39734  016D02  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 39735  016D06  C059  F090         	movff	?i2___fladd+3,atan@val+3
 39736  016D0A                     i2l1774:
 39737  016D0A  0100               	movlb	0	; () banked
 39738  016D0C  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 39739  016D0E  D009               	goto	i2l1776
 39740                           
 39741                           ; BSR set to: 0
 39742  016D10  C08D  F07C         	movff	atan@val,?_atan
 39743  016D14  C08E  F07D         	movff	atan@val+1,?_atan+1
 39744  016D18  C08F  F07E         	movff	atan@val+2,?_atan+2
 39745  016D1C  C090  F07F         	movff	atan@val+3,?_atan+3
 39746  016D20  0012               	return	
 39747  016D22                     i2l1776:
 39748                           
 39749                           ; BSR set to: 0
 39750                           
 39751                           ; BSR set to: 0
 39752  016D22  C08D  F02C         	movff	atan@val,i2___flneg@f1
 39753  016D26  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 39754  016D2A  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 39755  016D2E  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 39756  016D32  EC00  F0C8         	call	i2___flneg	;wreg free
 39757  016D36  C02C  F07C         	movff	?i2___flneg,?_atan
 39758  016D3A  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 39759  016D3E  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 39760  016D42  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 39761  016D46  0012               	return	
 39762  016D48                     __end_of_atan:
 39763                           	opt stack 0
 39764                           tosu	equ	0xFFF
 39765                           tosh	equ	0xFFE
 39766                           tosl	equ	0xFFD
 39767                           pclatu	equ	0xFFB
 39768                           pclath	equ	0xFFA
 39769                           tblptru	equ	0xFF8
 39770                           tblptrh	equ	0xFF7
 39771                           tblptrl	equ	0xFF6
 39772                           tablat	equ	0xFF5
 39773                           prodh	equ	0xFF4
 39774                           prodl	equ	0xFF3
 39775                           intcon	equ	0xFF2
 39776                           indf0	equ	0xFEF
 39777                           postinc0	equ	0xFEE
 39778                           fsr0h	equ	0xFEA
 39779                           fsr0l	equ	0xFE9
 39780                           wreg	equ	0xFE8
 39781                           indf1	equ	0xFE7
 39782                           postdec1	equ	0xFE5
 39783                           plusw1	equ	0xFE3
 39784                           fsr1h	equ	0xFE2
 39785                           fsr1l	equ	0xFE1
 39786                           bsr	equ	0xFE0
 39787                           indf2	equ	0xFDF
 39788                           postinc2	equ	0xFDE
 39789                           postdec2	equ	0xFDD
 39790                           plusw2	equ	0xFDB
 39791                           fsr2h	equ	0xFDA
 39792                           fsr2l	equ	0xFD9
 39793                           status	equ	0xFD8
 39794                           
 39795 ;; *************** function _fabs *****************
 39796 ;; Defined at:
 39797 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 39798 ;; Parameters:    Size  Location     Type
 39799 ;;  d               4   47[COMRAM] unsigned char 
 39800 ;; Auto vars:     Size  Location     Type
 39801 ;;		None
 39802 ;; Return value:  Size  Location     Type
 39803 ;;                  4   47[COMRAM] unsigned char 
 39804 ;; Registers used:
 39805 ;;		wreg, status,2, status,0, cstack
 39806 ;; Tracked objects:
 39807 ;;		On entry : 0/0
 39808 ;;		On exit  : 0/0
 39809 ;;		Unchanged: 0/0
 39810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39815 ;;Total ram usage:        4 bytes
 39816 ;; Hardware stack levels used:    1
 39817 ;; Hardware stack levels required when called:    1
 39818 ;; This function calls:
 39819 ;;		i2___flneg
 39820 ;; This function is called by:
 39821 ;;		_asin
 39822 ;;		_atan
 39823 ;; This function uses a non-reentrant model
 39824 ;;
 39825                           
 39826                           	psect	text113
 39827  018DF8                     __ptext113:
 39828                           	opt stack 0
 39829  018DF8                     _fabs:
 39830                           	opt stack 12
 39831                           
 39832                           ;incstack = 0
 39833  018DF8  AE33               	btfss	fabs@d+3,7,c
 39834  018DFA  D013               	goto	i2l1868
 39835  018DFC  C030  F02C         	movff	fabs@d,i2___flneg@f1
 39836  018E00  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 39837  018E04  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 39838  018E08  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 39839  018E0C  EC00  F0C8         	call	i2___flneg	;wreg free
 39840  018E10  C02C  F030         	movff	?i2___flneg,?_fabs
 39841  018E14  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 39842  018E18  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 39843  018E1C  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 39844  018E20  0012               	return	
 39845  018E22                     i2l1868:
 39846  018E22  C030  F030         	movff	fabs@d,?_fabs
 39847  018E26  C031  F031         	movff	fabs@d+1,?_fabs+1
 39848  018E2A  C032  F032         	movff	fabs@d+2,?_fabs+2
 39849  018E2E  C033  F033         	movff	fabs@d+3,?_fabs+3
 39850  018E32  0012               	return		;funcret
 39851  018E34                     __end_of_fabs:
 39852                           	opt stack 0
 39853                           tosu	equ	0xFFF
 39854                           tosh	equ	0xFFE
 39855                           tosl	equ	0xFFD
 39856                           pclatu	equ	0xFFB
 39857                           pclath	equ	0xFFA
 39858                           tblptru	equ	0xFF8
 39859                           tblptrh	equ	0xFF7
 39860                           tblptrl	equ	0xFF6
 39861                           tablat	equ	0xFF5
 39862                           prodh	equ	0xFF4
 39863                           prodl	equ	0xFF3
 39864                           intcon	equ	0xFF2
 39865                           indf0	equ	0xFEF
 39866                           postinc0	equ	0xFEE
 39867                           fsr0h	equ	0xFEA
 39868                           fsr0l	equ	0xFE9
 39869                           wreg	equ	0xFE8
 39870                           indf1	equ	0xFE7
 39871                           postdec1	equ	0xFE5
 39872                           plusw1	equ	0xFE3
 39873                           fsr1h	equ	0xFE2
 39874                           fsr1l	equ	0xFE1
 39875                           bsr	equ	0xFE0
 39876                           indf2	equ	0xFDF
 39877                           postinc2	equ	0xFDE
 39878                           postdec2	equ	0xFDD
 39879                           plusw2	equ	0xFDB
 39880                           fsr2h	equ	0xFDA
 39881                           fsr2l	equ	0xFD9
 39882                           status	equ	0xFD8
 39883                           
 39884 ;; *************** function _currentMeasuredToPeak *****************
 39885 ;; Defined at:
 39886 ;;		line 139 in file "main.c"
 39887 ;; Parameters:    Size  Location     Type
 39888 ;;  Measured        4   57[BANK0 ] unsigned char 
 39889 ;;  Angle           4   61[BANK0 ] unsigned char 
 39890 ;; Auto vars:     Size  Location     Type
 39891 ;;  Peak            4   65[BANK0 ] unsigned char 
 39892 ;; Return value:  Size  Location     Type
 39893 ;;                  4   57[BANK0 ] unsigned char 
 39894 ;; Registers used:
 39895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39896 ;; Tracked objects:
 39897 ;;		On entry : 0/0
 39898 ;;		On exit  : 0/0
 39899 ;;		Unchanged: 0/0
 39900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39901 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39904 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39905 ;;Total ram usage:       12 bytes
 39906 ;; Hardware stack levels used:    1
 39907 ;; Hardware stack levels required when called:    3
 39908 ;; This function calls:
 39909 ;;		_sin
 39910 ;;		i2___fldiv
 39911 ;; This function is called by:
 39912 ;;		_ADCPostProcessingCallback
 39913 ;; This function uses a non-reentrant model
 39914 ;;
 39915                           
 39916                           	psect	text114
 39917  018424                     __ptext114:
 39918                           	opt stack 0
 39919  018424                     _currentMeasuredToPeak:
 39920                           	opt stack 13
 39921                           
 39922                           ;main.c: 142: double Peak = 0.0;
 39923                           
 39924                           ;incstack = 0
 39925  018424  0E00               	movlw	0
 39926  018426  0100               	movlb	0	; () banked
 39927  018428  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 39928  01842A  0E00               	movlw	0
 39929  01842C  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 39930  01842E  0E00               	movlw	0
 39931  018430  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 39932  018432  0E00               	movlw	0
 39933  018434  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 39934                           
 39935                           ; BSR set to: 0
 39936                           ;main.c: 145: Peak = sin(Angle);
 39937  018436  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 39938  01843A  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 39939  01843E  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 39940  018442  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 39941  018446  ECE1  F0AA         	call	_sin	;wreg free
 39942  01844A  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 39943  01844E  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 39944  018452  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 39945  018456  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 39946                           
 39947                           ;main.c: 146: Peak = Measured / Peak;
 39948  01845A  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 39949  01845E  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 39950  018462  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 39951  018466  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 39952  01846A  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 39953  01846E  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 39954  018472  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 39955  018476  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 39956  01847A  EC80  F0B0         	call	i2___fldiv	;wreg free
 39957  01847E  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 39958  018482  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 39959  018486  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 39960  01848A  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 39961                           
 39962                           ;main.c: 147: return Peak;
 39963  01848E  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 39964  018492  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 39965  018496  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 39966  01849A  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 39967  01849E  0012               	return	
 39968  0184A0                     __end_of_currentMeasuredToPeak:
 39969                           	opt stack 0
 39970                           tosu	equ	0xFFF
 39971                           tosh	equ	0xFFE
 39972                           tosl	equ	0xFFD
 39973                           pclatu	equ	0xFFB
 39974                           pclath	equ	0xFFA
 39975                           tblptru	equ	0xFF8
 39976                           tblptrh	equ	0xFF7
 39977                           tblptrl	equ	0xFF6
 39978                           tablat	equ	0xFF5
 39979                           prodh	equ	0xFF4
 39980                           prodl	equ	0xFF3
 39981                           intcon	equ	0xFF2
 39982                           indf0	equ	0xFEF
 39983                           postinc0	equ	0xFEE
 39984                           fsr0h	equ	0xFEA
 39985                           fsr0l	equ	0xFE9
 39986                           wreg	equ	0xFE8
 39987                           indf1	equ	0xFE7
 39988                           postdec1	equ	0xFE5
 39989                           plusw1	equ	0xFE3
 39990                           fsr1h	equ	0xFE2
 39991                           fsr1l	equ	0xFE1
 39992                           bsr	equ	0xFE0
 39993                           indf2	equ	0xFDF
 39994                           postinc2	equ	0xFDE
 39995                           postdec2	equ	0xFDD
 39996                           plusw2	equ	0xFDB
 39997                           fsr2h	equ	0xFDA
 39998                           fsr2l	equ	0xFD9
 39999                           status	equ	0xFD8
 40000                           
 40001 ;; *************** function _sin *****************
 40002 ;; Defined at:
 40003 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 40004 ;; Parameters:    Size  Location     Type
 40005 ;;  f               4   40[BANK0 ] unsigned char 
 40006 ;; Auto vars:     Size  Location     Type
 40007 ;;  x2              4   52[BANK0 ] unsigned char 
 40008 ;;  y               4   44[BANK0 ] unsigned char 
 40009 ;;  sgn             1   56[BANK0 ] unsigned char 
 40010 ;; Return value:  Size  Location     Type
 40011 ;;                  4   40[BANK0 ] unsigned char 
 40012 ;; Registers used:
 40013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40014 ;; Tracked objects:
 40015 ;;		On entry : 0/0
 40016 ;;		On exit  : 0/0
 40017 ;;		Unchanged: 0/0
 40018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40019 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40020 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40022 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40023 ;;Total ram usage:       17 bytes
 40024 ;; Hardware stack levels used:    1
 40025 ;; Hardware stack levels required when called:    2
 40026 ;; This function calls:
 40027 ;;		_eval_poly
 40028 ;;		_floor
 40029 ;;		i2___fladd
 40030 ;;		i2___fldiv
 40031 ;;		i2___flge
 40032 ;;		i2___flmul
 40033 ;;		i2___flneg
 40034 ;;		i2___flsub
 40035 ;; This function is called by:
 40036 ;;		_peakToRMS
 40037 ;;		_currentMeasuredToPeak
 40038 ;; This function uses a non-reentrant model
 40039 ;;
 40040                           
 40041                           	psect	text115
 40042  0155C2                     __ptext115:
 40043                           	opt stack 0
 40044  0155C2                     _sin:
 40045                           	opt stack 13
 40046                           
 40047                           ;incstack = 0
 40048  0155C2  0E00               	movlw	0
 40049  0155C4  0100               	movlb	0	; () banked
 40050  0155C6  6F98               	movwf	sin@sgn& (0+255),b
 40051                           
 40052                           ; BSR set to: 0
 40053  0155C8  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 40054  0155CA  D015               	goto	i2l2151
 40055                           
 40056                           ; BSR set to: 0
 40057  0155CC  C088  F02C         	movff	sin@f,i2___flneg@f1
 40058  0155D0  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 40059  0155D4  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 40060  0155D8  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 40061  0155DC  EC00  F0C8         	call	i2___flneg	;wreg free
 40062  0155E0  C02C  F088         	movff	?i2___flneg,sin@f
 40063  0155E4  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 40064  0155E8  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 40065  0155EC  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 40066  0155F0  0E01               	movlw	1
 40067  0155F2  0100               	movlb	0	; () banked
 40068  0155F4  6F98               	movwf	sin@sgn& (0+255),b
 40069  0155F6                     i2l2151:
 40070                           
 40071                           ; BSR set to: 0
 40072                           
 40073                           ; BSR set to: 0
 40074  0155F6  C088  F030         	movff	sin@f,i2___flmul@b
 40075  0155FA  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 40076  0155FE  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 40077  015602  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 40078  015606  0E83               	movlw	131
 40079  015608  6E34               	movwf	i2___flmul@a,c
 40080  01560A  0EF9               	movlw	249
 40081  01560C  6E35               	movwf	i2___flmul@a+1,c
 40082  01560E  0E22               	movlw	34
 40083  015610  6E36               	movwf	i2___flmul@a+2,c
 40084  015612  0E3E               	movlw	62
 40085  015614  6E37               	movwf	i2___flmul@a+3,c
 40086  015616  EC79  F0A4         	call	i2___flmul	;wreg free
 40087  01561A  C030  F088         	movff	?i2___flmul,sin@f
 40088  01561E  C031  F089         	movff	?i2___flmul+1,sin@f+1
 40089  015622  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 40090  015626  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 40091  01562A  C088  F080         	movff	sin@f,i2___flsub@b
 40092  01562E  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 40093  015632  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 40094  015636  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 40095  01563A  C088  F076         	movff	sin@f,floor@x
 40096  01563E  C089  F077         	movff	sin@f+1,floor@x+1
 40097  015642  C08A  F078         	movff	sin@f+2,floor@x+2
 40098  015646  C08B  F079         	movff	sin@f+3,floor@x+3
 40099  01564A  EC05  F0BC         	call	_floor	;wreg free
 40100  01564E  C076  F084         	movff	?_floor,i2___flsub@a
 40101  015652  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 40102  015656  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 40103  01565A  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 40104  01565E  EC38  F0C6         	call	i2___flsub	;wreg free
 40105  015662  C080  F088         	movff	?i2___flsub,sin@f
 40106  015666  C081  F089         	movff	?i2___flsub+1,sin@f+1
 40107  01566A  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 40108  01566E  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 40109  015672  C088  F030         	movff	sin@f,i2___flmul@b
 40110  015676  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 40111  01567A  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 40112  01567E  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 40113  015682  0E00               	movlw	0
 40114  015684  6E34               	movwf	i2___flmul@a,c
 40115  015686  0E00               	movlw	0
 40116  015688  6E35               	movwf	i2___flmul@a+1,c
 40117  01568A  0E80               	movlw	128
 40118  01568C  6E36               	movwf	i2___flmul@a+2,c
 40119  01568E  0E40               	movlw	64
 40120  015690  6E37               	movwf	i2___flmul@a+3,c
 40121  015692  EC79  F0A4         	call	i2___flmul	;wreg free
 40122  015696  C030  F088         	movff	?i2___flmul,sin@f
 40123  01569A  C031  F089         	movff	?i2___flmul+1,sin@f+1
 40124  01569E  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 40125  0156A2  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 40126  0156A6  0E00               	movlw	0
 40127  0156A8  6E34               	movwf	i2___flge@ff1,c
 40128  0156AA  0E00               	movlw	0
 40129  0156AC  6E35               	movwf	i2___flge@ff1+1,c
 40130  0156AE  0E00               	movlw	0
 40131  0156B0  6E36               	movwf	i2___flge@ff1+2,c
 40132  0156B2  0E40               	movlw	64
 40133  0156B4  6E37               	movwf	i2___flge@ff1+3,c
 40134  0156B6  C088  F038         	movff	sin@f,i2___flge@ff2
 40135  0156BA  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 40136  0156BE  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 40137  0156C2  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 40138  0156C6  EC75  F0BB         	call	i2___flge	;wreg free
 40139  0156CA  B0D8               	btfsc	status,0,c
 40140  0156CC  D023               	goto	i2l2152
 40141  0156CE  C088  F080         	movff	sin@f,i2___flsub@b
 40142  0156D2  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 40143  0156D6  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 40144  0156DA  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 40145  0156DE  0E00               	movlw	0
 40146  0156E0  0100               	movlb	0	; () banked
 40147  0156E2  6F84               	movwf	i2___flsub@a& (0+255),b
 40148  0156E4  0E00               	movlw	0
 40149  0156E6  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 40150  0156E8  0E00               	movlw	0
 40151  0156EA  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 40152  0156EC  0E40               	movlw	64
 40153  0156EE  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 40154  0156F0  EC38  F0C6         	call	i2___flsub	;wreg free
 40155  0156F4  C080  F088         	movff	?i2___flsub,sin@f
 40156  0156F8  C081  F089         	movff	?i2___flsub+1,sin@f+1
 40157  0156FC  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 40158  015700  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 40159  015704  0100               	movlb	0	; () banked
 40160  015706  5198               	movf	sin@sgn& (0+255),w,b
 40161  015708  A4D8               	btfss	status,2,c
 40162  01570A  D002               	goto	i2u1668_40
 40163  01570C  0E01               	movlw	1
 40164  01570E  D001               	goto	i2u1669_40
 40165  015710                     i2u1668_40:
 40166  015710  0E00               	movlw	0
 40167  015712                     i2u1669_40:
 40168  015712  6F98               	movwf	sin@sgn& (0+255),b
 40169  015714                     i2l2152:
 40170                           
 40171                           ; BSR set to: 0
 40172  015714  0E00               	movlw	0
 40173  015716  6E34               	movwf	i2___flge@ff1,c
 40174  015718  0E00               	movlw	0
 40175  01571A  6E35               	movwf	i2___flge@ff1+1,c
 40176  01571C  0E80               	movlw	128
 40177  01571E  6E36               	movwf	i2___flge@ff1+2,c
 40178  015720  0E3F               	movlw	63
 40179  015722  6E37               	movwf	i2___flge@ff1+3,c
 40180  015724  C088  F038         	movff	sin@f,i2___flge@ff2
 40181  015728  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 40182  01572C  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 40183  015730  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 40184  015734  EC75  F0BB         	call	i2___flge	;wreg free
 40185  015738  B0D8               	btfsc	status,0,c
 40186  01573A  D024               	goto	i2l2153
 40187  01573C  C088  F02C         	movff	sin@f,i2___flneg@f1
 40188  015740  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 40189  015744  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 40190  015748  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 40191  01574C  EC00  F0C8         	call	i2___flneg	;wreg free
 40192  015750  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 40193  015754  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 40194  015758  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 40195  01575C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 40196  015760  0E00               	movlw	0
 40197  015762  6E5A               	movwf	i2___fladd@a,c
 40198  015764  0E00               	movlw	0
 40199  015766  6E5B               	movwf	i2___fladd@a+1,c
 40200  015768  0E00               	movlw	0
 40201  01576A  6E5C               	movwf	i2___fladd@a+2,c
 40202  01576C  0E40               	movlw	64
 40203  01576E  6E5D               	movwf	i2___fladd@a+3,c
 40204  015770  ECC0  F0A7         	call	i2___fladd	;wreg free
 40205  015774  C056  F088         	movff	?i2___fladd,sin@f
 40206  015778  C057  F089         	movff	?i2___fladd+1,sin@f+1
 40207  01577C  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 40208  015780  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 40209  015784                     i2l2153:
 40210  015784  C088  F030         	movff	sin@f,i2___flmul@b
 40211  015788  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 40212  01578C  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 40213  015790  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 40214  015794  C088  F034         	movff	sin@f,i2___flmul@a
 40215  015798  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 40216  01579C  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 40217  0157A0  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 40218  0157A4  EC79  F0A4         	call	i2___flmul	;wreg free
 40219  0157A8  C030  F094         	movff	?i2___flmul,sin@x2
 40220  0157AC  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 40221  0157B0  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 40222  0157B4  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 40223  0157B8  C094  F06C         	movff	sin@x2,eval_poly@x
 40224  0157BC  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 40225  0157C0  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 40226  0157C4  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 40227  0157C8  0E3F               	movlw	low sin@coeff_b
 40228  0157CA  0100               	movlb	0	; () banked
 40229  0157CC  6F70               	movwf	eval_poly@d& (0+255),b
 40230  0157CE  0ED9               	movlw	high sin@coeff_b
 40231  0157D0  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 40232  0157D2  0E00               	movlw	0
 40233  0157D4  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 40234  0157D6  0E03               	movlw	3
 40235  0157D8  6F72               	movwf	eval_poly@n& (0+255),b
 40236  0157DA  EC13  F0BD         	call	_eval_poly	;wreg free
 40237  0157DE  C06C  F08C         	movff	?_eval_poly,sin@y
 40238  0157E2  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 40239  0157E6  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 40240  0157EA  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 40241  0157EE  C08C  F017         	movff	sin@y,i2___fldiv@a
 40242  0157F2  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 40243  0157F6  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 40244  0157FA  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 40245  0157FE  0E00               	movlw	0
 40246  015800  0100               	movlb	0	; () banked
 40247  015802  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 40248  015804  0E04               	movlw	4
 40249  015806  6F72               	movwf	eval_poly@n& (0+255),b
 40250  015808  0E17               	movlw	low sin@coeff_a
 40251  01580A  6F70               	movwf	eval_poly@d& (0+255),b
 40252  01580C  0ED9               	movlw	high sin@coeff_a
 40253  01580E  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 40254  015810  C094  F06C         	movff	sin@x2,eval_poly@x
 40255  015814  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 40256  015818  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 40257  01581C  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 40258  015820  EC13  F0BD         	call	_eval_poly	;wreg free
 40259  015824  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 40260  015828  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 40261  01582C  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 40262  015830  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 40263  015834  EC80  F0B0         	call	i2___fldiv	;wreg free
 40264  015838  C013  F090         	movff	?i2___fldiv,_sin$4190
 40265  01583C  C014  F091         	movff	?i2___fldiv+1,_sin$4190+1
 40266  015840  C015  F092         	movff	?i2___fldiv+2,_sin$4190+2
 40267  015844  C016  F093         	movff	?i2___fldiv+3,_sin$4190+3
 40268  015848  C088  F030         	movff	sin@f,i2___flmul@b
 40269  01584C  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 40270  015850  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 40271  015854  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 40272  015858  C090  F034         	movff	_sin$4190,i2___flmul@a
 40273  01585C  C091  F035         	movff	_sin$4190+1,i2___flmul@a+1
 40274  015860  C092  F036         	movff	_sin$4190+2,i2___flmul@a+2
 40275  015864  C093  F037         	movff	_sin$4190+3,i2___flmul@a+3
 40276  015868  EC79  F0A4         	call	i2___flmul	;wreg free
 40277  01586C  C030  F088         	movff	?i2___flmul,sin@f
 40278  015870  C031  F089         	movff	?i2___flmul+1,sin@f+1
 40279  015874  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 40280  015878  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 40281  01587C  0100               	movlb	0	; () banked
 40282  01587E  5198               	movf	sin@sgn& (0+255),w,b
 40283  015880  B4D8               	btfsc	status,2,c
 40284  015882  D013               	goto	i2l2154
 40285                           
 40286                           ; BSR set to: 0
 40287  015884  C088  F02C         	movff	sin@f,i2___flneg@f1
 40288  015888  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 40289  01588C  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 40290  015890  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 40291  015894  EC00  F0C8         	call	i2___flneg	;wreg free
 40292  015898  C02C  F088         	movff	?i2___flneg,?_sin
 40293  01589C  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 40294  0158A0  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 40295  0158A4  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 40296  0158A8  0012               	return	
 40297  0158AA                     i2l2154:
 40298                           
 40299                           ; BSR set to: 0
 40300  0158AA  C088  F088         	movff	sin@f,?_sin
 40301  0158AE  C089  F089         	movff	sin@f+1,?_sin+1
 40302  0158B2  C08A  F08A         	movff	sin@f+2,?_sin+2
 40303  0158B6  C08B  F08B         	movff	sin@f+3,?_sin+3
 40304  0158BA  0012               	return		;funcret
 40305  0158BC                     __end_of_sin:
 40306                           	opt stack 0
 40307                           tosu	equ	0xFFF
 40308                           tosh	equ	0xFFE
 40309                           tosl	equ	0xFFD
 40310                           pclatu	equ	0xFFB
 40311                           pclath	equ	0xFFA
 40312                           tblptru	equ	0xFF8
 40313                           tblptrh	equ	0xFF7
 40314                           tblptrl	equ	0xFF6
 40315                           tablat	equ	0xFF5
 40316                           prodh	equ	0xFF4
 40317                           prodl	equ	0xFF3
 40318                           intcon	equ	0xFF2
 40319                           indf0	equ	0xFEF
 40320                           postinc0	equ	0xFEE
 40321                           fsr0h	equ	0xFEA
 40322                           fsr0l	equ	0xFE9
 40323                           wreg	equ	0xFE8
 40324                           indf1	equ	0xFE7
 40325                           postdec1	equ	0xFE5
 40326                           plusw1	equ	0xFE3
 40327                           fsr1h	equ	0xFE2
 40328                           fsr1l	equ	0xFE1
 40329                           bsr	equ	0xFE0
 40330                           indf2	equ	0xFDF
 40331                           postinc2	equ	0xFDE
 40332                           postdec2	equ	0xFDD
 40333                           plusw2	equ	0xFDB
 40334                           fsr2h	equ	0xFDA
 40335                           fsr2l	equ	0xFD9
 40336                           status	equ	0xFD8
 40337                           
 40338 ;; *************** function i2___flsub *****************
 40339 ;; Defined at:
 40340 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 40341 ;; Parameters:    Size  Location     Type
 40342 ;;  b               4   32[BANK0 ] unsigned char 
 40343 ;;  a               4   36[BANK0 ] unsigned char 
 40344 ;; Auto vars:     Size  Location     Type
 40345 ;;		None
 40346 ;; Return value:  Size  Location     Type
 40347 ;;                  4   32[BANK0 ] unsigned char 
 40348 ;; Registers used:
 40349 ;;		wreg, status,2, status,0, cstack
 40350 ;; Tracked objects:
 40351 ;;		On entry : 0/0
 40352 ;;		On exit  : 0/0
 40353 ;;		Unchanged: 0/0
 40354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40355 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40358 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40359 ;;Total ram usage:        8 bytes
 40360 ;; Hardware stack levels used:    1
 40361 ;; Hardware stack levels required when called:    1
 40362 ;; This function calls:
 40363 ;;		i2___fladd
 40364 ;; This function is called by:
 40365 ;;		_sin
 40366 ;;		i2_printf
 40367 ;; This function uses a non-reentrant model
 40368 ;;
 40369                           
 40370                           	psect	text116
 40371  018C70                     __ptext116:
 40372                           	opt stack 0
 40373  018C70                     i2___flsub:
 40374                           	opt stack 15
 40375                           
 40376                           ;incstack = 0
 40377  018C70  0E00               	movlw	0
 40378  018C72  0100               	movlb	0	; () banked
 40379  018C74  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 40380  018C76  0E00               	movlw	0
 40381  018C78  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 40382  018C7A  0E00               	movlw	0
 40383  018C7C  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 40384  018C7E  0E80               	movlw	128
 40385  018C80  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 40386                           
 40387                           ; BSR set to: 0
 40388  018C82  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 40389  018C86  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 40390  018C8A  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 40391  018C8E  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 40392  018C92  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 40393  018C96  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 40394  018C9A  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 40395  018C9E  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 40396  018CA2  ECC0  F0A7         	call	i2___fladd	;wreg free
 40397  018CA6  C056  F080         	movff	?i2___fladd,?i2___flsub
 40398  018CAA  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 40399  018CAE  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 40400  018CB2  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 40401  018CB6  0012               	return	
 40402  018CB8                     __end_ofi2___flsub:
 40403                           	opt stack 0
 40404                           tosu	equ	0xFFF
 40405                           tosh	equ	0xFFE
 40406                           tosl	equ	0xFFD
 40407                           pclatu	equ	0xFFB
 40408                           pclath	equ	0xFFA
 40409                           tblptru	equ	0xFF8
 40410                           tblptrh	equ	0xFF7
 40411                           tblptrl	equ	0xFF6
 40412                           tablat	equ	0xFF5
 40413                           prodh	equ	0xFF4
 40414                           prodl	equ	0xFF3
 40415                           intcon	equ	0xFF2
 40416                           indf0	equ	0xFEF
 40417                           postinc0	equ	0xFEE
 40418                           fsr0h	equ	0xFEA
 40419                           fsr0l	equ	0xFE9
 40420                           wreg	equ	0xFE8
 40421                           indf1	equ	0xFE7
 40422                           postdec1	equ	0xFE5
 40423                           plusw1	equ	0xFE3
 40424                           fsr1h	equ	0xFE2
 40425                           fsr1l	equ	0xFE1
 40426                           bsr	equ	0xFE0
 40427                           indf2	equ	0xFDF
 40428                           postinc2	equ	0xFDE
 40429                           postdec2	equ	0xFDD
 40430                           plusw2	equ	0xFDB
 40431                           fsr2h	equ	0xFDA
 40432                           fsr2l	equ	0xFD9
 40433                           status	equ	0xFD8
 40434                           
 40435 ;; *************** function i2___flneg *****************
 40436 ;; Defined at:
 40437 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 40438 ;; Parameters:    Size  Location     Type
 40439 ;;  f1              4   43[COMRAM] unsigned char 
 40440 ;; Auto vars:     Size  Location     Type
 40441 ;;		None
 40442 ;; Return value:  Size  Location     Type
 40443 ;;                  4   43[COMRAM] unsigned char 
 40444 ;; Registers used:
 40445 ;;		wreg, status,2, status,0
 40446 ;; Tracked objects:
 40447 ;;		On entry : 0/0
 40448 ;;		On exit  : 0/0
 40449 ;;		Unchanged: 0/0
 40450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40454 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40455 ;;Total ram usage:        4 bytes
 40456 ;; Hardware stack levels used:    1
 40457 ;; This function calls:
 40458 ;;		Nothing
 40459 ;; This function is called by:
 40460 ;;		_peakToRMS
 40461 ;;		_ADCPostProcessingCallback
 40462 ;;		_acos
 40463 ;;		_asin
 40464 ;;		_atan
 40465 ;;		_fabs
 40466 ;;		_sin
 40467 ;;		i2_printf
 40468 ;; This function uses a non-reentrant model
 40469 ;;
 40470                           
 40471                           	psect	text117
 40472  019000                     __ptext117:
 40473                           	opt stack 0
 40474  019000                     i2___flneg:
 40475                           	opt stack 16
 40476                           
 40477                           ;incstack = 0
 40478  019000  502C               	movf	i2___flneg@f1,w,c
 40479  019002  102D               	iorwf	i2___flneg@f1+1,w,c
 40480  019004  102E               	iorwf	i2___flneg@f1+2,w,c
 40481  019006  102F               	iorwf	i2___flneg@f1+3,w,c
 40482  019008  B4D8               	btfsc	status,2,c
 40483  01900A  D008               	goto	i2l1896
 40484  01900C  0E00               	movlw	0
 40485  01900E  1A2C               	xorwf	i2___flneg@f1,f,c
 40486  019010  0E00               	movlw	0
 40487  019012  1A2D               	xorwf	i2___flneg@f1+1,f,c
 40488  019014  0E00               	movlw	0
 40489  019016  1A2E               	xorwf	i2___flneg@f1+2,f,c
 40490  019018  0E80               	movlw	128
 40491  01901A  1A2F               	xorwf	i2___flneg@f1+3,f,c
 40492  01901C                     i2l1896:
 40493  01901C  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 40494  019020  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 40495  019024  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 40496  019028  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 40497  01902C  0012               	return	
 40498  01902E                     __end_ofi2___flneg:
 40499                           	opt stack 0
 40500                           tosu	equ	0xFFF
 40501                           tosh	equ	0xFFE
 40502                           tosl	equ	0xFFD
 40503                           pclatu	equ	0xFFB
 40504                           pclath	equ	0xFFA
 40505                           tblptru	equ	0xFF8
 40506                           tblptrh	equ	0xFF7
 40507                           tblptrl	equ	0xFF6
 40508                           tablat	equ	0xFF5
 40509                           prodh	equ	0xFF4
 40510                           prodl	equ	0xFF3
 40511                           intcon	equ	0xFF2
 40512                           indf0	equ	0xFEF
 40513                           postinc0	equ	0xFEE
 40514                           fsr0h	equ	0xFEA
 40515                           fsr0l	equ	0xFE9
 40516                           wreg	equ	0xFE8
 40517                           indf1	equ	0xFE7
 40518                           postdec1	equ	0xFE5
 40519                           plusw1	equ	0xFE3
 40520                           fsr1h	equ	0xFE2
 40521                           fsr1l	equ	0xFE1
 40522                           bsr	equ	0xFE0
 40523                           indf2	equ	0xFDF
 40524                           postinc2	equ	0xFDE
 40525                           postdec2	equ	0xFDD
 40526                           plusw2	equ	0xFDB
 40527                           fsr2h	equ	0xFDA
 40528                           fsr2l	equ	0xFD9
 40529                           status	equ	0xFD8
 40530                           
 40531 ;; *************** function i2___fldiv *****************
 40532 ;; Defined at:
 40533 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 40534 ;; Parameters:    Size  Location     Type
 40535 ;;  b               4   18[COMRAM] unsigned char 
 40536 ;;  a               4   22[COMRAM] unsigned char 
 40537 ;; Auto vars:     Size  Location     Type
 40538 ;;  __fldiv         4   37[COMRAM] unsigned long 
 40539 ;;  __fldiv         4   31[COMRAM] unsigned long 
 40540 ;;  __fldiv         2   35[COMRAM] int 
 40541 ;;  __fldiv         1   42[COMRAM] unsigned char 
 40542 ;;  __fldiv         1   41[COMRAM] unsigned char 
 40543 ;;  __fldiv         1   30[COMRAM] unsigned char 
 40544 ;; Return value:  Size  Location     Type
 40545 ;;                  4   18[COMRAM] unsigned char 
 40546 ;; Registers used:
 40547 ;;		wreg, status,2, status,0
 40548 ;; Tracked objects:
 40549 ;;		On entry : 0/0
 40550 ;;		On exit  : 0/0
 40551 ;;		Unchanged: 0/0
 40552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40553 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40554 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40555 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40556 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40557 ;;Total ram usage:       25 bytes
 40558 ;; Hardware stack levels used:    1
 40559 ;; This function calls:
 40560 ;;		Nothing
 40561 ;; This function is called by:
 40562 ;;		_peakToRMS
 40563 ;;		_currentMeasuredToPeak
 40564 ;;		_ADCPostProcessingCallback
 40565 ;;		_asin
 40566 ;;		_atan
 40567 ;;		_sin
 40568 ;; This function uses a non-reentrant model
 40569 ;;
 40570                           
 40571                           	psect	text118
 40572  016100                     __ptext118:
 40573                           	opt stack 0
 40574  016100                     i2___fldiv:
 40575                           	opt stack 16
 40576                           
 40577                           ;incstack = 0
 40578  016100  5016               	movf	i2___fldiv@b+3,w,c
 40579  016102  0B80               	andlw	128
 40580  016104  6E1F               	movwf	i2___fldiv@sign,c
 40581  016106  5016               	movf	i2___fldiv@b+3,w,c
 40582  016108  2416               	addwf	i2___fldiv@b+3,w,c
 40583  01610A  6E2A               	movwf	i2___fldiv@bexp,c
 40584  01610C  BE15               	btfsc	i2___fldiv@b+2,7,c
 40585  01610E  802A               	bsf	i2___fldiv@bexp,0,c
 40586  016110  502A               	movf	i2___fldiv@bexp,w,c
 40587  016112  B4D8               	btfsc	status,2,c
 40588  016114  D00D               	goto	i2l2216
 40589  016116  282A               	incf	i2___fldiv@bexp,w,c
 40590  016118  A4D8               	btfss	status,2,c
 40591  01611A  D008               	goto	i2l2217
 40592  01611C  0E00               	movlw	0
 40593  01611E  6E13               	movwf	i2___fldiv@b,c
 40594  016120  0E00               	movlw	0
 40595  016122  6E14               	movwf	i2___fldiv@b+1,c
 40596  016124  0E00               	movlw	0
 40597  016126  6E15               	movwf	i2___fldiv@b+2,c
 40598  016128  0E00               	movlw	0
 40599  01612A  6E16               	movwf	i2___fldiv@b+3,c
 40600  01612C                     i2l2217:
 40601  01612C  8E15               	bsf	i2___fldiv@b+2,7,c
 40602  01612E  D006               	goto	L19
 40603  016130                     i2l2216:
 40604  016130  0E00               	movlw	0
 40605  016132  6E13               	movwf	i2___fldiv@b,c
 40606  016134  0E00               	movlw	0
 40607  016136  6E14               	movwf	i2___fldiv@b+1,c
 40608  016138  0E00               	movlw	0
 40609  01613A  6E15               	movwf	i2___fldiv@b+2,c
 40610  01613C                     L19:
 40611  01613C  0E00               	movlw	0
 40612  01613E  6E16               	movwf	i2___fldiv@b+3,c
 40613  016140  501A               	movf	i2___fldiv@a+3,w,c
 40614  016142  0B80               	andlw	128
 40615  016144  1A1F               	xorwf	i2___fldiv@sign,f,c
 40616  016146  501A               	movf	i2___fldiv@a+3,w,c
 40617  016148  241A               	addwf	i2___fldiv@a+3,w,c
 40618  01614A  6E2B               	movwf	i2___fldiv@aexp,c
 40619  01614C  BE19               	btfsc	i2___fldiv@a+2,7,c
 40620  01614E  802B               	bsf	i2___fldiv@aexp,0,c
 40621  016150  502B               	movf	i2___fldiv@aexp,w,c
 40622  016152  B4D8               	btfsc	status,2,c
 40623  016154  D00D               	goto	i2l2220
 40624  016156  282B               	incf	i2___fldiv@aexp,w,c
 40625  016158  A4D8               	btfss	status,2,c
 40626  01615A  D008               	goto	i2l2221
 40627  01615C  0E00               	movlw	0
 40628  01615E  6E17               	movwf	i2___fldiv@a,c
 40629  016160  0E00               	movlw	0
 40630  016162  6E18               	movwf	i2___fldiv@a+1,c
 40631  016164  0E00               	movlw	0
 40632  016166  6E19               	movwf	i2___fldiv@a+2,c
 40633  016168  0E00               	movlw	0
 40634  01616A  6E1A               	movwf	i2___fldiv@a+3,c
 40635  01616C                     i2l2221:
 40636  01616C  8E19               	bsf	i2___fldiv@a+2,7,c
 40637  01616E  D006               	goto	L20
 40638  016170                     i2l2220:
 40639  016170  0E00               	movlw	0
 40640  016172  6E17               	movwf	i2___fldiv@a,c
 40641  016174  0E00               	movlw	0
 40642  016176  6E18               	movwf	i2___fldiv@a+1,c
 40643  016178  0E00               	movlw	0
 40644  01617A  6E19               	movwf	i2___fldiv@a+2,c
 40645  01617C                     L20:
 40646  01617C  0E00               	movlw	0
 40647  01617E  6E1A               	movwf	i2___fldiv@a+3,c
 40648  016180  5017               	movf	i2___fldiv@a,w,c
 40649  016182  1018               	iorwf	i2___fldiv@a+1,w,c
 40650  016184  1019               	iorwf	i2___fldiv@a+2,w,c
 40651  016186  101A               	iorwf	i2___fldiv@a+3,w,c
 40652  016188  A4D8               	btfss	status,2,c
 40653  01618A  D015               	goto	i2l2223
 40654  01618C  0E00               	movlw	0
 40655  01618E  6E13               	movwf	i2___fldiv@b,c
 40656  016190  0E00               	movlw	0
 40657  016192  6E14               	movwf	i2___fldiv@b+1,c
 40658  016194  0E00               	movlw	0
 40659  016196  6E15               	movwf	i2___fldiv@b+2,c
 40660  016198  0E00               	movlw	0
 40661  01619A  6E16               	movwf	i2___fldiv@b+3,c
 40662  01619C  0E80               	movlw	128
 40663  01619E  1215               	iorwf	i2___fldiv@b+2,f,c
 40664  0161A0  0E7F               	movlw	127
 40665  0161A2  1216               	iorwf	i2___fldiv@b+3,f,c
 40666  0161A4  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 40667  0161A8  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 40668  0161AC  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 40669  0161B0  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 40670  0161B4  0012               	return	
 40671  0161B6                     i2l2223:
 40672  0161B6  502A               	movf	i2___fldiv@bexp,w,c
 40673  0161B8  A4D8               	btfss	status,2,c
 40674  0161BA  D011               	goto	i2l2225
 40675  0161BC  0E00               	movlw	0
 40676  0161BE  6E13               	movwf	i2___fldiv@b,c
 40677  0161C0  0E00               	movlw	0
 40678  0161C2  6E14               	movwf	i2___fldiv@b+1,c
 40679  0161C4  0E00               	movlw	0
 40680  0161C6  6E15               	movwf	i2___fldiv@b+2,c
 40681  0161C8  0E00               	movlw	0
 40682  0161CA  6E16               	movwf	i2___fldiv@b+3,c
 40683  0161CC  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 40684  0161D0  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 40685  0161D4  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 40686  0161D8  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 40687  0161DC  0012               	return	
 40688  0161DE                     i2l2225:
 40689  0161DE  502B               	movf	i2___fldiv@aexp,w,c
 40690  0161E0  6E1B               	movwf	??i2___fldiv& (0+255),c
 40691  0161E2  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 40692  0161E4  1E1B               	comf	??i2___fldiv,f,c
 40693  0161E6  1E1C               	comf	??i2___fldiv+1,f,c
 40694  0161E8  4A1B               	infsnz	??i2___fldiv,f,c
 40695  0161EA  2A1C               	incf	??i2___fldiv+1,f,c
 40696  0161EC  502A               	movf	i2___fldiv@bexp,w,c
 40697  0161EE  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 40698  0161F0  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 40699  0161F2  501B               	movf	??i2___fldiv,w,c
 40700  0161F4  261D               	addwf	??i2___fldiv+2,f,c
 40701  0161F6  501C               	movf	??i2___fldiv+1,w,c
 40702  0161F8  221E               	addwfc	??i2___fldiv+3,f,c
 40703  0161FA  0E7F               	movlw	127
 40704  0161FC  241D               	addwf	??i2___fldiv+2,w,c
 40705  0161FE  6E24               	movwf	i2___fldiv@new_exp,c
 40706  016200  0E00               	movlw	0
 40707  016202  201E               	addwfc	??i2___fldiv+3,w,c
 40708  016204  6E25               	movwf	i2___fldiv@new_exp+1,c
 40709  016206  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 40710  01620A  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 40711  01620E  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 40712  016212  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 40713  016216  0E00               	movlw	0
 40714  016218  6E13               	movwf	i2___fldiv@b,c
 40715  01621A  0E00               	movlw	0
 40716  01621C  6E14               	movwf	i2___fldiv@b+1,c
 40717  01621E  0E00               	movlw	0
 40718  016220  6E15               	movwf	i2___fldiv@b+2,c
 40719  016222  0E00               	movlw	0
 40720  016224  6E16               	movwf	i2___fldiv@b+3,c
 40721  016226  0E00               	movlw	0
 40722  016228  6E26               	movwf	i2___fldiv@grs,c
 40723  01622A  0E00               	movlw	0
 40724  01622C  6E27               	movwf	i2___fldiv@grs+1,c
 40725  01622E  0E00               	movlw	0
 40726  016230  6E28               	movwf	i2___fldiv@grs+2,c
 40727  016232  0E00               	movlw	0
 40728  016234  6E29               	movwf	i2___fldiv@grs+3,c
 40729  016236  0E00               	movlw	0
 40730  016238  6E2B               	movwf	i2___fldiv@aexp,c
 40731  01623A  D028               	goto	i2l2226
 40732  01623C  502B               	movf	i2___fldiv@aexp,w,c
 40733  01623E  B4D8               	btfsc	status,2,c
 40734  016240  D011               	goto	i2l2228
 40735  016242  90D8               	bcf	status,0,c
 40736  016244  3620               	rlcf	i2___fldiv@rem,f,c
 40737  016246  3621               	rlcf	i2___fldiv@rem+1,f,c
 40738  016248  3622               	rlcf	i2___fldiv@rem+2,f,c
 40739  01624A  3623               	rlcf	i2___fldiv@rem+3,f,c
 40740  01624C  90D8               	bcf	status,0,c
 40741  01624E  3613               	rlcf	i2___fldiv@b,f,c
 40742  016250  3614               	rlcf	i2___fldiv@b+1,f,c
 40743  016252  3615               	rlcf	i2___fldiv@b+2,f,c
 40744  016254  3616               	rlcf	i2___fldiv@b+3,f,c
 40745  016256  BE29               	btfsc	i2___fldiv@grs+3,7,c
 40746  016258  8013               	bsf	i2___fldiv@b,0,c
 40747  01625A  90D8               	bcf	status,0,c
 40748  01625C  3626               	rlcf	i2___fldiv@grs,f,c
 40749  01625E  3627               	rlcf	i2___fldiv@grs+1,f,c
 40750  016260  3628               	rlcf	i2___fldiv@grs+2,f,c
 40751  016262  3629               	rlcf	i2___fldiv@grs+3,f,c
 40752  016264                     i2l2228:
 40753  016264  5017               	movf	i2___fldiv@a,w,c
 40754  016266  5C20               	subwf	i2___fldiv@rem,w,c
 40755  016268  5018               	movf	i2___fldiv@a+1,w,c
 40756  01626A  5821               	subwfb	i2___fldiv@rem+1,w,c
 40757  01626C  5019               	movf	i2___fldiv@a+2,w,c
 40758  01626E  5822               	subwfb	i2___fldiv@rem+2,w,c
 40759  016270  501A               	movf	i2___fldiv@a+3,w,c
 40760  016272  5823               	subwfb	i2___fldiv@rem+3,w,c
 40761  016274  A0D8               	btfss	status,0,c
 40762  016276  D009               	goto	i2l2230
 40763  016278  8C29               	bsf	i2___fldiv@grs+3,6,c
 40764  01627A  5017               	movf	i2___fldiv@a,w,c
 40765  01627C  5E20               	subwf	i2___fldiv@rem,f,c
 40766  01627E  5018               	movf	i2___fldiv@a+1,w,c
 40767  016280  5A21               	subwfb	i2___fldiv@rem+1,f,c
 40768  016282  5019               	movf	i2___fldiv@a+2,w,c
 40769  016284  5A22               	subwfb	i2___fldiv@rem+2,f,c
 40770  016286  501A               	movf	i2___fldiv@a+3,w,c
 40771  016288  5A23               	subwfb	i2___fldiv@rem+3,f,c
 40772  01628A                     i2l2230:
 40773  01628A  2A2B               	incf	i2___fldiv@aexp,f,c
 40774  01628C                     i2l2226:
 40775  01628C  0E19               	movlw	25
 40776  01628E  642B               	cpfsgt	i2___fldiv@aexp,c
 40777  016290  D7D5               	goto	i2l2227
 40778  016292  5020               	movf	i2___fldiv@rem,w,c
 40779  016294  1021               	iorwf	i2___fldiv@rem+1,w,c
 40780  016296  1022               	iorwf	i2___fldiv@rem+2,w,c
 40781  016298  1023               	iorwf	i2___fldiv@rem+3,w,c
 40782  01629A  B4D8               	btfsc	status,2,c
 40783  01629C  D011               	goto	i2l2233
 40784  01629E  8026               	bsf	i2___fldiv@grs,0,c
 40785  0162A0  D00F               	goto	i2l2233
 40786  0162A2  90D8               	bcf	status,0,c
 40787  0162A4  3613               	rlcf	i2___fldiv@b,f,c
 40788  0162A6  3614               	rlcf	i2___fldiv@b+1,f,c
 40789  0162A8  3615               	rlcf	i2___fldiv@b+2,f,c
 40790  0162AA  3616               	rlcf	i2___fldiv@b+3,f,c
 40791  0162AC  BE29               	btfsc	i2___fldiv@grs+3,7,c
 40792  0162AE  8013               	bsf	i2___fldiv@b,0,c
 40793  0162B0  90D8               	bcf	status,0,c
 40794  0162B2  3626               	rlcf	i2___fldiv@grs,f,c
 40795  0162B4  3627               	rlcf	i2___fldiv@grs+1,f,c
 40796  0162B6  3628               	rlcf	i2___fldiv@grs+2,f,c
 40797  0162B8  3629               	rlcf	i2___fldiv@grs+3,f,c
 40798  0162BA  0624               	decf	i2___fldiv@new_exp,f,c
 40799  0162BC  A0D8               	btfss	status,0,c
 40800  0162BE  0625               	decf	i2___fldiv@new_exp+1,f,c
 40801  0162C0                     i2l2233:
 40802  0162C0  AE15               	btfss	i2___fldiv@b+2,7,c
 40803  0162C2  D7EF               	goto	i2l2234
 40804  0162C4  0E00               	movlw	0
 40805  0162C6  6E2B               	movwf	i2___fldiv@aexp,c
 40806  0162C8  AE29               	btfss	i2___fldiv@grs+3,7,c
 40807  0162CA  D016               	goto	i2l2240
 40808  0162CC  0EFF               	movlw	255
 40809  0162CE  1426               	andwf	i2___fldiv@grs,w,c
 40810  0162D0  6E1B               	movwf	??i2___fldiv& (0+255),c
 40811  0162D2  0EFF               	movlw	255
 40812  0162D4  1427               	andwf	i2___fldiv@grs+1,w,c
 40813  0162D6  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 40814  0162D8  0EFF               	movlw	255
 40815  0162DA  1428               	andwf	i2___fldiv@grs+2,w,c
 40816  0162DC  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 40817  0162DE  0E7F               	movlw	127
 40818  0162E0  1429               	andwf	i2___fldiv@grs+3,w,c
 40819  0162E2  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 40820  0162E4  501B               	movf	??i2___fldiv,w,c
 40821  0162E6  101C               	iorwf	??i2___fldiv+1,w,c
 40822  0162E8  101D               	iorwf	??i2___fldiv+2,w,c
 40823  0162EA  101E               	iorwf	??i2___fldiv+3,w,c
 40824  0162EC  A4D8               	btfss	status,2,c
 40825  0162EE  D002               	goto	i2u1478_40
 40826  0162F0  A013               	btfss	i2___fldiv@b,0,c
 40827  0162F2  D002               	goto	i2l2240
 40828  0162F4                     i2u1478_40:
 40829  0162F4  0E01               	movlw	1
 40830  0162F6  6E2B               	movwf	i2___fldiv@aexp,c
 40831  0162F8                     i2l2240:
 40832  0162F8  502B               	movf	i2___fldiv@aexp,w,c
 40833  0162FA  B4D8               	btfsc	status,2,c
 40834  0162FC  D01F               	goto	i2l2242
 40835  0162FE  0E01               	movlw	1
 40836  016300  2613               	addwf	i2___fldiv@b,f,c
 40837  016302  0E00               	movlw	0
 40838  016304  2214               	addwfc	i2___fldiv@b+1,f,c
 40839  016306  2215               	addwfc	i2___fldiv@b+2,f,c
 40840  016308  2216               	addwfc	i2___fldiv@b+3,f,c
 40841  01630A  A016               	btfss	i2___fldiv@b+3,0,c
 40842  01630C  D017               	goto	i2l2242
 40843  01630E  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 40844  016312  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 40845  016316  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 40846  01631A  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 40847  01631E  341E               	rlcf	??i2___fldiv+3,w,c
 40848  016320  321E               	rrcf	??i2___fldiv+3,f,c
 40849  016322  321D               	rrcf	??i2___fldiv+2,f,c
 40850  016324  321C               	rrcf	??i2___fldiv+1,f,c
 40851  016326  321B               	rrcf	??i2___fldiv,f,c
 40852  016328  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 40853  01632C  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 40854  016330  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 40855  016334  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 40856  016338  4A24               	infsnz	i2___fldiv@new_exp,f,c
 40857  01633A  2A25               	incf	i2___fldiv@new_exp+1,f,c
 40858  01633C                     i2l2242:
 40859  01633C  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 40860  01633E  D010               	goto	i2l2243
 40861  016340  5025               	movf	i2___fldiv@new_exp+1,w,c
 40862  016342  E103               	bnz	i2u1481_40
 40863  016344  2824               	incf	i2___fldiv@new_exp,w,c
 40864  016346  A0D8               	btfss	status,0,c
 40865  016348  D00B               	goto	i2l2243
 40866  01634A                     i2u1481_40:
 40867  01634A  0E00               	movlw	0
 40868  01634C  6E25               	movwf	i2___fldiv@new_exp+1,c
 40869  01634E  6824               	setf	i2___fldiv@new_exp,c
 40870  016350  0E00               	movlw	0
 40871  016352  6E13               	movwf	i2___fldiv@b,c
 40872  016354  0E00               	movlw	0
 40873  016356  6E14               	movwf	i2___fldiv@b+1,c
 40874  016358  0E00               	movlw	0
 40875  01635A  6E15               	movwf	i2___fldiv@b+2,c
 40876  01635C  0E00               	movlw	0
 40877  01635E  6E16               	movwf	i2___fldiv@b+3,c
 40878  016360                     i2l2243:
 40879  016360  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 40880  016362  D005               	goto	i2u1482_40
 40881  016364  5025               	movf	i2___fldiv@new_exp+1,w,c
 40882  016366  E111               	bnz	i2l12248
 40883  016368  0424               	decf	i2___fldiv@new_exp,w,c
 40884  01636A  B0D8               	btfsc	status,0,c
 40885  01636C  D00E               	goto	i2l2244
 40886  01636E                     i2u1482_40:
 40887  01636E  0E00               	movlw	0
 40888  016370  6E25               	movwf	i2___fldiv@new_exp+1,c
 40889  016372  0E00               	movlw	0
 40890  016374  6E24               	movwf	i2___fldiv@new_exp,c
 40891  016376  0E00               	movlw	0
 40892  016378  6E13               	movwf	i2___fldiv@b,c
 40893  01637A  0E00               	movlw	0
 40894  01637C  6E14               	movwf	i2___fldiv@b+1,c
 40895  01637E  0E00               	movlw	0
 40896  016380  6E15               	movwf	i2___fldiv@b+2,c
 40897  016382  0E00               	movlw	0
 40898  016384  6E16               	movwf	i2___fldiv@b+3,c
 40899  016386  0E00               	movlw	0
 40900  016388  6E1F               	movwf	i2___fldiv@sign,c
 40901  01638A                     i2l2244:
 40902  01638A                     i2l12248:
 40903  01638A  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 40904  01638E  A02A               	btfss	i2___fldiv@bexp,0,c
 40905  016390  D002               	goto	i2l2245
 40906  016392  8E15               	bsf	i2___fldiv@b+2,7,c
 40907  016394  D001               	goto	i2l2246
 40908  016396                     i2l2245:
 40909  016396  9E15               	bcf	i2___fldiv@b+2,7,c
 40910  016398                     i2l2246:
 40911  016398  90D8               	bcf	status,0,c
 40912  01639A  302A               	rrcf	i2___fldiv@bexp,w,c
 40913  01639C  6E16               	movwf	i2___fldiv@b+3,c
 40914  01639E  501F               	movf	i2___fldiv@sign,w,c
 40915  0163A0  1216               	iorwf	i2___fldiv@b+3,f,c
 40916  0163A2  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 40917  0163A6  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 40918  0163AA  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 40919  0163AE  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 40920  0163B2  0012               	return	
 40921  0163B4                     __end_ofi2___fldiv:
 40922                           	opt stack 0
 40923                           tosu	equ	0xFFF
 40924                           tosh	equ	0xFFE
 40925                           tosl	equ	0xFFD
 40926                           pclatu	equ	0xFFB
 40927                           pclath	equ	0xFFA
 40928                           tblptru	equ	0xFF8
 40929                           tblptrh	equ	0xFF7
 40930                           tblptrl	equ	0xFF6
 40931                           tablat	equ	0xFF5
 40932                           prodh	equ	0xFF4
 40933                           prodl	equ	0xFF3
 40934                           intcon	equ	0xFF2
 40935                           indf0	equ	0xFEF
 40936                           postinc0	equ	0xFEE
 40937                           fsr0h	equ	0xFEA
 40938                           fsr0l	equ	0xFE9
 40939                           wreg	equ	0xFE8
 40940                           indf1	equ	0xFE7
 40941                           postdec1	equ	0xFE5
 40942                           plusw1	equ	0xFE3
 40943                           fsr1h	equ	0xFE2
 40944                           fsr1l	equ	0xFE1
 40945                           bsr	equ	0xFE0
 40946                           indf2	equ	0xFDF
 40947                           postinc2	equ	0xFDE
 40948                           postdec2	equ	0xFDD
 40949                           plusw2	equ	0xFDB
 40950                           fsr2h	equ	0xFDA
 40951                           fsr2l	equ	0xFD9
 40952                           status	equ	0xFD8
 40953                           
 40954 ;; *************** function _floor *****************
 40955 ;; Defined at:
 40956 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 40957 ;; Parameters:    Size  Location     Type
 40958 ;;  x               4   22[BANK0 ] unsigned char 
 40959 ;; Auto vars:     Size  Location     Type
 40960 ;;  i               4   26[BANK0 ] unsigned char 
 40961 ;;  expon           2   30[BANK0 ] int 
 40962 ;; Return value:  Size  Location     Type
 40963 ;;                  4   22[BANK0 ] int 
 40964 ;; Registers used:
 40965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40966 ;; Tracked objects:
 40967 ;;		On entry : 0/0
 40968 ;;		On exit  : 0/0
 40969 ;;		Unchanged: 0/0
 40970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40972 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40974 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40975 ;;Total ram usage:       10 bytes
 40976 ;; Hardware stack levels used:    1
 40977 ;; Hardware stack levels required when called:    1
 40978 ;; This function calls:
 40979 ;;		_frexp
 40980 ;;		i2___fladd
 40981 ;;		i2___flge
 40982 ;;		i2___fltol
 40983 ;;		i2___xxtofl
 40984 ;; This function is called by:
 40985 ;;		_sin
 40986 ;; This function uses a non-reentrant model
 40987 ;;
 40988                           
 40989                           	psect	text119
 40990  01780A                     __ptext119:
 40991                           	opt stack 0
 40992  01780A                     _floor:
 40993                           	opt stack 13
 40994                           
 40995                           ;incstack = 0
 40996  01780A  C076  F001         	movff	floor@x,frexp@value
 40997  01780E  C077  F002         	movff	floor@x+1,frexp@value+1
 40998  017812  C078  F003         	movff	floor@x+2,frexp@value+2
 40999  017816  C079  F004         	movff	floor@x+3,frexp@value+3
 41000  01781A  0E7E               	movlw	low floor@expon
 41001  01781C  6E05               	movwf	frexp@eptr,c
 41002  01781E  0E00               	movlw	high floor@expon
 41003  017820  6E06               	movwf	frexp@eptr+1,c
 41004  017822  EC50  F0C2         	call	_frexp	;wreg free
 41005  017826  0100               	movlb	0	; () banked
 41006  017828  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 41007  01782A  D014               	goto	i2l2373
 41008                           
 41009                           ; BSR set to: 0
 41010  01782C  AF79               	btfss	(floor@x+3)& (0+255),7,b
 41011  01782E  D009               	goto	i2l2374
 41012                           
 41013                           ; BSR set to: 0
 41014  017830  0E00               	movlw	0
 41015  017832  6F76               	movwf	?_floor& (0+255),b
 41016  017834  0E00               	movlw	0
 41017  017836  6F77               	movwf	(?_floor+1)& (0+255),b
 41018  017838  0E80               	movlw	128
 41019  01783A  6F78               	movwf	(?_floor+2)& (0+255),b
 41020  01783C  0EBF               	movlw	191
 41021  01783E  6F79               	movwf	(?_floor+3)& (0+255),b
 41022                           
 41023                           ; BSR set to: 0
 41024  017840  0012               	return	
 41025  017842                     i2l2374:
 41026                           
 41027                           ; BSR set to: 0
 41028                           
 41029                           ; BSR set to: 0
 41030  017842  0E00               	movlw	0
 41031  017844  6F76               	movwf	?_floor& (0+255),b
 41032  017846  0E00               	movlw	0
 41033  017848  6F77               	movwf	(?_floor+1)& (0+255),b
 41034  01784A  0E00               	movlw	0
 41035  01784C  6F78               	movwf	(?_floor+2)& (0+255),b
 41036  01784E  0E00               	movlw	0
 41037  017850  6F79               	movwf	(?_floor+3)& (0+255),b
 41038                           
 41039                           ; BSR set to: 0
 41040  017852  0012               	return	
 41041  017854                     i2l2373:
 41042                           
 41043                           ; BSR set to: 0
 41044                           
 41045                           ; BSR set to: 0
 41046  017854  517F               	movf	(floor@expon+1)& (0+255),w,b
 41047  017856  E104               	bnz	i2u1662_40
 41048  017858  0E1D               	movlw	29
 41049  01785A  5D7E               	subwf	floor@expon& (0+255),w,b
 41050  01785C  A0D8               	btfss	status,0,c
 41051  01785E  D009               	goto	i2l2376
 41052  017860                     i2u1662_40:
 41053                           
 41054                           ; BSR set to: 0
 41055  017860  C076  F076         	movff	floor@x,?_floor
 41056  017864  C077  F077         	movff	floor@x+1,?_floor+1
 41057  017868  C078  F078         	movff	floor@x+2,?_floor+2
 41058  01786C  C079  F079         	movff	floor@x+3,?_floor+3
 41059  017870  0012               	return	
 41060  017872                     i2l2376:
 41061                           
 41062                           ; BSR set to: 0
 41063                           
 41064                           ; BSR set to: 0
 41065  017872  C076  F06C         	movff	floor@x,i2___fltol@f1
 41066  017876  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 41067  01787A  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 41068  01787E  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 41069  017882  EC02  F0BE         	call	i2___fltol	;wreg free
 41070  017886  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 41071  01788A  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 41072  01788E  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 41073  017892  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 41074  017896  0E01               	movlw	1
 41075  017898  EC4E  F0B7         	call	i2___xxtofl
 41076  01789C  C005  F07A         	movff	?i2___xxtofl,floor@i
 41077  0178A0  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 41078  0178A4  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 41079  0178A8  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 41080  0178AC  C076  F034         	movff	floor@x,i2___flge@ff1
 41081  0178B0  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 41082  0178B4  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 41083  0178B8  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 41084  0178BC  C07A  F038         	movff	floor@i,i2___flge@ff2
 41085  0178C0  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 41086  0178C4  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 41087  0178C8  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 41088  0178CC  EC75  F0BB         	call	i2___flge	;wreg free
 41089  0178D0  B0D8               	btfsc	status,0,c
 41090  0178D2  D01B               	goto	i2l2377
 41091  0178D4  C07A  F056         	movff	floor@i,i2___fladd@b
 41092  0178D8  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 41093  0178DC  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 41094  0178E0  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 41095  0178E4  0E00               	movlw	0
 41096  0178E6  6E5A               	movwf	i2___fladd@a,c
 41097  0178E8  0E00               	movlw	0
 41098  0178EA  6E5B               	movwf	i2___fladd@a+1,c
 41099  0178EC  0E80               	movlw	128
 41100  0178EE  6E5C               	movwf	i2___fladd@a+2,c
 41101  0178F0  0EBF               	movlw	191
 41102  0178F2  6E5D               	movwf	i2___fladd@a+3,c
 41103  0178F4  ECC0  F0A7         	call	i2___fladd	;wreg free
 41104  0178F8  C056  F076         	movff	?i2___fladd,?_floor
 41105  0178FC  C057  F077         	movff	?i2___fladd+1,?_floor+1
 41106  017900  C058  F078         	movff	?i2___fladd+2,?_floor+2
 41107  017904  C059  F079         	movff	?i2___fladd+3,?_floor+3
 41108  017908  0012               	return	
 41109  01790A                     i2l2377:
 41110  01790A  C07A  F076         	movff	floor@i,?_floor
 41111  01790E  C07B  F077         	movff	floor@i+1,?_floor+1
 41112  017912  C07C  F078         	movff	floor@i+2,?_floor+2
 41113  017916  C07D  F079         	movff	floor@i+3,?_floor+3
 41114  01791A  0012               	return		;funcret
 41115  01791C                     __end_of_floor:
 41116                           	opt stack 0
 41117                           tosu	equ	0xFFF
 41118                           tosh	equ	0xFFE
 41119                           tosl	equ	0xFFD
 41120                           pclatu	equ	0xFFB
 41121                           pclath	equ	0xFFA
 41122                           tblptru	equ	0xFF8
 41123                           tblptrh	equ	0xFF7
 41124                           tblptrl	equ	0xFF6
 41125                           tablat	equ	0xFF5
 41126                           prodh	equ	0xFF4
 41127                           prodl	equ	0xFF3
 41128                           intcon	equ	0xFF2
 41129                           indf0	equ	0xFEF
 41130                           postinc0	equ	0xFEE
 41131                           fsr0h	equ	0xFEA
 41132                           fsr0l	equ	0xFE9
 41133                           wreg	equ	0xFE8
 41134                           indf1	equ	0xFE7
 41135                           postdec1	equ	0xFE5
 41136                           plusw1	equ	0xFE3
 41137                           fsr1h	equ	0xFE2
 41138                           fsr1l	equ	0xFE1
 41139                           bsr	equ	0xFE0
 41140                           indf2	equ	0xFDF
 41141                           postinc2	equ	0xFDE
 41142                           postdec2	equ	0xFDD
 41143                           plusw2	equ	0xFDB
 41144                           fsr2h	equ	0xFDA
 41145                           fsr2l	equ	0xFD9
 41146                           status	equ	0xFD8
 41147                           
 41148 ;; *************** function i2___xxtofl *****************
 41149 ;; Defined at:
 41150 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 41151 ;; Parameters:    Size  Location     Type
 41152 ;;  sign            1    wreg     unsigned char 
 41153 ;;  val             4    4[COMRAM] long 
 41154 ;; Auto vars:     Size  Location     Type
 41155 ;;  sign            1   12[COMRAM] unsigned char 
 41156 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 41157 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 41158 ;; Return value:  Size  Location     Type
 41159 ;;                  4    4[COMRAM] unsigned char 
 41160 ;; Registers used:
 41161 ;;		wreg, status,2, status,0
 41162 ;; Tracked objects:
 41163 ;;		On entry : 0/0
 41164 ;;		On exit  : 0/0
 41165 ;;		Unchanged: 0/0
 41166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41168 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41169 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41170 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41171 ;;Total ram usage:       14 bytes
 41172 ;; Hardware stack levels used:    1
 41173 ;; This function calls:
 41174 ;;		Nothing
 41175 ;; This function is called by:
 41176 ;;		_ADCPostProcessingCallback
 41177 ;;		_floor
 41178 ;;		i2_printf
 41179 ;; This function uses a non-reentrant model
 41180 ;;
 41181                           
 41182                           	psect	text120
 41183  016E9C                     __ptext120:
 41184                           	opt stack 0
 41185  016E9C                     i2___xxtofl:
 41186                           	opt stack 16
 41187                           
 41188                           ;incstack = 0
 41189                           ;i2___xxtofl@sign stored from wreg
 41190  016E9C  6E0D               	movwf	i2___xxtofl@sign,c
 41191  016E9E  500D               	movf	i2___xxtofl@sign,w,c
 41192  016EA0  A4D8               	btfss	status,2,c
 41193  016EA2  AE08               	btfss	i2___xxtofl@val+3,7,c
 41194  016EA4  D01A               	goto	i2l2352
 41195  016EA6  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 41196  016EAA  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 41197  016EAE  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 41198  016EB2  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 41199  016EB6  1E09               	comf	??i2___xxtofl,f,c
 41200  016EB8  1E0A               	comf	??i2___xxtofl+1,f,c
 41201  016EBA  1E0B               	comf	??i2___xxtofl+2,f,c
 41202  016EBC  1E0C               	comf	??i2___xxtofl+3,f,c
 41203  016EBE  2A09               	incf	??i2___xxtofl,f,c
 41204  016EC0  0E00               	movlw	0
 41205  016EC2  220A               	addwfc	??i2___xxtofl+1,f,c
 41206  016EC4  220B               	addwfc	??i2___xxtofl+2,f,c
 41207  016EC6  220C               	addwfc	??i2___xxtofl+3,f,c
 41208  016EC8  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 41209  016ECC  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 41210  016ED0  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 41211  016ED4  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 41212  016ED8  D008               	goto	i2l2353
 41213  016EDA                     i2l2352:
 41214  016EDA  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 41215  016EDE  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 41216  016EE2  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 41217  016EE6  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 41218  016EEA                     i2l2353:
 41219  016EEA  5005               	movf	i2___xxtofl@val,w,c
 41220  016EEC  1006               	iorwf	i2___xxtofl@val+1,w,c
 41221  016EEE  1007               	iorwf	i2___xxtofl@val+2,w,c
 41222  016EF0  1008               	iorwf	i2___xxtofl@val+3,w,c
 41223  016EF2  A4D8               	btfss	status,2,c
 41224  016EF4  D009               	goto	i2l2354
 41225  016EF6  0E00               	movlw	0
 41226  016EF8  6E05               	movwf	?i2___xxtofl,c
 41227  016EFA  0E00               	movlw	0
 41228  016EFC  6E06               	movwf	?i2___xxtofl+1,c
 41229  016EFE  0E00               	movlw	0
 41230  016F00  6E07               	movwf	?i2___xxtofl+2,c
 41231  016F02  0E00               	movlw	0
 41232  016F04  6E08               	movwf	?i2___xxtofl+3,c
 41233  016F06  0012               	return	
 41234  016F08                     i2l2354:
 41235  016F08  0E96               	movlw	150
 41236  016F0A  6E0E               	movwf	i2___xxtofl@exp,c
 41237  016F0C  D006               	goto	i2l2356
 41238  016F0E  2A0E               	incf	i2___xxtofl@exp,f,c
 41239  016F10  90D8               	bcf	status,0,c
 41240  016F12  3212               	rrcf	i2___xxtofl@arg+3,f,c
 41241  016F14  3211               	rrcf	i2___xxtofl@arg+2,f,c
 41242  016F16  3210               	rrcf	i2___xxtofl@arg+1,f,c
 41243  016F18  320F               	rrcf	i2___xxtofl@arg,f,c
 41244  016F1A                     i2l2356:
 41245  016F1A  0E00               	movlw	0
 41246  016F1C  140F               	andwf	i2___xxtofl@arg,w,c
 41247  016F1E  6E09               	movwf	??i2___xxtofl& (0+255),c
 41248  016F20  0E00               	movlw	0
 41249  016F22  1410               	andwf	i2___xxtofl@arg+1,w,c
 41250  016F24  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 41251  016F26  0E00               	movlw	0
 41252  016F28  1411               	andwf	i2___xxtofl@arg+2,w,c
 41253  016F2A  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 41254  016F2C  0EFE               	movlw	254
 41255  016F2E  1412               	andwf	i2___xxtofl@arg+3,w,c
 41256  016F30  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 41257  016F32  5009               	movf	??i2___xxtofl,w,c
 41258  016F34  100A               	iorwf	??i2___xxtofl+1,w,c
 41259  016F36  100B               	iorwf	??i2___xxtofl+2,w,c
 41260  016F38  100C               	iorwf	??i2___xxtofl+3,w,c
 41261  016F3A  B4D8               	btfsc	status,2,c
 41262  016F3C  D00D               	goto	i2l2359
 41263  016F3E  D7E7               	goto	i2l2357
 41264  016F40  2A0E               	incf	i2___xxtofl@exp,f,c
 41265  016F42  0E01               	movlw	1
 41266  016F44  260F               	addwf	i2___xxtofl@arg,f,c
 41267  016F46  0E00               	movlw	0
 41268  016F48  2210               	addwfc	i2___xxtofl@arg+1,f,c
 41269  016F4A  2211               	addwfc	i2___xxtofl@arg+2,f,c
 41270  016F4C  2212               	addwfc	i2___xxtofl@arg+3,f,c
 41271  016F4E  90D8               	bcf	status,0,c
 41272  016F50  3212               	rrcf	i2___xxtofl@arg+3,f,c
 41273  016F52  3211               	rrcf	i2___xxtofl@arg+2,f,c
 41274  016F54  3210               	rrcf	i2___xxtofl@arg+1,f,c
 41275  016F56  320F               	rrcf	i2___xxtofl@arg,f,c
 41276  016F58                     i2l2359:
 41277  016F58  0E00               	movlw	0
 41278  016F5A  140F               	andwf	i2___xxtofl@arg,w,c
 41279  016F5C  6E09               	movwf	??i2___xxtofl& (0+255),c
 41280  016F5E  0E00               	movlw	0
 41281  016F60  1410               	andwf	i2___xxtofl@arg+1,w,c
 41282  016F62  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 41283  016F64  0E00               	movlw	0
 41284  016F66  1411               	andwf	i2___xxtofl@arg+2,w,c
 41285  016F68  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 41286  016F6A  0EFF               	movlw	255
 41287  016F6C  1412               	andwf	i2___xxtofl@arg+3,w,c
 41288  016F6E  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 41289  016F70  5009               	movf	??i2___xxtofl,w,c
 41290  016F72  100A               	iorwf	??i2___xxtofl+1,w,c
 41291  016F74  100B               	iorwf	??i2___xxtofl+2,w,c
 41292  016F76  100C               	iorwf	??i2___xxtofl+3,w,c
 41293  016F78  B4D8               	btfsc	status,2,c
 41294  016F7A  D007               	goto	i2l2362
 41295  016F7C  D7E1               	goto	i2l2360
 41296  016F7E  060E               	decf	i2___xxtofl@exp,f,c
 41297  016F80  90D8               	bcf	status,0,c
 41298  016F82  360F               	rlcf	i2___xxtofl@arg,f,c
 41299  016F84  3610               	rlcf	i2___xxtofl@arg+1,f,c
 41300  016F86  3611               	rlcf	i2___xxtofl@arg+2,f,c
 41301  016F88  3612               	rlcf	i2___xxtofl@arg+3,f,c
 41302  016F8A                     i2l2362:
 41303  016F8A  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 41304  016F8C  D003               	goto	i2u1570_40
 41305  016F8E  0E02               	movlw	2
 41306  016F90  600E               	cpfslt	i2___xxtofl@exp,c
 41307  016F92  D7F5               	goto	i2l2363
 41308  016F94                     i2u1570_40:
 41309  016F94  B00E               	btfsc	i2___xxtofl@exp,0,c
 41310  016F96  D008               	goto	i2l2367
 41311  016F98  0EFF               	movlw	255
 41312  016F9A  160F               	andwf	i2___xxtofl@arg,f,c
 41313  016F9C  0EFF               	movlw	255
 41314  016F9E  1610               	andwf	i2___xxtofl@arg+1,f,c
 41315  016FA0  0E7F               	movlw	127
 41316  016FA2  1611               	andwf	i2___xxtofl@arg+2,f,c
 41317  016FA4  0EFF               	movlw	255
 41318  016FA6  1612               	andwf	i2___xxtofl@arg+3,f,c
 41319  016FA8                     i2l2367:
 41320  016FA8  90D8               	bcf	status,0,c
 41321  016FAA  320E               	rrcf	i2___xxtofl@exp,f,c
 41322  016FAC  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 41323  016FB0  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 41324  016FB2  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 41325  016FB4  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 41326  016FB6  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 41327  016FBA  6A0B               	clrf	??i2___xxtofl+2,c
 41328  016FBC  6A0A               	clrf	??i2___xxtofl+1,c
 41329  016FBE  6A09               	clrf	??i2___xxtofl,c
 41330  016FC0  5009               	movf	??i2___xxtofl,w,c
 41331  016FC2  120F               	iorwf	i2___xxtofl@arg,f,c
 41332  016FC4  500A               	movf	??i2___xxtofl+1,w,c
 41333  016FC6  1210               	iorwf	i2___xxtofl@arg+1,f,c
 41334  016FC8  500B               	movf	??i2___xxtofl+2,w,c
 41335  016FCA  1211               	iorwf	i2___xxtofl@arg+2,f,c
 41336  016FCC  500C               	movf	??i2___xxtofl+3,w,c
 41337  016FCE  1212               	iorwf	i2___xxtofl@arg+3,f,c
 41338  016FD0  500D               	movf	i2___xxtofl@sign,w,c
 41339  016FD2  A4D8               	btfss	status,2,c
 41340  016FD4  AE08               	btfss	i2___xxtofl@val+3,7,c
 41341  016FD6  D001               	goto	i2l2368
 41342  016FD8  8E12               	bsf	i2___xxtofl@arg+3,7,c
 41343  016FDA                     i2l2368:
 41344  016FDA  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 41345  016FDE  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 41346  016FE2  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 41347  016FE6  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 41348  016FEA  0012               	return	
 41349  016FEC                     __end_ofi2___xxtofl:
 41350                           	opt stack 0
 41351                           tosu	equ	0xFFF
 41352                           tosh	equ	0xFFE
 41353                           tosl	equ	0xFFD
 41354                           pclatu	equ	0xFFB
 41355                           pclath	equ	0xFFA
 41356                           tblptru	equ	0xFF8
 41357                           tblptrh	equ	0xFF7
 41358                           tblptrl	equ	0xFF6
 41359                           tablat	equ	0xFF5
 41360                           prodh	equ	0xFF4
 41361                           prodl	equ	0xFF3
 41362                           intcon	equ	0xFF2
 41363                           indf0	equ	0xFEF
 41364                           postinc0	equ	0xFEE
 41365                           fsr0h	equ	0xFEA
 41366                           fsr0l	equ	0xFE9
 41367                           wreg	equ	0xFE8
 41368                           indf1	equ	0xFE7
 41369                           postdec1	equ	0xFE5
 41370                           plusw1	equ	0xFE3
 41371                           fsr1h	equ	0xFE2
 41372                           fsr1l	equ	0xFE1
 41373                           bsr	equ	0xFE0
 41374                           indf2	equ	0xFDF
 41375                           postinc2	equ	0xFDE
 41376                           postdec2	equ	0xFDD
 41377                           plusw2	equ	0xFDB
 41378                           fsr2h	equ	0xFDA
 41379                           fsr2l	equ	0xFD9
 41380                           status	equ	0xFD8
 41381                           
 41382 ;; *************** function i2___fltol *****************
 41383 ;; Defined at:
 41384 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 41385 ;; Parameters:    Size  Location     Type
 41386 ;;  f1              4   12[BANK0 ] unsigned char 
 41387 ;; Auto vars:     Size  Location     Type
 41388 ;;  __fltol         1   21[BANK0 ] unsigned char 
 41389 ;;  __fltol         1   20[BANK0 ] unsigned char 
 41390 ;; Return value:  Size  Location     Type
 41391 ;;                  4   12[BANK0 ] long 
 41392 ;; Registers used:
 41393 ;;		wreg, status,2, status,0
 41394 ;; Tracked objects:
 41395 ;;		On entry : 0/0
 41396 ;;		On exit  : 0/0
 41397 ;;		Unchanged: 0/0
 41398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41399 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41400 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41401 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41402 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41403 ;;Total ram usage:       10 bytes
 41404 ;; Hardware stack levels used:    1
 41405 ;; This function calls:
 41406 ;;		Nothing
 41407 ;; This function is called by:
 41408 ;;		_ADCPostProcessingCallback
 41409 ;;		_floor
 41410 ;;		i2_printf
 41411 ;; This function uses a non-reentrant model
 41412 ;;
 41413                           
 41414                           	psect	text121
 41415  017C04                     __ptext121:
 41416                           	opt stack 0
 41417  017C04                     i2___fltol:
 41418                           	opt stack 16
 41419                           
 41420                           ;incstack = 0
 41421  017C04  0100               	movlb	0	; () banked
 41422  017C06  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 41423  017C08  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 41424  017C0A  6F75               	movwf	i2___fltol@exp1& (0+255),b
 41425  017C0C  5175               	movf	i2___fltol@exp1& (0+255),w,b
 41426  017C0E  A4D8               	btfss	status,2,c
 41427  017C10  D009               	goto	i2l1919
 41428                           
 41429                           ; BSR set to: 0
 41430  017C12  0E00               	movlw	0
 41431  017C14  6F6C               	movwf	?i2___fltol& (0+255),b
 41432  017C16  0E00               	movlw	0
 41433  017C18  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 41434  017C1A  0E00               	movlw	0
 41435  017C1C  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 41436  017C1E  0E00               	movlw	0
 41437  017C20  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 41438                           
 41439                           ; BSR set to: 0
 41440  017C22  0012               	return	
 41441  017C24                     i2l1919:
 41442                           
 41443                           ; BSR set to: 0
 41444                           
 41445                           ; BSR set to: 0
 41446  017C24  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 41447  017C28  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 41448  017C2C  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 41449  017C30  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 41450  017C34  0E20               	movlw	32
 41451  017C36  D005               	goto	i2u1558_40
 41452  017C38                     i2u1558_45:
 41453  017C38  90D8               	bcf	status,0,c
 41454  017C3A  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 41455  017C3C  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 41456  017C3E  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 41457  017C40  3370               	rrcf	??i2___fltol& (0+255),f,b
 41458  017C42                     i2u1558_40:
 41459  017C42  2EE8               	decfsz	wreg,f,c
 41460  017C44  D7F9               	goto	i2u1558_45
 41461  017C46  5170               	movf	??i2___fltol& (0+255),w,b
 41462  017C48  6F74               	movwf	i2___fltol@sign1& (0+255),b
 41463                           
 41464                           ; BSR set to: 0
 41465  017C4A  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 41466                           
 41467                           ; BSR set to: 0
 41468  017C4C  0EFF               	movlw	255
 41469  017C4E  176C               	andwf	i2___fltol@f1& (0+255),f,b
 41470  017C50  0EFF               	movlw	255
 41471  017C52  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 41472  017C54  0EFF               	movlw	255
 41473  017C56  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 41474  017C58  0E00               	movlw	0
 41475  017C5A  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 41476                           
 41477                           ; BSR set to: 0
 41478  017C5C  0E96               	movlw	150
 41479  017C5E  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 41480                           
 41481                           ; BSR set to: 0
 41482  017C60  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 41483  017C62  D016               	goto	i2l1921
 41484                           
 41485                           ; BSR set to: 0
 41486  017C64  5175               	movf	i2___fltol@exp1& (0+255),w,b
 41487  017C66  0A80               	xorlw	128
 41488  017C68  0F97               	addlw	151
 41489  017C6A  B0D8               	btfsc	status,0,c
 41490  017C6C  D009               	goto	i2l1922
 41491                           
 41492                           ; BSR set to: 0
 41493  017C6E  0E00               	movlw	0
 41494  017C70  6F6C               	movwf	?i2___fltol& (0+255),b
 41495  017C72  0E00               	movlw	0
 41496  017C74  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 41497  017C76  0E00               	movlw	0
 41498  017C78  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 41499  017C7A  0E00               	movlw	0
 41500  017C7C  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 41501                           
 41502                           ; BSR set to: 0
 41503  017C7E  0012               	return	
 41504  017C80                     i2l1922:
 41505                           
 41506                           ; BSR set to: 0
 41507                           
 41508                           ; BSR set to: 0
 41509                           
 41510                           ; BSR set to: 0
 41511  017C80  90D8               	bcf	status,0,c
 41512  017C82  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 41513  017C84  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 41514  017C86  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 41515  017C88  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 41516                           
 41517                           ; BSR set to: 0
 41518  017C8A  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 41519  017C8C  D7F9               	goto	i2l1922
 41520                           
 41521                           ; BSR set to: 0
 41522  017C8E  D015               	goto	i2u1562_40
 41523  017C90                     i2l1921:
 41524                           
 41525                           ; BSR set to: 0
 41526                           
 41527                           ; BSR set to: 0
 41528  017C90  0E1F               	movlw	31
 41529  017C92  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 41530  017C94  D00F               	goto	i2l1927
 41531                           
 41532                           ; BSR set to: 0
 41533  017C96  0E00               	movlw	0
 41534  017C98  6F6C               	movwf	?i2___fltol& (0+255),b
 41535  017C9A  0E00               	movlw	0
 41536  017C9C  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 41537  017C9E  0E00               	movlw	0
 41538  017CA0  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 41539  017CA2  0E00               	movlw	0
 41540  017CA4  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 41541                           
 41542                           ; BSR set to: 0
 41543  017CA6  0012               	return	
 41544  017CA8                     
 41545                           ; BSR set to: 0
 41546                           
 41547                           ; BSR set to: 0
 41548  017CA8  90D8               	bcf	status,0,c
 41549  017CAA  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 41550  017CAC  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 41551  017CAE  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 41552  017CB0  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 41553  017CB2  0775               	decf	i2___fltol@exp1& (0+255),f,b
 41554  017CB4                     i2l1927:
 41555                           
 41556                           ; BSR set to: 0
 41557                           
 41558                           ; BSR set to: 0
 41559  017CB4  5175               	movf	i2___fltol@exp1& (0+255),w,b
 41560  017CB6  A4D8               	btfss	status,2,c
 41561  017CB8  D7F7               	goto	i2l1928
 41562  017CBA                     i2u1562_40:
 41563                           
 41564                           ; BSR set to: 0
 41565                           
 41566                           ; BSR set to: 0
 41567                           
 41568                           ; BSR set to: 0
 41569  017CBA  5174               	movf	i2___fltol@sign1& (0+255),w,b
 41570  017CBC  B4D8               	btfsc	status,2,c
 41571  017CBE  D008               	goto	i2l1930
 41572                           
 41573                           ; BSR set to: 0
 41574  017CC0  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 41575  017CC2  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 41576  017CC4  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 41577  017CC6  6D6C               	negf	i2___fltol@f1& (0+255),b
 41578  017CC8  0E00               	movlw	0
 41579  017CCA  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 41580  017CCC  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 41581  017CCE  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 41582  017CD0                     i2l1930:
 41583                           
 41584                           ; BSR set to: 0
 41585                           
 41586                           ; BSR set to: 0
 41587  017CD0  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 41588  017CD4  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 41589  017CD8  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 41590  017CDC  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 41591  017CE0  0012               	return	
 41592  017CE2                     __end_ofi2___fltol:
 41593                           	opt stack 0
 41594                           tosu	equ	0xFFF
 41595                           tosh	equ	0xFFE
 41596                           tosl	equ	0xFFD
 41597                           pclatu	equ	0xFFB
 41598                           pclath	equ	0xFFA
 41599                           tblptru	equ	0xFF8
 41600                           tblptrh	equ	0xFF7
 41601                           tblptrl	equ	0xFF6
 41602                           tablat	equ	0xFF5
 41603                           prodh	equ	0xFF4
 41604                           prodl	equ	0xFF3
 41605                           intcon	equ	0xFF2
 41606                           indf0	equ	0xFEF
 41607                           postinc0	equ	0xFEE
 41608                           fsr0h	equ	0xFEA
 41609                           fsr0l	equ	0xFE9
 41610                           wreg	equ	0xFE8
 41611                           indf1	equ	0xFE7
 41612                           postdec1	equ	0xFE5
 41613                           plusw1	equ	0xFE3
 41614                           fsr1h	equ	0xFE2
 41615                           fsr1l	equ	0xFE1
 41616                           bsr	equ	0xFE0
 41617                           indf2	equ	0xFDF
 41618                           postinc2	equ	0xFDE
 41619                           postdec2	equ	0xFDD
 41620                           plusw2	equ	0xFDB
 41621                           fsr2h	equ	0xFDA
 41622                           fsr2l	equ	0xFD9
 41623                           status	equ	0xFD8
 41624                           
 41625 ;; *************** function i2___flge *****************
 41626 ;; Defined at:
 41627 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 41628 ;; Parameters:    Size  Location     Type
 41629 ;;  ff1             4   51[COMRAM] long 
 41630 ;;  ff2             4   55[COMRAM] long 
 41631 ;; Auto vars:     Size  Location     Type
 41632 ;;		None
 41633 ;; Return value:  Size  Location     Type
 41634 ;;		None               void
 41635 ;; Registers used:
 41636 ;;		wreg, status,2, status,0
 41637 ;; Tracked objects:
 41638 ;;		On entry : 0/0
 41639 ;;		On exit  : 0/0
 41640 ;;		Unchanged: 0/0
 41641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41642 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41644 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41645 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41646 ;;Total ram usage:       12 bytes
 41647 ;; Hardware stack levels used:    1
 41648 ;; This function calls:
 41649 ;;		Nothing
 41650 ;; This function is called by:
 41651 ;;		_ADCPostProcessingCallback
 41652 ;;		_asin
 41653 ;;		_atan
 41654 ;;		_sin
 41655 ;;		_floor
 41656 ;;		i2_printf
 41657 ;; This function uses a non-reentrant model
 41658 ;;
 41659                           
 41660                           	psect	text122
 41661  0176EA                     __ptext122:
 41662                           	opt stack 0
 41663  0176EA                     i2___flge:
 41664                           	opt stack 16
 41665                           
 41666                           ; BSR set to: 0
 41667                           ;incstack = 0
 41668  0176EA  0E00               	movlw	0
 41669  0176EC  1434               	andwf	i2___flge@ff1,w,c
 41670  0176EE  6E3C               	movwf	??i2___flge& (0+255),c
 41671  0176F0  0E00               	movlw	0
 41672  0176F2  1435               	andwf	i2___flge@ff1+1,w,c
 41673  0176F4  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 41674  0176F6  0E80               	movlw	128
 41675  0176F8  1436               	andwf	i2___flge@ff1+2,w,c
 41676  0176FA  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 41677  0176FC  0E7F               	movlw	127
 41678  0176FE  1437               	andwf	i2___flge@ff1+3,w,c
 41679  017700  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 41680  017702  503C               	movf	??i2___flge,w,c
 41681  017704  103D               	iorwf	??i2___flge+1,w,c
 41682  017706  103E               	iorwf	??i2___flge+2,w,c
 41683  017708  103F               	iorwf	??i2___flge+3,w,c
 41684  01770A  A4D8               	btfss	status,2,c
 41685  01770C  D008               	goto	i2l1889
 41686  01770E  0E00               	movlw	0
 41687  017710  6E34               	movwf	i2___flge@ff1,c
 41688  017712  0E00               	movlw	0
 41689  017714  6E35               	movwf	i2___flge@ff1+1,c
 41690  017716  0E00               	movlw	0
 41691  017718  6E36               	movwf	i2___flge@ff1+2,c
 41692  01771A  0E00               	movlw	0
 41693  01771C  6E37               	movwf	i2___flge@ff1+3,c
 41694  01771E                     i2l1889:
 41695  01771E  0E00               	movlw	0
 41696  017720  1438               	andwf	i2___flge@ff2,w,c
 41697  017722  6E3C               	movwf	??i2___flge& (0+255),c
 41698  017724  0E00               	movlw	0
 41699  017726  1439               	andwf	i2___flge@ff2+1,w,c
 41700  017728  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 41701  01772A  0E80               	movlw	128
 41702  01772C  143A               	andwf	i2___flge@ff2+2,w,c
 41703  01772E  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 41704  017730  0E7F               	movlw	127
 41705  017732  143B               	andwf	i2___flge@ff2+3,w,c
 41706  017734  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 41707  017736  503C               	movf	??i2___flge,w,c
 41708  017738  103D               	iorwf	??i2___flge+1,w,c
 41709  01773A  103E               	iorwf	??i2___flge+2,w,c
 41710  01773C  103F               	iorwf	??i2___flge+3,w,c
 41711  01773E  A4D8               	btfss	status,2,c
 41712  017740  D008               	goto	i2l1890
 41713  017742  0E00               	movlw	0
 41714  017744  6E38               	movwf	i2___flge@ff2,c
 41715  017746  0E00               	movlw	0
 41716  017748  6E39               	movwf	i2___flge@ff2+1,c
 41717  01774A  0E00               	movlw	0
 41718  01774C  6E3A               	movwf	i2___flge@ff2+2,c
 41719  01774E  0E00               	movlw	0
 41720  017750  6E3B               	movwf	i2___flge@ff2+3,c
 41721  017752                     i2l1890:
 41722  017752  AE37               	btfss	i2___flge@ff1+3,7,c
 41723  017754  D01D               	goto	i2l1891
 41724  017756  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 41725  01775A  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 41726  01775E  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 41727  017762  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 41728  017766  1E3C               	comf	??i2___flge,f,c
 41729  017768  1E3D               	comf	??i2___flge+1,f,c
 41730  01776A  1E3E               	comf	??i2___flge+2,f,c
 41731  01776C  1E3F               	comf	??i2___flge+3,f,c
 41732  01776E  2A3C               	incf	??i2___flge,f,c
 41733  017770  0E00               	movlw	0
 41734  017772  223D               	addwfc	??i2___flge+1,f,c
 41735  017774  223E               	addwfc	??i2___flge+2,f,c
 41736  017776  223F               	addwfc	??i2___flge+3,f,c
 41737  017778  0E00               	movlw	0
 41738  01777A  243C               	addwf	??i2___flge,w,c
 41739  01777C  6E34               	movwf	i2___flge@ff1,c
 41740  01777E  0E00               	movlw	0
 41741  017780  203D               	addwfc	??i2___flge+1,w,c
 41742  017782  6E35               	movwf	i2___flge@ff1+1,c
 41743  017784  0E00               	movlw	0
 41744  017786  203E               	addwfc	??i2___flge+2,w,c
 41745  017788  6E36               	movwf	i2___flge@ff1+2,c
 41746  01778A  0E80               	movlw	128
 41747  01778C  203F               	addwfc	??i2___flge+3,w,c
 41748  01778E  6E37               	movwf	i2___flge@ff1+3,c
 41749  017790                     i2l1891:
 41750  017790  AE3B               	btfss	i2___flge@ff2+3,7,c
 41751  017792  D01D               	goto	i2l1892
 41752  017794  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 41753  017798  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 41754  01779C  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 41755  0177A0  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 41756  0177A4  1E3C               	comf	??i2___flge,f,c
 41757  0177A6  1E3D               	comf	??i2___flge+1,f,c
 41758  0177A8  1E3E               	comf	??i2___flge+2,f,c
 41759  0177AA  1E3F               	comf	??i2___flge+3,f,c
 41760  0177AC  2A3C               	incf	??i2___flge,f,c
 41761  0177AE  0E00               	movlw	0
 41762  0177B0  223D               	addwfc	??i2___flge+1,f,c
 41763  0177B2  223E               	addwfc	??i2___flge+2,f,c
 41764  0177B4  223F               	addwfc	??i2___flge+3,f,c
 41765  0177B6  0E00               	movlw	0
 41766  0177B8  243C               	addwf	??i2___flge,w,c
 41767  0177BA  6E38               	movwf	i2___flge@ff2,c
 41768  0177BC  0E00               	movlw	0
 41769  0177BE  203D               	addwfc	??i2___flge+1,w,c
 41770  0177C0  6E39               	movwf	i2___flge@ff2+1,c
 41771  0177C2  0E00               	movlw	0
 41772  0177C4  203E               	addwfc	??i2___flge+2,w,c
 41773  0177C6  6E3A               	movwf	i2___flge@ff2+2,c
 41774  0177C8  0E80               	movlw	128
 41775  0177CA  203F               	addwfc	??i2___flge+3,w,c
 41776  0177CC  6E3B               	movwf	i2___flge@ff2+3,c
 41777  0177CE                     i2l1892:
 41778  0177CE  0E00               	movlw	0
 41779  0177D0  1A34               	xorwf	i2___flge@ff1,f,c
 41780  0177D2  0E00               	movlw	0
 41781  0177D4  1A35               	xorwf	i2___flge@ff1+1,f,c
 41782  0177D6  0E00               	movlw	0
 41783  0177D8  1A36               	xorwf	i2___flge@ff1+2,f,c
 41784  0177DA  0E80               	movlw	128
 41785  0177DC  1A37               	xorwf	i2___flge@ff1+3,f,c
 41786  0177DE  0E00               	movlw	0
 41787  0177E0  1A38               	xorwf	i2___flge@ff2,f,c
 41788  0177E2  0E00               	movlw	0
 41789  0177E4  1A39               	xorwf	i2___flge@ff2+1,f,c
 41790  0177E6  0E00               	movlw	0
 41791  0177E8  1A3A               	xorwf	i2___flge@ff2+2,f,c
 41792  0177EA  0E80               	movlw	128
 41793  0177EC  1A3B               	xorwf	i2___flge@ff2+3,f,c
 41794  0177EE  5038               	movf	i2___flge@ff2,w,c
 41795  0177F0  5C34               	subwf	i2___flge@ff1,w,c
 41796  0177F2  5039               	movf	i2___flge@ff2+1,w,c
 41797  0177F4  5835               	subwfb	i2___flge@ff1+1,w,c
 41798  0177F6  503A               	movf	i2___flge@ff2+2,w,c
 41799  0177F8  5836               	subwfb	i2___flge@ff1+2,w,c
 41800  0177FA  503B               	movf	i2___flge@ff2+3,w,c
 41801  0177FC  5837               	subwfb	i2___flge@ff1+3,w,c
 41802  0177FE  B0D8               	btfsc	status,0,c
 41803  017800  D002               	goto	i2l11320
 41804  017802  90D8               	bcf	status,0,c
 41805  017804  0012               	return	
 41806  017806                     i2l11320:
 41807  017806  80D8               	bsf	status,0,c
 41808  017808  0012               	return	
 41809  01780A                     __end_ofi2___flge:
 41810                           	opt stack 0
 41811                           tosu	equ	0xFFF
 41812                           tosh	equ	0xFFE
 41813                           tosl	equ	0xFFD
 41814                           pclatu	equ	0xFFB
 41815                           pclath	equ	0xFFA
 41816                           tblptru	equ	0xFF8
 41817                           tblptrh	equ	0xFF7
 41818                           tblptrl	equ	0xFF6
 41819                           tablat	equ	0xFF5
 41820                           prodh	equ	0xFF4
 41821                           prodl	equ	0xFF3
 41822                           intcon	equ	0xFF2
 41823                           indf0	equ	0xFEF
 41824                           postinc0	equ	0xFEE
 41825                           fsr0h	equ	0xFEA
 41826                           fsr0l	equ	0xFE9
 41827                           wreg	equ	0xFE8
 41828                           indf1	equ	0xFE7
 41829                           postdec1	equ	0xFE5
 41830                           plusw1	equ	0xFE3
 41831                           fsr1h	equ	0xFE2
 41832                           fsr1l	equ	0xFE1
 41833                           bsr	equ	0xFE0
 41834                           indf2	equ	0xFDF
 41835                           postinc2	equ	0xFDE
 41836                           postdec2	equ	0xFDD
 41837                           plusw2	equ	0xFDB
 41838                           fsr2h	equ	0xFDA
 41839                           fsr2l	equ	0xFD9
 41840                           status	equ	0xFD8
 41841                           
 41842 ;; *************** function _frexp *****************
 41843 ;; Defined at:
 41844 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 41845 ;; Parameters:    Size  Location     Type
 41846 ;;  value           4    0[COMRAM] long 
 41847 ;;  eptr            2    4[COMRAM] PTR int 
 41848 ;;		 -> floor@expon(2), 
 41849 ;; Auto vars:     Size  Location     Type
 41850 ;;		None
 41851 ;; Return value:  Size  Location     Type
 41852 ;;                  4    0[COMRAM] PTR int 
 41853 ;; Registers used:
 41854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41855 ;; Tracked objects:
 41856 ;;		On entry : 0/0
 41857 ;;		On exit  : 0/0
 41858 ;;		Unchanged: 0/0
 41859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41860 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41863 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41864 ;;Total ram usage:        8 bytes
 41865 ;; Hardware stack levels used:    1
 41866 ;; This function calls:
 41867 ;;		Nothing
 41868 ;; This function is called by:
 41869 ;;		_floor
 41870 ;; This function uses a non-reentrant model
 41871 ;;
 41872                           
 41873                           	psect	text123
 41874  0184A0                     __ptext123:
 41875                           	opt stack 0
 41876  0184A0                     _frexp:
 41877                           	opt stack 13
 41878                           
 41879                           ;incstack = 0
 41880  0184A0  5001               	movf	frexp@value,w,c
 41881  0184A2  1002               	iorwf	frexp@value+1,w,c
 41882  0184A4  1003               	iorwf	frexp@value+2,w,c
 41883  0184A6  1004               	iorwf	frexp@value+3,w,c
 41884  0184A8  A4D8               	btfss	status,2,c
 41885  0184AA  D009               	goto	i2l2382
 41886  0184AC  C005  FFD9         	movff	frexp@eptr,fsr2l
 41887  0184B0  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 41888  0184B4  0E00               	movlw	0
 41889  0184B6  6EDE               	movwf	postinc2,c
 41890  0184B8  0E00               	movlw	0
 41891  0184BA  6EDD               	movwf	postdec2,c
 41892                           
 41893                           ;	Return value of _frexp is never used
 41894  0184BC  0012               	return	
 41895  0184BE                     i2l2382:
 41896  0184BE  5004               	movf	frexp@value+3,w,c
 41897  0184C0  0B7F               	andlw	127
 41898  0184C2  6E07               	movwf	??_frexp& (0+255),c
 41899  0184C4  6A08               	clrf	(??_frexp+1)& (0+255),c
 41900  0184C6  90D8               	bcf	status,0,c
 41901  0184C8  3607               	rlcf	??_frexp,f,c
 41902  0184CA  3608               	rlcf	??_frexp+1,f,c
 41903  0184CC  C005  FFD9         	movff	frexp@eptr,fsr2l
 41904  0184D0  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 41905  0184D4  C007  FFDE         	movff	??_frexp,postinc2
 41906  0184D8  C008  FFDD         	movff	??_frexp+1,postdec2
 41907  0184DC  AE03               	btfss	frexp@value+2,7,c
 41908  0184DE  D003               	goto	i2u1556_40
 41909  0184E0  6A07               	clrf	??_frexp& (0+255),c
 41910  0184E2  2A07               	incf	??_frexp& (0+255),f,c
 41911  0184E4  D001               	goto	i2u1556_48
 41912  0184E6                     i2u1556_40:
 41913  0184E6  6A07               	clrf	??_frexp& (0+255),c
 41914  0184E8                     i2u1556_48:
 41915  0184E8  5007               	movf	??_frexp,w,c
 41916  0184EA  C005  FFD9         	movff	frexp@eptr,fsr2l
 41917  0184EE  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 41918  0184F2  12DE               	iorwf	postinc2,f,c
 41919  0184F4  0E00               	movlw	0
 41920  0184F6  12DD               	iorwf	postdec2,f,c
 41921  0184F8  C005  FFD9         	movff	frexp@eptr,fsr2l
 41922  0184FC  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 41923  018500  0E82               	movlw	130
 41924  018502  26DE               	addwf	postinc2,f,c
 41925  018504  0EFF               	movlw	255
 41926  018506  22DD               	addwfc	postdec2,f,c
 41927  018508  8004               	bsf	frexp@value+3,0,c
 41928  01850A  8204               	bsf	frexp@value+3,1,c
 41929  01850C  8404               	bsf	frexp@value+3,2,c
 41930  01850E  8604               	bsf	frexp@value+3,3,c
 41931  018510  8804               	bsf	frexp@value+3,4,c
 41932  018512  8A04               	bsf	frexp@value+3,5,c
 41933  018514  9C04               	bcf	frexp@value+3,6,c
 41934  018516  9E03               	bcf	frexp@value+2,7,c
 41935  018518  0012               	return	
 41936  01851A                     __end_of_frexp:
 41937                           	opt stack 0
 41938                           tosu	equ	0xFFF
 41939                           tosh	equ	0xFFE
 41940                           tosl	equ	0xFFD
 41941                           pclatu	equ	0xFFB
 41942                           pclath	equ	0xFFA
 41943                           tblptru	equ	0xFF8
 41944                           tblptrh	equ	0xFF7
 41945                           tblptrl	equ	0xFF6
 41946                           tablat	equ	0xFF5
 41947                           prodh	equ	0xFF4
 41948                           prodl	equ	0xFF3
 41949                           intcon	equ	0xFF2
 41950                           indf0	equ	0xFEF
 41951                           postinc0	equ	0xFEE
 41952                           fsr0h	equ	0xFEA
 41953                           fsr0l	equ	0xFE9
 41954                           wreg	equ	0xFE8
 41955                           indf1	equ	0xFE7
 41956                           postdec1	equ	0xFE5
 41957                           plusw1	equ	0xFE3
 41958                           fsr1h	equ	0xFE2
 41959                           fsr1l	equ	0xFE1
 41960                           bsr	equ	0xFE0
 41961                           indf2	equ	0xFDF
 41962                           postinc2	equ	0xFDE
 41963                           postdec2	equ	0xFDD
 41964                           plusw2	equ	0xFDB
 41965                           fsr2h	equ	0xFDA
 41966                           fsr2l	equ	0xFD9
 41967                           status	equ	0xFD8
 41968                           
 41969 ;; *************** function _eval_poly *****************
 41970 ;; Defined at:
 41971 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 41972 ;; Parameters:    Size  Location     Type
 41973 ;;  x               4   12[BANK0 ] PTR int 
 41974 ;;  d               2   16[BANK0 ] PTR const 
 41975 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 41976 ;;  n               2   18[BANK0 ] int 
 41977 ;; Auto vars:     Size  Location     Type
 41978 ;;  res             4   24[BANK0 ] int 
 41979 ;; Return value:  Size  Location     Type
 41980 ;;                  4   12[BANK0 ] int 
 41981 ;; Registers used:
 41982 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41983 ;; Tracked objects:
 41984 ;;		On entry : 0/0
 41985 ;;		On exit  : 0/0
 41986 ;;		Unchanged: 0/0
 41987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41988 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41989 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41991 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41992 ;;Total ram usage:       16 bytes
 41993 ;; Hardware stack levels used:    1
 41994 ;; Hardware stack levels required when called:    1
 41995 ;; This function calls:
 41996 ;;		i2___fladd
 41997 ;;		i2___flmul
 41998 ;; This function is called by:
 41999 ;;		_atan
 42000 ;;		_sin
 42001 ;; This function uses a non-reentrant model
 42002 ;;
 42003                           
 42004                           	psect	text124
 42005  017A26                     __ptext124:
 42006                           	opt stack 0
 42007  017A26                     _eval_poly:
 42008                           	opt stack 13
 42009                           
 42010                           ;incstack = 0
 42011  017A26  C072  F074         	movff	eval_poly@n,??_eval_poly
 42012  017A2A  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 42013  017A2E  0100               	movlb	0	; () banked
 42014  017A30  90D8               	bcf	status,0,c
 42015  017A32  3774               	rlcf	??_eval_poly& (0+255),f,b
 42016  017A34  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 42017  017A36  90D8               	bcf	status,0,c
 42018  017A38  3774               	rlcf	??_eval_poly& (0+255),f,b
 42019  017A3A  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 42020  017A3C  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 42021  017A40  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 42022  017A44  5174               	movf	??_eval_poly& (0+255),w,b
 42023  017A46  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 42024  017A48  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 42025  017A4A  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 42026  017A4C  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 42027  017A50  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 42028  017A54                     	if	0	;tblptru may be non-zero
 42029  017A54                     	endif
 42030  017A54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42031  017A54  0E00               	movlw	low (__mediumconst shr (0+16))
 42032  017A56  6EF8               	movwf	tblptru,c
 42033  017A58                     	endif
 42034  017A58  0009               	tblrd		*+
 42035  017A5A  CFF5 F078          	movff	tablat,eval_poly@res
 42036  017A5E  0009               	tblrd		*+
 42037  017A60  CFF5 F079          	movff	tablat,eval_poly@res+1
 42038  017A64  0009               	tblrd		*+
 42039  017A66  CFF5 F07A          	movff	tablat,eval_poly@res+2
 42040  017A6A  000A               	tblrd		*-
 42041  017A6C  CFF5 F07B          	movff	tablat,eval_poly@res+3
 42042  017A70  D04C               	goto	i2l1862
 42043  017A72                     
 42044                           ; BSR set to: 0
 42045                           
 42046                           ; BSR set to: 0
 42047  017A72  C078  F034         	movff	eval_poly@res,i2___flmul@a
 42048  017A76  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 42049  017A7A  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 42050  017A7E  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 42051  017A82  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 42052  017A86  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 42053  017A8A  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 42054  017A8E  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 42055  017A92  EC79  F0A4         	call	i2___flmul	;wreg free
 42056  017A96  C030  F056         	movff	?i2___flmul,i2___fladd@b
 42057  017A9A  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 42058  017A9E  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 42059  017AA2  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 42060  017AA6  0100               	movlb	0	; () banked
 42061  017AA8  0772               	decf	eval_poly@n& (0+255),f,b
 42062  017AAA  A0D8               	btfss	status,0,c
 42063  017AAC  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 42064  017AAE  C072  F074         	movff	eval_poly@n,??_eval_poly
 42065  017AB2  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 42066  017AB6  90D8               	bcf	status,0,c
 42067  017AB8  3774               	rlcf	??_eval_poly& (0+255),f,b
 42068  017ABA  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 42069  017ABC  90D8               	bcf	status,0,c
 42070  017ABE  3774               	rlcf	??_eval_poly& (0+255),f,b
 42071  017AC0  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 42072  017AC2  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 42073  017AC6  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 42074  017ACA  5174               	movf	??_eval_poly& (0+255),w,b
 42075  017ACC  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 42076  017ACE  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 42077  017AD0  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 42078  017AD2  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 42079  017AD6  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 42080  017ADA                     	if	0	;tblptru may be non-zero
 42081  017ADA                     	endif
 42082  017ADA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42083  017ADA  0E00               	movlw	low (__mediumconst shr (0+16))
 42084  017ADC  6EF8               	movwf	tblptru,c
 42085  017ADE                     	endif
 42086  017ADE  0009               	tblrd		*+
 42087  017AE0  CFF5 F05A          	movff	tablat,i2___fladd@a
 42088  017AE4  0009               	tblrd		*+
 42089  017AE6  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 42090  017AEA  0009               	tblrd		*+
 42091  017AEC  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 42092  017AF0  000A               	tblrd		*-
 42093  017AF2  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 42094  017AF6  ECC0  F0A7         	call	i2___fladd	;wreg free
 42095  017AFA  C056  F078         	movff	?i2___fladd,eval_poly@res
 42096  017AFE  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 42097  017B02  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 42098  017B06  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 42099  017B0A                     i2l1862:
 42100  017B0A  0100               	movlb	0	; () banked
 42101  017B0C  5172               	movf	eval_poly@n& (0+255),w,b
 42102  017B0E  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 42103  017B10  A4D8               	btfss	status,2,c
 42104  017B12  D7AF               	goto	i2l1863
 42105                           
 42106                           ; BSR set to: 0
 42107  017B14  C078  F06C         	movff	eval_poly@res,?_eval_poly
 42108  017B18  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 42109  017B1C  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 42110  017B20  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 42111                           
 42112                           ; BSR set to: 0
 42113  017B24  0012               	return		;funcret
 42114  017B26                     __end_of_eval_poly:
 42115                           	opt stack 0
 42116                           tosu	equ	0xFFF
 42117                           tosh	equ	0xFFE
 42118                           tosl	equ	0xFFD
 42119                           pclatu	equ	0xFFB
 42120                           pclath	equ	0xFFA
 42121                           tblptru	equ	0xFF8
 42122                           tblptrh	equ	0xFF7
 42123                           tblptrl	equ	0xFF6
 42124                           tablat	equ	0xFF5
 42125                           prodh	equ	0xFF4
 42126                           prodl	equ	0xFF3
 42127                           intcon	equ	0xFF2
 42128                           indf0	equ	0xFEF
 42129                           postinc0	equ	0xFEE
 42130                           fsr0h	equ	0xFEA
 42131                           fsr0l	equ	0xFE9
 42132                           wreg	equ	0xFE8
 42133                           indf1	equ	0xFE7
 42134                           postdec1	equ	0xFE5
 42135                           plusw1	equ	0xFE3
 42136                           fsr1h	equ	0xFE2
 42137                           fsr1l	equ	0xFE1
 42138                           bsr	equ	0xFE0
 42139                           indf2	equ	0xFDF
 42140                           postinc2	equ	0xFDE
 42141                           postdec2	equ	0xFDD
 42142                           plusw2	equ	0xFDB
 42143                           fsr2h	equ	0xFDA
 42144                           fsr2l	equ	0xFD9
 42145                           status	equ	0xFD8
 42146                           
 42147 ;; *************** function i2___flmul *****************
 42148 ;; Defined at:
 42149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 42150 ;; Parameters:    Size  Location     Type
 42151 ;;  b               4   47[COMRAM] int 
 42152 ;;  a               4   51[COMRAM] int 
 42153 ;; Auto vars:     Size  Location     Type
 42154 ;;  __flmul         4   66[COMRAM] struct .
 42155 ;;  __flmul         4   61[COMRAM] unsigned long 
 42156 ;;  __flmul         2   70[COMRAM] struct .
 42157 ;;  __flmul         1   65[COMRAM] unsigned char 
 42158 ;;  __flmul         1   60[COMRAM] unsigned char 
 42159 ;;  __flmul         1   59[COMRAM] unsigned char 
 42160 ;; Return value:  Size  Location     Type
 42161 ;;                  4   47[COMRAM] unsigned char 
 42162 ;; Registers used:
 42163 ;;		wreg, status,2, status,0, prodl, prodh
 42164 ;; Tracked objects:
 42165 ;;		On entry : 0/0
 42166 ;;		On exit  : 0/0
 42167 ;;		Unchanged: 0/0
 42168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42169 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42170 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42172 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42173 ;;Total ram usage:       25 bytes
 42174 ;; Hardware stack levels used:    1
 42175 ;; This function calls:
 42176 ;;		Nothing
 42177 ;; This function is called by:
 42178 ;;		_peakToRMS
 42179 ;;		_ADCPostProcessingCallback
 42180 ;;		_asin
 42181 ;;		_atan
 42182 ;;		_eval_poly
 42183 ;;		_sin
 42184 ;;		i2_fround
 42185 ;;		i2_scale
 42186 ;;		i2_printf
 42187 ;; This function uses a non-reentrant model
 42188 ;;
 42189                           
 42190                           	psect	text125
 42191  0148F2                     __ptext125:
 42192                           	opt stack 0
 42193  0148F2                     i2___flmul:
 42194                           	opt stack 15
 42195                           
 42196                           ; BSR set to: 0
 42197                           ;incstack = 0
 42198  0148F2  5033               	movf	i2___flmul@b+3,w,c
 42199  0148F4  0B80               	andlw	128
 42200  0148F6  6E3C               	movwf	i2___flmul@sign,c
 42201  0148F8  5033               	movf	i2___flmul@b+3,w,c
 42202  0148FA  2433               	addwf	i2___flmul@b+3,w,c
 42203  0148FC  6E42               	movwf	i2___flmul@bexp,c
 42204  0148FE  BE32               	btfsc	i2___flmul@b+2,7,c
 42205  014900  8042               	bsf	i2___flmul@bexp,0,c
 42206  014902  5042               	movf	i2___flmul@bexp,w,c
 42207  014904  B4D8               	btfsc	status,2,c
 42208  014906  D00D               	goto	i2l2250
 42209  014908  2842               	incf	i2___flmul@bexp,w,c
 42210  01490A  A4D8               	btfss	status,2,c
 42211  01490C  D008               	goto	i2l2251
 42212  01490E  0E00               	movlw	0
 42213  014910  6E30               	movwf	i2___flmul@b,c
 42214  014912  0E00               	movlw	0
 42215  014914  6E31               	movwf	i2___flmul@b+1,c
 42216  014916  0E00               	movlw	0
 42217  014918  6E32               	movwf	i2___flmul@b+2,c
 42218  01491A  0E00               	movlw	0
 42219  01491C  6E33               	movwf	i2___flmul@b+3,c
 42220  01491E                     i2l2251:
 42221  01491E  8E32               	bsf	i2___flmul@b+2,7,c
 42222  014920  D008               	goto	i2l2252
 42223  014922                     i2l2250:
 42224  014922  0E00               	movlw	0
 42225  014924  6E30               	movwf	i2___flmul@b,c
 42226  014926  0E00               	movlw	0
 42227  014928  6E31               	movwf	i2___flmul@b+1,c
 42228  01492A  0E00               	movlw	0
 42229  01492C  6E32               	movwf	i2___flmul@b+2,c
 42230  01492E  0E00               	movlw	0
 42231  014930  6E33               	movwf	i2___flmul@b+3,c
 42232  014932                     i2l2252:
 42233  014932  5037               	movf	i2___flmul@a+3,w,c
 42234  014934  0B80               	andlw	128
 42235  014936  1A3C               	xorwf	i2___flmul@sign,f,c
 42236  014938  5037               	movf	i2___flmul@a+3,w,c
 42237  01493A  2437               	addwf	i2___flmul@a+3,w,c
 42238  01493C  6E3D               	movwf	i2___flmul@aexp,c
 42239  01493E  BE36               	btfsc	i2___flmul@a+2,7,c
 42240  014940  803D               	bsf	i2___flmul@aexp,0,c
 42241  014942  503D               	movf	i2___flmul@aexp,w,c
 42242  014944  B4D8               	btfsc	status,2,c
 42243  014946  D00D               	goto	i2l2254
 42244  014948  283D               	incf	i2___flmul@aexp,w,c
 42245  01494A  A4D8               	btfss	status,2,c
 42246  01494C  D008               	goto	i2l2255
 42247  01494E  0E00               	movlw	0
 42248  014950  6E34               	movwf	i2___flmul@a,c
 42249  014952  0E00               	movlw	0
 42250  014954  6E35               	movwf	i2___flmul@a+1,c
 42251  014956  0E00               	movlw	0
 42252  014958  6E36               	movwf	i2___flmul@a+2,c
 42253  01495A  0E00               	movlw	0
 42254  01495C  6E37               	movwf	i2___flmul@a+3,c
 42255  01495E                     i2l2255:
 42256  01495E  8E36               	bsf	i2___flmul@a+2,7,c
 42257  014960  D008               	goto	i2l2256
 42258  014962                     i2l2254:
 42259  014962  0E00               	movlw	0
 42260  014964  6E34               	movwf	i2___flmul@a,c
 42261  014966  0E00               	movlw	0
 42262  014968  6E35               	movwf	i2___flmul@a+1,c
 42263  01496A  0E00               	movlw	0
 42264  01496C  6E36               	movwf	i2___flmul@a+2,c
 42265  01496E  0E00               	movlw	0
 42266  014970  6E37               	movwf	i2___flmul@a+3,c
 42267  014972                     i2l2256:
 42268  014972  503D               	movf	i2___flmul@aexp,w,c
 42269  014974  B4D8               	btfsc	status,2,c
 42270  014976  D003               	goto	i2u1369_40
 42271  014978  5042               	movf	i2___flmul@bexp,w,c
 42272  01497A  A4D8               	btfss	status,2,c
 42273  01497C  D009               	goto	i2l2257
 42274  01497E                     i2u1369_40:
 42275  01497E  0E00               	movlw	0
 42276  014980  6E30               	movwf	?i2___flmul,c
 42277  014982  0E00               	movlw	0
 42278  014984  6E31               	movwf	?i2___flmul+1,c
 42279  014986  0E00               	movlw	0
 42280  014988  6E32               	movwf	?i2___flmul+2,c
 42281  01498A  0E00               	movlw	0
 42282  01498C  6E33               	movwf	?i2___flmul+3,c
 42283  01498E  0012               	return	
 42284  014990                     i2l2257:
 42285  014990  5036               	movf	i2___flmul@a+2,w,c
 42286  014992  0230               	mulwf	i2___flmul@b,c
 42287  014994  CFF3 F047          	movff	prodl,i2___flmul@temp
 42288  014998  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42289  01499C  5047               	movf	i2___flmul@temp,w,c
 42290  01499E  6E3E               	movwf	i2___flmul@grs,c
 42291  0149A0  6A3F               	clrf	i2___flmul@grs+1,c
 42292  0149A2  6A40               	clrf	i2___flmul@grs+2,c
 42293  0149A4  6A41               	clrf	i2___flmul@grs+3,c
 42294  0149A6  5048               	movf	i2___flmul@temp+1,w,c
 42295  0149A8  6E43               	movwf	i2___flmul@prod,c
 42296  0149AA  6A44               	clrf	i2___flmul@prod+1,c
 42297  0149AC  6A45               	clrf	i2___flmul@prod+2,c
 42298  0149AE  6A46               	clrf	i2___flmul@prod+3,c
 42299  0149B0  5035               	movf	i2___flmul@a+1,w,c
 42300  0149B2  0231               	mulwf	i2___flmul@b+1,c
 42301  0149B4  CFF3 F047          	movff	prodl,i2___flmul@temp
 42302  0149B8  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42303  0149BC  5047               	movf	i2___flmul@temp,w,c
 42304  0149BE  263E               	addwf	i2___flmul@grs,f,c
 42305  0149C0  0E00               	movlw	0
 42306  0149C2  223F               	addwfc	i2___flmul@grs+1,f,c
 42307  0149C4  2240               	addwfc	i2___flmul@grs+2,f,c
 42308  0149C6  2241               	addwfc	i2___flmul@grs+3,f,c
 42309  0149C8  5048               	movf	i2___flmul@temp+1,w,c
 42310  0149CA  2643               	addwf	i2___flmul@prod,f,c
 42311  0149CC  0E00               	movlw	0
 42312  0149CE  2244               	addwfc	i2___flmul@prod+1,f,c
 42313  0149D0  2245               	addwfc	i2___flmul@prod+2,f,c
 42314  0149D2  2246               	addwfc	i2___flmul@prod+3,f,c
 42315  0149D4  5034               	movf	i2___flmul@a,w,c
 42316  0149D6  0232               	mulwf	i2___flmul@b+2,c
 42317  0149D8  CFF3 F047          	movff	prodl,i2___flmul@temp
 42318  0149DC  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42319  0149E0  5047               	movf	i2___flmul@temp,w,c
 42320  0149E2  263E               	addwf	i2___flmul@grs,f,c
 42321  0149E4  0E00               	movlw	0
 42322  0149E6  223F               	addwfc	i2___flmul@grs+1,f,c
 42323  0149E8  2240               	addwfc	i2___flmul@grs+2,f,c
 42324  0149EA  2241               	addwfc	i2___flmul@grs+3,f,c
 42325  0149EC  5048               	movf	i2___flmul@temp+1,w,c
 42326  0149EE  2643               	addwf	i2___flmul@prod,f,c
 42327  0149F0  0E00               	movlw	0
 42328  0149F2  2244               	addwfc	i2___flmul@prod+1,f,c
 42329  0149F4  2245               	addwfc	i2___flmul@prod+2,f,c
 42330  0149F6  2246               	addwfc	i2___flmul@prod+3,f,c
 42331  0149F8  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 42332  0149FC  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 42333  014A00  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 42334  014A04  6A3E               	clrf	i2___flmul@grs,c
 42335  014A06  5034               	movf	i2___flmul@a,w,c
 42336  014A08  0231               	mulwf	i2___flmul@b+1,c
 42337  014A0A  CFF3 F047          	movff	prodl,i2___flmul@temp
 42338  014A0E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42339  014A12  5047               	movf	i2___flmul@temp,w,c
 42340  014A14  263E               	addwf	i2___flmul@grs,f,c
 42341  014A16  5048               	movf	i2___flmul@temp+1,w,c
 42342  014A18  223F               	addwfc	i2___flmul@grs+1,f,c
 42343  014A1A  0E00               	movlw	0
 42344  014A1C  2240               	addwfc	i2___flmul@grs+2,f,c
 42345  014A1E  0E00               	movlw	0
 42346  014A20  2241               	addwfc	i2___flmul@grs+3,f,c
 42347  014A22  5035               	movf	i2___flmul@a+1,w,c
 42348  014A24  0230               	mulwf	i2___flmul@b,c
 42349  014A26  CFF3 F047          	movff	prodl,i2___flmul@temp
 42350  014A2A  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42351  014A2E  5047               	movf	i2___flmul@temp,w,c
 42352  014A30  263E               	addwf	i2___flmul@grs,f,c
 42353  014A32  5048               	movf	i2___flmul@temp+1,w,c
 42354  014A34  223F               	addwfc	i2___flmul@grs+1,f,c
 42355  014A36  0E00               	movlw	0
 42356  014A38  2240               	addwfc	i2___flmul@grs+2,f,c
 42357  014A3A  0E00               	movlw	0
 42358  014A3C  2241               	addwfc	i2___flmul@grs+3,f,c
 42359  014A3E  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 42360  014A42  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 42361  014A46  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 42362  014A4A  6A3E               	clrf	i2___flmul@grs,c
 42363  014A4C  5034               	movf	i2___flmul@a,w,c
 42364  014A4E  0230               	mulwf	i2___flmul@b,c
 42365  014A50  CFF3 F047          	movff	prodl,i2___flmul@temp
 42366  014A54  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42367  014A58  5047               	movf	i2___flmul@temp,w,c
 42368  014A5A  263E               	addwf	i2___flmul@grs,f,c
 42369  014A5C  5048               	movf	i2___flmul@temp+1,w,c
 42370  014A5E  223F               	addwfc	i2___flmul@grs+1,f,c
 42371  014A60  0E00               	movlw	0
 42372  014A62  2240               	addwfc	i2___flmul@grs+2,f,c
 42373  014A64  0E00               	movlw	0
 42374  014A66  2241               	addwfc	i2___flmul@grs+3,f,c
 42375  014A68  5036               	movf	i2___flmul@a+2,w,c
 42376  014A6A  0231               	mulwf	i2___flmul@b+1,c
 42377  014A6C  CFF3 F047          	movff	prodl,i2___flmul@temp
 42378  014A70  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42379  014A74  5047               	movf	i2___flmul@temp,w,c
 42380  014A76  2643               	addwf	i2___flmul@prod,f,c
 42381  014A78  5048               	movf	i2___flmul@temp+1,w,c
 42382  014A7A  2244               	addwfc	i2___flmul@prod+1,f,c
 42383  014A7C  0E00               	movlw	0
 42384  014A7E  2245               	addwfc	i2___flmul@prod+2,f,c
 42385  014A80  0E00               	movlw	0
 42386  014A82  2246               	addwfc	i2___flmul@prod+3,f,c
 42387  014A84  5035               	movf	i2___flmul@a+1,w,c
 42388  014A86  0232               	mulwf	i2___flmul@b+2,c
 42389  014A88  CFF3 F047          	movff	prodl,i2___flmul@temp
 42390  014A8C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42391  014A90  5047               	movf	i2___flmul@temp,w,c
 42392  014A92  2643               	addwf	i2___flmul@prod,f,c
 42393  014A94  5048               	movf	i2___flmul@temp+1,w,c
 42394  014A96  2244               	addwfc	i2___flmul@prod+1,f,c
 42395  014A98  0E00               	movlw	0
 42396  014A9A  2245               	addwfc	i2___flmul@prod+2,f,c
 42397  014A9C  0E00               	movlw	0
 42398  014A9E  2246               	addwfc	i2___flmul@prod+3,f,c
 42399  014AA0  5036               	movf	i2___flmul@a+2,w,c
 42400  014AA2  0232               	mulwf	i2___flmul@b+2,c
 42401  014AA4  CFF3 F047          	movff	prodl,i2___flmul@temp
 42402  014AA8  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 42403  014AAC  5047               	movf	i2___flmul@temp,w,c
 42404  014AAE  6E38               	movwf	??i2___flmul& (0+255),c
 42405  014AB0  5048               	movf	i2___flmul@temp+1,w,c
 42406  014AB2  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 42407  014AB4  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 42408  014AB6  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 42409  014AB8  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 42410  014ABC  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 42411  014AC0  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 42412  014AC4  6A38               	clrf	??i2___flmul,c
 42413  014AC6  5038               	movf	??i2___flmul,w,c
 42414  014AC8  2643               	addwf	i2___flmul@prod,f,c
 42415  014ACA  5039               	movf	??i2___flmul+1,w,c
 42416  014ACC  2244               	addwfc	i2___flmul@prod+1,f,c
 42417  014ACE  503A               	movf	??i2___flmul+2,w,c
 42418  014AD0  2245               	addwfc	i2___flmul@prod+2,f,c
 42419  014AD2  503B               	movf	??i2___flmul+3,w,c
 42420  014AD4  2246               	addwfc	i2___flmul@prod+3,f,c
 42421  014AD6  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 42422  014ADA  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 42423  014ADE  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 42424  014AE2  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 42425  014AE6  0E19               	movlw	25
 42426  014AE8  D005               	goto	i2u1370_40
 42427  014AEA                     i2u1370_45:
 42428  014AEA  90D8               	bcf	status,0,c
 42429  014AEC  323B               	rrcf	??i2___flmul+3,f,c
 42430  014AEE  323A               	rrcf	??i2___flmul+2,f,c
 42431  014AF0  3239               	rrcf	??i2___flmul+1,f,c
 42432  014AF2  3238               	rrcf	??i2___flmul,f,c
 42433  014AF4                     i2u1370_40:
 42434  014AF4  2EE8               	decfsz	wreg,f,c
 42435  014AF6  D7F9               	goto	i2u1370_45
 42436  014AF8  5038               	movf	??i2___flmul,w,c
 42437  014AFA  2643               	addwf	i2___flmul@prod,f,c
 42438  014AFC  5039               	movf	??i2___flmul+1,w,c
 42439  014AFE  2244               	addwfc	i2___flmul@prod+1,f,c
 42440  014B00  503A               	movf	??i2___flmul+2,w,c
 42441  014B02  2245               	addwfc	i2___flmul@prod+2,f,c
 42442  014B04  503B               	movf	??i2___flmul+3,w,c
 42443  014B06  2246               	addwfc	i2___flmul@prod+3,f,c
 42444  014B08  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 42445  014B0C  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 42446  014B10  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 42447  014B14  6A3E               	clrf	i2___flmul@grs,c
 42448  014B16  503D               	movf	i2___flmul@aexp,w,c
 42449  014B18  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 42450  014B1C  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 42451  014B1E  2638               	addwf	??i2___flmul,f,c
 42452  014B20  0E00               	movlw	0
 42453  014B22  2239               	addwfc	??i2___flmul+1,f,c
 42454  014B24  0E82               	movlw	130
 42455  014B26  2438               	addwf	??i2___flmul,w,c
 42456  014B28  6E47               	movwf	i2___flmul@temp,c
 42457  014B2A  0EFF               	movlw	255
 42458  014B2C  2039               	addwfc	??i2___flmul+1,w,c
 42459  014B2E  6E48               	movwf	i2___flmul@temp+1,c
 42460  014B30  D00F               	goto	i2l2261
 42461  014B32  90D8               	bcf	status,0,c
 42462  014B34  3643               	rlcf	i2___flmul@prod,f,c
 42463  014B36  3644               	rlcf	i2___flmul@prod+1,f,c
 42464  014B38  3645               	rlcf	i2___flmul@prod+2,f,c
 42465  014B3A  3646               	rlcf	i2___flmul@prod+3,f,c
 42466  014B3C  BE41               	btfsc	i2___flmul@grs+3,7,c
 42467  014B3E  8043               	bsf	i2___flmul@prod,0,c
 42468  014B40  90D8               	bcf	status,0,c
 42469  014B42  363E               	rlcf	i2___flmul@grs,f,c
 42470  014B44  363F               	rlcf	i2___flmul@grs+1,f,c
 42471  014B46  3640               	rlcf	i2___flmul@grs+2,f,c
 42472  014B48  3641               	rlcf	i2___flmul@grs+3,f,c
 42473  014B4A  0647               	decf	i2___flmul@temp,f,c
 42474  014B4C  A0D8               	btfss	status,0,c
 42475  014B4E  0648               	decf	i2___flmul@temp+1,f,c
 42476  014B50                     i2l2261:
 42477  014B50  AE45               	btfss	i2___flmul@prod+2,7,c
 42478  014B52  D7EF               	goto	i2l2262
 42479  014B54  0E00               	movlw	0
 42480  014B56  6E3D               	movwf	i2___flmul@aexp,c
 42481  014B58  AE41               	btfss	i2___flmul@grs+3,7,c
 42482  014B5A  D016               	goto	i2l2268
 42483  014B5C  0EFF               	movlw	255
 42484  014B5E  143E               	andwf	i2___flmul@grs,w,c
 42485  014B60  6E38               	movwf	??i2___flmul& (0+255),c
 42486  014B62  0EFF               	movlw	255
 42487  014B64  143F               	andwf	i2___flmul@grs+1,w,c
 42488  014B66  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 42489  014B68  0EFF               	movlw	255
 42490  014B6A  1440               	andwf	i2___flmul@grs+2,w,c
 42491  014B6C  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 42492  014B6E  0E7F               	movlw	127
 42493  014B70  1441               	andwf	i2___flmul@grs+3,w,c
 42494  014B72  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 42495  014B74  5038               	movf	??i2___flmul,w,c
 42496  014B76  1039               	iorwf	??i2___flmul+1,w,c
 42497  014B78  103A               	iorwf	??i2___flmul+2,w,c
 42498  014B7A  103B               	iorwf	??i2___flmul+3,w,c
 42499  014B7C  A4D8               	btfss	status,2,c
 42500  014B7E  D002               	goto	i2u1375_40
 42501  014B80  A043               	btfss	i2___flmul@prod,0,c
 42502  014B82  D002               	goto	i2l2268
 42503  014B84                     i2u1375_40:
 42504  014B84  0E01               	movlw	1
 42505  014B86  6E3D               	movwf	i2___flmul@aexp,c
 42506  014B88                     i2l2268:
 42507  014B88  503D               	movf	i2___flmul@aexp,w,c
 42508  014B8A  B4D8               	btfsc	status,2,c
 42509  014B8C  D01F               	goto	i2l2270
 42510  014B8E  0E01               	movlw	1
 42511  014B90  2643               	addwf	i2___flmul@prod,f,c
 42512  014B92  0E00               	movlw	0
 42513  014B94  2244               	addwfc	i2___flmul@prod+1,f,c
 42514  014B96  2245               	addwfc	i2___flmul@prod+2,f,c
 42515  014B98  2246               	addwfc	i2___flmul@prod+3,f,c
 42516  014B9A  A046               	btfss	i2___flmul@prod+3,0,c
 42517  014B9C  D017               	goto	i2l2270
 42518  014B9E  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 42519  014BA2  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 42520  014BA6  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 42521  014BAA  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 42522  014BAE  343B               	rlcf	??i2___flmul+3,w,c
 42523  014BB0  323B               	rrcf	??i2___flmul+3,f,c
 42524  014BB2  323A               	rrcf	??i2___flmul+2,f,c
 42525  014BB4  3239               	rrcf	??i2___flmul+1,f,c
 42526  014BB6  3238               	rrcf	??i2___flmul,f,c
 42527  014BB8  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 42528  014BBC  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 42529  014BC0  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 42530  014BC4  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 42531  014BC8  4A47               	infsnz	i2___flmul@temp,f,c
 42532  014BCA  2A48               	incf	i2___flmul@temp+1,f,c
 42533  014BCC                     i2l2270:
 42534  014BCC  BE48               	btfsc	i2___flmul@temp+1,7,c
 42535  014BCE  D00D               	goto	i2l2271
 42536  014BD0  5048               	movf	i2___flmul@temp+1,w,c
 42537  014BD2  E103               	bnz	i2u1378_40
 42538  014BD4  2847               	incf	i2___flmul@temp,w,c
 42539  014BD6  A0D8               	btfss	status,0,c
 42540  014BD8  D008               	goto	i2l2271
 42541  014BDA                     i2u1378_40:
 42542  014BDA  0E00               	movlw	0
 42543  014BDC  6E43               	movwf	i2___flmul@prod,c
 42544  014BDE  0E00               	movlw	0
 42545  014BE0  6E44               	movwf	i2___flmul@prod+1,c
 42546  014BE2  0E80               	movlw	128
 42547  014BE4  6E45               	movwf	i2___flmul@prod+2,c
 42548  014BE6  0E7F               	movlw	127
 42549  014BE8  D020               	goto	L21
 42550  014BEA                     i2l2271:
 42551  014BEA  BE48               	btfsc	i2___flmul@temp+1,7,c
 42552  014BEC  D005               	goto	i2u1379_40
 42553  014BEE  5048               	movf	i2___flmul@temp+1,w,c
 42554  014BF0  E10E               	bnz	i2l2273
 42555  014BF2  0447               	decf	i2___flmul@temp,w,c
 42556  014BF4  B0D8               	btfsc	status,0,c
 42557  014BF6  D00B               	goto	i2l2273
 42558  014BF8                     i2u1379_40:
 42559  014BF8  0E00               	movlw	0
 42560  014BFA  6E43               	movwf	i2___flmul@prod,c
 42561  014BFC  0E00               	movlw	0
 42562  014BFE  6E44               	movwf	i2___flmul@prod+1,c
 42563  014C00  0E00               	movlw	0
 42564  014C02  6E45               	movwf	i2___flmul@prod+2,c
 42565  014C04  0E00               	movlw	0
 42566  014C06  6E46               	movwf	i2___flmul@prod+3,c
 42567  014C08  0E00               	movlw	0
 42568  014C0A  6E3C               	movwf	i2___flmul@sign,c
 42569  014C0C  D00F               	goto	i2l2274
 42570  014C0E                     i2l2273:
 42571  014C0E  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 42572  014C12  0EFF               	movlw	255
 42573  014C14  1643               	andwf	i2___flmul@prod,f,c
 42574  014C16  0EFF               	movlw	255
 42575  014C18  1644               	andwf	i2___flmul@prod+1,f,c
 42576  014C1A  0E7F               	movlw	127
 42577  014C1C  1645               	andwf	i2___flmul@prod+2,f,c
 42578  014C1E  0E00               	movlw	0
 42579  014C20  1646               	andwf	i2___flmul@prod+3,f,c
 42580  014C22  B042               	btfsc	i2___flmul@bexp,0,c
 42581  014C24  8E45               	bsf	i2___flmul@prod+2,7,c
 42582  014C26  90D8               	bcf	status,0,c
 42583  014C28  3042               	rrcf	i2___flmul@bexp,w,c
 42584  014C2A                     L21:
 42585  014C2A  6E46               	movwf	i2___flmul@prod+3,c
 42586  014C2C                     i2l2274:
 42587  014C2C  503C               	movf	i2___flmul@sign,w,c
 42588  014C2E  1246               	iorwf	i2___flmul@prod+3,f,c
 42589  014C30  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 42590  014C34  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 42591  014C38  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 42592  014C3C  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 42593  014C40  0012               	return	
 42594  014C42                     __end_ofi2___flmul:
 42595                           	opt stack 0
 42596                           tosu	equ	0xFFF
 42597                           tosh	equ	0xFFE
 42598                           tosl	equ	0xFFD
 42599                           pclatu	equ	0xFFB
 42600                           pclath	equ	0xFFA
 42601                           tblptru	equ	0xFF8
 42602                           tblptrh	equ	0xFF7
 42603                           tblptrl	equ	0xFF6
 42604                           tablat	equ	0xFF5
 42605                           prodh	equ	0xFF4
 42606                           prodl	equ	0xFF3
 42607                           intcon	equ	0xFF2
 42608                           indf0	equ	0xFEF
 42609                           postinc0	equ	0xFEE
 42610                           fsr0h	equ	0xFEA
 42611                           fsr0l	equ	0xFE9
 42612                           wreg	equ	0xFE8
 42613                           indf1	equ	0xFE7
 42614                           postdec1	equ	0xFE5
 42615                           plusw1	equ	0xFE3
 42616                           fsr1h	equ	0xFE2
 42617                           fsr1l	equ	0xFE1
 42618                           bsr	equ	0xFE0
 42619                           indf2	equ	0xFDF
 42620                           postinc2	equ	0xFDE
 42621                           postdec2	equ	0xFDD
 42622                           plusw2	equ	0xFDB
 42623                           fsr2h	equ	0xFDA
 42624                           fsr2l	equ	0xFD9
 42625                           status	equ	0xFD8
 42626                           
 42627 ;; *************** function i2___fladd *****************
 42628 ;; Defined at:
 42629 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 42630 ;; Parameters:    Size  Location     Type
 42631 ;;  b               4   85[COMRAM] unsigned char 
 42632 ;;  a               4   89[COMRAM] unsigned char 
 42633 ;; Auto vars:     Size  Location     Type
 42634 ;;  __fladd         1   11[BANK0 ] unsigned char 
 42635 ;;  __fladd         1   10[BANK0 ] unsigned char 
 42636 ;;  __fladd         1    9[BANK0 ] unsigned char 
 42637 ;;  __fladd         1    8[BANK0 ] unsigned char 
 42638 ;; Return value:  Size  Location     Type
 42639 ;;                  4   85[COMRAM] unsigned char 
 42640 ;; Registers used:
 42641 ;;		wreg, status,2, status,0
 42642 ;; Tracked objects:
 42643 ;;		On entry : 0/0
 42644 ;;		On exit  : 0/0
 42645 ;;		Unchanged: 0/0
 42646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42647 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42648 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42649 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42650 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42651 ;;Total ram usage:       20 bytes
 42652 ;; Hardware stack levels used:    1
 42653 ;; This function calls:
 42654 ;;		Nothing
 42655 ;; This function is called by:
 42656 ;;		_peakToRMS
 42657 ;;		_ADCPostProcessingCallback
 42658 ;;		_acos
 42659 ;;		_asin
 42660 ;;		_atan
 42661 ;;		_eval_poly
 42662 ;;		_sin
 42663 ;;		_floor
 42664 ;;		i2_printf
 42665 ;;		i2___flsub
 42666 ;; This function uses a non-reentrant model
 42667 ;;
 42668                           
 42669                           	psect	text126
 42670  014F80                     __ptext126:
 42671                           	opt stack 0
 42672  014F80                     i2___fladd:
 42673                           	opt stack 15
 42674                           
 42675                           ;incstack = 0
 42676  014F80  5059               	movf	i2___fladd@b+3,w,c
 42677  014F82  0B80               	andlw	128
 42678  014F84  0100               	movlb	0	; () banked
 42679  014F86  6F68               	movwf	i2___fladd@signs& (0+255),b
 42680  014F88  5059               	movf	i2___fladd@b+3,w,c
 42681  014F8A  2459               	addwf	i2___fladd@b+3,w,c
 42682  014F8C  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 42683                           
 42684                           ; BSR set to: 0
 42685  014F8E  BE58               	btfsc	i2___fladd@b+2,7,c
 42686                           
 42687                           ; BSR set to: 0
 42688  014F90  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 42689                           
 42690                           ; BSR set to: 0
 42691                           
 42692                           ; BSR set to: 0
 42693  014F92  516A               	movf	i2___fladd@bexp& (0+255),w,b
 42694  014F94  B4D8               	btfsc	status,2,c
 42695  014F96  D00D               	goto	i2l2159
 42696                           
 42697                           ; BSR set to: 0
 42698  014F98  296A               	incf	i2___fladd@bexp& (0+255),w,b
 42699  014F9A  A4D8               	btfss	status,2,c
 42700  014F9C  D008               	goto	i2l2160
 42701                           
 42702                           ; BSR set to: 0
 42703  014F9E  0E00               	movlw	0
 42704  014FA0  6E56               	movwf	i2___fladd@b,c
 42705  014FA2  0E00               	movlw	0
 42706  014FA4  6E57               	movwf	i2___fladd@b+1,c
 42707  014FA6  0E00               	movlw	0
 42708  014FA8  6E58               	movwf	i2___fladd@b+2,c
 42709  014FAA  0E00               	movlw	0
 42710  014FAC  6E59               	movwf	i2___fladd@b+3,c
 42711  014FAE                     i2l2160:
 42712                           
 42713                           ; BSR set to: 0
 42714                           
 42715                           ; BSR set to: 0
 42716  014FAE  8E58               	bsf	i2___fladd@b+2,7,c
 42717  014FB0  D006               	goto	L22
 42718  014FB2                     i2l2159:
 42719                           
 42720                           ; BSR set to: 0
 42721                           
 42722                           ; BSR set to: 0
 42723  014FB2  0E00               	movlw	0
 42724  014FB4  6E56               	movwf	i2___fladd@b,c
 42725  014FB6  0E00               	movlw	0
 42726  014FB8  6E57               	movwf	i2___fladd@b+1,c
 42727  014FBA  0E00               	movlw	0
 42728  014FBC  6E58               	movwf	i2___fladd@b+2,c
 42729  014FBE                     L22:
 42730  014FBE  0E00               	movlw	0
 42731  014FC0  6E59               	movwf	i2___fladd@b+3,c
 42732                           
 42733                           ; BSR set to: 0
 42734                           
 42735                           ; BSR set to: 0
 42736  014FC2  505D               	movf	i2___fladd@a+3,w,c
 42737  014FC4  0B80               	andlw	128
 42738  014FC6  6F69               	movwf	i2___fladd@aexp& (0+255),b
 42739                           
 42740                           ; BSR set to: 0
 42741  014FC8  5168               	movf	i2___fladd@signs& (0+255),w,b
 42742  014FCA  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 42743  014FCC  A4D8               	btfss	status,2,c
 42744                           
 42745                           ; BSR set to: 0
 42746  014FCE  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 42747                           
 42748                           ; BSR set to: 0
 42749                           
 42750                           ; BSR set to: 0
 42751  014FD0  505D               	movf	i2___fladd@a+3,w,c
 42752  014FD2  245D               	addwf	i2___fladd@a+3,w,c
 42753  014FD4  6F69               	movwf	i2___fladd@aexp& (0+255),b
 42754                           
 42755                           ; BSR set to: 0
 42756  014FD6  BE5C               	btfsc	i2___fladd@a+2,7,c
 42757                           
 42758                           ; BSR set to: 0
 42759  014FD8  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 42760                           
 42761                           ; BSR set to: 0
 42762                           
 42763                           ; BSR set to: 0
 42764  014FDA  5169               	movf	i2___fladd@aexp& (0+255),w,b
 42765  014FDC  B4D8               	btfsc	status,2,c
 42766  014FDE  D00D               	goto	i2l2164
 42767                           
 42768                           ; BSR set to: 0
 42769  014FE0  2969               	incf	i2___fladd@aexp& (0+255),w,b
 42770  014FE2  A4D8               	btfss	status,2,c
 42771  014FE4  D008               	goto	i2l2165
 42772                           
 42773                           ; BSR set to: 0
 42774  014FE6  0E00               	movlw	0
 42775  014FE8  6E5A               	movwf	i2___fladd@a,c
 42776  014FEA  0E00               	movlw	0
 42777  014FEC  6E5B               	movwf	i2___fladd@a+1,c
 42778  014FEE  0E00               	movlw	0
 42779  014FF0  6E5C               	movwf	i2___fladd@a+2,c
 42780  014FF2  0E00               	movlw	0
 42781  014FF4  6E5D               	movwf	i2___fladd@a+3,c
 42782  014FF6                     i2l2165:
 42783                           
 42784                           ; BSR set to: 0
 42785                           
 42786                           ; BSR set to: 0
 42787  014FF6  8E5C               	bsf	i2___fladd@a+2,7,c
 42788  014FF8  D006               	goto	L23
 42789  014FFA                     i2l2164:
 42790                           
 42791                           ; BSR set to: 0
 42792                           
 42793                           ; BSR set to: 0
 42794  014FFA  0E00               	movlw	0
 42795  014FFC  6E5A               	movwf	i2___fladd@a,c
 42796  014FFE  0E00               	movlw	0
 42797  015000  6E5B               	movwf	i2___fladd@a+1,c
 42798  015002  0E00               	movlw	0
 42799  015004  6E5C               	movwf	i2___fladd@a+2,c
 42800  015006                     L23:
 42801  015006  0E00               	movlw	0
 42802  015008  6E5D               	movwf	i2___fladd@a+3,c
 42803                           
 42804                           ; BSR set to: 0
 42805                           
 42806                           ; BSR set to: 0
 42807  01500A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 42808  01500C  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 42809  01500E  B0D8               	btfsc	status,0,c
 42810  015010  D022               	goto	i2l2167
 42811                           
 42812                           ; BSR set to: 0
 42813  015012  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 42814  015014  D002               	goto	i2l2168
 42815                           
 42816                           ; BSR set to: 0
 42817  015016  0E80               	movlw	128
 42818  015018  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 42819  01501A                     i2l2168:
 42820                           
 42821                           ; BSR set to: 0
 42822                           
 42823                           ; BSR set to: 0
 42824  01501A  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 42825                           
 42826                           ; BSR set to: 0
 42827  01501E  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 42828                           
 42829                           ; BSR set to: 0
 42830  015022  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 42831                           
 42832                           ; BSR set to: 0
 42833  015026  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 42834                           
 42835                           ; BSR set to: 0
 42836  01502A  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 42837                           
 42838                           ; BSR set to: 0
 42839  01502E  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 42840                           
 42841                           ; BSR set to: 0
 42842  015032  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 42843                           
 42844                           ; BSR set to: 0
 42845  015036  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 42846                           
 42847                           ; BSR set to: 0
 42848  01503A  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 42849                           
 42850                           ; BSR set to: 0
 42851  01503E  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 42852                           
 42853                           ; BSR set to: 0
 42854  015042  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 42855                           
 42856                           ; BSR set to: 0
 42857  015046  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 42858                           
 42859                           ; BSR set to: 0
 42860  01504A  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 42861                           
 42862                           ; BSR set to: 0
 42863  01504E  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 42864                           
 42865                           ; BSR set to: 0
 42866  015052  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 42867  015056                     i2l2167:
 42868                           
 42869                           ; BSR set to: 0
 42870                           
 42871                           ; BSR set to: 0
 42872  015056  0E00               	movlw	0
 42873  015058  6F6B               	movwf	i2___fladd@grs& (0+255),b
 42874                           
 42875                           ; BSR set to: 0
 42876  01505A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 42877  01505C  6F60               	movwf	??i2___fladd& (0+255),b
 42878  01505E  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 42879  015060  1F60               	comf	??i2___fladd& (0+255),f,b
 42880  015062  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 42881  015064  4B60               	infsnz	??i2___fladd& (0+255),f,b
 42882  015066  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 42883  015068  5169               	movf	i2___fladd@aexp& (0+255),w,b
 42884  01506A  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 42885  01506C  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 42886  01506E  5160               	movf	??i2___fladd& (0+255),w,b
 42887  015070  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 42888  015072  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 42889  015074  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 42890  015076  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 42891  015078  D02C               	goto	i2l2171
 42892  01507A  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 42893  01507C  E104               	bnz	i2u1332_40
 42894  01507E  0E1A               	movlw	26
 42895  015080  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 42896  015082  A0D8               	btfss	status,0,c
 42897  015084  D026               	goto	i2l2171
 42898  015086                     i2u1332_40:
 42899                           
 42900                           ; BSR set to: 0
 42901  015086  5056               	movf	i2___fladd@b,w,c
 42902  015088  1057               	iorwf	i2___fladd@b+1,w,c
 42903  01508A  1058               	iorwf	i2___fladd@b+2,w,c
 42904  01508C  1059               	iorwf	i2___fladd@b+3,w,c
 42905  01508E  B4D8               	btfsc	status,2,c
 42906  015090  D002               	goto	i2u1333_40
 42907  015092  0E01               	movlw	1
 42908  015094  D001               	goto	i2u1334_40
 42909  015096                     i2u1333_40:
 42910  015096  0E00               	movlw	0
 42911  015098                     i2u1334_40:
 42912  015098  6F6B               	movwf	i2___fladd@grs& (0+255),b
 42913                           
 42914                           ; BSR set to: 0
 42915  01509A  0E00               	movlw	0
 42916  01509C  6E56               	movwf	i2___fladd@b,c
 42917  01509E  0E00               	movlw	0
 42918  0150A0  6E57               	movwf	i2___fladd@b+1,c
 42919  0150A2  0E00               	movlw	0
 42920  0150A4  6E58               	movwf	i2___fladd@b+2,c
 42921  0150A6  0E00               	movlw	0
 42922  0150A8  6E59               	movwf	i2___fladd@b+3,c
 42923                           
 42924                           ; BSR set to: 0
 42925  0150AA  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 42926  0150AE  D015               	goto	i2u1337_40
 42927  0150B0                     i2l2172:
 42928                           
 42929                           ; BSR set to: 0
 42930  0150B0  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 42931  0150B2  D005               	goto	i2l2173
 42932                           
 42933                           ; BSR set to: 0
 42934  0150B4  90D8               	bcf	status,0,c
 42935  0150B6  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 42936  0150B8  0901               	iorlw	1
 42937  0150BA  6F6B               	movwf	i2___fladd@grs& (0+255),b
 42938  0150BC  D002               	goto	i2l2174
 42939  0150BE                     i2l2173:
 42940                           
 42941                           ; BSR set to: 0
 42942                           
 42943                           ; BSR set to: 0
 42944  0150BE  90D8               	bcf	status,0,c
 42945  0150C0  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 42946  0150C2                     i2l2174:
 42947                           
 42948                           ; BSR set to: 0
 42949                           
 42950                           ; BSR set to: 0
 42951  0150C2  B056               	btfsc	i2___fladd@b,0,c
 42952                           
 42953                           ; BSR set to: 0
 42954  0150C4  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 42955                           
 42956                           ; BSR set to: 0
 42957                           
 42958                           ; BSR set to: 0
 42959  0150C6  3459               	rlcf	i2___fladd@b+3,w,c
 42960  0150C8  3259               	rrcf	i2___fladd@b+3,f,c
 42961  0150CA  3258               	rrcf	i2___fladd@b+2,f,c
 42962  0150CC  3257               	rrcf	i2___fladd@b+1,f,c
 42963  0150CE  3256               	rrcf	i2___fladd@b,f,c
 42964                           
 42965                           ; BSR set to: 0
 42966  0150D0  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 42967  0150D2                     i2l2171:
 42968                           
 42969                           ; BSR set to: 0
 42970  0150D2  5169               	movf	i2___fladd@aexp& (0+255),w,b
 42971  0150D4  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 42972  0150D6  A0D8               	btfss	status,0,c
 42973  0150D8  D7EB               	goto	i2l2172
 42974  0150DA                     i2u1337_40:
 42975                           
 42976                           ; BSR set to: 0
 42977                           
 42978                           ; BSR set to: 0
 42979  0150DA  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 42980  0150DC  D029               	goto	i2l2177
 42981                           
 42982                           ; BSR set to: 0
 42983  0150DE  516A               	movf	i2___fladd@bexp& (0+255),w,b
 42984  0150E0  A4D8               	btfss	status,2,c
 42985  0150E2  D009               	goto	i2l2178
 42986                           
 42987                           ; BSR set to: 0
 42988  0150E4  0E00               	movlw	0
 42989  0150E6  6E56               	movwf	?i2___fladd,c
 42990  0150E8  0E00               	movlw	0
 42991  0150EA  6E57               	movwf	?i2___fladd+1,c
 42992  0150EC  0E00               	movlw	0
 42993  0150EE  6E58               	movwf	?i2___fladd+2,c
 42994  0150F0  0E00               	movlw	0
 42995  0150F2  6E59               	movwf	?i2___fladd+3,c
 42996                           
 42997                           ; BSR set to: 0
 42998  0150F4  0012               	return	
 42999  0150F6                     i2l2178:
 43000                           
 43001                           ; BSR set to: 0
 43002                           
 43003                           ; BSR set to: 0
 43004  0150F6  505A               	movf	i2___fladd@a,w,c
 43005  0150F8  2656               	addwf	i2___fladd@b,f,c
 43006  0150FA  505B               	movf	i2___fladd@a+1,w,c
 43007  0150FC  2257               	addwfc	i2___fladd@b+1,f,c
 43008  0150FE  505C               	movf	i2___fladd@a+2,w,c
 43009  015100  2258               	addwfc	i2___fladd@b+2,f,c
 43010  015102  505D               	movf	i2___fladd@a+3,w,c
 43011  015104  2259               	addwfc	i2___fladd@b+3,f,c
 43012                           
 43013                           ; BSR set to: 0
 43014  015106  A059               	btfss	i2___fladd@b+3,0,c
 43015  015108  D083               	goto	i2u1350_40
 43016                           
 43017                           ; BSR set to: 0
 43018  01510A  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 43019  01510C  D006               	goto	i2l2181
 43020                           
 43021                           ; BSR set to: 0
 43022  01510E  90D8               	bcf	status,0,c
 43023  015110  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 43024  015112  516B               	movf	i2___fladd@grs& (0+255),w,b
 43025  015114  0901               	iorlw	1
 43026  015116  6F6B               	movwf	i2___fladd@grs& (0+255),b
 43027  015118  D002               	goto	i2l2182
 43028  01511A                     i2l2181:
 43029                           
 43030                           ; BSR set to: 0
 43031                           
 43032                           ; BSR set to: 0
 43033  01511A  90D8               	bcf	status,0,c
 43034  01511C  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 43035  01511E                     i2l2182:
 43036                           
 43037                           ; BSR set to: 0
 43038                           
 43039                           ; BSR set to: 0
 43040  01511E  B056               	btfsc	i2___fladd@b,0,c
 43041                           
 43042                           ; BSR set to: 0
 43043  015120  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 43044                           
 43045                           ; BSR set to: 0
 43046                           
 43047                           ; BSR set to: 0
 43048  015122  3459               	rlcf	i2___fladd@b+3,w,c
 43049  015124  3259               	rrcf	i2___fladd@b+3,f,c
 43050  015126  3258               	rrcf	i2___fladd@b+2,f,c
 43051  015128  3257               	rrcf	i2___fladd@b+1,f,c
 43052  01512A  3256               	rrcf	i2___fladd@b,f,c
 43053                           
 43054                           ; BSR set to: 0
 43055  01512C  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 43056                           
 43057                           ; BSR set to: 0
 43058  01512E  D070               	goto	i2u1350_40
 43059  015130                     i2l2177:
 43060                           
 43061                           ; BSR set to: 0
 43062                           
 43063                           ; BSR set to: 0
 43064  015130  505A               	movf	i2___fladd@a,w,c
 43065  015132  5C56               	subwf	i2___fladd@b,w,c
 43066  015134  505B               	movf	i2___fladd@a+1,w,c
 43067  015136  5857               	subwfb	i2___fladd@b+1,w,c
 43068  015138  505C               	movf	i2___fladd@a+2,w,c
 43069  01513A  5858               	subwfb	i2___fladd@b+2,w,c
 43070  01513C  5059               	movf	i2___fladd@b+3,w,c
 43071  01513E  0A80               	xorlw	128
 43072  015140  6F60               	movwf	??i2___fladd& (0+255),b
 43073  015142  505D               	movf	i2___fladd@a+3,w,c
 43074  015144  0A80               	xorlw	128
 43075  015146  5960               	subwfb	??i2___fladd& (0+255),w,b
 43076  015148  B0D8               	btfsc	status,0,c
 43077  01514A  D036               	goto	i2l2185
 43078                           
 43079                           ; BSR set to: 0
 43080  01514C  C056  F060         	movff	i2___fladd@b,??i2___fladd
 43081  015150  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 43082  015154  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 43083  015158  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 43084  01515C  1F60               	comf	??i2___fladd& (0+255),f,b
 43085  01515E  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 43086  015160  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 43087  015162  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 43088  015164  2B60               	incf	??i2___fladd& (0+255),f,b
 43089  015166  0E00               	movlw	0
 43090  015168  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 43091  01516A  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 43092  01516C  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 43093  01516E  505A               	movf	i2___fladd@a,w,c
 43094  015170  2560               	addwf	??i2___fladd& (0+255),w,b
 43095  015172  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 43096  015174  505B               	movf	i2___fladd@a+1,w,c
 43097  015176  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 43098  015178  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 43099  01517A  505C               	movf	i2___fladd@a+2,w,c
 43100  01517C  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 43101  01517E  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 43102  015180  505D               	movf	i2___fladd@a+3,w,c
 43103  015182  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 43104  015184  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 43105  015186  0EFF               	movlw	255
 43106  015188  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 43107  01518A  6E56               	movwf	i2___fladd@b,c
 43108  01518C  0EFF               	movlw	255
 43109  01518E  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 43110  015190  6E57               	movwf	i2___fladd@b+1,c
 43111  015192  0EFF               	movlw	255
 43112  015194  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 43113  015196  6E58               	movwf	i2___fladd@b+2,c
 43114  015198  0EFF               	movlw	255
 43115  01519A  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 43116  01519C  6E59               	movwf	i2___fladd@b+3,c
 43117  01519E  0E80               	movlw	128
 43118  0151A0  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 43119                           
 43120                           ; BSR set to: 0
 43121  0151A2  6D6B               	negf	i2___fladd@grs& (0+255),b
 43122                           
 43123                           ; BSR set to: 0
 43124  0151A4  516B               	movf	i2___fladd@grs& (0+255),w,b
 43125  0151A6  A4D8               	btfss	status,2,c
 43126  0151A8  D00F               	goto	i2l2187
 43127                           
 43128                           ; BSR set to: 0
 43129  0151AA  0E01               	movlw	1
 43130  0151AC  2656               	addwf	i2___fladd@b,f,c
 43131  0151AE  0E00               	movlw	0
 43132  0151B0  2257               	addwfc	i2___fladd@b+1,f,c
 43133  0151B2  2258               	addwfc	i2___fladd@b+2,f,c
 43134  0151B4  2259               	addwfc	i2___fladd@b+3,f,c
 43135                           
 43136                           ; BSR set to: 0
 43137  0151B6  D008               	goto	i2l2187
 43138  0151B8                     i2l2185:
 43139                           
 43140                           ; BSR set to: 0
 43141                           
 43142                           ; BSR set to: 0
 43143  0151B8  505A               	movf	i2___fladd@a,w,c
 43144  0151BA  5E56               	subwf	i2___fladd@b,f,c
 43145  0151BC  505B               	movf	i2___fladd@a+1,w,c
 43146  0151BE  5A57               	subwfb	i2___fladd@b+1,f,c
 43147  0151C0  505C               	movf	i2___fladd@a+2,w,c
 43148  0151C2  5A58               	subwfb	i2___fladd@b+2,f,c
 43149  0151C4  505D               	movf	i2___fladd@a+3,w,c
 43150  0151C6  5A59               	subwfb	i2___fladd@b+3,f,c
 43151  0151C8                     i2l2187:
 43152                           
 43153                           ; BSR set to: 0
 43154  0151C8  5056               	movf	i2___fladd@b,w,c
 43155  0151CA  1057               	iorwf	i2___fladd@b+1,w,c
 43156  0151CC  1058               	iorwf	i2___fladd@b+2,w,c
 43157  0151CE  1059               	iorwf	i2___fladd@b+3,w,c
 43158  0151D0  A4D8               	btfss	status,2,c
 43159  0151D2  D01C               	goto	i2l2194
 43160                           
 43161                           ; BSR set to: 0
 43162  0151D4  516B               	movf	i2___fladd@grs& (0+255),w,b
 43163  0151D6  A4D8               	btfss	status,2,c
 43164  0151D8  D019               	goto	i2l2194
 43165                           
 43166                           ; BSR set to: 0
 43167  0151DA  0E00               	movlw	0
 43168  0151DC  6E56               	movwf	?i2___fladd,c
 43169  0151DE  0E00               	movlw	0
 43170  0151E0  6E57               	movwf	?i2___fladd+1,c
 43171  0151E2  0E00               	movlw	0
 43172  0151E4  6E58               	movwf	?i2___fladd+2,c
 43173  0151E6  0E00               	movlw	0
 43174  0151E8  6E59               	movwf	?i2___fladd+3,c
 43175                           
 43176                           ; BSR set to: 0
 43177  0151EA  0012               	return	
 43178  0151EC                     
 43179                           ; BSR set to: 0
 43180                           
 43181                           ; BSR set to: 0
 43182  0151EC  90D8               	bcf	status,0,c
 43183  0151EE  3656               	rlcf	i2___fladd@b,f,c
 43184  0151F0  3657               	rlcf	i2___fladd@b+1,f,c
 43185  0151F2  3658               	rlcf	i2___fladd@b+2,f,c
 43186  0151F4  3659               	rlcf	i2___fladd@b+3,f,c
 43187                           
 43188                           ; BSR set to: 0
 43189  0151F6  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 43190                           
 43191                           ; BSR set to: 0
 43192  0151F8  8056               	bsf	i2___fladd@b,0,c
 43193                           
 43194                           ; BSR set to: 0
 43195                           
 43196                           ; BSR set to: 0
 43197  0151FA  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 43198  0151FC  D002               	goto	i2l2192
 43199                           
 43200                           ; BSR set to: 0
 43201  0151FE  80D8               	bsf	status,0,c
 43202  015200  D001               	goto	L24
 43203  015202                     i2l2192:
 43204                           
 43205                           ; BSR set to: 0
 43206                           
 43207                           ; BSR set to: 0
 43208  015202  90D8               	bcf	status,0,c
 43209  015204                     L24:
 43210  015204  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 43211                           
 43212                           ; BSR set to: 0
 43213                           
 43214                           ; BSR set to: 0
 43215  015206  516A               	movf	i2___fladd@bexp& (0+255),w,b
 43216  015208  A4D8               	btfss	status,2,c
 43217                           
 43218                           ; BSR set to: 0
 43219  01520A  076A               	decf	i2___fladd@bexp& (0+255),f,b
 43220  01520C                     i2l2194:
 43221                           
 43222                           ; BSR set to: 0
 43223                           
 43224                           ; BSR set to: 0
 43225                           
 43226                           ; BSR set to: 0
 43227  01520C  AE58               	btfss	i2___fladd@b+2,7,c
 43228  01520E  D7EE               	goto	i2l2190
 43229  015210                     i2u1350_40:
 43230                           
 43231                           ; BSR set to: 0
 43232                           
 43233                           ; BSR set to: 0
 43234                           
 43235                           ; BSR set to: 0
 43236  015210  0E00               	movlw	0
 43237  015212  6F69               	movwf	i2___fladd@aexp& (0+255),b
 43238                           
 43239                           ; BSR set to: 0
 43240  015214  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 43241  015216  D00A               	goto	i2l2199
 43242                           
 43243                           ; BSR set to: 0
 43244  015218  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 43245  01521C  0E7F               	movlw	127
 43246  01521E  1760               	andwf	??i2___fladd& (0+255),f,b
 43247  015220  A4D8               	btfss	status,2,c
 43248  015222  D002               	goto	i2u1353_40
 43249                           
 43250                           ; BSR set to: 0
 43251                           
 43252                           ; BSR set to: 0
 43253  015224  A056               	btfss	i2___fladd@b,0,c
 43254  015226  D002               	goto	i2l2199
 43255  015228                     i2u1353_40:
 43256                           
 43257                           ; BSR set to: 0
 43258  015228  0E01               	movlw	1
 43259  01522A  6F69               	movwf	i2___fladd@aexp& (0+255),b
 43260  01522C                     i2l2199:
 43261                           
 43262                           ; BSR set to: 0
 43263                           
 43264                           ; BSR set to: 0
 43265                           
 43266                           ; BSR set to: 0
 43267  01522C  5169               	movf	i2___fladd@aexp& (0+255),w,b
 43268  01522E  B4D8               	btfsc	status,2,c
 43269  015230  D020               	goto	i2l2202
 43270                           
 43271                           ; BSR set to: 0
 43272  015232  0E01               	movlw	1
 43273  015234  2656               	addwf	i2___fladd@b,f,c
 43274  015236  0E00               	movlw	0
 43275  015238  2257               	addwfc	i2___fladd@b+1,f,c
 43276  01523A  2258               	addwfc	i2___fladd@b+2,f,c
 43277  01523C  2259               	addwfc	i2___fladd@b+3,f,c
 43278                           
 43279                           ; BSR set to: 0
 43280  01523E  A059               	btfss	i2___fladd@b+3,0,c
 43281  015240  D018               	goto	i2l2202
 43282                           
 43283                           ; BSR set to: 0
 43284  015242  C056  F060         	movff	i2___fladd@b,??i2___fladd
 43285  015246  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 43286  01524A  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 43287  01524E  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 43288  015252  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 43289  015254  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 43290  015256  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 43291  015258  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 43292  01525A  3360               	rrcf	??i2___fladd& (0+255),f,b
 43293  01525C  C060  F056         	movff	??i2___fladd,i2___fladd@b
 43294  015260  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 43295  015264  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 43296  015268  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 43297  01526C  296A               	incf	i2___fladd@bexp& (0+255),w,b
 43298  01526E  A4D8               	btfss	status,2,c
 43299                           
 43300                           ; BSR set to: 0
 43301  015270  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 43302  015272                     i2l2202:
 43303                           
 43304                           ; BSR set to: 0
 43305                           
 43306                           ; BSR set to: 0
 43307                           
 43308                           ; BSR set to: 0
 43309                           
 43310                           ; BSR set to: 0
 43311  015272  296A               	incf	i2___fladd@bexp& (0+255),w,b
 43312  015274  B4D8               	btfsc	status,2,c
 43313  015276  D003               	goto	i2u1358_40
 43314                           
 43315                           ; BSR set to: 0
 43316  015278  516A               	movf	i2___fladd@bexp& (0+255),w,b
 43317  01527A  A4D8               	btfss	status,2,c
 43318  01527C  D00D               	goto	i2l2206
 43319  01527E                     i2u1358_40:
 43320                           
 43321                           ; BSR set to: 0
 43322                           
 43323                           ; BSR set to: 0
 43324  01527E  0E00               	movlw	0
 43325  015280  6E56               	movwf	i2___fladd@b,c
 43326  015282  0E00               	movlw	0
 43327  015284  6E57               	movwf	i2___fladd@b+1,c
 43328  015286  0E00               	movlw	0
 43329  015288  6E58               	movwf	i2___fladd@b+2,c
 43330  01528A  0E00               	movlw	0
 43331  01528C  6E59               	movwf	i2___fladd@b+3,c
 43332  01528E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 43333  015290  A4D8               	btfss	status,2,c
 43334  015292  D002               	goto	i2l2206
 43335                           
 43336                           ; BSR set to: 0
 43337  015294  0E00               	movlw	0
 43338  015296  6F68               	movwf	i2___fladd@signs& (0+255),b
 43339  015298                     i2l2206:
 43340                           
 43341                           ; BSR set to: 0
 43342                           
 43343                           ; BSR set to: 0
 43344                           
 43345                           ; BSR set to: 0
 43346  015298  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 43347  01529A  D002               	goto	i2l2207
 43348                           
 43349                           ; BSR set to: 0
 43350  01529C  8E58               	bsf	i2___fladd@b+2,7,c
 43351  01529E  D001               	goto	i2l2208
 43352  0152A0                     i2l2207:
 43353                           
 43354                           ; BSR set to: 0
 43355                           
 43356                           ; BSR set to: 0
 43357  0152A0  9E58               	bcf	i2___fladd@b+2,7,c
 43358  0152A2                     i2l2208:
 43359                           
 43360                           ; BSR set to: 0
 43361                           
 43362                           ; BSR set to: 0
 43363  0152A2  90D8               	bcf	status,0,c
 43364  0152A4  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 43365  0152A6  6E59               	movwf	i2___fladd@b+3,c
 43366                           
 43367                           ; BSR set to: 0
 43368  0152A8  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 43369                           
 43370                           ; BSR set to: 0
 43371  0152AA  8E59               	bsf	i2___fladd@b+3,7,c
 43372                           
 43373                           ; BSR set to: 0
 43374                           
 43375                           ; BSR set to: 0
 43376  0152AC  C056  F056         	movff	i2___fladd@b,?i2___fladd
 43377  0152B0  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 43378  0152B4  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 43379  0152B8  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 43380  0152BC  0012               	return	
 43381  0152BE                     __end_ofi2___fladd:
 43382                           	opt stack 0
 43383                           tosu	equ	0xFFF
 43384                           tosh	equ	0xFFE
 43385                           tosl	equ	0xFFD
 43386                           pclatu	equ	0xFFB
 43387                           pclath	equ	0xFFA
 43388                           tblptru	equ	0xFF8
 43389                           tblptrh	equ	0xFF7
 43390                           tblptrl	equ	0xFF6
 43391                           tablat	equ	0xFF5
 43392                           prodh	equ	0xFF4
 43393                           prodl	equ	0xFF3
 43394                           intcon	equ	0xFF2
 43395                           indf0	equ	0xFEF
 43396                           postinc0	equ	0xFEE
 43397                           fsr0h	equ	0xFEA
 43398                           fsr0l	equ	0xFE9
 43399                           wreg	equ	0xFE8
 43400                           indf1	equ	0xFE7
 43401                           postdec1	equ	0xFE5
 43402                           plusw1	equ	0xFE3
 43403                           fsr1h	equ	0xFE2
 43404                           fsr1l	equ	0xFE1
 43405                           bsr	equ	0xFE0
 43406                           indf2	equ	0xFDF
 43407                           postinc2	equ	0xFDE
 43408                           postdec2	equ	0xFDD
 43409                           plusw2	equ	0xFDB
 43410                           fsr2h	equ	0xFDA
 43411                           fsr2l	equ	0xFD9
 43412                           status	equ	0xFD8
 43413                           
 43414 ;; *************** function _abs *****************
 43415 ;; Defined at:
 43416 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 43417 ;; Parameters:    Size  Location     Type
 43418 ;;  a               2   22[BANK0 ] int 
 43419 ;; Auto vars:     Size  Location     Type
 43420 ;;		None
 43421 ;; Return value:  Size  Location     Type
 43422 ;;                  2   22[BANK0 ] int 
 43423 ;; Registers used:
 43424 ;;		wreg, status,2, status,0
 43425 ;; Tracked objects:
 43426 ;;		On entry : 0/0
 43427 ;;		On exit  : 0/0
 43428 ;;		Unchanged: 0/0
 43429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43430 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43433 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43434 ;;Total ram usage:        4 bytes
 43435 ;; Hardware stack levels used:    1
 43436 ;; This function calls:
 43437 ;;		Nothing
 43438 ;; This function is called by:
 43439 ;;		_ADCPostProcessingCallback
 43440 ;; This function uses a non-reentrant model
 43441 ;;
 43442                           
 43443                           	psect	text127
 43444  01902E                     __ptext127:
 43445                           	opt stack 0
 43446  01902E                     _abs:
 43447                           	opt stack 16
 43448                           
 43449                           ; BSR set to: 0
 43450                           ;incstack = 0
 43451  01902E  0100               	movlb	0	; () banked
 43452  019030  AF77               	btfss	(abs@a+1)& (0+255),7,b
 43453  019032  D00D               	goto	i2l1654
 43454                           
 43455                           ; BSR set to: 0
 43456  019034  C076  F078         	movff	abs@a,??_abs
 43457  019038  C077  F079         	movff	abs@a+1,??_abs+1
 43458  01903C  1F78               	comf	??_abs& (0+255),f,b
 43459  01903E  1F79               	comf	(??_abs+1)& (0+255),f,b
 43460  019040  4B78               	infsnz	??_abs& (0+255),f,b
 43461  019042  2B79               	incf	(??_abs+1)& (0+255),f,b
 43462  019044  C078  F076         	movff	??_abs,?_abs
 43463  019048  C079  F077         	movff	??_abs+1,?_abs+1
 43464  01904C  0012               	return	
 43465  01904E                     i2l1654:
 43466                           
 43467                           ; BSR set to: 0
 43468  01904E  C076  F076         	movff	abs@a,?_abs
 43469  019052  C077  F077         	movff	abs@a+1,?_abs+1
 43470                           
 43471                           ; BSR set to: 0
 43472  019056  0012               	return		;funcret
 43473  019058                     __end_of_abs:
 43474                           	opt stack 0
 43475                           tosu	equ	0xFFF
 43476                           tosh	equ	0xFFE
 43477                           tosl	equ	0xFFD
 43478                           pclatu	equ	0xFFB
 43479                           pclath	equ	0xFFA
 43480                           tblptru	equ	0xFF8
 43481                           tblptrh	equ	0xFF7
 43482                           tblptrl	equ	0xFF6
 43483                           tablat	equ	0xFF5
 43484                           prodh	equ	0xFF4
 43485                           prodl	equ	0xFF3
 43486                           intcon	equ	0xFF2
 43487                           indf0	equ	0xFEF
 43488                           postinc0	equ	0xFEE
 43489                           fsr0h	equ	0xFEA
 43490                           fsr0l	equ	0xFE9
 43491                           wreg	equ	0xFE8
 43492                           indf1	equ	0xFE7
 43493                           postdec1	equ	0xFE5
 43494                           plusw1	equ	0xFE3
 43495                           fsr1h	equ	0xFE2
 43496                           fsr1l	equ	0xFE1
 43497                           bsr	equ	0xFE0
 43498                           indf2	equ	0xFDF
 43499                           postinc2	equ	0xFDE
 43500                           postdec2	equ	0xFDD
 43501                           plusw2	equ	0xFDB
 43502                           fsr2h	equ	0xFDA
 43503                           fsr2l	equ	0xFD9
 43504                           status	equ	0xFD8
 43505                           
 43506 ;; *************** function _ADCC_StopConversion *****************
 43507 ;; Defined at:
 43508 ;;		line 162 in file "mcc_generated_files/adcc.c"
 43509 ;; Parameters:    Size  Location     Type
 43510 ;;		None
 43511 ;; Auto vars:     Size  Location     Type
 43512 ;;		None
 43513 ;; Return value:  Size  Location     Type
 43514 ;;                  1    wreg      void 
 43515 ;; Registers used:
 43516 ;;		None
 43517 ;; Tracked objects:
 43518 ;;		On entry : 0/0
 43519 ;;		On exit  : 0/0
 43520 ;;		Unchanged: 0/0
 43521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43526 ;;Total ram usage:        0 bytes
 43527 ;; Hardware stack levels used:    1
 43528 ;; This function calls:
 43529 ;;		Nothing
 43530 ;; This function is called by:
 43531 ;;		_ADCPostProcessingCallback
 43532 ;; This function uses a non-reentrant model
 43533 ;;
 43534                           
 43535                           	psect	text128
 43536  0193A4                     __ptext128:
 43537                           	opt stack 0
 43538  0193A4                     _ADCC_StopConversion:
 43539                           	opt stack 16
 43540                           
 43541                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 43542                           
 43543                           ; BSR set to: 0
 43544                           ;incstack = 0
 43545  0193A4  9060               	bcf	3936,0,c	;volatile
 43546  0193A6  0012               	return		;funcret
 43547  0193A8                     __end_of_ADCC_StopConversion:
 43548                           	opt stack 0
 43549                           tosu	equ	0xFFF
 43550                           tosh	equ	0xFFE
 43551                           tosl	equ	0xFFD
 43552                           pclatu	equ	0xFFB
 43553                           pclath	equ	0xFFA
 43554                           tblptru	equ	0xFF8
 43555                           tblptrh	equ	0xFF7
 43556                           tblptrl	equ	0xFF6
 43557                           tablat	equ	0xFF5
 43558                           prodh	equ	0xFF4
 43559                           prodl	equ	0xFF3
 43560                           intcon	equ	0xFF2
 43561                           indf0	equ	0xFEF
 43562                           postinc0	equ	0xFEE
 43563                           fsr0h	equ	0xFEA
 43564                           fsr0l	equ	0xFE9
 43565                           wreg	equ	0xFE8
 43566                           indf1	equ	0xFE7
 43567                           postdec1	equ	0xFE5
 43568                           plusw1	equ	0xFE3
 43569                           fsr1h	equ	0xFE2
 43570                           fsr1l	equ	0xFE1
 43571                           bsr	equ	0xFE0
 43572                           indf2	equ	0xFDF
 43573                           postinc2	equ	0xFDE
 43574                           postdec2	equ	0xFDD
 43575                           plusw2	equ	0xFDB
 43576                           fsr2h	equ	0xFDA
 43577                           fsr2l	equ	0xFD9
 43578                           status	equ	0xFD8
 43579                           
 43580 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 43581 ;; Defined at:
 43582 ;;		line 216 in file "mcc_generated_files/adcc.c"
 43583 ;; Parameters:    Size  Location     Type
 43584 ;;		None
 43585 ;; Auto vars:     Size  Location     Type
 43586 ;;		None
 43587 ;; Return value:  Size  Location     Type
 43588 ;;                  1    wreg      unsigned char 
 43589 ;; Registers used:
 43590 ;;		wreg
 43591 ;; Tracked objects:
 43592 ;;		On entry : 0/0
 43593 ;;		On exit  : 0/0
 43594 ;;		Unchanged: 0/0
 43595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43600 ;;Total ram usage:        0 bytes
 43601 ;; Hardware stack levels used:    1
 43602 ;; This function calls:
 43603 ;;		Nothing
 43604 ;; This function is called by:
 43605 ;;		_ADCPostProcessingCallback
 43606 ;; This function uses a non-reentrant model
 43607 ;;
 43608                           
 43609                           	psect	text129
 43610  01935E                     __ptext129:
 43611                           	opt stack 0
 43612  01935E                     _ADCC_HasAccumulatorOverflowed:
 43613                           	opt stack 16
 43614                           
 43615                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 43616                           
 43617                           ;incstack = 0
 43618  01935E  AE65               	btfss	3941,7,c	;volatile
 43619  019360  D002               	goto	i2u1694_40
 43620  019362  0E01               	movlw	1
 43621  019364  0012               	return	
 43622  019366                     i2u1694_40:
 43623  019366  0E00               	movlw	0
 43624  019368  0012               	return	
 43625  01936A                     __end_of_ADCC_HasAccumulatorOverflowed:
 43626                           	opt stack 0
 43627                           tosu	equ	0xFFF
 43628                           tosh	equ	0xFFE
 43629                           tosl	equ	0xFFD
 43630                           pclatu	equ	0xFFB
 43631                           pclath	equ	0xFFA
 43632                           tblptru	equ	0xFF8
 43633                           tblptrh	equ	0xFF7
 43634                           tblptrl	equ	0xFF6
 43635                           tablat	equ	0xFF5
 43636                           prodh	equ	0xFF4
 43637                           prodl	equ	0xFF3
 43638                           intcon	equ	0xFF2
 43639                           indf0	equ	0xFEF
 43640                           postinc0	equ	0xFEE
 43641                           fsr0h	equ	0xFEA
 43642                           fsr0l	equ	0xFE9
 43643                           wreg	equ	0xFE8
 43644                           indf1	equ	0xFE7
 43645                           postdec1	equ	0xFE5
 43646                           plusw1	equ	0xFE3
 43647                           fsr1h	equ	0xFE2
 43648                           fsr1l	equ	0xFE1
 43649                           bsr	equ	0xFE0
 43650                           indf2	equ	0xFDF
 43651                           postinc2	equ	0xFDE
 43652                           postdec2	equ	0xFDD
 43653                           plusw2	equ	0xFDB
 43654                           fsr2h	equ	0xFDA
 43655                           fsr2l	equ	0xFD9
 43656                           status	equ	0xFD8
 43657                           
 43658 ;; *************** function _ADCC_GetFilterValue *****************
 43659 ;; Defined at:
 43660 ;;		line 222 in file "mcc_generated_files/adcc.c"
 43661 ;; Parameters:    Size  Location     Type
 43662 ;;		None
 43663 ;; Auto vars:     Size  Location     Type
 43664 ;;		None
 43665 ;; Return value:  Size  Location     Type
 43666 ;;                  2    0[COMRAM] unsigned int 
 43667 ;; Registers used:
 43668 ;;		wreg, status,2, status,0
 43669 ;; Tracked objects:
 43670 ;;		On entry : 0/0
 43671 ;;		On exit  : 0/0
 43672 ;;		Unchanged: 0/0
 43673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43678 ;;Total ram usage:        4 bytes
 43679 ;; Hardware stack levels used:    1
 43680 ;; This function calls:
 43681 ;;		Nothing
 43682 ;; This function is called by:
 43683 ;;		_ADCPostProcessingCallback
 43684 ;; This function uses a non-reentrant model
 43685 ;;
 43686                           
 43687                           	psect	text130
 43688  019262                     __ptext130:
 43689                           	opt stack 0
 43690  019262                     _ADCC_GetFilterValue:
 43691                           	opt stack 16
 43692                           
 43693                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 43694                           
 43695                           ;incstack = 0
 43696  019262  5073               	movf	3955,w,c	;volatile
 43697  019264  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 43698  019266  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 43699  019268  5072               	movf	3954,w,c	;volatile
 43700  01926A  2403               	addwf	??_ADCC_GetFilterValue,w,c
 43701  01926C  6E01               	movwf	?_ADCC_GetFilterValue,c
 43702  01926E  0E00               	movlw	0
 43703  019270  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 43704  019272  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 43705  019274  0012               	return	
 43706  019276                     __end_of_ADCC_GetFilterValue:
 43707                           	opt stack 0
 43708                           tosu	equ	0xFFF
 43709                           tosh	equ	0xFFE
 43710                           tosl	equ	0xFFD
 43711                           pclatu	equ	0xFFB
 43712                           pclath	equ	0xFFA
 43713                           tblptru	equ	0xFF8
 43714                           tblptrh	equ	0xFF7
 43715                           tblptrl	equ	0xFF6
 43716                           tablat	equ	0xFF5
 43717                           prodh	equ	0xFF4
 43718                           prodl	equ	0xFF3
 43719                           intcon	equ	0xFF2
 43720                           indf0	equ	0xFEF
 43721                           postinc0	equ	0xFEE
 43722                           fsr0h	equ	0xFEA
 43723                           fsr0l	equ	0xFE9
 43724                           wreg	equ	0xFE8
 43725                           indf1	equ	0xFE7
 43726                           postdec1	equ	0xFE5
 43727                           plusw1	equ	0xFE3
 43728                           fsr1h	equ	0xFE2
 43729                           fsr1l	equ	0xFE1
 43730                           bsr	equ	0xFE0
 43731                           indf2	equ	0xFDF
 43732                           postinc2	equ	0xFDE
 43733                           postdec2	equ	0xFDD
 43734                           plusw2	equ	0xFDB
 43735                           fsr2h	equ	0xFDA
 43736                           fsr2l	equ	0xFD9
 43737                           status	equ	0xFD8
 43738                           
 43739 ;; *************** function _ADCC_GetConversionResult *****************
 43740 ;; Defined at:
 43741 ;;		line 130 in file "mcc_generated_files/adcc.c"
 43742 ;; Parameters:    Size  Location     Type
 43743 ;;		None
 43744 ;; Auto vars:     Size  Location     Type
 43745 ;;		None
 43746 ;; Return value:  Size  Location     Type
 43747 ;;                  2    0[COMRAM] unsigned int 
 43748 ;; Registers used:
 43749 ;;		wreg, status,2, status,0
 43750 ;; Tracked objects:
 43751 ;;		On entry : 0/0
 43752 ;;		On exit  : 0/0
 43753 ;;		Unchanged: 0/0
 43754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43759 ;;Total ram usage:        4 bytes
 43760 ;; Hardware stack levels used:    1
 43761 ;; This function calls:
 43762 ;;		Nothing
 43763 ;; This function is called by:
 43764 ;;		_ADCPostProcessingCallback
 43765 ;; This function uses a non-reentrant model
 43766 ;;
 43767                           
 43768                           	psect	text131
 43769  019276                     __ptext131:
 43770                           	opt stack 0
 43771  019276                     _ADCC_GetConversionResult:
 43772                           	opt stack 16
 43773                           
 43774                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 43775                           
 43776                           ;incstack = 0
 43777  019276  5064               	movf	3940,w,c	;volatile
 43778  019278  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 43779  01927A  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 43780  01927C  5063               	movf	3939,w,c	;volatile
 43781  01927E  2403               	addwf	??_ADCC_GetConversionResult,w,c
 43782  019280  6E01               	movwf	?_ADCC_GetConversionResult,c
 43783  019282  0E00               	movlw	0
 43784  019284  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 43785  019286  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 43786  019288  0012               	return	
 43787  01928A                     __end_of_ADCC_GetConversionResult:
 43788                           	opt stack 0
 43789                           tosu	equ	0xFFF
 43790                           tosh	equ	0xFFE
 43791                           tosl	equ	0xFFD
 43792                           pclatu	equ	0xFFB
 43793                           pclath	equ	0xFFA
 43794                           tblptru	equ	0xFF8
 43795                           tblptrh	equ	0xFF7
 43796                           tblptrl	equ	0xFF6
 43797                           tablat	equ	0xFF5
 43798                           prodh	equ	0xFF4
 43799                           prodl	equ	0xFF3
 43800                           intcon	equ	0xFF2
 43801                           indf0	equ	0xFEF
 43802                           postinc0	equ	0xFEE
 43803                           fsr0h	equ	0xFEA
 43804                           fsr0l	equ	0xFE9
 43805                           wreg	equ	0xFE8
 43806                           indf1	equ	0xFE7
 43807                           postdec1	equ	0xFE5
 43808                           plusw1	equ	0xFE3
 43809                           fsr1h	equ	0xFE2
 43810                           fsr1l	equ	0xFE1
 43811                           bsr	equ	0xFE0
 43812                           indf2	equ	0xFDF
 43813                           postinc2	equ	0xFDE
 43814                           postdec2	equ	0xFDD
 43815                           plusw2	equ	0xFDB
 43816                           fsr2h	equ	0xFDA
 43817                           fsr2l	equ	0xFD9
 43818                           status	equ	0xFD8
 43819                           tosu	equ	0xFFF
 43820                           tosh	equ	0xFFE
 43821                           tosl	equ	0xFFD
 43822                           pclatu	equ	0xFFB
 43823                           pclath	equ	0xFFA
 43824                           tblptru	equ	0xFF8
 43825                           tblptrh	equ	0xFF7
 43826                           tblptrl	equ	0xFF6
 43827                           tablat	equ	0xFF5
 43828                           prodh	equ	0xFF4
 43829                           prodl	equ	0xFF3
 43830                           intcon	equ	0xFF2
 43831                           indf0	equ	0xFEF
 43832                           postinc0	equ	0xFEE
 43833                           fsr0h	equ	0xFEA
 43834                           fsr0l	equ	0xFE9
 43835                           wreg	equ	0xFE8
 43836                           indf1	equ	0xFE7
 43837                           postdec1	equ	0xFE5
 43838                           plusw1	equ	0xFE3
 43839                           fsr1h	equ	0xFE2
 43840                           fsr1l	equ	0xFE1
 43841                           bsr	equ	0xFE0
 43842                           indf2	equ	0xFDF
 43843                           postinc2	equ	0xFDE
 43844                           postdec2	equ	0xFDD
 43845                           plusw2	equ	0xFDB
 43846                           fsr2h	equ	0xFDA
 43847                           fsr2l	equ	0xFD9
 43848                           status	equ	0xFD8
 43849                           
 43850                           	psect	text132
 43851  000000                     __ptext132:
 43852                           	opt stack 0
 43853                           tosu	equ	0xFFF
 43854                           tosh	equ	0xFFE
 43855                           tosl	equ	0xFFD
 43856                           pclatu	equ	0xFFB
 43857                           pclath	equ	0xFFA
 43858                           tblptru	equ	0xFF8
 43859                           tblptrh	equ	0xFF7
 43860                           tblptrl	equ	0xFF6
 43861                           tablat	equ	0xFF5
 43862                           prodh	equ	0xFF4
 43863                           prodl	equ	0xFF3
 43864                           intcon	equ	0xFF2
 43865                           indf0	equ	0xFEF
 43866                           postinc0	equ	0xFEE
 43867                           fsr0h	equ	0xFEA
 43868                           fsr0l	equ	0xFE9
 43869                           wreg	equ	0xFE8
 43870                           indf1	equ	0xFE7
 43871                           postdec1	equ	0xFE5
 43872                           plusw1	equ	0xFE3
 43873                           fsr1h	equ	0xFE2
 43874                           fsr1l	equ	0xFE1
 43875                           bsr	equ	0xFE0
 43876                           indf2	equ	0xFDF
 43877                           postinc2	equ	0xFDE
 43878                           postdec2	equ	0xFDD
 43879                           plusw2	equ	0xFDB
 43880                           fsr2h	equ	0xFDA
 43881                           fsr2l	equ	0xFD9
 43882                           status	equ	0xFD8
 43883                           
 43884                           	psect	rparam
 43885  0000                     tosu	equ	0xFFF
 43886                           tosh	equ	0xFFE
 43887                           tosl	equ	0xFFD
 43888                           pclatu	equ	0xFFB
 43889                           pclath	equ	0xFFA
 43890                           tblptru	equ	0xFF8
 43891                           tblptrh	equ	0xFF7
 43892                           tblptrl	equ	0xFF6
 43893                           tablat	equ	0xFF5
 43894                           prodh	equ	0xFF4
 43895                           prodl	equ	0xFF3
 43896                           intcon	equ	0xFF2
 43897                           indf0	equ	0xFEF
 43898                           postinc0	equ	0xFEE
 43899                           fsr0h	equ	0xFEA
 43900                           fsr0l	equ	0xFE9
 43901                           wreg	equ	0xFE8
 43902                           indf1	equ	0xFE7
 43903                           postdec1	equ	0xFE5
 43904                           plusw1	equ	0xFE3
 43905                           fsr1h	equ	0xFE2
 43906                           fsr1l	equ	0xFE1
 43907                           bsr	equ	0xFE0
 43908                           indf2	equ	0xFDF
 43909                           postinc2	equ	0xFDE
 43910                           postdec2	equ	0xFDD
 43911                           plusw2	equ	0xFDB
 43912                           fsr2h	equ	0xFDA
 43913                           fsr2l	equ	0xFD9
 43914                           status	equ	0xFD8
 43915                           
 43916                           	psect	temp
 43917  00005F                     btemp:
 43918                           	opt stack 0
 43919  00005F                     	ds	1
 43920  0000                     int$flags	set	btemp
 43921  0000                     wtemp6	set	btemp+1
 43922                           tosu	equ	0xFFF
 43923                           tosh	equ	0xFFE
 43924                           tosl	equ	0xFFD
 43925                           pclatu	equ	0xFFB
 43926                           pclath	equ	0xFFA
 43927                           tblptru	equ	0xFF8
 43928                           tblptrh	equ	0xFF7
 43929                           tblptrl	equ	0xFF6
 43930                           tablat	equ	0xFF5
 43931                           prodh	equ	0xFF4
 43932                           prodl	equ	0xFF3
 43933                           intcon	equ	0xFF2
 43934                           indf0	equ	0xFEF
 43935                           postinc0	equ	0xFEE
 43936                           fsr0h	equ	0xFEA
 43937                           fsr0l	equ	0xFE9
 43938                           wreg	equ	0xFE8
 43939                           indf1	equ	0xFE7
 43940                           postdec1	equ	0xFE5
 43941                           plusw1	equ	0xFE3
 43942                           fsr1h	equ	0xFE2
 43943                           fsr1l	equ	0xFE1
 43944                           bsr	equ	0xFE0
 43945                           indf2	equ	0xFDF
 43946                           postinc2	equ	0xFDE
 43947                           postdec2	equ	0xFDD
 43948                           plusw2	equ	0xFDB
 43949                           fsr2h	equ	0xFDA
 43950                           fsr2l	equ	0xFD9
 43951                           status	equ	0xFD8


Data Sizes:
    Strings     9904
    Constant    268
    Data        43
    BSS         370
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    187     233
    BANK2           256     83     248
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_144(CODE[5]), STR_142(CODE[9]), STR_140(CODE[29]), STR_138(CODE[34]), 
		 -> STR_136(CODE[33]), STR_134(CODE[29]), STR_132(CODE[17]), STR_130(CODE[17]), 
		 -> STR_128(CODE[14]), STR_126(CODE[19]), STR_124(CODE[20]), STR_122(CODE[11]), 
		 -> STR_120(CODE[17]), STR_118(CODE[14]), STR_116(CODE[16]), STR_107(CODE[13]), 
		 -> STR_103(CODE[17]), STR_100(CODE[14]), STR_98(CODE[12]), STR_96(CODE[16]), 
		 -> STR_94(CODE[15]), STR_92(CODE[15]), STR_90(CODE[21]), STR_88(CODE[21]), 
		 -> STR_86(CODE[26]), STR_84(CODE[14]), STR_82(CODE[13]), STR_80(CODE[18]), 
		 -> STR_78(CODE[15]), STR_76(CODE[16]), STR_73(CODE[17]), STR_71(CODE[16]), 
		 -> STR_60(CODE[11]), STR_57(CODE[10]), STR_55(CODE[13]), STR_53(CODE[11]), 
		 -> STR_50(CODE[4]), STR_49(CODE[6]), STR_47(CODE[16]), STR_44(CODE[6]), 
		 -> STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_164(CODE[7]), printf@c(BANK1[1]), STR_163(CODE[16]), STR_162(CODE[22]), 
		 -> STR_161(CODE[21]), STR_160(CODE[27]), STR_159(CODE[41]), STR_158(CODE[32]), 
		 -> STR_157(CODE[19]), STR_156(CODE[16]), STR_155(CODE[15]), STR_154(CODE[16]), 
		 -> STR_153(CODE[10]), STR_152(CODE[13]), STR_151(CODE[12]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2891
		 -> STR_150(CODE[30]), STR_149(CODE[46]), STR_148(CODE[39]), STR_147(CODE[62]), 
		 -> STR_146(CODE[55]), STR_145(CODE[470]), STR_143(CODE[2891]), STR_141(CODE[492]), 
		 -> STR_139(CODE[605]), STR_137(CODE[720]), STR_135(CODE[922]), STR_133(CODE[54]), 
		 -> STR_131(CODE[54]), STR_129(CODE[45]), STR_127(CODE[51]), STR_125(CODE[52]), 
		 -> STR_123(CODE[46]), STR_121(CODE[51]), STR_119(CODE[53]), STR_117(CODE[58]), 
		 -> STR_115(CODE[71]), STR_114(CODE[63]), STR_113(CODE[37]), STR_112(CODE[46]), 
		 -> STR_111(CODE[102]), STR_110(CODE[86]), STR_108(CODE[25]), STR_106(CODE[42]), 
		 -> STR_105(CODE[53]), STR_104(CODE[31]), STR_102(CODE[29]), STR_101(CODE[28]), 
		 -> STR_99(CODE[42]), STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), 
		 -> STR_91(CODE[34]), STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), 
		 -> STR_83(CODE[58]), STR_81(CODE[36]), STR_79(CODE[36]), STR_77(CODE[37]), 
		 -> STR_75(CODE[45]), STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), 
		 -> STR_69(CODE[48]), STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[59]), 
		 -> STR_54(CODE[85]), STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), 
		 -> STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), 
		 -> STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_162(CODE[22]), STR_161(CODE[21]), STR_160(CODE[27]), STR_159(CODE[41]), 
		 -> STR_158(CODE[32]), STR_157(CODE[19]), STR_156(CODE[16]), STR_155(CODE[15]), 
		 -> STR_154(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_153(CODE[10]), STR_152(CODE[13]), STR_151(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_153(CODE[10]), STR_152(CODE[13]), STR_151(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_153(CODE[10]), STR_152(CODE[13]), STR_151(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_163(CODE[16]), STR_162(CODE[22]), STR_161(CODE[21]), STR_160(CODE[27]), 
		 -> STR_159(CODE[41]), STR_158(CODE[32]), STR_157(CODE[19]), STR_156(CODE[16]), 
		 -> STR_155(CODE[15]), STR_154(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  890784
                                             81 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0  106354
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  537161
                                            184 BANK1      3     3      0
                                             75 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       63    61      2  535970
                                            180 BANK1      4     2      2
                                             16 BANK2     59    59      0
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  128783
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  128783
                                            178 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     741
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    7213
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0  106354
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    2624
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     722
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     736
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     468
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2188
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4   10418
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2    1328
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0    1208
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0    1208
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     374
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2    1143
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4    1143
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     537
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2     110
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2892
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    5576
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      75
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0  106354
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10  106354
                                            130 BANK1     48    38     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   19276
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     165
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0     110
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     185
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   18781
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   11764
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    3047
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3335
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6    1133
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1133
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1808
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1953
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1427
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1457
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1272
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   10022
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    9226
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1343
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    8301
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    3879
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     478
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    4422
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    2147
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    2147
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     234
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  196383
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   40465
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   40465
                                             40 BANK0     40    38      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  155678
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  155678
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   99862
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   47417
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   42313
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   25639
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   40118
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   37270
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4509
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2535
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7999
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10340
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4234
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C0      12       75.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     53      F8      10       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39B       8        0.0%
DATA                 0      0     39B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 06 23:11:33 2018

                           ??i2_TMR7_StopTimer 0001                 ringBufferLUT@max_voltage_print 02B2  
                     getDeviceIDString@strings 0128                                   ___fldiv@aexp 0155  
                                 ___fldiv@bexp 0154                   __end_of_readDoubleFromEEPROM 8974  
             __end_of_TMR5_SetInterruptHandler 9326                                   ___fldiv@sign 0149  
                                  __CFG_CP$OFF 000000                                             l57 91F8  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize 937C  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback 8D7E                            _saveSRAMMaxToEEPROM 6662  
                                          l381 8BEC                                            l382 8BE8  
                                          l391 8B20                                            l392 8B46  
                                          l384 8C16                                            l393 8B44  
                                          l388 8B0A                                            l389 8B06  
                                          l789 8DA8                                            l981 66C8  
                                          l982 672E                                            l983 6794  
                                          l984 67FA                                            l985 6860  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                                          _Ipk 00F6                                            _Vpk 0220  
                                          _abs 902E                                    i2___fldiv@a 0017  
                                  i2___fldiv@b 0013                      __end_of_getDeviceIDString 886A  
                                          _sin 55C2                     currentMeasuredToPeak@Angle 009D  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                 __CFG_IDLOC0$ 000000                                     i2___xxtofl 6E9C  
                                 __CFG_IDLOC1$ 000001                                   __CFG_IDLOC2$ 000002  
                                 __CFG_IDLOC3$ 000003                                   __CFG_IDLOC4$ 000004  
                                 __CFG_IDLOC5$ 000005                                   __CFG_IDLOC6$ 000006  
                                 __CFG_IDLOC7$ 000007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                  i2___flmul@a 0034                                    i2___flmul@b 0030  
                                  i2___flsub@a 0084                                    i2___flsub@b 0080  
                             ??_TMR7_StopTimer 0117                                   ___flmul@aexp 0163  
                                 ___flmul@bexp 0164                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___fltol@exp1 0181                                           l1110 428C  
                                         l1111 42A4                                           l1120 438E  
                                         l1112 42BC                                           l1121 43A6  
                                         l1113 42D4                                           l1130 449C  
                                         l1122 43BE                                           l1106 4304  
                                         l1114 42EC                                           l1131 44B4  
                                         l1115 441E                                           l1123 43D6  
                                         l1107 425C                                           ?_abs 0076  
                                         l1132 44CC                                           l1124 43EE  
                                         l1116 4346                                           l1108 432E  
                                         l1300 065E                                           l1133 44E4  
                                         l1117 4454                                           l1125 4406  
                                         l1109 4274                                           l1126 4544  
                                         l1134 44FC                                           l1118 435E  
                                         l1310 07EA                                           l1302 06B0  
                                         l1038 80EA                                           l1135 4514  
                                         l1127 446C                                           l1119 4376  
                                         l1400 8994                                           l1128 457A  
                                         l1136 452C                                           l1320 0972  
                                         l1312 082E                                           l1304 0702  
                                         l1080 74E4                                           l1129 4484  
                                         l1321 0928                                           l1402 899C  
                                         l2202 4F34                                           l1314 0876  
                                         l1306 0754                                           l1082 7550  
                                         l1331 0AB0                                           l1323 094E  
                                         l1083 7522                                           l1404 89A4  
                                         l2036 9180                                           l1500 1622  
                                         l2220 5EBC                                           l1340 0D60  
                                         l1316 08E0                                           l1308 07A6  
                                         l1260 013A                                           l1501 1638  
                                         l2221 5EB8                                           l1413 8F98  
                                         l2301 8ADE                                           l1317 08BC  
                                         l1077 74C4                                           l1406 89AC  
                                         l2206 4F5A                                           l2062 82CA  
                                         l1510 16B0                                           l2230 5FD6  
                                         l2302 8AD4                                           l1350 0FE0  
                                         l1342 0DE0                                           l1326 09BA  
                                         l1254 003E                                           l2207 4F62  
                                         l2063 82BE                                           l1511 16C2  
                                         l1503 1648                                           l2223 5F02  
                                         l1079 7502                                           l1424 8A64  
                                         l2208 4F64                                           l2160 4C70  
                                         l2072 875C                                           l1600 211A  
                                         l1512 1DB8                                           l1520 18FE  
                                         l1504 1642                                           l2240 6044  
                                         l2216 5E7C                                           l1360 12A0  
                                         l1352 1198                                           l1344 0E60  
                                         l1336 0C8E                                           l1328 0C3C  
                                         l1272 0408                                           l1280 0338  
                                         l1264 01A0                                           l1256 007A  
                                         l2073 8750                                           l1601 208A  
                                         l1521 19E0                                           l1513 174A  
                                         l2233 600C                                           l2225 5F2A  
                                         l2217 5E78                                           l2321 88DA  
                                         l1329 09F4                                           l1273 03E4  
                                         l1281 0350                                           l2066 82FE  
                                         l2250 45D2                                           l1530 1A58  
                                         l1514 1798                                           l1506 1688  
                                         l2242 6088                                           l2234 5FEE  
                                         l2226 5FD8                                           l2322 88D4  
                                         l2402 816C                                           l1362 12E2  
                                         l1354 11DA                                           l1346 0EE0  
                                         l1338 0CE0                                           l1274 0398  
                                         l1282 0368                                           l1266 0204  
                                         l1258 00CC                                           l1427 8932  
                                         l2171 4D94                                           l2067 830C  
                                         l2251 45CE                                           l1507 165C  
                                         l2243 60AC                                           l2227 5F88  
                                         l2307 89D2                                           l2315 8E80  
                                         l2403 80FA                                           l2331 872A  
                                         l1283 0380                                           l1275 02D8  
                                         l1428 8962                                           l2172 4D72  
                                         l2164 4CBC                                           l2076 8784  
                                         l2252 45E2                                           l1452 5D04  
                                         l1524 197A                                           l1516 1806  
                                         l2244 60D6                                           l2228 5FB0  
                                         l2308 89C8                                           l2316 8E76  
                                         l2404 8164                                           l2332 871A  
                                         l1356 121C                                           l1348 0F60  
                                         l1292 0516                                           l1276 03C8  
                                         l1268 02A0                                           l2181 4DDC  
                                         l2173 4D80                                           l2165 4CB8  
                                         l2077 8792                                           l2261 4800  
                                         l1517 1886                                           l1509 169C  
                                         l2245 60E2                                           l1381 883C  
                                         l1277 02F0                                           l1269 025A  
                                         l2190 4EAE                                           l2182 4DE0  
                                         l2174 4D84                                           l2270 487C  
                                         l2262 47E2                                           l2254 4612  
                                         l1462 3B3A                                           l1550 1BFC  
                                         l1542 1B32                                           l1534 1ACA  
                                         l1470 13C2                                           l2246 60E4  
                                         l1382 881E                                           l1358 125E  
                                         l1294 0568                                           l1286 0458  
                                         l1278 0308                                           l2167 4D18  
                                         l2159 4C74                                           l2271 489A  
                                         l2255 460E                                           l1455 5DF4  
                                         l1463 3CC0                                           l1543 1B24  
                                         l1535 1AE4                                           l1519 18B4  
                                         l2343 81F2                                           l1279 0320  
                                         l2192 4EC4                                           l2168 4CDC  
                                         l2360 6DF0                                           l2352 6D8A  
                                         l2256 4622                                           l1552 1C2E  
                                         l1480 1582                                           l1472 13DE  
                                         l2344 818A                                           l2328 86DE  
                                         l1296 05BA                                           l1288 04C4  
                                         l2185 4E7A                                           l2177 4DF2  
                                         l2353 6D9A                                           l2273 48BE  
                                         l2257 4640                                           l1465 3D86  
                                         l1561 1E08                                           l1553 1C32  
                                         l1481 1556                                           l1473 13D6  
                                         l1385 8828                                           l2345 81C6  
                                         l2329 870E                                           l1289 04A0  
                                         l1394 897C                                           l2194 4ECE  
                                         l2178 4DB8                                           l2362 6E3A  
                                         l2354 6DB8                                           l2274 48DC  
                                         l1458 3B6C                                           l1554 1C4A  
                                         l1546 1BF0                                           l1538 1B12  
                                         l1482 1502                                           l1810 7CE4  
                                         l1386 8832                                           l1298 060C  
                                         l2187 4E8A                                           l2363 6E2E  
                                         l1459 3A74                                           l1571 1EE0  
                                         l1563 1E2C                                           l1555 1D94  
                                         l1547 1B5C                                           l1539 1B04  
              ??_ADCC_DischargeSampleCapacitor 0100                                           l1396 8984  
                                         l2356 6DCA                                           l2268 4838  
                                         l1572 1E88                                           l1556 1CAC  
                                         l1492 1594                                           l1812 7D2C  
                                         l2357 6DBE                                           l1581 1F60  
                                         l1565 1ECA                                           l1549 1C0A  
                                         l1485 16C8                                           l1469 13B0  
                                         l1398 898C                                           l1582 1F68  
                                         l1566 1E46                                           l1558 1DAE  
                                         l1494 1598                                           l1478 143A  
                                         l2199 4EEE                                           l2367 6E58  
                                         l2359 6E08                                           l1831 8258  
                                         l1583 1F8C                                           l1559 1DA0  
                                         l1495 15C0                                           l1815 7D7C  
                                         l2368 6E8A                                           l1832 8250  
                                         l1584 1F94                                           l1576 1EFC  
                                         l1496 15D0                                           l1488 1590  
                                         l1816 7D3E                                           l1921 7BB2  
                                         l1841 8530                                           l1585 1FCC  
                                         l1489 1736                                           l1497 15CA  
                                         l1809 7CEA                                           l1930 7BF2  
                                         l1922 7BA2                                           l1850 8582  
                                         l1842 853C                                           l1586 1FB2  
                                         l1578 1F1C                                           l1818 7DB0  
                                         l2298 8AC4                                           l1835 8278  
                                         l1595 2120                                           l1579 1F3E  
                                         l2299 8ABE                                           l1836 8282  
                                         l1828 822A                                           l1844 8552  
                                         l1837 8290                                           l1829 823A  
                                         l1845 854A                                           l1597 2102  
                                         l2397 8E50                                           l1598 2006  
                         _ADCC_StartConversion 9350                                           l1927 7BD6  
                                         l1919 7B46                                           l1928 7BCA  
                                         l1872 7272                                           l1848 856A  
                                         l1849 8574                                           l1890 7632  
                                         l1874 7290                                           l1891 7670  
                                         l1875 72D2                                           l1892 76AE  
                                         l1884 7364                                           l1876 7302  
                                         l1980 70A8                                           l1885 7358  
                                         l1878 7340                                           l1982 70E4  
                                         l1879 7330                                           l1983 70D4  
                                         l1896 8FC0                                           l1976 701A  
                                         l1889 75FE                                           l1978 7046  
                                         l1979 7080                                           l1988 7108  
                                         l1989 70FC                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC5  
                                         STR_2 FFB0                                           STR_3 FFB9  
                                         STR_4 F123                                           STR_6 FFB0  
                                         STR_7 FFB9                                           STR_9 FFBD  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 019D                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM 8A16                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                         _Irms 01C3                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 8B00                ??_ADCC_HasAccumulatorOverflowed 0001  
                                         _Vrms 01BF                                           abs@a 0076  
                                         _acos 85FC                                           _fabs 8DF8  
               ringBufferLUT@max_current_print 02AA                                           _atan 6B12  
                                         _asin 52BE                                           _atoi 7CE2  
                                         _main 8068                           ?_saveSRAMMaxToEEPROM 0001  
                                         _line 0240                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                           _sqrt 58BC  
                                 i2___flneg@f1 002C                  __end_of_ADCC_ClearAccumulator 939E  
                                         sin@f 0088                                           sin@y 008C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 010A                                _timer5ReloadVal 01DB  
                                 i2___fltol@f1 006C                                ___fldiv@new_exp 014E  
                              __end_ofi2_scale 4238                   __end_of_EUSART2_Transmit_ISR 8ED8  
                              __end_ofi2_putch 9374                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
              readDoubleFromEEPROM@output_data 011D                       __size_ofi2_EUSART2_Write 004A  
                                        ??_abs 0078                      __size_of_DATAEE_WriteByte 003E  
                              _timer7ReloadVal 01DD                                          ??_sin 005E  
                         ?_writeDoubleToEEPROM 011B                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0124                               __end_of_HLVD_ISR 938C  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 91FE  
                     ?_terminal_textAttributes 01B2                              ??_TMR7_WriteTimer 0102  
                                        l20000 74DA                                          l20154 8856  
                                        l20156 8860                                          ?_acos 00A9  
                                        ?_fabs 0030                                          l19068 2102  
                                        l19420 7D78                                          l19236 80FA  
                                        l19270 8A30                                          l19096 871A  
                                        l17908 76E6                                          l18902 1B24  
                                        l19622 024A                                          l18920 1BFC  
                                        l19632 029A                                          l18850 194C  
                                        l18842 18FE                                          l18770 1642  
                                        l19548 60D6                                          l18870 1A5C  
                                        l18774 165C                                  ___fltol@sign1 0180  
                                        l18980 1E4A                                          l19772 09E4  
                                        l19790 0AB0                                          l19782 0A2A  
                                        l18896 1B04                                          ?_atan 007C  
                                        l18994 1E8C                                          l19788 0A60  
                                        l19990 74B4                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 4F80                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 6100  
                                        _ADREF 000F58                                __end_of___awdiv 829A  
                              __end_of___flneg 8FD2                                          _ADPRE 000F5E  
                                        STR_10 FFC1                                          STR_11 FFF6  
                                        STR_12 FFCA                                          STR_20 FFC9  
                                        STR_13 FCD5                                          STR_21 FFCC  
                                        STR_30 FF39                                          STR_14 FFDF  
                                        STR_22 FFD2                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_40 EB01                                          STR_16 FFF1  
                                        STR_24 FFDE                                          STR_32 FFD5  
                                        STR_41 FDF8                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_18 FFCA                                          STR_42 FFB0  
                                        STR_26 FFEA                                          STR_34 FFE1  
                                        STR_50 FFB5                                          STR_43 FFB9  
                                        STR_19 FFFB                                          STR_27 FFF0  
                                        STR_35 FFE7                                          STR_51 FD88  
                                        STR_28 FFF0                                          STR_36 FFED  
                                        STR_44 FFA0                                          STR_60 FF5E  
                                        STR_52 F816                                __end_of___awmod 858C  
                                        STR_29 FFFB                                          STR_45 FFB0  
                                        STR_37 FFF3                                          STR_61 FFA6  
                                        STR_53 FF48                                          STR_38 FFF3  
                                        STR_46 FFB9                                          STR_62 FF94  
                                        STR_70 FC93                                          STR_54 F353  
                                        STR_39 FFFD                                          STR_63 FF8D  
                                        STR_55 FF09                                          STR_71 FE4E  
                                        STR_47 FE2E                                          STR_64 FEE0  
                                        STR_80 FD65                                          STR_72 FCEC  
                                        STR_48 F718                                          STR_56 F4EE  
                                        _ADRPT 000F66                                          STR_49 FF9A  
                                        STR_57 FF69                                          STR_65 FEEE  
                                        STR_73 FDBB                                          STR_81 FA8D  
                                        STR_82 FF16                                          STR_66 FE9A  
                                        STR_90 FD01                                          STR_58 F431  
                                        STR_74 F3EF                                          STR_67 FCC1  
                                        STR_91 FAF7                                          STR_75 F8FC  
                                        STR_59 F642                                          STR_83 F563  
                                        STR_68 FF73                                          STR_84 FEA8  
                                        STR_92 FE7C                                          STR_76 FE0E  
                                        STR_77 FA43                                          STR_85 FA1E  
                                        STR_69 F7E6                                          STR_93 F59D  
                                        STR_94 FE8B                                          STR_78 FE6D  
                                        STR_86 FC47                                          STR_87 FB5C  
                                        STR_79 FAB1                                          STR_95 F9CF  
                                        STR_96 FE3E                                          STR_88 FD16  
                              __end_of___flmul 48F2                                          STR_89 FAD5  
                                        STR_97 F9A6                                          STR_98 FF3C  
                                        STR_99 F929                                __end_of___flsub 8C70  
                              __end_of___fltol 7C04                                __end_of___lldiv 831E  
                                        ?_sqrt 006C                                ___awdiv@divisor 011F  
                              __end_of___llmod 87A4                                          u24000 47A4  
                                        u24005 479A                                          _T5CLK 000FC6  
                                        u24200 8556                                          u24050 4834  
                                        u24140 825C                                          u25100 194C  
                                        u24400 710E                                          u24080 488A  
                                        u25200 1B40                                          _T5CON 000FC3  
                                        u24321 6FFE                                          u24090 48A8  
                                        u23620 4D48                                          u25140 1A9A  
                                        u25060 18C4                                          u24341 702A  
                                        u23630 4D58                                          u25230 1C18  
                                        u25070 1910                                          _T7CLK 000F33  
                                        u23800 4ED2                                          u23640 4D5A  
                                        u25240 1C28                                          _T6CON 000FB1  
                                        u26050 6040                                          u24620 82CE  
                                        u25500 1FEA                                          u26220 029A  
                                        u23830 4EEA                                          u23670 4D9C  
                                        u24550 7B64                                          u24470 736A  
                               __CFG_DEBUG$OFF 000000                                          u25520 2132  
                                        u26080 6096                                          _T7CON 000F30  
                                        u24650 8760                                          u24730 6E44  
                                        u25530 2162                                          u24810 1484  
                                        u26090 60BA                                          u26170 010A  
                                        u24555 7B5A                                          u24900 15FE  
                                        u24820 14C0                                          u25620 88FC  
                                        u26500 0A52                                          u24590 7BDC  
                                        u24910 1604                                          u24830 14C8  
                                        u26510 0A60                                          u25615 8DB8  
                                        u25720 8962                                          u25616 8DBA  
                                        u23880 4F40                                          u24840 14EA  
                                        u25537 2158                                          u24817 147A  
                                        u27057 807C                                          u25490 1FD4  
                                        u25650 812C                                          u25810 820A  
                                        u24907 15F4                                          u24827 14B6  
                                        u25627 88F2                                          u24860 153A  
                                        u24780 1400                                          u25740 8A0A  
                                        _T6HLT 000FB2                                          u23990 462E  
                                        u24870 1578                                          u24790 1428  
                                        u24847 14E0                                          u24960 167E  
                                        u25761 8814                     _ADCC_ADTI_InterruptHandler 022E  
                                        u26490 0A2A                                          u24867 1530  
                                        u24787 13F6                                          u24980 16F8  
                                        u26820 74DA                                          u24877 156E  
                                        u24797 141E                                          u24967 1674  
                                        u25775 8DE8                                          u24987 16EE  
                                        i1l223 007C                                          i1l225 009C  
                                        i1l403 8ED2                                          i1l227 00A8  
                                        i1l404 8ECE                                          i1l229 00B2  
                                        i2l212 7E24                                          i2l214 7E30  
                                        i2l216 7E3A                                          i1l640 910E  
                                        i2l410 7EB6                                          i2l411 7ED8  
                                        i2l414 7EDC                                          i2l416 7F2C  
                                        i2l409 7E92                                          _T6TMR 000FAF  
                                        i2l391 8BB4                                          i2l392 8BDA  
                                        i2l393 8BD8                                          i2l714 9210  
                                        _T6RST 000FB4                                          i2l388 8B9E  
                                        i2l389 8B9A                                          i1l993 8D7A  
                              ___awdiv@counter 0121                                          i2l997 38E4  
                                        i2l998 2F40                                          i2l999 2FCA  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 737C  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a D92B                             __end_ofsin@coeff_b D94F  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 01C7  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  i2___fladd@grs 006B  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 8F40                               __end_of_TMR6_ISR 90A8  
                             __end_of_TMR7_ISR 8F0C                                _DATAEE_ReadByte 9234  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                    ??_terminal_ringBufferPull 01B8                                __end_of_dpowers D8D3  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 780A  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 84A0  
                                        _errno 023A                          ?_ADCC_StartConversion 0001  
                                        _scale 3914                                __end_of_isdigit 9188  
                                        atan@f 007C                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch 92EE                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 780A                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address D8FB  
                _max_POS3P3_ADC_Result_address D8F9                               __end_ofi2___wmul 9142  
                        ??_saveSRAMMaxToEEPROM 0127                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                                          wtemp6 0060  
                                i2___flmul@grs 003E                                __end_of_strncmp 8188  
                              __end_of_strncpy 873C                               __end_ofi2_fround 6662  
               ?_INTERRUPT_InterruptManagerLow 0001                    ringBufferLUT@max_temp_print 02BA  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                                  i2printf@width 00AB  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00DE  
                           __size_ofi2___lldiv 0082                    ??_ADCPostProcessingCallback 005E  
                           __size_ofi2___llmod 0066                               __end_ofi2_printf 2F34  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 9334         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 9326                                _TMR5_Initialize 8B4C  
                              __initialization 7FD6                              i2___lldiv@divisor 0005  
                                 __end_of_acos 866A                                   __end_of_fabs 8E34  
                                 __end_of_atan 6D48                                   __end_of_asin 55C2  
                                 __end_of_atoi 7DBA                                   __end_of_main 80F8  
                            i2___lldiv@counter 000D                               _max_Irms_address D8FD  
                                 __end_of_sqrt 5B84                                     i2printf@ap 0099  
                                   i2printf@cp 0095                          ??_writeDoubleToEEPROM 0121  
                        __end_of_ringBufferLUT 13A2                                 __CFG_SCANE$OFF 000000  
                        _max_POS3P3_ADC_Result 020C                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                       ??_acos 005E                                         ??_fabs 0034  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 02D1  
             __end_of_recoverSRAMMaxFromEEPROM 7A26                       _TMR5_SetInterruptHandler 9318  
                                       ??_sqrt 0070                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 0060                           __size_of__tdiv_to_l_ 0134  
                                  ?i2___xxtofl 0005                         getUserID@initialOffset 0125  
                              _TMR6_Initialize 8F40                             _TRIAC_Firing_Angle 00F2  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 86D4                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01E1  
                                       ?_floor 0076                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 016F                                         STR_100 FEB6  
                                       _ADLTHL 000F6A                                         STR_101 FC10  
                                       STR_102 FBB9                                         STR_110 F2FD  
                                       STR_103 FD99                                         STR_111 F297  
                                       STR_120 FDCC                                         STR_104 FB7C  
                                       STR_112 F873                                         STR_113 FA68  
                                       STR_121 F780                                         STR_105 F6AE  
                                       STR_122 FF53                                         STR_130 FDAA  
                                       STR_106 F953                                         STR_114 F471  
                                       _ADRESH 000F64                                         STR_107 FF23  
                                       STR_123 F8A1                                         STR_131 F678  
                                       STR_115 F3A8                                         STR_116 FE1E  
                                       STR_132 FDDD                                         STR_124 FD2B  
                                       STR_108 FC61                                         STR_140 FBF3  
                                       STR_109 FC7A                                         STR_125 F74C  
                                       STR_133 F60C                                         STR_117 F529  
                                       STR_141 ED61                                         STR_142 FF7D  
                                       STR_118 FEC4                                         STR_126 FD52  
                                       STR_134 FBD6                                         STR_150 FB9B  
                                       _ADRESL 000F63                                         STR_127 F7B3  
                                       STR_119 F6E3                                         STR_135 E49A  
                                       STR_143 D94F                                         STR_151 FF30  
                                       STR_144 FFAB                                         STR_128 FED2  
                                       STR_136 FB3B                                         STR_152 FEFC  
                                       STR_160 FC2C                                         STR_129 F8CF  
                                       STR_145 EF4D                                         STR_137 E834  
                                       STR_153 FF73                                         STR_161 FCD7  
                                       STR_138 FB19                                         STR_146 F5D5  
                                       STR_162 FCAB                                         STR_154 FDEE  
                                       STR_163 FDEE                                         STR_147 F4B0  
                                       STR_139 EB04                                         STR_155 FE5E  
                                       STR_164 FF86                                         STR_148 F9F7  
                                       STR_156 FDFE                                         STR_165 FD77  
                                       STR_149 F845                                         STR_157 FD3F  
                                       STR_158 F986                                         STR_159 F97D  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                           _readDoubleFromEEPROM 8922  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1012 31AA                                         i2l1004 2FD2  
                                       i2l1013 34A0                                         i2l1005 30DC  
                                       i2l1030 38D6                                         i2l1022 3606  
                                       i2l1014 33EE                                         i2l1023 36E8  
                                       i2l1015 3306                                         i2l1008 30E4  
                                       i2l1017 3446                                         i2l1009 31A2  
                                       i2l1026 36F0                                         i2l1027 38CE  
                                       i2l1019 35FE                                         i2l2202 5272  
                                       i2l2220 6170                                         i2l2036 91BE  
                                       i2l1500 23EC                                         i2l2221 616C  
                                       i2l1501 2402                                         i2l2206 5298  
                                       i2l2230 628A                                         i2l2062 83D0  
                                       i2l1510 247A                                         i2l2207 52A0  
                                       i2l2223 61B6                                         i2l2151 55F6  
                                       i2l2063 83C4                                         i2l1511 248C  
                                       i2l1503 2412                                         i2l2208 52A2  
                                       i2l2160 4FAE                                         i2l2240 62F8  
                                       i2l2216 6130                                         i2l2152 5714  
                                       i2l2072 87C2                                         i2l1600 2EDE  
                                       i2l1512 2B7E                                         i2l1520 26C6  
                                       i2l1504 240C                                         i2l2233 62C0  
                                       i2l2225 61DE                                         i2l2217 612C  
                                       i2l2153 5784                                         i2l2073 87B6  
                                       i2l1601 2E4E                                         i2l1521 27AA  
                                       i2l1513 2514                                         i2l2250 4922  
                                       i2l2242 633C                                         i2l2234 62A2  
                                       i2l2226 628C                                         i2l2154 58AA  
                                       i2l2066 8404                                         i2l1530 2822  
                                       i2l1514 2562                                         i2l1506 2452  
                                       i2l2171 50D2                                         i2l2251 491E  
                                       i2l2243 6360                                         i2l2227 623C  
                                       i2l2067 8412                                         i2l1507 2426  
                                       i2l2172 50B0                                         i2l2164 4FFA  
                                       i2l2252 4932                                         i2l2244 638A  
                                       i2l2228 6264                                         i2l2076 87EA  
                                       i2l1452 6526                                         i2l1524 2742  
                                       i2l1516 25CE                                         i2l2181 511A  
                                       i2l2173 50BE                                         i2l2165 4FF6  
                                       i2l2261 4B50                                         i2l2245 6396  
                                       i2l2077 87F8                                         i2l1517 264C  
                                       i2l1509 2466                                         i2l2190 51EC  
                                       i2l2182 511E                                         i2l2174 50C2  
                                       i2l2270 4BCC                                         i2l2262 4B32  
                                       i2l2254 4962                                         i2l2246 6398  
                                       i2l1462 3FCC                                         i2l1550 29C4  
                                       i2l1542 28FC                                         i2l1534 2894  
                                       i2l1470 2190                                         i2l2167 5056  
                                       i2l2159 4FB2                                         i2l2271 4BEA  
                                       i2l2255 495E                                         i2l1455 660E  
                                       i2l1463 4148                                         i2l1543 28EE  
                                       i2l1535 28AE                                         i2l1519 267A  
                                       i2l2192 5202                                         i2l2168 501A  
                                       i2l2256 4972                                         i2l2360 6F40  
                                       i2l2352 6EDA                                         i2l1552 29F6  
                                       i2l1480 234C                                         i2l1472 21AC  
                                       i2l2185 51B8                                         i2l2177 5130  
                                       i2l2273 4C0E                                         i2l2257 4990  
                                       i2l2353 6EEA                                         i2l2281 58FE  
                                       i2l1465 4208                                         i2l1561 2BCE  
                                       i2l1553 29FA                                         i2l1481 2320  
                                       i2l1473 21A4                                         i2l2194 520C  
                                       i2l2178 50F6                                         i2l2274 4C2C  
                                       i2l2362 6F8A                                         i2l2354 6F08  
                                       i2l2290 59F2                                         i2l1458 3FFC  
                                       i2l1554 2A12                                         i2l1546 29B8  
                                       i2l1538 28DC                                         i2l1482 22CE  
                                       i2l2187 51C8                                         i2l2363 6F7E  
                                       i2l2291 5A38                                         i2l2283 590E  
                                       i2l1459 3F0C                                         i2l1571 2CA6  
                                       i2l1563 2BF2                                         i2l1555 2B5A  
                                       i2l1547 2926                                         i2l1539 28CE  
                                       i2l2268 4B88                                         i2l2356 6F1A  
                                       i2l2292 5A60                                         i2l2284 5928  
                                       i2l1572 2C4E                                         i2l1556 2A74  
                                       i2l1492 235E                                         i2l2357 6F0E  
                                       i2l2373 7854                                         i2l1581 2D26  
                                       i2l1565 2C90                                         i2l1549 29D2  
                                       i2l1485 2492                                         i2l1469 217E  
                                       i2l1654 904E                                         i2l2382 84BE  
                                       i2l2374 7842                                         i2l2294 5B4A  
                                       i2l2286 5962                                         i2l1582 2D2E  
                                       i2l1566 2C0C                                         i2l1558 2B74  
                                       i2l1494 2362                                         i2l1478 2208  
                                       i2l2199 522C                                         i2l2367 6FA8  
                                       i2l2359 6F58                                         i2l2287 598E  
                                       i2l1831 8360                                         i2l1583 2D52  
                                       i2l1559 2B66                                         i2l1495 238A  
                                       i2l2368 6FDA                                         i2l2376 7872  
                                       i2l2288 59EC                                         i2l1752 5318  
                                       i2l1832 8358                                         i2l1584 2D5A  
                                       i2l1576 2CC2                                         i2l1496 239A  
                                       i2l1488 235A                                         i2l1921 7C90  
                                       i2l2377 790A                                         i2l2289 5A96  
                                       i2l1841 85A0                                         i2l1585 2D92  
                                       i2l1489 2500                                         i2l1497 2394  
                                       i2l1930 7CD0                                         i2l1922 7C80  
                                       i2l1754 5440                                         i2l1850 85F2  
                                       i2l1842 85AC                                         i2l1586 2D78  
                                       i2l1578 2CE2                                         i2l1771 6B56  
                                       i2l1755 5520                                         i2l1835 8380  
                                       i2l1595 2EE4                                         i2l1579 2D04  
                                       i2l1836 838A                                         i2l1828 8332  
                                       i2l1844 85C2                                         i2l1773 6BC2  
                                       i2l1837 8398                                         i2l1829 8342  
                                       i2l1845 85BA                                         i2l1597 2EC6  
                                       i2l1862 7B0A                                         i2l1774 6D0A  
                                       i2l1598 2DCC                                         i2l1863 7A72  
                                       i2l1927 7CB4                                         i2l1919 7C24  
                                       i2l1928 7CA8                                         i2l1776 6D22  
                                       i2l1872 739A                                         i2l1848 85DA  
                                       i2l1849 85E4                                         i2l1890 7752  
                                       i2l1874 73B8                                         i2l1891 7790  
                                       i2l1875 73FA                                         i2l1892 77CE  
                                       i2l1868 8E22                                         i2l1884 748C  
                                       i2l1876 742A                                         i2l1980 71DA  
                                       i2l1885 7480                                         i2l1878 7468  
                                       i2l1982 7216                                         i2l1879 7458  
                                       i2l1983 7206                                         i2l1896 901C  
                                       i2l1976 714C                                         i2l1889 771E  
                                       i2l1978 7178                                         i2l1979 71B2  
                                       i2l1988 723A                                         i2l1989 722E  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 004D                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                             __end_of___xxtofl 6E9C          __end_of_ADCC_DischargeSampleCapacitor 9384  
       __size_of_ADCC_DischargeSampleCapacitor 0008                  _ADCC_DischargeSampleCapacitor 937C  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                               i2___fladd@aexp 0069                                 i2___fladd@bexp 006A  
        __end_of_ADCC_HasAccumulatorOverflowed 936A         __size_of_ADCC_HasAccumulatorOverflowed 000C  
                _ADCC_HasAccumulatorOverflowed 935E                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 8A66                                   i2_scale$4193 004D  
                             __end_of__powers_ D877                __end_of_terminal_ringBufferPull 75C8  
                                       ___flge 75C8                              _ADCC_ThresholdISR 90A8  
                                    ??___fladd 0131                                         ___wmul 9058  
                                    ??___fldiv 0145                                      ??___awdiv 0121  
                                    ??___flneg 0129                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___flmul 015E  
                                    ??___flsub 0145                                      ??___fltol 017C  
                                    ??___lldiv 011F                                      ??___llmod 012C  
                           ?_ADCC_ThresholdISR 0001                       ??_terminal_setCursorHome 01B2  
                                       _fround 5B84                                         clear_0 802E  
                                       clear_1 803A                                         clear_2 8046  
                         _eusart2RxStringReady 07D8                               ___awdiv@quotient 0123  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0119                                 i2___fldiv@sign 001F  
                              ___awmod@counter 011B                                         _printf 13A2  
                                       _strcat 8AB4                                         _strchr 8E34  
                      __end_of_DATAEE_ReadByte 924E                                         _strcmp 89C6  
                                       _strcpy 8E6C                                         _strlen 88CA  
                               i2___awdiv@sign 000C                                         _strstr 8188  
                                       floor@i 007A                                         floor@x 0076  
                 getCauseOfResetString@strings 02D3                               _background_color 023D  
                              _ADCC_Initialize 886A                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 2F34                                 _PMD_Initialize 91C6  
                      FLASH_ReadWord@flashAddr 011B                              __end_ofi2___fladd 52BE  
                                    ??_isdigit 0117                              __end_ofi2___fldiv 63B4  
                            __end_ofi2___awdiv 83A2                              __end_ofi2___flneg 902E  
                            __end_ofi2___awmod 85FC                              __end_ofi2___flmul 4C42  
                            __end_ofi2___flsub 8CB8                              __end_ofi2___fltol 7CE2  
                            __end_ofi2___lldiv 8424                                         sin@sgn 0098  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod 880A  
                                 __mediumconst D842                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion 93A4                           _EUSART2_Transmit_ISR 8EA2  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117   ADCC_SetADTIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                        ?_readDoubleFromEEPROM 0119                                 i2___flmul@aexp 003D  
                               i2___flmul@bexp 0042                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 01B2  
                               i2___flmul@sign 003C                                 i2___flmul@temp 0047  
                               i2___flmul@prod 0043                  __size_of_INTERRUPT_Initialize 0014  
                              _eusart2RxBuffer 0380                                     ___flge@ff1 0117  
                                   ___flge@ff2 011B                        __end_of_TMR5_Initialize 8B96  
                                 ___xxtofl@arg 0121                              __end_ofi2_isdigit 91C6  
                                 ___xxtofl@exp 0120                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00DE                              _SYSTEM_Initialize 8FD2  
                                 ___xxtofl@val 0117           __end_of_TMR7_DefaultInterruptHandler 93AA  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 93A8  
                              _eusart2TxBuffer 0300                                     __accesstop 0060  
                      __end_of__initialization 805E                                 i2___fltol@exp1 0075  
                                   ___flneg@f1 0125                                      ?_HLVD_ISR 0001  
                               i2printf@tmpval 009B                             ?_SYSTEM_Initialize 0001  
                                 eval_poly@res 0078                                  ___rparam_used 000001  
                                   ___fltol@f1 0178                                _TMR5_WriteTimer 91FE  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 000E                      __end_of_ADCC_ThresholdISR 90D0  
                            i2___llmod@counter 0016                           ?_ADCC_StopConversion 0001  
                           i2__tdiv_to_l_@quot 000A              terminal_ringBufferPull@charNumber 02CB  
                          __size_ofi2___xxtofl 0150                     __end_of_getMajorRevisionID 8DF8  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 01B2                                   __pidataBANK0 938C  
                                 __pidataBANK1 93B0                                   __pidataBANK2 9142  
                          ??_SYSTEM_Initialize 011C                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                             _DATAEE_WriteByte 8D7E                                  __end_of_floor 791C  
                                __end_of_frexp 851A                                  __end_of_scale 3DB8  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 92FC  
                            ??_HLVD_Initialize 0117                                    i2printf@idx 0094  
                     ??_terminal_clearTerminal 01B2                                    i2printf@len 0097  
                                  i2printf@exp 009F                                    i2printf@val 00A1  
                      __end_of_TMR6_Initialize 8F72                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize 91E2                          _getCauseOfResetString 8F72  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read 8C28  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 7120  
                                   __div_to_l_ 7252                      __size_ofi2_TMR7_StopTimer 0006  
                           __size_of_getUserID 0044                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                                    ?i2_printf 0088                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize 9000  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01E3  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01BB  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01E0                                  _eusart2TxTail 01E2  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 8AB4  
                           __size_of_peakToRMS 024A                                     ??_HLVD_ISR 0100  
            __size_of_recoverSRAMMaxFromEEPROM 010A                      ?_recoverSRAMMaxFromEEPROM 0001  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011B                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 90F6                          ??_ADCC_StopConversion 0001  
                             ??_FVR_Initialize 0117                                 _peakToRMS$4180 00BD  
                               _peakToRMS$4178 00C1                                 _peakToRMS$4179 00B9  
                        ringBufferLUT@arg_buff 02C2                                    _Irms_offset 02EB  
                                      ?___flge 0117                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_2424 02CD                                        ?___wmul 0117  
                        _currentMeasuredToPeak 8424                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 9318                        __end_of_ADCC_Initialize 88CA  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 02AE                                        ?_fround 016F  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler 9350          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler 9342                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0182                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue 9262                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 003C                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strcpy 0117                                        ?_strlen 0117  
                               _FLASH_ReadByte 921A            ringBufferLUT@max_voltage_print_2762 02BE  
          ringBufferLUT@max_voltage_print_2756 02B6                                        ?_strstr 0126  
                             ?_DATAEE_ReadByte 0117                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 8CFC                                        i2l11320 7806  
                                      i2l12248 638A                                        i2l15004 2714  
                                      i2l15024 2826                                        i2l15050 28CE  
                                      u1752_41 7130                                        i2l15222 2EC6  
                                      i2l15134 2C10                                        i2l15056 28EE  
                                      i2l15074 29C4                                        i2l15148 2C52  
                                      u1754_41 715C                                        i2l14924 240C  
                                      i2l14928 2426                                        i2l14996 26C6  
              writeDoubleToEEPROM@input_double 011B                                      ?___xxtofl 0117  
                                      _SP2BRGH 000EF4                                     ??i2_fround 004D  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 7F34  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 008A  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                       ??_readDoubleFromEEPROM 011D                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE            __end_of_max_Temp_ADC_Result_address D8F7  
                  _max_Temp_ADC_Result_address D8F5                       _acquisitionTimerCallback 929C  
                     __end_of_max_Irms_address D8FF                        __end_of_TMR5_WriteTimer 921A  
             __size_of_terminal_textAttributes 0368                                        i2_scale 3DB8  
                             ?_TMR5_Initialize 0001                           DATAEE_WriteByte@bAdd 0117  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch 936A  
                              i2___fladd@signs 0068           __end_of_terminal_textAttributesReset 929C  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 928A  
                            __end_of__npowers_ D8AB                                        __Hparam 0000  
                   __size_of_ADCC_ThresholdISR 0028             __end_of_max_FVR_ADC_Result_address D8F5  
                   _max_FVR_ADC_Result_address D8F3                                     _scale$3990 0173  
                                      __Lparam 0000                              __end_of_getUserID 8CFC  
                        _ADCC_ClearAccumulator 9398                     ??_TMR5_SetInterruptHandler 011A  
                               _adc_error_flag 02F0                                __size_of___flge 0122  
                                      ___fladd 4C42                                        ___fldiv 5E4A  
                                      ___awdiv 8214                                        ___flneg 8FA2  
                                      ___awmod 851A                                        ___flmul 45A0  
                                      ___flsub 8C28                                        ___fltol 7B26  
                                      ___lldiv 829A                                __size_of___wmul 0028  
                                      ___llmod 873C                         __end_of_FLASH_ReadByte 9234  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord 8D3E  
                                      __pcinit 7FD6                              __end_of_eval_poly 7B26  
                              __size_of_fround 02C6                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                      __ptext0 8068                 readDoubleFromEEPROM@byte_index 0121  
                                      __ptext1 92AE                                        __ptext2 74A4  
                                      __ptext3 0000                                        __ptext4 928A  
                                      __ptext5 4238                                        __ptext6 86D4  
                                      __ptext7 8AB4                                        __ptext8 92BE  
                                      __ptext9 8188                              __end_of_peakToRMS 6B12  
                              __size_of_printf 0DCE                  currentMeasuredToPeak@Measured 0099  
                   ringBufferLUT@angle_degrees 02A6                  ?_ADCC_SetADTIInterruptHandler 0117  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                                i2_fround$4191 0051                                  i2_fround$4192 004D  
                              __size_of_strcmp 0050                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers D8F3  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers D8AB  
                        _OSCILLATOR_Initialize 91E2                         ??_EUSART2_Transmit_ISR 0100  
                                 __size_of_abs 002A                                   i2fround@prec 0055  
                                      _isdigit 9166                                atan@val_squared 0089  
                                 __size_of_sin 02FA                                   ??i2___xxtofl 0009  
                                   ??___xxtofl 011B                               ___awmod@dividend 0117  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 008D  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0117  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 0095  
                  __end_of_saveSRAMMaxToEEPROM 68C8                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 02C7                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002E                          i2EUSART2_Write@txData 0001  
                                      _strncmp 80F8                                 __pintcode_body 7DBA  
                                      _strncpy 86D4                           end_of_initialization 805E  
                      __end_of_TMR7_WriteTimer 911C                        getDeviceIDString@F17550 02E5  
                       _terminal_setCursorHome 92AE                          ??_ADCC_GetFilterValue 0003  
                                    _PCON0bits 000FD7                               ?_TMR7_Initialize 0001  
                         _max_POS12_ADC_Result 0208                                      i1u1118_20 8D4A  
                                    i1u1119_28 8D4E                                        int_func 7DBA  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                      __size_of_TMR7_StopTimer 0006                                      i1u2672_28 9094  
                                    i1u2674_28 8EF8                                 i2___xxtofl@arg 000F  
                                    i2u1332_40 5086                                      i2u1333_40 5096  
                                    i2u1350_40 5210                                      i2u1334_40 5098  
                               i2___xxtofl@exp 000E                                      i2u1353_40 5228  
                                    i2u1337_40 50DA                                      i2u1521_40 6B82  
                                    i1u2697_28 0086                                 i2___xxtofl@val 0005  
                                    i2u1370_40 4AF4                                      i2u1522_40 6B84  
                                    i2u1370_45 4AEA                                      i2u1358_40 527E  
                                    i2u1375_40 4B84                                      i2u1369_40 497E  
                                    i2u1481_40 634A                                      i2u1378_40 4BDA  
                                    i2u1562_40 7CBA                                      i2u1570_40 6F94  
                                    i2u1482_40 636E                                      i2u1379_40 4BF8  
                                    i2u1556_40 84E6                                      i2u1556_48 84E8  
                                    i2u1558_40 7C42                                      i2u1662_40 7860  
                                    i2u1478_40 62F4                                      i2u1558_45 7C38  
                                    i2u1751_40 7492                                      i2u1760_40 7240  
                                    i2u1914_40 2D9A                                      i2u1691_40 85C6  
                                    i2u1915_40 2DB0                                      i2u1851_40 2304  
                                    i2u1843_40 21CE                                      i2u1931_40 7ECC  
                                    i2u1851_47 22FA                                      i2u1843_47 21C4  
                                    i2u1668_40 5710                                      i2u1764_40 83D4  
                                    i2u1852_40 2342                                      i2u1844_40 21F6  
                                    i2u1852_47 2338                                      i2u1844_47 21EC  
                                    i2u1669_40 5712                                      i2u1773_40 2FBC  
                                    i2u1685_40 8364                                      i2u1917_40 2EF6  
                                    i2u1861_40 2448                                      i2u1861_47 243E  
                                    i2u1694_40 9366                                      i2u1918_40 2F26  
                                    i2u1846_40 2250                                      i2u1918_47 2F1C  
                                    i2u1846_47 2246                                      i2u1783_40 35F0  
                                    i2u2670_48 90BC                                      i2u1767_40 87C6  
                                    i2u1871_40 268C                                      i2u1863_40 24C2  
                                    i2u1855_40 23C8                                      i2u1847_40 228C  
                                    i2u1863_47 24B8                                      i2u1855_47 23BE  
                                    i2u1847_47 2282                                      i2u1776_40 30CE  
                                    i2u1872_40 26D8                                      i2u1856_40 23CE  
                                    i2u1848_40 2294                                      i2u1785_40 36DA  
                                    i2u1849_40 22B6                                      i2u1849_47 22AC  
                                    i2u1778_40 3194                                ___lldiv@divisor 011B  
                                    i2u1787_40 38C0                                      i2u1875_40 2714  
                                    i2u1885_40 290A                                      i2u2668_48 8F2C  
                  __end_of_writeDoubleToEEPROM 8A66                                      i2u1879_40 2864  
                                    i2u1888_40 29E0                                      i2u1889_40 29F0  
                                    i2u2688_48 7E0E                                ___lldiv@counter 011F  
                           _EUSART2_Initialize 866A                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0099                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 8B96                                  ??_getDeviceID 0124  
                                      printf@c 01B1                                        printf@f 0182  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 6FEC  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
                             ?_ADCC_Initialize 0001                 _ADCPostProcessingCallback$4181 00D6  
               _ADCPostProcessingCallback$4182 00DA                 _ADCPostProcessingCallback$4183 00C9  
               _ADCPostProcessingCallback$4184 00CD                 _ADCPostProcessingCallback$4185 00D1  
                                      sqrt@grs 007B                                        sqrt@exp 007F  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 02CF  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler 930A                          _TMR5_InterruptHandler 0228  
                             i2_TMR7_StopTimer 939E                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 013C                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 011F                                    ___fldiv@grs 0150  
                                  ___fldiv@rem 014A                                i2___fltol@sign1 0074  
                                    i2___fladd 4F80                                      i2___fldiv 6100  
                                    i2___awdiv 831E                                      i2___flneg 9000  
                                    i2___awmod 858C                               __CFG_FEXTOSC$ECH 000000  
                                    i2___flmul 48F2                                      i2___flsub 8C70  
                                    i2___fltol 7C04                                      i2___lldiv 83A2  
                                    i2___llmod 87A4                       __end_of_DATAEE_WriteByte 8DBC  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 92CE                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 13A2                                    ___flmul@grs 0165  
                                  printf@width 01AD                                   _EUSART2_Read 8BE0  
                           i2___llmod@dividend 000E                                _HLVD_Initialize 92DE  
                           i2___awdiv@dividend 0007                         ?_ADCC_ClearAccumulator 0001  
                                    i2_isdigit 91A8                            __size_of__div_to_l_ 012A  
                            __size_of_HLVD_ISR 0008                             _max_FVR_ADC_Result 0200  
                                    _Avg_Power 01BB                   __end_of_INTERRUPT_Initialize 9262  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 76EA                  __end_of_terminal_printNewline 92CE  
                               __end_of___wmul 9080                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID 91A8                                 __end_of_fround 5E4A  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                               i2___wmul@product 0005  
                               __end_of_printf 2170                                  i2_printf$4194 0090  
                           _getMajorRevisionID 8DBC                                 __end_of_strcat 8B00  
                               __end_of_strchr 8E6C                                 __end_of_strcmp 8A16  
                                 i2printf@flag 00A9                                 __end_of_strcpy 8EA2  
                               __end_of_strlen 8922                                   i2printf@fval 00A5  
                               __end_of_strstr 8214                                   i2printf@prec 00AD  
                            __size_ofi2___flge 0120                            start_initialization 7FD6  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 93AE  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 93AC  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 7120  
                                  __end_of_abs 9058                                    __end_of_sin 58BC  
                                    i2printf@c 00AF                                      i2printf@f 0088  
                      _terminal_textAttributes 4238                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                              __size_ofi2_printf 0DC4  
                        __end_of_EUSART2_Write 8B4C                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0281  
                      __end_ofi2_EUSART2_Write 8BE0                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                            DATAEE_ReadByte@bAdd 0117  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 01E4  
                             __CFG_LPBOREN$OFF 000000                                       ??___flge 011F  
                             ??_PMD_Initialize 0117                                       ??___wmul 011B  
              __size_of_heartbeatTimerCallback 0040                           ??_getMajorRevisionID 0122  
                                  __pdataBANK0 00F0                                    __pdataBANK1 01E8  
                                  __pdataBANK2 02D3                                       ??_fround 0173  
                                _ringBufferLUT 0000                 ??_terminal_textAttributesReset 01B4  
                                     ??_printf 018C              getCauseOfReset@return_reset_cause 0117  
         readDoubleFromEEPROM@starting_address 0119                              _POS3P3_ADC_Result 01D3  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 00B1                     __end_of_getMinorRevisionID 90F6  
                                     ??_strstr 012A                                      ___fladd@a 012D  
                                    ___fladd@b 0129                                      _Vpk_const 02EF  
                                   fround@prec 017B                                 _eusart2RxCount 01DF  
                                ?i2__div_to_l_ 0001                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$4186 00AD  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 0280                              __size_of___xxtofl 0154  
                                 _isdigit$3272 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize 92EE                            EUSART2_Write@txData 0117  
                                 _load_on_time 0218                    __end_of_ADCC_StopConversion 93A8  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                                    _asin$4187 00A5                                      _asin$4188 009D  
                                    _asin$4189 0099                                       ?i2_putch 0001  
                                   sin@coeff_a D917                                     sin@coeff_b D93F  
                               _TMR7_StopTimer 9392                          _TMR6_InterruptHandler 0231  
                                    __pnvBANK2 02F7                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 7F34                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 9188  
                                __pmediumconst D842                                       ?___fladd 0129  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                                    __ptext100 737C                                      __ptext101 911C  
                                    __ptext110 52BE                                      __ptext102 87A4  
                                     ?___flneg 0125                                      __ptext111 58BC  
                                    __ptext103 83A2                                      __ptext120 6E9C  
                                    __ptext112 6B12                                      __ptext104 90A8  
                                    __ptext121 7C04                                      __ptext113 8DF8  
                                    __ptext105 93AE                                      __ptext130 9262  
                                    __ptext122 76EA                                      __ptext114 8424  
                                    __ptext106 2F34                                      __ptext131 9276  
                                    __ptext123 84A0                                      __ptext115 55C2  
                                    __ptext107 939E                                      __ptext132 0000  
                                    __ptext124 7A26                                      __ptext116 8C70  
                                    __ptext108 68C8                                      __ptext125 48F2  
                                    __ptext117 9000                                      __ptext109 85FC  
                                    __ptext126 4F80                                      __ptext118 6100  
                                    __ptext127 902E                                      __ptext119 780A  
                                    __ptext128 93A4                                      __ptext129 935E  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler 930A                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ D877  
                              _getCauseOfReset 8974                                 ?_ringBufferLUT 01B4  
                                    _getUserID 8CB8              _EUSART2_TxDefaultInterruptHandler 0237  
                                  __pintcodelo 0018                           _VCC_overvoltage_flag 02F2  
                                  __tdiv_to_l_ 6FEC                                 ??i2__div_to_l_ 0009  
                                 ??__div_to_l_ 011F                               _POS12_ADC_Result 01CF  
                                     _BAUD2CON 000EF7                                       ?_isdigit 0001  
                                  _dev_on_time 021C                                      _eval_poly 7A26  
                    ??_terminal_textAttributes 01B4                                      _max_Power 0210  
                                    _attribute 023F                                      _peakToRMS 68C8  
                             __CFG_WDTE$NSLEEP 000000                        ?_terminal_setCursorHome 0001  
                                    _hexpowers D8D3                         _heartbeatTimerCallback 8D3E  
                               _dimming_period 00F0                                    ??i2___fladd 0060  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0030                                    ??i2___awmod 0005  
                                  ??i2___flmul 0038                                 __size_of_floor 0112  
                                  ??i2___flsub 005E                                    ??i2___fltol 0070  
                               __size_of_frexp 007A                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                     __size_of_DATAEE_ReadByte 001A                                       ?_strncmp 011D  
                                     ?_strncpy 0117                  __size_of_readDoubleFromEEPROM 0052  
                     _recoverSRAMMaxFromEEPROM 791C                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 924E                         __end_of_TMR7_StopTimer 9398  
                                     _T6CLKCON 000FB3         terminal_textAttributes@input_attribute 01B3  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00AE                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 00A1                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR 9384                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0088  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                     __end_ofi2_TMR7_StopTimer 93A4                                       _PIE2bits 000E2B  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                            _max_Temp_ADC_Result 0204  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 737C  
                             ??_FLASH_ReadByte 011B                                       _PIR2bits 000E35  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                                     _PIR8bits 000E3B                               ??_FLASH_ReadWord 011F  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 004A  
                            i2___fldiv@new_exp 0024                                       _TMR5_ISR 8F0C  
                                     _TMR6_ISR 9080                                       _TMR7_ISR 8ED8  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 0122                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                     i2___flge 76EA                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0117                                       i2___wmul 911C  
                      __size_of_FVR_Initialize 0008                                     printf@flag 01AB  
                                   printf@fval 01A3                                     printf@prec 01AF  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome 92BE  
                            i2___awdiv@divisor 0009                                       i2_fround 63B4  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 00B1  
                writeDoubleToEEPROM@byte_index 0125                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue 9276                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                          DATAEE_WriteByte@bData 0119  
                                     i2_printf 2170                            __end_ofatan@coeff_a D917  
                          __end_ofatan@coeff_b D93F                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                              _max_Power_address D8FB  
                                    copy_data0 7FEA                                      copy_data1 801C  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 023C                             i2___awmod@dividend 0001  
                              ?_TMR7_StopTimer 0001                              ?_DATAEE_WriteByte 0117  
                      ??_ADCC_ClearAccumulator 0100               __size_of_terminal_ringBufferPull 0124  
                             __size_ofi2_scale 0480                 ??_TMR5_DefaultInterruptHandler 0001  
                 __size_of_saveSRAMMaxToEEPROM 0266                             ??_DATAEE_WriteByte 011A  
                                 _next_channel 01E8                               __size_ofi2_putch 000A  
                                    frexp@eptr 0005                        __end_of_getCauseOfReset 89C6  
              __end_of_terminal_textAttributes 45A0                  writeDoubleToEEPROM@input_data 0121  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 928A  
         __end_of_max_POS12_ADC_Result_address D8F9                   _max_POS12_ADC_Result_address D8F7  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 9342  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 9334  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01B6                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 023E                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___fladd 033E                               __size_of___fldiv 02B6  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0352  
                             __size_of___flsub 0048                               __size_of___fltol 00DE  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                   __size_of_writeDoubleToEEPROM 0050  
                                  _load_enable 02F1               __end_of_acquisitionTimerCallback 92AE  
                                  _fround$3988 0177                                    _fround$3989 0173  
                        __end_ofi2__tdiv_to_l_ 7252                       _TMR7_SetInterruptHandler 92FC  
                        _TMR7_InterruptHandler 022B                             _ADC_Result_Scaling 0224  
      terminal_textAttributes@foreground_color 0280                                       ___xxtofl 6D48  
                     __size_of_ADCC_Initialize 0060                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 92DE  
                             __size_of_isdigit 0022                      __end_of_max_Power_address D8FD  
                                     __ptext10 80F8                                       __ptext11 88CA  
                                     __ptext20 8CFC                                       __ptext12 8E34  
                                     __ptext21 921A                                       __ptext13 8E6C  
                                     __ptext30 92EE                                       __ptext22 8F72  
                                     __ptext14 89C6                                       __ptext31 8B00  
                                     __ptext23 7CE2                                       __ptext15 8CB8  
                                     __ptext40 9058                                       __ptext32 9166  
                                     __ptext24 5E4A                                       __ptext16 90D0  
                                     __ptext41 873C                                       __ptext33 5B84  
                                     __ptext25 9392                                       __ptext17 8DBC  
                                     __ptext50 75C8                                       __ptext42 829A  
                                     __ptext34 45A0                                       __ptext26 8BE0  
                                     __ptext18 880A                                       __ptext51 791C  
                                     __ptext43 7B26                                       __ptext35 851A  
                                     __ptext27 92CE                                       __ptext19 9188  
                                     __ptext60 8B4C                                       __ptext52 8922  
                                     __ptext44 8C28                                       __ptext36 8214  
                                     __ptext28 13A2                                       __ptext61 9318  
                                     __ptext53 9234                                       __ptext45 4C42  
                                     __ptext37 6FEC                                       __ptext29 3914  
                                     __ptext70 9334                                       __ptext62 91C6  
                                     __ptext54 8974                                       __ptext46 8FA2  
                                     __ptext38 7252                                       __ptext71 886A  
                                     __ptext63 7F34                                       __ptext55 8FD2  
                                     __ptext47 6662                                       __ptext39 6D48  
                                     __ptext80 90F6                                       __ptext72 9342  
                                     __ptext64 91E2                                       __ptext56 8A66  
                                     __ptext48 8A16                                       __ptext81 9080  
                                     __ptext65 924E                                       __ptext57 92FC  
                                     __ptext49 8D7E                                       __ptext90 7E86  
                                     __ptext82 93AA                                       __ptext74 8ED8  
                                     __ptext66 92DE                                       __ptext58 8F40  
                                     __ptext91 2170                                       __ptext83 8D3E  
                                     __ptext75 93A8                                       __ptext67 9374  
                                     __ptext59 930A                                       __ptext92 3DB8  
                                     __ptext84 9384                                       __ptext76 929C  
                                     __ptext68 866A                                       __ptext93 936A  
                                     __ptext85 8EA2                                       __ptext77 9350  
                                     __ptext69 9326                                       __ptext94 8B96  
                                     __ptext78 937C                                       __ptext95 91A8  
                                     __ptext87 8F0C                                       __ptext79 9398  
                                     __ptext96 63B4                                       __ptext88 91FE  
                                     __ptext97 858C                                       __ptext89 93AC  
                                     __ptext98 831E                                       __ptext99 7120  
                                     _sin$4190 0090                                       __powers_ D843  
                          ringBufferLUT@userID 02C9                                _Temp_ADC_Offset 02F3  
                  DATAEE_WriteByte@GIEBitValue 011A                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 006A  
                                   strcpy@from 0119                                       _max_Irms 0214  
                               i2_isdigit$3272 0002                                _Temp_ADC_Result 01CB  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 0090  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 09E0                           __end_ofi2__div_to_l_ 74A4  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                            ??_DATAEE_ReadByte 0119                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      ringBufferLUT@channel_name 0290  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 935E  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                      printf@idx 0196  
                                    printf@len 0199                                      printf@exp 01A1  
                                    printf@val 01A7                                    atan@coeff_a D8FF  
                                  atan@coeff_b D92B                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 92BE                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                                     scale@scl 0177                                      sqrt@tfrac 0076  
         __end_of_TMR6_DefaultInterruptHandler 93AC          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 93AA           __end_of_ADCC_DefaultInterruptHandler 93B0  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 93AE  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID 90D0                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 02C5  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                  _reset_cause 02F7                                      strncmp@s1 011D  
                                    strncmp@s2 011F                               ?_getCauseOfReset 0001  
                              _AVSS_ADC_Result 01D7              __end_of_ADCPostProcessingCallback 3914  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 011D  
                                    strncpy@to 0117                       __size_of_TMR7_WriteTimer 0026  
                                 ?_getDeviceID 0122                                       printf@ap 019B  
                                     printf@cp 0197                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString 8FA2                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult 9276                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                         __size_of_EUSART2_Write 004C  
                          _EUSART2_Receive_ISR 7E86                                       sqrt@frac 0085  
       __end_of_INTERRUPT_InterruptManagerHigh 7E86        __size_of_INTERRUPT_InterruptManagerHigh 7E7E  
               _INTERRUPT_InterruptManagerHigh 0008                                       sqrt@sign 0074  
                  getMajorRevisionID@REVID_RAW 0125                                       sqrt@root 0081  
                            ??_TMR7_Initialize 011A                                 _FVR_Initialize 9374  
                                  _printf$3991 0192                     ??_recoverSRAMMaxFromEEPROM 0123  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01B4  
                             ___lldiv@quotient 0120                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                              _getDeviceIDString 880A  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 0139  
                           ?_getDeviceIDString 0124          __end_of_INTERRUPT_InterruptManagerLow 010A  
       __size_of_INTERRUPT_InterruptManagerLow 00F2                  _INTERRUPT_InterruptManagerLow 0018  
               ??_ADCC_SetADTIInterruptHandler 011A                 __end_of_PIN_MANAGER_Initialize 7FD6  
                            ??_ADCC_Initialize 011A                              i2__div_to_l_@exp1 000E  
                            i2__div_to_l_@cntr 000D                        _terminal_ringBufferPull 74A4  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 011A  
                            i2__div_to_l_@quot 0009                           ?_EUSART2_Receive_ISR 0001  
            __size_of_acquisitionTimerCallback 0012                                   ___fladd@aexp 013A  
                                 ___fladd@bexp 013B                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
                            ?i2_TMR7_StopTimer 0001              _EUSART2_RxDefaultInterruptHandler 0234  
               __size_of_currentMeasuredToPeak 007C                  __end_of_currentMeasuredToPeak 84A0  
                 __size_of_ADCC_StopConversion 0004  
