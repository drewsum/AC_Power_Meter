

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 06 13:55:35 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   159                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   160  0000                     
   161                           ; Version 1.45 (B)
   162                           ; Generated 30/01/2018 GMT
   163                           ; 
   164                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   165                           ; All rights reserved.
   166                           ; 
   167                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   168                           ; 
   169                           ; Redistribution and use in source and binary forms, with or without modification, are
   170                           ; permitted provided that the following conditions are met:
   171                           ; 
   172                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   173                           ;        conditions and the following disclaimer.
   174                           ; 
   175                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   176                           ;        of conditions and the following disclaimer in the documentation and/or other
   177                           ;        materials provided with the distribution.
   178                           ; 
   179                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   180                           ;        software without specific prior written permission.
   181                           ; 
   182                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   183                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   184                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   185                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   186                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   187                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   188                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   189                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   190                           ; 
   191                           ; 
   192                           ; Code-generator required, PIC18LF67K40 Definitions
   193                           ; 
   194                           ; SFR Addresses
   195  0000                     
   196                           	psect	idataBANK0
   197  018C36                     __pidataBANK0:
   198                           	opt stack 0
   199                           
   200                           ;initializer for _dimming_period
   201  018C36  7FEE               	dw	32750
   202                           
   203                           ;initializer for _TRIAC_Firing_Angle
   204                           ;main.c: 72: volatile double FVR_ADC_Result;
   205                           ;main.c: 73: volatile double AVSS_ADC_Result;
   206                           ;main.c: 74: volatile double ADC_Result_Scaling;
   207                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   208                           ;main.c: 76: volatile double POS12_ADC_Result;
   209                           ;main.c: 77: volatile double Temp_ADC_Result;
   210                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   211                           ;main.c: 79: double Vpk_const = 169.7056274847714;
   212                           ;main.c: 80: volatile double Vpk;
   213                           ;main.c: 81: volatile double Ipk;
   214                           ;main.c: 82: volatile double Imeas;
   215                           ;main.c: 83: double Irms_offset = -0.113;
   216  018C38  0000               	dw	0
   217  018C3A  42B4               	dw	17076
   218                           
   219                           	psect	idataBANK1
   220  018C5A                     __pidataBANK1:
   221                           	opt stack 0
   222                           
   223                           ;initializer for _next_channel
   224  018C5A  3C                 	db	60
   225                           
   226                           	psect	idataBANK2
   227  0189EC                     __pidataBANK2:
   228                           	opt stack 0
   229                           
   230                           ;initializer for getCauseOfResetString@strings
   231  0189EC  04                 	db	low STR_134
   232  0189ED  FE                 	db	high STR_134
   233  0189EE  74                 	db	low STR_135
   234  0189EF  FE                 	db	high STR_135
   235  0189F0  14                 	db	low STR_136
   236  0189F1  FE                 	db	high STR_136
   237  0189F2  8A                 	db	low STR_137
   238  0189F3  FD                 	db	high STR_137
   239  0189F4  62                 	db	low (STR_139+9)
   240  0189F5  FA                 	db	high (STR_139+9)
   241  0189F6  59                 	db	low STR_139
   242  0189F7  FA                 	db	high STR_139
   243  0189F8  8B                 	db	low STR_140
   244  0189F9  FC                 	db	high STR_140
   245  0189FA  36                 	db	low STR_141
   246  0189FB  FD                 	db	high STR_141
   247  0189FC  0A                 	db	low STR_142
   248  0189FD  FD                 	db	high STR_142
   249                           
   250                           ;initializer for getDeviceIDString@F17550
   251  0189FE  38                 	db	low STR_131
   252  0189FF  FF                 	db	high STR_131
   253  018A00  04                 	db	low STR_132
   254  018A01  FF                 	db	high STR_132
   255  018A02  7B                 	db	low STR_68
   256  018A03  FF                 	db	high STR_68
   257                           
   258                           ;initializer for _Irms_offset
   259  018A04  6C8B               	dw	27787
   260  018A06  BDE7               	dw	48615
   261                           
   262                           ;initializer for _Vpk_const
   263                           ;main.c: 72: volatile double FVR_ADC_Result;
   264                           ;main.c: 73: volatile double AVSS_ADC_Result;
   265                           ;main.c: 74: volatile double ADC_Result_Scaling;
   266                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   267                           ;main.c: 76: volatile double POS12_ADC_Result;
   268                           ;main.c: 77: volatile double Temp_ADC_Result;
   269                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   270  018A08  B4A4               	dw	46244
   271  018A0A  4329               	dw	17193
   272                           
   273                           ;initializer for _Temp_ADC_Offset
   274                           ;main.c: 72: volatile double FVR_ADC_Result;
   275                           ;main.c: 73: volatile double AVSS_ADC_Result;
   276                           ;main.c: 74: volatile double ADC_Result_Scaling;
   277                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   278                           ;main.c: 76: volatile double POS12_ADC_Result;
   279                           ;main.c: 77: volatile double Temp_ADC_Result;
   280  018A0C  FF99               	dw	65433
   281  018A0E  441D               	dw	17437
   282                           
   283                           	psect	mediumconst
   284  00E8C2                     __pmediumconst:
   285                           	opt stack 0
   286  00E8C2  00                 	db	0
   287  00E8C3                     __powers_:
   288                           	opt stack 0
   289  00E8C3  0000               	dw	0
   290  00E8C5  3F80               	dw	16256
   291  00E8C7  0000               	dw	0
   292  00E8C9  4120               	dw	16672
   293  00E8CB  0000               	dw	0
   294  00E8CD  42C8               	dw	17096
   295  00E8CF  0000               	dw	0
   296  00E8D1  447A               	dw	17530
   297  00E8D3  4000               	dw	16384
   298  00E8D5  461C               	dw	17948
   299  00E8D7  5000               	dw	20480
   300  00E8D9  47C3               	dw	18371
   301  00E8DB  2400               	dw	9216
   302  00E8DD  4974               	dw	18804
   303  00E8DF  9680               	dw	38528
   304  00E8E1  4B18               	dw	19224
   305  00E8E3  BC20               	dw	48160
   306  00E8E5  4CBE               	dw	19646
   307  00E8E7  6B28               	dw	27432
   308  00E8E9  4E6E               	dw	20078
   309  00E8EB  02F9               	dw	761
   310  00E8ED  5015               	dw	20501
   311  00E8EF  78EC               	dw	30956
   312  00E8F1  60AD               	dw	24749
   313  00E8F3  F2CA               	dw	62154
   314  00E8F5  7149               	dw	29001
   315  00E8F7                     __end_of__powers_:
   316                           	opt stack 0
   317  00E8F7                     __npowers_:
   318                           	opt stack 0
   319  00E8F7  0000               	dw	0
   320  00E8F9  3F80               	dw	16256
   321  00E8FB  CCCD               	dw	52429
   322  00E8FD  3DCC               	dw	15820
   323  00E8FF  D70A               	dw	55050
   324  00E901  3C23               	dw	15395
   325  00E903  126F               	dw	4719
   326  00E905  3A83               	dw	14979
   327  00E907  B717               	dw	46871
   328  00E909  38D1               	dw	14545
   329  00E90B  C5AC               	dw	50604
   330  00E90D  3727               	dw	14119
   331  00E90F  37BD               	dw	14269
   332  00E911  3586               	dw	13702
   333  00E913  BF95               	dw	49045
   334  00E915  33D6               	dw	13270
   335  00E917  CC77               	dw	52343
   336  00E919  322B               	dw	12843
   337  00E91B  705F               	dw	28767
   338  00E91D  3089               	dw	12425
   339  00E91F  E6FF               	dw	59135
   340  00E921  2EDB               	dw	11995
   341  00E923  E508               	dw	58632
   342  00E925  1E3C               	dw	7740
   343  00E927  4260               	dw	16992
   344  00E929  0DA2               	dw	3490
   345  00E92B                     __end_of__npowers_:
   346                           	opt stack 0
   347  00E92B                     _dpowers:
   348                           	opt stack 0
   349  00E92B  0001               	dw	1
   350  00E92D  0000               	dw	0
   351  00E92F  000A               	dw	10
   352  00E931  0000               	dw	0
   353  00E933  0064               	dw	100
   354  00E935  0000               	dw	0
   355  00E937  03E8               	dw	1000
   356  00E939  0000               	dw	0
   357  00E93B  2710               	dw	10000
   358  00E93D  0000               	dw	0
   359  00E93F  86A0               	dw	34464
   360  00E941  0001               	dw	1
   361  00E943  4240               	dw	16960
   362  00E945  000F               	dw	15
   363  00E947  9680               	dw	38528
   364  00E949  0098               	dw	152
   365  00E94B  E100               	dw	57600
   366  00E94D  05F5               	dw	1525
   367  00E94F  CA00               	dw	51712
   368  00E951  3B9A               	dw	15258
   369  00E953                     __end_of_dpowers:
   370                           	opt stack 0
   371  00E953                     _hexpowers:
   372                           	opt stack 0
   373  00E953  0001               	dw	1
   374  00E955  0000               	dw	0
   375  00E957  0010               	dw	16
   376  00E959  0000               	dw	0
   377  00E95B  0100               	dw	256
   378  00E95D  0000               	dw	0
   379  00E95F  1000               	dw	4096
   380  00E961  0000               	dw	0
   381  00E963  0000               	dw	0
   382  00E965  0001               	dw	1
   383  00E967  0000               	dw	0
   384  00E969  0010               	dw	16
   385  00E96B  0000               	dw	0
   386  00E96D  0100               	dw	256
   387  00E96F  0000               	dw	0
   388  00E971  1000               	dw	4096
   389  00E973                     __end_of_hexpowers:
   390                           	opt stack 0
   391  00E973                     _max_Power_address:
   392                           	opt stack 0
   393  00E973  0004               	dw	4
   394  00E975                     __end_of_max_Power_address:
   395                           	opt stack 0
   396  00E975                     _max_Irms_address:
   397                           	opt stack 0
   398  00E975  0000               	dw	0
   399  00E977                     __end_of_max_Irms_address:
   400                           	opt stack 0
   401  00E977                     atan@coeff_a:
   402                           	opt stack 0
   403  00E977  3C06               	dw	15366
   404  00E979  4204               	dw	16900
   405  00E97B  9F7D               	dw	40829
   406  00E97D  426A               	dw	17002
   407  00E97F  905C               	dw	36956
   408  00E981  4201               	dw	16897
   409  00E983  4D60               	dw	19808
   410  00E985  40BB               	dw	16571
   411  00E987  EC51               	dw	60497
   412  00E989  3E47               	dw	15943
   413  00E98B  8DDE               	dw	36318
   414  00E98D  BB1F               	dw	47903
   415  00E98F                     __end_ofatan@coeff_a:
   416                           	opt stack 0
   417  00E98F                     sin@coeff_a:
   418                           	opt stack 0
   419  00E98F  F3EC               	dw	62444
   420  00E991  484A               	dw	18506
   421  00E993  9535               	dw	38197
   422  00E995  C795               	dw	51093
   423  00E997  C117               	dw	49431
   424  00E999  45DC               	dw	17884
   425  00E99B  DBFD               	dw	56317
   426  00E99D  C36D               	dw	50029
   427  00E99F  B372               	dw	45938
   428  00E9A1  4033               	dw	16435
   429  00E9A3                     __end_ofsin@coeff_a:
   430                           	opt stack 0
   431  00E9A3                     atan@coeff_b:
   432                           	opt stack 0
   433  00E9A3  3C06               	dw	15366
   434  00E9A5  4204               	dw	16900
   435  00E9A7  59C0               	dw	22976
   436  00E9A9  428B               	dw	17035
   437  00E9AB  0474               	dw	1140
   438  00E9AD  4244               	dw	16964
   439  00E9AF  9BF9               	dw	39929
   440  00E9B1  414F               	dw	16719
   441  00E9B3  0000               	dw	0
   442  00E9B5  3F80               	dw	16256
   443  00E9B7                     __end_ofatan@coeff_b:
   444                           	opt stack 0
   445  00E9B7                     sin@coeff_b:
   446                           	opt stack 0
   447  00E9B7  342B               	dw	13355
   448  00E9B9  4801               	dw	18433
   449  00E9BB  9D7F               	dw	40319
   450  00E9BD  45B0               	dw	17840
   451  00E9BF  FFE7               	dw	65511
   452  00E9C1  42D9               	dw	17113
   453  00E9C3  0000               	dw	0
   454  00E9C5  3F80               	dw	16256
   455  00E9C7                     __end_ofsin@coeff_b:
   456                           	opt stack 0
   457  00E9C7                     STR_125:
   458  00E9C7  4C                 	db	76	;'L'
   459  00E9C8  69                 	db	105	;'i'
   460  00E9C9  73                 	db	115	;'s'
   461  00E9CA  74                 	db	116	;'t'
   462  00E9CB  20                 	db	32
   463  00E9CC  6F                 	db	111	;'o'
   464  00E9CD  66                 	db	102	;'f'
   465  00E9CE  20                 	db	32
   466  00E9CF  73                 	db	115	;'s'
   467  00E9D0  75                 	db	117	;'u'
   468  00E9D1  70                 	db	112	;'p'
   469  00E9D2  70                 	db	112	;'p'
   470  00E9D3  6F                 	db	111	;'o'
   471  00E9D4  72                 	db	114	;'r'
   472  00E9D5  74                 	db	116	;'t'
   473  00E9D6  65                 	db	101	;'e'
   474  00E9D7  64                 	db	100	;'d'
   475  00E9D8  20                 	db	32
   476  00E9D9  63                 	db	99	;'c'
   477  00E9DA  6F                 	db	111	;'o'
   478  00E9DB  6D                 	db	109	;'m'
   479  00E9DC  6D                 	db	109	;'m'
   480  00E9DD  61                 	db	97	;'a'
   481  00E9DE  6E                 	db	110	;'n'
   482  00E9DF  64                 	db	100	;'d'
   483  00E9E0  73                 	db	115	;'s'
   484  00E9E1  3A                 	db	58	;':'
   485  00E9E2  0A                 	db	10
   486  00E9E3  0D                 	db	13
   487  00E9E4  44                 	db	68	;'D'
   488  00E9E5  65                 	db	101	;'e'
   489  00E9E6  76                 	db	118	;'v'
   490  00E9E7  69                 	db	105	;'i'
   491  00E9E8  63                 	db	99	;'c'
   492  00E9E9  65                 	db	101	;'e'
   493  00E9EA  20                 	db	32
   494  00E9EB  43                 	db	67	;'C'
   495  00E9EC  6F                 	db	111	;'o'
   496  00E9ED  6D                 	db	109	;'m'
   497  00E9EE  6D                 	db	109	;'m'
   498  00E9EF  61                 	db	97	;'a'
   499  00E9F0  6E                 	db	110	;'n'
   500  00E9F1  64                 	db	100	;'d'
   501  00E9F2  73                 	db	115	;'s'
   502  00E9F3  3A                 	db	58	;':'
   503  00E9F4  0A                 	db	10
   504  00E9F5  0D                 	db	13
   505  00E9F6  20                 	db	32
   506  00E9F7  20                 	db	32
   507  00E9F8  20                 	db	32
   508  00E9F9  52                 	db	82	;'R'
   509  00E9FA  65                 	db	101	;'e'
   510  00E9FB  73                 	db	115	;'s'
   511  00E9FC  65                 	db	101	;'e'
   512  00E9FD  74                 	db	116	;'t'
   513  00E9FE  3A                 	db	58	;':'
   514  00E9FF  20                 	db	32
   515  00EA00  43                 	db	67	;'C'
   516  00EA01  6C                 	db	108	;'l'
   517  00EA02  65                 	db	101	;'e'
   518  00EA03  61                 	db	97	;'a'
   519  00EA04  72                 	db	114	;'r'
   520  00EA05  73                 	db	115	;'s'
   521  00EA06  20                 	db	32
   522  00EA07  74                 	db	116	;'t'
   523  00EA08  68                 	db	104	;'h'
   524  00EA09  65                 	db	101	;'e'
   525  00EA0A  20                 	db	32
   526  00EA0B  74                 	db	116	;'t'
   527  00EA0C  65                 	db	101	;'e'
   528  00EA0D  72                 	db	114	;'r'
   529  00EA0E  6D                 	db	109	;'m'
   530  00EA0F  69                 	db	105	;'i'
   531  00EA10  6E                 	db	110	;'n'
   532  00EA11  61                 	db	97	;'a'
   533  00EA12  6C                 	db	108	;'l'
   534  00EA13  20                 	db	32
   535  00EA14  61                 	db	97	;'a'
   536  00EA15  6E                 	db	110	;'n'
   537  00EA16  64                 	db	100	;'d'
   538  00EA17  20                 	db	32
   539  00EA18  72                 	db	114	;'r'
   540  00EA19  65                 	db	101	;'e'
   541  00EA1A  73                 	db	115	;'s'
   542  00EA1B  65                 	db	101	;'e'
   543  00EA1C  74                 	db	116	;'t'
   544  00EA1D  73                 	db	115	;'s'
   545  00EA1E  20                 	db	32
   546  00EA1F  74                 	db	116	;'t'
   547  00EA20  68                 	db	104	;'h'
   548  00EA21  65                 	db	101	;'e'
   549  00EA22  20                 	db	32
   550  00EA23  6D                 	db	109	;'m'
   551  00EA24  69                 	db	105	;'i'
   552  00EA25  63                 	db	99	;'c'
   553  00EA26  72                 	db	114	;'r'
   554  00EA27  6F                 	db	111	;'o'
   555  00EA28  0A                 	db	10
   556  00EA29  0D                 	db	13
   557  00EA2A  20                 	db	32
   558  00EA2B  20                 	db	32
   559  00EA2C  20                 	db	32
   560  00EA2D  43                 	db	67	;'C'
   561  00EA2E  6C                 	db	108	;'l'
   562  00EA2F  65                 	db	101	;'e'
   563  00EA30  61                 	db	97	;'a'
   564  00EA31  72                 	db	114	;'r'
   565  00EA32  3A                 	db	58	;':'
   566  00EA33  20                 	db	32
   567  00EA34  43                 	db	67	;'C'
   568  00EA35  6C                 	db	108	;'l'
   569  00EA36  65                 	db	101	;'e'
   570  00EA37  61                 	db	97	;'a'
   571  00EA38  72                 	db	114	;'r'
   572  00EA39  73                 	db	115	;'s'
   573  00EA3A  20                 	db	32
   574  00EA3B  74                 	db	116	;'t'
   575  00EA3C  68                 	db	104	;'h'
   576  00EA3D  65                 	db	101	;'e'
   577  00EA3E  20                 	db	32
   578  00EA3F  74                 	db	116	;'t'
   579  00EA40  65                 	db	101	;'e'
   580  00EA41  72                 	db	114	;'r'
   581  00EA42  6D                 	db	109	;'m'
   582  00EA43  69                 	db	105	;'i'
   583  00EA44  6E                 	db	110	;'n'
   584  00EA45  61                 	db	97	;'a'
   585  00EA46  6C                 	db	108	;'l'
   586  00EA47  20                 	db	32
   587  00EA48  62                 	db	98	;'b'
   588  00EA49  75                 	db	117	;'u'
   589  00EA4A  74                 	db	116	;'t'
   590  00EA4B  20                 	db	32
   591  00EA4C  64                 	db	100	;'d'
   592  00EA4D  6F                 	db	111	;'o'
   593  00EA4E  65                 	db	101	;'e'
   594  00EA4F  73                 	db	115	;'s'
   595  00EA50  6E                 	db	110	;'n'
   596  00EA51  27                 	db	39
   597  00EA52  74                 	db	116	;'t'
   598  00EA53  20                 	db	32
   599  00EA54  72                 	db	114	;'r'
   600  00EA55  65                 	db	101	;'e'
   601  00EA56  73                 	db	115	;'s'
   602  00EA57  65                 	db	101	;'e'
   603  00EA58  74                 	db	116	;'t'
   604  00EA59  20                 	db	32
   605  00EA5A  74                 	db	116	;'t'
   606  00EA5B  68                 	db	104	;'h'
   607  00EA5C  65                 	db	101	;'e'
   608  00EA5D  20                 	db	32
   609  00EA5E  6D                 	db	109	;'m'
   610  00EA5F  69                 	db	105	;'i'
   611  00EA60  63                 	db	99	;'c'
   612  00EA61  72                 	db	114	;'r'
   613  00EA62  6F                 	db	111	;'o'
   614  00EA63  0A                 	db	10
   615  00EA64  0D                 	db	13
   616  00EA65  20                 	db	32
   617  00EA66  20                 	db	32
   618  00EA67  20                 	db	32
   619  00EA68  43                 	db	67	;'C'
   620  00EA69  61                 	db	97	;'a'
   621  00EA6A  75                 	db	117	;'u'
   622  00EA6B  73                 	db	115	;'s'
   623  00EA6C  65                 	db	101	;'e'
   624  00EA6D  20                 	db	32
   625  00EA6E  6F                 	db	111	;'o'
   626  00EA6F  66                 	db	102	;'f'
   627  00EA70  20                 	db	32
   628  00EA71  52                 	db	82	;'R'
   629  00EA72  65                 	db	101	;'e'
   630  00EA73  73                 	db	115	;'s'
   631  00EA74  65                 	db	101	;'e'
   632  00EA75  74                 	db	116	;'t'
   633  00EA76  3F                 	db	63	;'?'
   634  00EA77  3A                 	db	58	;':'
   635  00EA78  20                 	db	32
   636  00EA79  52                 	db	82	;'R'
   637  00EA7A  65                 	db	101	;'e'
   638  00EA7B  74                 	db	116	;'t'
   639  00EA7C  75                 	db	117	;'u'
   640  00EA7D  72                 	db	114	;'r'
   641  00EA7E  6E                 	db	110	;'n'
   642  00EA7F  73                 	db	115	;'s'
   643  00EA80  20                 	db	32
   644  00EA81  74                 	db	116	;'t'
   645  00EA82  68                 	db	104	;'h'
   646  00EA83  65                 	db	101	;'e'
   647  00EA84  20                 	db	32
   648  00EA85  63                 	db	99	;'c'
   649  00EA86  61                 	db	97	;'a'
   650  00EA87  75                 	db	117	;'u'
   651  00EA88  73                 	db	115	;'s'
   652  00EA89  65                 	db	101	;'e'
   653  00EA8A  20                 	db	32
   654  00EA8B  6F                 	db	111	;'o'
   655  00EA8C  66                 	db	102	;'f'
   656  00EA8D  20                 	db	32
   657  00EA8E  74                 	db	116	;'t'
   658  00EA8F  68                 	db	104	;'h'
   659  00EA90  65                 	db	101	;'e'
   660  00EA91  20                 	db	32
   661  00EA92  6D                 	db	109	;'m'
   662  00EA93  6F                 	db	111	;'o'
   663  00EA94  73                 	db	115	;'s'
   664  00EA95  74                 	db	116	;'t'
   665  00EA96  20                 	db	32
   666  00EA97  72                 	db	114	;'r'
   667  00EA98  65                 	db	101	;'e'
   668  00EA99  63                 	db	99	;'c'
   669  00EA9A  65                 	db	101	;'e'
   670  00EA9B  6E                 	db	110	;'n'
   671  00EA9C  74                 	db	116	;'t'
   672  00EA9D  20                 	db	32
   673  00EA9E  64                 	db	100	;'d'
   674  00EA9F  65                 	db	101	;'e'
   675  00EAA0  76                 	db	118	;'v'
   676  00EAA1  69                 	db	105	;'i'
   677  00EAA2  63                 	db	99	;'c'
   678  00EAA3  65                 	db	101	;'e'
   679  00EAA4  20                 	db	32
   680  00EAA5  72                 	db	114	;'r'
   681  00EAA6  65                 	db	101	;'e'
   682  00EAA7  73                 	db	115	;'s'
   683  00EAA8  65                 	db	101	;'e'
   684  00EAA9  74                 	db	116	;'t'
   685  00EAAA  0A                 	db	10
   686  00EAAB  0D                 	db	13
   687  00EAAC  20                 	db	32
   688  00EAAD  20                 	db	32
   689  00EAAE  20                 	db	32
   690  00EAAF  2A                 	db	42
   691  00EAB0  49                 	db	73	;'I'
   692  00EAB1  44                 	db	68	;'D'
   693  00EAB2  4E                 	db	78	;'N'
   694  00EAB3  3F                 	db	63	;'?'
   695  00EAB4  3A                 	db	58	;':'
   696  00EAB5  20                 	db	32
   697  00EAB6  52                 	db	82	;'R'
   698  00EAB7  65                 	db	101	;'e'
   699  00EAB8  74                 	db	116	;'t'
   700  00EAB9  75                 	db	117	;'u'
   701  00EABA  72                 	db	114	;'r'
   702  00EABB  6E                 	db	110	;'n'
   703  00EABC  73                 	db	115	;'s'
   704  00EABD  20                 	db	32
   705  00EABE  64                 	db	100	;'d'
   706  00EABF  65                 	db	101	;'e'
   707  00EAC0  76                 	db	118	;'v'
   708  00EAC1  69                 	db	105	;'i'
   709  00EAC2  63                 	db	99	;'c'
   710  00EAC3  65                 	db	101	;'e'
   711  00EAC4  20                 	db	32
   712  00EAC5  69                 	db	105	;'i'
   713  00EAC6  64                 	db	100	;'d'
   714  00EAC7  65                 	db	101	;'e'
   715  00EAC8  6E                 	db	110	;'n'
   716  00EAC9  74                 	db	116	;'t'
   717  00EACA  69                 	db	105	;'i'
   718  00EACB  66                 	db	102	;'f'
   719  00EACC  69                 	db	105	;'i'
   720  00EACD  63                 	db	99	;'c'
   721  00EACE  61                 	db	97	;'a'
   722  00EACF  74                 	db	116	;'t'
   723  00EAD0  69                 	db	105	;'i'
   724  00EAD1  6F                 	db	111	;'o'
   725  00EAD2  6E                 	db	110	;'n'
   726  00EAD3  20                 	db	32
   727  00EAD4  73                 	db	115	;'s'
   728  00EAD5  74                 	db	116	;'t'
   729  00EAD6  72                 	db	114	;'r'
   730  00EAD7  69                 	db	105	;'i'
   731  00EAD8  6E                 	db	110	;'n'
   732  00EAD9  67                 	db	103	;'g'
   733  00EADA  0A                 	db	10
   734  00EADB  0D                 	db	13
   735  00EADC  20                 	db	32
   736  00EADD  20                 	db	32
   737  00EADE  20                 	db	32
   738  00EADF  44                 	db	68	;'D'
   739  00EAE0  65                 	db	101	;'e'
   740  00EAE1  76                 	db	118	;'v'
   741  00EAE2  69                 	db	105	;'i'
   742  00EAE3  63                 	db	99	;'c'
   743  00EAE4  65                 	db	101	;'e'
   744  00EAE5  20                 	db	32
   745  00EAE6  4F                 	db	79	;'O'
   746  00EAE7  6E                 	db	110	;'n'
   747  00EAE8  20                 	db	32
   748  00EAE9  54                 	db	84	;'T'
   749  00EAEA  69                 	db	105	;'i'
   750  00EAEB  6D                 	db	109	;'m'
   751  00EAEC  65                 	db	101	;'e'
   752  00EAED  3F                 	db	63	;'?'
   753  00EAEE  3A                 	db	58	;':'
   754  00EAEF  20                 	db	32
   755  00EAF0  52                 	db	82	;'R'
   756  00EAF1  65                 	db	101	;'e'
   757  00EAF2  74                 	db	116	;'t'
   758  00EAF3  75                 	db	117	;'u'
   759  00EAF4  72                 	db	114	;'r'
   760  00EAF5  6E                 	db	110	;'n'
   761  00EAF6  73                 	db	115	;'s'
   762  00EAF7  20                 	db	32
   763  00EAF8  64                 	db	100	;'d'
   764  00EAF9  65                 	db	101	;'e'
   765  00EAFA  76                 	db	118	;'v'
   766  00EAFB  69                 	db	105	;'i'
   767  00EAFC  63                 	db	99	;'c'
   768  00EAFD  65                 	db	101	;'e'
   769  00EAFE  20                 	db	32
   770  00EAFF  6F                 	db	111	;'o'
   771  00EB00  6E                 	db	110	;'n'
   772  00EB01  20                 	db	32
   773  00EB02  74                 	db	116	;'t'
   774  00EB03  69                 	db	105	;'i'
   775  00EB04  6D                 	db	109	;'m'
   776  00EB05  65                 	db	101	;'e'
   777  00EB06  20                 	db	32
   778  00EB07  73                 	db	115	;'s'
   779  00EB08  69                 	db	105	;'i'
   780  00EB09  6E                 	db	110	;'n'
   781  00EB0A  63                 	db	99	;'c'
   782  00EB0B  65                 	db	101	;'e'
   783  00EB0C  20                 	db	32
   784  00EB0D  6C                 	db	108	;'l'
   785  00EB0E  61                 	db	97	;'a'
   786  00EB0F  73                 	db	115	;'s'
   787  00EB10  74                 	db	116	;'t'
   788  00EB11  20                 	db	32
   789  00EB12  64                 	db	100	;'d'
   790  00EB13  65                 	db	101	;'e'
   791  00EB14  76                 	db	118	;'v'
   792  00EB15  69                 	db	105	;'i'
   793  00EB16  63                 	db	99	;'c'
   794  00EB17  65                 	db	101	;'e'
   795  00EB18  20                 	db	32
   796  00EB19  72                 	db	114	;'r'
   797  00EB1A  65                 	db	101	;'e'
   798  00EB1B  73                 	db	115	;'s'
   799  00EB1C  65                 	db	101	;'e'
   800  00EB1D  74                 	db	116	;'t'
   801  00EB1E  0A                 	db	10
   802  00EB1F  0D                 	db	13
   803  00EB20  20                 	db	32
   804  00EB21  20                 	db	32
   805  00EB22  20                 	db	32
   806  00EB23  44                 	db	68	;'D'
   807  00EB24  65                 	db	101	;'e'
   808  00EB25  76                 	db	118	;'v'
   809  00EB26  69                 	db	105	;'i'
   810  00EB27  63                 	db	99	;'c'
   811  00EB28  65                 	db	101	;'e'
   812  00EB29  20                 	db	32
   813  00EB2A  49                 	db	73	;'I'
   814  00EB2B  44                 	db	68	;'D'
   815  00EB2C  3F                 	db	63	;'?'
   816  00EB2D  3A                 	db	58	;':'
   817  00EB2E  20                 	db	32
   818  00EB2F  52                 	db	82	;'R'
   819  00EB30  65                 	db	101	;'e'
   820  00EB31  74                 	db	116	;'t'
   821  00EB32  75                 	db	117	;'u'
   822  00EB33  72                 	db	114	;'r'
   823  00EB34  6E                 	db	110	;'n'
   824  00EB35  73                 	db	115	;'s'
   825  00EB36  20                 	db	32
   826  00EB37  64                 	db	100	;'d'
   827  00EB38  65                 	db	101	;'e'
   828  00EB39  76                 	db	118	;'v'
   829  00EB3A  69                 	db	105	;'i'
   830  00EB3B  63                 	db	99	;'c'
   831  00EB3C  65                 	db	101	;'e'
   832  00EB3D  20                 	db	32
   833  00EB3E  49                 	db	73	;'I'
   834  00EB3F  44                 	db	68	;'D'
   835  00EB40  20                 	db	32
   836  00EB41  61                 	db	97	;'a'
   837  00EB42  73                 	db	115	;'s'
   838  00EB43  20                 	db	32
   839  00EB44  70                 	db	112	;'p'
   840  00EB45  72                 	db	114	;'r'
   841  00EB46  65                 	db	101	;'e'
   842  00EB47  2D                 	db	45
   843  00EB48  70                 	db	112	;'p'
   844  00EB49  72                 	db	114	;'r'
   845  00EB4A  6F                 	db	111	;'o'
   846  00EB4B  67                 	db	103	;'g'
   847  00EB4C  72                 	db	114	;'r'
   848  00EB4D  61                 	db	97	;'a'
   849  00EB4E  6D                 	db	109	;'m'
   850  00EB4F  6D                 	db	109	;'m'
   851  00EB50  65                 	db	101	;'e'
   852  00EB51  64                 	db	100	;'d'
   853  00EB52  20                 	db	32
   854  00EB53  69                 	db	105	;'i'
   855  00EB54  6E                 	db	110	;'n'
   856  00EB55  20                 	db	32
   857  00EB56  66                 	db	102	;'f'
   858  00EB57  6C                 	db	108	;'l'
   859  00EB58  61                 	db	97	;'a'
   860  00EB59  73                 	db	115	;'s'
   861  00EB5A  68                 	db	104	;'h'
   862  00EB5B  20                 	db	32
   863  00EB5C  6D                 	db	109	;'m'
   864  00EB5D  65                 	db	101	;'e'
   865  00EB5E  6D                 	db	109	;'m'
   866  00EB5F  6F                 	db	111	;'o'
   867  00EB60  72                 	db	114	;'r'
   868  00EB61  79                 	db	121	;'y'
   869  00EB62  0A                 	db	10
   870  00EB63  0D                 	db	13
   871  00EB64  20                 	db	32
   872  00EB65  20                 	db	32
   873  00EB66  20                 	db	32
   874  00EB67  52                 	db	82	;'R'
   875  00EB68  65                 	db	101	;'e'
   876  00EB69  76                 	db	118	;'v'
   877  00EB6A  69                 	db	105	;'i'
   878  00EB6B  73                 	db	115	;'s'
   879  00EB6C  69                 	db	105	;'i'
   880  00EB6D  6F                 	db	111	;'o'
   881  00EB6E  6E                 	db	110	;'n'
   882  00EB6F  20                 	db	32
   883  00EB70  49                 	db	73	;'I'
   884  00EB71  44                 	db	68	;'D'
   885  00EB72  3F                 	db	63	;'?'
   886  00EB73  3A                 	db	58	;':'
   887  00EB74  20                 	db	32
   888  00EB75  52                 	db	82	;'R'
   889  00EB76  65                 	db	101	;'e'
   890  00EB77  74                 	db	116	;'t'
   891  00EB78  75                 	db	117	;'u'
   892  00EB79  72                 	db	114	;'r'
   893  00EB7A  6E                 	db	110	;'n'
   894  00EB7B  73                 	db	115	;'s'
   895  00EB7C  20                 	db	32
   896  00EB7D  64                 	db	100	;'d'
   897  00EB7E  65                 	db	101	;'e'
   898  00EB7F  76                 	db	118	;'v'
   899  00EB80  69                 	db	105	;'i'
   900  00EB81  63                 	db	99	;'c'
   901  00EB82  65                 	db	101	;'e'
   902  00EB83  20                 	db	32
   903  00EB84  73                 	db	115	;'s'
   904  00EB85  69                 	db	105	;'i'
   905  00EB86  6C                 	db	108	;'l'
   906  00EB87  69                 	db	105	;'i'
   907  00EB88  63                 	db	99	;'c'
   908  00EB89  6F                 	db	111	;'o'
   909  00EB8A  6E                 	db	110	;'n'
   910  00EB8B  20                 	db	32
   911  00EB8C  72                 	db	114	;'r'
   912  00EB8D  65                 	db	101	;'e'
   913  00EB8E  76                 	db	118	;'v'
   914  00EB8F  69                 	db	105	;'i'
   915  00EB90  73                 	db	115	;'s'
   916  00EB91  69                 	db	105	;'i'
   917  00EB92  6F                 	db	111	;'o'
   918  00EB93  6E                 	db	110	;'n'
   919  00EB94  20                 	db	32
   920  00EB95  49                 	db	73	;'I'
   921  00EB96  44                 	db	68	;'D'
   922  00EB97  20                 	db	32
   923  00EB98  61                 	db	97	;'a'
   924  00EB99  73                 	db	115	;'s'
   925  00EB9A  20                 	db	32
   926  00EB9B  70                 	db	112	;'p'
   927  00EB9C  72                 	db	114	;'r'
   928  00EB9D  65                 	db	101	;'e'
   929  00EB9E  2D                 	db	45
   930  00EB9F  70                 	db	112	;'p'
   931  00EBA0  72                 	db	114	;'r'
   932  00EBA1  6F                 	db	111	;'o'
   933  00EBA2  67                 	db	103	;'g'
   934  00EBA3  72                 	db	114	;'r'
   935  00EBA4  61                 	db	97	;'a'
   936  00EBA5  6D                 	db	109	;'m'
   937  00EBA6  6D                 	db	109	;'m'
   938  00EBA7  65                 	db	101	;'e'
   939  00EBA8  64                 	db	100	;'d'
   940  00EBA9  20                 	db	32
   941  00EBAA  69                 	db	105	;'i'
   942  00EBAB  6E                 	db	110	;'n'
   943  00EBAC  20                 	db	32
   944  00EBAD  66                 	db	102	;'f'
   945  00EBAE  6C                 	db	108	;'l'
   946  00EBAF  61                 	db	97	;'a'
   947  00EBB0  73                 	db	115	;'s'
   948  00EBB1  68                 	db	104	;'h'
   949  00EBB2  20                 	db	32
   950  00EBB3  6D                 	db	109	;'m'
   951  00EBB4  65                 	db	101	;'e'
   952  00EBB5  6D                 	db	109	;'m'
   953  00EBB6  6F                 	db	111	;'o'
   954  00EBB7  72                 	db	114	;'r'
   955  00EBB8  79                 	db	121	;'y'
   956  00EBB9  0A                 	db	10
   957  00EBBA  0D                 	db	13
   958  00EBBB  20                 	db	32
   959  00EBBC  20                 	db	32
   960  00EBBD  20                 	db	32
   961  00EBBE  55                 	db	85	;'U'
   962  00EBBF  73                 	db	115	;'s'
   963  00EBC0  65                 	db	101	;'e'
   964  00EBC1  72                 	db	114	;'r'
   965  00EBC2  20                 	db	32
   966  00EBC3  49                 	db	73	;'I'
   967  00EBC4  44                 	db	68	;'D'
   968  00EBC5  73                 	db	115	;'s'
   969  00EBC6  3F                 	db	63	;'?'
   970  00EBC7  3A                 	db	58	;':'
   971  00EBC8  20                 	db	32
   972  00EBC9  52                 	db	82	;'R'
   973  00EBCA  65                 	db	101	;'e'
   974  00EBCB  74                 	db	116	;'t'
   975  00EBCC  75                 	db	117	;'u'
   976  00EBCD  72                 	db	114	;'r'
   977  00EBCE  6E                 	db	110	;'n'
   978  00EBCF  73                 	db	115	;'s'
   979  00EBD0  20                 	db	32
   980  00EBD1  61                 	db	97	;'a'
   981  00EBD2  20                 	db	32
   982  00EBD3  6C                 	db	108	;'l'
   983  00EBD4  69                 	db	105	;'i'
   984  00EBD5  73                 	db	115	;'s'
   985  00EBD6  74                 	db	116	;'t'
   986  00EBD7  20                 	db	32
   987  00EBD8  6F                 	db	111	;'o'
   988  00EBD9  66                 	db	102	;'f'
   989  00EBDA  20                 	db	32
   990  00EBDB  75                 	db	117	;'u'
   991  00EBDC  73                 	db	115	;'s'
   992  00EBDD  65                 	db	101	;'e'
   993  00EBDE  72                 	db	114	;'r'
   994  00EBDF  20                 	db	32
   995  00EBE0  49                 	db	73	;'I'
   996  00EBE1  44                 	db	68	;'D'
   997  00EBE2  73                 	db	115	;'s'
   998  00EBE3  20                 	db	32
   999  00EBE4  28                 	db	40
  1000  00EBE5  64                 	db	100	;'d'
  1001  00EBE6  69                 	db	105	;'i'
  1002  00EBE7  73                 	db	115	;'s'
  1003  00EBE8  70                 	db	112	;'p'
  1004  00EBE9  6C                 	db	108	;'l'
  1005  00EBEA  61                 	db	97	;'a'
  1006  00EBEB  79                 	db	121	;'y'
  1007  00EBEC  65                 	db	101	;'e'
  1008  00EBED  64                 	db	100	;'d'
  1009  00EBEE  20                 	db	32
  1010  00EBEF  69                 	db	105	;'i'
  1011  00EBF0  6E                 	db	110	;'n'
  1012  00EBF1  20                 	db	32
  1013  00EBF2  68                 	db	104	;'h'
  1014  00EBF3  65                 	db	101	;'e'
  1015  00EBF4  78                 	db	120	;'x'
  1016  00EBF5  29                 	db	41
  1017  00EBF6  20                 	db	32
  1018  00EBF7  61                 	db	97	;'a'
  1019  00EBF8  73                 	db	115	;'s'
  1020  00EBF9  20                 	db	32
  1021  00EBFA  73                 	db	115	;'s'
  1022  00EBFB  74                 	db	116	;'t'
  1023  00EBFC  6F                 	db	111	;'o'
  1024  00EBFD  72                 	db	114	;'r'
  1025  00EBFE  65                 	db	101	;'e'
  1026  00EBFF  64                 	db	100	;'d'
  1027  00EC00  20                 	db	32
  1028  00EC01  69                 	db	105	;'i'
  1029  00EC02  6E                 	db	110	;'n'
  1030  00EC03  20                 	db	32
  1031  00EC04  66                 	db	102	;'f'
  1032  00EC05  6C                 	db	108	;'l'
  1033  00EC06  61                 	db	97	;'a'
  1034  00EC07  73                 	db	115	;'s'
  1035  00EC08  68                 	db	104	;'h'
  1036  00EC09  20                 	db	32
  1037  00EC0A  6D                 	db	109	;'m'
  1038  00EC0B  65                 	db	101	;'e'
  1039  00EC0C  6D                 	db	109	;'m'
  1040  00EC0D  6F                 	db	111	;'o'
  1041  00EC0E  72                 	db	114	;'r'
  1042  00EC0F  79                 	db	121	;'y'
  1043  00EC10  0A                 	db	10
  1044  00EC11  0D                 	db	13
  1045  00EC12  20                 	db	32
  1046  00EC13  20                 	db	32
  1047  00EC14  20                 	db	32
  1048  00EC15  41                 	db	65	;'A'
  1049  00EC16  44                 	db	68	;'D'
  1050  00EC17  43                 	db	67	;'C'
  1051  00EC18  20                 	db	32
  1052  00EC19  45                 	db	69	;'E'
  1053  00EC1A  72                 	db	114	;'r'
  1054  00EC1B  72                 	db	114	;'r'
  1055  00EC1C  6F                 	db	111	;'o'
  1056  00EC1D  72                 	db	114	;'r'
  1057  00EC1E  3F                 	db	63	;'?'
  1058  00EC1F  3A                 	db	58	;':'
  1059  00EC20  20                 	db	32
  1060  00EC21  52                 	db	82	;'R'
  1061  00EC22  65                 	db	101	;'e'
  1062  00EC23  74                 	db	116	;'t'
  1063  00EC24  75                 	db	117	;'u'
  1064  00EC25  72                 	db	114	;'r'
  1065  00EC26  6E                 	db	110	;'n'
  1066  00EC27  73                 	db	115	;'s'
  1067  00EC28  20                 	db	32
  1068  00EC29  74                 	db	116	;'t'
  1069  00EC2A  68                 	db	104	;'h'
  1070  00EC2B  65                 	db	101	;'e'
  1071  00EC2C  20                 	db	32
  1072  00EC2D  63                 	db	99	;'c'
  1073  00EC2E  61                 	db	97	;'a'
  1074  00EC2F  75                 	db	117	;'u'
  1075  00EC30  73                 	db	115	;'s'
  1076  00EC31  65                 	db	101	;'e'
  1077  00EC32  20                 	db	32
  1078  00EC33  6F                 	db	111	;'o'
  1079  00EC34  66                 	db	102	;'f'
  1080  00EC35  20                 	db	32
  1081  00EC36  61                 	db	97	;'a'
  1082  00EC37  6E                 	db	110	;'n'
  1083  00EC38  20                 	db	32
  1084  00EC39  41                 	db	65	;'A'
  1085  00EC3A  44                 	db	68	;'D'
  1086  00EC3B  43                 	db	67	;'C'
  1087  00EC3C  20                 	db	32
  1088  00EC3D  65                 	db	101	;'e'
  1089  00EC3E  72                 	db	114	;'r'
  1090  00EC3F  72                 	db	114	;'r'
  1091  00EC40  6F                 	db	111	;'o'
  1092  00EC41  72                 	db	114	;'r'
  1093  00EC42  20                 	db	32
  1094  00EC43  69                 	db	105	;'i'
  1095  00EC44  66                 	db	102	;'f'
  1096  00EC45  20                 	db	32
  1097  00EC46  61                 	db	97	;'a'
  1098  00EC47  6E                 	db	110	;'n'
  1099  00EC48  20                 	db	32
  1100  00EC49  65                 	db	101	;'e'
  1101  00EC4A  72                 	db	114	;'r'
  1102  00EC4B  72                 	db	114	;'r'
  1103  00EC4C  6F                 	db	111	;'o'
  1104  00EC4D  72                 	db	114	;'r'
  1105  00EC4E  20                 	db	32
  1106  00EC4F  6F                 	db	111	;'o'
  1107  00EC50  63                 	db	99	;'c'
  1108  00EC51  63                 	db	99	;'c'
  1109  00EC52  75                 	db	117	;'u'
  1110  00EC53  72                 	db	114	;'r'
  1111  00EC54  72                 	db	114	;'r'
  1112  00EC55  65                 	db	101	;'e'
  1113  00EC56  64                 	db	100	;'d'
  1114  00EC57  0A                 	db	10
  1115  00EC58  0D                 	db	13
  1116  00EC59  20                 	db	32
  1117  00EC5A  20                 	db	32
  1118  00EC5B  20                 	db	32
  1119  00EC5C  43                 	db	67	;'C'
  1120  00EC5D  6C                 	db	108	;'l'
  1121  00EC5E  65                 	db	101	;'e'
  1122  00EC5F  61                 	db	97	;'a'
  1123  00EC60  72                 	db	114	;'r'
  1124  00EC61  20                 	db	32
  1125  00EC62  41                 	db	65	;'A'
  1126  00EC63  44                 	db	68	;'D'
  1127  00EC64  43                 	db	67	;'C'
  1128  00EC65  20                 	db	32
  1129  00EC66  45                 	db	69	;'E'
  1130  00EC67  72                 	db	114	;'r'
  1131  00EC68  72                 	db	114	;'r'
  1132  00EC69  6F                 	db	111	;'o'
  1133  00EC6A  72                 	db	114	;'r'
  1134  00EC6B  3A                 	db	58	;':'
  1135  00EC6C  20                 	db	32
  1136  00EC6D  43                 	db	67	;'C'
  1137  00EC6E  6C                 	db	108	;'l'
  1138  00EC6F  65                 	db	101	;'e'
  1139  00EC70  61                 	db	97	;'a'
  1140  00EC71  72                 	db	114	;'r'
  1141  00EC72  73                 	db	115	;'s'
  1142  00EC73  20                 	db	32
  1143  00EC74  74                 	db	116	;'t'
  1144  00EC75  68                 	db	104	;'h'
  1145  00EC76  65                 	db	101	;'e'
  1146  00EC77  20                 	db	32
  1147  00EC78  41                 	db	65	;'A'
  1148  00EC79  44                 	db	68	;'D'
  1149  00EC7A  43                 	db	67	;'C'
  1150  00EC7B  20                 	db	32
  1151  00EC7C  65                 	db	101	;'e'
  1152  00EC7D  72                 	db	114	;'r'
  1153  00EC7E  72                 	db	114	;'r'
  1154  00EC7F  6F                 	db	111	;'o'
  1155  00EC80  72                 	db	114	;'r'
  1156  00EC81  20                 	db	32
  1157  00EC82  61                 	db	97	;'a'
  1158  00EC83  6E                 	db	110	;'n'
  1159  00EC84  64                 	db	100	;'d'
  1160  00EC85  20                 	db	32
  1161  00EC86  72                 	db	114	;'r'
  1162  00EC87  65                 	db	101	;'e'
  1163  00EC88  73                 	db	115	;'s'
  1164  00EC89  75                 	db	117	;'u'
  1165  00EC8A  6D                 	db	109	;'m'
  1166  00EC8B  65                 	db	101	;'e'
  1167  00EC8C  73                 	db	115	;'s'
  1168  00EC8D  20                 	db	32
  1169  00EC8E  41                 	db	65	;'A'
  1170  00EC8F  44                 	db	68	;'D'
  1171  00EC90  43                 	db	67	;'C'
  1172  00EC91  20                 	db	32
  1173  00EC92  63                 	db	99	;'c'
  1174  00EC93  6F                 	db	111	;'o'
  1175  00EC94  6E                 	db	110	;'n'
  1176  00EC95  76                 	db	118	;'v'
  1177  00EC96  65                 	db	101	;'e'
  1178  00EC97  72                 	db	114	;'r'
  1179  00EC98  73                 	db	115	;'s'
  1180  00EC99  69                 	db	105	;'i'
  1181  00EC9A  6F                 	db	111	;'o'
  1182  00EC9B  6E                 	db	110	;'n'
  1183  00EC9C  73                 	db	115	;'s'
  1184  00EC9D  0A                 	db	10
  1185  00EC9E  0D                 	db	13
  1186  00EC9F  20                 	db	32
  1187  00ECA0  20                 	db	32
  1188  00ECA1  20                 	db	32
  1189  00ECA2  56                 	db	86	;'V'
  1190  00ECA3  43                 	db	67	;'C'
  1191  00ECA4  43                 	db	67	;'C'
  1192  00ECA5  20                 	db	32
  1193  00ECA6  4F                 	db	79	;'O'
  1194  00ECA7  76                 	db	118	;'v'
  1195  00ECA8  65                 	db	101	;'e'
  1196  00ECA9  72                 	db	114	;'r'
  1197  00ECAA  76                 	db	118	;'v'
  1198  00ECAB  6F                 	db	111	;'o'
  1199  00ECAC  6C                 	db	108	;'l'
  1200  00ECAD  74                 	db	116	;'t'
  1201  00ECAE  61                 	db	97	;'a'
  1202  00ECAF  67                 	db	103	;'g'
  1203  00ECB0  65                 	db	101	;'e'
  1204  00ECB1  3F                 	db	63	;'?'
  1205  00ECB2  3A                 	db	58	;':'
  1206  00ECB3  20                 	db	32
  1207  00ECB4  53                 	db	83	;'S'
  1208  00ECB5  74                 	db	116	;'t'
  1209  00ECB6  61                 	db	97	;'a'
  1210  00ECB7  74                 	db	116	;'t'
  1211  00ECB8  65                 	db	101	;'e'
  1212  00ECB9  73                 	db	115	;'s'
  1213  00ECBA  20                 	db	32
  1214  00ECBB  69                 	db	105	;'i'
  1215  00ECBC  66                 	db	102	;'f'
  1216  00ECBD  20                 	db	32
  1217  00ECBE  61                 	db	97	;'a'
  1218  00ECBF  20                 	db	32
  1219  00ECC0  56                 	db	86	;'V'
  1220  00ECC1  43                 	db	67	;'C'
  1221  00ECC2  43                 	db	67	;'C'
  1222  00ECC3  20                 	db	32
  1223  00ECC4  6F                 	db	111	;'o'
  1224  00ECC5  76                 	db	118	;'v'
  1225  00ECC6  65                 	db	101	;'e'
  1226  00ECC7  72                 	db	114	;'r'
  1227  00ECC8  76                 	db	118	;'v'
  1228  00ECC9  6F                 	db	111	;'o'
  1229  00ECCA  6C                 	db	108	;'l'
  1230  00ECCB  74                 	db	116	;'t'
  1231  00ECCC  61                 	db	97	;'a'
  1232  00ECCD  67                 	db	103	;'g'
  1233  00ECCE  65                 	db	101	;'e'
  1234  00ECCF  20                 	db	32
  1235  00ECD0  63                 	db	99	;'c'
  1236  00ECD1  6F                 	db	111	;'o'
  1237  00ECD2  6E                 	db	110	;'n'
  1238  00ECD3  64                 	db	100	;'d'
  1239  00ECD4  69                 	db	105	;'i'
  1240  00ECD5  74                 	db	116	;'t'
  1241  00ECD6  69                 	db	105	;'i'
  1242  00ECD7  6F                 	db	111	;'o'
  1243  00ECD8  6E                 	db	110	;'n'
  1244  00ECD9  20                 	db	32
  1245  00ECDA  68                 	db	104	;'h'
  1246  00ECDB  61                 	db	97	;'a'
  1247  00ECDC  73                 	db	115	;'s'
  1248  00ECDD  20                 	db	32
  1249  00ECDE  6F                 	db	111	;'o'
  1250  00ECDF  63                 	db	99	;'c'
  1251  00ECE0  63                 	db	99	;'c'
  1252  00ECE1  75                 	db	117	;'u'
  1253  00ECE2  72                 	db	114	;'r'
  1254  00ECE3  72                 	db	114	;'r'
  1255  00ECE4  65                 	db	101	;'e'
  1256  00ECE5  64                 	db	100	;'d'
  1257  00ECE6  20                 	db	32
  1258  00ECE7  6F                 	db	111	;'o'
  1259  00ECE8  72                 	db	114	;'r'
  1260  00ECE9  20                 	db	32
  1261  00ECEA  6E                 	db	110	;'n'
  1262  00ECEB  6F                 	db	111	;'o'
  1263  00ECEC  74                 	db	116	;'t'
  1264  00ECED  0A                 	db	10
  1265  00ECEE  0D                 	db	13
  1266  00ECEF  20                 	db	32
  1267  00ECF0  20                 	db	32
  1268  00ECF1  20                 	db	32
  1269  00ECF2  48                 	db	72	;'H'
  1270  00ECF3  65                 	db	101	;'e'
  1271  00ECF4  6C                 	db	108	;'l'
  1272  00ECF5  70                 	db	112	;'p'
  1273  00ECF6  3A                 	db	58	;':'
  1274  00ECF7  20                 	db	32
  1275  00ECF8  54                 	db	84	;'T'
  1276  00ECF9  68                 	db	104	;'h'
  1277  00ECFA  69                 	db	105	;'i'
  1278  00ECFB  73                 	db	115	;'s'
  1279  00ECFC  20                 	db	32
  1280  00ECFD  6D                 	db	109	;'m'
  1281  00ECFE  65                 	db	101	;'e'
  1282  00ECFF  73                 	db	115	;'s'
  1283  00ED00  73                 	db	115	;'s'
  1284  00ED01  61                 	db	97	;'a'
  1285  00ED02  67                 	db	103	;'g'
  1286  00ED03  65                 	db	101	;'e'
  1287  00ED04  2C                 	db	44
  1288  00ED05  20                 	db	32
  1289  00ED06  6C                 	db	108	;'l'
  1290  00ED07  69                 	db	105	;'i'
  1291  00ED08  73                 	db	115	;'s'
  1292  00ED09  74                 	db	116	;'t'
  1293  00ED0A  73                 	db	115	;'s'
  1294  00ED0B  20                 	db	32
  1295  00ED0C  73                 	db	115	;'s'
  1296  00ED0D  75                 	db	117	;'u'
  1297  00ED0E  70                 	db	112	;'p'
  1298  00ED0F  70                 	db	112	;'p'
  1299  00ED10  6F                 	db	111	;'o'
  1300  00ED11  72                 	db	114	;'r'
  1301  00ED12  74                 	db	116	;'t'
  1302  00ED13  65                 	db	101	;'e'
  1303  00ED14  64                 	db	100	;'d'
  1304  00ED15  20                 	db	32
  1305  00ED16  63                 	db	99	;'c'
  1306  00ED17  6F                 	db	111	;'o'
  1307  00ED18  6D                 	db	109	;'m'
  1308  00ED19  6D                 	db	109	;'m'
  1309  00ED1A  61                 	db	97	;'a'
  1310  00ED1B  6E                 	db	110	;'n'
  1311  00ED1C  64                 	db	100	;'d'
  1312  00ED1D  73                 	db	115	;'s'
  1313  00ED1E  0A                 	db	10
  1314  00ED1F  0D                 	db	13
  1315  00ED20  44                 	db	68	;'D'
  1316  00ED21  65                 	db	101	;'e'
  1317  00ED22  76                 	db	118	;'v'
  1318  00ED23  69                 	db	105	;'i'
  1319  00ED24  63                 	db	99	;'c'
  1320  00ED25  65                 	db	101	;'e'
  1321  00ED26  20                 	db	32
  1322  00ED27  4D                 	db	77	;'M'
  1323  00ED28  65                 	db	101	;'e'
  1324  00ED29  61                 	db	97	;'a'
  1325  00ED2A  73                 	db	115	;'s'
  1326  00ED2B  75                 	db	117	;'u'
  1327  00ED2C  72                 	db	114	;'r'
  1328  00ED2D  65                 	db	101	;'e'
  1329  00ED2E  6D                 	db	109	;'m'
  1330  00ED2F  65                 	db	101	;'e'
  1331  00ED30  6E                 	db	110	;'n'
  1332  00ED31  74                 	db	116	;'t'
  1333  00ED32  20                 	db	32
  1334  00ED33  43                 	db	67	;'C'
  1335  00ED34  6F                 	db	111	;'o'
  1336  00ED35  6D                 	db	109	;'m'
  1337  00ED36  6D                 	db	109	;'m'
  1338  00ED37  61                 	db	97	;'a'
  1339  00ED38  6E                 	db	110	;'n'
  1340  00ED39  64                 	db	100	;'d'
  1341  00ED3A  73                 	db	115	;'s'
  1342  00ED3B  3A                 	db	58	;':'
  1343  00ED3C  0A                 	db	10
  1344  00ED3D  0D                 	db	13
  1345  00ED3E  20                 	db	32
  1346  00ED3F  20                 	db	32
  1347  00ED40  20                 	db	32
  1348  00ED41  4D                 	db	77	;'M'
  1349  00ED42  65                 	db	101	;'e'
  1350  00ED43  61                 	db	97	;'a'
  1351  00ED44  73                 	db	115	;'s'
  1352  00ED45  75                 	db	117	;'u'
  1353  00ED46  72                 	db	114	;'r'
  1354  00ED47  65                 	db	101	;'e'
  1355  00ED48  20                 	db	32
  1356  00ED49  50                 	db	80	;'P'
  1357  00ED4A  4F                 	db	79	;'O'
  1358  00ED4B  53                 	db	83	;'S'
  1359  00ED4C  33                 	db	51	;'3'
  1360  00ED4D  50                 	db	80	;'P'
  1361  00ED4E  33                 	db	51	;'3'
  1362  00ED4F  3F                 	db	63	;'?'
  1363  00ED50  3A                 	db	58	;':'
  1364  00ED51  20                 	db	32
  1365  00ED52  52                 	db	82	;'R'
  1366  00ED53  65                 	db	101	;'e'
  1367  00ED54  74                 	db	116	;'t'
  1368  00ED55  75                 	db	117	;'u'
  1369  00ED56  72                 	db	114	;'r'
  1370  00ED57  6E                 	db	110	;'n'
  1371  00ED58  73                 	db	115	;'s'
  1372  00ED59  20                 	db	32
  1373  00ED5A  2B                 	db	43
  1374  00ED5B  33                 	db	51	;'3'
  1375  00ED5C  2E                 	db	46
  1376  00ED5D  33                 	db	51	;'3'
  1377  00ED5E  56                 	db	86	;'V'
  1378  00ED5F  20                 	db	32
  1379  00ED60  41                 	db	65	;'A'
  1380  00ED61  44                 	db	68	;'D'
  1381  00ED62  43                 	db	67	;'C'
  1382  00ED63  20                 	db	32
  1383  00ED64  43                 	db	67	;'C'
  1384  00ED65  6F                 	db	111	;'o'
  1385  00ED66  6E                 	db	110	;'n'
  1386  00ED67  76                 	db	118	;'v'
  1387  00ED68  65                 	db	101	;'e'
  1388  00ED69  72                 	db	114	;'r'
  1389  00ED6A  73                 	db	115	;'s'
  1390  00ED6B  69                 	db	105	;'i'
  1391  00ED6C  6F                 	db	111	;'o'
  1392  00ED6D  6E                 	db	110	;'n'
  1393  00ED6E  20                 	db	32
  1394  00ED6F  69                 	db	105	;'i'
  1395  00ED70  6E                 	db	110	;'n'
  1396  00ED71  20                 	db	32
  1397  00ED72  76                 	db	118	;'v'
  1398  00ED73  6F                 	db	111	;'o'
  1399  00ED74  6C                 	db	108	;'l'
  1400  00ED75  74                 	db	116	;'t'
  1401  00ED76  73                 	db	115	;'s'
  1402  00ED77  0A                 	db	10
  1403  00ED78  0D                 	db	13
  1404  00ED79  20                 	db	32
  1405  00ED7A  20                 	db	32
  1406  00ED7B  20                 	db	32
  1407  00ED7C  4D                 	db	77	;'M'
  1408  00ED7D  65                 	db	101	;'e'
  1409  00ED7E  61                 	db	97	;'a'
  1410  00ED7F  73                 	db	115	;'s'
  1411  00ED80  75                 	db	117	;'u'
  1412  00ED81  72                 	db	114	;'r'
  1413  00ED82  65                 	db	101	;'e'
  1414  00ED83  20                 	db	32
  1415  00ED84  50                 	db	80	;'P'
  1416  00ED85  4F                 	db	79	;'O'
  1417  00ED86  53                 	db	83	;'S'
  1418  00ED87  31                 	db	49	;'1'
  1419  00ED88  32                 	db	50	;'2'
  1420  00ED89  3F                 	db	63	;'?'
  1421  00ED8A  3A                 	db	58	;':'
  1422  00ED8B  20                 	db	32
  1423  00ED8C  52                 	db	82	;'R'
  1424  00ED8D  65                 	db	101	;'e'
  1425  00ED8E  74                 	db	116	;'t'
  1426  00ED8F  75                 	db	117	;'u'
  1427  00ED90  72                 	db	114	;'r'
  1428  00ED91  6E                 	db	110	;'n'
  1429  00ED92  73                 	db	115	;'s'
  1430  00ED93  20                 	db	32
  1431  00ED94  2B                 	db	43
  1432  00ED95  31                 	db	49	;'1'
  1433  00ED96  32                 	db	50	;'2'
  1434  00ED97  56                 	db	86	;'V'
  1435  00ED98  20                 	db	32
  1436  00ED99  41                 	db	65	;'A'
  1437  00ED9A  44                 	db	68	;'D'
  1438  00ED9B  43                 	db	67	;'C'
  1439  00ED9C  20                 	db	32
  1440  00ED9D  43                 	db	67	;'C'
  1441  00ED9E  6F                 	db	111	;'o'
  1442  00ED9F  6E                 	db	110	;'n'
  1443  00EDA0  76                 	db	118	;'v'
  1444  00EDA1  65                 	db	101	;'e'
  1445  00EDA2  72                 	db	114	;'r'
  1446  00EDA3  73                 	db	115	;'s'
  1447  00EDA4  69                 	db	105	;'i'
  1448  00EDA5  6F                 	db	111	;'o'
  1449  00EDA6  6E                 	db	110	;'n'
  1450  00EDA7  20                 	db	32
  1451  00EDA8  69                 	db	105	;'i'
  1452  00EDA9  6E                 	db	110	;'n'
  1453  00EDAA  20                 	db	32
  1454  00EDAB  76                 	db	118	;'v'
  1455  00EDAC  6F                 	db	111	;'o'
  1456  00EDAD  6C                 	db	108	;'l'
  1457  00EDAE  74                 	db	116	;'t'
  1458  00EDAF  73                 	db	115	;'s'
  1459  00EDB0  0A                 	db	10
  1460  00EDB1  0D                 	db	13
  1461  00EDB2  20                 	db	32
  1462  00EDB3  20                 	db	32
  1463  00EDB4  20                 	db	32
  1464  00EDB5  4D                 	db	77	;'M'
  1465  00EDB6  65                 	db	101	;'e'
  1466  00EDB7  61                 	db	97	;'a'
  1467  00EDB8  73                 	db	115	;'s'
  1468  00EDB9  75                 	db	117	;'u'
  1469  00EDBA  72                 	db	114	;'r'
  1470  00EDBB  65                 	db	101	;'e'
  1471  00EDBC  20                 	db	32
  1472  00EDBD  44                 	db	68	;'D'
  1473  00EDBE  69                 	db	105	;'i'
  1474  00EDBF  65                 	db	101	;'e'
  1475  00EDC0  20                 	db	32
  1476  00EDC1  54                 	db	84	;'T'
  1477  00EDC2  65                 	db	101	;'e'
  1478  00EDC3  6D                 	db	109	;'m'
  1479  00EDC4  70                 	db	112	;'p'
  1480  00EDC5  3F                 	db	63	;'?'
  1481  00EDC6  3A                 	db	58	;':'
  1482  00EDC7  20                 	db	32
  1483  00EDC8  52                 	db	82	;'R'
  1484  00EDC9  65                 	db	101	;'e'
  1485  00EDCA  74                 	db	116	;'t'
  1486  00EDCB  75                 	db	117	;'u'
  1487  00EDCC  72                 	db	114	;'r'
  1488  00EDCD  6E                 	db	110	;'n'
  1489  00EDCE  73                 	db	115	;'s'
  1490  00EDCF  20                 	db	32
  1491  00EDD0  74                 	db	116	;'t'
  1492  00EDD1  68                 	db	104	;'h'
  1493  00EDD2  65                 	db	101	;'e'
  1494  00EDD3  20                 	db	32
  1495  00EDD4  6D                 	db	109	;'m'
  1496  00EDD5  69                 	db	105	;'i'
  1497  00EDD6  63                 	db	99	;'c'
  1498  00EDD7  72                 	db	114	;'r'
  1499  00EDD8  6F                 	db	111	;'o'
  1500  00EDD9  63                 	db	99	;'c'
  1501  00EDDA  6F                 	db	111	;'o'
  1502  00EDDB  6E                 	db	110	;'n'
  1503  00EDDC  74                 	db	116	;'t'
  1504  00EDDD  72                 	db	114	;'r'
  1505  00EDDE  6F                 	db	111	;'o'
  1506  00EDDF  6C                 	db	108	;'l'
  1507  00EDE0  6C                 	db	108	;'l'
  1508  00EDE1  65                 	db	101	;'e'
  1509  00EDE2  72                 	db	114	;'r'
  1510  00EDE3  20                 	db	32
  1511  00EDE4  64                 	db	100	;'d'
  1512  00EDE5  69                 	db	105	;'i'
  1513  00EDE6  65                 	db	101	;'e'
  1514  00EDE7  20                 	db	32
  1515  00EDE8  74                 	db	116	;'t'
  1516  00EDE9  65                 	db	101	;'e'
  1517  00EDEA  6D                 	db	109	;'m'
  1518  00EDEB  70                 	db	112	;'p'
  1519  00EDEC  65                 	db	101	;'e'
  1520  00EDED  72                 	db	114	;'r'
  1521  00EDEE  61                 	db	97	;'a'
  1522  00EDEF  74                 	db	116	;'t'
  1523  00EDF0  75                 	db	117	;'u'
  1524  00EDF1  72                 	db	114	;'r'
  1525  00EDF2  65                 	db	101	;'e'
  1526  00EDF3  20                 	db	32
  1527  00EDF4  69                 	db	105	;'i'
  1528  00EDF5  6E                 	db	110	;'n'
  1529  00EDF6  20                 	db	32
  1530  00EDF7  64                 	db	100	;'d'
  1531  00EDF8  65                 	db	101	;'e'
  1532  00EDF9  67                 	db	103	;'g'
  1533  00EDFA  72                 	db	114	;'r'
  1534  00EDFB  65                 	db	101	;'e'
  1535  00EDFC  65                 	db	101	;'e'
  1536  00EDFD  73                 	db	115	;'s'
  1537  00EDFE  20                 	db	32
  1538  00EDFF  43                 	db	67	;'C'
  1539  00EE00  0A                 	db	10
  1540  00EE01  0D                 	db	13
  1541  00EE02  20                 	db	32
  1542  00EE03  20                 	db	32
  1543  00EE04  20                 	db	32
  1544  00EE05  4D                 	db	77	;'M'
  1545  00EE06  65                 	db	101	;'e'
  1546  00EE07  61                 	db	97	;'a'
  1547  00EE08  73                 	db	115	;'s'
  1548  00EE09  75                 	db	117	;'u'
  1549  00EE0A  72                 	db	114	;'r'
  1550  00EE0B  65                 	db	101	;'e'
  1551  00EE0C  20                 	db	32
  1552  00EE0D  46                 	db	70	;'F'
  1553  00EE0E  56                 	db	86	;'V'
  1554  00EE0F  52                 	db	82	;'R'
  1555  00EE10  3F                 	db	63	;'?'
  1556  00EE11  3A                 	db	58	;':'
  1557  00EE12  20                 	db	32
  1558  00EE13  52                 	db	82	;'R'
  1559  00EE14  65                 	db	101	;'e'
  1560  00EE15  74                 	db	116	;'t'
  1561  00EE16  75                 	db	117	;'u'
  1562  00EE17  72                 	db	114	;'r'
  1563  00EE18  6E                 	db	110	;'n'
  1564  00EE19  73                 	db	115	;'s'
  1565  00EE1A  20                 	db	32
  1566  00EE1B  74                 	db	116	;'t'
  1567  00EE1C  68                 	db	104	;'h'
  1568  00EE1D  65                 	db	101	;'e'
  1569  00EE1E  20                 	db	32
  1570  00EE1F  69                 	db	105	;'i'
  1571  00EE20  6E                 	db	110	;'n'
  1572  00EE21  74                 	db	116	;'t'
  1573  00EE22  65                 	db	101	;'e'
  1574  00EE23  72                 	db	114	;'r'
  1575  00EE24  6E                 	db	110	;'n'
  1576  00EE25  61                 	db	97	;'a'
  1577  00EE26  6C                 	db	108	;'l'
  1578  00EE27  20                 	db	32
  1579  00EE28  66                 	db	102	;'f'
  1580  00EE29  69                 	db	105	;'i'
  1581  00EE2A  78                 	db	120	;'x'
  1582  00EE2B  65                 	db	101	;'e'
  1583  00EE2C  64                 	db	100	;'d'
  1584  00EE2D  20                 	db	32
  1585  00EE2E  76                 	db	118	;'v'
  1586  00EE2F  6F                 	db	111	;'o'
  1587  00EE30  6C                 	db	108	;'l'
  1588  00EE31  74                 	db	116	;'t'
  1589  00EE32  61                 	db	97	;'a'
  1590  00EE33  67                 	db	103	;'g'
  1591  00EE34  65                 	db	101	;'e'
  1592  00EE35  20                 	db	32
  1593  00EE36  72                 	db	114	;'r'
  1594  00EE37  65                 	db	101	;'e'
  1595  00EE38  66                 	db	102	;'f'
  1596  00EE39  65                 	db	101	;'e'
  1597  00EE3A  72                 	db	114	;'r'
  1598  00EE3B  65                 	db	101	;'e'
  1599  00EE3C  6E                 	db	110	;'n'
  1600  00EE3D  63                 	db	99	;'c'
  1601  00EE3E  65                 	db	101	;'e'
  1602  00EE3F  20                 	db	32
  1603  00EE40  62                 	db	98	;'b'
  1604  00EE41  75                 	db	117	;'u'
  1605  00EE42  66                 	db	102	;'f'
  1606  00EE43  66                 	db	102	;'f'
  1607  00EE44  65                 	db	101	;'e'
  1608  00EE45  72                 	db	114	;'r'
  1609  00EE46  20                 	db	32
  1610  00EE47  31                 	db	49	;'1'
  1611  00EE48  20                 	db	32
  1612  00EE49  6F                 	db	111	;'o'
  1613  00EE4A  75                 	db	117	;'u'
  1614  00EE4B  74                 	db	116	;'t'
  1615  00EE4C  70                 	db	112	;'p'
  1616  00EE4D  75                 	db	117	;'u'
  1617  00EE4E  74                 	db	116	;'t'
  1618  00EE4F  20                 	db	32
  1619  00EE50  69                 	db	105	;'i'
  1620  00EE51  6E                 	db	110	;'n'
  1621  00EE52  20                 	db	32
  1622  00EE53  76                 	db	118	;'v'
  1623  00EE54  6F                 	db	111	;'o'
  1624  00EE55  6C                 	db	108	;'l'
  1625  00EE56  74                 	db	116	;'t'
  1626  00EE57  73                 	db	115	;'s'
  1627  00EE58  0A                 	db	10
  1628  00EE59  0D                 	db	13
  1629  00EE5A  20                 	db	32
  1630  00EE5B  20                 	db	32
  1631  00EE5C  20                 	db	32
  1632  00EE5D  4D                 	db	77	;'M'
  1633  00EE5E  65                 	db	101	;'e'
  1634  00EE5F  61                 	db	97	;'a'
  1635  00EE60  73                 	db	115	;'s'
  1636  00EE61  75                 	db	117	;'u'
  1637  00EE62  72                 	db	114	;'r'
  1638  00EE63  65                 	db	101	;'e'
  1639  00EE64  20                 	db	32
  1640  00EE65  41                 	db	65	;'A'
  1641  00EE66  56                 	db	86	;'V'
  1642  00EE67  53                 	db	83	;'S'
  1643  00EE68  53                 	db	83	;'S'
  1644  00EE69  3F                 	db	63	;'?'
  1645  00EE6A  3A                 	db	58	;':'
  1646  00EE6B  20                 	db	32
  1647  00EE6C  52                 	db	82	;'R'
  1648  00EE6D  65                 	db	101	;'e'
  1649  00EE6E  74                 	db	116	;'t'
  1650  00EE6F  75                 	db	117	;'u'
  1651  00EE70  72                 	db	114	;'r'
  1652  00EE71  6E                 	db	110	;'n'
  1653  00EE72  73                 	db	115	;'s'
  1654  00EE73  20                 	db	32
  1655  00EE74  74                 	db	116	;'t'
  1656  00EE75  68                 	db	104	;'h'
  1657  00EE76  65                 	db	101	;'e'
  1658  00EE77  20                 	db	32
  1659  00EE78  6D                 	db	109	;'m'
  1660  00EE79  65                 	db	101	;'e'
  1661  00EE7A  61                 	db	97	;'a'
  1662  00EE7B  73                 	db	115	;'s'
  1663  00EE7C  75                 	db	117	;'u'
  1664  00EE7D  72                 	db	114	;'r'
  1665  00EE7E  65                 	db	101	;'e'
  1666  00EE7F  64                 	db	100	;'d'
  1667  00EE80  20                 	db	32
  1668  00EE81  76                 	db	118	;'v'
  1669  00EE82  61                 	db	97	;'a'
  1670  00EE83  6C                 	db	108	;'l'
  1671  00EE84  75                 	db	117	;'u'
  1672  00EE85  65                 	db	101	;'e'
  1673  00EE86  20                 	db	32
  1674  00EE87  6F                 	db	111	;'o'
  1675  00EE88  66                 	db	102	;'f'
  1676  00EE89  20                 	db	32
  1677  00EE8A  41                 	db	65	;'A'
  1678  00EE8B  6E                 	db	110	;'n'
  1679  00EE8C  61                 	db	97	;'a'
  1680  00EE8D  6C                 	db	108	;'l'
  1681  00EE8E  6F                 	db	111	;'o'
  1682  00EE8F  67                 	db	103	;'g'
  1683  00EE90  20                 	db	32
  1684  00EE91  56                 	db	86	;'V'
  1685  00EE92  53                 	db	83	;'S'
  1686  00EE93  53                 	db	83	;'S'
  1687  00EE94  20                 	db	32
  1688  00EE95  69                 	db	105	;'i'
  1689  00EE96  6E                 	db	110	;'n'
  1690  00EE97  20                 	db	32
  1691  00EE98  76                 	db	118	;'v'
  1692  00EE99  6F                 	db	111	;'o'
  1693  00EE9A  6C                 	db	108	;'l'
  1694  00EE9B  74                 	db	116	;'t'
  1695  00EE9C  73                 	db	115	;'s'
  1696  00EE9D  0A                 	db	10
  1697  00EE9E  0D                 	db	13
  1698  00EE9F  50                 	db	80	;'P'
  1699  00EEA0  72                 	db	114	;'r'
  1700  00EEA1  69                 	db	105	;'i'
  1701  00EEA2  6D                 	db	109	;'m'
  1702  00EEA3  61                 	db	97	;'a'
  1703  00EEA4  72                 	db	114	;'r'
  1704  00EEA5  79                 	db	121	;'y'
  1705  00EEA6  20                 	db	32
  1706  00EEA7  4D                 	db	77	;'M'
  1707  00EEA8  65                 	db	101	;'e'
  1708  00EEA9  61                 	db	97	;'a'
  1709  00EEAA  73                 	db	115	;'s'
  1710  00EEAB  75                 	db	117	;'u'
  1711  00EEAC  72                 	db	114	;'r'
  1712  00EEAD  65                 	db	101	;'e'
  1713  00EEAE  6D                 	db	109	;'m'
  1714  00EEAF  65                 	db	101	;'e'
  1715  00EEB0  6E                 	db	110	;'n'
  1716  00EEB1  74                 	db	116	;'t'
  1717  00EEB2  20                 	db	32
  1718  00EEB3  43                 	db	67	;'C'
  1719  00EEB4  6F                 	db	111	;'o'
  1720  00EEB5  6D                 	db	109	;'m'
  1721  00EEB6  6D                 	db	109	;'m'
  1722  00EEB7  61                 	db	97	;'a'
  1723  00EEB8  6E                 	db	110	;'n'
  1724  00EEB9  64                 	db	100	;'d'
  1725  00EEBA  73                 	db	115	;'s'
  1726  00EEBB  3A                 	db	58	;':'
  1727  00EEBC  0A                 	db	10
  1728  00EEBD  0D                 	db	13
  1729  00EEBE  20                 	db	32
  1730  00EEBF  20                 	db	32
  1731  00EEC0  20                 	db	32
  1732  00EEC1  4D                 	db	77	;'M'
  1733  00EEC2  65                 	db	101	;'e'
  1734  00EEC3  61                 	db	97	;'a'
  1735  00EEC4  73                 	db	115	;'s'
  1736  00EEC5  75                 	db	117	;'u'
  1737  00EEC6  72                 	db	114	;'r'
  1738  00EEC7  65                 	db	101	;'e'
  1739  00EEC8  20                 	db	32
  1740  00EEC9  44                 	db	68	;'D'
  1741  00EECA  65                 	db	101	;'e'
  1742  00EECB  74                 	db	116	;'t'
  1743  00EECC  65                 	db	101	;'e'
  1744  00EECD  63                 	db	99	;'c'
  1745  00EECE  74                 	db	116	;'t'
  1746  00EECF  65                 	db	101	;'e'
  1747  00EED0  64                 	db	100	;'d'
  1748  00EED1  20                 	db	32
  1749  00EED2  43                 	db	67	;'C'
  1750  00EED3  75                 	db	117	;'u'
  1751  00EED4  72                 	db	114	;'r'
  1752  00EED5  72                 	db	114	;'r'
  1753  00EED6  65                 	db	101	;'e'
  1754  00EED7  6E                 	db	110	;'n'
  1755  00EED8  74                 	db	116	;'t'
  1756  00EED9  3F                 	db	63	;'?'
  1757  00EEDA  3A                 	db	58	;':'
  1758  00EEDB  20                 	db	32
  1759  00EEDC  52                 	db	82	;'R'
  1760  00EEDD  65                 	db	101	;'e'
  1761  00EEDE  74                 	db	116	;'t'
  1762  00EEDF  75                 	db	117	;'u'
  1763  00EEE0  72                 	db	114	;'r'
  1764  00EEE1  6E                 	db	110	;'n'
  1765  00EEE2  73                 	db	115	;'s'
  1766  00EEE3  20                 	db	32
  1767  00EEE4  6D                 	db	109	;'m'
  1768  00EEE5  65                 	db	101	;'e'
  1769  00EEE6  61                 	db	97	;'a'
  1770  00EEE7  73                 	db	115	;'s'
  1771  00EEE8  75                 	db	117	;'u'
  1772  00EEE9  72                 	db	114	;'r'
  1773  00EEEA  65                 	db	101	;'e'
  1774  00EEEB  64                 	db	100	;'d'
  1775  00EEEC  20                 	db	32
  1776  00EEED  6F                 	db	111	;'o'
  1777  00EEEE  75                 	db	117	;'u'
  1778  00EEEF  74                 	db	116	;'t'
  1779  00EEF0  70                 	db	112	;'p'
  1780  00EEF1  75                 	db	117	;'u'
  1781  00EEF2  74                 	db	116	;'t'
  1782  00EEF3  20                 	db	32
  1783  00EEF4  63                 	db	99	;'c'
  1784  00EEF5  75                 	db	117	;'u'
  1785  00EEF6  72                 	db	114	;'r'
  1786  00EEF7  72                 	db	114	;'r'
  1787  00EEF8  65                 	db	101	;'e'
  1788  00EEF9  6E                 	db	110	;'n'
  1789  00EEFA  74                 	db	116	;'t'
  1790  00EEFB  20                 	db	32
  1791  00EEFC  69                 	db	105	;'i'
  1792  00EEFD  6E                 	db	110	;'n'
  1793  00EEFE  20                 	db	32
  1794  00EEFF  61                 	db	97	;'a'
  1795  00EF00  6D                 	db	109	;'m'
  1796  00EF01  70                 	db	112	;'p'
  1797  00EF02  73                 	db	115	;'s'
  1798  00EF03  20                 	db	32
  1799  00EF04  61                 	db	97	;'a'
  1800  00EF05  73                 	db	115	;'s'
  1801  00EF06  20                 	db	32
  1802  00EF07  73                 	db	115	;'s'
  1803  00EF08  65                 	db	101	;'e'
  1804  00EF09  65                 	db	101	;'e'
  1805  00EF0A  6E                 	db	110	;'n'
  1806  00EF0B  20                 	db	32
  1807  00EF0C  62                 	db	98	;'b'
  1808  00EF0D  79                 	db	121	;'y'
  1809  00EF0E  20                 	db	32
  1810  00EF0F  41                 	db	65	;'A'
  1811  00EF10  44                 	db	68	;'D'
  1812  00EF11  43                 	db	67	;'C'
  1813  00EF12  0A                 	db	10
  1814  00EF13  0D                 	db	13
  1815  00EF14  20                 	db	32
  1816  00EF15  20                 	db	32
  1817  00EF16  20                 	db	32
  1818  00EF17  4D                 	db	77	;'M'
  1819  00EF18  65                 	db	101	;'e'
  1820  00EF19  61                 	db	97	;'a'
  1821  00EF1A  73                 	db	115	;'s'
  1822  00EF1B  75                 	db	117	;'u'
  1823  00EF1C  72                 	db	114	;'r'
  1824  00EF1D  65                 	db	101	;'e'
  1825  00EF1E  20                 	db	32
  1826  00EF1F  52                 	db	82	;'R'
  1827  00EF20  4D                 	db	77	;'M'
  1828  00EF21  53                 	db	83	;'S'
  1829  00EF22  20                 	db	32
  1830  00EF23  43                 	db	67	;'C'
  1831  00EF24  75                 	db	117	;'u'
  1832  00EF25  72                 	db	114	;'r'
  1833  00EF26  72                 	db	114	;'r'
  1834  00EF27  65                 	db	101	;'e'
  1835  00EF28  6E                 	db	110	;'n'
  1836  00EF29  74                 	db	116	;'t'
  1837  00EF2A  3F                 	db	63	;'?'
  1838  00EF2B  3A                 	db	58	;':'
  1839  00EF2C  20                 	db	32
  1840  00EF2D  52                 	db	82	;'R'
  1841  00EF2E  65                 	db	101	;'e'
  1842  00EF2F  74                 	db	116	;'t'
  1843  00EF30  75                 	db	117	;'u'
  1844  00EF31  72                 	db	114	;'r'
  1845  00EF32  6E                 	db	110	;'n'
  1846  00EF33  73                 	db	115	;'s'
  1847  00EF34  20                 	db	32
  1848  00EF35  74                 	db	116	;'t'
  1849  00EF36  68                 	db	104	;'h'
  1850  00EF37  65                 	db	101	;'e'
  1851  00EF38  20                 	db	32
  1852  00EF39  63                 	db	99	;'c'
  1853  00EF3A  61                 	db	97	;'a'
  1854  00EF3B  6C                 	db	108	;'l'
  1855  00EF3C  63                 	db	99	;'c'
  1856  00EF3D  75                 	db	117	;'u'
  1857  00EF3E  6C                 	db	108	;'l'
  1858  00EF3F  61                 	db	97	;'a'
  1859  00EF40  74                 	db	116	;'t'
  1860  00EF41  65                 	db	101	;'e'
  1861  00EF42  64                 	db	100	;'d'
  1862  00EF43  20                 	db	32
  1863  00EF44  52                 	db	82	;'R'
  1864  00EF45  4D                 	db	77	;'M'
  1865  00EF46  53                 	db	83	;'S'
  1866  00EF47  20                 	db	32
  1867  00EF48  6F                 	db	111	;'o'
  1868  00EF49  75                 	db	117	;'u'
  1869  00EF4A  74                 	db	116	;'t'
  1870  00EF4B  70                 	db	112	;'p'
  1871  00EF4C  75                 	db	117	;'u'
  1872  00EF4D  74                 	db	116	;'t'
  1873  00EF4E  20                 	db	32
  1874  00EF4F  63                 	db	99	;'c'
  1875  00EF50  75                 	db	117	;'u'
  1876  00EF51  72                 	db	114	;'r'
  1877  00EF52  72                 	db	114	;'r'
  1878  00EF53  65                 	db	101	;'e'
  1879  00EF54  6E                 	db	110	;'n'
  1880  00EF55  74                 	db	116	;'t'
  1881  00EF56  20                 	db	32
  1882  00EF57  66                 	db	102	;'f'
  1883  00EF58  72                 	db	114	;'r'
  1884  00EF59  6F                 	db	111	;'o'
  1885  00EF5A  6D                 	db	109	;'m'
  1886  00EF5B  20                 	db	32
  1887  00EF5C  6D                 	db	109	;'m'
  1888  00EF5D  65                 	db	101	;'e'
  1889  00EF5E  61                 	db	97	;'a'
  1890  00EF5F  73                 	db	115	;'s'
  1891  00EF60  75                 	db	117	;'u'
  1892  00EF61  72                 	db	114	;'r'
  1893  00EF62  65                 	db	101	;'e'
  1894  00EF63  6D                 	db	109	;'m'
  1895  00EF64  65                 	db	101	;'e'
  1896  00EF65  6E                 	db	110	;'n'
  1897  00EF66  74                 	db	116	;'t'
  1898  00EF67  73                 	db	115	;'s'
  1899  00EF68  20                 	db	32
  1900  00EF69  61                 	db	97	;'a'
  1901  00EF6A  6E                 	db	110	;'n'
  1902  00EF6B  64                 	db	100	;'d'
  1903  00EF6C  20                 	db	32
  1904  00EF6D  54                 	db	84	;'T'
  1905  00EF6E  52                 	db	82	;'R'
  1906  00EF6F  49                 	db	73	;'I'
  1907  00EF70  41                 	db	65	;'A'
  1908  00EF71  43                 	db	67	;'C'
  1909  00EF72  20                 	db	32
  1910  00EF73  66                 	db	102	;'f'
  1911  00EF74  69                 	db	105	;'i'
  1912  00EF75  72                 	db	114	;'r'
  1913  00EF76  69                 	db	105	;'i'
  1914  00EF77  6E                 	db	110	;'n'
  1915  00EF78  67                 	db	103	;'g'
  1916  00EF79  20                 	db	32
  1917  00EF7A  61                 	db	97	;'a'
  1918  00EF7B  6E                 	db	110	;'n'
  1919  00EF7C  67                 	db	103	;'g'
  1920  00EF7D  6C                 	db	108	;'l'
  1921  00EF7E  65                 	db	101	;'e'
  1922  00EF7F  0A                 	db	10
  1923  00EF80  0D                 	db	13
  1924  00EF81  20                 	db	32
  1925  00EF82  20                 	db	32
  1926  00EF83  20                 	db	32
  1927  00EF84  4D                 	db	77	;'M'
  1928  00EF85  65                 	db	101	;'e'
  1929  00EF86  61                 	db	97	;'a'
  1930  00EF87  73                 	db	115	;'s'
  1931  00EF88  75                 	db	117	;'u'
  1932  00EF89  72                 	db	114	;'r'
  1933  00EF8A  65                 	db	101	;'e'
  1934  00EF8B  20                 	db	32
  1935  00EF8C  52                 	db	82	;'R'
  1936  00EF8D  4D                 	db	77	;'M'
  1937  00EF8E  53                 	db	83	;'S'
  1938  00EF8F  20                 	db	32
  1939  00EF90  56                 	db	86	;'V'
  1940  00EF91  6F                 	db	111	;'o'
  1941  00EF92  6C                 	db	108	;'l'
  1942  00EF93  74                 	db	116	;'t'
  1943  00EF94  61                 	db	97	;'a'
  1944  00EF95  67                 	db	103	;'g'
  1945  00EF96  65                 	db	101	;'e'
  1946  00EF97  3F                 	db	63	;'?'
  1947  00EF98  3A                 	db	58	;':'
  1948  00EF99  20                 	db	32
  1949  00EF9A  52                 	db	82	;'R'
  1950  00EF9B  65                 	db	101	;'e'
  1951  00EF9C  74                 	db	116	;'t'
  1952  00EF9D  75                 	db	117	;'u'
  1953  00EF9E  72                 	db	114	;'r'
  1954  00EF9F  6E                 	db	110	;'n'
  1955  00EFA0  73                 	db	115	;'s'
  1956  00EFA1  20                 	db	32
  1957  00EFA2  74                 	db	116	;'t'
  1958  00EFA3  68                 	db	104	;'h'
  1959  00EFA4  65                 	db	101	;'e'
  1960  00EFA5  20                 	db	32
  1961  00EFA6  63                 	db	99	;'c'
  1962  00EFA7  61                 	db	97	;'a'
  1963  00EFA8  6C                 	db	108	;'l'
  1964  00EFA9  63                 	db	99	;'c'
  1965  00EFAA  75                 	db	117	;'u'
  1966  00EFAB  6C                 	db	108	;'l'
  1967  00EFAC  61                 	db	97	;'a'
  1968  00EFAD  74                 	db	116	;'t'
  1969  00EFAE  65                 	db	101	;'e'
  1970  00EFAF  64                 	db	100	;'d'
  1971  00EFB0  20                 	db	32
  1972  00EFB1  52                 	db	82	;'R'
  1973  00EFB2  4D                 	db	77	;'M'
  1974  00EFB3  53                 	db	83	;'S'
  1975  00EFB4  20                 	db	32
  1976  00EFB5  6F                 	db	111	;'o'
  1977  00EFB6  75                 	db	117	;'u'
  1978  00EFB7  74                 	db	116	;'t'
  1979  00EFB8  70                 	db	112	;'p'
  1980  00EFB9  75                 	db	117	;'u'
  1981  00EFBA  74                 	db	116	;'t'
  1982  00EFBB  20                 	db	32
  1983  00EFBC  76                 	db	118	;'v'
  1984  00EFBD  6F                 	db	111	;'o'
  1985  00EFBE  6C                 	db	108	;'l'
  1986  00EFBF  74                 	db	116	;'t'
  1987  00EFC0  61                 	db	97	;'a'
  1988  00EFC1  67                 	db	103	;'g'
  1989  00EFC2  65                 	db	101	;'e'
  1990  00EFC3  20                 	db	32
  1991  00EFC4  66                 	db	102	;'f'
  1992  00EFC5  72                 	db	114	;'r'
  1993  00EFC6  6F                 	db	111	;'o'
  1994  00EFC7  6D                 	db	109	;'m'
  1995  00EFC8  20                 	db	32
  1996  00EFC9  54                 	db	84	;'T'
  1997  00EFCA  52                 	db	82	;'R'
  1998  00EFCB  49                 	db	73	;'I'
  1999  00EFCC  41                 	db	65	;'A'
  2000  00EFCD  43                 	db	67	;'C'
  2001  00EFCE  20                 	db	32
  2002  00EFCF  66                 	db	102	;'f'
  2003  00EFD0  69                 	db	105	;'i'
  2004  00EFD1  72                 	db	114	;'r'
  2005  00EFD2  69                 	db	105	;'i'
  2006  00EFD3  6E                 	db	110	;'n'
  2007  00EFD4  67                 	db	103	;'g'
  2008  00EFD5  20                 	db	32
  2009  00EFD6  61                 	db	97	;'a'
  2010  00EFD7  6E                 	db	110	;'n'
  2011  00EFD8  67                 	db	103	;'g'
  2012  00EFD9  6C                 	db	108	;'l'
  2013  00EFDA  65                 	db	101	;'e'
  2014  00EFDB  0A                 	db	10
  2015  00EFDC  0D                 	db	13
  2016  00EFDD  20                 	db	32
  2017  00EFDE  20                 	db	32
  2018  00EFDF  20                 	db	32
  2019  00EFE0  4D                 	db	77	;'M'
  2020  00EFE1  65                 	db	101	;'e'
  2021  00EFE2  61                 	db	97	;'a'
  2022  00EFE3  73                 	db	115	;'s'
  2023  00EFE4  75                 	db	117	;'u'
  2024  00EFE5  72                 	db	114	;'r'
  2025  00EFE6  65                 	db	101	;'e'
  2026  00EFE7  20                 	db	32
  2027  00EFE8  50                 	db	80	;'P'
  2028  00EFE9  6F                 	db	111	;'o'
  2029  00EFEA  77                 	db	119	;'w'
  2030  00EFEB  65                 	db	101	;'e'
  2031  00EFEC  72                 	db	114	;'r'
  2032  00EFED  3F                 	db	63	;'?'
  2033  00EFEE  3A                 	db	58	;':'
  2034  00EFEF  20                 	db	32
  2035  00EFF0  52                 	db	82	;'R'
  2036  00EFF1  65                 	db	101	;'e'
  2037  00EFF2  74                 	db	116	;'t'
  2038  00EFF3  75                 	db	117	;'u'
  2039  00EFF4  72                 	db	114	;'r'
  2040  00EFF5  6E                 	db	110	;'n'
  2041  00EFF6  73                 	db	115	;'s'
  2042  00EFF7  20                 	db	32
  2043  00EFF8  74                 	db	116	;'t'
  2044  00EFF9  68                 	db	104	;'h'
  2045  00EFFA  65                 	db	101	;'e'
  2046  00EFFB  20                 	db	32
  2047  00EFFC  63                 	db	99	;'c'
  2048  00EFFD  61                 	db	97	;'a'
  2049  00EFFE  6C                 	db	108	;'l'
  2050  00EFFF  63                 	db	99	;'c'
  2051  00F000  75                 	db	117	;'u'
  2052  00F001  6C                 	db	108	;'l'
  2053  00F002  61                 	db	97	;'a'
  2054  00F003  74                 	db	116	;'t'
  2055  00F004  65                 	db	101	;'e'
  2056  00F005  64                 	db	100	;'d'
  2057  00F006  20                 	db	32
  2058  00F007  6F                 	db	111	;'o'
  2059  00F008  75                 	db	117	;'u'
  2060  00F009  74                 	db	116	;'t'
  2061  00F00A  70                 	db	112	;'p'
  2062  00F00B  75                 	db	117	;'u'
  2063  00F00C  74                 	db	116	;'t'
  2064  00F00D  20                 	db	32
  2065  00F00E  70                 	db	112	;'p'
  2066  00F00F  6F                 	db	111	;'o'
  2067  00F010  77                 	db	119	;'w'
  2068  00F011  65                 	db	101	;'e'
  2069  00F012  72                 	db	114	;'r'
  2070  00F013  20                 	db	32
  2071  00F014  69                 	db	105	;'i'
  2072  00F015  6E                 	db	110	;'n'
  2073  00F016  20                 	db	32
  2074  00F017  57                 	db	87	;'W'
  2075  00F018  61                 	db	97	;'a'
  2076  00F019  74                 	db	116	;'t'
  2077  00F01A  74                 	db	116	;'t'
  2078  00F01B  73                 	db	115	;'s'
  2079  00F01C  0A                 	db	10
  2080  00F01D  0D                 	db	13
  2081  00F01E  20                 	db	32
  2082  00F01F  20                 	db	32
  2083  00F020  20                 	db	32
  2084  00F021  4C                 	db	76	;'L'
  2085  00F022  6F                 	db	111	;'o'
  2086  00F023  61                 	db	97	;'a'
  2087  00F024  64                 	db	100	;'d'
  2088  00F025  20                 	db	32
  2089  00F026  4F                 	db	79	;'O'
  2090  00F027  6E                 	db	110	;'n'
  2091  00F028  20                 	db	32
  2092  00F029  54                 	db	84	;'T'
  2093  00F02A  69                 	db	105	;'i'
  2094  00F02B  6D                 	db	109	;'m'
  2095  00F02C  65                 	db	101	;'e'
  2096  00F02D  3F                 	db	63	;'?'
  2097  00F02E  3A                 	db	58	;':'
  2098  00F02F  20                 	db	32
  2099  00F030  52                 	db	82	;'R'
  2100  00F031  65                 	db	101	;'e'
  2101  00F032  74                 	db	116	;'t'
  2102  00F033  75                 	db	117	;'u'
  2103  00F034  72                 	db	114	;'r'
  2104  00F035  6E                 	db	110	;'n'
  2105  00F036  73                 	db	115	;'s'
  2106  00F037  20                 	db	32
  2107  00F038  6C                 	db	108	;'l'
  2108  00F039  6F                 	db	111	;'o'
  2109  00F03A  61                 	db	97	;'a'
  2110  00F03B  64                 	db	100	;'d'
  2111  00F03C  20                 	db	32
  2112  00F03D  6F                 	db	111	;'o'
  2113  00F03E  6E                 	db	110	;'n'
  2114  00F03F  20                 	db	32
  2115  00F040  74                 	db	116	;'t'
  2116  00F041  69                 	db	105	;'i'
  2117  00F042  6D                 	db	109	;'m'
  2118  00F043  65                 	db	101	;'e'
  2119  00F044  20                 	db	32
  2120  00F045  73                 	db	115	;'s'
  2121  00F046  69                 	db	105	;'i'
  2122  00F047  6E                 	db	110	;'n'
  2123  00F048  63                 	db	99	;'c'
  2124  00F049  65                 	db	101	;'e'
  2125  00F04A  20                 	db	32
  2126  00F04B  6C                 	db	108	;'l'
  2127  00F04C  61                 	db	97	;'a'
  2128  00F04D  73                 	db	115	;'s'
  2129  00F04E  74                 	db	116	;'t'
  2130  00F04F  20                 	db	32
  2131  00F050  64                 	db	100	;'d'
  2132  00F051  65                 	db	101	;'e'
  2133  00F052  76                 	db	118	;'v'
  2134  00F053  69                 	db	105	;'i'
  2135  00F054  63                 	db	99	;'c'
  2136  00F055  65                 	db	101	;'e'
  2137  00F056  20                 	db	32
  2138  00F057  72                 	db	114	;'r'
  2139  00F058  65                 	db	101	;'e'
  2140  00F059  73                 	db	115	;'s'
  2141  00F05A  65                 	db	101	;'e'
  2142  00F05B  74                 	db	116	;'t'
  2143  00F05C  20                 	db	32
  2144  00F05D  69                 	db	105	;'i'
  2145  00F05E  6E                 	db	110	;'n'
  2146  00F05F  20                 	db	32
  2147  00F060  73                 	db	115	;'s'
  2148  00F061  65                 	db	101	;'e'
  2149  00F062  63                 	db	99	;'c'
  2150  00F063  6F                 	db	111	;'o'
  2151  00F064  6E                 	db	110	;'n'
  2152  00F065  64                 	db	100	;'d'
  2153  00F066  73                 	db	115	;'s'
  2154  00F067  0A                 	db	10
  2155  00F068  0D                 	db	13
  2156  00F069  20                 	db	32
  2157  00F06A  20                 	db	32
  2158  00F06B  20                 	db	32
  2159  00F06C  4D                 	db	77	;'M'
  2160  00F06D  61                 	db	97	;'a'
  2161  00F06E  78                 	db	120	;'x'
  2162  00F06F  20                 	db	32
  2163  00F070  52                 	db	82	;'R'
  2164  00F071  4D                 	db	77	;'M'
  2165  00F072  53                 	db	83	;'S'
  2166  00F073  20                 	db	32
  2167  00F074  43                 	db	67	;'C'
  2168  00F075  75                 	db	117	;'u'
  2169  00F076  72                 	db	114	;'r'
  2170  00F077  72                 	db	114	;'r'
  2171  00F078  65                 	db	101	;'e'
  2172  00F079  6E                 	db	110	;'n'
  2173  00F07A  74                 	db	116	;'t'
  2174  00F07B  3F                 	db	63	;'?'
  2175  00F07C  3A                 	db	58	;':'
  2176  00F07D  20                 	db	32
  2177  00F07E  50                 	db	80	;'P'
  2178  00F07F  72                 	db	114	;'r'
  2179  00F080  69                 	db	105	;'i'
  2180  00F081  6E                 	db	110	;'n'
  2181  00F082  74                 	db	116	;'t'
  2182  00F083  73                 	db	115	;'s'
  2183  00F084  20                 	db	32
  2184  00F085  74                 	db	116	;'t'
  2185  00F086  68                 	db	104	;'h'
  2186  00F087  65                 	db	101	;'e'
  2187  00F088  20                 	db	32
  2188  00F089  6D                 	db	109	;'m'
  2189  00F08A  61                 	db	97	;'a'
  2190  00F08B  78                 	db	120	;'x'
  2191  00F08C  69                 	db	105	;'i'
  2192  00F08D  6D                 	db	109	;'m'
  2193  00F08E  75                 	db	117	;'u'
  2194  00F08F  6D                 	db	109	;'m'
  2195  00F090  20                 	db	32
  2196  00F091  72                 	db	114	;'r'
  2197  00F092  65                 	db	101	;'e'
  2198  00F093  63                 	db	99	;'c'
  2199  00F094  6F                 	db	111	;'o'
  2200  00F095  72                 	db	114	;'r'
  2201  00F096  64                 	db	100	;'d'
  2202  00F097  65                 	db	101	;'e'
  2203  00F098  64                 	db	100	;'d'
  2204  00F099  20                 	db	32
  2205  00F09A  52                 	db	82	;'R'
  2206  00F09B  4D                 	db	77	;'M'
  2207  00F09C  53                 	db	83	;'S'
  2208  00F09D  20                 	db	32
  2209  00F09E  6F                 	db	111	;'o'
  2210  00F09F  75                 	db	117	;'u'
  2211  00F0A0  74                 	db	116	;'t'
  2212  00F0A1  70                 	db	112	;'p'
  2213  00F0A2  75                 	db	117	;'u'
  2214  00F0A3  74                 	db	116	;'t'
  2215  00F0A4  20                 	db	32
  2216  00F0A5  63                 	db	99	;'c'
  2217  00F0A6  75                 	db	117	;'u'
  2218  00F0A7  72                 	db	114	;'r'
  2219  00F0A8  72                 	db	114	;'r'
  2220  00F0A9  65                 	db	101	;'e'
  2221  00F0AA  6E                 	db	110	;'n'
  2222  00F0AB  74                 	db	116	;'t'
  2223  00F0AC  0A                 	db	10
  2224  00F0AD  0D                 	db	13
  2225  00F0AE  20                 	db	32
  2226  00F0AF  20                 	db	32
  2227  00F0B0  20                 	db	32
  2228  00F0B1  4D                 	db	77	;'M'
  2229  00F0B2  61                 	db	97	;'a'
  2230  00F0B3  78                 	db	120	;'x'
  2231  00F0B4  20                 	db	32
  2232  00F0B5  50                 	db	80	;'P'
  2233  00F0B6  6F                 	db	111	;'o'
  2234  00F0B7  77                 	db	119	;'w'
  2235  00F0B8  65                 	db	101	;'e'
  2236  00F0B9  72                 	db	114	;'r'
  2237  00F0BA  3F                 	db	63	;'?'
  2238  00F0BB  3A                 	db	58	;':'
  2239  00F0BC  20                 	db	32
  2240  00F0BD  50                 	db	80	;'P'
  2241  00F0BE  72                 	db	114	;'r'
  2242  00F0BF  69                 	db	105	;'i'
  2243  00F0C0  6E                 	db	110	;'n'
  2244  00F0C1  74                 	db	116	;'t'
  2245  00F0C2  73                 	db	115	;'s'
  2246  00F0C3  20                 	db	32
  2247  00F0C4  74                 	db	116	;'t'
  2248  00F0C5  68                 	db	104	;'h'
  2249  00F0C6  65                 	db	101	;'e'
  2250  00F0C7  20                 	db	32
  2251  00F0C8  6D                 	db	109	;'m'
  2252  00F0C9  61                 	db	97	;'a'
  2253  00F0CA  78                 	db	120	;'x'
  2254  00F0CB  69                 	db	105	;'i'
  2255  00F0CC  6D                 	db	109	;'m'
  2256  00F0CD  75                 	db	117	;'u'
  2257  00F0CE  6D                 	db	109	;'m'
  2258  00F0CF  20                 	db	32
  2259  00F0D0  72                 	db	114	;'r'
  2260  00F0D1  65                 	db	101	;'e'
  2261  00F0D2  63                 	db	99	;'c'
  2262  00F0D3  6F                 	db	111	;'o'
  2263  00F0D4  72                 	db	114	;'r'
  2264  00F0D5  64                 	db	100	;'d'
  2265  00F0D6  65                 	db	101	;'e'
  2266  00F0D7  64                 	db	100	;'d'
  2267  00F0D8  20                 	db	32
  2268  00F0D9  6F                 	db	111	;'o'
  2269  00F0DA  75                 	db	117	;'u'
  2270  00F0DB  74                 	db	116	;'t'
  2271  00F0DC  70                 	db	112	;'p'
  2272  00F0DD  75                 	db	117	;'u'
  2273  00F0DE  74                 	db	116	;'t'
  2274  00F0DF  20                 	db	32
  2275  00F0E0  70                 	db	112	;'p'
  2276  00F0E1  6F                 	db	111	;'o'
  2277  00F0E2  77                 	db	119	;'w'
  2278  00F0E3  65                 	db	101	;'e'
  2279  00F0E4  72                 	db	114	;'r'
  2280  00F0E5  0A                 	db	10
  2281  00F0E6  0D                 	db	13
  2282  00F0E7  20                 	db	32
  2283  00F0E8  20                 	db	32
  2284  00F0E9  20                 	db	32
  2285  00F0EA  4D                 	db	77	;'M'
  2286  00F0EB  61                 	db	97	;'a'
  2287  00F0EC  78                 	db	120	;'x'
  2288  00F0ED  20                 	db	32
  2289  00F0EE  50                 	db	80	;'P'
  2290  00F0EF  4F                 	db	79	;'O'
  2291  00F0F0  53                 	db	83	;'S'
  2292  00F0F1  33                 	db	51	;'3'
  2293  00F0F2  50                 	db	80	;'P'
  2294  00F0F3  33                 	db	51	;'3'
  2295  00F0F4  3F                 	db	63	;'?'
  2296  00F0F5  20                 	db	32
  2297  00F0F6  50                 	db	80	;'P'
  2298  00F0F7  72                 	db	114	;'r'
  2299  00F0F8  69                 	db	105	;'i'
  2300  00F0F9  6E                 	db	110	;'n'
  2301  00F0FA  74                 	db	116	;'t'
  2302  00F0FB  73                 	db	115	;'s'
  2303  00F0FC  20                 	db	32
  2304  00F0FD  74                 	db	116	;'t'
  2305  00F0FE  68                 	db	104	;'h'
  2306  00F0FF  65                 	db	101	;'e'
  2307  00F100  20                 	db	32
  2308  00F101  6D                 	db	109	;'m'
  2309  00F102  61                 	db	97	;'a'
  2310  00F103  78                 	db	120	;'x'
  2311  00F104  69                 	db	105	;'i'
  2312  00F105  6D                 	db	109	;'m'
  2313  00F106  75                 	db	117	;'u'
  2314  00F107  6D                 	db	109	;'m'
  2315  00F108  20                 	db	32
  2316  00F109  72                 	db	114	;'r'
  2317  00F10A  65                 	db	101	;'e'
  2318  00F10B  63                 	db	99	;'c'
  2319  00F10C  6F                 	db	111	;'o'
  2320  00F10D  72                 	db	114	;'r'
  2321  00F10E  64                 	db	100	;'d'
  2322  00F10F  65                 	db	101	;'e'
  2323  00F110  64                 	db	100	;'d'
  2324  00F111  20                 	db	32
  2325  00F112  50                 	db	80	;'P'
  2326  00F113  4F                 	db	79	;'O'
  2327  00F114  53                 	db	83	;'S'
  2328  00F115  33                 	db	51	;'3'
  2329  00F116  50                 	db	80	;'P'
  2330  00F117  33                 	db	51	;'3'
  2331  00F118  20                 	db	32
  2332  00F119  72                 	db	114	;'r'
  2333  00F11A  61                 	db	97	;'a'
  2334  00F11B  69                 	db	105	;'i'
  2335  00F11C  6C                 	db	108	;'l'
  2336  00F11D  20                 	db	32
  2337  00F11E  76                 	db	118	;'v'
  2338  00F11F  6F                 	db	111	;'o'
  2339  00F120  6C                 	db	108	;'l'
  2340  00F121  74                 	db	116	;'t'
  2341  00F122  61                 	db	97	;'a'
  2342  00F123  67                 	db	103	;'g'
  2343  00F124  65                 	db	101	;'e'
  2344  00F125  0A                 	db	10
  2345  00F126  0D                 	db	13
  2346  00F127  4F                 	db	79	;'O'
  2347  00F128  75                 	db	117	;'u'
  2348  00F129  74                 	db	116	;'t'
  2349  00F12A  70                 	db	112	;'p'
  2350  00F12B  75                 	db	117	;'u'
  2351  00F12C  74                 	db	116	;'t'
  2352  00F12D  20                 	db	32
  2353  00F12E  43                 	db	67	;'C'
  2354  00F12F  6F                 	db	111	;'o'
  2355  00F130  6E                 	db	110	;'n'
  2356  00F131  74                 	db	116	;'t'
  2357  00F132  72                 	db	114	;'r'
  2358  00F133  6F                 	db	111	;'o'
  2359  00F134  6C                 	db	108	;'l'
  2360  00F135  20                 	db	32
  2361  00F136  43                 	db	67	;'C'
  2362  00F137  6F                 	db	111	;'o'
  2363  00F138  6D                 	db	109	;'m'
  2364  00F139  6D                 	db	109	;'m'
  2365  00F13A  61                 	db	97	;'a'
  2366  00F13B  6E                 	db	110	;'n'
  2367  00F13C  64                 	db	100	;'d'
  2368  00F13D  73                 	db	115	;'s'
  2369  00F13E  3A                 	db	58	;':'
  2370  00F13F  0A                 	db	10
  2371  00F140  0D                 	db	13
  2372  00F141  20                 	db	32
  2373  00F142  20                 	db	32
  2374  00F143  20                 	db	32
  2375  00F144  45                 	db	69	;'E'
  2376  00F145  6E                 	db	110	;'n'
  2377  00F146  61                 	db	97	;'a'
  2378  00F147  62                 	db	98	;'b'
  2379  00F148  6C                 	db	108	;'l'
  2380  00F149  65                 	db	101	;'e'
  2381  00F14A  20                 	db	32
  2382  00F14B  44                 	db	68	;'D'
  2383  00F14C  69                 	db	105	;'i'
  2384  00F14D  6D                 	db	109	;'m'
  2385  00F14E  6D                 	db	109	;'m'
  2386  00F14F  69                 	db	105	;'i'
  2387  00F150  6E                 	db	110	;'n'
  2388  00F151  67                 	db	103	;'g'
  2389  00F152  3A                 	db	58	;':'
  2390  00F153  20                 	db	32
  2391  00F154  45                 	db	69	;'E'
  2392  00F155  6E                 	db	110	;'n'
  2393  00F156  61                 	db	97	;'a'
  2394  00F157  62                 	db	98	;'b'
  2395  00F158  6C                 	db	108	;'l'
  2396  00F159  65                 	db	101	;'e'
  2397  00F15A  20                 	db	32
  2398  00F15B  54                 	db	84	;'T'
  2399  00F15C  52                 	db	82	;'R'
  2400  00F15D  49                 	db	73	;'I'
  2401  00F15E  41                 	db	65	;'A'
  2402  00F15F  43                 	db	67	;'C'
  2403  00F160  20                 	db	32
  2404  00F161  6F                 	db	111	;'o'
  2405  00F162  75                 	db	117	;'u'
  2406  00F163  74                 	db	116	;'t'
  2407  00F164  70                 	db	112	;'p'
  2408  00F165  75                 	db	117	;'u'
  2409  00F166  74                 	db	116	;'t'
  2410  00F167  20                 	db	32
  2411  00F168  64                 	db	100	;'d'
  2412  00F169  69                 	db	105	;'i'
  2413  00F16A  6D                 	db	109	;'m'
  2414  00F16B  6D                 	db	109	;'m'
  2415  00F16C  69                 	db	105	;'i'
  2416  00F16D  6E                 	db	110	;'n'
  2417  00F16E  67                 	db	103	;'g'
  2418  00F16F  0A                 	db	10
  2419  00F170  0D                 	db	13
  2420  00F171  20                 	db	32
  2421  00F172  20                 	db	32
  2422  00F173  20                 	db	32
  2423  00F174  44                 	db	68	;'D'
  2424  00F175  69                 	db	105	;'i'
  2425  00F176  73                 	db	115	;'s'
  2426  00F177  61                 	db	97	;'a'
  2427  00F178  62                 	db	98	;'b'
  2428  00F179  6C                 	db	108	;'l'
  2429  00F17A  65                 	db	101	;'e'
  2430  00F17B  20                 	db	32
  2431  00F17C  44                 	db	68	;'D'
  2432  00F17D  69                 	db	105	;'i'
  2433  00F17E  6D                 	db	109	;'m'
  2434  00F17F  6D                 	db	109	;'m'
  2435  00F180  69                 	db	105	;'i'
  2436  00F181  6E                 	db	110	;'n'
  2437  00F182  67                 	db	103	;'g'
  2438  00F183  3A                 	db	58	;':'
  2439  00F184  20                 	db	32
  2440  00F185  44                 	db	68	;'D'
  2441  00F186  69                 	db	105	;'i'
  2442  00F187  73                 	db	115	;'s'
  2443  00F188  61                 	db	97	;'a'
  2444  00F189  62                 	db	98	;'b'
  2445  00F18A  6C                 	db	108	;'l'
  2446  00F18B  65                 	db	101	;'e'
  2447  00F18C  20                 	db	32
  2448  00F18D  54                 	db	84	;'T'
  2449  00F18E  52                 	db	82	;'R'
  2450  00F18F  49                 	db	73	;'I'
  2451  00F190  41                 	db	65	;'A'
  2452  00F191  43                 	db	67	;'C'
  2453  00F192  20                 	db	32
  2454  00F193  6F                 	db	111	;'o'
  2455  00F194  75                 	db	117	;'u'
  2456  00F195  74                 	db	116	;'t'
  2457  00F196  70                 	db	112	;'p'
  2458  00F197  75                 	db	117	;'u'
  2459  00F198  74                 	db	116	;'t'
  2460  00F199  20                 	db	32
  2461  00F19A  64                 	db	100	;'d'
  2462  00F19B  69                 	db	105	;'i'
  2463  00F19C  6D                 	db	109	;'m'
  2464  00F19D  6D                 	db	109	;'m'
  2465  00F19E  69                 	db	105	;'i'
  2466  00F19F  6E                 	db	110	;'n'
  2467  00F1A0  67                 	db	103	;'g'
  2468  00F1A1  0A                 	db	10
  2469  00F1A2  0D                 	db	13
  2470  00F1A3  20                 	db	32
  2471  00F1A4  20                 	db	32
  2472  00F1A5  20                 	db	32
  2473  00F1A6  45                 	db	69	;'E'
  2474  00F1A7  6E                 	db	110	;'n'
  2475  00F1A8  61                 	db	97	;'a'
  2476  00F1A9  62                 	db	98	;'b'
  2477  00F1AA  6C                 	db	108	;'l'
  2478  00F1AB  65                 	db	101	;'e'
  2479  00F1AC  20                 	db	32
  2480  00F1AD  4C                 	db	76	;'L'
  2481  00F1AE  6F                 	db	111	;'o'
  2482  00F1AF  61                 	db	97	;'a'
  2483  00F1B0  64                 	db	100	;'d'
  2484  00F1B1  3A                 	db	58	;':'
  2485  00F1B2  20                 	db	32
  2486  00F1B3  45                 	db	69	;'E'
  2487  00F1B4  6E                 	db	110	;'n'
  2488  00F1B5  61                 	db	97	;'a'
  2489  00F1B6  62                 	db	98	;'b'
  2490  00F1B7  6C                 	db	108	;'l'
  2491  00F1B8  65                 	db	101	;'e'
  2492  00F1B9  73                 	db	115	;'s'
  2493  00F1BA  20                 	db	32
  2494  00F1BB  74                 	db	116	;'t'
  2495  00F1BC  68                 	db	104	;'h'
  2496  00F1BD  65                 	db	101	;'e'
  2497  00F1BE  20                 	db	32
  2498  00F1BF  6F                 	db	111	;'o'
  2499  00F1C0  75                 	db	117	;'u'
  2500  00F1C1  74                 	db	116	;'t'
  2501  00F1C2  70                 	db	112	;'p'
  2502  00F1C3  75                 	db	117	;'u'
  2503  00F1C4  74                 	db	116	;'t'
  2504  00F1C5  20                 	db	32
  2505  00F1C6  54                 	db	84	;'T'
  2506  00F1C7  52                 	db	82	;'R'
  2507  00F1C8  49                 	db	73	;'I'
  2508  00F1C9  41                 	db	65	;'A'
  2509  00F1CA  43                 	db	67	;'C'
  2510  00F1CB  20                 	db	32
  2511  00F1CC  77                 	db	119	;'w'
  2512  00F1CD  69                 	db	105	;'i'
  2513  00F1CE  74                 	db	116	;'t'
  2514  00F1CF  68                 	db	104	;'h'
  2515  00F1D0  20                 	db	32
  2516  00F1D1  64                 	db	100	;'d'
  2517  00F1D2  69                 	db	105	;'i'
  2518  00F1D3  6D                 	db	109	;'m'
  2519  00F1D4  6D                 	db	109	;'m'
  2520  00F1D5  69                 	db	105	;'i'
  2521  00F1D6  6E                 	db	110	;'n'
  2522  00F1D7  67                 	db	103	;'g'
  2523  00F1D8  20                 	db	32
  2524  00F1D9  64                 	db	100	;'d'
  2525  00F1DA  69                 	db	105	;'i'
  2526  00F1DB  73                 	db	115	;'s'
  2527  00F1DC  61                 	db	97	;'a'
  2528  00F1DD  62                 	db	98	;'b'
  2529  00F1DE  6C                 	db	108	;'l'
  2530  00F1DF  65                 	db	101	;'e'
  2531  00F1E0  64                 	db	100	;'d'
  2532  00F1E1  0A                 	db	10
  2533  00F1E2  0D                 	db	13
  2534  00F1E3  20                 	db	32
  2535  00F1E4  20                 	db	32
  2536  00F1E5  20                 	db	32
  2537  00F1E6  44                 	db	68	;'D'
  2538  00F1E7  69                 	db	105	;'i'
  2539  00F1E8  73                 	db	115	;'s'
  2540  00F1E9  61                 	db	97	;'a'
  2541  00F1EA  62                 	db	98	;'b'
  2542  00F1EB  6C                 	db	108	;'l'
  2543  00F1EC  65                 	db	101	;'e'
  2544  00F1ED  20                 	db	32
  2545  00F1EE  4C                 	db	76	;'L'
  2546  00F1EF  6F                 	db	111	;'o'
  2547  00F1F0  61                 	db	97	;'a'
  2548  00F1F1  64                 	db	100	;'d'
  2549  00F1F2  3A                 	db	58	;':'
  2550  00F1F3  20                 	db	32
  2551  00F1F4  44                 	db	68	;'D'
  2552  00F1F5  69                 	db	105	;'i'
  2553  00F1F6  73                 	db	115	;'s'
  2554  00F1F7  61                 	db	97	;'a'
  2555  00F1F8  62                 	db	98	;'b'
  2556  00F1F9  6C                 	db	108	;'l'
  2557  00F1FA  65                 	db	101	;'e'
  2558  00F1FB  73                 	db	115	;'s'
  2559  00F1FC  20                 	db	32
  2560  00F1FD  74                 	db	116	;'t'
  2561  00F1FE  68                 	db	104	;'h'
  2562  00F1FF  65                 	db	101	;'e'
  2563  00F200  20                 	db	32
  2564  00F201  6F                 	db	111	;'o'
  2565  00F202  75                 	db	117	;'u'
  2566  00F203  74                 	db	116	;'t'
  2567  00F204  70                 	db	112	;'p'
  2568  00F205  75                 	db	117	;'u'
  2569  00F206  74                 	db	116	;'t'
  2570  00F207  20                 	db	32
  2571  00F208  54                 	db	84	;'T'
  2572  00F209  52                 	db	82	;'R'
  2573  00F20A  49                 	db	73	;'I'
  2574  00F20B  41                 	db	65	;'A'
  2575  00F20C  43                 	db	67	;'C'
  2576  00F20D  20                 	db	32
  2577  00F20E  63                 	db	99	;'c'
  2578  00F20F  6F                 	db	111	;'o'
  2579  00F210  6D                 	db	109	;'m'
  2580  00F211  70                 	db	112	;'p'
  2581  00F212  6C                 	db	108	;'l'
  2582  00F213  65                 	db	101	;'e'
  2583  00F214  74                 	db	116	;'t'
  2584  00F215  65                 	db	101	;'e'
  2585  00F216  6C                 	db	108	;'l'
  2586  00F217  79                 	db	121	;'y'
  2587  00F218  0A                 	db	10
  2588  00F219  0D                 	db	13
  2589  00F21A  20                 	db	32
  2590  00F21B  20                 	db	32
  2591  00F21C  20                 	db	32
  2592  00F21D  4C                 	db	76	;'L'
  2593  00F21E  6F                 	db	111	;'o'
  2594  00F21F  61                 	db	97	;'a'
  2595  00F220  64                 	db	100	;'d'
  2596  00F221  20                 	db	32
  2597  00F222  45                 	db	69	;'E'
  2598  00F223  6E                 	db	110	;'n'
  2599  00F224  61                 	db	97	;'a'
  2600  00F225  62                 	db	98	;'b'
  2601  00F226  6C                 	db	108	;'l'
  2602  00F227  65                 	db	101	;'e'
  2603  00F228  64                 	db	100	;'d'
  2604  00F229  3F                 	db	63	;'?'
  2605  00F22A  3A                 	db	58	;':'
  2606  00F22B  20                 	db	32
  2607  00F22C  52                 	db	82	;'R'
  2608  00F22D  65                 	db	101	;'e'
  2609  00F22E  74                 	db	116	;'t'
  2610  00F22F  75                 	db	117	;'u'
  2611  00F230  72                 	db	114	;'r'
  2612  00F231  6E                 	db	110	;'n'
  2613  00F232  73                 	db	115	;'s'
  2614  00F233  20                 	db	32
  2615  00F234  69                 	db	105	;'i'
  2616  00F235  66                 	db	102	;'f'
  2617  00F236  20                 	db	32
  2618  00F237  74                 	db	116	;'t'
  2619  00F238  68                 	db	104	;'h'
  2620  00F239  65                 	db	101	;'e'
  2621  00F23A  20                 	db	32
  2622  00F23B  6F                 	db	111	;'o'
  2623  00F23C  75                 	db	117	;'u'
  2624  00F23D  74                 	db	116	;'t'
  2625  00F23E  70                 	db	112	;'p'
  2626  00F23F  75                 	db	117	;'u'
  2627  00F240  74                 	db	116	;'t'
  2628  00F241  20                 	db	32
  2629  00F242  6C                 	db	108	;'l'
  2630  00F243  6F                 	db	111	;'o'
  2631  00F244  61                 	db	97	;'a'
  2632  00F245  64                 	db	100	;'d'
  2633  00F246  20                 	db	32
  2634  00F247  69                 	db	105	;'i'
  2635  00F248  73                 	db	115	;'s'
  2636  00F249  20                 	db	32
  2637  00F24A  65                 	db	101	;'e'
  2638  00F24B  6E                 	db	110	;'n'
  2639  00F24C  61                 	db	97	;'a'
  2640  00F24D  62                 	db	98	;'b'
  2641  00F24E  6C                 	db	108	;'l'
  2642  00F24F  65                 	db	101	;'e'
  2643  00F250  64                 	db	100	;'d'
  2644  00F251  20                 	db	32
  2645  00F252  6F                 	db	111	;'o'
  2646  00F253  72                 	db	114	;'r'
  2647  00F254  20                 	db	32
  2648  00F255  64                 	db	100	;'d'
  2649  00F256  69                 	db	105	;'i'
  2650  00F257  73                 	db	115	;'s'
  2651  00F258  61                 	db	97	;'a'
  2652  00F259  62                 	db	98	;'b'
  2653  00F25A  6C                 	db	108	;'l'
  2654  00F25B  65                 	db	101	;'e'
  2655  00F25C  64                 	db	100	;'d'
  2656  00F25D  0A                 	db	10
  2657  00F25E  0D                 	db	13
  2658  00F25F  20                 	db	32
  2659  00F260  20                 	db	32
  2660  00F261  20                 	db	32
  2661  00F262  44                 	db	68	;'D'
  2662  00F263  69                 	db	105	;'i'
  2663  00F264  6D                 	db	109	;'m'
  2664  00F265  6D                 	db	109	;'m'
  2665  00F266  69                 	db	105	;'i'
  2666  00F267  6E                 	db	110	;'n'
  2667  00F268  67                 	db	103	;'g'
  2668  00F269  20                 	db	32
  2669  00F26A  45                 	db	69	;'E'
  2670  00F26B  6E                 	db	110	;'n'
  2671  00F26C  61                 	db	97	;'a'
  2672  00F26D  62                 	db	98	;'b'
  2673  00F26E  6C                 	db	108	;'l'
  2674  00F26F  65                 	db	101	;'e'
  2675  00F270  64                 	db	100	;'d'
  2676  00F271  3F                 	db	63	;'?'
  2677  00F272  3A                 	db	58	;':'
  2678  00F273  20                 	db	32
  2679  00F274  52                 	db	82	;'R'
  2680  00F275  65                 	db	101	;'e'
  2681  00F276  74                 	db	116	;'t'
  2682  00F277  75                 	db	117	;'u'
  2683  00F278  72                 	db	114	;'r'
  2684  00F279  6E                 	db	110	;'n'
  2685  00F27A  73                 	db	115	;'s'
  2686  00F27B  20                 	db	32
  2687  00F27C  69                 	db	105	;'i'
  2688  00F27D  66                 	db	102	;'f'
  2689  00F27E  20                 	db	32
  2690  00F27F  64                 	db	100	;'d'
  2691  00F280  69                 	db	105	;'i'
  2692  00F281  6D                 	db	109	;'m'
  2693  00F282  6D                 	db	109	;'m'
  2694  00F283  69                 	db	105	;'i'
  2695  00F284  6E                 	db	110	;'n'
  2696  00F285  67                 	db	103	;'g'
  2697  00F286  20                 	db	32
  2698  00F287  6F                 	db	111	;'o'
  2699  00F288  66                 	db	102	;'f'
  2700  00F289  20                 	db	32
  2701  00F28A  74                 	db	116	;'t'
  2702  00F28B  68                 	db	104	;'h'
  2703  00F28C  65                 	db	101	;'e'
  2704  00F28D  20                 	db	32
  2705  00F28E  6F                 	db	111	;'o'
  2706  00F28F  75                 	db	117	;'u'
  2707  00F290  74                 	db	116	;'t'
  2708  00F291  70                 	db	112	;'p'
  2709  00F292  75                 	db	117	;'u'
  2710  00F293  74                 	db	116	;'t'
  2711  00F294  20                 	db	32
  2712  00F295  6C                 	db	108	;'l'
  2713  00F296  6F                 	db	111	;'o'
  2714  00F297  61                 	db	97	;'a'
  2715  00F298  64                 	db	100	;'d'
  2716  00F299  20                 	db	32
  2717  00F29A  69                 	db	105	;'i'
  2718  00F29B  73                 	db	115	;'s'
  2719  00F29C  20                 	db	32
  2720  00F29D  65                 	db	101	;'e'
  2721  00F29E  6E                 	db	110	;'n'
  2722  00F29F  61                 	db	97	;'a'
  2723  00F2A0  62                 	db	98	;'b'
  2724  00F2A1  6C                 	db	108	;'l'
  2725  00F2A2  65                 	db	101	;'e'
  2726  00F2A3  64                 	db	100	;'d'
  2727  00F2A4  20                 	db	32
  2728  00F2A5  6F                 	db	111	;'o'
  2729  00F2A6  72                 	db	114	;'r'
  2730  00F2A7  20                 	db	32
  2731  00F2A8  6E                 	db	110	;'n'
  2732  00F2A9  6F                 	db	111	;'o'
  2733  00F2AA  74                 	db	116	;'t'
  2734  00F2AB  0A                 	db	10
  2735  00F2AC  0D                 	db	13
  2736  00F2AD  20                 	db	32
  2737  00F2AE  20                 	db	32
  2738  00F2AF  20                 	db	32
  2739  00F2B0  53                 	db	83	;'S'
  2740  00F2B1  65                 	db	101	;'e'
  2741  00F2B2  74                 	db	116	;'t'
  2742  00F2B3  20                 	db	32
  2743  00F2B4  44                 	db	68	;'D'
  2744  00F2B5  69                 	db	105	;'i'
  2745  00F2B6  6D                 	db	109	;'m'
  2746  00F2B7  6D                 	db	109	;'m'
  2747  00F2B8  69                 	db	105	;'i'
  2748  00F2B9  6E                 	db	110	;'n'
  2749  00F2BA  67                 	db	103	;'g'
  2750  00F2BB  20                 	db	32
  2751  00F2BC  50                 	db	80	;'P'
  2752  00F2BD  65                 	db	101	;'e'
  2753  00F2BE  72                 	db	114	;'r'
  2754  00F2BF  63                 	db	99	;'c'
  2755  00F2C0  65                 	db	101	;'e'
  2756  00F2C1  6E                 	db	110	;'n'
  2757  00F2C2  74                 	db	116	;'t'
  2758  00F2C3  61                 	db	97	;'a'
  2759  00F2C4  67                 	db	103	;'g'
  2760  00F2C5  65                 	db	101	;'e'
  2761  00F2C6  3A                 	db	58	;':'
  2762  00F2C7  20                 	db	32
  2763  00F2C8  3C                 	db	60	;'<'
  2764  00F2C9  78                 	db	120	;'x'
  2765  00F2CA  3E                 	db	62	;'>'
  2766  00F2CB  3A                 	db	58	;':'
  2767  00F2CC  20                 	db	32
  2768  00F2CD  53                 	db	83	;'S'
  2769  00F2CE  65                 	db	101	;'e'
  2770  00F2CF  74                 	db	116	;'t'
  2771  00F2D0  73                 	db	115	;'s'
  2772  00F2D1  20                 	db	32
  2773  00F2D2  74                 	db	116	;'t'
  2774  00F2D3  68                 	db	104	;'h'
  2775  00F2D4  65                 	db	101	;'e'
  2776  00F2D5  20                 	db	32
  2777  00F2D6  6F                 	db	111	;'o'
  2778  00F2D7  75                 	db	117	;'u'
  2779  00F2D8  74                 	db	116	;'t'
  2780  00F2D9  70                 	db	112	;'p'
  2781  00F2DA  75                 	db	117	;'u'
  2782  00F2DB  74                 	db	116	;'t'
  2783  00F2DC  20                 	db	32
  2784  00F2DD  64                 	db	100	;'d'
  2785  00F2DE  69                 	db	105	;'i'
  2786  00F2DF  6D                 	db	109	;'m'
  2787  00F2E0  6D                 	db	109	;'m'
  2788  00F2E1  69                 	db	105	;'i'
  2789  00F2E2  6E                 	db	110	;'n'
  2790  00F2E3  67                 	db	103	;'g'
  2791  00F2E4  20                 	db	32
  2792  00F2E5  70                 	db	112	;'p'
  2793  00F2E6  65                 	db	101	;'e'
  2794  00F2E7  72                 	db	114	;'r'
  2795  00F2E8  63                 	db	99	;'c'
  2796  00F2E9  65                 	db	101	;'e'
  2797  00F2EA  6E                 	db	110	;'n'
  2798  00F2EB  74                 	db	116	;'t'
  2799  00F2EC  61                 	db	97	;'a'
  2800  00F2ED  67                 	db	103	;'g'
  2801  00F2EE  65                 	db	101	;'e'
  2802  00F2EF  20                 	db	32
  2803  00F2F0  61                 	db	97	;'a'
  2804  00F2F1  73                 	db	115	;'s'
  2805  00F2F2  20                 	db	32
  2806  00F2F3  78                 	db	120	;'x'
  2807  00F2F4  20                 	db	32
  2808  00F2F5  70                 	db	112	;'p'
  2809  00F2F6  65                 	db	101	;'e'
  2810  00F2F7  72                 	db	114	;'r'
  2811  00F2F8  63                 	db	99	;'c'
  2812  00F2F9  65                 	db	101	;'e'
  2813  00F2FA  6E                 	db	110	;'n'
  2814  00F2FB  74                 	db	116	;'t'
  2815  00F2FC  0A                 	db	10
  2816  00F2FD  0D                 	db	13
  2817  00F2FE  00                 	db	0
  2818  00F2FF  20                 	db	32
  2819  00F300  20                 	db	32
  2820  00F301  20                 	db	32
  2821  00F302  20                 	db	32
  2822  00F303  42                 	db	66	;'B'
  2823  00F304  6F                 	db	111	;'o'
  2824  00F305  6F                 	db	111	;'o'
  2825  00F306  74                 	db	116	;'t'
  2826  00F307  20                 	db	32
  2827  00F308  63                 	db	99	;'c'
  2828  00F309  6F                 	db	111	;'o'
  2829  00F30A  6D                 	db	109	;'m'
  2830  00F30B  70                 	db	112	;'p'
  2831  00F30C  6C                 	db	108	;'l'
  2832  00F30D  65                 	db	101	;'e'
  2833  00F30E  74                 	db	116	;'t'
  2834  00F30F  65                 	db	101	;'e'
  2835  00F310  0A                 	db	10
  2836  00F311  0D                 	db	13
  2837  00F312  20                 	db	32
  2838  00F313  20                 	db	32
  2839  00F314  20                 	db	32
  2840  00F315  20                 	db	32
  2841  00F316  50                 	db	80	;'P'
  2842  00F317  49                 	db	73	;'I'
  2843  00F318  43                 	db	67	;'C'
  2844  00F319  31                 	db	49	;'1'
  2845  00F31A  38                 	db	56	;'8'
  2846  00F31B  46                 	db	70	;'F'
  2847  00F31C  36                 	db	54	;'6'
  2848  00F31D  37                 	db	55	;'7'
  2849  00F31E  4B                 	db	75	;'K'
  2850  00F31F  34                 	db	52	;'4'
  2851  00F320  30                 	db	48	;'0'
  2852  00F321  20                 	db	32
  2853  00F322  6D                 	db	109	;'m'
  2854  00F323  54                 	db	84	;'T'
  2855  00F324  6F                 	db	111	;'o'
  2856  00F325  75                 	db	117	;'u'
  2857  00F326  63                 	db	99	;'c'
  2858  00F327  68                 	db	104	;'h'
  2859  00F328  20                 	db	32
  2860  00F329  54                 	db	84	;'T'
  2861  00F32A  65                 	db	101	;'e'
  2862  00F32B  73                 	db	115	;'s'
  2863  00F32C  74                 	db	116	;'t'
  2864  00F32D  20                 	db	32
  2865  00F32E  42                 	db	66	;'B'
  2866  00F32F  6F                 	db	111	;'o'
  2867  00F330  61                 	db	97	;'a'
  2868  00F331  72                 	db	114	;'r'
  2869  00F332  64                 	db	100	;'d'
  2870  00F333  0A                 	db	10
  2871  00F334  0D                 	db	13
  2872  00F335  20                 	db	32
  2873  00F336  20                 	db	32
  2874  00F337  20                 	db	32
  2875  00F338  20                 	db	32
  2876  00F339  45                 	db	69	;'E'
  2877  00F33A  76                 	db	118	;'v'
  2878  00F33B  61                 	db	97	;'a'
  2879  00F33C  6C                 	db	108	;'l'
  2880  00F33D  75                 	db	117	;'u'
  2881  00F33E  61                 	db	97	;'a'
  2882  00F33F  74                 	db	116	;'t'
  2883  00F340  65                 	db	101	;'e'
  2884  00F341  73                 	db	115	;'s'
  2885  00F342  20                 	db	32
  2886  00F343  74                 	db	116	;'t'
  2887  00F344  68                 	db	104	;'h'
  2888  00F345  65                 	db	101	;'e'
  2889  00F346  20                 	db	32
  2890  00F347  6D                 	db	109	;'m'
  2891  00F348  54                 	db	84	;'T'
  2892  00F349  6F                 	db	111	;'o'
  2893  00F34A  75                 	db	117	;'u'
  2894  00F34B  63                 	db	99	;'c'
  2895  00F34C  68                 	db	104	;'h'
  2896  00F34D  20                 	db	32
  2897  00F34E  63                 	db	99	;'c'
  2898  00F34F  61                 	db	97	;'a'
  2899  00F350  70                 	db	112	;'p'
  2900  00F351  61                 	db	97	;'a'
  2901  00F352  63                 	db	99	;'c'
  2902  00F353  69                 	db	105	;'i'
  2903  00F354  74                 	db	116	;'t'
  2904  00F355  69                 	db	105	;'i'
  2905  00F356  76                 	db	118	;'v'
  2906  00F357  65                 	db	101	;'e'
  2907  00F358  20                 	db	32
  2908  00F359  74                 	db	116	;'t'
  2909  00F35A  6F                 	db	111	;'o'
  2910  00F35B  75                 	db	117	;'u'
  2911  00F35C  63                 	db	99	;'c'
  2912  00F35D  68                 	db	104	;'h'
  2913  00F35E  20                 	db	32
  2914  00F35F  6C                 	db	108	;'l'
  2915  00F360  69                 	db	105	;'i'
  2916  00F361  62                 	db	98	;'b'
  2917  00F362  72                 	db	114	;'r'
  2918  00F363  61                 	db	97	;'a'
  2919  00F364  72                 	db	114	;'r'
  2920  00F365  79                 	db	121	;'y'
  2921  00F366  20                 	db	32
  2922  00F367  64                 	db	100	;'d'
  2923  00F368  69                 	db	105	;'i'
  2924  00F369  73                 	db	115	;'s'
  2925  00F36A  74                 	db	116	;'t'
  2926  00F36B  72                 	db	114	;'r'
  2927  00F36C  69                 	db	105	;'i'
  2928  00F36D  62                 	db	98	;'b'
  2929  00F36E  75                 	db	117	;'u'
  2930  00F36F  74                 	db	116	;'t'
  2931  00F370  65                 	db	101	;'e'
  2932  00F371  64                 	db	100	;'d'
  2933  00F372  20                 	db	32
  2934  00F373  62                 	db	98	;'b'
  2935  00F374  79                 	db	121	;'y'
  2936  00F375  20                 	db	32
  2937  00F376  4D                 	db	77	;'M'
  2938  00F377  69                 	db	105	;'i'
  2939  00F378  63                 	db	99	;'c'
  2940  00F379  72                 	db	114	;'r'
  2941  00F37A  6F                 	db	111	;'o'
  2942  00F37B  63                 	db	99	;'c'
  2943  00F37C  68                 	db	104	;'h'
  2944  00F37D  69                 	db	105	;'i'
  2945  00F37E  70                 	db	112	;'p'
  2946  00F37F  0A                 	db	10
  2947  00F380  0D                 	db	13
  2948  00F381  20                 	db	32
  2949  00F382  20                 	db	32
  2950  00F383  20                 	db	32
  2951  00F384  20                 	db	32
  2952  00F385  53                 	db	83	;'S'
  2953  00F386  65                 	db	101	;'e'
  2954  00F387  74                 	db	116	;'t'
  2955  00F388  73                 	db	115	;'s'
  2956  00F389  20                 	db	32
  2957  00F38A  74                 	db	116	;'t'
  2958  00F38B  68                 	db	104	;'h'
  2959  00F38C  65                 	db	101	;'e'
  2960  00F38D  20                 	db	32
  2961  00F38E  73                 	db	115	;'s'
  2962  00F38F  74                 	db	116	;'t'
  2963  00F390  61                 	db	97	;'a'
  2964  00F391  74                 	db	116	;'t'
  2965  00F392  65                 	db	101	;'e'
  2966  00F393  20                 	db	32
  2967  00F394  6F                 	db	111	;'o'
  2968  00F395  66                 	db	102	;'f'
  2969  00F396  20                 	db	32
  2970  00F397  66                 	db	102	;'f'
  2971  00F398  69                 	db	105	;'i'
  2972  00F399  76                 	db	118	;'v'
  2973  00F39A  65                 	db	101	;'e'
  2974  00F39B  20                 	db	32
  2975  00F39C  4C                 	db	76	;'L'
  2976  00F39D  45                 	db	69	;'E'
  2977  00F39E  44                 	db	68	;'D'
  2978  00F39F  73                 	db	115	;'s'
  2979  00F3A0  20                 	db	32
  2980  00F3A1  62                 	db	98	;'b'
  2981  00F3A2  61                 	db	97	;'a'
  2982  00F3A3  73                 	db	115	;'s'
  2983  00F3A4  65                 	db	101	;'e'
  2984  00F3A5  64                 	db	100	;'d'
  2985  00F3A6  20                 	db	32
  2986  00F3A7  6F                 	db	111	;'o'
  2987  00F3A8  6E                 	db	110	;'n'
  2988  00F3A9  20                 	db	32
  2989  00F3AA  6D                 	db	109	;'m'
  2990  00F3AB  54                 	db	84	;'T'
  2991  00F3AC  6F                 	db	111	;'o'
  2992  00F3AD  75                 	db	117	;'u'
  2993  00F3AE  63                 	db	99	;'c'
  2994  00F3AF  68                 	db	104	;'h'
  2995  00F3B0  20                 	db	32
  2996  00F3B1  63                 	db	99	;'c'
  2997  00F3B2  61                 	db	97	;'a'
  2998  00F3B3  70                 	db	112	;'p'
  2999  00F3B4  61                 	db	97	;'a'
  3000  00F3B5  63                 	db	99	;'c'
  3001  00F3B6  69                 	db	105	;'i'
  3002  00F3B7  74                 	db	116	;'t'
  3003  00F3B8  69                 	db	105	;'i'
  3004  00F3B9  76                 	db	118	;'v'
  3005  00F3BA  65                 	db	101	;'e'
  3006  00F3BB  20                 	db	32
  3007  00F3BC  70                 	db	112	;'p'
  3008  00F3BD  75                 	db	117	;'u'
  3009  00F3BE  73                 	db	115	;'s'
  3010  00F3BF  68                 	db	104	;'h'
  3011  00F3C0  62                 	db	98	;'b'
  3012  00F3C1  75                 	db	117	;'u'
  3013  00F3C2  74                 	db	116	;'t'
  3014  00F3C3  74                 	db	116	;'t'
  3015  00F3C4  6F                 	db	111	;'o'
  3016  00F3C5  6E                 	db	110	;'n'
  3017  00F3C6  73                 	db	115	;'s'
  3018  00F3C7  0A                 	db	10
  3019  00F3C8  0D                 	db	13
  3020  00F3C9  20                 	db	32
  3021  00F3CA  20                 	db	32
  3022  00F3CB  20                 	db	32
  3023  00F3CC  20                 	db	32
  3024  00F3CD  42                 	db	66	;'B'
  3025  00F3CE  61                 	db	97	;'a'
  3026  00F3CF  75                 	db	117	;'u'
  3027  00F3D0  64                 	db	100	;'d'
  3028  00F3D1  20                 	db	32
  3029  00F3D2  72                 	db	114	;'r'
  3030  00F3D3  61                 	db	97	;'a'
  3031  00F3D4  74                 	db	116	;'t'
  3032  00F3D5  65                 	db	101	;'e'
  3033  00F3D6  3A                 	db	58	;':'
  3034  00F3D7  20                 	db	32
  3035  00F3D8  31                 	db	49	;'1'
  3036  00F3D9  31                 	db	49	;'1'
  3037  00F3DA  35                 	db	53	;'5'
  3038  00F3DB  32                 	db	50	;'2'
  3039  00F3DC  30                 	db	48	;'0'
  3040  00F3DD  30                 	db	48	;'0'
  3041  00F3DE  20                 	db	32
  3042  00F3DF  62                 	db	98	;'b'
  3043  00F3E0  70                 	db	112	;'p'
  3044  00F3E1  73                 	db	115	;'s'
  3045  00F3E2  0A                 	db	10
  3046  00F3E3  0D                 	db	13
  3047  00F3E4  20                 	db	32
  3048  00F3E5  20                 	db	32
  3049  00F3E6  20                 	db	32
  3050  00F3E7  20                 	db	32
  3051  00F3E8  4E                 	db	78	;'N'
  3052  00F3E9  6F                 	db	111	;'o'
  3053  00F3EA  20                 	db	32
  3054  00F3EB  70                 	db	112	;'p'
  3055  00F3EC  61                 	db	97	;'a'
  3056  00F3ED  72                 	db	114	;'r'
  3057  00F3EE  69                 	db	105	;'i'
  3058  00F3EF  74                 	db	116	;'t'
  3059  00F3F0  79                 	db	121	;'y'
  3060  00F3F1  2C                 	db	44
  3061  00F3F2  20                 	db	32
  3062  00F3F3  38                 	db	56	;'8'
  3063  00F3F4  20                 	db	32
  3064  00F3F5  62                 	db	98	;'b'
  3065  00F3F6  69                 	db	105	;'i'
  3066  00F3F7  74                 	db	116	;'t'
  3067  00F3F8  73                 	db	115	;'s'
  3068  00F3F9  2C                 	db	44
  3069  00F3FA  20                 	db	32
  3070  00F3FB  6E                 	db	110	;'n'
  3071  00F3FC  6F                 	db	111	;'o'
  3072  00F3FD  20                 	db	32
  3073  00F3FE  66                 	db	102	;'f'
  3074  00F3FF  6C                 	db	108	;'l'
  3075  00F400  6F                 	db	111	;'o'
  3076  00F401  77                 	db	119	;'w'
  3077  00F402  20                 	db	32
  3078  00F403  63                 	db	99	;'c'
  3079  00F404  6F                 	db	111	;'o'
  3080  00F405  6E                 	db	110	;'n'
  3081  00F406  74                 	db	116	;'t'
  3082  00F407  72                 	db	114	;'r'
  3083  00F408  6F                 	db	111	;'o'
  3084  00F409  6C                 	db	108	;'l'
  3085  00F40A  2C                 	db	44
  3086  00F40B  20                 	db	32
  3087  00F40C  31                 	db	49	;'1'
  3088  00F40D  20                 	db	32
  3089  00F40E  73                 	db	115	;'s'
  3090  00F40F  74                 	db	116	;'t'
  3091  00F410  6F                 	db	111	;'o'
  3092  00F411  70                 	db	112	;'p'
  3093  00F412  20                 	db	32
  3094  00F413  62                 	db	98	;'b'
  3095  00F414  69                 	db	105	;'i'
  3096  00F415  74                 	db	116	;'t'
  3097  00F416  0A                 	db	10
  3098  00F417  0D                 	db	13
  3099  00F418  20                 	db	32
  3100  00F419  20                 	db	32
  3101  00F41A  20                 	db	32
  3102  00F41B  20                 	db	32
  3103  00F41C  43                 	db	67	;'C'
  3104  00F41D  6F                 	db	111	;'o'
  3105  00F41E  6D                 	db	109	;'m'
  3106  00F41F  6D                 	db	109	;'m'
  3107  00F420  61                 	db	97	;'a'
  3108  00F421  6E                 	db	110	;'n'
  3109  00F422  64                 	db	100	;'d'
  3110  00F423  73                 	db	115	;'s'
  3111  00F424  20                 	db	32
  3112  00F425  61                 	db	97	;'a'
  3113  00F426  72                 	db	114	;'r'
  3114  00F427  65                 	db	101	;'e'
  3115  00F428  20                 	db	32
  3116  00F429  63                 	db	99	;'c'
  3117  00F42A  61                 	db	97	;'a'
  3118  00F42B  73                 	db	115	;'s'
  3119  00F42C  65                 	db	101	;'e'
  3120  00F42D  20                 	db	32
  3121  00F42E  73                 	db	115	;'s'
  3122  00F42F  65                 	db	101	;'e'
  3123  00F430  6E                 	db	110	;'n'
  3124  00F431  73                 	db	115	;'s'
  3125  00F432  69                 	db	105	;'i'
  3126  00F433  74                 	db	116	;'t'
  3127  00F434  69                 	db	105	;'i'
  3128  00F435  76                 	db	118	;'v'
  3129  00F436  65                 	db	101	;'e'
  3130  00F437  0A                 	db	10
  3131  00F438  0D                 	db	13
  3132  00F439  20                 	db	32
  3133  00F43A  20                 	db	32
  3134  00F43B  20                 	db	32
  3135  00F43C  20                 	db	32
  3136  00F43D  45                 	db	69	;'E'
  3137  00F43E  6E                 	db	110	;'n'
  3138  00F43F  74                 	db	116	;'t'
  3139  00F440  65                 	db	101	;'e'
  3140  00F441  72                 	db	114	;'r'
  3141  00F442  20                 	db	32
  3142  00F443  61                 	db	97	;'a'
  3143  00F444  20                 	db	32
  3144  00F445  63                 	db	99	;'c'
  3145  00F446  6F                 	db	111	;'o'
  3146  00F447  6D                 	db	109	;'m'
  3147  00F448  6D                 	db	109	;'m'
  3148  00F449  61                 	db	97	;'a'
  3149  00F44A  6E                 	db	110	;'n'
  3150  00F44B  64                 	db	100	;'d'
  3151  00F44C  2C                 	db	44
  3152  00F44D  20                 	db	32
  3153  00F44E  6F                 	db	111	;'o'
  3154  00F44F  72                 	db	114	;'r'
  3155  00F450  20                 	db	32
  3156  00F451  65                 	db	101	;'e'
  3157  00F452  6E                 	db	110	;'n'
  3158  00F453  74                 	db	116	;'t'
  3159  00F454  65                 	db	101	;'e'
  3160  00F455  72                 	db	114	;'r'
  3161  00F456  20                 	db	32
  3162  00F457  48                 	db	72	;'H'
  3163  00F458  65                 	db	101	;'e'
  3164  00F459  6C                 	db	108	;'l'
  3165  00F45A  70                 	db	112	;'p'
  3166  00F45B  20                 	db	32
  3167  00F45C  66                 	db	102	;'f'
  3168  00F45D  6F                 	db	111	;'o'
  3169  00F45E  72                 	db	114	;'r'
  3170  00F45F  20                 	db	32
  3171  00F460  6C                 	db	108	;'l'
  3172  00F461  69                 	db	105	;'i'
  3173  00F462  73                 	db	115	;'s'
  3174  00F463  74                 	db	116	;'t'
  3175  00F464  20                 	db	32
  3176  00F465  6F                 	db	111	;'o'
  3177  00F466  66                 	db	102	;'f'
  3178  00F467  20                 	db	32
  3179  00F468  63                 	db	99	;'c'
  3180  00F469  6F                 	db	111	;'o'
  3181  00F46A  6D                 	db	109	;'m'
  3182  00F46B  6D                 	db	109	;'m'
  3183  00F46C  61                 	db	97	;'a'
  3184  00F46D  6E                 	db	110	;'n'
  3185  00F46E  64                 	db	100	;'d'
  3186  00F46F  73                 	db	115	;'s'
  3187  00F470  0A                 	db	10
  3188  00F471  0D                 	db	13
  3189  00F472  00                 	db	0
  3190  00F473                     STR_111:
  3191  00F473  49                 	db	73	;'I'
  3192  00F474  66                 	db	102	;'f'
  3193  00F475  20                 	db	32
  3194  00F476  79                 	db	121	;'y'
  3195  00F477  6F                 	db	111	;'o'
  3196  00F478  75                 	db	117	;'u'
  3197  00F479  27                 	db	39
  3198  00F47A  64                 	db	100	;'d'
  3199  00F47B  20                 	db	32
  3200  00F47C  6C                 	db	108	;'l'
  3201  00F47D  69                 	db	105	;'i'
  3202  00F47E  6B                 	db	107	;'k'
  3203  00F47F  65                 	db	101	;'e'
  3204  00F480  20                 	db	32
  3205  00F481  74                 	db	116	;'t'
  3206  00F482  6F                 	db	111	;'o'
  3207  00F483  20                 	db	32
  3208  00F484  63                 	db	99	;'c'
  3209  00F485  6F                 	db	111	;'o'
  3210  00F486  6D                 	db	109	;'m'
  3211  00F487  70                 	db	112	;'p'
  3212  00F488  6C                 	db	108	;'l'
  3213  00F489  65                 	db	101	;'e'
  3214  00F48A  74                 	db	116	;'t'
  3215  00F48B  65                 	db	101	;'e'
  3216  00F48C  6C                 	db	108	;'l'
  3217  00F48D  79                 	db	121	;'y'
  3218  00F48E  20                 	db	32
  3219  00F48F  65                 	db	101	;'e'
  3220  00F490  6E                 	db	110	;'n'
  3221  00F491  61                 	db	97	;'a'
  3222  00F492  62                 	db	98	;'b'
  3223  00F493  6C                 	db	108	;'l'
  3224  00F494  65                 	db	101	;'e'
  3225  00F495  20                 	db	32
  3226  00F496  6F                 	db	111	;'o'
  3227  00F497  72                 	db	114	;'r'
  3228  00F498  20                 	db	32
  3229  00F499  64                 	db	100	;'d'
  3230  00F49A  69                 	db	105	;'i'
  3231  00F49B  73                 	db	115	;'s'
  3232  00F49C  61                 	db	97	;'a'
  3233  00F49D  62                 	db	98	;'b'
  3234  00F49E  6C                 	db	108	;'l'
  3235  00F49F  65                 	db	101	;'e'
  3236  00F4A0  20                 	db	32
  3237  00F4A1  74                 	db	116	;'t'
  3238  00F4A2  68                 	db	104	;'h'
  3239  00F4A3  65                 	db	101	;'e'
  3240  00F4A4  20                 	db	32
  3241  00F4A5  6C                 	db	108	;'l'
  3242  00F4A6  6F                 	db	111	;'o'
  3243  00F4A7  61                 	db	97	;'a'
  3244  00F4A8  64                 	db	100	;'d'
  3245  00F4A9  2C                 	db	44
  3246  00F4AA  20                 	db	32
  3247  00F4AB  64                 	db	100	;'d'
  3248  00F4AC  69                 	db	105	;'i'
  3249  00F4AD  73                 	db	115	;'s'
  3250  00F4AE  61                 	db	97	;'a'
  3251  00F4AF  62                 	db	98	;'b'
  3252  00F4B0  6C                 	db	108	;'l'
  3253  00F4B1  65                 	db	101	;'e'
  3254  00F4B2  20                 	db	32
  3255  00F4B3  64                 	db	100	;'d'
  3256  00F4B4  69                 	db	105	;'i'
  3257  00F4B5  6D                 	db	109	;'m'
  3258  00F4B6  6D                 	db	109	;'m'
  3259  00F4B7  69                 	db	105	;'i'
  3260  00F4B8  6E                 	db	110	;'n'
  3261  00F4B9  67                 	db	103	;'g'
  3262  00F4BA  20                 	db	32
  3263  00F4BB  61                 	db	97	;'a'
  3264  00F4BC  6E                 	db	110	;'n'
  3265  00F4BD  64                 	db	100	;'d'
  3266  00F4BE  20                 	db	32
  3267  00F4BF  75                 	db	117	;'u'
  3268  00F4C0  73                 	db	115	;'s'
  3269  00F4C1  65                 	db	101	;'e'
  3270  00F4C2  20                 	db	32
  3271  00F4C3  72                 	db	114	;'r'
  3272  00F4C4  65                 	db	101	;'e'
  3273  00F4C5  73                 	db	115	;'s'
  3274  00F4C6  70                 	db	112	;'p'
  3275  00F4C7  65                 	db	101	;'e'
  3276  00F4C8  63                 	db	99	;'c'
  3277  00F4C9  74                 	db	116	;'t'
  3278  00F4CA  69                 	db	105	;'i'
  3279  00F4CB  76                 	db	118	;'v'
  3280  00F4CC  65                 	db	101	;'e'
  3281  00F4CD  20                 	db	32
  3282  00F4CE  63                 	db	99	;'c'
  3283  00F4CF  6F                 	db	111	;'o'
  3284  00F4D0  6D                 	db	109	;'m'
  3285  00F4D1  6D                 	db	109	;'m'
  3286  00F4D2  61                 	db	97	;'a'
  3287  00F4D3  6E                 	db	110	;'n'
  3288  00F4D4  64                 	db	100	;'d'
  3289  00F4D5  73                 	db	115	;'s'
  3290  00F4D6  0A                 	db	10
  3291  00F4D7  0D                 	db	13
  3292  00F4D8  00                 	db	0
  3293  00F4D9                     STR_110:
  3294  00F4D9  45                 	db	69	;'E'
  3295  00F4DA  52                 	db	82	;'R'
  3296  00F4DB  52                 	db	82	;'R'
  3297  00F4DC  4F                 	db	79	;'O'
  3298  00F4DD  52                 	db	82	;'R'
  3299  00F4DE  3A                 	db	58	;':'
  3300  00F4DF  20                 	db	32
  3301  00F4E0  50                 	db	80	;'P'
  3302  00F4E1  6C                 	db	108	;'l'
  3303  00F4E2  65                 	db	101	;'e'
  3304  00F4E3  61                 	db	97	;'a'
  3305  00F4E4  73                 	db	115	;'s'
  3306  00F4E5  65                 	db	101	;'e'
  3307  00F4E6  20                 	db	32
  3308  00F4E7  73                 	db	115	;'s'
  3309  00F4E8  65                 	db	101	;'e'
  3310  00F4E9  74                 	db	116	;'t'
  3311  00F4EA  20                 	db	32
  3312  00F4EB  64                 	db	100	;'d'
  3313  00F4EC  69                 	db	105	;'i'
  3314  00F4ED  6D                 	db	109	;'m'
  3315  00F4EE  6D                 	db	109	;'m'
  3316  00F4EF  69                 	db	105	;'i'
  3317  00F4F0  6E                 	db	110	;'n'
  3318  00F4F1  67                 	db	103	;'g'
  3319  00F4F2  20                 	db	32
  3320  00F4F3  70                 	db	112	;'p'
  3321  00F4F4  65                 	db	101	;'e'
  3322  00F4F5  72                 	db	114	;'r'
  3323  00F4F6  63                 	db	99	;'c'
  3324  00F4F7  65                 	db	101	;'e'
  3325  00F4F8  6E                 	db	110	;'n'
  3326  00F4F9  74                 	db	116	;'t'
  3327  00F4FA  61                 	db	97	;'a'
  3328  00F4FB  67                 	db	103	;'g'
  3329  00F4FC  65                 	db	101	;'e'
  3330  00F4FD  20                 	db	32
  3331  00F4FE  74                 	db	116	;'t'
  3332  00F4FF  6F                 	db	111	;'o'
  3333  00F500  20                 	db	32
  3334  00F501  61                 	db	97	;'a'
  3335  00F502  6E                 	db	110	;'n'
  3336  00F503  20                 	db	32
  3337  00F504  69                 	db	105	;'i'
  3338  00F505  6E                 	db	110	;'n'
  3339  00F506  74                 	db	116	;'t'
  3340  00F507  65                 	db	101	;'e'
  3341  00F508  67                 	db	103	;'g'
  3342  00F509  65                 	db	101	;'e'
  3343  00F50A  72                 	db	114	;'r'
  3344  00F50B  20                 	db	32
  3345  00F50C  67                 	db	103	;'g'
  3346  00F50D  72                 	db	114	;'r'
  3347  00F50E  65                 	db	101	;'e'
  3348  00F50F  61                 	db	97	;'a'
  3349  00F510  74                 	db	116	;'t'
  3350  00F511  65                 	db	101	;'e'
  3351  00F512  72                 	db	114	;'r'
  3352  00F513  20                 	db	32
  3353  00F514  74                 	db	116	;'t'
  3354  00F515  68                 	db	104	;'h'
  3355  00F516  61                 	db	97	;'a'
  3356  00F517  6E                 	db	110	;'n'
  3357  00F518  20                 	db	32
  3358  00F519  30                 	db	48	;'0'
  3359  00F51A  20                 	db	32
  3360  00F51B  61                 	db	97	;'a'
  3361  00F51C  6E                 	db	110	;'n'
  3362  00F51D  64                 	db	100	;'d'
  3363  00F51E  20                 	db	32
  3364  00F51F  6C                 	db	108	;'l'
  3365  00F520  65                 	db	101	;'e'
  3366  00F521  73                 	db	115	;'s'
  3367  00F522  73                 	db	115	;'s'
  3368  00F523  20                 	db	32
  3369  00F524  74                 	db	116	;'t'
  3370  00F525  68                 	db	104	;'h'
  3371  00F526  61                 	db	97	;'a'
  3372  00F527  6E                 	db	110	;'n'
  3373  00F528  20                 	db	32
  3374  00F529  31                 	db	49	;'1'
  3375  00F52A  30                 	db	48	;'0'
  3376  00F52B  30                 	db	48	;'0'
  3377  00F52C  0A                 	db	10
  3378  00F52D  0D                 	db	13
  3379  00F52E  00                 	db	0
  3380  00F52F                     STR_54:
  3381  00F52F  44                 	db	68	;'D'
  3382  00F530  65                 	db	101	;'e'
  3383  00F531  76                 	db	118	;'v'
  3384  00F532  69                 	db	105	;'i'
  3385  00F533  63                 	db	99	;'c'
  3386  00F534  65                 	db	101	;'e'
  3387  00F535  20                 	db	32
  3388  00F536  49                 	db	73	;'I'
  3389  00F537  44                 	db	68	;'D'
  3390  00F538  20                 	db	32
  3391  00F539  73                 	db	115	;'s'
  3392  00F53A  74                 	db	116	;'t'
  3393  00F53B  6F                 	db	111	;'o'
  3394  00F53C  72                 	db	114	;'r'
  3395  00F53D  65                 	db	101	;'e'
  3396  00F53E  64                 	db	100	;'d'
  3397  00F53F  20                 	db	32
  3398  00F540  69                 	db	105	;'i'
  3399  00F541  6E                 	db	110	;'n'
  3400  00F542  20                 	db	32
  3401  00F543  46                 	db	70	;'F'
  3402  00F544  6C                 	db	108	;'l'
  3403  00F545  61                 	db	97	;'a'
  3404  00F546  73                 	db	115	;'s'
  3405  00F547  68                 	db	104	;'h'
  3406  00F548  20                 	db	32
  3407  00F549  69                 	db	105	;'i'
  3408  00F54A  73                 	db	115	;'s'
  3409  00F54B  3A                 	db	58	;':'
  3410  00F54C  20                 	db	32
  3411  00F54D  30                 	db	48	;'0'
  3412  00F54E  78                 	db	120	;'x'
  3413  00F54F  25                 	db	37
  3414  00F550  58                 	db	88	;'X'
  3415  00F551  2E                 	db	46
  3416  00F552  20                 	db	32
  3417  00F553  54                 	db	84	;'T'
  3418  00F554  68                 	db	104	;'h'
  3419  00F555  69                 	db	105	;'i'
  3420  00F556  73                 	db	115	;'s'
  3421  00F557  20                 	db	32
  3422  00F558  63                 	db	99	;'c'
  3423  00F559  6F                 	db	111	;'o'
  3424  00F55A  72                 	db	114	;'r'
  3425  00F55B  72                 	db	114	;'r'
  3426  00F55C  65                 	db	101	;'e'
  3427  00F55D  73                 	db	115	;'s'
  3428  00F55E  70                 	db	112	;'p'
  3429  00F55F  6F                 	db	111	;'o'
  3430  00F560  6E                 	db	110	;'n'
  3431  00F561  64                 	db	100	;'d'
  3432  00F562  73                 	db	115	;'s'
  3433  00F563  20                 	db	32
  3434  00F564  74                 	db	116	;'t'
  3435  00F565  6F                 	db	111	;'o'
  3436  00F566  20                 	db	32
  3437  00F567  61                 	db	97	;'a'
  3438  00F568  20                 	db	32
  3439  00F569  64                 	db	100	;'d'
  3440  00F56A  65                 	db	101	;'e'
  3441  00F56B  76                 	db	118	;'v'
  3442  00F56C  69                 	db	105	;'i'
  3443  00F56D  63                 	db	99	;'c'
  3444  00F56E  65                 	db	101	;'e'
  3445  00F56F  20                 	db	32
  3446  00F570  70                 	db	112	;'p'
  3447  00F571  61                 	db	97	;'a'
  3448  00F572  72                 	db	114	;'r'
  3449  00F573  74                 	db	116	;'t'
  3450  00F574  20                 	db	32
  3451  00F575  6E                 	db	110	;'n'
  3452  00F576  75                 	db	117	;'u'
  3453  00F577  6D                 	db	109	;'m'
  3454  00F578  62                 	db	98	;'b'
  3455  00F579  65                 	db	101	;'e'
  3456  00F57A  72                 	db	114	;'r'
  3457  00F57B  20                 	db	32
  3458  00F57C  6F                 	db	111	;'o'
  3459  00F57D  66                 	db	102	;'f'
  3460  00F57E  20                 	db	32
  3461  00F57F  25                 	db	37
  3462  00F580  73                 	db	115	;'s'
  3463  00F581  0A                 	db	10
  3464  00F582  0D                 	db	13
  3465  00F583  00                 	db	0
  3466  00F584                     STR_115:
  3467  00F584  54                 	db	84	;'T'
  3468  00F585  68                 	db	104	;'h'
  3469  00F586  69                 	db	105	;'i'
  3470  00F587  73                 	db	115	;'s'
  3471  00F588  20                 	db	32
  3472  00F589  63                 	db	99	;'c'
  3473  00F58A  6F                 	db	111	;'o'
  3474  00F58B  72                 	db	114	;'r'
  3475  00F58C  72                 	db	114	;'r'
  3476  00F58D  65                 	db	101	;'e'
  3477  00F58E  73                 	db	115	;'s'
  3478  00F58F  70                 	db	112	;'p'
  3479  00F590  6F                 	db	111	;'o'
  3480  00F591  6E                 	db	110	;'n'
  3481  00F592  64                 	db	100	;'d'
  3482  00F593  73                 	db	115	;'s'
  3483  00F594  20                 	db	32
  3484  00F595  74                 	db	116	;'t'
  3485  00F596  6F                 	db	111	;'o'
  3486  00F597  20                 	db	32
  3487  00F598  61                 	db	97	;'a'
  3488  00F599  20                 	db	32
  3489  00F59A  31                 	db	49	;'1'
  3490  00F59B  36                 	db	54	;'6'
  3491  00F59C  20                 	db	32
  3492  00F59D  62                 	db	98	;'b'
  3493  00F59E  69                 	db	105	;'i'
  3494  00F59F  74                 	db	116	;'t'
  3495  00F5A0  20                 	db	32
  3496  00F5A1  74                 	db	116	;'t'
  3497  00F5A2  69                 	db	105	;'i'
  3498  00F5A3  6D                 	db	109	;'m'
  3499  00F5A4  65                 	db	101	;'e'
  3500  00F5A5  72                 	db	114	;'r'
  3501  00F5A6  20                 	db	32
  3502  00F5A7  70                 	db	112	;'p'
  3503  00F5A8  72                 	db	114	;'r'
  3504  00F5A9  65                 	db	101	;'e'
  3505  00F5AA  2D                 	db	45
  3506  00F5AB  6C                 	db	108	;'l'
  3507  00F5AC  6F                 	db	111	;'o'
  3508  00F5AD  61                 	db	97	;'a'
  3509  00F5AE  64                 	db	100	;'d'
  3510  00F5AF  20                 	db	32
  3511  00F5B0  76                 	db	118	;'v'
  3512  00F5B1  61                 	db	97	;'a'
  3513  00F5B2  6C                 	db	108	;'l'
  3514  00F5B3  75                 	db	117	;'u'
  3515  00F5B4  65                 	db	101	;'e'
  3516  00F5B5  20                 	db	32
  3517  00F5B6  6F                 	db	111	;'o'
  3518  00F5B7  66                 	db	102	;'f'
  3519  00F5B8  20                 	db	32
  3520  00F5B9  30                 	db	48	;'0'
  3521  00F5BA  78                 	db	120	;'x'
  3522  00F5BB  25                 	db	37
  3523  00F5BC  58                 	db	88	;'X'
  3524  00F5BD  20                 	db	32
  3525  00F5BE  28                 	db	40
  3526  00F5BF  25                 	db	37
  3527  00F5C0  75                 	db	117	;'u'
  3528  00F5C1  20                 	db	32
  3529  00F5C2  4C                 	db	76	;'L'
  3530  00F5C3  53                 	db	83	;'S'
  3531  00F5C4  42                 	db	66	;'B'
  3532  00F5C5  73                 	db	115	;'s'
  3533  00F5C6  29                 	db	41
  3534  00F5C7  20                 	db	32
  3535  00F5C8  0A                 	db	10
  3536  00F5C9  0D                 	db	13
  3537  00F5CA  00                 	db	0
  3538  00F5CB                     STR_74:
  3539  00F5CB  56                 	db	86	;'V'
  3540  00F5CC  43                 	db	67	;'C'
  3541  00F5CD  43                 	db	67	;'C'
  3542  00F5CE  20                 	db	32
  3543  00F5CF  4F                 	db	79	;'O'
  3544  00F5D0  76                 	db	118	;'v'
  3545  00F5D1  65                 	db	101	;'e'
  3546  00F5D2  72                 	db	114	;'r'
  3547  00F5D3  76                 	db	118	;'v'
  3548  00F5D4  6F                 	db	111	;'o'
  3549  00F5D5  6C                 	db	108	;'l'
  3550  00F5D6  74                 	db	116	;'t'
  3551  00F5D7  61                 	db	97	;'a'
  3552  00F5D8  67                 	db	103	;'g'
  3553  00F5D9  65                 	db	101	;'e'
  3554  00F5DA  20                 	db	32
  3555  00F5DB  63                 	db	99	;'c'
  3556  00F5DC  6F                 	db	111	;'o'
  3557  00F5DD  6E                 	db	110	;'n'
  3558  00F5DE  64                 	db	100	;'d'
  3559  00F5DF  69                 	db	105	;'i'
  3560  00F5E0  74                 	db	116	;'t'
  3561  00F5E1  69                 	db	105	;'i'
  3562  00F5E2  6F                 	db	111	;'o'
  3563  00F5E3  6E                 	db	110	;'n'
  3564  00F5E4  20                 	db	32
  3565  00F5E5  68                 	db	104	;'h'
  3566  00F5E6  61                 	db	97	;'a'
  3567  00F5E7  73                 	db	115	;'s'
  3568  00F5E8  20                 	db	32
  3569  00F5E9  6F                 	db	111	;'o'
  3570  00F5EA  63                 	db	99	;'c'
  3571  00F5EB  63                 	db	99	;'c'
  3572  00F5EC  75                 	db	117	;'u'
  3573  00F5ED  72                 	db	114	;'r'
  3574  00F5EE  72                 	db	114	;'r'
  3575  00F5EF  65                 	db	101	;'e'
  3576  00F5F0  64                 	db	100	;'d'
  3577  00F5F1  20                 	db	32
  3578  00F5F2  28                 	db	40
  3579  00F5F3  56                 	db	86	;'V'
  3580  00F5F4  43                 	db	67	;'C'
  3581  00F5F5  43                 	db	67	;'C'
  3582  00F5F6  20                 	db	32
  3583  00F5F7  68                 	db	104	;'h'
  3584  00F5F8  61                 	db	97	;'a'
  3585  00F5F9  73                 	db	115	;'s'
  3586  00F5FA  20                 	db	32
  3587  00F5FB  65                 	db	101	;'e'
  3588  00F5FC  78                 	db	120	;'x'
  3589  00F5FD  63                 	db	99	;'c'
  3590  00F5FE  65                 	db	101	;'e'
  3591  00F5FF  65                 	db	101	;'e'
  3592  00F600  64                 	db	100	;'d'
  3593  00F601  65                 	db	101	;'e'
  3594  00F602  64                 	db	100	;'d'
  3595  00F603  20                 	db	32
  3596  00F604  33                 	db	51	;'3'
  3597  00F605  2E                 	db	46
  3598  00F606  36                 	db	54	;'6'
  3599  00F607  30                 	db	48	;'0'
  3600  00F608  56                 	db	86	;'V'
  3601  00F609  29                 	db	41
  3602  00F60A  0A                 	db	10
  3603  00F60B  0D                 	db	13
  3604  00F60C  00                 	db	0
  3605  00F60D                     STR_58:
  3606  00F60D  54                 	db	84	;'T'
  3607  00F60E  68                 	db	104	;'h'
  3608  00F60F  65                 	db	101	;'e'
  3609  00F610  20                 	db	32
  3610  00F611  66                 	db	102	;'f'
  3611  00F612  6F                 	db	111	;'o'
  3612  00F613  6C                 	db	108	;'l'
  3613  00F614  6C                 	db	108	;'l'
  3614  00F615  6F                 	db	111	;'o'
  3615  00F616  77                 	db	119	;'w'
  3616  00F617  69                 	db	105	;'i'
  3617  00F618  6E                 	db	110	;'n'
  3618  00F619  67                 	db	103	;'g'
  3619  00F61A  20                 	db	32
  3620  00F61B  55                 	db	85	;'U'
  3621  00F61C  73                 	db	115	;'s'
  3622  00F61D  65                 	db	101	;'e'
  3623  00F61E  72                 	db	114	;'r'
  3624  00F61F  20                 	db	32
  3625  00F620  49                 	db	73	;'I'
  3626  00F621  44                 	db	68	;'D'
  3627  00F622  73                 	db	115	;'s'
  3628  00F623  20                 	db	32
  3629  00F624  68                 	db	104	;'h'
  3630  00F625  61                 	db	97	;'a'
  3631  00F626  76                 	db	118	;'v'
  3632  00F627  65                 	db	101	;'e'
  3633  00F628  20                 	db	32
  3634  00F629  62                 	db	98	;'b'
  3635  00F62A  65                 	db	101	;'e'
  3636  00F62B  65                 	db	101	;'e'
  3637  00F62C  6E                 	db	110	;'n'
  3638  00F62D  20                 	db	32
  3639  00F62E  72                 	db	114	;'r'
  3640  00F62F  65                 	db	101	;'e'
  3641  00F630  74                 	db	116	;'t'
  3642  00F631  72                 	db	114	;'r'
  3643  00F632  69                 	db	105	;'i'
  3644  00F633  65                 	db	101	;'e'
  3645  00F634  76                 	db	118	;'v'
  3646  00F635  65                 	db	101	;'e'
  3647  00F636  64                 	db	100	;'d'
  3648  00F637  20                 	db	32
  3649  00F638  66                 	db	102	;'f'
  3650  00F639  72                 	db	114	;'r'
  3651  00F63A  6F                 	db	111	;'o'
  3652  00F63B  6D                 	db	109	;'m'
  3653  00F63C  20                 	db	32
  3654  00F63D  66                 	db	102	;'f'
  3655  00F63E  6C                 	db	108	;'l'
  3656  00F63F  61                 	db	97	;'a'
  3657  00F640  73                 	db	115	;'s'
  3658  00F641  68                 	db	104	;'h'
  3659  00F642  20                 	db	32
  3660  00F643  6D                 	db	109	;'m'
  3661  00F644  65                 	db	101	;'e'
  3662  00F645  6D                 	db	109	;'m'
  3663  00F646  6F                 	db	111	;'o'
  3664  00F647  72                 	db	114	;'r'
  3665  00F648  79                 	db	121	;'y'
  3666  00F649  3A                 	db	58	;':'
  3667  00F64A  0A                 	db	10
  3668  00F64B  0D                 	db	13
  3669  00F64C  00                 	db	0
  3670  00F64D                     STR_114:
  3671  00F64D  43                 	db	67	;'C'
  3672  00F64E  61                 	db	97	;'a'
  3673  00F64F  6C                 	db	108	;'l'
  3674  00F650  63                 	db	99	;'c'
  3675  00F651  75                 	db	117	;'u'
  3676  00F652  6C                 	db	108	;'l'
  3677  00F653  61                 	db	97	;'a'
  3678  00F654  74                 	db	116	;'t'
  3679  00F655  65                 	db	101	;'e'
  3680  00F656  64                 	db	100	;'d'
  3681  00F657  20                 	db	32
  3682  00F658  54                 	db	84	;'T'
  3683  00F659  52                 	db	82	;'R'
  3684  00F65A  49                 	db	73	;'I'
  3685  00F65B  41                 	db	65	;'A'
  3686  00F65C  43                 	db	67	;'C'
  3687  00F65D  20                 	db	32
  3688  00F65E  66                 	db	102	;'f'
  3689  00F65F  69                 	db	105	;'i'
  3690  00F660  72                 	db	114	;'r'
  3691  00F661  69                 	db	105	;'i'
  3692  00F662  6E                 	db	110	;'n'
  3693  00F663  67                 	db	103	;'g'
  3694  00F664  20                 	db	32
  3695  00F665  61                 	db	97	;'a'
  3696  00F666  6E                 	db	110	;'n'
  3697  00F667  67                 	db	103	;'g'
  3698  00F668  6C                 	db	108	;'l'
  3699  00F669  65                 	db	101	;'e'
  3700  00F66A  20                 	db	32
  3701  00F66B  69                 	db	105	;'i'
  3702  00F66C  73                 	db	115	;'s'
  3703  00F66D  20                 	db	32
  3704  00F66E  25                 	db	37
  3705  00F66F  2E                 	db	46
  3706  00F670  33                 	db	51	;'3'
  3707  00F671  66                 	db	102	;'f'
  3708  00F672  20                 	db	32
  3709  00F673  72                 	db	114	;'r'
  3710  00F674  61                 	db	97	;'a'
  3711  00F675  64                 	db	100	;'d'
  3712  00F676  69                 	db	105	;'i'
  3713  00F677  61                 	db	97	;'a'
  3714  00F678  6E                 	db	110	;'n'
  3715  00F679  73                 	db	115	;'s'
  3716  00F67A  20                 	db	32
  3717  00F67B  28                 	db	40
  3718  00F67C  25                 	db	37
  3719  00F67D  2E                 	db	46
  3720  00F67E  33                 	db	51	;'3'
  3721  00F67F  66                 	db	102	;'f'
  3722  00F680  20                 	db	32
  3723  00F681  64                 	db	100	;'d'
  3724  00F682  65                 	db	101	;'e'
  3725  00F683  67                 	db	103	;'g'
  3726  00F684  72                 	db	114	;'r'
  3727  00F685  65                 	db	101	;'e'
  3728  00F686  65                 	db	101	;'e'
  3729  00F687  73                 	db	115	;'s'
  3730  00F688  29                 	db	41
  3731  00F689  0A                 	db	10
  3732  00F68A  0D                 	db	13
  3733  00F68B  00                 	db	0
  3734  00F68C                     STR_127:
  3735  00F68C  53                 	db	83	;'S'
  3736  00F68D  79                 	db	121	;'y'
  3737  00F68E  73                 	db	115	;'s'
  3738  00F68F  74                 	db	116	;'t'
  3739  00F690  65                 	db	101	;'e'
  3740  00F691  6D                 	db	109	;'m'
  3741  00F692  20                 	db	32
  3742  00F693  70                 	db	112	;'p'
  3743  00F694  61                 	db	97	;'a'
  3744  00F695  72                 	db	114	;'r'
  3745  00F696  61                 	db	97	;'a'
  3746  00F697  6D                 	db	109	;'m'
  3747  00F698  65                 	db	101	;'e'
  3748  00F699  74                 	db	116	;'t'
  3749  00F69A  65                 	db	101	;'e'
  3750  00F69B  72                 	db	114	;'r'
  3751  00F69C  73                 	db	115	;'s'
  3752  00F69D  20                 	db	32
  3753  00F69E  61                 	db	97	;'a'
  3754  00F69F  6E                 	db	110	;'n'
  3755  00F6A0  64                 	db	100	;'d'
  3756  00F6A1  20                 	db	32
  3757  00F6A2  61                 	db	97	;'a'
  3758  00F6A3  66                 	db	102	;'f'
  3759  00F6A4  66                 	db	102	;'f'
  3760  00F6A5  69                 	db	105	;'i'
  3761  00F6A6  72                 	db	114	;'r'
  3762  00F6A7  6D                 	db	109	;'m'
  3763  00F6A8  61                 	db	97	;'a'
  3764  00F6A9  74                 	db	116	;'t'
  3765  00F6AA  69                 	db	105	;'i'
  3766  00F6AB  76                 	db	118	;'v'
  3767  00F6AC  65                 	db	101	;'e'
  3768  00F6AD  20                 	db	32
  3769  00F6AE  72                 	db	114	;'r'
  3770  00F6AF  65                 	db	101	;'e'
  3771  00F6B0  73                 	db	115	;'s'
  3772  00F6B1  70                 	db	112	;'p'
  3773  00F6B2  6F                 	db	111	;'o'
  3774  00F6B3  6E                 	db	110	;'n'
  3775  00F6B4  73                 	db	115	;'s'
  3776  00F6B5  65                 	db	101	;'e'
  3777  00F6B6  73                 	db	115	;'s'
  3778  00F6B7  20                 	db	32
  3779  00F6B8  61                 	db	97	;'a'
  3780  00F6B9  70                 	db	112	;'p'
  3781  00F6BA  70                 	db	112	;'p'
  3782  00F6BB  65                 	db	101	;'e'
  3783  00F6BC  61                 	db	97	;'a'
  3784  00F6BD  72                 	db	114	;'r'
  3785  00F6BE  20                 	db	32
  3786  00F6BF  69                 	db	105	;'i'
  3787  00F6C0  6E                 	db	110	;'n'
  3788  00F6C1  20                 	db	32
  3789  00F6C2  67                 	db	103	;'g'
  3790  00F6C3  72                 	db	114	;'r'
  3791  00F6C4  65                 	db	101	;'e'
  3792  00F6C5  65                 	db	101	;'e'
  3793  00F6C6  6E                 	db	110	;'n'
  3794  00F6C7  0A                 	db	10
  3795  00F6C8  0D                 	db	13
  3796  00F6C9  00                 	db	0
  3797  00F6CA                     STR_56:
  3798  00F6CA  44                 	db	68	;'D'
  3799  00F6CB  65                 	db	101	;'e'
  3800  00F6CC  76                 	db	118	;'v'
  3801  00F6CD  69                 	db	105	;'i'
  3802  00F6CE  63                 	db	99	;'c'
  3803  00F6CF  65                 	db	101	;'e'
  3804  00F6D0  20                 	db	32
  3805  00F6D1  73                 	db	115	;'s'
  3806  00F6D2  69                 	db	105	;'i'
  3807  00F6D3  6C                 	db	108	;'l'
  3808  00F6D4  69                 	db	105	;'i'
  3809  00F6D5  63                 	db	99	;'c'
  3810  00F6D6  6F                 	db	111	;'o'
  3811  00F6D7  6E                 	db	110	;'n'
  3812  00F6D8  20                 	db	32
  3813  00F6D9  72                 	db	114	;'r'
  3814  00F6DA  65                 	db	101	;'e'
  3815  00F6DB  76                 	db	118	;'v'
  3816  00F6DC  69                 	db	105	;'i'
  3817  00F6DD  73                 	db	115	;'s'
  3818  00F6DE  69                 	db	105	;'i'
  3819  00F6DF  6F                 	db	111	;'o'
  3820  00F6E0  6E                 	db	110	;'n'
  3821  00F6E1  20                 	db	32
  3822  00F6E2  49                 	db	73	;'I'
  3823  00F6E3  44                 	db	68	;'D'
  3824  00F6E4  20                 	db	32
  3825  00F6E5  61                 	db	97	;'a'
  3826  00F6E6  73                 	db	115	;'s'
  3827  00F6E7  20                 	db	32
  3828  00F6E8  73                 	db	115	;'s'
  3829  00F6E9  74                 	db	116	;'t'
  3830  00F6EA  6F                 	db	111	;'o'
  3831  00F6EB  72                 	db	114	;'r'
  3832  00F6EC  65                 	db	101	;'e'
  3833  00F6ED  64                 	db	100	;'d'
  3834  00F6EE  20                 	db	32
  3835  00F6EF  69                 	db	105	;'i'
  3836  00F6F0  6E                 	db	110	;'n'
  3837  00F6F1  20                 	db	32
  3838  00F6F2  46                 	db	70	;'F'
  3839  00F6F3  6C                 	db	108	;'l'
  3840  00F6F4  61                 	db	97	;'a'
  3841  00F6F5  73                 	db	115	;'s'
  3842  00F6F6  68                 	db	104	;'h'
  3843  00F6F7  20                 	db	32
  3844  00F6F8  69                 	db	105	;'i'
  3845  00F6F9  73                 	db	115	;'s'
  3846  00F6FA  3A                 	db	58	;':'
  3847  00F6FB  20                 	db	32
  3848  00F6FC  25                 	db	37
  3849  00F6FD  63                 	db	99	;'c'
  3850  00F6FE  25                 	db	37
  3851  00F6FF  30                 	db	48	;'0'
  3852  00F700  33                 	db	51	;'3'
  3853  00F701  64                 	db	100	;'d'
  3854  00F702  0A                 	db	10
  3855  00F703  0D                 	db	13
  3856  00F704  00                 	db	0
  3857  00F705                     STR_117:
  3858  00F705  44                 	db	68	;'D'
  3859  00F706  65                 	db	101	;'e'
  3860  00F707  76                 	db	118	;'v'
  3861  00F708  69                 	db	105	;'i'
  3862  00F709  63                 	db	99	;'c'
  3863  00F70A  65                 	db	101	;'e'
  3864  00F70B  20                 	db	32
  3865  00F70C  6F                 	db	111	;'o'
  3866  00F70D  6E                 	db	110	;'n'
  3867  00F70E  20                 	db	32
  3868  00F70F  74                 	db	116	;'t'
  3869  00F710  69                 	db	105	;'i'
  3870  00F711  6D                 	db	109	;'m'
  3871  00F712  65                 	db	101	;'e'
  3872  00F713  20                 	db	32
  3873  00F714  73                 	db	115	;'s'
  3874  00F715  69                 	db	105	;'i'
  3875  00F716  6E                 	db	110	;'n'
  3876  00F717  63                 	db	99	;'c'
  3877  00F718  65                 	db	101	;'e'
  3878  00F719  20                 	db	32
  3879  00F71A  6C                 	db	108	;'l'
  3880  00F71B  61                 	db	97	;'a'
  3881  00F71C  73                 	db	115	;'s'
  3882  00F71D  74                 	db	116	;'t'
  3883  00F71E  20                 	db	32
  3884  00F71F  72                 	db	114	;'r'
  3885  00F720  65                 	db	101	;'e'
  3886  00F721  73                 	db	115	;'s'
  3887  00F722  65                 	db	101	;'e'
  3888  00F723  74                 	db	116	;'t'
  3889  00F724  20                 	db	32
  3890  00F725  63                 	db	99	;'c'
  3891  00F726  6F                 	db	111	;'o'
  3892  00F727  6E                 	db	110	;'n'
  3893  00F728  64                 	db	100	;'d'
  3894  00F729  69                 	db	105	;'i'
  3895  00F72A  74                 	db	116	;'t'
  3896  00F72B  69                 	db	105	;'i'
  3897  00F72C  6F                 	db	111	;'o'
  3898  00F72D  6E                 	db	110	;'n'
  3899  00F72E  20                 	db	32
  3900  00F72F  69                 	db	105	;'i'
  3901  00F730  73                 	db	115	;'s'
  3902  00F731  20                 	db	32
  3903  00F732  25                 	db	37
  3904  00F733  64                 	db	100	;'d'
  3905  00F734  20                 	db	32
  3906  00F735  73                 	db	115	;'s'
  3907  00F736  65                 	db	101	;'e'
  3908  00F737  63                 	db	99	;'c'
  3909  00F738  6F                 	db	111	;'o'
  3910  00F739  6E                 	db	110	;'n'
  3911  00F73A  64                 	db	100	;'d'
  3912  00F73B  73                 	db	115	;'s'
  3913  00F73C  0A                 	db	10
  3914  00F73D  0D                 	db	13
  3915  00F73E  00                 	db	0
  3916  00F73F                     STR_83:
  3917  00F73F  46                 	db	70	;'F'
  3918  00F740  69                 	db	105	;'i'
  3919  00F741  78                 	db	120	;'x'
  3920  00F742  65                 	db	101	;'e'
  3921  00F743  64                 	db	100	;'d'
  3922  00F744  20                 	db	32
  3923  00F745  56                 	db	86	;'V'
  3924  00F746  6F                 	db	111	;'o'
  3925  00F747  6C                 	db	108	;'l'
  3926  00F748  74                 	db	116	;'t'
  3927  00F749  61                 	db	97	;'a'
  3928  00F74A  67                 	db	103	;'g'
  3929  00F74B  65                 	db	101	;'e'
  3930  00F74C  20                 	db	32
  3931  00F74D  52                 	db	82	;'R'
  3932  00F74E  65                 	db	101	;'e'
  3933  00F74F  66                 	db	102	;'f'
  3934  00F750  65                 	db	101	;'e'
  3935  00F751  72                 	db	114	;'r'
  3936  00F752  65                 	db	101	;'e'
  3937  00F753  6E                 	db	110	;'n'
  3938  00F754  63                 	db	99	;'c'
  3939  00F755  65                 	db	101	;'e'
  3940  00F756  20                 	db	32
  3941  00F757  42                 	db	66	;'B'
  3942  00F758  75                 	db	117	;'u'
  3943  00F759  66                 	db	102	;'f'
  3944  00F75A  66                 	db	102	;'f'
  3945  00F75B  65                 	db	101	;'e'
  3946  00F75C  72                 	db	114	;'r'
  3947  00F75D  20                 	db	32
  3948  00F75E  31                 	db	49	;'1'
  3949  00F75F  20                 	db	32
  3950  00F760  6D                 	db	109	;'m'
  3951  00F761  65                 	db	101	;'e'
  3952  00F762  61                 	db	97	;'a'
  3953  00F763  73                 	db	115	;'s'
  3954  00F764  75                 	db	117	;'u'
  3955  00F765  72                 	db	114	;'r'
  3956  00F766  65                 	db	101	;'e'
  3957  00F767  64                 	db	100	;'d'
  3958  00F768  20                 	db	32
  3959  00F769  61                 	db	97	;'a'
  3960  00F76A  73                 	db	115	;'s'
  3961  00F76B  20                 	db	32
  3962  00F76C  25                 	db	37
  3963  00F76D  2E                 	db	46
  3964  00F76E  33                 	db	51	;'3'
  3965  00F76F  66                 	db	102	;'f'
  3966  00F770  20                 	db	32
  3967  00F771  56                 	db	86	;'V'
  3968  00F772  6F                 	db	111	;'o'
  3969  00F773  6C                 	db	108	;'l'
  3970  00F774  74                 	db	116	;'t'
  3971  00F775  73                 	db	115	;'s'
  3972  00F776  0A                 	db	10
  3973  00F777  0D                 	db	13
  3974  00F778  00                 	db	0
  3975  00F779                     STR_93:
  3976  00F779  4F                 	db	79	;'O'
  3977  00F77A  75                 	db	117	;'u'
  3978  00F77B  74                 	db	116	;'t'
  3979  00F77C  70                 	db	112	;'p'
  3980  00F77D  75                 	db	117	;'u'
  3981  00F77E  74                 	db	116	;'t'
  3982  00F77F  20                 	db	32
  3983  00F780  70                 	db	112	;'p'
  3984  00F781  6F                 	db	111	;'o'
  3985  00F782  77                 	db	119	;'w'
  3986  00F783  65                 	db	101	;'e'
  3987  00F784  72                 	db	114	;'r'
  3988  00F785  20                 	db	32
  3989  00F786  63                 	db	99	;'c'
  3990  00F787  61                 	db	97	;'a'
  3991  00F788  6C                 	db	108	;'l'
  3992  00F789  63                 	db	99	;'c'
  3993  00F78A  75                 	db	117	;'u'
  3994  00F78B  6C                 	db	108	;'l'
  3995  00F78C  61                 	db	97	;'a'
  3996  00F78D  74                 	db	116	;'t'
  3997  00F78E  65                 	db	101	;'e'
  3998  00F78F  64                 	db	100	;'d'
  3999  00F790  20                 	db	32
  4000  00F791  61                 	db	97	;'a'
  4001  00F792  73                 	db	115	;'s'
  4002  00F793  20                 	db	32
  4003  00F794  25                 	db	37
  4004  00F795  2E                 	db	46
  4005  00F796  33                 	db	51	;'3'
  4006  00F797  66                 	db	102	;'f'
  4007  00F798  20                 	db	32
  4008  00F799  57                 	db	87	;'W'
  4009  00F79A  61                 	db	97	;'a'
  4010  00F79B  74                 	db	116	;'t'
  4011  00F79C  74                 	db	116	;'t'
  4012  00F79D  73                 	db	115	;'s'
  4013  00F79E  20                 	db	32
  4014  00F79F  66                 	db	102	;'f'
  4015  00F7A0  72                 	db	114	;'r'
  4016  00F7A1  6F                 	db	111	;'o'
  4017  00F7A2  6D                 	db	109	;'m'
  4018  00F7A3  20                 	db	32
  4019  00F7A4  52                 	db	82	;'R'
  4020  00F7A5  4D                 	db	77	;'M'
  4021  00F7A6  53                 	db	83	;'S'
  4022  00F7A7  20                 	db	32
  4023  00F7A8  76                 	db	118	;'v'
  4024  00F7A9  61                 	db	97	;'a'
  4025  00F7AA  6C                 	db	108	;'l'
  4026  00F7AB  75                 	db	117	;'u'
  4027  00F7AC  65                 	db	101	;'e'
  4028  00F7AD  73                 	db	115	;'s'
  4029  00F7AE  0A                 	db	10
  4030  00F7AF  0D                 	db	13
  4031  00F7B0  00                 	db	0
  4032  00F7B1                     STR_126:
  4033  00F7B1  48                 	db	72	;'H'
  4034  00F7B2  65                 	db	101	;'e'
  4035  00F7B3  6C                 	db	108	;'l'
  4036  00F7B4  70                 	db	112	;'p'
  4037  00F7B5  20                 	db	32
  4038  00F7B6  6D                 	db	109	;'m'
  4039  00F7B7  65                 	db	101	;'e'
  4040  00F7B8  73                 	db	115	;'s'
  4041  00F7B9  73                 	db	115	;'s'
  4042  00F7BA  61                 	db	97	;'a'
  4043  00F7BB  67                 	db	103	;'g'
  4044  00F7BC  65                 	db	101	;'e'
  4045  00F7BD  73                 	db	115	;'s'
  4046  00F7BE  20                 	db	32
  4047  00F7BF  61                 	db	97	;'a'
  4048  00F7C0  6E                 	db	110	;'n'
  4049  00F7C1  64                 	db	100	;'d'
  4050  00F7C2  20                 	db	32
  4051  00F7C3  6E                 	db	110	;'n'
  4052  00F7C4  65                 	db	101	;'e'
  4053  00F7C5  75                 	db	117	;'u'
  4054  00F7C6  74                 	db	116	;'t'
  4055  00F7C7  72                 	db	114	;'r'
  4056  00F7C8  61                 	db	97	;'a'
  4057  00F7C9  6C                 	db	108	;'l'
  4058  00F7CA  20                 	db	32
  4059  00F7CB  72                 	db	114	;'r'
  4060  00F7CC  65                 	db	101	;'e'
  4061  00F7CD  73                 	db	115	;'s'
  4062  00F7CE  70                 	db	112	;'p'
  4063  00F7CF  6F                 	db	111	;'o'
  4064  00F7D0  6E                 	db	110	;'n'
  4065  00F7D1  73                 	db	115	;'s'
  4066  00F7D2  65                 	db	101	;'e'
  4067  00F7D3  73                 	db	115	;'s'
  4068  00F7D4  20                 	db	32
  4069  00F7D5  61                 	db	97	;'a'
  4070  00F7D6  70                 	db	112	;'p'
  4071  00F7D7  70                 	db	112	;'p'
  4072  00F7D8  65                 	db	101	;'e'
  4073  00F7D9  61                 	db	97	;'a'
  4074  00F7DA  72                 	db	114	;'r'
  4075  00F7DB  20                 	db	32
  4076  00F7DC  69                 	db	105	;'i'
  4077  00F7DD  6E                 	db	110	;'n'
  4078  00F7DE  20                 	db	32
  4079  00F7DF  79                 	db	121	;'y'
  4080  00F7E0  65                 	db	101	;'e'
  4081  00F7E1  6C                 	db	108	;'l'
  4082  00F7E2  6C                 	db	108	;'l'
  4083  00F7E3  6F                 	db	111	;'o'
  4084  00F7E4  77                 	db	119	;'w'
  4085  00F7E5  0A                 	db	10
  4086  00F7E6  0D                 	db	13
  4087  00F7E7  00                 	db	0
  4088  00F7E8                     STR_59:
  4089  00F7E8  20                 	db	32
  4090  00F7E9  20                 	db	32
  4091  00F7EA  20                 	db	32
  4092  00F7EB  20                 	db	32
  4093  00F7EC  55                 	db	85	;'U'
  4094  00F7ED  73                 	db	115	;'s'
  4095  00F7EE  65                 	db	101	;'e'
  4096  00F7EF  72                 	db	114	;'r'
  4097  00F7F0  20                 	db	32
  4098  00F7F1  49                 	db	73	;'I'
  4099  00F7F2  44                 	db	68	;'D'
  4100  00F7F3  20                 	db	32
  4101  00F7F4  57                 	db	87	;'W'
  4102  00F7F5  6F                 	db	111	;'o'
  4103  00F7F6  72                 	db	114	;'r'
  4104  00F7F7  64                 	db	100	;'d'
  4105  00F7F8  20                 	db	32
  4106  00F7F9  25                 	db	37
  4107  00F7FA  64                 	db	100	;'d'
  4108  00F7FB  20                 	db	32
  4109  00F7FC  28                 	db	40
  4110  00F7FD  46                 	db	70	;'F'
  4111  00F7FE  6C                 	db	108	;'l'
  4112  00F7FF  61                 	db	97	;'a'
  4113  00F800  73                 	db	115	;'s'
  4114  00F801  68                 	db	104	;'h'
  4115  00F802  20                 	db	32
  4116  00F803  61                 	db	97	;'a'
  4117  00F804  64                 	db	100	;'d'
  4118  00F805  64                 	db	100	;'d'
  4119  00F806  72                 	db	114	;'r'
  4120  00F807  65                 	db	101	;'e'
  4121  00F808  73                 	db	115	;'s'
  4122  00F809  73                 	db	115	;'s'
  4123  00F80A  20                 	db	32
  4124  00F80B  30                 	db	48	;'0'
  4125  00F80C  78                 	db	120	;'x'
  4126  00F80D  32                 	db	50	;'2'
  4127  00F80E  30                 	db	48	;'0'
  4128  00F80F  30                 	db	48	;'0'
  4129  00F810  30                 	db	48	;'0'
  4130  00F811  30                 	db	48	;'0'
  4131  00F812  25                 	db	37
  4132  00F813  58                 	db	88	;'X'
  4133  00F814  29                 	db	41
  4134  00F815  3A                 	db	58	;':'
  4135  00F816  20                 	db	32
  4136  00F817  30                 	db	48	;'0'
  4137  00F818  78                 	db	120	;'x'
  4138  00F819  25                 	db	37
  4139  00F81A  58                 	db	88	;'X'
  4140  00F81B  0A                 	db	10
  4141  00F81C  0D                 	db	13
  4142  00F81D  00                 	db	0
  4143  00F81E                     STR_105:
  4144  00F81E  4C                 	db	76	;'L'
  4145  00F81F  6F                 	db	111	;'o'
  4146  00F820  61                 	db	97	;'a'
  4147  00F821  64                 	db	100	;'d'
  4148  00F822  20                 	db	32
  4149  00F823  69                 	db	105	;'i'
  4150  00F824  73                 	db	115	;'s'
  4151  00F825  20                 	db	32
  4152  00F826  63                 	db	99	;'c'
  4153  00F827  75                 	db	117	;'u'
  4154  00F828  72                 	db	114	;'r'
  4155  00F829  72                 	db	114	;'r'
  4156  00F82A  65                 	db	101	;'e'
  4157  00F82B  6E                 	db	110	;'n'
  4158  00F82C  74                 	db	116	;'t'
  4159  00F82D  6C                 	db	108	;'l'
  4160  00F82E  79                 	db	121	;'y'
  4161  00F82F  20                 	db	32
  4162  00F830  65                 	db	101	;'e'
  4163  00F831  6E                 	db	110	;'n'
  4164  00F832  61                 	db	97	;'a'
  4165  00F833  62                 	db	98	;'b'
  4166  00F834  6C                 	db	108	;'l'
  4167  00F835  65                 	db	101	;'e'
  4168  00F836  64                 	db	100	;'d'
  4169  00F837  2C                 	db	44
  4170  00F838  20                 	db	32
  4171  00F839  62                 	db	98	;'b'
  4172  00F83A  75                 	db	117	;'u'
  4173  00F83B  74                 	db	116	;'t'
  4174  00F83C  20                 	db	32
  4175  00F83D  64                 	db	100	;'d'
  4176  00F83E  69                 	db	105	;'i'
  4177  00F83F  6D                 	db	109	;'m'
  4178  00F840  6D                 	db	109	;'m'
  4179  00F841  69                 	db	105	;'i'
  4180  00F842  6E                 	db	110	;'n'
  4181  00F843  67                 	db	103	;'g'
  4182  00F844  20                 	db	32
  4183  00F845  69                 	db	105	;'i'
  4184  00F846  73                 	db	115	;'s'
  4185  00F847  20                 	db	32
  4186  00F848  64                 	db	100	;'d'
  4187  00F849  69                 	db	105	;'i'
  4188  00F84A  73                 	db	115	;'s'
  4189  00F84B  61                 	db	97	;'a'
  4190  00F84C  62                 	db	98	;'b'
  4191  00F84D  6C                 	db	108	;'l'
  4192  00F84E  65                 	db	101	;'e'
  4193  00F84F  64                 	db	100	;'d'
  4194  00F850  0A                 	db	10
  4195  00F851  0D                 	db	13
  4196  00F852  00                 	db	0
  4197  00F853                     STR_119:
  4198  00F853  4C                 	db	76	;'L'
  4199  00F854  6F                 	db	111	;'o'
  4200  00F855  61                 	db	97	;'a'
  4201  00F856  64                 	db	100	;'d'
  4202  00F857  20                 	db	32
  4203  00F858  6F                 	db	111	;'o'
  4204  00F859  6E                 	db	110	;'n'
  4205  00F85A  20                 	db	32
  4206  00F85B  74                 	db	116	;'t'
  4207  00F85C  69                 	db	105	;'i'
  4208  00F85D  6D                 	db	109	;'m'
  4209  00F85E  65                 	db	101	;'e'
  4210  00F85F  20                 	db	32
  4211  00F860  73                 	db	115	;'s'
  4212  00F861  69                 	db	105	;'i'
  4213  00F862  6E                 	db	110	;'n'
  4214  00F863  63                 	db	99	;'c'
  4215  00F864  65                 	db	101	;'e'
  4216  00F865  20                 	db	32
  4217  00F866  6C                 	db	108	;'l'
  4218  00F867  61                 	db	97	;'a'
  4219  00F868  73                 	db	115	;'s'
  4220  00F869  74                 	db	116	;'t'
  4221  00F86A  20                 	db	32
  4222  00F86B  64                 	db	100	;'d'
  4223  00F86C  65                 	db	101	;'e'
  4224  00F86D  76                 	db	118	;'v'
  4225  00F86E  69                 	db	105	;'i'
  4226  00F86F  63                 	db	99	;'c'
  4227  00F870  65                 	db	101	;'e'
  4228  00F871  20                 	db	32
  4229  00F872  72                 	db	114	;'r'
  4230  00F873  65                 	db	101	;'e'
  4231  00F874  73                 	db	115	;'s'
  4232  00F875  65                 	db	101	;'e'
  4233  00F876  74                 	db	116	;'t'
  4234  00F877  20                 	db	32
  4235  00F878  69                 	db	105	;'i'
  4236  00F879  73                 	db	115	;'s'
  4237  00F87A  20                 	db	32
  4238  00F87B  25                 	db	37
  4239  00F87C  64                 	db	100	;'d'
  4240  00F87D  20                 	db	32
  4241  00F87E  73                 	db	115	;'s'
  4242  00F87F  65                 	db	101	;'e'
  4243  00F880  63                 	db	99	;'c'
  4244  00F881  6F                 	db	111	;'o'
  4245  00F882  6E                 	db	110	;'n'
  4246  00F883  64                 	db	100	;'d'
  4247  00F884  73                 	db	115	;'s'
  4248  00F885  0A                 	db	10
  4249  00F886  0D                 	db	13
  4250  00F887  00                 	db	0
  4251  00F888                     STR_48:
  4252  00F888  54                 	db	84	;'T'
  4253  00F889  68                 	db	104	;'h'
  4254  00F88A  65                 	db	101	;'e'
  4255  00F88B  20                 	db	32
  4256  00F88C  63                 	db	99	;'c'
  4257  00F88D  61                 	db	97	;'a'
  4258  00F88E  75                 	db	117	;'u'
  4259  00F88F  73                 	db	115	;'s'
  4260  00F890  65                 	db	101	;'e'
  4261  00F891  20                 	db	32
  4262  00F892  6F                 	db	111	;'o'
  4263  00F893  66                 	db	102	;'f'
  4264  00F894  20                 	db	32
  4265  00F895  74                 	db	116	;'t'
  4266  00F896  68                 	db	104	;'h'
  4267  00F897  65                 	db	101	;'e'
  4268  00F898  20                 	db	32
  4269  00F899  6D                 	db	109	;'m'
  4270  00F89A  6F                 	db	111	;'o'
  4271  00F89B  73                 	db	115	;'s'
  4272  00F89C  74                 	db	116	;'t'
  4273  00F89D  20                 	db	32
  4274  00F89E  72                 	db	114	;'r'
  4275  00F89F  65                 	db	101	;'e'
  4276  00F8A0  63                 	db	99	;'c'
  4277  00F8A1  65                 	db	101	;'e'
  4278  00F8A2  6E                 	db	110	;'n'
  4279  00F8A3  74                 	db	116	;'t'
  4280  00F8A4  20                 	db	32
  4281  00F8A5  64                 	db	100	;'d'
  4282  00F8A6  65                 	db	101	;'e'
  4283  00F8A7  76                 	db	118	;'v'
  4284  00F8A8  69                 	db	105	;'i'
  4285  00F8A9  63                 	db	99	;'c'
  4286  00F8AA  65                 	db	101	;'e'
  4287  00F8AB  20                 	db	32
  4288  00F8AC  72                 	db	114	;'r'
  4289  00F8AD  65                 	db	101	;'e'
  4290  00F8AE  73                 	db	115	;'s'
  4291  00F8AF  65                 	db	101	;'e'
  4292  00F8B0  74                 	db	116	;'t'
  4293  00F8B1  20                 	db	32
  4294  00F8B2  77                 	db	119	;'w'
  4295  00F8B3  61                 	db	97	;'a'
  4296  00F8B4  73                 	db	115	;'s'
  4297  00F8B5  3A                 	db	58	;':'
  4298  00F8B6  20                 	db	32
  4299  00F8B7  25                 	db	37
  4300  00F8B8  73                 	db	115	;'s'
  4301  00F8B9  0A                 	db	10
  4302  00F8BA  0D                 	db	13
  4303  00F8BB  00                 	db	0
  4304  00F8BC                     STR_121:
  4305  00F8BC  4D                 	db	77	;'M'
  4306  00F8BD  61                 	db	97	;'a'
  4307  00F8BE  78                 	db	120	;'x'
  4308  00F8BF  69                 	db	105	;'i'
  4309  00F8C0  6D                 	db	109	;'m'
  4310  00F8C1  75                 	db	117	;'u'
  4311  00F8C2  6D                 	db	109	;'m'
  4312  00F8C3  20                 	db	32
  4313  00F8C4  72                 	db	114	;'r'
  4314  00F8C5  65                 	db	101	;'e'
  4315  00F8C6  63                 	db	99	;'c'
  4316  00F8C7  6F                 	db	111	;'o'
  4317  00F8C8  72                 	db	114	;'r'
  4318  00F8C9  64                 	db	100	;'d'
  4319  00F8CA  65                 	db	101	;'e'
  4320  00F8CB  64                 	db	100	;'d'
  4321  00F8CC  20                 	db	32
  4322  00F8CD  52                 	db	82	;'R'
  4323  00F8CE  4D                 	db	77	;'M'
  4324  00F8CF  53                 	db	83	;'S'
  4325  00F8D0  20                 	db	32
  4326  00F8D1  6F                 	db	111	;'o'
  4327  00F8D2  75                 	db	117	;'u'
  4328  00F8D3  74                 	db	116	;'t'
  4329  00F8D4  70                 	db	112	;'p'
  4330  00F8D5  75                 	db	117	;'u'
  4331  00F8D6  74                 	db	116	;'t'
  4332  00F8D7  20                 	db	32
  4333  00F8D8  63                 	db	99	;'c'
  4334  00F8D9  75                 	db	117	;'u'
  4335  00F8DA  72                 	db	114	;'r'
  4336  00F8DB  72                 	db	114	;'r'
  4337  00F8DC  65                 	db	101	;'e'
  4338  00F8DD  6E                 	db	110	;'n'
  4339  00F8DE  74                 	db	116	;'t'
  4340  00F8DF  20                 	db	32
  4341  00F8E0  69                 	db	105	;'i'
  4342  00F8E1  73                 	db	115	;'s'
  4343  00F8E2  20                 	db	32
  4344  00F8E3  25                 	db	37
  4345  00F8E4  2E                 	db	46
  4346  00F8E5  33                 	db	51	;'3'
  4347  00F8E6  66                 	db	102	;'f'
  4348  00F8E7  20                 	db	32
  4349  00F8E8  41                 	db	65	;'A'
  4350  00F8E9  72                 	db	114	;'r'
  4351  00F8EA  6D                 	db	109	;'m'
  4352  00F8EB  73                 	db	115	;'s'
  4353  00F8EC  0A                 	db	10
  4354  00F8ED  0D                 	db	13
  4355  00F8EE  00                 	db	0
  4356  00F8EF                     STR_69:
  4357  00F8EF  54                 	db	84	;'T'
  4358  00F8F0  68                 	db	104	;'h'
  4359  00F8F1  65                 	db	101	;'e'
  4360  00F8F2  20                 	db	32
  4361  00F8F3  66                 	db	102	;'f'
  4362  00F8F4  6F                 	db	111	;'o'
  4363  00F8F5  6C                 	db	108	;'l'
  4364  00F8F6  6C                 	db	108	;'l'
  4365  00F8F7  6F                 	db	111	;'o'
  4366  00F8F8  77                 	db	119	;'w'
  4367  00F8F9  69                 	db	105	;'i'
  4368  00F8FA  6E                 	db	110	;'n'
  4369  00F8FB  67                 	db	103	;'g'
  4370  00F8FC  20                 	db	32
  4371  00F8FD  63                 	db	99	;'c'
  4372  00F8FE  68                 	db	104	;'h'
  4373  00F8FF  61                 	db	97	;'a'
  4374  00F900  6E                 	db	110	;'n'
  4375  00F901  6E                 	db	110	;'n'
  4376  00F902  65                 	db	101	;'e'
  4377  00F903  6C                 	db	108	;'l'
  4378  00F904  20                 	db	32
  4379  00F905  63                 	db	99	;'c'
  4380  00F906  61                 	db	97	;'a'
  4381  00F907  75                 	db	117	;'u'
  4382  00F908  73                 	db	115	;'s'
  4383  00F909  65                 	db	101	;'e'
  4384  00F90A  64                 	db	100	;'d'
  4385  00F90B  20                 	db	32
  4386  00F90C  61                 	db	97	;'a'
  4387  00F90D  6E                 	db	110	;'n'
  4388  00F90E  20                 	db	32
  4389  00F90F  41                 	db	65	;'A'
  4390  00F910  44                 	db	68	;'D'
  4391  00F911  43                 	db	67	;'C'
  4392  00F912  20                 	db	32
  4393  00F913  65                 	db	101	;'e'
  4394  00F914  72                 	db	114	;'r'
  4395  00F915  72                 	db	114	;'r'
  4396  00F916  6F                 	db	111	;'o'
  4397  00F917  72                 	db	114	;'r'
  4398  00F918  3A                 	db	58	;':'
  4399  00F919  20                 	db	32
  4400  00F91A  25                 	db	37
  4401  00F91B  73                 	db	115	;'s'
  4402  00F91C  0A                 	db	10
  4403  00F91D  0D                 	db	13
  4404  00F91E  00                 	db	0
  4405  00F91F                     STR_52:
  4406  00F91F  4D                 	db	77	;'M'
  4407  00F920  61                 	db	97	;'a'
  4408  00F921  72                 	db	114	;'r'
  4409  00F922  71                 	db	113	;'q'
  4410  00F923  75                 	db	117	;'u'
  4411  00F924  65                 	db	101	;'e'
  4412  00F925  74                 	db	116	;'t'
  4413  00F926  74                 	db	116	;'t'
  4414  00F927  65                 	db	101	;'e'
  4415  00F928  20                 	db	32
  4416  00F929  55                 	db	85	;'U'
  4417  00F92A  6E                 	db	110	;'n'
  4418  00F92B  69                 	db	105	;'i'
  4419  00F92C  76                 	db	118	;'v'
  4420  00F92D  65                 	db	101	;'e'
  4421  00F92E  72                 	db	114	;'r'
  4422  00F92F  73                 	db	115	;'s'
  4423  00F930  69                 	db	105	;'i'
  4424  00F931  74                 	db	116	;'t'
  4425  00F932  79                 	db	121	;'y'
  4426  00F933  20                 	db	32
  4427  00F934  45                 	db	69	;'E'
  4428  00F935  4C                 	db	76	;'L'
  4429  00F936  45                 	db	69	;'E'
  4430  00F937  4E                 	db	78	;'N'
  4431  00F938  20                 	db	32
  4432  00F939  33                 	db	51	;'3'
  4433  00F93A  30                 	db	48	;'0'
  4434  00F93B  33                 	db	51	;'3'
  4435  00F93C  35                 	db	53	;'5'
  4436  00F93D  20                 	db	32
  4437  00F93E  46                 	db	70	;'F'
  4438  00F93F  69                 	db	105	;'i'
  4439  00F940  6E                 	db	110	;'n'
  4440  00F941  61                 	db	97	;'a'
  4441  00F942  6C                 	db	108	;'l'
  4442  00F943  20                 	db	32
  4443  00F944  50                 	db	80	;'P'
  4444  00F945  72                 	db	114	;'r'
  4445  00F946  6F                 	db	111	;'o'
  4446  00F947  6A                 	db	106	;'j'
  4447  00F948  65                 	db	101	;'e'
  4448  00F949  63                 	db	99	;'c'
  4449  00F94A  74                 	db	116	;'t'
  4450  00F94B  0A                 	db	10
  4451  00F94C  0D                 	db	13
  4452  00F94D  00                 	db	0
  4453  00F94E                     STR_129:
  4454  00F94E  45                 	db	69	;'E'
  4455  00F94F  72                 	db	114	;'r'
  4456  00F950  72                 	db	114	;'r'
  4457  00F951  6F                 	db	111	;'o'
  4458  00F952  72                 	db	114	;'r'
  4459  00F953  73                 	db	115	;'s'
  4460  00F954  20                 	db	32
  4461  00F955  61                 	db	97	;'a'
  4462  00F956  6E                 	db	110	;'n'
  4463  00F957  64                 	db	100	;'d'
  4464  00F958  20                 	db	32
  4465  00F959  6E                 	db	110	;'n'
  4466  00F95A  65                 	db	101	;'e'
  4467  00F95B  67                 	db	103	;'g'
  4468  00F95C  61                 	db	97	;'a'
  4469  00F95D  74                 	db	116	;'t'
  4470  00F95E  69                 	db	105	;'i'
  4471  00F95F  76                 	db	118	;'v'
  4472  00F960  65                 	db	101	;'e'
  4473  00F961  20                 	db	32
  4474  00F962  72                 	db	114	;'r'
  4475  00F963  65                 	db	101	;'e'
  4476  00F964  73                 	db	115	;'s'
  4477  00F965  70                 	db	112	;'p'
  4478  00F966  6F                 	db	111	;'o'
  4479  00F967  6E                 	db	110	;'n'
  4480  00F968  73                 	db	115	;'s'
  4481  00F969  65                 	db	101	;'e'
  4482  00F96A  73                 	db	115	;'s'
  4483  00F96B  20                 	db	32
  4484  00F96C  61                 	db	97	;'a'
  4485  00F96D  70                 	db	112	;'p'
  4486  00F96E  70                 	db	112	;'p'
  4487  00F96F  65                 	db	101	;'e'
  4488  00F970  61                 	db	97	;'a'
  4489  00F971  72                 	db	114	;'r'
  4490  00F972  20                 	db	32
  4491  00F973  69                 	db	105	;'i'
  4492  00F974  6E                 	db	110	;'n'
  4493  00F975  20                 	db	32
  4494  00F976  72                 	db	114	;'r'
  4495  00F977  65                 	db	101	;'e'
  4496  00F978  64                 	db	100	;'d'
  4497  00F979  0A                 	db	10
  4498  00F97A  0D                 	db	13
  4499  00F97B  00                 	db	0
  4500  00F97C                     STR_112:
  4501  00F97C  45                 	db	69	;'E'
  4502  00F97D  6E                 	db	110	;'n'
  4503  00F97E  74                 	db	116	;'t'
  4504  00F97F  65                 	db	101	;'e'
  4505  00F980  72                 	db	114	;'r'
  4506  00F981  20                 	db	32
  4507  00F982  27                 	db	39
  4508  00F983  48                 	db	72	;'H'
  4509  00F984  65                 	db	101	;'e'
  4510  00F985  6C                 	db	108	;'l'
  4511  00F986  70                 	db	112	;'p'
  4512  00F987  27                 	db	39
  4513  00F988  20                 	db	32
  4514  00F989  66                 	db	102	;'f'
  4515  00F98A  6F                 	db	111	;'o'
  4516  00F98B  72                 	db	114	;'r'
  4517  00F98C  20                 	db	32
  4518  00F98D  6C                 	db	108	;'l'
  4519  00F98E  69                 	db	105	;'i'
  4520  00F98F  73                 	db	115	;'s'
  4521  00F990  74                 	db	116	;'t'
  4522  00F991  20                 	db	32
  4523  00F992  6F                 	db	111	;'o'
  4524  00F993  66                 	db	102	;'f'
  4525  00F994  20                 	db	32
  4526  00F995  61                 	db	97	;'a'
  4527  00F996  76                 	db	118	;'v'
  4528  00F997  61                 	db	97	;'a'
  4529  00F998  69                 	db	105	;'i'
  4530  00F999  6C                 	db	108	;'l'
  4531  00F99A  61                 	db	97	;'a'
  4532  00F99B  62                 	db	98	;'b'
  4533  00F99C  6C                 	db	108	;'l'
  4534  00F99D  65                 	db	101	;'e'
  4535  00F99E  20                 	db	32
  4536  00F99F  63                 	db	99	;'c'
  4537  00F9A0  6F                 	db	111	;'o'
  4538  00F9A1  6D                 	db	109	;'m'
  4539  00F9A2  6D                 	db	109	;'m'
  4540  00F9A3  61                 	db	97	;'a'
  4541  00F9A4  6E                 	db	110	;'n'
  4542  00F9A5  64                 	db	100	;'d'
  4543  00F9A6  73                 	db	115	;'s'
  4544  00F9A7  0A                 	db	10
  4545  00F9A8  0D                 	db	13
  4546  00F9A9  00                 	db	0
  4547  00F9AA                     STR_123:
  4548  00F9AA  4D                 	db	77	;'M'
  4549  00F9AB  61                 	db	97	;'a'
  4550  00F9AC  78                 	db	120	;'x'
  4551  00F9AD  69                 	db	105	;'i'
  4552  00F9AE  6D                 	db	109	;'m'
  4553  00F9AF  75                 	db	117	;'u'
  4554  00F9B0  6D                 	db	109	;'m'
  4555  00F9B1  20                 	db	32
  4556  00F9B2  72                 	db	114	;'r'
  4557  00F9B3  65                 	db	101	;'e'
  4558  00F9B4  63                 	db	99	;'c'
  4559  00F9B5  6F                 	db	111	;'o'
  4560  00F9B6  72                 	db	114	;'r'
  4561  00F9B7  64                 	db	100	;'d'
  4562  00F9B8  65                 	db	101	;'e'
  4563  00F9B9  64                 	db	100	;'d'
  4564  00F9BA  20                 	db	32
  4565  00F9BB  6F                 	db	111	;'o'
  4566  00F9BC  75                 	db	117	;'u'
  4567  00F9BD  74                 	db	116	;'t'
  4568  00F9BE  70                 	db	112	;'p'
  4569  00F9BF  75                 	db	117	;'u'
  4570  00F9C0  74                 	db	116	;'t'
  4571  00F9C1  20                 	db	32
  4572  00F9C2  50                 	db	80	;'P'
  4573  00F9C3  6F                 	db	111	;'o'
  4574  00F9C4  77                 	db	119	;'w'
  4575  00F9C5  65                 	db	101	;'e'
  4576  00F9C6  72                 	db	114	;'r'
  4577  00F9C7  20                 	db	32
  4578  00F9C8  69                 	db	105	;'i'
  4579  00F9C9  73                 	db	115	;'s'
  4580  00F9CA  20                 	db	32
  4581  00F9CB  25                 	db	37
  4582  00F9CC  2E                 	db	46
  4583  00F9CD  33                 	db	51	;'3'
  4584  00F9CE  66                 	db	102	;'f'
  4585  00F9CF  20                 	db	32
  4586  00F9D0  57                 	db	87	;'W'
  4587  00F9D1  61                 	db	97	;'a'
  4588  00F9D2  74                 	db	116	;'t'
  4589  00F9D3  74                 	db	116	;'t'
  4590  00F9D4  73                 	db	115	;'s'
  4591  00F9D5  0A                 	db	10
  4592  00F9D6  0D                 	db	13
  4593  00F9D7  00                 	db	0
  4594  00F9D8                     STR_75:
  4595  00F9D8  56                 	db	86	;'V'
  4596  00F9D9  43                 	db	67	;'C'
  4597  00F9DA  43                 	db	67	;'C'
  4598  00F9DB  20                 	db	32
  4599  00F9DC  4F                 	db	79	;'O'
  4600  00F9DD  76                 	db	118	;'v'
  4601  00F9DE  65                 	db	101	;'e'
  4602  00F9DF  72                 	db	114	;'r'
  4603  00F9E0  76                 	db	118	;'v'
  4604  00F9E1  6F                 	db	111	;'o'
  4605  00F9E2  6C                 	db	108	;'l'
  4606  00F9E3  74                 	db	116	;'t'
  4607  00F9E4  61                 	db	97	;'a'
  4608  00F9E5  67                 	db	103	;'g'
  4609  00F9E6  65                 	db	101	;'e'
  4610  00F9E7  20                 	db	32
  4611  00F9E8  63                 	db	99	;'c'
  4612  00F9E9  6F                 	db	111	;'o'
  4613  00F9EA  6E                 	db	110	;'n'
  4614  00F9EB  64                 	db	100	;'d'
  4615  00F9EC  69                 	db	105	;'i'
  4616  00F9ED  74                 	db	116	;'t'
  4617  00F9EE  69                 	db	105	;'i'
  4618  00F9EF  6F                 	db	111	;'o'
  4619  00F9F0  6E                 	db	110	;'n'
  4620  00F9F1  20                 	db	32
  4621  00F9F2  68                 	db	104	;'h'
  4622  00F9F3  61                 	db	97	;'a'
  4623  00F9F4  73                 	db	115	;'s'
  4624  00F9F5  20                 	db	32
  4625  00F9F6  6E                 	db	110	;'n'
  4626  00F9F7  6F                 	db	111	;'o'
  4627  00F9F8  74                 	db	116	;'t'
  4628  00F9F9  20                 	db	32
  4629  00F9FA  6F                 	db	111	;'o'
  4630  00F9FB  63                 	db	99	;'c'
  4631  00F9FC  63                 	db	99	;'c'
  4632  00F9FD  75                 	db	117	;'u'
  4633  00F9FE  72                 	db	114	;'r'
  4634  00F9FF  72                 	db	114	;'r'
  4635  00FA00  65                 	db	101	;'e'
  4636  00FA01  64                 	db	100	;'d'
  4637  00FA02  0A                 	db	10
  4638  00FA03  0D                 	db	13
  4639  00FA04  00                 	db	0
  4640  00FA05                     STR_99:
  4641  00FA05  4C                 	db	76	;'L'
  4642  00FA06  6F                 	db	111	;'o'
  4643  00FA07  61                 	db	97	;'a'
  4644  00FA08  64                 	db	100	;'d'
  4645  00FA09  20                 	db	32
  4646  00FA0A  68                 	db	104	;'h'
  4647  00FA0B  61                 	db	97	;'a'
  4648  00FA0C  73                 	db	115	;'s'
  4649  00FA0D  20                 	db	32
  4650  00FA0E  62                 	db	98	;'b'
  4651  00FA0F  65                 	db	101	;'e'
  4652  00FA10  65                 	db	101	;'e'
  4653  00FA11  6E                 	db	110	;'n'
  4654  00FA12  20                 	db	32
  4655  00FA13  65                 	db	101	;'e'
  4656  00FA14  6E                 	db	110	;'n'
  4657  00FA15  61                 	db	97	;'a'
  4658  00FA16  62                 	db	98	;'b'
  4659  00FA17  6C                 	db	108	;'l'
  4660  00FA18  65                 	db	101	;'e'
  4661  00FA19  64                 	db	100	;'d'
  4662  00FA1A  2C                 	db	44
  4663  00FA1B  20                 	db	32
  4664  00FA1C  64                 	db	100	;'d'
  4665  00FA1D  69                 	db	105	;'i'
  4666  00FA1E  6D                 	db	109	;'m'
  4667  00FA1F  6D                 	db	109	;'m'
  4668  00FA20  69                 	db	105	;'i'
  4669  00FA21  6E                 	db	110	;'n'
  4670  00FA22  67                 	db	103	;'g'
  4671  00FA23  20                 	db	32
  4672  00FA24  64                 	db	100	;'d'
  4673  00FA25  69                 	db	105	;'i'
  4674  00FA26  73                 	db	115	;'s'
  4675  00FA27  61                 	db	97	;'a'
  4676  00FA28  62                 	db	98	;'b'
  4677  00FA29  6C                 	db	108	;'l'
  4678  00FA2A  65                 	db	101	;'e'
  4679  00FA2B  64                 	db	100	;'d'
  4680  00FA2C  0A                 	db	10
  4681  00FA2D  0D                 	db	13
  4682  00FA2E  00                 	db	0
  4683  00FA2F                     STR_106:
  4684  00FA2F  4C                 	db	76	;'L'
  4685  00FA30  6F                 	db	111	;'o'
  4686  00FA31  61                 	db	97	;'a'
  4687  00FA32  64                 	db	100	;'d'
  4688  00FA33  20                 	db	32
  4689  00FA34  61                 	db	97	;'a'
  4690  00FA35  6E                 	db	110	;'n'
  4691  00FA36  64                 	db	100	;'d'
  4692  00FA37  20                 	db	32
  4693  00FA38  64                 	db	100	;'d'
  4694  00FA39  69                 	db	105	;'i'
  4695  00FA3A  6D                 	db	109	;'m'
  4696  00FA3B  6D                 	db	109	;'m'
  4697  00FA3C  69                 	db	105	;'i'
  4698  00FA3D  6E                 	db	110	;'n'
  4699  00FA3E  67                 	db	103	;'g'
  4700  00FA3F  20                 	db	32
  4701  00FA40  61                 	db	97	;'a'
  4702  00FA41  72                 	db	114	;'r'
  4703  00FA42  65                 	db	101	;'e'
  4704  00FA43  20                 	db	32
  4705  00FA44  63                 	db	99	;'c'
  4706  00FA45  75                 	db	117	;'u'
  4707  00FA46  72                 	db	114	;'r'
  4708  00FA47  72                 	db	114	;'r'
  4709  00FA48  65                 	db	101	;'e'
  4710  00FA49  6E                 	db	110	;'n'
  4711  00FA4A  74                 	db	116	;'t'
  4712  00FA4B  6C                 	db	108	;'l'
  4713  00FA4C  79                 	db	121	;'y'
  4714  00FA4D  20                 	db	32
  4715  00FA4E  64                 	db	100	;'d'
  4716  00FA4F  69                 	db	105	;'i'
  4717  00FA50  73                 	db	115	;'s'
  4718  00FA51  61                 	db	97	;'a'
  4719  00FA52  62                 	db	98	;'b'
  4720  00FA53  6C                 	db	108	;'l'
  4721  00FA54  65                 	db	101	;'e'
  4722  00FA55  64                 	db	100	;'d'
  4723  00FA56  0A                 	db	10
  4724  00FA57  0D                 	db	13
  4725  00FA58  00                 	db	0
  4726  00FA59                     STR_139:
  4727  00FA59  57                 	db	87	;'W'
  4728  00FA5A  69                 	db	105	;'i'
  4729  00FA5B  6E                 	db	110	;'n'
  4730  00FA5C  64                 	db	100	;'d'
  4731  00FA5D  6F                 	db	111	;'o'
  4732  00FA5E  77                 	db	119	;'w'
  4733  00FA5F  65                 	db	101	;'e'
  4734  00FA60  64                 	db	100	;'d'
  4735  00FA61  20                 	db	32
  4736  00FA62  57                 	db	87	;'W'
  4737  00FA63  61                 	db	97	;'a'
  4738  00FA64  74                 	db	116	;'t'
  4739  00FA65  63                 	db	99	;'c'
  4740  00FA66  68                 	db	104	;'h'
  4741  00FA67  20                 	db	32
  4742  00FA68  44                 	db	68	;'D'
  4743  00FA69  6F                 	db	111	;'o'
  4744  00FA6A  67                 	db	103	;'g'
  4745  00FA6B  20                 	db	32
  4746  00FA6C  54                 	db	84	;'T'
  4747  00FA6D  69                 	db	105	;'i'
  4748  00FA6E  6D                 	db	109	;'m'
  4749  00FA6F  65                 	db	101	;'e'
  4750  00FA70  72                 	db	114	;'r'
  4751  00FA71  20                 	db	32
  4752  00FA72  56                 	db	86	;'V'
  4753  00FA73  69                 	db	105	;'i'
  4754  00FA74  6F                 	db	111	;'o'
  4755  00FA75  6C                 	db	108	;'l'
  4756  00FA76  61                 	db	97	;'a'
  4757  00FA77  74                 	db	116	;'t'
  4758  00FA78  69                 	db	105	;'i'
  4759  00FA79  6F                 	db	111	;'o'
  4760  00FA7A  6E                 	db	110	;'n'
  4761  00FA7B  20                 	db	32
  4762  00FA7C  52                 	db	82	;'R'
  4763  00FA7D  65                 	db	101	;'e'
  4764  00FA7E  73                 	db	115	;'s'
  4765  00FA7F  65                 	db	101	;'e'
  4766  00FA80  74                 	db	116	;'t'
  4767  00FA81  00                 	db	0
  4768  00FA82                     STR_97:
  4769  00FA82  54                 	db	84	;'T'
  4770  00FA83  52                 	db	82	;'R'
  4771  00FA84  49                 	db	73	;'I'
  4772  00FA85  41                 	db	65	;'A'
  4773  00FA86  43                 	db	67	;'C'
  4774  00FA87  20                 	db	32
  4775  00FA88  6F                 	db	111	;'o'
  4776  00FA89  75                 	db	117	;'u'
  4777  00FA8A  74                 	db	116	;'t'
  4778  00FA8B  70                 	db	112	;'p'
  4779  00FA8C  75                 	db	117	;'u'
  4780  00FA8D  74                 	db	116	;'t'
  4781  00FA8E  20                 	db	32
  4782  00FA8F  64                 	db	100	;'d'
  4783  00FA90  69                 	db	105	;'i'
  4784  00FA91  6D                 	db	109	;'m'
  4785  00FA92  6D                 	db	109	;'m'
  4786  00FA93  69                 	db	105	;'i'
  4787  00FA94  6E                 	db	110	;'n'
  4788  00FA95  67                 	db	103	;'g'
  4789  00FA96  20                 	db	32
  4790  00FA97  68                 	db	104	;'h'
  4791  00FA98  61                 	db	97	;'a'
  4792  00FA99  73                 	db	115	;'s'
  4793  00FA9A  20                 	db	32
  4794  00FA9B  62                 	db	98	;'b'
  4795  00FA9C  65                 	db	101	;'e'
  4796  00FA9D  65                 	db	101	;'e'
  4797  00FA9E  6E                 	db	110	;'n'
  4798  00FA9F  20                 	db	32
  4799  00FAA0  64                 	db	100	;'d'
  4800  00FAA1  69                 	db	105	;'i'
  4801  00FAA2  73                 	db	115	;'s'
  4802  00FAA3  61                 	db	97	;'a'
  4803  00FAA4  62                 	db	98	;'b'
  4804  00FAA5  6C                 	db	108	;'l'
  4805  00FAA6  65                 	db	101	;'e'
  4806  00FAA7  64                 	db	100	;'d'
  4807  00FAA8  0A                 	db	10
  4808  00FAA9  0D                 	db	13
  4809  00FAAA  00                 	db	0
  4810  00FAAB                     STR_95:
  4811  00FAAB  54                 	db	84	;'T'
  4812  00FAAC  52                 	db	82	;'R'
  4813  00FAAD  49                 	db	73	;'I'
  4814  00FAAE  41                 	db	65	;'A'
  4815  00FAAF  43                 	db	67	;'C'
  4816  00FAB0  20                 	db	32
  4817  00FAB1  6F                 	db	111	;'o'
  4818  00FAB2  75                 	db	117	;'u'
  4819  00FAB3  74                 	db	116	;'t'
  4820  00FAB4  70                 	db	112	;'p'
  4821  00FAB5  75                 	db	117	;'u'
  4822  00FAB6  74                 	db	116	;'t'
  4823  00FAB7  20                 	db	32
  4824  00FAB8  64                 	db	100	;'d'
  4825  00FAB9  69                 	db	105	;'i'
  4826  00FABA  6D                 	db	109	;'m'
  4827  00FABB  6D                 	db	109	;'m'
  4828  00FABC  69                 	db	105	;'i'
  4829  00FABD  6E                 	db	110	;'n'
  4830  00FABE  67                 	db	103	;'g'
  4831  00FABF  20                 	db	32
  4832  00FAC0  68                 	db	104	;'h'
  4833  00FAC1  61                 	db	97	;'a'
  4834  00FAC2  73                 	db	115	;'s'
  4835  00FAC3  20                 	db	32
  4836  00FAC4  62                 	db	98	;'b'
  4837  00FAC5  65                 	db	101	;'e'
  4838  00FAC6  65                 	db	101	;'e'
  4839  00FAC7  6E                 	db	110	;'n'
  4840  00FAC8  20                 	db	32
  4841  00FAC9  65                 	db	101	;'e'
  4842  00FACA  6E                 	db	110	;'n'
  4843  00FACB  61                 	db	97	;'a'
  4844  00FACC  62                 	db	98	;'b'
  4845  00FACD  6C                 	db	108	;'l'
  4846  00FACE  65                 	db	101	;'e'
  4847  00FACF  64                 	db	100	;'d'
  4848  00FAD0  0A                 	db	10
  4849  00FAD1  0D                 	db	13
  4850  00FAD2  00                 	db	0
  4851  00FAD3                     STR_128:
  4852  00FAD3  4D                 	db	77	;'M'
  4853  00FAD4  65                 	db	101	;'e'
  4854  00FAD5  61                 	db	97	;'a'
  4855  00FAD6  73                 	db	115	;'s'
  4856  00FAD7  75                 	db	117	;'u'
  4857  00FAD8  72                 	db	114	;'r'
  4858  00FAD9  65                 	db	101	;'e'
  4859  00FADA  6D                 	db	109	;'m'
  4860  00FADB  65                 	db	101	;'e'
  4861  00FADC  6E                 	db	110	;'n'
  4862  00FADD  74                 	db	116	;'t'
  4863  00FADE  20                 	db	32
  4864  00FADF  72                 	db	114	;'r'
  4865  00FAE0  65                 	db	101	;'e'
  4866  00FAE1  73                 	db	115	;'s'
  4867  00FAE2  70                 	db	112	;'p'
  4868  00FAE3  6F                 	db	111	;'o'
  4869  00FAE4  6E                 	db	110	;'n'
  4870  00FAE5  73                 	db	115	;'s'
  4871  00FAE6  65                 	db	101	;'e'
  4872  00FAE7  73                 	db	115	;'s'
  4873  00FAE8  20                 	db	32
  4874  00FAE9  61                 	db	97	;'a'
  4875  00FAEA  70                 	db	112	;'p'
  4876  00FAEB  70                 	db	112	;'p'
  4877  00FAEC  65                 	db	101	;'e'
  4878  00FAED  61                 	db	97	;'a'
  4879  00FAEE  72                 	db	114	;'r'
  4880  00FAEF  20                 	db	32
  4881  00FAF0  69                 	db	105	;'i'
  4882  00FAF1  6E                 	db	110	;'n'
  4883  00FAF2  20                 	db	32
  4884  00FAF3  63                 	db	99	;'c'
  4885  00FAF4  79                 	db	121	;'y'
  4886  00FAF5  61                 	db	97	;'a'
  4887  00FAF6  6E                 	db	110	;'n'
  4888  00FAF7  0A                 	db	10
  4889  00FAF8  0D                 	db	13
  4890  00FAF9  00                 	db	0
  4891  00FAFA                     STR_85:
  4892  00FAFA  41                 	db	65	;'A'
  4893  00FAFB  56                 	db	86	;'V'
  4894  00FAFC  53                 	db	83	;'S'
  4895  00FAFD  53                 	db	83	;'S'
  4896  00FAFE  20                 	db	32
  4897  00FAFF  6D                 	db	109	;'m'
  4898  00FB00  65                 	db	101	;'e'
  4899  00FB01  61                 	db	97	;'a'
  4900  00FB02  73                 	db	115	;'s'
  4901  00FB03  75                 	db	117	;'u'
  4902  00FB04  72                 	db	114	;'r'
  4903  00FB05  65                 	db	101	;'e'
  4904  00FB06  64                 	db	100	;'d'
  4905  00FB07  20                 	db	32
  4906  00FB08  61                 	db	97	;'a'
  4907  00FB09  73                 	db	115	;'s'
  4908  00FB0A  20                 	db	32
  4909  00FB0B  25                 	db	37
  4910  00FB0C  2E                 	db	46
  4911  00FB0D  33                 	db	51	;'3'
  4912  00FB0E  66                 	db	102	;'f'
  4913  00FB0F  20                 	db	32
  4914  00FB10  56                 	db	86	;'V'
  4915  00FB11  6F                 	db	111	;'o'
  4916  00FB12  6C                 	db	108	;'l'
  4917  00FB13  74                 	db	116	;'t'
  4918  00FB14  73                 	db	115	;'s'
  4919  00FB15  20                 	db	32
  4920  00FB16  62                 	db	98	;'b'
  4921  00FB17  79                 	db	121	;'y'
  4922  00FB18  20                 	db	32
  4923  00FB19  41                 	db	65	;'A'
  4924  00FB1A  44                 	db	68	;'D'
  4925  00FB1B  43                 	db	67	;'C'
  4926  00FB1C  0A                 	db	10
  4927  00FB1D  0D                 	db	13
  4928  00FB1E  00                 	db	0
  4929  00FB1F                     STR_77:
  4930  00FB1F  2B                 	db	43
  4931  00FB20  33                 	db	51	;'3'
  4932  00FB21  2E                 	db	46
  4933  00FB22  33                 	db	51	;'3'
  4934  00FB23  56                 	db	86	;'V'
  4935  00FB24  20                 	db	32
  4936  00FB25  72                 	db	114	;'r'
  4937  00FB26  61                 	db	97	;'a'
  4938  00FB27  69                 	db	105	;'i'
  4939  00FB28  6C                 	db	108	;'l'
  4940  00FB29  20                 	db	32
  4941  00FB2A  6D                 	db	109	;'m'
  4942  00FB2B  65                 	db	101	;'e'
  4943  00FB2C  61                 	db	97	;'a'
  4944  00FB2D  73                 	db	115	;'s'
  4945  00FB2E  75                 	db	117	;'u'
  4946  00FB2F  72                 	db	114	;'r'
  4947  00FB30  65                 	db	101	;'e'
  4948  00FB31  64                 	db	100	;'d'
  4949  00FB32  20                 	db	32
  4950  00FB33  61                 	db	97	;'a'
  4951  00FB34  73                 	db	115	;'s'
  4952  00FB35  20                 	db	32
  4953  00FB36  2B                 	db	43
  4954  00FB37  25                 	db	37
  4955  00FB38  2E                 	db	46
  4956  00FB39  33                 	db	51	;'3'
  4957  00FB3A  66                 	db	102	;'f'
  4958  00FB3B  20                 	db	32
  4959  00FB3C  56                 	db	86	;'V'
  4960  00FB3D  6F                 	db	111	;'o'
  4961  00FB3E  6C                 	db	108	;'l'
  4962  00FB3F  74                 	db	116	;'t'
  4963  00FB40  73                 	db	115	;'s'
  4964  00FB41  0A                 	db	10
  4965  00FB42  0D                 	db	13
  4966  00FB43  00                 	db	0
  4967  00FB44                     STR_113:
  4968  00FB44  44                 	db	68	;'D'
  4969  00FB45  69                 	db	105	;'i'
  4970  00FB46  6D                 	db	109	;'m'
  4971  00FB47  6D                 	db	109	;'m'
  4972  00FB48  69                 	db	105	;'i'
  4973  00FB49  6E                 	db	110	;'n'
  4974  00FB4A  67                 	db	103	;'g'
  4975  00FB4B  20                 	db	32
  4976  00FB4C  68                 	db	104	;'h'
  4977  00FB4D  61                 	db	97	;'a'
  4978  00FB4E  73                 	db	115	;'s'
  4979  00FB4F  20                 	db	32
  4980  00FB50  62                 	db	98	;'b'
  4981  00FB51  65                 	db	101	;'e'
  4982  00FB52  65                 	db	101	;'e'
  4983  00FB53  6E                 	db	110	;'n'
  4984  00FB54  20                 	db	32
  4985  00FB55  73                 	db	115	;'s'
  4986  00FB56  65                 	db	101	;'e'
  4987  00FB57  74                 	db	116	;'t'
  4988  00FB58  20                 	db	32
  4989  00FB59  74                 	db	116	;'t'
  4990  00FB5A  6F                 	db	111	;'o'
  4991  00FB5B  20                 	db	32
  4992  00FB5C  25                 	db	37
  4993  00FB5D  64                 	db	100	;'d'
  4994  00FB5E  20                 	db	32
  4995  00FB5F  70                 	db	112	;'p'
  4996  00FB60  65                 	db	101	;'e'
  4997  00FB61  72                 	db	114	;'r'
  4998  00FB62  63                 	db	99	;'c'
  4999  00FB63  65                 	db	101	;'e'
  5000  00FB64  6E                 	db	110	;'n'
  5001  00FB65  74                 	db	116	;'t'
  5002  00FB66  0A                 	db	10
  5003  00FB67  0D                 	db	13
  5004  00FB68  00                 	db	0
  5005  00FB69                     STR_81:
  5006  00FB69  44                 	db	68	;'D'
  5007  00FB6A  69                 	db	105	;'i'
  5008  00FB6B  65                 	db	101	;'e'
  5009  00FB6C  20                 	db	32
  5010  00FB6D  54                 	db	84	;'T'
  5011  00FB6E  65                 	db	101	;'e'
  5012  00FB6F  6D                 	db	109	;'m'
  5013  00FB70  70                 	db	112	;'p'
  5014  00FB71  65                 	db	101	;'e'
  5015  00FB72  72                 	db	114	;'r'
  5016  00FB73  61                 	db	97	;'a'
  5017  00FB74  74                 	db	116	;'t'
  5018  00FB75  75                 	db	117	;'u'
  5019  00FB76  72                 	db	114	;'r'
  5020  00FB77  65                 	db	101	;'e'
  5021  00FB78  20                 	db	32
  5022  00FB79  6D                 	db	109	;'m'
  5023  00FB7A  65                 	db	101	;'e'
  5024  00FB7B  61                 	db	97	;'a'
  5025  00FB7C  73                 	db	115	;'s'
  5026  00FB7D  75                 	db	117	;'u'
  5027  00FB7E  72                 	db	114	;'r'
  5028  00FB7F  65                 	db	101	;'e'
  5029  00FB80  64                 	db	100	;'d'
  5030  00FB81  20                 	db	32
  5031  00FB82  61                 	db	97	;'a'
  5032  00FB83  73                 	db	115	;'s'
  5033  00FB84  20                 	db	32
  5034  00FB85  25                 	db	37
  5035  00FB86  2E                 	db	46
  5036  00FB87  33                 	db	51	;'3'
  5037  00FB88  66                 	db	102	;'f'
  5038  00FB89  43                 	db	67	;'C'
  5039  00FB8A  0A                 	db	10
  5040  00FB8B  0D                 	db	13
  5041  00FB8C  00                 	db	0
  5042  00FB8D                     STR_79:
  5043  00FB8D  2B                 	db	43
  5044  00FB8E  31                 	db	49	;'1'
  5045  00FB8F  32                 	db	50	;'2'
  5046  00FB90  56                 	db	86	;'V'
  5047  00FB91  20                 	db	32
  5048  00FB92  72                 	db	114	;'r'
  5049  00FB93  61                 	db	97	;'a'
  5050  00FB94  69                 	db	105	;'i'
  5051  00FB95  6C                 	db	108	;'l'
  5052  00FB96  20                 	db	32
  5053  00FB97  6D                 	db	109	;'m'
  5054  00FB98  65                 	db	101	;'e'
  5055  00FB99  61                 	db	97	;'a'
  5056  00FB9A  73                 	db	115	;'s'
  5057  00FB9B  75                 	db	117	;'u'
  5058  00FB9C  72                 	db	114	;'r'
  5059  00FB9D  65                 	db	101	;'e'
  5060  00FB9E  64                 	db	100	;'d'
  5061  00FB9F  20                 	db	32
  5062  00FBA0  61                 	db	97	;'a'
  5063  00FBA1  73                 	db	115	;'s'
  5064  00FBA2  20                 	db	32
  5065  00FBA3  2B                 	db	43
  5066  00FBA4  25                 	db	37
  5067  00FBA5  2E                 	db	46
  5068  00FBA6  33                 	db	51	;'3'
  5069  00FBA7  66                 	db	102	;'f'
  5070  00FBA8  20                 	db	32
  5071  00FBA9  56                 	db	86	;'V'
  5072  00FBAA  6F                 	db	111	;'o'
  5073  00FBAB  6C                 	db	108	;'l'
  5074  00FBAC  74                 	db	116	;'t'
  5075  00FBAD  73                 	db	115	;'s'
  5076  00FBAE  0A                 	db	10
  5077  00FBAF  0D                 	db	13
  5078  00FBB0  00                 	db	0
  5079  00FBB1                     STR_89:
  5080  00FBB1  52                 	db	82	;'R'
  5081  00FBB2  4D                 	db	77	;'M'
  5082  00FBB3  53                 	db	83	;'S'
  5083  00FBB4  20                 	db	32
  5084  00FBB5  4F                 	db	79	;'O'
  5085  00FBB6  75                 	db	117	;'u'
  5086  00FBB7  74                 	db	116	;'t'
  5087  00FBB8  70                 	db	112	;'p'
  5088  00FBB9  75                 	db	117	;'u'
  5089  00FBBA  74                 	db	116	;'t'
  5090  00FBBB  20                 	db	32
  5091  00FBBC  43                 	db	67	;'C'
  5092  00FBBD  75                 	db	117	;'u'
  5093  00FBBE  72                 	db	114	;'r'
  5094  00FBBF  72                 	db	114	;'r'
  5095  00FBC0  65                 	db	101	;'e'
  5096  00FBC1  6E                 	db	110	;'n'
  5097  00FBC2  74                 	db	116	;'t'
  5098  00FBC3  20                 	db	32
  5099  00FBC4  69                 	db	105	;'i'
  5100  00FBC5  73                 	db	115	;'s'
  5101  00FBC6  20                 	db	32
  5102  00FBC7  25                 	db	37
  5103  00FBC8  2E                 	db	46
  5104  00FBC9  33                 	db	51	;'3'
  5105  00FBCA  66                 	db	102	;'f'
  5106  00FBCB  20                 	db	32
  5107  00FBCC  41                 	db	65	;'A'
  5108  00FBCD  72                 	db	114	;'r'
  5109  00FBCE  6D                 	db	109	;'m'
  5110  00FBCF  73                 	db	115	;'s'
  5111  00FBD0  0A                 	db	10
  5112  00FBD1  0D                 	db	13
  5113  00FBD2  00                 	db	0
  5114  00FBD3                     STR_91:
  5115  00FBD3  52                 	db	82	;'R'
  5116  00FBD4  4D                 	db	77	;'M'
  5117  00FBD5  53                 	db	83	;'S'
  5118  00FBD6  20                 	db	32
  5119  00FBD7  4F                 	db	79	;'O'
  5120  00FBD8  75                 	db	117	;'u'
  5121  00FBD9  74                 	db	116	;'t'
  5122  00FBDA  70                 	db	112	;'p'
  5123  00FBDB  75                 	db	117	;'u'
  5124  00FBDC  74                 	db	116	;'t'
  5125  00FBDD  20                 	db	32
  5126  00FBDE  56                 	db	86	;'V'
  5127  00FBDF  6F                 	db	111	;'o'
  5128  00FBE0  6C                 	db	108	;'l'
  5129  00FBE1  74                 	db	116	;'t'
  5130  00FBE2  61                 	db	97	;'a'
  5131  00FBE3  67                 	db	103	;'g'
  5132  00FBE4  65                 	db	101	;'e'
  5133  00FBE5  20                 	db	32
  5134  00FBE6  69                 	db	105	;'i'
  5135  00FBE7  73                 	db	115	;'s'
  5136  00FBE8  20                 	db	32
  5137  00FBE9  25                 	db	37
  5138  00FBEA  2E                 	db	46
  5139  00FBEB  33                 	db	51	;'3'
  5140  00FBEC  66                 	db	102	;'f'
  5141  00FBED  20                 	db	32
  5142  00FBEE  56                 	db	86	;'V'
  5143  00FBEF  72                 	db	114	;'r'
  5144  00FBF0  6D                 	db	109	;'m'
  5145  00FBF1  73                 	db	115	;'s'
  5146  00FBF2  0A                 	db	10
  5147  00FBF3  0D                 	db	13
  5148  00FBF4  00                 	db	0
  5149  00FBF5                     STR_87:
  5150  00FBF5  4D                 	db	77	;'M'
  5151  00FBF6  65                 	db	101	;'e'
  5152  00FBF7  61                 	db	97	;'a'
  5153  00FBF8  73                 	db	115	;'s'
  5154  00FBF9  75                 	db	117	;'u'
  5155  00FBFA  72                 	db	114	;'r'
  5156  00FBFB  65                 	db	101	;'e'
  5157  00FBFC  64                 	db	100	;'d'
  5158  00FBFD  20                 	db	32
  5159  00FBFE  43                 	db	67	;'C'
  5160  00FBFF  75                 	db	117	;'u'
  5161  00FC00  72                 	db	114	;'r'
  5162  00FC01  72                 	db	114	;'r'
  5163  00FC02  65                 	db	101	;'e'
  5164  00FC03  6E                 	db	110	;'n'
  5165  00FC04  74                 	db	116	;'t'
  5166  00FC05  20                 	db	32
  5167  00FC06  69                 	db	105	;'i'
  5168  00FC07  73                 	db	115	;'s'
  5169  00FC08  20                 	db	32
  5170  00FC09  25                 	db	37
  5171  00FC0A  2E                 	db	46
  5172  00FC0B  33                 	db	51	;'3'
  5173  00FC0C  66                 	db	102	;'f'
  5174  00FC0D  20                 	db	32
  5175  00FC0E  41                 	db	65	;'A'
  5176  00FC0F  6D                 	db	109	;'m'
  5177  00FC10  70                 	db	112	;'p'
  5178  00FC11  73                 	db	115	;'s'
  5179  00FC12  0A                 	db	10
  5180  00FC13  0D                 	db	13
  5181  00FC14  00                 	db	0
  5182  00FC15                     STR_104:
  5183  00FC15  44                 	db	68	;'D'
  5184  00FC16  69                 	db	105	;'i'
  5185  00FC17  6D                 	db	109	;'m'
  5186  00FC18  6D                 	db	109	;'m'
  5187  00FC19  69                 	db	105	;'i'
  5188  00FC1A  6E                 	db	110	;'n'
  5189  00FC1B  67                 	db	103	;'g'
  5190  00FC1C  20                 	db	32
  5191  00FC1D  69                 	db	105	;'i'
  5192  00FC1E  73                 	db	115	;'s'
  5193  00FC1F  20                 	db	32
  5194  00FC20  63                 	db	99	;'c'
  5195  00FC21  75                 	db	117	;'u'
  5196  00FC22  72                 	db	114	;'r'
  5197  00FC23  72                 	db	114	;'r'
  5198  00FC24  65                 	db	101	;'e'
  5199  00FC25  6E                 	db	110	;'n'
  5200  00FC26  74                 	db	116	;'t'
  5201  00FC27  6C                 	db	108	;'l'
  5202  00FC28  79                 	db	121	;'y'
  5203  00FC29  20                 	db	32
  5204  00FC2A  65                 	db	101	;'e'
  5205  00FC2B  6E                 	db	110	;'n'
  5206  00FC2C  61                 	db	97	;'a'
  5207  00FC2D  62                 	db	98	;'b'
  5208  00FC2E  6C                 	db	108	;'l'
  5209  00FC2F  65                 	db	101	;'e'
  5210  00FC30  64                 	db	100	;'d'
  5211  00FC31  0A                 	db	10
  5212  00FC32  0D                 	db	13
  5213  00FC33  00                 	db	0
  5214  00FC34                     STR_130:
  5215  00FC34  55                 	db	85	;'U'
  5216  00FC35  73                 	db	115	;'s'
  5217  00FC36  65                 	db	101	;'e'
  5218  00FC37  72                 	db	114	;'r'
  5219  00FC38  20                 	db	32
  5220  00FC39  69                 	db	105	;'i'
  5221  00FC3A  6E                 	db	110	;'n'
  5222  00FC3B  70                 	db	112	;'p'
  5223  00FC3C  75                 	db	117	;'u'
  5224  00FC3D  74                 	db	116	;'t'
  5225  00FC3E  20                 	db	32
  5226  00FC3F  61                 	db	97	;'a'
  5227  00FC40  70                 	db	112	;'p'
  5228  00FC41  70                 	db	112	;'p'
  5229  00FC42  65                 	db	101	;'e'
  5230  00FC43  61                 	db	97	;'a'
  5231  00FC44  72                 	db	114	;'r'
  5232  00FC45  73                 	db	115	;'s'
  5233  00FC46  20                 	db	32
  5234  00FC47  69                 	db	105	;'i'
  5235  00FC48  6E                 	db	110	;'n'
  5236  00FC49  20                 	db	32
  5237  00FC4A  77                 	db	119	;'w'
  5238  00FC4B  68                 	db	104	;'h'
  5239  00FC4C  69                 	db	105	;'i'
  5240  00FC4D  74                 	db	116	;'t'
  5241  00FC4E  65                 	db	101	;'e'
  5242  00FC4F  0A                 	db	10
  5243  00FC50  0D                 	db	13
  5244  00FC51  00                 	db	0
  5245  00FC52                     STR_102:
  5246  00FC52  4C                 	db	76	;'L'
  5247  00FC53  6F                 	db	111	;'o'
  5248  00FC54  61                 	db	97	;'a'
  5249  00FC55  64                 	db	100	;'d'
  5250  00FC56  20                 	db	32
  5251  00FC57  69                 	db	105	;'i'
  5252  00FC58  73                 	db	115	;'s'
  5253  00FC59  20                 	db	32
  5254  00FC5A  63                 	db	99	;'c'
  5255  00FC5B  75                 	db	117	;'u'
  5256  00FC5C  72                 	db	114	;'r'
  5257  00FC5D  72                 	db	114	;'r'
  5258  00FC5E  65                 	db	101	;'e'
  5259  00FC5F  6E                 	db	110	;'n'
  5260  00FC60  74                 	db	116	;'t'
  5261  00FC61  6C                 	db	108	;'l'
  5262  00FC62  79                 	db	121	;'y'
  5263  00FC63  20                 	db	32
  5264  00FC64  64                 	db	100	;'d'
  5265  00FC65  69                 	db	105	;'i'
  5266  00FC66  73                 	db	115	;'s'
  5267  00FC67  61                 	db	97	;'a'
  5268  00FC68  62                 	db	98	;'b'
  5269  00FC69  6C                 	db	108	;'l'
  5270  00FC6A  65                 	db	101	;'e'
  5271  00FC6B  64                 	db	100	;'d'
  5272  00FC6C  0A                 	db	10
  5273  00FC6D  0D                 	db	13
  5274  00FC6E  00                 	db	0
  5275  00FC6F                     STR_101:
  5276  00FC6F  4C                 	db	76	;'L'
  5277  00FC70  6F                 	db	111	;'o'
  5278  00FC71  61                 	db	97	;'a'
  5279  00FC72  64                 	db	100	;'d'
  5280  00FC73  20                 	db	32
  5281  00FC74  69                 	db	105	;'i'
  5282  00FC75  73                 	db	115	;'s'
  5283  00FC76  20                 	db	32
  5284  00FC77  63                 	db	99	;'c'
  5285  00FC78  75                 	db	117	;'u'
  5286  00FC79  72                 	db	114	;'r'
  5287  00FC7A  72                 	db	114	;'r'
  5288  00FC7B  65                 	db	101	;'e'
  5289  00FC7C  6E                 	db	110	;'n'
  5290  00FC7D  74                 	db	116	;'t'
  5291  00FC7E  6C                 	db	108	;'l'
  5292  00FC7F  79                 	db	121	;'y'
  5293  00FC80  20                 	db	32
  5294  00FC81  65                 	db	101	;'e'
  5295  00FC82  6E                 	db	110	;'n'
  5296  00FC83  61                 	db	97	;'a'
  5297  00FC84  62                 	db	98	;'b'
  5298  00FC85  6C                 	db	108	;'l'
  5299  00FC86  65                 	db	101	;'e'
  5300  00FC87  64                 	db	100	;'d'
  5301  00FC88  0A                 	db	10
  5302  00FC89  0D                 	db	13
  5303  00FC8A  00                 	db	0
  5304  00FC8B                     STR_140:
  5305  00FC8B  52                 	db	82	;'R'
  5306  00FC8C  45                 	db	69	;'E'
  5307  00FC8D  53                 	db	83	;'S'
  5308  00FC8E  45                 	db	69	;'E'
  5309  00FC8F  54                 	db	84	;'T'
  5310  00FC90  20                 	db	32
  5311  00FC91  49                 	db	73	;'I'
  5312  00FC92  6E                 	db	110	;'n'
  5313  00FC93  73                 	db	115	;'s'
  5314  00FC94  74                 	db	116	;'t'
  5315  00FC95  72                 	db	114	;'r'
  5316  00FC96  75                 	db	117	;'u'
  5317  00FC97  63                 	db	99	;'c'
  5318  00FC98  74                 	db	116	;'t'
  5319  00FC99  69                 	db	105	;'i'
  5320  00FC9A  6F                 	db	111	;'o'
  5321  00FC9B  6E                 	db	110	;'n'
  5322  00FC9C  20                 	db	32
  5323  00FC9D  45                 	db	69	;'E'
  5324  00FC9E  78                 	db	120	;'x'
  5325  00FC9F  65                 	db	101	;'e'
  5326  00FCA0  63                 	db	99	;'c'
  5327  00FCA1  75                 	db	117	;'u'
  5328  00FCA2  74                 	db	116	;'t'
  5329  00FCA3  65                 	db	101	;'e'
  5330  00FCA4  64                 	db	100	;'d'
  5331  00FCA5  00                 	db	0
  5332  00FCA6                     STR_86:
  5333  00FCA6  4D                 	db	77	;'M'
  5334  00FCA7  65                 	db	101	;'e'
  5335  00FCA8  61                 	db	97	;'a'
  5336  00FCA9  73                 	db	115	;'s'
  5337  00FCAA  75                 	db	117	;'u'
  5338  00FCAB  72                 	db	114	;'r'
  5339  00FCAC  65                 	db	101	;'e'
  5340  00FCAD  20                 	db	32
  5341  00FCAE  44                 	db	68	;'D'
  5342  00FCAF  65                 	db	101	;'e'
  5343  00FCB0  74                 	db	116	;'t'
  5344  00FCB1  65                 	db	101	;'e'
  5345  00FCB2  63                 	db	99	;'c'
  5346  00FCB3  74                 	db	116	;'t'
  5347  00FCB4  65                 	db	101	;'e'
  5348  00FCB5  64                 	db	100	;'d'
  5349  00FCB6  20                 	db	32
  5350  00FCB7  43                 	db	67	;'C'
  5351  00FCB8  75                 	db	117	;'u'
  5352  00FCB9  72                 	db	114	;'r'
  5353  00FCBA  72                 	db	114	;'r'
  5354  00FCBB  65                 	db	101	;'e'
  5355  00FCBC  6E                 	db	110	;'n'
  5356  00FCBD  74                 	db	116	;'t'
  5357  00FCBE  3F                 	db	63	;'?'
  5358  00FCBF  00                 	db	0
  5359  00FCC0                     STR_108:
  5360  00FCC0  4C                 	db	76	;'L'
  5361  00FCC1  6F                 	db	111	;'o'
  5362  00FCC2  61                 	db	97	;'a'
  5363  00FCC3  64                 	db	100	;'d'
  5364  00FCC4  20                 	db	32
  5365  00FCC5  68                 	db	104	;'h'
  5366  00FCC6  61                 	db	97	;'a'
  5367  00FCC7  73                 	db	115	;'s'
  5368  00FCC8  20                 	db	32
  5369  00FCC9  62                 	db	98	;'b'
  5370  00FCCA  65                 	db	101	;'e'
  5371  00FCCB  65                 	db	101	;'e'
  5372  00FCCC  6E                 	db	110	;'n'
  5373  00FCCD  20                 	db	32
  5374  00FCCE  64                 	db	100	;'d'
  5375  00FCCF  69                 	db	105	;'i'
  5376  00FCD0  73                 	db	115	;'s'
  5377  00FCD1  61                 	db	97	;'a'
  5378  00FCD2  62                 	db	98	;'b'
  5379  00FCD3  6C                 	db	108	;'l'
  5380  00FCD4  65                 	db	101	;'e'
  5381  00FCD5  64                 	db	100	;'d'
  5382  00FCD6  0A                 	db	10
  5383  00FCD7  0D                 	db	13
  5384  00FCD8  00                 	db	0
  5385  00FCD9                     STR_109:
  5386  00FCD9  53                 	db	83	;'S'
  5387  00FCDA  65                 	db	101	;'e'
  5388  00FCDB  74                 	db	116	;'t'
  5389  00FCDC  20                 	db	32
  5390  00FCDD  44                 	db	68	;'D'
  5391  00FCDE  69                 	db	105	;'i'
  5392  00FCDF  6D                 	db	109	;'m'
  5393  00FCE0  6D                 	db	109	;'m'
  5394  00FCE1  69                 	db	105	;'i'
  5395  00FCE2  6E                 	db	110	;'n'
  5396  00FCE3  67                 	db	103	;'g'
  5397  00FCE4  20                 	db	32
  5398  00FCE5  50                 	db	80	;'P'
  5399  00FCE6  65                 	db	101	;'e'
  5400  00FCE7  72                 	db	114	;'r'
  5401  00FCE8  63                 	db	99	;'c'
  5402  00FCE9  65                 	db	101	;'e'
  5403  00FCEA  6E                 	db	110	;'n'
  5404  00FCEB  74                 	db	116	;'t'
  5405  00FCEC  61                 	db	97	;'a'
  5406  00FCED  67                 	db	103	;'g'
  5407  00FCEE  65                 	db	101	;'e'
  5408  00FCEF  3A                 	db	58	;':'
  5409  00FCF0  20                 	db	32
  5410  00FCF1  00                 	db	0
  5411  00FCF2                     STR_70:
  5412  00FCF2  4E                 	db	78	;'N'
  5413  00FCF3  6F                 	db	111	;'o'
  5414  00FCF4  20                 	db	32
  5415  00FCF5  41                 	db	65	;'A'
  5416  00FCF6  44                 	db	68	;'D'
  5417  00FCF7  43                 	db	67	;'C'
  5418  00FCF8  20                 	db	32
  5419  00FCF9  45                 	db	69	;'E'
  5420  00FCFA  72                 	db	114	;'r'
  5421  00FCFB  72                 	db	114	;'r'
  5422  00FCFC  6F                 	db	111	;'o'
  5423  00FCFD  72                 	db	114	;'r'
  5424  00FCFE  20                 	db	32
  5425  00FCFF  64                 	db	100	;'d'
  5426  00FD00  65                 	db	101	;'e'
  5427  00FD01  74                 	db	116	;'t'
  5428  00FD02  65                 	db	101	;'e'
  5429  00FD03  63                 	db	99	;'c'
  5430  00FD04  74                 	db	116	;'t'
  5431  00FD05  65                 	db	101	;'e'
  5432  00FD06  64                 	db	100	;'d'
  5433  00FD07  0A                 	db	10
  5434  00FD08  0D                 	db	13
  5435  00FD09  00                 	db	0
  5436  00FD0A                     STR_142:
  5437  00FD0A  53                 	db	83	;'S'
  5438  00FD0B  74                 	db	116	;'t'
  5439  00FD0C  61                 	db	97	;'a'
  5440  00FD0D  63                 	db	99	;'c'
  5441  00FD0E  6B                 	db	107	;'k'
  5442  00FD0F  20                 	db	32
  5443  00FD10  55                 	db	85	;'U'
  5444  00FD11  6E                 	db	110	;'n'
  5445  00FD12  64                 	db	100	;'d'
  5446  00FD13  65                 	db	101	;'e'
  5447  00FD14  72                 	db	114	;'r'
  5448  00FD15  66                 	db	102	;'f'
  5449  00FD16  6C                 	db	108	;'l'
  5450  00FD17  6F                 	db	111	;'o'
  5451  00FD18  77                 	db	119	;'w'
  5452  00FD19  20                 	db	32
  5453  00FD1A  52                 	db	82	;'R'
  5454  00FD1B  65                 	db	101	;'e'
  5455  00FD1C  73                 	db	115	;'s'
  5456  00FD1D  65                 	db	101	;'e'
  5457  00FD1E  74                 	db	116	;'t'
  5458  00FD1F  00                 	db	0
  5459  00FD20                     STR_67:
  5460  00FD20  49                 	db	73	;'I'
  5461  00FD21  6E                 	db	110	;'n'
  5462  00FD22  74                 	db	116	;'t'
  5463  00FD23  65                 	db	101	;'e'
  5464  00FD24  72                 	db	114	;'r'
  5465  00FD25  6E                 	db	110	;'n'
  5466  00FD26  61                 	db	97	;'a'
  5467  00FD27  6C                 	db	108	;'l'
  5468  00FD28  20                 	db	32
  5469  00FD29  46                 	db	70	;'F'
  5470  00FD2A  56                 	db	86	;'V'
  5471  00FD2B  52                 	db	82	;'R'
  5472  00FD2C  20                 	db	32
  5473  00FD2D  42                 	db	66	;'B'
  5474  00FD2E  75                 	db	117	;'u'
  5475  00FD2F  66                 	db	102	;'f'
  5476  00FD30  66                 	db	102	;'f'
  5477  00FD31  65                 	db	101	;'e'
  5478  00FD32  72                 	db	114	;'r'
  5479  00FD33  20                 	db	32
  5480  00FD34  31                 	db	49	;'1'
  5481  00FD35  00                 	db	0
  5482  00FD36                     STR_141:
  5483  00FD36  53                 	db	83	;'S'
  5484  00FD37  74                 	db	116	;'t'
  5485  00FD38  61                 	db	97	;'a'
  5486  00FD39  63                 	db	99	;'c'
  5487  00FD3A  6B                 	db	107	;'k'
  5488  00FD3B  20                 	db	32
  5489  00FD3C  4F                 	db	79	;'O'
  5490  00FD3D  76                 	db	118	;'v'
  5491  00FD3E  65                 	db	101	;'e'
  5492  00FD3F  72                 	db	114	;'r'
  5493  00FD40  66                 	db	102	;'f'
  5494  00FD41  6C                 	db	108	;'l'
  5495  00FD42  6F                 	db	111	;'o'
  5496  00FD43  77                 	db	119	;'w'
  5497  00FD44  20                 	db	32
  5498  00FD45  52                 	db	82	;'R'
  5499  00FD46  65                 	db	101	;'e'
  5500  00FD47  73                 	db	115	;'s'
  5501  00FD48  65                 	db	101	;'e'
  5502  00FD49  74                 	db	116	;'t'
  5503  00FD4A  00                 	db	0
  5504  00FD4B                     STR_72:
  5505  00FD4B  43                 	db	67	;'C'
  5506  00FD4C  6C                 	db	108	;'l'
  5507  00FD4D  65                 	db	101	;'e'
  5508  00FD4E  61                 	db	97	;'a'
  5509  00FD4F  72                 	db	114	;'r'
  5510  00FD50  69                 	db	105	;'i'
  5511  00FD51  6E                 	db	110	;'n'
  5512  00FD52  67                 	db	103	;'g'
  5513  00FD53  20                 	db	32
  5514  00FD54  41                 	db	65	;'A'
  5515  00FD55  44                 	db	68	;'D'
  5516  00FD56  43                 	db	67	;'C'
  5517  00FD57  20                 	db	32
  5518  00FD58  45                 	db	69	;'E'
  5519  00FD59  72                 	db	114	;'r'
  5520  00FD5A  72                 	db	114	;'r'
  5521  00FD5B  6F                 	db	111	;'o'
  5522  00FD5C  72                 	db	114	;'r'
  5523  00FD5D  0A                 	db	10
  5524  00FD5E  0D                 	db	13
  5525  00FD5F  00                 	db	0
  5526  00FD60                     STR_90:
  5527  00FD60  4D                 	db	77	;'M'
  5528  00FD61  65                 	db	101	;'e'
  5529  00FD62  61                 	db	97	;'a'
  5530  00FD63  73                 	db	115	;'s'
  5531  00FD64  75                 	db	117	;'u'
  5532  00FD65  72                 	db	114	;'r'
  5533  00FD66  65                 	db	101	;'e'
  5534  00FD67  20                 	db	32
  5535  00FD68  52                 	db	82	;'R'
  5536  00FD69  4D                 	db	77	;'M'
  5537  00FD6A  53                 	db	83	;'S'
  5538  00FD6B  20                 	db	32
  5539  00FD6C  56                 	db	86	;'V'
  5540  00FD6D  6F                 	db	111	;'o'
  5541  00FD6E  6C                 	db	108	;'l'
  5542  00FD6F  74                 	db	116	;'t'
  5543  00FD70  61                 	db	97	;'a'
  5544  00FD71  67                 	db	103	;'g'
  5545  00FD72  65                 	db	101	;'e'
  5546  00FD73  3F                 	db	63	;'?'
  5547  00FD74  00                 	db	0
  5548  00FD75                     STR_88:
  5549  00FD75  4D                 	db	77	;'M'
  5550  00FD76  65                 	db	101	;'e'
  5551  00FD77  61                 	db	97	;'a'
  5552  00FD78  73                 	db	115	;'s'
  5553  00FD79  75                 	db	117	;'u'
  5554  00FD7A  72                 	db	114	;'r'
  5555  00FD7B  65                 	db	101	;'e'
  5556  00FD7C  20                 	db	32
  5557  00FD7D  52                 	db	82	;'R'
  5558  00FD7E  4D                 	db	77	;'M'
  5559  00FD7F  53                 	db	83	;'S'
  5560  00FD80  20                 	db	32
  5561  00FD81  43                 	db	67	;'C'
  5562  00FD82  75                 	db	117	;'u'
  5563  00FD83  72                 	db	114	;'r'
  5564  00FD84  72                 	db	114	;'r'
  5565  00FD85  65                 	db	101	;'e'
  5566  00FD86  6E                 	db	110	;'n'
  5567  00FD87  74                 	db	116	;'t'
  5568  00FD88  3F                 	db	63	;'?'
  5569  00FD89  00                 	db	0
  5570  00FD8A                     STR_137:
  5571  00FD8A  4D                 	db	77	;'M'
  5572  00FD8B  61                 	db	97	;'a'
  5573  00FD8C  73                 	db	115	;'s'
  5574  00FD8D  74                 	db	116	;'t'
  5575  00FD8E  65                 	db	101	;'e'
  5576  00FD8F  72                 	db	114	;'r'
  5577  00FD90  20                 	db	32
  5578  00FD91  43                 	db	67	;'C'
  5579  00FD92  6C                 	db	108	;'l'
  5580  00FD93  65                 	db	101	;'e'
  5581  00FD94  61                 	db	97	;'a'
  5582  00FD95  72                 	db	114	;'r'
  5583  00FD96  20                 	db	32
  5584  00FD97  52                 	db	82	;'R'
  5585  00FD98  65                 	db	101	;'e'
  5586  00FD99  73                 	db	115	;'s'
  5587  00FD9A  65                 	db	101	;'e'
  5588  00FD9B  74                 	db	116	;'t'
  5589  00FD9C  00                 	db	0
  5590  00FD9D                     STR_80:
  5591  00FD9D  4D                 	db	77	;'M'
  5592  00FD9E  65                 	db	101	;'e'
  5593  00FD9F  61                 	db	97	;'a'
  5594  00FDA0  73                 	db	115	;'s'
  5595  00FDA1  75                 	db	117	;'u'
  5596  00FDA2  72                 	db	114	;'r'
  5597  00FDA3  65                 	db	101	;'e'
  5598  00FDA4  20                 	db	32
  5599  00FDA5  44                 	db	68	;'D'
  5600  00FDA6  69                 	db	105	;'i'
  5601  00FDA7  65                 	db	101	;'e'
  5602  00FDA8  20                 	db	32
  5603  00FDA9  54                 	db	84	;'T'
  5604  00FDAA  65                 	db	101	;'e'
  5605  00FDAB  6D                 	db	109	;'m'
  5606  00FDAC  70                 	db	112	;'p'
  5607  00FDAD  3F                 	db	63	;'?'
  5608  00FDAE  00                 	db	0
  5609  00FDAF                     STR_145:
  5610  00FDAF  30                 	db	48	;'0'
  5611  00FDB0  31                 	db	49	;'1'
  5612  00FDB1  32                 	db	50	;'2'
  5613  00FDB2  33                 	db	51	;'3'
  5614  00FDB3  34                 	db	52	;'4'
  5615  00FDB4  35                 	db	53	;'5'
  5616  00FDB5  36                 	db	54	;'6'
  5617  00FDB6  37                 	db	55	;'7'
  5618  00FDB7  38                 	db	56	;'8'
  5619  00FDB8  39                 	db	57	;'9'
  5620  00FDB9  41                 	db	65	;'A'
  5621  00FDBA  42                 	db	66	;'B'
  5622  00FDBB  43                 	db	67	;'C'
  5623  00FDBC  44                 	db	68	;'D'
  5624  00FDBD  45                 	db	69	;'E'
  5625  00FDBE  46                 	db	70	;'F'
  5626  00FDBF  00                 	db	0
  5627  00FDC0                     STR_51:
  5628  00FDC0  41                 	db	65	;'A'
  5629  00FDC1  43                 	db	67	;'C'
  5630  00FDC2  20                 	db	32
  5631  00FDC3  50                 	db	80	;'P'
  5632  00FDC4  6F                 	db	111	;'o'
  5633  00FDC5  77                 	db	119	;'w'
  5634  00FDC6  65                 	db	101	;'e'
  5635  00FDC7  72                 	db	114	;'r'
  5636  00FDC8  20                 	db	32
  5637  00FDC9  4D                 	db	77	;'M'
  5638  00FDCA  65                 	db	101	;'e'
  5639  00FDCB  74                 	db	116	;'t'
  5640  00FDCC  65                 	db	101	;'e'
  5641  00FDCD  72                 	db	114	;'r'
  5642  00FDCE  0A                 	db	10
  5643  00FDCF  0D                 	db	13
  5644  00FDD0  00                 	db	0
  5645  00FDD1                     STR_103:
  5646  00FDD1  44                 	db	68	;'D'
  5647  00FDD2  69                 	db	105	;'i'
  5648  00FDD3  6D                 	db	109	;'m'
  5649  00FDD4  6D                 	db	109	;'m'
  5650  00FDD5  69                 	db	105	;'i'
  5651  00FDD6  6E                 	db	110	;'n'
  5652  00FDD7  67                 	db	103	;'g'
  5653  00FDD8  20                 	db	32
  5654  00FDD9  45                 	db	69	;'E'
  5655  00FDDA  6E                 	db	110	;'n'
  5656  00FDDB  61                 	db	97	;'a'
  5657  00FDDC  62                 	db	98	;'b'
  5658  00FDDD  6C                 	db	108	;'l'
  5659  00FDDE  65                 	db	101	;'e'
  5660  00FDDF  64                 	db	100	;'d'
  5661  00FDE0  3F                 	db	63	;'?'
  5662  00FDE1  00                 	db	0
  5663  00FDE2                     STR_73:
  5664  00FDE2  56                 	db	86	;'V'
  5665  00FDE3  43                 	db	67	;'C'
  5666  00FDE4  43                 	db	67	;'C'
  5667  00FDE5  20                 	db	32
  5668  00FDE6  4F                 	db	79	;'O'
  5669  00FDE7  76                 	db	118	;'v'
  5670  00FDE8  65                 	db	101	;'e'
  5671  00FDE9  72                 	db	114	;'r'
  5672  00FDEA  76                 	db	118	;'v'
  5673  00FDEB  6F                 	db	111	;'o'
  5674  00FDEC  6C                 	db	108	;'l'
  5675  00FDED  74                 	db	116	;'t'
  5676  00FDEE  61                 	db	97	;'a'
  5677  00FDEF  67                 	db	103	;'g'
  5678  00FDF0  65                 	db	101	;'e'
  5679  00FDF1  3F                 	db	63	;'?'
  5680  00FDF2  00                 	db	0
  5681  00FDF3                     STR_120:
  5682  00FDF3  4D                 	db	77	;'M'
  5683  00FDF4  61                 	db	97	;'a'
  5684  00FDF5  78                 	db	120	;'x'
  5685  00FDF6  20                 	db	32
  5686  00FDF7  52                 	db	82	;'R'
  5687  00FDF8  4D                 	db	77	;'M'
  5688  00FDF9  53                 	db	83	;'S'
  5689  00FDFA  20                 	db	32
  5690  00FDFB  43                 	db	67	;'C'
  5691  00FDFC  75                 	db	117	;'u'
  5692  00FDFD  72                 	db	114	;'r'
  5693  00FDFE  72                 	db	114	;'r'
  5694  00FDFF  65                 	db	101	;'e'
  5695  00FE00  6E                 	db	110	;'n'
  5696  00FE01  74                 	db	116	;'t'
  5697  00FE02  3F                 	db	63	;'?'
  5698  00FE03  00                 	db	0
  5699  00FE04                     STR_134:
  5700  00FE04  55                 	db	85	;'U'
  5701  00FE05  6E                 	db	110	;'n'
  5702  00FE06  64                 	db	100	;'d'
  5703  00FE07  65                 	db	101	;'e'
  5704  00FE08  66                 	db	102	;'f'
  5705  00FE09  69                 	db	105	;'i'
  5706  00FE0A  6E                 	db	110	;'n'
  5707  00FE0B  65                 	db	101	;'e'
  5708  00FE0C  64                 	db	100	;'d'
  5709  00FE0D  20                 	db	32
  5710  00FE0E  52                 	db	82	;'R'
  5711  00FE0F  65                 	db	101	;'e'
  5712  00FE10  73                 	db	115	;'s'
  5713  00FE11  65                 	db	101	;'e'
  5714  00FE12  74                 	db	116	;'t'
  5715  00FE13  00                 	db	0
  5716  00FE14                     STR_136:
  5717  00FE14  42                 	db	66	;'B'
  5718  00FE15  72                 	db	114	;'r'
  5719  00FE16  6F                 	db	111	;'o'
  5720  00FE17  77                 	db	119	;'w'
  5721  00FE18  6E                 	db	110	;'n'
  5722  00FE19  20                 	db	32
  5723  00FE1A  4F                 	db	79	;'O'
  5724  00FE1B  75                 	db	117	;'u'
  5725  00FE1C  74                 	db	116	;'t'
  5726  00FE1D  20                 	db	32
  5727  00FE1E  52                 	db	82	;'R'
  5728  00FE1F  65                 	db	101	;'e'
  5729  00FE20  73                 	db	115	;'s'
  5730  00FE21  65                 	db	101	;'e'
  5731  00FE22  74                 	db	116	;'t'
  5732  00FE23  00                 	db	0
  5733  00FE24                     STR_76:
  5734  00FE24  4D                 	db	77	;'M'
  5735  00FE25  65                 	db	101	;'e'
  5736  00FE26  61                 	db	97	;'a'
  5737  00FE27  73                 	db	115	;'s'
  5738  00FE28  75                 	db	117	;'u'
  5739  00FE29  72                 	db	114	;'r'
  5740  00FE2A  65                 	db	101	;'e'
  5741  00FE2B  20                 	db	32
  5742  00FE2C  50                 	db	80	;'P'
  5743  00FE2D  4F                 	db	79	;'O'
  5744  00FE2E  53                 	db	83	;'S'
  5745  00FE2F  33                 	db	51	;'3'
  5746  00FE30  50                 	db	80	;'P'
  5747  00FE31  33                 	db	51	;'3'
  5748  00FE32  3F                 	db	63	;'?'
  5749  00FE33  00                 	db	0
  5750  00FE34                     STR_116:
  5751  00FE34  44                 	db	68	;'D'
  5752  00FE35  65                 	db	101	;'e'
  5753  00FE36  76                 	db	118	;'v'
  5754  00FE37  69                 	db	105	;'i'
  5755  00FE38  63                 	db	99	;'c'
  5756  00FE39  65                 	db	101	;'e'
  5757  00FE3A  20                 	db	32
  5758  00FE3B  4F                 	db	79	;'O'
  5759  00FE3C  6E                 	db	110	;'n'
  5760  00FE3D  20                 	db	32
  5761  00FE3E  54                 	db	84	;'T'
  5762  00FE3F  69                 	db	105	;'i'
  5763  00FE40  6D                 	db	109	;'m'
  5764  00FE41  65                 	db	101	;'e'
  5765  00FE42  3F                 	db	63	;'?'
  5766  00FE43  00                 	db	0
  5767  00FE44                     STR_47:
  5768  00FE44  43                 	db	67	;'C'
  5769  00FE45  61                 	db	97	;'a'
  5770  00FE46  75                 	db	117	;'u'
  5771  00FE47  73                 	db	115	;'s'
  5772  00FE48  65                 	db	101	;'e'
  5773  00FE49  20                 	db	32
  5774  00FE4A  6F                 	db	111	;'o'
  5775  00FE4B  66                 	db	102	;'f'
  5776  00FE4C  20                 	db	32
  5777  00FE4D  52                 	db	82	;'R'
  5778  00FE4E  65                 	db	101	;'e'
  5779  00FE4F  73                 	db	115	;'s'
  5780  00FE50  65                 	db	101	;'e'
  5781  00FE51  74                 	db	116	;'t'
  5782  00FE52  3F                 	db	63	;'?'
  5783  00FE53  00                 	db	0
  5784  00FE54                     STR_96:
  5785  00FE54  44                 	db	68	;'D'
  5786  00FE55  69                 	db	105	;'i'
  5787  00FE56  73                 	db	115	;'s'
  5788  00FE57  61                 	db	97	;'a'
  5789  00FE58  62                 	db	98	;'b'
  5790  00FE59  6C                 	db	108	;'l'
  5791  00FE5A  65                 	db	101	;'e'
  5792  00FE5B  20                 	db	32
  5793  00FE5C  44                 	db	68	;'D'
  5794  00FE5D  69                 	db	105	;'i'
  5795  00FE5E  6D                 	db	109	;'m'
  5796  00FE5F  6D                 	db	109	;'m'
  5797  00FE60  69                 	db	105	;'i'
  5798  00FE61  6E                 	db	110	;'n'
  5799  00FE62  67                 	db	103	;'g'
  5800  00FE63  00                 	db	0
  5801  00FE64                     STR_71:
  5802  00FE64  43                 	db	67	;'C'
  5803  00FE65  6C                 	db	108	;'l'
  5804  00FE66  65                 	db	101	;'e'
  5805  00FE67  61                 	db	97	;'a'
  5806  00FE68  72                 	db	114	;'r'
  5807  00FE69  20                 	db	32
  5808  00FE6A  41                 	db	65	;'A'
  5809  00FE6B  44                 	db	68	;'D'
  5810  00FE6C  43                 	db	67	;'C'
  5811  00FE6D  20                 	db	32
  5812  00FE6E  45                 	db	69	;'E'
  5813  00FE6F  72                 	db	114	;'r'
  5814  00FE70  72                 	db	114	;'r'
  5815  00FE71  6F                 	db	111	;'o'
  5816  00FE72  72                 	db	114	;'r'
  5817  00FE73  00                 	db	0
  5818  00FE74                     STR_135:
  5819  00FE74  50                 	db	80	;'P'
  5820  00FE75  6F                 	db	111	;'o'
  5821  00FE76  77                 	db	119	;'w'
  5822  00FE77  65                 	db	101	;'e'
  5823  00FE78  72                 	db	114	;'r'
  5824  00FE79  20                 	db	32
  5825  00FE7A  4F                 	db	79	;'O'
  5826  00FE7B  6E                 	db	110	;'n'
  5827  00FE7C  20                 	db	32
  5828  00FE7D  52                 	db	82	;'R'
  5829  00FE7E  65                 	db	101	;'e'
  5830  00FE7F  73                 	db	115	;'s'
  5831  00FE80  65                 	db	101	;'e'
  5832  00FE81  74                 	db	116	;'t'
  5833  00FE82  00                 	db	0
  5834  00FE83                     STR_78:
  5835  00FE83  4D                 	db	77	;'M'
  5836  00FE84  65                 	db	101	;'e'
  5837  00FE85  61                 	db	97	;'a'
  5838  00FE86  73                 	db	115	;'s'
  5839  00FE87  75                 	db	117	;'u'
  5840  00FE88  72                 	db	114	;'r'
  5841  00FE89  65                 	db	101	;'e'
  5842  00FE8A  20                 	db	32
  5843  00FE8B  50                 	db	80	;'P'
  5844  00FE8C  4F                 	db	79	;'O'
  5845  00FE8D  53                 	db	83	;'S'
  5846  00FE8E  31                 	db	49	;'1'
  5847  00FE8F  32                 	db	50	;'2'
  5848  00FE90  3F                 	db	63	;'?'
  5849  00FE91  00                 	db	0
  5850  00FE92                     STR_92:
  5851  00FE92  4D                 	db	77	;'M'
  5852  00FE93  65                 	db	101	;'e'
  5853  00FE94  61                 	db	97	;'a'
  5854  00FE95  73                 	db	115	;'s'
  5855  00FE96  75                 	db	117	;'u'
  5856  00FE97  72                 	db	114	;'r'
  5857  00FE98  65                 	db	101	;'e'
  5858  00FE99  20                 	db	32
  5859  00FE9A  50                 	db	80	;'P'
  5860  00FE9B  6F                 	db	111	;'o'
  5861  00FE9C  77                 	db	119	;'w'
  5862  00FE9D  65                 	db	101	;'e'
  5863  00FE9E  72                 	db	114	;'r'
  5864  00FE9F  3F                 	db	63	;'?'
  5865  00FEA0  00                 	db	0
  5866  00FEA1                     STR_94:
  5867  00FEA1  45                 	db	69	;'E'
  5868  00FEA2  6E                 	db	110	;'n'
  5869  00FEA3  61                 	db	97	;'a'
  5870  00FEA4  62                 	db	98	;'b'
  5871  00FEA5  6C                 	db	108	;'l'
  5872  00FEA6  65                 	db	101	;'e'
  5873  00FEA7  20                 	db	32
  5874  00FEA8  44                 	db	68	;'D'
  5875  00FEA9  69                 	db	105	;'i'
  5876  00FEAA  6D                 	db	109	;'m'
  5877  00FEAB  6D                 	db	109	;'m'
  5878  00FEAC  69                 	db	105	;'i'
  5879  00FEAD  6E                 	db	110	;'n'
  5880  00FEAE  67                 	db	103	;'g'
  5881  00FEAF  00                 	db	0
  5882  00FEB0                     STR_66:
  5883  00FEB0  49                 	db	73	;'I'
  5884  00FEB1  6E                 	db	110	;'n'
  5885  00FEB2  74                 	db	116	;'t'
  5886  00FEB3  65                 	db	101	;'e'
  5887  00FEB4  72                 	db	114	;'r'
  5888  00FEB5  6E                 	db	110	;'n'
  5889  00FEB6  61                 	db	97	;'a'
  5890  00FEB7  6C                 	db	108	;'l'
  5891  00FEB8  20                 	db	32
  5892  00FEB9  44                 	db	68	;'D'
  5893  00FEBA  41                 	db	65	;'A'
  5894  00FEBB  43                 	db	67	;'C'
  5895  00FEBC  31                 	db	49	;'1'
  5896  00FEBD  00                 	db	0
  5897  00FEBE                     STR_84:
  5898  00FEBE  4D                 	db	77	;'M'
  5899  00FEBF  65                 	db	101	;'e'
  5900  00FEC0  61                 	db	97	;'a'
  5901  00FEC1  73                 	db	115	;'s'
  5902  00FEC2  75                 	db	117	;'u'
  5903  00FEC3  72                 	db	114	;'r'
  5904  00FEC4  65                 	db	101	;'e'
  5905  00FEC5  20                 	db	32
  5906  00FEC6  41                 	db	65	;'A'
  5907  00FEC7  56                 	db	86	;'V'
  5908  00FEC8  53                 	db	83	;'S'
  5909  00FEC9  53                 	db	83	;'S'
  5910  00FECA  3F                 	db	63	;'?'
  5911  00FECB  00                 	db	0
  5912  00FECC                     STR_100:
  5913  00FECC  4C                 	db	76	;'L'
  5914  00FECD  6F                 	db	111	;'o'
  5915  00FECE  61                 	db	97	;'a'
  5916  00FECF  64                 	db	100	;'d'
  5917  00FED0  20                 	db	32
  5918  00FED1  45                 	db	69	;'E'
  5919  00FED2  6E                 	db	110	;'n'
  5920  00FED3  61                 	db	97	;'a'
  5921  00FED4  62                 	db	98	;'b'
  5922  00FED5  6C                 	db	108	;'l'
  5923  00FED6  65                 	db	101	;'e'
  5924  00FED7  64                 	db	100	;'d'
  5925  00FED8  3F                 	db	63	;'?'
  5926  00FED9  00                 	db	0
  5927  00FEDA                     STR_118:
  5928  00FEDA  4C                 	db	76	;'L'
  5929  00FEDB  6F                 	db	111	;'o'
  5930  00FEDC  61                 	db	97	;'a'
  5931  00FEDD  64                 	db	100	;'d'
  5932  00FEDE  20                 	db	32
  5933  00FEDF  4F                 	db	79	;'O'
  5934  00FEE0  6E                 	db	110	;'n'
  5935  00FEE1  20                 	db	32
  5936  00FEE2  54                 	db	84	;'T'
  5937  00FEE3  69                 	db	105	;'i'
  5938  00FEE4  6D                 	db	109	;'m'
  5939  00FEE5  65                 	db	101	;'e'
  5940  00FEE6  3F                 	db	63	;'?'
  5941  00FEE7  00                 	db	0
  5942  00FEE8                     STR_64:
  5943  00FEE8  49                 	db	73	;'I'
  5944  00FEE9  6E                 	db	110	;'n'
  5945  00FEEA  74                 	db	116	;'t'
  5946  00FEEB  65                 	db	101	;'e'
  5947  00FEEC  72                 	db	114	;'r'
  5948  00FEED  6E                 	db	110	;'n'
  5949  00FEEE  61                 	db	97	;'a'
  5950  00FEEF  6C                 	db	108	;'l'
  5951  00FEF0  20                 	db	32
  5952  00FEF1  41                 	db	65	;'A'
  5953  00FEF2  56                 	db	86	;'V'
  5954  00FEF3  53                 	db	83	;'S'
  5955  00FEF4  53                 	db	83	;'S'
  5956  00FEF5  00                 	db	0
  5957  00FEF6                     STR_65:
  5958  00FEF6  49                 	db	73	;'I'
  5959  00FEF7  6E                 	db	110	;'n'
  5960  00FEF8  74                 	db	116	;'t'
  5961  00FEF9  65                 	db	101	;'e'
  5962  00FEFA  72                 	db	114	;'r'
  5963  00FEFB  6E                 	db	110	;'n'
  5964  00FEFC  61                 	db	97	;'a'
  5965  00FEFD  6C                 	db	108	;'l'
  5966  00FEFE  20                 	db	32
  5967  00FEFF  54                 	db	84	;'T'
  5968  00FF00  65                 	db	101	;'e'
  5969  00FF01  6D                 	db	109	;'m'
  5970  00FF02  70                 	db	112	;'p'
  5971  00FF03  00                 	db	0
  5972  00FF04                     STR_132:
  5973  00FF04  50                 	db	80	;'P'
  5974  00FF05  49                 	db	73	;'I'
  5975  00FF06  43                 	db	67	;'C'
  5976  00FF07  31                 	db	49	;'1'
  5977  00FF08  38                 	db	56	;'8'
  5978  00FF09  4C                 	db	76	;'L'
  5979  00FF0A  46                 	db	70	;'F'
  5980  00FF0B  36                 	db	54	;'6'
  5981  00FF0C  37                 	db	55	;'7'
  5982  00FF0D  4B                 	db	75	;'K'
  5983  00FF0E  34                 	db	52	;'4'
  5984  00FF0F  30                 	db	48	;'0'
  5985  00FF10  00                 	db	0
  5986  00FF11                     STR_55:
  5987  00FF11  52                 	db	82	;'R'
  5988  00FF12  65                 	db	101	;'e'
  5989  00FF13  76                 	db	118	;'v'
  5990  00FF14  69                 	db	105	;'i'
  5991  00FF15  73                 	db	115	;'s'
  5992  00FF16  69                 	db	105	;'i'
  5993  00FF17  6F                 	db	111	;'o'
  5994  00FF18  6E                 	db	110	;'n'
  5995  00FF19  20                 	db	32
  5996  00FF1A  49                 	db	73	;'I'
  5997  00FF1B  44                 	db	68	;'D'
  5998  00FF1C  3F                 	db	63	;'?'
  5999  00FF1D  00                 	db	0
  6000  00FF1E                     STR_82:
  6001  00FF1E  4D                 	db	77	;'M'
  6002  00FF1F  65                 	db	101	;'e'
  6003  00FF20  61                 	db	97	;'a'
  6004  00FF21  73                 	db	115	;'s'
  6005  00FF22  75                 	db	117	;'u'
  6006  00FF23  72                 	db	114	;'r'
  6007  00FF24  65                 	db	101	;'e'
  6008  00FF25  20                 	db	32
  6009  00FF26  46                 	db	70	;'F'
  6010  00FF27  56                 	db	86	;'V'
  6011  00FF28  52                 	db	82	;'R'
  6012  00FF29  3F                 	db	63	;'?'
  6013  00FF2A  00                 	db	0
  6014  00FF2B                     STR_107:
  6015  00FF2B  44                 	db	68	;'D'
  6016  00FF2C  69                 	db	105	;'i'
  6017  00FF2D  73                 	db	115	;'s'
  6018  00FF2E  61                 	db	97	;'a'
  6019  00FF2F  62                 	db	98	;'b'
  6020  00FF30  6C                 	db	108	;'l'
  6021  00FF31  65                 	db	101	;'e'
  6022  00FF32  20                 	db	32
  6023  00FF33  4C                 	db	76	;'L'
  6024  00FF34  6F                 	db	111	;'o'
  6025  00FF35  61                 	db	97	;'a'
  6026  00FF36  64                 	db	100	;'d'
  6027  00FF37  00                 	db	0
  6028  00FF38                     STR_131:
  6029  00FF38  50                 	db	80	;'P'
  6030  00FF39  49                 	db	73	;'I'
  6031  00FF3A  43                 	db	67	;'C'
  6032  00FF3B  31                 	db	49	;'1'
  6033  00FF3C  38                 	db	56	;'8'
  6034  00FF3D  46                 	db	70	;'F'
  6035  00FF3E  36                 	db	54	;'6'
  6036  00FF3F  37                 	db	55	;'7'
  6037  00FF40  4B                 	db	75	;'K'
  6038  00FF41  34                 	db	52	;'4'
  6039  00FF42  30                 	db	48	;'0'
  6040  00FF43  00                 	db	0
  6041  00FF44                     STR_98:
  6042  00FF44  45                 	db	69	;'E'
  6043  00FF45  6E                 	db	110	;'n'
  6044  00FF46  61                 	db	97	;'a'
  6045  00FF47  62                 	db	98	;'b'
  6046  00FF48  6C                 	db	108	;'l'
  6047  00FF49  65                 	db	101	;'e'
  6048  00FF4A  20                 	db	32
  6049  00FF4B  4C                 	db	76	;'L'
  6050  00FF4C  6F                 	db	111	;'o'
  6051  00FF4D  61                 	db	97	;'a'
  6052  00FF4E  64                 	db	100	;'d'
  6053  00FF4F  00                 	db	0
  6054  00FF50                     STR_53:
  6055  00FF50  44                 	db	68	;'D'
  6056  00FF51  65                 	db	101	;'e'
  6057  00FF52  76                 	db	118	;'v'
  6058  00FF53  69                 	db	105	;'i'
  6059  00FF54  63                 	db	99	;'c'
  6060  00FF55  65                 	db	101	;'e'
  6061  00FF56  20                 	db	32
  6062  00FF57  49                 	db	73	;'I'
  6063  00FF58  44                 	db	68	;'D'
  6064  00FF59  3F                 	db	63	;'?'
  6065  00FF5A  00                 	db	0
  6066  00FF5B                     STR_122:
  6067  00FF5B  4D                 	db	77	;'M'
  6068  00FF5C  61                 	db	97	;'a'
  6069  00FF5D  78                 	db	120	;'x'
  6070  00FF5E  20                 	db	32
  6071  00FF5F  50                 	db	80	;'P'
  6072  00FF60  6F                 	db	111	;'o'
  6073  00FF61  77                 	db	119	;'w'
  6074  00FF62  65                 	db	101	;'e'
  6075  00FF63  72                 	db	114	;'r'
  6076  00FF64  3F                 	db	63	;'?'
  6077  00FF65  00                 	db	0
  6078  00FF66                     STR_60:
  6079  00FF66  41                 	db	65	;'A'
  6080  00FF67  44                 	db	68	;'D'
  6081  00FF68  43                 	db	67	;'C'
  6082  00FF69  20                 	db	32
  6083  00FF6A  45                 	db	69	;'E'
  6084  00FF6B  72                 	db	114	;'r'
  6085  00FF6C  72                 	db	114	;'r'
  6086  00FF6D  6F                 	db	111	;'o'
  6087  00FF6E  72                 	db	114	;'r'
  6088  00FF6F  3F                 	db	63	;'?'
  6089  00FF70  00                 	db	0
  6090  00FF71                     STR_57:
  6091  00FF71  55                 	db	85	;'U'
  6092  00FF72  73                 	db	115	;'s'
  6093  00FF73  65                 	db	101	;'e'
  6094  00FF74  72                 	db	114	;'r'
  6095  00FF75  20                 	db	32
  6096  00FF76  49                 	db	73	;'I'
  6097  00FF77  44                 	db	68	;'D'
  6098  00FF78  73                 	db	115	;'s'
  6099  00FF79  3F                 	db	63	;'?'
  6100  00FF7A  00                 	db	0
  6101  00FF7B                     STR_68:
  6102  00FF7B  55                 	db	85	;'U'
  6103  00FF7C  6E                 	db	110	;'n'
  6104  00FF7D  64                 	db	100	;'d'
  6105  00FF7E  65                 	db	101	;'e'
  6106  00FF7F  66                 	db	102	;'f'
  6107  00FF80  69                 	db	105	;'i'
  6108  00FF81  6E                 	db	110	;'n'
  6109  00FF82  65                 	db	101	;'e'
  6110  00FF83  64                 	db	100	;'d'
  6111  00FF84  00                 	db	0
  6112  00FF85                     STR_144:
  6113  00FF85  28                 	db	40
  6114  00FF86  6E                 	db	110	;'n'
  6115  00FF87  75                 	db	117	;'u'
  6116  00FF88  6C                 	db	108	;'l'
  6117  00FF89  6C                 	db	108	;'l'
  6118  00FF8A  29                 	db	41
  6119  00FF8B  00                 	db	0
  6120  00FF8C                     STR_63:
  6121  00FF8C  50                 	db	80	;'P'
  6122  00FF8D  4F                 	db	79	;'O'
  6123  00FF8E  53                 	db	83	;'S'
  6124  00FF8F  33                 	db	51	;'3'
  6125  00FF90  50                 	db	80	;'P'
  6126  00FF91  33                 	db	51	;'3'
  6127  00FF92  00                 	db	0
  6128  00FF93                     STR_62:
  6129  00FF93  50                 	db	80	;'P'
  6130  00FF94  4F                 	db	79	;'O'
  6131  00FF95  53                 	db	83	;'S'
  6132  00FF96  31                 	db	49	;'1'
  6133  00FF97  32                 	db	50	;'2'
  6134  00FF98  00                 	db	0
  6135  00FF99                     STR_49:
  6136  00FF99  2A                 	db	42
  6137  00FF9A  49                 	db	73	;'I'
  6138  00FF9B  44                 	db	68	;'D'
  6139  00FF9C  4E                 	db	78	;'N'
  6140  00FF9D  3F                 	db	63	;'?'
  6141  00FF9E  00                 	db	0
  6142  00FF9F                     STR_44:
  6143  00FF9F  43                 	db	67	;'C'
  6144  00FFA0  6C                 	db	108	;'l'
  6145  00FFA1  65                 	db	101	;'e'
  6146  00FFA2  61                 	db	97	;'a'
  6147  00FFA3  72                 	db	114	;'r'
  6148  00FFA4  00                 	db	0
  6149  00FFA5                     STR_61:
  6150  00FFA5  49                 	db	73	;'I'
  6151  00FFA6  53                 	db	83	;'S'
  6152  00FFA7  4E                 	db	78	;'N'
  6153  00FFA8  53                 	db	83	;'S'
  6154  00FFA9  00                 	db	0
  6155  00FFAA                     STR_124:
  6156  00FFAA  48                 	db	72	;'H'
  6157  00FFAB  65                 	db	101	;'e'
  6158  00FFAC  6C                 	db	108	;'l'
  6159  00FFAD  70                 	db	112	;'p'
  6160  00FFAE  00                 	db	0
  6161  00FFAF                     STR_2:
  6162  00FFAF  1B                 	db	27
  6163  00FFB0  5B                 	db	91	;'['
  6164  00FFB1  32                 	db	50	;'2'
  6165  00FFB2  4A                 	db	74	;'J'
  6166  00FFB3  00                 	db	0
  6167  00FFB4                     STR_50:
  6168  00FFB4  49                 	db	73	;'I'
  6169  00FFB5  44                 	db	68	;'D'
  6170  00FFB6  4E                 	db	78	;'N'
  6171  00FFB7  00                 	db	0
  6172  00FFB8                     STR_3:
  6173  00FFB8  1B                 	db	27
  6174  00FFB9  5B                 	db	91	;'['
  6175  00FFBA  48                 	db	72	;'H'
  6176  00FFBB  00                 	db	0
  6177  00FFBC  1B                 	db	27
  6178  00FFBD  5B                 	db	91	;'['
  6179  00FFBE  73                 	db	115	;'s'
  6180  00FFBF  00                 	db	0
  6181  00FFC0  1B                 	db	27
  6182  00FFC1  5B                 	db	91	;'['
  6183  00FFC2  75                 	db	117	;'u'
  6184  00FFC3  00                 	db	0
  6185  00FFC4                     STR_1:
  6186  00FFC4  1B                 	db	27
  6187  00FFC5  5B                 	db	91	;'['
  6188  00FFC6  4B                 	db	75	;'K'
  6189  00FFC7  00                 	db	0
  6190  00FFC8                     STR_20:
  6191  00FFC8  33                 	db	51	;'3'
  6192  00FFC9  30                 	db	48	;'0'
  6193  00FFCA  00                 	db	0
  6194  00FFCB                     STR_21:
  6195  00FFCB  33                 	db	51	;'3'
  6196  00FFCC  31                 	db	49	;'1'
  6197  00FFCD  00                 	db	0
  6198  00FFCE                     STR_31:
  6199  00FFCE  34                 	db	52	;'4'
  6200  00FFCF  31                 	db	49	;'1'
  6201  00FFD0  00                 	db	0
  6202  00FFD1                     STR_22:
  6203  00FFD1  33                 	db	51	;'3'
  6204  00FFD2  32                 	db	50	;'2'
  6205  00FFD3  00                 	db	0
  6206  00FFD4                     STR_32:
  6207  00FFD4  34                 	db	52	;'4'
  6208  00FFD5  32                 	db	50	;'2'
  6209  00FFD6  00                 	db	0
  6210  00FFD7                     STR_23:
  6211  00FFD7  33                 	db	51	;'3'
  6212  00FFD8  33                 	db	51	;'3'
  6213  00FFD9  00                 	db	0
  6214  00FFDA                     STR_33:
  6215  00FFDA  34                 	db	52	;'4'
  6216  00FFDB  33                 	db	51	;'3'
  6217  00FFDC  00                 	db	0
  6218  00FFDD                     STR_24:
  6219  00FFDD  33                 	db	51	;'3'
  6220  00FFDE  34                 	db	52	;'4'
  6221  00FFDF  00                 	db	0
  6222  00FFE0                     STR_34:
  6223  00FFE0  34                 	db	52	;'4'
  6224  00FFE1  34                 	db	52	;'4'
  6225  00FFE2  00                 	db	0
  6226  00FFE3                     STR_25:
  6227  00FFE3  33                 	db	51	;'3'
  6228  00FFE4  35                 	db	53	;'5'
  6229  00FFE5  00                 	db	0
  6230  00FFE6                     STR_35:
  6231  00FFE6  34                 	db	52	;'4'
  6232  00FFE7  35                 	db	53	;'5'
  6233  00FFE8  00                 	db	0
  6234  00FFE9                     STR_26:
  6235  00FFE9  33                 	db	51	;'3'
  6236  00FFEA  36                 	db	54	;'6'
  6237  00FFEB  00                 	db	0
  6238  00FFEC                     STR_36:
  6239  00FFEC  34                 	db	52	;'4'
  6240  00FFED  36                 	db	54	;'6'
  6241  00FFEE  00                 	db	0
  6242  00FFEF                     STR_27:
  6243  00FFEF  33                 	db	51	;'3'
  6244  00FFF0  37                 	db	55	;'7'
  6245  00FFF1  00                 	db	0
  6246  00FFF2                     STR_37:
  6247  00FFF2  34                 	db	52	;'4'
  6248  00FFF3  37                 	db	55	;'7'
  6249  00FFF4  00                 	db	0
  6250  00FFF5                     STR_11:
  6251  00FFF5  1B                 	db	27
  6252  00FFF6  5B                 	db	91	;'['
  6253  00FFF7  00                 	db	0
  6254  00FFF8                     STR_17:
  6255  00FFF8  38                 	db	56	;'8'
  6256  00FFF9  00                 	db	0
  6257  00FFFA                     STR_19:
  6258  00FFFA  3B                 	db	59	;';'
  6259  00FFFB  00                 	db	0
  6260  00FFFC                     STR_39:
  6261  00FFFC  6D                 	db	109	;'m'
  6262  00FFFD  00                 	db	0
  6263  0000                     
  6264                           ; #config settings
  6265  00FFFE  00                 	db	0	; dummy byte at the end
  6266  0000                     
  6267                           	psect	nvBANK2
  6268  0002EC                     __pnvBANK2:
  6269                           	opt stack 0
  6270  0002EC                     _reset_cause:
  6271                           	opt stack 0
  6272  0002EC                     	ds	1
  6273  0000                     _HLVDCON0bits	set	3778
  6274  0000                     _HLVDCON0	set	3778
  6275  0000                     _HLVDCON1	set	3779
  6276  0000                     _PIR8bits	set	3643
  6277  0000                     _FVRCONbits	set	3780
  6278  0000                     _FVRCON	set	3780
  6279  0000                     _RC2REG	set	3825
  6280  0000                     _RC2STAbits	set	3829
  6281  0000                     _TX2REG	set	3826
  6282  0000                     _TX2STAbits	set	3830
  6283  0000                     _SP2BRGH	set	3828
  6284  0000                     _SP2BRGL	set	3827
  6285  0000                     _TX2STA	set	3830
  6286  0000                     _RC2STA	set	3829
  6287  0000                     _BAUD2CON	set	3831
  6288  0000                     _PIR2bits	set	3637
  6289  0000                     _PIE2bits	set	3627
  6290  0000                     _PIR1bits	set	3636
  6291  0000                     _PIE1bits	set	3626
  6292  0000                     _PIR5bits	set	3640
  6293  0000                     _PIE5bits	set	3630
  6294  0000                     _PIR3bits	set	3638
  6295  0000                     _PIE3bits	set	3628
  6296  0000                     _IPR2bits	set	3617
  6297  0000                     _IPR1bits	set	3616
  6298  0000                     _IPR5bits	set	3620
  6299  0000                     _IPR3bits	set	3618
  6300  0000                     _RX2PPS	set	3601
  6301  0000                     _RG7PPS	set	3721
  6302  0000                     _SLRCONH	set	3774
  6303  0000                     _SLRCONG	set	3769
  6304  0000                     _SLRCONF	set	3761
  6305  0000                     _SLRCONE	set	3756
  6306  0000                     _SLRCOND	set	3748
  6307  0000                     _SLRCONC	set	3743
  6308  0000                     _SLRCONB	set	3735
  6309  0000                     _SLRCONA	set	3727
  6310  0000                     _ODCOND	set	3749
  6311  0000                     _ODCONC	set	3744
  6312  0000                     _ODCONH	set	3775
  6313  0000                     _ODCONB	set	3736
  6314  0000                     _ODCONG	set	3770
  6315  0000                     _ODCONA	set	3728
  6316  0000                     _ODCONF	set	3762
  6317  0000                     _ODCONE	set	3757
  6318  0000                     _WPUH	set	3776
  6319  0000                     _WPUC	set	3745
  6320  0000                     _WPUA	set	3729
  6321  0000                     _WPUG	set	3771
  6322  0000                     _WPUB	set	3737
  6323  0000                     _WPUE	set	3758
  6324  0000                     _WPUF	set	3763
  6325  0000                     _WPUD	set	3750
  6326  0000                     _ANSELA	set	3730
  6327  0000                     _ANSELF	set	3764
  6328  0000                     _ANSELG	set	3772
  6329  0000                     _ANSELE	set	3759
  6330  0000                     _ANSELB	set	3738
  6331  0000                     _ANSELD	set	3751
  6332  0000                     _PMD5	set	3665
  6333  0000                     _PMD4	set	3664
  6334  0000                     _PMD3	set	3663
  6335  0000                     _PMD2	set	3662
  6336  0000                     _PMD1	set	3661
  6337  0000                     _PMD0	set	3660
  6338  0000                     _OSCTUNE	set	3656
  6339  0000                     _OSCFRQ	set	3657
  6340  0000                     _OSCEN	set	3655
  6341  0000                     _OSCCON3	set	3653
  6342  0000                     _OSCCON1	set	3651
  6343  0000                     _PLLR	set	29232
  6344  0000                     _T7GCONbits	set	3889
  6345  0000                     _T7CONbits	set	3888
  6346  0000                     _T7CON	set	3888
  6347  0000                     _TMR7L	set	3886
  6348  0000                     _TMR7H	set	3887
  6349  0000                     _T7CLK	set	3891
  6350  0000                     _T7GATE	set	3890
  6351  0000                     _T7GCON	set	3889
  6352  0000                     _ADCON1bits	set	3929
  6353  0000                     _ADCON2bits	set	3930
  6354  0000                     _ADPRE	set	3934
  6355  0000                     _ADCON3bits	set	3931
  6356  0000                     _ADACQ	set	3932
  6357  0000                     _ADCLK	set	3927
  6358  0000                     _ADACT	set	3926
  6359  0000                     _ADREF	set	3928
  6360  0000                     _ADCON3	set	3931
  6361  0000                     _ADCON2	set	3930
  6362  0000                     _ADCON1	set	3929
  6363  0000                     _ADCAP	set	3933
  6364  0000                     _ADPCH	set	3935
  6365  0000                     _PCON0bits	set	4055
  6366  0000                     _LATGbits	set	3967
  6367  0000                     _NVMDAT	set	3958
  6368  0000                     _NVMADRL	set	3956
  6369  0000                     _NVMADRH	set	3957
  6370  0000                     _NVMCON2	set	3960
  6371  0000                     _TABLAT	set	4085
  6372  0000                     _TBLPTRL	set	4086
  6373  0000                     _TBLPTRH	set	4087
  6374  0000                     _TBLPTRU	set	4088
  6375  0000                     _NVMCON1bits	set	3959
  6376  0000                     _T5GCONbits	set	4036
  6377  0000                     _T5CONbits	set	4035
  6378  0000                     _T5CON	set	4035
  6379  0000                     _TMR5L	set	4033
  6380  0000                     _TMR5H	set	4034
  6381  0000                     _T5CLK	set	4038
  6382  0000                     _T5GATE	set	4037
  6383  0000                     _T5GCON	set	4036
  6384  0000                     _ADERRL	set	3950
  6385  0000                     _ADERRH	set	3951
  6386  0000                     _ADPREVL	set	3937
  6387  0000                     _ADPREVH	set	3938
  6388  0000                     _ADFLTRL	set	3954
  6389  0000                     _ADFLTRH	set	3955
  6390  0000                     _ADSTATbits	set	3941
  6391  0000                     _ADACCL	set	3952
  6392  0000                     _ADACCH	set	3953
  6393  0000                     _ADCNT	set	3943
  6394  0000                     _ADRESL	set	3939
  6395  0000                     _ADRESH	set	3940
  6396  0000                     _ADCON0bits	set	3936
  6397  0000                     _ADCON0	set	3936
  6398  0000                     _ADSTAT	set	3941
  6399  0000                     _ADRPT	set	3942
  6400  0000                     _ADSTPTH	set	3945
  6401  0000                     _ADSTPTL	set	3944
  6402  0000                     _ADUTHH	set	3949
  6403  0000                     _ADUTHL	set	3948
  6404  0000                     _ADLTHH	set	3947
  6405  0000                     _ADLTHL	set	3946
  6406  0000                     _LATFbits	set	3966
  6407  0000                     _PR6	set	4016
  6408  0000                     _TMR6	set	4015
  6409  0000                     _T6CONbits	set	4017
  6410  0000                     _T6RSTbits	set	4020
  6411  0000                     _T6HLTbits	set	4018
  6412  0000                     _T6CON	set	4017
  6413  0000                     _T6TMR	set	4015
  6414  0000                     _T6PR	set	4016
  6415  0000                     _T6RST	set	4020
  6416  0000                     _T6HLT	set	4018
  6417  0000                     _T6CLKCON	set	4019
  6418  0000                     _INTCONbits	set	4082
  6419  0000                     _TRISD	set	3972
  6420  0000                     _TRISC	set	3971
  6421  0000                     _TRISH	set	3976
  6422  0000                     _TRISB	set	3970
  6423  0000                     _TRISG	set	3975
  6424  0000                     _TRISA	set	3969
  6425  0000                     _TRISF	set	3974
  6426  0000                     _TRISE	set	3973
  6427  0000                     _LATH	set	3968
  6428  0000                     _LATC	set	3963
  6429  0000                     _LATG	set	3967
  6430  0000                     _LATB	set	3962
  6431  0000                     _LATF	set	3966
  6432  0000                     _LATA	set	3961
  6433  0000                     _LATD	set	3964
  6434  0000                     _LATE	set	3965
  6435                           
  6436                           	psect	cinit
  6437  017910                     __pcinit:
  6438                           	opt stack 0
  6439  017910                     start_initialization:
  6440                           	opt stack 0
  6441  017910                     __initialization:
  6442                           	opt stack 0
  6443                           
  6444                           ; Initialize objects allocated to BANK2 (36 bytes)
  6445                           ; load TBLPTR registers with __pidataBANK2
  6446  017910  0EEC               	movlw	low __pidataBANK2
  6447  017912  6EF6               	movwf	tblptrl,c
  6448  017914  0E89               	movlw	high __pidataBANK2
  6449  017916  6EF7               	movwf	tblptrh,c
  6450  017918  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  6451  01791A  6EF8               	movwf	tblptru,c
  6452  01791C  EE02  F0B0         	lfsr	0,__pdataBANK2
  6453  017920  EE10 F024          	lfsr	1,36
  6454  017924                     copy_data0:
  6455  017924  0009               	tblrd		*+
  6456  017926  CFF5 FFEE          	movff	tablat,postinc0
  6457  01792A  50E5               	movf	postdec1,w,c
  6458  01792C  50E1               	movf	fsr1l,w,c
  6459  01792E  E1FA               	bnz	copy_data0
  6460                           
  6461                           ; Initialize objects allocated to BANK1 (1 bytes)
  6462                           ; load TBLPTR registers with __pidataBANK1
  6463  017930  0E5A               	movlw	low __pidataBANK1
  6464  017932  6EF6               	movwf	tblptrl,c
  6465  017934  0E8C               	movlw	high __pidataBANK1
  6466  017936  6EF7               	movwf	tblptrh,c
  6467  017938  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  6468  01793A  6EF8               	movwf	tblptru,c
  6469  01793C  0009               	tblrd		*+	;fetch initializer
  6470  01793E  CFF5 F1E8          	movff	tablat,__pdataBANK1
  6471                           
  6472                           ; Initialize objects allocated to BANK0 (6 bytes)
  6473                           ; load TBLPTR registers with __pidataBANK0
  6474  017942  0E36               	movlw	low __pidataBANK0
  6475  017944  6EF6               	movwf	tblptrl,c
  6476  017946  0E8C               	movlw	high __pidataBANK0
  6477  017948  6EF7               	movwf	tblptrh,c
  6478  01794A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  6479  01794C  6EF8               	movwf	tblptru,c
  6480  01794E  EE00  F0F0         	lfsr	0,__pdataBANK0
  6481  017952  EE10 F006          	lfsr	1,6
  6482  017956                     copy_data1:
  6483  017956  0009               	tblrd		*+
  6484  017958  CFF5 FFEE          	movff	tablat,postinc0
  6485  01795C  50E5               	movf	postdec1,w,c
  6486  01795E  50E1               	movf	fsr1l,w,c
  6487  017960  E1FA               	bnz	copy_data1
  6488                           
  6489                           ; Clear objects allocated to BANK3 (128 bytes)
  6490  017962  EE03  F000         	lfsr	0,__pbssBANK3
  6491  017966  0E80               	movlw	128
  6492  017968                     clear_0:
  6493  017968  6AEE               	clrf	postinc0,c
  6494  01796A  06E8               	decf	wreg,f,c
  6495  01796C  E1FD               	bnz	clear_0
  6496                           
  6497                           ; Clear objects allocated to BANK2 (176 bytes)
  6498  01796E  EE02  F000         	lfsr	0,__pbssBANK2
  6499  017972  0EB0               	movlw	176
  6500  017974                     clear_1:
  6501  017974  6AEE               	clrf	postinc0,c
  6502  017976  06E8               	decf	wreg,f,c
  6503  017978  E1FD               	bnz	clear_1
  6504                           
  6505                           ; Clear objects allocated to BANK1 (45 bytes)
  6506  01797A  EE01  F0BB         	lfsr	0,__pbssBANK1
  6507  01797E  0E2D               	movlw	45
  6508  017980                     clear_2:
  6509  017980  6AEE               	clrf	postinc0,c
  6510  017982  06E8               	decf	wreg,f,c
  6511  017984  E1FD               	bnz	clear_2
  6512                           
  6513                           ; Clear objects allocated to BITBANK0 (1 bytes)
  6514  017986  0100               	movlb	0
  6515  017988  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  6516                           
  6517                           ; Clear objects allocated to BANK0 (5 bytes)
  6518  01798A  0100               	movlb	0
  6519  01798C  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
  6520  01798E  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
  6521  017990  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
  6522  017992  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
  6523  017994  6BF6               	clrf	__pbssBANK0& (0+255),b
  6524                           
  6525                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  6526  017996  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  6527  017998                     end_of_initialization:
  6528                           	opt stack 0
  6529  017998                     __end_of__initialization:
  6530                           	opt stack 0
  6531  017998  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6532  01799A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6533  01799C  0100               	movlb	0
  6534  01799E  EFF0  F0B2         	goto	_main	;jump to C main() function
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           postinc0	equ	0xFEE
  6540                           wreg	equ	0xFE8
  6541                           postdec1	equ	0xFE5
  6542                           fsr1l	equ	0xFE1
  6543                           
  6544                           	psect	bitbssCOMRAM
  6545  0002F0                     __pbitbssCOMRAM:
  6546                           	opt stack 0
  6547  0002F0                     _adc_error_flag:
  6548                           	opt stack 0
  6549  0002F0                     	ds	1
  6550  0002F1                     _load_enable:
  6551                           	opt stack 0
  6552  0002F1                     	ds	1
  6553  0002F2                     _VCC_overvoltage_flag:
  6554                           	opt stack 0
  6555  0002F2                     	ds	1
  6556                           tblptru	equ	0xFF8
  6557                           tblptrh	equ	0xFF7
  6558                           tblptrl	equ	0xFF6
  6559                           tablat	equ	0xFF5
  6560                           postinc0	equ	0xFEE
  6561                           wreg	equ	0xFE8
  6562                           postdec1	equ	0xFE5
  6563                           fsr1l	equ	0xFE1
  6564                           
  6565                           	psect	bitbssBANK0
  6566  0007D8                     __pbitbssBANK0:
  6567                           	opt stack 0
  6568  0007D8                     _eusart2RxStringReady:
  6569                           	opt stack 0
  6570  0007D8                     	ds	1
  6571                           tblptru	equ	0xFF8
  6572                           tblptrh	equ	0xFF7
  6573                           tblptrl	equ	0xFF6
  6574                           tablat	equ	0xFF5
  6575                           postinc0	equ	0xFEE
  6576                           wreg	equ	0xFE8
  6577                           postdec1	equ	0xFE5
  6578                           fsr1l	equ	0xFE1
  6579                           
  6580                           	psect	bssBANK0
  6581  0000F6                     __pbssBANK0:
  6582                           	opt stack 0
  6583  0000F6                     _Irms:
  6584                           	opt stack 0
  6585  0000F6                     	ds	4
  6586  0000FA                     _eusart2RxHead:
  6587                           	opt stack 0
  6588  0000FA                     	ds	1
  6589                           tblptru	equ	0xFF8
  6590                           tblptrh	equ	0xFF7
  6591                           tblptrl	equ	0xFF6
  6592                           tablat	equ	0xFF5
  6593                           postinc0	equ	0xFEE
  6594                           wreg	equ	0xFE8
  6595                           postdec1	equ	0xFE5
  6596                           fsr1l	equ	0xFE1
  6597                           
  6598                           	psect	dataBANK0
  6599  0000F0                     __pdataBANK0:
  6600                           	opt stack 0
  6601  0000F0                     _dimming_period:
  6602                           	opt stack 0
  6603  0000F0                     	ds	2
  6604  0000F2                     _TRIAC_Firing_Angle:
  6605                           	opt stack 0
  6606  0000F2                     	ds	4
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           postinc0	equ	0xFEE
  6612                           wreg	equ	0xFE8
  6613                           postdec1	equ	0xFE5
  6614                           fsr1l	equ	0xFE1
  6615                           
  6616                           	psect	bssBANK1
  6617  0001BB                     __pbssBANK1:
  6618                           	opt stack 0
  6619  0001BB                     _Avg_Power:
  6620                           	opt stack 0
  6621  0001BB                     	ds	4
  6622  0001BF                     _Vrms:
  6623                           	opt stack 0
  6624  0001BF                     	ds	4
  6625  0001C3                     _Imeas:
  6626                           	opt stack 0
  6627  0001C3                     	ds	4
  6628  0001C7                     _Ipk:
  6629                           	opt stack 0
  6630  0001C7                     	ds	4
  6631  0001CB                     _POS12_ADC_Result:
  6632                           	opt stack 0
  6633  0001CB                     	ds	4
  6634  0001CF                     _POS3P3_ADC_Result:
  6635                           	opt stack 0
  6636  0001CF                     	ds	4
  6637  0001D3                     _AVSS_ADC_Result:
  6638                           	opt stack 0
  6639  0001D3                     	ds	4
  6640  0001D7                     _timer5ReloadVal:
  6641                           	opt stack 0
  6642  0001D7                     	ds	2
  6643  0001D9                     _timer7ReloadVal:
  6644                           	opt stack 0
  6645  0001D9                     	ds	2
  6646  0001DB                     _current_adc_channel:
  6647                           	opt stack 0
  6648  0001DB                     	ds	1
  6649  0001DC                     _background_color:
  6650                           	opt stack 0
  6651  0001DC                     	ds	1
  6652  0001DD                     _foreground_color:
  6653                           	opt stack 0
  6654  0001DD                     	ds	1
  6655  0001DE                     _attribute:
  6656                           	opt stack 0
  6657  0001DE                     	ds	1
  6658  0001DF                     _eusart2RxCount:
  6659                           	opt stack 0
  6660  0001DF                     	ds	1
  6661  0001E0                     _eusart2RxTail:
  6662                           	opt stack 0
  6663  0001E0                     	ds	1
  6664  0001E1                     _eusart2TxBufferRemaining:
  6665                           	opt stack 0
  6666  0001E1                     	ds	1
  6667  0001E2                     _eusart2TxTail:
  6668                           	opt stack 0
  6669  0001E2                     	ds	1
  6670  0001E3                     _eusart2TxHead:
  6671                           	opt stack 0
  6672  0001E3                     	ds	1
  6673  0001E4                     _FVR_ADC_Result:
  6674                           	opt stack 0
  6675  0001E4                     	ds	4
  6676                           tblptru	equ	0xFF8
  6677                           tblptrh	equ	0xFF7
  6678                           tblptrl	equ	0xFF6
  6679                           tablat	equ	0xFF5
  6680                           postinc0	equ	0xFEE
  6681                           wreg	equ	0xFE8
  6682                           postdec1	equ	0xFE5
  6683                           fsr1l	equ	0xFE1
  6684                           
  6685                           	psect	dataBANK1
  6686  0001E8                     __pdataBANK1:
  6687                           	opt stack 0
  6688  0001E8                     _next_channel:
  6689                           	opt stack 0
  6690  0001E8                     	ds	1
  6691                           tblptru	equ	0xFF8
  6692                           tblptrh	equ	0xFF7
  6693                           tblptrl	equ	0xFF6
  6694                           tablat	equ	0xFF5
  6695                           postinc0	equ	0xFEE
  6696                           wreg	equ	0xFE8
  6697                           postdec1	equ	0xFE5
  6698                           fsr1l	equ	0xFE1
  6699                           
  6700                           	psect	bssBANK2
  6701  000200                     __pbssBANK2:
  6702                           	opt stack 0
  6703  000200                     _eusart2RxBuffer:
  6704                           	opt stack 0
  6705  000200                     	ds	64
  6706  000240                     _max_Power:
  6707                           	opt stack 0
  6708  000240                     	ds	4
  6709  000244                     _max_Irms:
  6710                           	opt stack 0
  6711  000244                     	ds	4
  6712  000248                     _load_on_time:
  6713                           	opt stack 0
  6714  000248                     	ds	4
  6715  00024C                     _dev_on_time:
  6716                           	opt stack 0
  6717  00024C                     	ds	4
  6718  000250                     _Vpk:
  6719                           	opt stack 0
  6720  000250                     	ds	4
  6721  000254                     _Temp_ADC_Result:
  6722                           	opt stack 0
  6723  000254                     	ds	4
  6724  000258                     _ADC_Result_Scaling:
  6725                           	opt stack 0
  6726  000258                     	ds	4
  6727  00025C                     _TMR5_InterruptHandler:
  6728                           	opt stack 0
  6729  00025C                     	ds	3
  6730  00025F                     _TMR7_InterruptHandler:
  6731                           	opt stack 0
  6732  00025F                     	ds	3
  6733  000262                     _ADCC_ADTI_InterruptHandler:
  6734                           	opt stack 0
  6735  000262                     	ds	3
  6736  000265                     _TMR6_InterruptHandler:
  6737                           	opt stack 0
  6738  000265                     	ds	3
  6739  000268                     _EUSART2_RxDefaultInterruptHandler:
  6740                           	opt stack 0
  6741  000268                     	ds	3
  6742  00026B                     _EUSART2_TxDefaultInterruptHandler:
  6743                           	opt stack 0
  6744  00026B                     	ds	3
  6745  00026E                     _errno:
  6746                           	opt stack 0
  6747  00026E                     	ds	2
  6748  000270                     _line:
  6749                           	opt stack 0
  6750  000270                     	ds	64
  6751                           tblptru	equ	0xFF8
  6752                           tblptrh	equ	0xFF7
  6753                           tblptrl	equ	0xFF6
  6754                           tablat	equ	0xFF5
  6755                           postinc0	equ	0xFEE
  6756                           wreg	equ	0xFE8
  6757                           postdec1	equ	0xFE5
  6758                           fsr1l	equ	0xFE1
  6759                           
  6760                           	psect	dataBANK2
  6761  0002B0                     __pdataBANK2:
  6762                           	opt stack 0
  6763  0002B0                     getCauseOfResetString@strings:
  6764                           	opt stack 0
  6765  0002B0                     	ds	18
  6766  0002C2                     getDeviceIDString@F17550:
  6767                           	opt stack 0
  6768  0002C2                     	ds	6
  6769  0002C8                     _Irms_offset:
  6770                           	opt stack 0
  6771  0002C8                     	ds	4
  6772  0002CC                     _Vpk_const:
  6773                           	opt stack 0
  6774  0002CC                     	ds	4
  6775  0002D0                     _Temp_ADC_Offset:
  6776                           	opt stack 0
  6777  0002D0                     	ds	4
  6778                           tblptru	equ	0xFF8
  6779                           tblptrh	equ	0xFF7
  6780                           tblptrl	equ	0xFF6
  6781                           tablat	equ	0xFF5
  6782                           postinc0	equ	0xFEE
  6783                           wreg	equ	0xFE8
  6784                           postdec1	equ	0xFE5
  6785                           fsr1l	equ	0xFE1
  6786                           
  6787                           	psect	bssBANK3
  6788  000300                     __pbssBANK3:
  6789                           	opt stack 0
  6790  000300                     _eusart2TxBuffer:
  6791                           	opt stack 0
  6792  000300                     	ds	128
  6793                           tblptru	equ	0xFF8
  6794                           tblptrh	equ	0xFF7
  6795                           tblptrl	equ	0xFF6
  6796                           tablat	equ	0xFF5
  6797                           postinc0	equ	0xFEE
  6798                           wreg	equ	0xFE8
  6799                           postdec1	equ	0xFE5
  6800                           fsr1l	equ	0xFE1
  6801                           
  6802                           	psect	cstackBANK3
  6803  000380                     __pcstackBANK3:
  6804                           	opt stack 0
  6805  000380                     ringBufferLUT@channel_name:
  6806                           	opt stack 0
  6807                           
  6808                           ; 22 bytes @ 0x0
  6809  000380                     	ds	22
  6810  000396                     ringBufferLUT@angle_degrees:
  6811                           	opt stack 0
  6812                           
  6813                           ; 4 bytes @ 0x16
  6814  000396                     	ds	4
  6815  00039A                     ringBufferLUT@max_current_print:
  6816                           	opt stack 0
  6817                           
  6818                           ; 4 bytes @ 0x1A
  6819  00039A                     	ds	4
  6820  00039E                     ringBufferLUT@max_Power_print:
  6821                           	opt stack 0
  6822                           
  6823                           ; 4 bytes @ 0x1E
  6824  00039E                     	ds	4
  6825  0003A2                     ringBufferLUT@arg_buff:
  6826                           	opt stack 0
  6827                           
  6828                           ; 3 bytes @ 0x22
  6829  0003A2                     	ds	3
  6830  0003A5                     ringBufferLUT@index:
  6831                           	opt stack 0
  6832                           
  6833                           ; 2 bytes @ 0x25
  6834  0003A5                     	ds	2
  6835  0003A7                     ringBufferLUT@percentage:
  6836                           	opt stack 0
  6837                           
  6838                           ; 2 bytes @ 0x27
  6839  0003A7                     	ds	2
  6840  0003A9                     ringBufferLUT@userID:
  6841                           	opt stack 0
  6842                           
  6843                           ; 2 bytes @ 0x29
  6844  0003A9                     	ds	2
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           postinc0	equ	0xFEE
  6850                           wreg	equ	0xFE8
  6851                           postdec1	equ	0xFE5
  6852                           fsr1l	equ	0xFE1
  6853                           
  6854                           	psect	cstackBANK2
  6855  0002D4                     __pcstackBANK2:
  6856                           	opt stack 0
  6857  0002D4                     terminal_textAttributes@foreground_color:
  6858                           	opt stack 0
  6859                           
  6860                           ; 1 bytes @ 0x0
  6861  0002D4                     	ds	1
  6862  0002D5                     terminal_textAttributes@output_buff:
  6863                           	opt stack 0
  6864                           
  6865                           ; 15 bytes @ 0x1
  6866  0002D5                     	ds	15
  6867  0002E4                     terminal_ringBufferPull@charNumber:
  6868                           	opt stack 0
  6869                           
  6870                           ; 2 bytes @ 0x10
  6871  0002E4                     	ds	2
  6872  0002E6                     terminal_ringBufferPull@index_2412:
  6873                           	opt stack 0
  6874                           
  6875                           ; 2 bytes @ 0x12
  6876  0002E6                     	ds	2
  6877  0002E8                     terminal_ringBufferPull@index:
  6878                           	opt stack 0
  6879                           
  6880                           ; 2 bytes @ 0x14
  6881  0002E8                     	ds	2
  6882  0002EA                     ??_main:
  6883                           
  6884                           ; 1 bytes @ 0x16
  6885  0002EA                     	ds	2
  6886                           tblptru	equ	0xFF8
  6887                           tblptrh	equ	0xFF7
  6888                           tblptrl	equ	0xFF6
  6889                           tablat	equ	0xFF5
  6890                           postinc0	equ	0xFEE
  6891                           wreg	equ	0xFE8
  6892                           postdec1	equ	0xFE5
  6893                           fsr1l	equ	0xFE1
  6894                           
  6895                           	psect	cstackBANK1
  6896  000100                     __pcstackBANK1:
  6897                           	opt stack 0
  6898  000100                     ??_heartbeatTimerCallback:
  6899  000100                     ADCC_StartConversion@channel:
  6900                           	opt stack 0
  6901  000100                     TMR7_WriteTimer@timerVal:
  6902                           	opt stack 0
  6903                           
  6904                           ; 2 bytes @ 0x0
  6905  000100                     	ds	1
  6906  000101                     
  6907                           ; 1 bytes @ 0x1
  6908  000101                     	ds	1
  6909  000102                     ??_INTERRUPT_InterruptManagerLow:
  6910  000102                     
  6911                           ; 1 bytes @ 0x2
  6912  000102                     	ds	21
  6913  000117                     ??_isdigit:
  6914  000117                     ?_strlen:
  6915                           	opt stack 0
  6916  000117                     ?_strcmp:
  6917                           	opt stack 0
  6918  000117                     ?_getCauseOfResetString:
  6919                           	opt stack 0
  6920  000117                     ?_strchr:
  6921                           	opt stack 0
  6922  000117                     ?___wmul:
  6923                           	opt stack 0
  6924  000117                     ?___awmod:
  6925                           	opt stack 0
  6926  000117                     ?__tdiv_to_l_:
  6927                           	opt stack 0
  6928  000117                     ?__div_to_l_:
  6929                           	opt stack 0
  6930  000117                     ?___lldiv:
  6931                           	opt stack 0
  6932  000117                     ?___xxtofl:
  6933                           	opt stack 0
  6934  000117                     EUSART2_Read@readValue:
  6935                           	opt stack 0
  6936  000117                     EUSART2_Write@txData:
  6937                           	opt stack 0
  6938  000117                     getCauseOfReset@return_reset_cause:
  6939                           	opt stack 0
  6940  000117                     DATAEE_WriteByte@bAdd:
  6941                           	opt stack 0
  6942  000117                     DATAEE_ReadByte@bAdd:
  6943                           	opt stack 0
  6944  000117                     ___wmul@multiplier:
  6945                           	opt stack 0
  6946  000117                     ___awmod@dividend:
  6947                           	opt stack 0
  6948  000117                     strcat@to:
  6949                           	opt stack 0
  6950  000117                     strcmp@s1:
  6951                           	opt stack 0
  6952  000117                     strcpy@to:
  6953                           	opt stack 0
  6954  000117                     strlen@s:
  6955                           	opt stack 0
  6956  000117                     strncpy@to:
  6957                           	opt stack 0
  6958  000117                     strchr@ptr:
  6959                           	opt stack 0
  6960  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  6961                           	opt stack 0
  6962  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  6963                           	opt stack 0
  6964  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  6965                           	opt stack 0
  6966  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  6967                           	opt stack 0
  6968  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  6969                           	opt stack 0
  6970  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  6971                           	opt stack 0
  6972  000117                     __tdiv_to_l_@f1:
  6973                           	opt stack 0
  6974  000117                     FLASH_ReadByte@flashAddr:
  6975                           	opt stack 0
  6976  000117                     __div_to_l_@f1:
  6977                           	opt stack 0
  6978  000117                     ___flge@ff1:
  6979                           	opt stack 0
  6980  000117                     ___lldiv@dividend:
  6981                           	opt stack 0
  6982  000117                     ___xxtofl@val:
  6983                           	opt stack 0
  6984                           
  6985                           ; 4 bytes @ 0x17
  6986  000117                     	ds	1
  6987  000118                     putch@txData:
  6988                           	opt stack 0
  6989  000118                     _isdigit$3225:
  6990                           	opt stack 0
  6991                           
  6992                           ; 1 bytes @ 0x18
  6993  000118                     	ds	1
  6994  000119                     ??_strlen:
  6995  000119                     ?_readDoubleFromEEPROM:
  6996                           	opt stack 0
  6997  000119                     DATAEE_WriteByte@bData:
  6998                           	opt stack 0
  6999  000119                     getCauseOfResetString@r:
  7000                           	opt stack 0
  7001  000119                     isdigit@c:
  7002                           	opt stack 0
  7003  000119                     readDoubleFromEEPROM@starting_address:
  7004                           	opt stack 0
  7005  000119                     ___wmul@multiplicand:
  7006                           	opt stack 0
  7007  000119                     ___awmod@divisor:
  7008                           	opt stack 0
  7009  000119                     strcat@from:
  7010                           	opt stack 0
  7011  000119                     strcmp@s2:
  7012                           	opt stack 0
  7013  000119                     strcpy@from:
  7014                           	opt stack 0
  7015  000119                     strncpy@from:
  7016                           	opt stack 0
  7017  000119                     strchr@chr:
  7018                           	opt stack 0
  7019                           
  7020                           ; 2 bytes @ 0x19
  7021  000119                     	ds	1
  7022  00011A                     ??_TMR7_Initialize:
  7023  00011A                     ??_TMR5_Initialize:
  7024  00011A                     DATAEE_WriteByte@GIEBitValue:
  7025                           	opt stack 0
  7026  00011A                     __tdiv_to_l_@f2:
  7027                           	opt stack 0
  7028                           
  7029                           ; 3 bytes @ 0x1A
  7030  00011A                     	ds	1
  7031  00011B                     ??_strcmp:
  7032  00011B                     ??___xxtofl:
  7033  00011B                     ?_FLASH_ReadWord:
  7034                           	opt stack 0
  7035  00011B                     ___awmod@counter:
  7036                           	opt stack 0
  7037  00011B                     ___wmul@product:
  7038                           	opt stack 0
  7039  00011B                     strcat@cp:
  7040                           	opt stack 0
  7041  00011B                     strcpy@cp:
  7042                           	opt stack 0
  7043  00011B                     strlen@cp:
  7044                           	opt stack 0
  7045  00011B                     strncpy@size:
  7046                           	opt stack 0
  7047  00011B                     FLASH_ReadWord@flashAddr:
  7048                           	opt stack 0
  7049  00011B                     writeDoubleToEEPROM@input_double:
  7050                           	opt stack 0
  7051  00011B                     __div_to_l_@f2:
  7052                           	opt stack 0
  7053  00011B                     ___flge@ff2:
  7054                           	opt stack 0
  7055  00011B                     ___lldiv@divisor:
  7056                           	opt stack 0
  7057                           
  7058                           ; 4 bytes @ 0x1B
  7059  00011B                     	ds	1
  7060  00011C                     ___awmod@sign:
  7061                           	opt stack 0
  7062  00011C                     strcmp@r:
  7063                           	opt stack 0
  7064                           
  7065                           ; 1 bytes @ 0x1C
  7066  00011C                     	ds	1
  7067  00011D                     ??__tdiv_to_l_:
  7068  00011D                     ?_atoi:
  7069                           	opt stack 0
  7070  00011D                     ?_strncmp:
  7071                           	opt stack 0
  7072  00011D                     ?___awdiv:
  7073                           	opt stack 0
  7074  00011D                     atoi@s:
  7075                           	opt stack 0
  7076  00011D                     ___awdiv@dividend:
  7077                           	opt stack 0
  7078  00011D                     strncpy@cp:
  7079                           	opt stack 0
  7080  00011D                     strncmp@s1:
  7081                           	opt stack 0
  7082  00011D                     readDoubleFromEEPROM@output_data:
  7083                           	opt stack 0
  7084                           
  7085                           ; 4 bytes @ 0x1D
  7086  00011D                     	ds	2
  7087  00011F                     ??_atoi:
  7088  00011F                     ??_FLASH_ReadWord:
  7089  00011F                     ??___flge:
  7090  00011F                     ___lldiv@counter:
  7091                           	opt stack 0
  7092  00011F                     ___xxtofl@sign:
  7093                           	opt stack 0
  7094  00011F                     writeDoubleToEEPROM@starting_address:
  7095                           	opt stack 0
  7096  00011F                     ___awdiv@divisor:
  7097                           	opt stack 0
  7098  00011F                     strncmp@s2:
  7099                           	opt stack 0
  7100  00011F                     __div_to_l_@quot:
  7101                           	opt stack 0
  7102                           
  7103                           ; 4 bytes @ 0x1F
  7104  00011F                     	ds	1
  7105  000120                     ___xxtofl@exp:
  7106                           	opt stack 0
  7107  000120                     __tdiv_to_l_@quot:
  7108                           	opt stack 0
  7109  000120                     ___lldiv@quotient:
  7110                           	opt stack 0
  7111                           
  7112                           ; 4 bytes @ 0x20
  7113  000120                     	ds	1
  7114  000121                     atoi@sign:
  7115                           	opt stack 0
  7116  000121                     ___awdiv@counter:
  7117                           	opt stack 0
  7118  000121                     readDoubleFromEEPROM@byte_index:
  7119                           	opt stack 0
  7120  000121                     strncmp@len:
  7121                           	opt stack 0
  7122  000121                     writeDoubleToEEPROM@input_data:
  7123                           	opt stack 0
  7124  000121                     ___xxtofl@arg:
  7125                           	opt stack 0
  7126                           
  7127                           ; 4 bytes @ 0x21
  7128  000121                     	ds	1
  7129  000122                     ??_getMajorRevisionID:
  7130  000122                     ?_getDeviceID:
  7131                           	opt stack 0
  7132  000122                     ?_getUserID:
  7133                           	opt stack 0
  7134  000122                     ___awdiv@sign:
  7135                           	opt stack 0
  7136  000122                     getMinorRevisionID@REVID_RAW:
  7137                           	opt stack 0
  7138  000122                     atoi@a:
  7139                           	opt stack 0
  7140                           
  7141                           ; 2 bytes @ 0x22
  7142  000122                     	ds	1
  7143  000123                     ??_strncmp:
  7144  000123                     __div_to_l_@cntr:
  7145                           	opt stack 0
  7146  000123                     ___awdiv@quotient:
  7147                           	opt stack 0
  7148                           
  7149                           ; 2 bytes @ 0x23
  7150  000123                     	ds	1
  7151  000124                     ?_getDeviceIDString:
  7152                           	opt stack 0
  7153  000124                     ?___llmod:
  7154                           	opt stack 0
  7155  000124                     getUserID@inputUserID:
  7156                           	opt stack 0
  7157  000124                     __div_to_l_@exp1:
  7158                           	opt stack 0
  7159  000124                     __tdiv_to_l_@cntr:
  7160                           	opt stack 0
  7161  000124                     getDeviceIDString@inputDevID:
  7162                           	opt stack 0
  7163  000124                     ___llmod@dividend:
  7164                           	opt stack 0
  7165                           
  7166                           ; 4 bytes @ 0x24
  7167  000124                     	ds	1
  7168  000125                     ?___flneg:
  7169                           	opt stack 0
  7170  000125                     __tdiv_to_l_@exp1:
  7171                           	opt stack 0
  7172  000125                     getMajorRevisionID@REVID_RAW:
  7173                           	opt stack 0
  7174  000125                     writeDoubleToEEPROM@byte_index:
  7175                           	opt stack 0
  7176  000125                     getUserID@initialOffset:
  7177                           	opt stack 0
  7178  000125                     ___flneg@f1:
  7179                           	opt stack 0
  7180                           
  7181                           ; 4 bytes @ 0x25
  7182  000125                     	ds	1
  7183  000126                     ??_getDeviceIDString:
  7184  000126                     ?_strstr:
  7185                           	opt stack 0
  7186  000126                     strstr@s1:
  7187                           	opt stack 0
  7188                           
  7189                           ; 2 bytes @ 0x26
  7190  000126                     	ds	2
  7191  000128                     strstr@s2:
  7192                           	opt stack 0
  7193  000128                     ___llmod@divisor:
  7194                           	opt stack 0
  7195  000128                     getDeviceIDString@strings:
  7196                           	opt stack 0
  7197                           
  7198                           ; 6 bytes @ 0x28
  7199  000128                     	ds	1
  7200  000129                     ?___fladd:
  7201                           	opt stack 0
  7202  000129                     getUserID@IDOffset:
  7203                           	opt stack 0
  7204  000129                     ___fladd@b:
  7205                           	opt stack 0
  7206                           
  7207                           ; 4 bytes @ 0x29
  7208  000129                     	ds	1
  7209  00012A                     
  7210                           ; 1 bytes @ 0x2A
  7211  00012A                     	ds	2
  7212  00012C                     ___llmod@counter:
  7213                           	opt stack 0
  7214                           
  7215                           ; 1 bytes @ 0x2C
  7216  00012C                     	ds	1
  7217  00012D                     ___fladd@a:
  7218                           	opt stack 0
  7219                           
  7220                           ; 4 bytes @ 0x2D
  7221  00012D                     	ds	4
  7222  000131                     ??___fladd:
  7223                           
  7224                           ; 1 bytes @ 0x31
  7225  000131                     	ds	8
  7226  000139                     ___fladd@signs:
  7227                           	opt stack 0
  7228                           
  7229                           ; 1 bytes @ 0x39
  7230  000139                     	ds	1
  7231  00013A                     ___fladd@aexp:
  7232                           	opt stack 0
  7233                           
  7234                           ; 1 bytes @ 0x3A
  7235  00013A                     	ds	1
  7236  00013B                     ___fladd@bexp:
  7237                           	opt stack 0
  7238                           
  7239                           ; 1 bytes @ 0x3B
  7240  00013B                     	ds	1
  7241  00013C                     ___fladd@grs:
  7242                           	opt stack 0
  7243                           
  7244                           ; 1 bytes @ 0x3C
  7245  00013C                     	ds	1
  7246  00013D                     ?___fldiv:
  7247                           	opt stack 0
  7248  00013D                     ?___flsub:
  7249                           	opt stack 0
  7250  00013D                     ___flsub@b:
  7251                           	opt stack 0
  7252  00013D                     ___fldiv@b:
  7253                           	opt stack 0
  7254                           
  7255                           ; 4 bytes @ 0x3D
  7256  00013D                     	ds	4
  7257  000141                     ___flsub@a:
  7258                           	opt stack 0
  7259  000141                     ___fldiv@a:
  7260                           	opt stack 0
  7261                           
  7262                           ; 4 bytes @ 0x41
  7263  000141                     	ds	4
  7264  000145                     ??___fldiv:
  7265  000145                     
  7266                           ; 1 bytes @ 0x45
  7267  000145                     	ds	4
  7268  000149                     ___fldiv@sign:
  7269                           	opt stack 0
  7270                           
  7271                           ; 1 bytes @ 0x49
  7272  000149                     	ds	1
  7273  00014A                     ___fldiv@rem:
  7274                           	opt stack 0
  7275                           
  7276                           ; 4 bytes @ 0x4A
  7277  00014A                     	ds	4
  7278  00014E                     ___fldiv@new_exp:
  7279                           	opt stack 0
  7280                           
  7281                           ; 2 bytes @ 0x4E
  7282  00014E                     	ds	2
  7283  000150                     ___fldiv@grs:
  7284                           	opt stack 0
  7285                           
  7286                           ; 4 bytes @ 0x50
  7287  000150                     	ds	4
  7288  000154                     ___fldiv@bexp:
  7289                           	opt stack 0
  7290                           
  7291                           ; 1 bytes @ 0x54
  7292  000154                     	ds	1
  7293  000155                     ___fldiv@aexp:
  7294                           	opt stack 0
  7295                           
  7296                           ; 1 bytes @ 0x55
  7297  000155                     	ds	1
  7298  000156                     ?___flmul:
  7299                           	opt stack 0
  7300  000156                     ___flmul@b:
  7301                           	opt stack 0
  7302                           
  7303                           ; 4 bytes @ 0x56
  7304  000156                     	ds	4
  7305  00015A                     ___flmul@a:
  7306                           	opt stack 0
  7307                           
  7308                           ; 4 bytes @ 0x5A
  7309  00015A                     	ds	4
  7310  00015E                     ??___flmul:
  7311                           
  7312                           ; 1 bytes @ 0x5E
  7313  00015E                     	ds	4
  7314  000162                     ___flmul@sign:
  7315                           	opt stack 0
  7316                           
  7317                           ; 1 bytes @ 0x62
  7318  000162                     	ds	1
  7319  000163                     ___flmul@aexp:
  7320                           	opt stack 0
  7321                           
  7322                           ; 1 bytes @ 0x63
  7323  000163                     	ds	1
  7324  000164                     ___flmul@bexp:
  7325                           	opt stack 0
  7326                           
  7327                           ; 1 bytes @ 0x64
  7328  000164                     	ds	1
  7329  000165                     ___flmul@grs:
  7330                           	opt stack 0
  7331                           
  7332                           ; 4 bytes @ 0x65
  7333  000165                     	ds	4
  7334  000169                     ___flmul@prod:
  7335                           	opt stack 0
  7336                           
  7337                           ; 4 bytes @ 0x69
  7338  000169                     	ds	4
  7339  00016D                     ___flmul@temp:
  7340                           	opt stack 0
  7341                           
  7342                           ; 2 bytes @ 0x6D
  7343  00016D                     	ds	2
  7344  00016F                     ?_fround:
  7345                           	opt stack 0
  7346  00016F                     ?_scale:
  7347                           	opt stack 0
  7348                           
  7349                           ; 4 bytes @ 0x6F
  7350  00016F                     	ds	4
  7351  000173                     _fround$3938:
  7352                           	opt stack 0
  7353  000173                     _scale$3939:
  7354                           	opt stack 0
  7355                           
  7356                           ; 4 bytes @ 0x73
  7357  000173                     	ds	4
  7358  000177                     scale@scl:
  7359                           	opt stack 0
  7360  000177                     _fround$3937:
  7361                           	opt stack 0
  7362                           
  7363                           ; 4 bytes @ 0x77
  7364  000177                     	ds	1
  7365  000178                     ?___fltol:
  7366                           	opt stack 0
  7367  000178                     ___fltol@f1:
  7368                           	opt stack 0
  7369                           
  7370                           ; 4 bytes @ 0x78
  7371  000178                     	ds	3
  7372  00017B                     fround@prec:
  7373                           	opt stack 0
  7374                           
  7375                           ; 1 bytes @ 0x7B
  7376  00017B                     	ds	1
  7377  00017C                     ??___fltol:
  7378                           
  7379                           ; 1 bytes @ 0x7C
  7380  00017C                     	ds	4
  7381  000180                     ___fltol@sign1:
  7382                           	opt stack 0
  7383                           
  7384                           ; 1 bytes @ 0x80
  7385  000180                     	ds	1
  7386  000181                     ___fltol@exp1:
  7387                           	opt stack 0
  7388                           
  7389                           ; 1 bytes @ 0x81
  7390  000181                     	ds	1
  7391  000182                     ?_printf:
  7392                           	opt stack 0
  7393  000182                     printf@f:
  7394                           	opt stack 0
  7395                           
  7396                           ; 2 bytes @ 0x82
  7397  000182                     	ds	10
  7398  00018C                     ??_printf:
  7399                           
  7400                           ; 1 bytes @ 0x8C
  7401  00018C                     	ds	6
  7402  000192                     _printf$3940:
  7403                           	opt stack 0
  7404                           
  7405                           ; 4 bytes @ 0x92
  7406  000192                     	ds	4
  7407  000196                     printf@idx:
  7408                           	opt stack 0
  7409                           
  7410                           ; 1 bytes @ 0x96
  7411  000196                     	ds	1
  7412  000197                     printf@cp:
  7413                           	opt stack 0
  7414                           
  7415                           ; 2 bytes @ 0x97
  7416  000197                     	ds	2
  7417  000199                     printf@len:
  7418                           	opt stack 0
  7419                           
  7420                           ; 2 bytes @ 0x99
  7421  000199                     	ds	2
  7422  00019B                     printf@ap:
  7423                           	opt stack 0
  7424                           
  7425                           ; 2 bytes @ 0x9B
  7426  00019B                     	ds	2
  7427  00019D                     printf@tmpval:
  7428                           	opt stack 0
  7429                           
  7430                           ; 4 bytes @ 0x9D
  7431  00019D                     	ds	4
  7432  0001A1                     printf@exp:
  7433                           	opt stack 0
  7434                           
  7435                           ; 2 bytes @ 0xA1
  7436  0001A1                     	ds	2
  7437  0001A3                     printf@fval:
  7438                           	opt stack 0
  7439                           
  7440                           ; 4 bytes @ 0xA3
  7441  0001A3                     	ds	4
  7442  0001A7                     printf@val:
  7443                           	opt stack 0
  7444                           
  7445                           ; 4 bytes @ 0xA7
  7446  0001A7                     	ds	4
  7447  0001AB                     printf@flag:
  7448                           	opt stack 0
  7449                           
  7450                           ; 2 bytes @ 0xAB
  7451  0001AB                     	ds	2
  7452  0001AD                     printf@width:
  7453                           	opt stack 0
  7454                           
  7455                           ; 2 bytes @ 0xAD
  7456  0001AD                     	ds	2
  7457  0001AF                     printf@prec:
  7458                           	opt stack 0
  7459                           
  7460                           ; 2 bytes @ 0xAF
  7461  0001AF                     	ds	2
  7462  0001B1                     printf@c:
  7463                           	opt stack 0
  7464                           
  7465                           ; 1 bytes @ 0xB1
  7466  0001B1                     	ds	1
  7467  0001B2                     terminal_textAttributes@background_color:
  7468                           	opt stack 0
  7469                           
  7470                           ; 1 bytes @ 0xB2
  7471  0001B2                     	ds	1
  7472  0001B3                     terminal_textAttributes@input_attribute:
  7473                           	opt stack 0
  7474                           
  7475                           ; 1 bytes @ 0xB3
  7476  0001B3                     	ds	1
  7477  0001B4                     ringBufferLUT@line:
  7478                           	opt stack 0
  7479                           
  7480                           ; 2 bytes @ 0xB4
  7481  0001B4                     	ds	2
  7482  0001B6                     ??_ringBufferLUT:
  7483                           
  7484                           ; 1 bytes @ 0xB6
  7485  0001B6                     	ds	2
  7486  0001B8                     ??_terminal_ringBufferPull:
  7487                           
  7488                           ; 1 bytes @ 0xB8
  7489  0001B8                     	ds	3
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           postinc0	equ	0xFEE
  7495                           wreg	equ	0xFE8
  7496                           postdec1	equ	0xFE5
  7497                           fsr1l	equ	0xFE1
  7498                           
  7499                           	psect	cstackBANK0
  7500  000060                     __pcstackBANK0:
  7501                           	opt stack 0
  7502  000060                     ??i2___fladd:
  7503                           
  7504                           ; 1 bytes @ 0x0
  7505  000060                     	ds	8
  7506  000068                     i2___fladd@signs:
  7507                           	opt stack 0
  7508                           
  7509                           ; 1 bytes @ 0x8
  7510  000068                     	ds	1
  7511  000069                     i2___fladd@aexp:
  7512                           	opt stack 0
  7513                           
  7514                           ; 1 bytes @ 0x9
  7515  000069                     	ds	1
  7516  00006A                     i2___fladd@bexp:
  7517                           	opt stack 0
  7518                           
  7519                           ; 1 bytes @ 0xA
  7520  00006A                     	ds	1
  7521  00006B                     i2___fladd@grs:
  7522                           	opt stack 0
  7523                           
  7524                           ; 1 bytes @ 0xB
  7525  00006B                     	ds	1
  7526  00006C                     ?_sqrt:
  7527                           	opt stack 0
  7528  00006C                     ?_eval_poly:
  7529                           	opt stack 0
  7530  00006C                     ?i2___fltol:
  7531                           	opt stack 0
  7532  00006C                     eval_poly@x:
  7533                           	opt stack 0
  7534  00006C                     sqrt@a:
  7535                           	opt stack 0
  7536  00006C                     i2___fltol@f1:
  7537                           	opt stack 0
  7538                           
  7539                           ; 4 bytes @ 0xC
  7540  00006C                     	ds	4
  7541  000070                     ??_sqrt:
  7542  000070                     ??i2___fltol:
  7543  000070                     eval_poly@d:
  7544                           	opt stack 0
  7545                           
  7546                           ; 2 bytes @ 0x10
  7547  000070                     	ds	2
  7548  000072                     eval_poly@n:
  7549                           	opt stack 0
  7550                           
  7551                           ; 2 bytes @ 0x12
  7552  000072                     	ds	2
  7553  000074                     ??_eval_poly:
  7554  000074                     sqrt@sign:
  7555                           	opt stack 0
  7556  000074                     i2___fltol@sign1:
  7557                           	opt stack 0
  7558                           
  7559                           ; 1 bytes @ 0x14
  7560  000074                     	ds	1
  7561  000075                     sqrt@i:
  7562                           	opt stack 0
  7563  000075                     i2___fltol@exp1:
  7564                           	opt stack 0
  7565                           
  7566                           ; 1 bytes @ 0x15
  7567  000075                     	ds	1
  7568  000076                     ?_abs:
  7569                           	opt stack 0
  7570  000076                     ?_floor:
  7571                           	opt stack 0
  7572  000076                     abs@a:
  7573                           	opt stack 0
  7574  000076                     sqrt@tfrac:
  7575                           	opt stack 0
  7576  000076                     floor@x:
  7577                           	opt stack 0
  7578                           
  7579                           ; 4 bytes @ 0x16
  7580  000076                     	ds	2
  7581  000078                     ??_abs:
  7582  000078                     eval_poly@res:
  7583                           	opt stack 0
  7584                           
  7585                           ; 4 bytes @ 0x18
  7586  000078                     	ds	2
  7587  00007A                     sqrt@p:
  7588                           	opt stack 0
  7589  00007A                     floor@i:
  7590                           	opt stack 0
  7591                           
  7592                           ; 4 bytes @ 0x1A
  7593  00007A                     	ds	1
  7594  00007B                     sqrt@grs:
  7595                           	opt stack 0
  7596                           
  7597                           ; 4 bytes @ 0x1B
  7598  00007B                     	ds	1
  7599  00007C                     ?_atan:
  7600                           	opt stack 0
  7601  00007C                     atan@f:
  7602                           	opt stack 0
  7603                           
  7604                           ; 4 bytes @ 0x1C
  7605  00007C                     	ds	2
  7606  00007E                     floor@expon:
  7607                           	opt stack 0
  7608                           
  7609                           ; 2 bytes @ 0x1E
  7610  00007E                     	ds	1
  7611  00007F                     sqrt@exp:
  7612                           	opt stack 0
  7613                           
  7614                           ; 2 bytes @ 0x1F
  7615  00007F                     	ds	1
  7616  000080                     ?i2___flsub:
  7617                           	opt stack 0
  7618  000080                     atan@y:
  7619                           	opt stack 0
  7620  000080                     i2___flsub@b:
  7621                           	opt stack 0
  7622                           
  7623                           ; 4 bytes @ 0x20
  7624  000080                     	ds	1
  7625  000081                     sqrt@root:
  7626                           	opt stack 0
  7627                           
  7628                           ; 4 bytes @ 0x21
  7629  000081                     	ds	3
  7630  000084                     atan@x:
  7631                           	opt stack 0
  7632  000084                     i2___flsub@a:
  7633                           	opt stack 0
  7634                           
  7635                           ; 4 bytes @ 0x24
  7636  000084                     	ds	1
  7637  000085                     sqrt@frac:
  7638                           	opt stack 0
  7639                           
  7640                           ; 4 bytes @ 0x25
  7641  000085                     	ds	3
  7642  000088                     ?i2_printf:
  7643                           	opt stack 0
  7644  000088                     ?_sin:
  7645                           	opt stack 0
  7646  000088                     atan@recip:
  7647                           	opt stack 0
  7648  000088                     i2printf@f:
  7649                           	opt stack 0
  7650  000088                     sin@f:
  7651                           	opt stack 0
  7652                           
  7653                           ; 4 bytes @ 0x28
  7654  000088                     	ds	1
  7655  000089                     atan@val_squared:
  7656                           	opt stack 0
  7657                           
  7658                           ; 4 bytes @ 0x29
  7659  000089                     	ds	1
  7660  00008A                     ??i2_printf:
  7661                           
  7662                           ; 1 bytes @ 0x2A
  7663  00008A                     	ds	2
  7664  00008C                     sin@y:
  7665                           	opt stack 0
  7666                           
  7667                           ; 4 bytes @ 0x2C
  7668  00008C                     	ds	1
  7669  00008D                     atan@val:
  7670                           	opt stack 0
  7671                           
  7672                           ; 4 bytes @ 0x2D
  7673  00008D                     	ds	3
  7674  000090                     _sin$4139:
  7675                           	opt stack 0
  7676  000090                     i2_printf$4143:
  7677                           	opt stack 0
  7678                           
  7679                           ; 4 bytes @ 0x30
  7680  000090                     	ds	1
  7681  000091                     ?_asin:
  7682                           	opt stack 0
  7683  000091                     asin@x:
  7684                           	opt stack 0
  7685                           
  7686                           ; 4 bytes @ 0x31
  7687  000091                     	ds	3
  7688  000094                     i2printf@idx:
  7689                           	opt stack 0
  7690  000094                     sin@x2:
  7691                           	opt stack 0
  7692                           
  7693                           ; 4 bytes @ 0x34
  7694  000094                     	ds	1
  7695  000095                     i2printf@cp:
  7696                           	opt stack 0
  7697  000095                     asin@sgn:
  7698                           	opt stack 0
  7699                           
  7700                           ; 4 bytes @ 0x35
  7701  000095                     	ds	2
  7702  000097                     i2printf@len:
  7703                           	opt stack 0
  7704                           
  7705                           ; 2 bytes @ 0x37
  7706  000097                     	ds	1
  7707  000098                     sin@sgn:
  7708                           	opt stack 0
  7709                           
  7710                           ; 1 bytes @ 0x38
  7711  000098                     	ds	1
  7712  000099                     ?_currentMeasuredToPeak:
  7713                           	opt stack 0
  7714  000099                     i2printf@ap:
  7715                           	opt stack 0
  7716  000099                     currentMeasuredToPeak@Measured:
  7717                           	opt stack 0
  7718  000099                     _asin$4138:
  7719                           	opt stack 0
  7720                           
  7721                           ; 4 bytes @ 0x39
  7722  000099                     	ds	2
  7723  00009B                     i2printf@tmpval:
  7724                           	opt stack 0
  7725                           
  7726                           ; 4 bytes @ 0x3B
  7727  00009B                     	ds	2
  7728  00009D                     currentMeasuredToPeak@Angle:
  7729                           	opt stack 0
  7730  00009D                     _asin$4137:
  7731                           	opt stack 0
  7732                           
  7733                           ; 4 bytes @ 0x3D
  7734  00009D                     	ds	2
  7735  00009F                     i2printf@exp:
  7736                           	opt stack 0
  7737                           
  7738                           ; 2 bytes @ 0x3F
  7739  00009F                     	ds	2
  7740  0000A1                     currentMeasuredToPeak@Peak:
  7741                           	opt stack 0
  7742  0000A1                     asin@y:
  7743                           	opt stack 0
  7744  0000A1                     i2printf@val:
  7745                           	opt stack 0
  7746                           
  7747                           ; 4 bytes @ 0x41
  7748  0000A1                     	ds	4
  7749  0000A5                     i2printf@fval:
  7750                           	opt stack 0
  7751  0000A5                     _asin$4136:
  7752                           	opt stack 0
  7753                           
  7754                           ; 4 bytes @ 0x45
  7755  0000A5                     	ds	4
  7756  0000A9                     ?_acos:
  7757                           	opt stack 0
  7758  0000A9                     i2printf@flag:
  7759                           	opt stack 0
  7760  0000A9                     acos@x:
  7761                           	opt stack 0
  7762                           
  7763                           ; 4 bytes @ 0x49
  7764  0000A9                     	ds	2
  7765  0000AB                     i2printf@width:
  7766                           	opt stack 0
  7767                           
  7768                           ; 2 bytes @ 0x4B
  7769  0000AB                     	ds	2
  7770  0000AD                     i2printf@prec:
  7771                           	opt stack 0
  7772  0000AD                     _acos$4135:
  7773                           	opt stack 0
  7774                           
  7775                           ; 4 bytes @ 0x4D
  7776  0000AD                     	ds	2
  7777  0000AF                     i2printf@c:
  7778                           	opt stack 0
  7779                           
  7780                           ; 1 bytes @ 0x4F
  7781  0000AF                     	ds	2
  7782  0000B1                     ?_peakToRMS:
  7783                           	opt stack 0
  7784  0000B1                     peakToRMS@Peak:
  7785                           	opt stack 0
  7786                           
  7787                           ; 4 bytes @ 0x51
  7788  0000B1                     	ds	4
  7789  0000B5                     peakToRMS@Angle:
  7790                           	opt stack 0
  7791                           
  7792                           ; 4 bytes @ 0x55
  7793  0000B5                     	ds	4
  7794  0000B9                     _peakToRMS$4128:
  7795                           	opt stack 0
  7796                           
  7797                           ; 4 bytes @ 0x59
  7798  0000B9                     	ds	4
  7799  0000BD                     _peakToRMS$4129:
  7800                           	opt stack 0
  7801                           
  7802                           ; 4 bytes @ 0x5D
  7803  0000BD                     	ds	4
  7804  0000C1                     _peakToRMS$4127:
  7805                           	opt stack 0
  7806                           
  7807                           ; 4 bytes @ 0x61
  7808  0000C1                     	ds	4
  7809  0000C5                     peakToRMS@RMS:
  7810                           	opt stack 0
  7811                           
  7812                           ; 4 bytes @ 0x65
  7813  0000C5                     	ds	4
  7814  0000C9                     _ADCPostProcessingCallback$4132:
  7815                           	opt stack 0
  7816                           
  7817                           ; 4 bytes @ 0x69
  7818  0000C9                     	ds	4
  7819  0000CD                     _ADCPostProcessingCallback$4133:
  7820                           	opt stack 0
  7821                           
  7822                           ; 4 bytes @ 0x6D
  7823  0000CD                     	ds	4
  7824  0000D1                     _ADCPostProcessingCallback$4134:
  7825                           	opt stack 0
  7826                           
  7827                           ; 4 bytes @ 0x71
  7828  0000D1                     	ds	4
  7829  0000D5                     ADCPostProcessingCallback@current_adc_channel:
  7830                           	opt stack 0
  7831                           
  7832                           ; 1 bytes @ 0x75
  7833  0000D5                     	ds	1
  7834  0000D6                     _ADCPostProcessingCallback$4130:
  7835                           	opt stack 0
  7836                           
  7837                           ; 4 bytes @ 0x76
  7838  0000D6                     	ds	4
  7839  0000DA                     _ADCPostProcessingCallback$4131:
  7840                           	opt stack 0
  7841                           
  7842                           ; 4 bytes @ 0x7A
  7843  0000DA                     	ds	4
  7844  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
  7845                           
  7846                           ; 1 bytes @ 0x7E
  7847  0000DE                     	ds	18
  7848                           tblptru	equ	0xFF8
  7849                           tblptrh	equ	0xFF7
  7850                           tblptrl	equ	0xFF6
  7851                           tablat	equ	0xFF5
  7852                           postinc0	equ	0xFEE
  7853                           wreg	equ	0xFE8
  7854                           postdec1	equ	0xFE5
  7855                           fsr1l	equ	0xFE1
  7856                           
  7857                           	psect	cstackCOMRAM
  7858  000001                     __pcstackCOMRAM:
  7859                           	opt stack 0
  7860  000001                     ??i2_isdigit:
  7861  000001                     ?_ADCC_GetConversionResult:
  7862                           	opt stack 0
  7863  000001                     ?_ADCC_GetFilterValue:
  7864                           	opt stack 0
  7865  000001                     ?i2___wmul:
  7866                           	opt stack 0
  7867  000001                     ?i2___awmod:
  7868                           	opt stack 0
  7869  000001                     ?i2__div_to_l_:
  7870                           	opt stack 0
  7871  000001                     ?i2__tdiv_to_l_:
  7872                           	opt stack 0
  7873  000001                     ?i2___lldiv:
  7874                           	opt stack 0
  7875  000001                     i2EUSART2_Write@txData:
  7876                           	opt stack 0
  7877  000001                     TMR5_WriteTimer@timerVal:
  7878                           	opt stack 0
  7879  000001                     i2___wmul@multiplier:
  7880                           	opt stack 0
  7881  000001                     i2___awmod@dividend:
  7882                           	opt stack 0
  7883  000001                     i2__tdiv_to_l_@f1:
  7884                           	opt stack 0
  7885  000001                     frexp@value:
  7886                           	opt stack 0
  7887  000001                     i2__div_to_l_@f1:
  7888                           	opt stack 0
  7889  000001                     i2___lldiv@dividend:
  7890                           	opt stack 0
  7891                           
  7892                           ; 4 bytes @ 0x0
  7893  000001                     	ds	1
  7894  000002                     i2putch@txData:
  7895                           	opt stack 0
  7896  000002                     i2_isdigit$3225:
  7897                           	opt stack 0
  7898                           
  7899                           ; 1 bytes @ 0x1
  7900  000002                     	ds	1
  7901  000003                     ??_ADCC_GetConversionResult:
  7902  000003                     ??_ADCC_GetFilterValue:
  7903  000003                     i2isdigit@c:
  7904                           	opt stack 0
  7905  000003                     i2___wmul@multiplicand:
  7906                           	opt stack 0
  7907  000003                     i2___awmod@divisor:
  7908                           	opt stack 0
  7909                           
  7910                           ; 2 bytes @ 0x2
  7911  000003                     	ds	1
  7912  000004                     i2__tdiv_to_l_@f2:
  7913                           	opt stack 0
  7914                           
  7915                           ; 3 bytes @ 0x3
  7916  000004                     	ds	1
  7917  000005                     ?i2___xxtofl:
  7918                           	opt stack 0
  7919  000005                     i2___awmod@counter:
  7920                           	opt stack 0
  7921  000005                     frexp@eptr:
  7922                           	opt stack 0
  7923  000005                     i2___wmul@product:
  7924                           	opt stack 0
  7925  000005                     i2__div_to_l_@f2:
  7926                           	opt stack 0
  7927  000005                     i2___lldiv@divisor:
  7928                           	opt stack 0
  7929  000005                     i2___xxtofl@val:
  7930                           	opt stack 0
  7931                           
  7932                           ; 4 bytes @ 0x4
  7933  000005                     	ds	1
  7934  000006                     i2___awmod@sign:
  7935                           	opt stack 0
  7936                           
  7937                           ; 1 bytes @ 0x5
  7938  000006                     	ds	1
  7939  000007                     ??_frexp:
  7940  000007                     ??i2__tdiv_to_l_:
  7941  000007                     ?i2___awdiv:
  7942                           	opt stack 0
  7943  000007                     i2___awdiv@dividend:
  7944                           	opt stack 0
  7945                           
  7946                           ; 2 bytes @ 0x6
  7947  000007                     	ds	2
  7948  000009                     ??i2___xxtofl:
  7949  000009                     i2___awdiv@divisor:
  7950                           	opt stack 0
  7951  000009                     i2__div_to_l_@quot:
  7952                           	opt stack 0
  7953  000009                     i2___lldiv@quotient:
  7954                           	opt stack 0
  7955                           
  7956                           ; 4 bytes @ 0x8
  7957  000009                     	ds	1
  7958  00000A                     i2__tdiv_to_l_@quot:
  7959                           	opt stack 0
  7960                           
  7961                           ; 4 bytes @ 0x9
  7962  00000A                     	ds	1
  7963  00000B                     i2___awdiv@counter:
  7964                           	opt stack 0
  7965                           
  7966                           ; 1 bytes @ 0xA
  7967  00000B                     	ds	1
  7968  00000C                     i2___awdiv@sign:
  7969                           	opt stack 0
  7970                           
  7971                           ; 1 bytes @ 0xB
  7972  00000C                     	ds	1
  7973  00000D                     i2__div_to_l_@cntr:
  7974                           	opt stack 0
  7975  00000D                     i2___lldiv@counter:
  7976                           	opt stack 0
  7977  00000D                     i2___xxtofl@sign:
  7978                           	opt stack 0
  7979  00000D                     i2___awdiv@quotient:
  7980                           	opt stack 0
  7981                           
  7982                           ; 2 bytes @ 0xC
  7983  00000D                     	ds	1
  7984  00000E                     ?i2___llmod:
  7985                           	opt stack 0
  7986  00000E                     i2__div_to_l_@exp1:
  7987                           	opt stack 0
  7988  00000E                     i2__tdiv_to_l_@cntr:
  7989                           	opt stack 0
  7990  00000E                     i2___xxtofl@exp:
  7991                           	opt stack 0
  7992  00000E                     i2___llmod@dividend:
  7993                           	opt stack 0
  7994                           
  7995                           ; 4 bytes @ 0xD
  7996  00000E                     	ds	1
  7997  00000F                     i2__tdiv_to_l_@exp1:
  7998                           	opt stack 0
  7999  00000F                     i2___xxtofl@arg:
  8000                           	opt stack 0
  8001                           
  8002                           ; 4 bytes @ 0xE
  8003  00000F                     	ds	3
  8004  000012                     i2___llmod@divisor:
  8005                           	opt stack 0
  8006                           
  8007                           ; 4 bytes @ 0x11
  8008  000012                     	ds	1
  8009  000013                     ?i2___fldiv:
  8010                           	opt stack 0
  8011  000013                     i2___fldiv@b:
  8012                           	opt stack 0
  8013                           
  8014                           ; 4 bytes @ 0x12
  8015  000013                     	ds	3
  8016  000016                     i2___llmod@counter:
  8017                           	opt stack 0
  8018                           
  8019                           ; 1 bytes @ 0x15
  8020  000016                     	ds	1
  8021  000017                     i2___fldiv@a:
  8022                           	opt stack 0
  8023                           
  8024                           ; 4 bytes @ 0x16
  8025  000017                     	ds	4
  8026  00001B                     ??i2___fldiv:
  8027                           
  8028                           ; 1 bytes @ 0x1A
  8029  00001B                     	ds	4
  8030  00001F                     i2___fldiv@sign:
  8031                           	opt stack 0
  8032                           
  8033                           ; 1 bytes @ 0x1E
  8034  00001F                     	ds	1
  8035  000020                     i2___fldiv@rem:
  8036                           	opt stack 0
  8037                           
  8038                           ; 4 bytes @ 0x1F
  8039  000020                     	ds	4
  8040  000024                     i2___fldiv@new_exp:
  8041                           	opt stack 0
  8042                           
  8043                           ; 2 bytes @ 0x23
  8044  000024                     	ds	2
  8045  000026                     i2___fldiv@grs:
  8046                           	opt stack 0
  8047                           
  8048                           ; 4 bytes @ 0x25
  8049  000026                     	ds	4
  8050  00002A                     i2___fldiv@bexp:
  8051                           	opt stack 0
  8052                           
  8053                           ; 1 bytes @ 0x29
  8054  00002A                     	ds	1
  8055  00002B                     i2___fldiv@aexp:
  8056                           	opt stack 0
  8057                           
  8058                           ; 1 bytes @ 0x2A
  8059  00002B                     	ds	1
  8060  00002C                     ?i2___flneg:
  8061                           	opt stack 0
  8062  00002C                     i2___flneg@f1:
  8063                           	opt stack 0
  8064                           
  8065                           ; 4 bytes @ 0x2B
  8066  00002C                     	ds	4
  8067  000030                     ?_fabs:
  8068                           	opt stack 0
  8069  000030                     ?i2___flmul:
  8070                           	opt stack 0
  8071  000030                     fabs@d:
  8072                           	opt stack 0
  8073  000030                     i2___flmul@b:
  8074                           	opt stack 0
  8075                           
  8076                           ; 4 bytes @ 0x2F
  8077  000030                     	ds	4
  8078  000034                     i2___flge@ff1:
  8079                           	opt stack 0
  8080  000034                     i2___flmul@a:
  8081                           	opt stack 0
  8082                           
  8083                           ; 4 bytes @ 0x33
  8084  000034                     	ds	4
  8085  000038                     ??i2___flmul:
  8086  000038                     i2___flge@ff2:
  8087                           	opt stack 0
  8088                           
  8089                           ; 4 bytes @ 0x37
  8090  000038                     	ds	4
  8091  00003C                     ??i2___flge:
  8092  00003C                     i2___flmul@sign:
  8093                           	opt stack 0
  8094                           
  8095                           ; 1 bytes @ 0x3B
  8096  00003C                     	ds	1
  8097  00003D                     i2___flmul@aexp:
  8098                           	opt stack 0
  8099                           
  8100                           ; 1 bytes @ 0x3C
  8101  00003D                     	ds	1
  8102  00003E                     i2___flmul@grs:
  8103                           	opt stack 0
  8104                           
  8105                           ; 4 bytes @ 0x3D
  8106  00003E                     	ds	4
  8107  000042                     i2___flmul@bexp:
  8108                           	opt stack 0
  8109                           
  8110                           ; 1 bytes @ 0x41
  8111  000042                     	ds	1
  8112  000043                     i2___flmul@prod:
  8113                           	opt stack 0
  8114                           
  8115                           ; 4 bytes @ 0x42
  8116  000043                     	ds	4
  8117  000047                     i2___flmul@temp:
  8118                           	opt stack 0
  8119                           
  8120                           ; 2 bytes @ 0x46
  8121  000047                     	ds	2
  8122  000049                     ?i2_fround:
  8123                           	opt stack 0
  8124  000049                     ?i2_scale:
  8125                           	opt stack 0
  8126                           
  8127                           ; 4 bytes @ 0x48
  8128  000049                     	ds	4
  8129  00004D                     i2_fround$4141:
  8130                           	opt stack 0
  8131  00004D                     i2_scale$4142:
  8132                           	opt stack 0
  8133                           
  8134                           ; 4 bytes @ 0x4C
  8135  00004D                     	ds	4
  8136  000051                     i2scale@scl:
  8137                           	opt stack 0
  8138  000051                     i2_fround$4140:
  8139                           	opt stack 0
  8140                           
  8141                           ; 4 bytes @ 0x50
  8142  000051                     	ds	4
  8143  000055                     i2fround@prec:
  8144                           	opt stack 0
  8145                           
  8146                           ; 1 bytes @ 0x54
  8147  000055                     	ds	1
  8148  000056                     ?i2___fladd:
  8149                           	opt stack 0
  8150  000056                     i2___fladd@b:
  8151                           	opt stack 0
  8152                           
  8153                           ; 4 bytes @ 0x55
  8154  000056                     	ds	4
  8155  00005A                     i2___fladd@a:
  8156                           	opt stack 0
  8157                           
  8158                           ; 4 bytes @ 0x59
  8159  00005A                     	ds	4
  8160  00005E                     tblptru	equ	0xFF8
  8161                           tblptrh	equ	0xFF7
  8162                           tblptrl	equ	0xFF6
  8163                           tablat	equ	0xFF5
  8164                           postinc0	equ	0xFEE
  8165                           wreg	equ	0xFE8
  8166                           postdec1	equ	0xFE5
  8167                           fsr1l	equ	0xFE1
  8168                           
  8169                           ; 1 bytes @ 0x5D
  8170 ;;
  8171 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8172 ;;
  8173 ;; *************** function _main *****************
  8174 ;; Defined at:
  8175 ;;		line 386 in file "main.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8191 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;Total ram usage:        2 bytes
  8194 ;; Hardware stack levels required when called:   20
  8195 ;; This function calls:
  8196 ;;		_ADCC_SetADTIInterruptHandler
  8197 ;;		_SYSTEM_Initialize
  8198 ;;		_TMR6_SetInterruptHandler
  8199 ;;		_TMR7_SetInterruptHandler
  8200 ;;		___flge
  8201 ;;		_getCauseOfReset
  8202 ;;		_readDoubleFromEEPROM
  8203 ;;		_terminal_clearTerminal
  8204 ;;		_terminal_ringBufferPull
  8205 ;;		_terminal_setCursorHome
  8206 ;;		_terminal_textAttributesReset
  8207 ;;		_writeDoubleToEEPROM
  8208 ;; This function is called by:
  8209 ;;		Startup code after reset
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text0
  8214  0165E0                     __ptext0:
  8215                           	opt stack 0
  8216  0165E0                     _main:
  8217                           	opt stack 11
  8218                           
  8219                           ;main.c: 390: reset_cause = getCauseOfReset();
  8220                           
  8221                           ;incstack = 0
  8222  0165E0  EC0F  F0C1         	call	_getCauseOfReset	;wreg free
  8223  0165E4  0102               	movlb	2	; () banked
  8224  0165E6  6FEC               	movwf	_reset_cause& (0+255),b
  8225                           
  8226                           ; BSR set to: 2
  8227                           ;main.c: 394: _delay((unsigned long)((250)*(64000000/4000.0)));
  8228  0165E8  0E15               	movlw	21
  8229  0165EA  0102               	movlb	2	; () banked
  8230  0165EC  6FEB               	movwf	(??_main+1)& (0+255),b
  8231  0165EE  0E4B               	movlw	75
  8232  0165F0  6FEA               	movwf	??_main& (0+255),b
  8233  0165F2  0EBE               	movlw	190
  8234  0165F4                     u26277:
  8235  0165F4  2EE8               	decfsz	wreg,f,c
  8236  0165F6  D7FE               	bra	u26277
  8237  0165F8  2FEA               	decfsz	??_main& (0+255),f,b
  8238  0165FA  D7FC               	bra	u26277
  8239  0165FC  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  8240  0165FE  D7FA               	bra	u26277
  8241  016600  F000               	nop	
  8242                           
  8243                           ;main.c: 397: SYSTEM_Initialize();
  8244  016602  EC3E  F0C4         	call	_SYSTEM_Initialize	;wreg free
  8245                           
  8246                           ;main.c: 400: LATGbits.LATG0 = 0;
  8247  016606  907F               	bcf	3967,0,c	;volatile
  8248                           
  8249                           ;main.c: 401: LATGbits.LATG1 = 0;
  8250  016608  927F               	bcf	3967,1,c	;volatile
  8251                           
  8252                           ;main.c: 402: load_enable = 0;
  8253  01660A  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  8254                           
  8255                           ;main.c: 405: ADCON2bits.ADCRS = 7;
  8256  01660C  010F               	movlb	15	; () banked
  8257  01660E  895A               	bsf	90,4,b	;volatile
  8258  016610  8B5A               	bsf	90,5,b	;volatile
  8259  016612  8D5A               	bsf	90,6,b	;volatile
  8260                           
  8261                           ; BSR set to: 15
  8262                           ;main.c: 406: ADCAP = 20;
  8263  016614  0E14               	movlw	20
  8264  016616  6F5D               	movwf	93,b	;volatile
  8265                           
  8266                           ; BSR set to: 15
  8267                           ;main.c: 409: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  8268  016618  0EE8               	movlw	low _heartbeatTimerCallback
  8269  01661A  0101               	movlb	1	; () banked
  8270  01661C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  8271  01661E  0E85               	movlw	high _heartbeatTimerCallback
  8272  016620  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8273  016622  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  8274  016624  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  8275  016626  ECDA  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
  8276                           
  8277                           ;main.c: 412: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
  8278  01662A  0E32               	movlw	low _ADCPostProcessingCallback
  8279  01662C  0101               	movlb	1	; () banked
  8280  01662E  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  8281  016630  0E2A               	movlw	high _ADCPostProcessingCallback
  8282  016632  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  8283  016634  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  8284  016636  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  8285  016638  ECF6  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8286                           
  8287                           ;main.c: 415: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  8288  01663C  0E46               	movlw	low _acquisitionTimerCallback
  8289  01663E  0101               	movlb	1	; () banked
  8290  016640  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  8291  016642  0E8B               	movlw	high _acquisitionTimerCallback
  8292  016644  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8293  016646  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  8294  016648  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  8295  01664A  ECD3  F0C5         	call	_TMR7_SetInterruptHandler	;wreg free
  8296                           
  8297                           ;main.c: 418: max_Irms = readDoubleFromEEPROM(max_Irms_address);
  8298  01664E  0E75               	movlw	low _max_Irms_address
  8299  016650  6EF6               	movwf	tblptrl,c
  8300  016652                     	if	1	;There is more than 1 active tblptr byte
  8301  016652  0EE9               	movlw	high _max_Irms_address
  8302  016654  6EF7               	movwf	tblptrh,c
  8303  016656                     	endif
  8304  016656                     	if	1	;There are 3 active tblptr bytes
  8305  016656  0E00               	movlw	low (_max_Irms_address shr (0+16))
  8306  016658  6EF8               	movwf	tblptru,c
  8307  01665A                     	endif
  8308  01665A  0009               	tblrd		*+
  8309  01665C  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
  8310  016660  000A               	tblrd		*-
  8311  016662  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
  8312  016666  ECE6  F0C0         	call	_readDoubleFromEEPROM	;wreg free
  8313  01666A  C119  F244         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
  8314  01666E  C11A  F245         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
  8315  016672  C11B  F246         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
  8316  016676  C11C  F247         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
  8317                           
  8318                           ;main.c: 419: max_Power = readDoubleFromEEPROM(max_Power_address);
  8319  01667A  0E73               	movlw	low _max_Power_address
  8320  01667C  6EF6               	movwf	tblptrl,c
  8321  01667E                     	if	1	;There is more than 1 active tblptr byte
  8322  01667E  0EE9               	movlw	high _max_Power_address
  8323  016680  6EF7               	movwf	tblptrh,c
  8324  016682                     	endif
  8325  016682                     	if	1	;There are 3 active tblptr bytes
  8326  016682  0E00               	movlw	low (_max_Power_address shr (0+16))
  8327  016684  6EF8               	movwf	tblptru,c
  8328  016686                     	endif
  8329  016686  0009               	tblrd		*+
  8330  016688  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
  8331  01668C  000A               	tblrd		*-
  8332  01668E  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
  8333  016692  ECE6  F0C0         	call	_readDoubleFromEEPROM	;wreg free
  8334  016696  C119  F240         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
  8335  01669A  C11A  F241         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
  8336  01669E  C11B  F242         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
  8337  0166A2  C11C  F243         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
  8338                           
  8339                           ;main.c: 422: (INTCONbits.GIEH = 1);
  8340  0166A6  8EF2               	bsf	intcon,7,c	;volatile
  8341                           
  8342                           ;main.c: 425: (INTCONbits.GIEL = 1);
  8343  0166A8  8CF2               	bsf	intcon,6,c	;volatile
  8344                           
  8345                           ;main.c: 428: terminal_clearTerminal();
  8346  0166AA  ECBC  F0C5         	call	_terminal_clearTerminal	;wreg free
  8347                           
  8348                           ;main.c: 429: terminal_setCursorHome();
  8349  0166AE  ECAC  F0C5         	call	_terminal_setCursorHome	;wreg free
  8350                           
  8351                           ;main.c: 430: terminal_textAttributesReset();
  8352  0166B2  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  8353  0166B6                     
  8354                           ;main.c: 434: {
  8355                           ;main.c: 437: if (eusart2RxStringReady) {
  8356  0166B6  0100               	movlb	0	; () banked
  8357  0166B8  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;main.c: 439: terminal_ringBufferPull();
  8361  0166BA  EC74  F0B7         	call	_terminal_ringBufferPull	;wreg free
  8362                           
  8363                           ;main.c: 441: }
  8364                           ;main.c: 444: if (Irms > max_Irms) {
  8365  0166BE  C244  F117         	movff	_max_Irms,___flge@ff1	;volatile
  8366  0166C2  C245  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
  8367  0166C6  C246  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
  8368  0166CA  C247  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
  8369  0166CE  C0F6  F11B         	movff	_Irms,___flge@ff2	;volatile
  8370  0166D2  C0F7  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
  8371  0166D6  C0F8  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
  8372  0166DA  C0F9  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
  8373  0166DE  EC06  F0B8         	call	___flge	;wreg free
  8374  0166E2  0101               	movlb	1	; () banked
  8375  0166E4  B0D8               	btfsc	status,0,c
  8376  0166E6  D01E               	goto	l1012
  8377                           
  8378                           ; BSR set to: 1
  8379                           ;main.c: 446: writeDoubleToEEPROM(Irms, max_Irms_address);
  8380  0166E8  C0F6  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
  8381  0166EC  C0F7  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
  8382  0166F0  C0F8  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
  8383  0166F4  C0F9  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
  8384  0166F8  0E75               	movlw	low _max_Irms_address
  8385  0166FA  6EF6               	movwf	tblptrl,c
  8386  0166FC                     	if	1	;There is more than 1 active tblptr byte
  8387  0166FC  0EE9               	movlw	high _max_Irms_address
  8388  0166FE  6EF7               	movwf	tblptrh,c
  8389  016700                     	endif
  8390  016700                     	if	1	;There are 3 active tblptr bytes
  8391  016700  0E00               	movlw	low (_max_Irms_address shr (0+16))
  8392  016702  6EF8               	movwf	tblptru,c
  8393  016704                     	endif
  8394  016704  0009               	tblrd		*+
  8395  016706  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
  8396  01670A  000A               	tblrd		*-
  8397  01670C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
  8398  016710  EC38  F0C1         	call	_writeDoubleToEEPROM	;wreg free
  8399                           
  8400                           ;main.c: 447: max_Irms = Irms;
  8401  016714  C0F6  F244         	movff	_Irms,_max_Irms	;volatile
  8402  016718  C0F7  F245         	movff	_Irms+1,_max_Irms+1	;volatile
  8403  01671C  C0F8  F246         	movff	_Irms+2,_max_Irms+2	;volatile
  8404  016720  C0F9  F247         	movff	_Irms+3,_max_Irms+3	;volatile
  8405  016724                     l1012:
  8406                           
  8407                           ;main.c: 449: }
  8408                           ;main.c: 451: if (Avg_Power > max_Power) {
  8409  016724  C240  F117         	movff	_max_Power,___flge@ff1	;volatile
  8410  016728  C241  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
  8411  01672C  C242  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
  8412  016730  C243  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
  8413  016734  C1BB  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
  8414  016738  C1BC  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
  8415  01673C  C1BD  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
  8416  016740  C1BE  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
  8417  016744  EC06  F0B8         	call	___flge	;wreg free
  8418  016748  0101               	movlb	1	; () banked
  8419  01674A  B0D8               	btfsc	status,0,c
  8420  01674C  D7B4               	goto	l1010
  8421                           
  8422                           ; BSR set to: 1
  8423                           ;main.c: 453: writeDoubleToEEPROM(Avg_Power, max_Power_address);
  8424  01674E  C1BB  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
  8425  016752  C1BC  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
  8426  016756  C1BD  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
  8427  01675A  C1BE  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
  8428  01675E  0E73               	movlw	low _max_Power_address
  8429  016760  6EF6               	movwf	tblptrl,c
  8430  016762                     	if	1	;There is more than 1 active tblptr byte
  8431  016762  0EE9               	movlw	high _max_Power_address
  8432  016764  6EF7               	movwf	tblptrh,c
  8433  016766                     	endif
  8434  016766                     	if	1	;There are 3 active tblptr bytes
  8435  016766  0E00               	movlw	low (_max_Power_address shr (0+16))
  8436  016768  6EF8               	movwf	tblptru,c
  8437  01676A                     	endif
  8438  01676A  0009               	tblrd		*+
  8439  01676C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
  8440  016770  000A               	tblrd		*-
  8441  016772  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
  8442  016776  EC38  F0C1         	call	_writeDoubleToEEPROM	;wreg free
  8443                           
  8444                           ;main.c: 454: max_Power = Avg_Power;
  8445  01677A  C1BB  F240         	movff	_Avg_Power,_max_Power	;volatile
  8446  01677E  C1BC  F241         	movff	_Avg_Power+1,_max_Power+1	;volatile
  8447  016782  C1BD  F242         	movff	_Avg_Power+2,_max_Power+2	;volatile
  8448  016786  C1BE  F243         	movff	_Avg_Power+3,_max_Power+3	;volatile
  8449  01678A  D795               	goto	l1010
  8450  01678C                     __end_of_main:
  8451                           	opt stack 0
  8452                           tblptru	equ	0xFF8
  8453                           tblptrh	equ	0xFF7
  8454                           tblptrl	equ	0xFF6
  8455                           tablat	equ	0xFF5
  8456                           intcon	equ	0xFF2
  8457                           postinc0	equ	0xFEE
  8458                           wreg	equ	0xFE8
  8459                           postdec1	equ	0xFE5
  8460                           fsr1l	equ	0xFE1
  8461                           status	equ	0xFD8
  8462                           
  8463 ;; *************** function _writeDoubleToEEPROM *****************
  8464 ;; Defined at:
  8465 ;;		line 6 in file "double_to_EEPROM.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  input_double    4   27[BANK1 ] void 
  8468 ;;  starting_add    2   31[BANK1 ] unsigned int 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  byte_index      2   37[BANK1 ] int 
  8471 ;;  input_data      4   33[BANK1 ] struct .
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8481 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8482 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8484 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8485 ;;Total ram usage:       12 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:   14
  8488 ;; This function calls:
  8489 ;;		_DATAEE_WriteByte
  8490 ;; This function is called by:
  8491 ;;		_main
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text1
  8496  018270                     __ptext1:
  8497                           	opt stack 0
  8498  018270                     _writeDoubleToEEPROM:
  8499                           	opt stack 16
  8500                           
  8501                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
  8502                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
  8503                           
  8504                           ;incstack = 0
  8505  018270  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
  8506  018274  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
  8507  018278  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
  8508  01827C  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
  8509                           
  8510                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
  8511  018280  0E00               	movlw	0
  8512  018282  0101               	movlb	1	; () banked
  8513  018284  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
  8514  018286  0E00               	movlw	0
  8515  018288  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
  8516  01828A                     l15008:
  8517                           
  8518                           ; BSR set to: 1
  8519  01828A  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
  8520  01828C  E118               	bnz	l1356
  8521  01828E  0E04               	movlw	4
  8522  018290  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
  8523  018292  B0D8               	btfsc	status,0,c
  8524  018294  0012               	return	
  8525                           
  8526                           ; BSR set to: 1
  8527                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
  8528                           
  8529                           ; BSR set to: 1
  8530                           
  8531                           ; BSR set to: 1
  8532  018296  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
  8533  018298  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
  8534  01829A  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  8535  01829C  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
  8536  01829E  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
  8537  0182A0  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  8538  0182A2  0E21               	movlw	low writeDoubleToEEPROM@input_data
  8539  0182A4  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
  8540  0182A6  6ED9               	movwf	fsr2l,c
  8541  0182A8  0E01               	movlw	high writeDoubleToEEPROM@input_data
  8542  0182AA  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
  8543  0182AC  6EDA               	movwf	fsr2h,c
  8544  0182AE  50DF               	movf	indf2,w,c
  8545  0182B0  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
  8546  0182B2  EC14  F0C3         	call	_DATAEE_WriteByte	;wreg free
  8547  0182B6  0101               	movlb	1	; () banked
  8548  0182B8  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
  8549  0182BA  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
  8550  0182BC  D7E6               	goto	l15008
  8551  0182BE                     l1356:
  8552                           
  8553                           ; BSR set to: 1
  8554  0182BE  0012               	return		;funcret
  8555  0182C0                     __end_of_writeDoubleToEEPROM:
  8556                           	opt stack 0
  8557                           tblptru	equ	0xFF8
  8558                           tblptrh	equ	0xFF7
  8559                           tblptrl	equ	0xFF6
  8560                           tablat	equ	0xFF5
  8561                           intcon	equ	0xFF2
  8562                           postinc0	equ	0xFEE
  8563                           wreg	equ	0xFE8
  8564                           postdec1	equ	0xFE5
  8565                           fsr1l	equ	0xFE1
  8566                           indf2	equ	0xFDF
  8567                           fsr2h	equ	0xFDA
  8568                           fsr2l	equ	0xFD9
  8569                           status	equ	0xFD8
  8570                           
  8571 ;; *************** function _DATAEE_WriteByte *****************
  8572 ;; Defined at:
  8573 ;;		line 168 in file "mcc_generated_files/memory.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  bAdd            2   23[BANK1 ] unsigned int 
  8576 ;;  bData           1   25[BANK1 ] unsigned char 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      void 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2, status,0
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8588 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;Total ram usage:        4 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:   13
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_writeDoubleToEEPROM
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text2
  8603  018628                     __ptext2:
  8604                           	opt stack 0
  8605  018628                     _DATAEE_WriteByte:
  8606                           	opt stack 16
  8607                           
  8608                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
  8609                           
  8610                           ; BSR set to: 1
  8611                           ;incstack = 0
  8612  018628  0E00               	movlw	0
  8613  01862A  BEF2               	btfsc	intcon,7,c	;volatile
  8614  01862C  0E01               	movlw	1
  8615  01862E  0101               	movlb	1	; () banked
  8616  018630  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
  8617                           
  8618                           ; BSR set to: 1
  8619                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
  8620  018632  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
  8621  018634  0B03               	andlw	3
  8622  018636  6E75               	movwf	3957,c	;volatile
  8623                           
  8624                           ; BSR set to: 1
  8625                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
  8626  018638  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
  8627                           
  8628                           ; BSR set to: 1
  8629                           ;memory.c: 174: NVMDAT = bData;
  8630  01863C  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
  8631                           
  8632                           ; BSR set to: 1
  8633                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
  8634  018640  0E3F               	movlw	-193
  8635  018642  1677               	andwf	3959,f,c	;volsfr
  8636                           
  8637                           ; BSR set to: 1
  8638                           ;memory.c: 176: NVMCON1bits.WREN = 1;
  8639  018644  8477               	bsf	3959,2,c	;volsfr
  8640                           
  8641                           ; BSR set to: 1
  8642                           ;memory.c: 177: INTCONbits.GIE = 0;
  8643  018646  9EF2               	bcf	intcon,7,c	;volatile
  8644                           
  8645                           ; BSR set to: 1
  8646                           ;memory.c: 178: NVMCON2 = 0x55;
  8647  018648  0E55               	movlw	85
  8648  01864A  6E78               	movwf	3960,c	;volsfr
  8649                           
  8650                           ; BSR set to: 1
  8651                           ;memory.c: 179: NVMCON2 = 0xAA;
  8652  01864C  0EAA               	movlw	170
  8653  01864E  6E78               	movwf	3960,c	;volsfr
  8654                           
  8655                           ; BSR set to: 1
  8656                           ;memory.c: 180: NVMCON1bits.WR = 1;
  8657  018650  8277               	bsf	3959,1,c	;volsfr
  8658  018652                     
  8659                           ; BSR set to: 1
  8660                           ;memory.c: 183: {
  8661  018652  B277               	btfsc	3959,1,c	;volsfr
  8662  018654  D7FE               	goto	l789
  8663                           
  8664                           ;memory.c: 184: }
  8665                           ;memory.c: 186: NVMCON1bits.WREN = 0;
  8666  018656  9477               	bcf	3959,2,c	;volsfr
  8667                           
  8668                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
  8669  018658  0101               	movlb	1	; () banked
  8670  01865A  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
  8671  01865C  D002               	bra	u17415
  8672  01865E  9EF2               	bcf	intcon,7,c	;volatile
  8673  018660  D001               	bra	u17416
  8674  018662                     u17415:
  8675  018662  8EF2               	bsf	intcon,7,c	;volatile
  8676  018664                     u17416:
  8677  018664  0012               	return		;funcret
  8678  018666                     __end_of_DATAEE_WriteByte:
  8679                           	opt stack 0
  8680                           tblptru	equ	0xFF8
  8681                           tblptrh	equ	0xFF7
  8682                           tblptrl	equ	0xFF6
  8683                           tablat	equ	0xFF5
  8684                           intcon	equ	0xFF2
  8685                           postinc0	equ	0xFEE
  8686                           wreg	equ	0xFE8
  8687                           postdec1	equ	0xFE5
  8688                           fsr1l	equ	0xFE1
  8689                           indf2	equ	0xFDF
  8690                           fsr2h	equ	0xFDA
  8691                           fsr2l	equ	0xFD9
  8692                           status	equ	0xFD8
  8693                           
  8694 ;; *************** function _terminal_setCursorHome *****************
  8695 ;; Defined at:
  8696 ;;		line 85 in file "ring_buffer_interface.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;		None
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;		None
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  1    wreg      void 
  8703 ;; Registers used:
  8704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8714 ;;Total ram usage:        0 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:   16
  8717 ;; This function calls:
  8718 ;;		_printf
  8719 ;; This function is called by:
  8720 ;;		_main
  8721 ;; This function uses a non-reentrant model
  8722 ;;
  8723                           
  8724                           	psect	text3
  8725  018B58                     __ptext3:
  8726                           	opt stack 0
  8727  018B58                     _terminal_setCursorHome:
  8728                           	opt stack 14
  8729                           
  8730                           ;ring_buffer_interface.c: 86: printf("\033[H");
  8731                           
  8732                           ;incstack = 0
  8733  018B58  0EB8               	movlw	low STR_3
  8734  018B5A  0101               	movlb	1	; () banked
  8735  018B5C  6F82               	movwf	printf@f& (0+255),b
  8736  018B5E  0EFF               	movlw	high STR_3
  8737  018B60  6F83               	movwf	(printf@f+1)& (0+255),b
  8738  018B62  EC50  F087         	call	_printf	;wreg free
  8739  018B66  0012               	return		;funcret
  8740  018B68                     __end_of_terminal_setCursorHome:
  8741                           	opt stack 0
  8742                           tblptru	equ	0xFF8
  8743                           tblptrh	equ	0xFF7
  8744                           tblptrl	equ	0xFF6
  8745                           tablat	equ	0xFF5
  8746                           intcon	equ	0xFF2
  8747                           postinc0	equ	0xFEE
  8748                           wreg	equ	0xFE8
  8749                           postdec1	equ	0xFE5
  8750                           fsr1l	equ	0xFE1
  8751                           indf2	equ	0xFDF
  8752                           fsr2h	equ	0xFDA
  8753                           fsr2l	equ	0xFD9
  8754                           status	equ	0xFD8
  8755                           
  8756 ;; *************** function _terminal_ringBufferPull *****************
  8757 ;; Defined at:
  8758 ;;		line 12 in file "ring_buffer_interface.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  index           2   18[BANK2 ] int 
  8763 ;;  index           2   20[BANK2 ] int 
  8764 ;;  charNumber      2   16[BANK2 ] int 
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;Total ram usage:        9 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; Hardware stack levels required when called:   19
  8781 ;; This function calls:
  8782 ;;		_EUSART2_Read
  8783 ;;		_ringBufferLUT
  8784 ;;		_strlen
  8785 ;; This function is called by:
  8786 ;;		_main
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text4
  8791  016EE8                     __ptext4:
  8792                           	opt stack 0
  8793  016EE8                     _terminal_ringBufferPull:
  8794                           	opt stack 11
  8795                           
  8796                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  8797                           
  8798                           ;incstack = 0
  8799  016EE8  C1DF  F2E4         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  8800  016EEC  0102               	movlb	2	; () banked
  8801  016EEE  6BE5               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  8802                           
  8803                           ; BSR set to: 2
  8804                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  8805  016EF0  0E00               	movlw	0
  8806  016EF2  6FE9               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  8807  016EF4  0E00               	movlw	0
  8808  016EF6  6FE8               	movwf	terminal_ringBufferPull@index& (0+255),b
  8809  016EF8                     l19302:
  8810                           
  8811                           ; BSR set to: 2
  8812  016EF8  BFE9               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  8813  016EFA  D006               	goto	l1051
  8814  016EFC  51E9               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  8815  016EFE  E10F               	bnz	l19312
  8816  016F00  0E40               	movlw	64
  8817  016F02  5DE8               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  8818  016F04  B0D8               	btfsc	status,0,c
  8819  016F06  D00B               	goto	u26020
  8820  016F08                     l1051:
  8821                           
  8822                           ; BSR set to: 2
  8823                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  8824                           
  8825                           ; BSR set to: 2
  8826  016F08  0E70               	movlw	low _line
  8827  016F0A  25E8               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  8828  016F0C  6ED9               	movwf	fsr2l,c
  8829  016F0E  0E02               	movlw	high _line
  8830  016F10  21E9               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  8831  016F12  6EDA               	movwf	fsr2h,c
  8832  016F14  0E00               	movlw	0
  8833  016F16  6EDF               	movwf	indf2,c
  8834                           
  8835                           ; BSR set to: 2
  8836  016F18  4BE8               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  8837  016F1A  2BE9               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  8838  016F1C  D7ED               	goto	l19302
  8839  016F1E                     u26020:
  8840  016F1E                     l19312:
  8841                           
  8842                           ; BSR set to: 2
  8843                           ;ring_buffer_interface.c: 21: }
  8844                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  8845  016F1E  0E00               	movlw	0
  8846  016F20  6FE7               	movwf	(terminal_ringBufferPull@index_2412+1)& (0+255),b
  8847  016F22  0E00               	movlw	0
  8848  016F24  6FE6               	movwf	terminal_ringBufferPull@index_2412& (0+255),b
  8849  016F26  D00F               	goto	l1053
  8850  016F28                     
  8851                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  8852                           
  8853                           ; BSR set to: 2
  8854  016F28  EC45  F0C2         	call	_EUSART2_Read	;wreg free
  8855  016F2C  0101               	movlb	1	; () banked
  8856  016F2E  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8857  016F30  0E70               	movlw	low _line
  8858  016F32  0102               	movlb	2	; () banked
  8859  016F34  25E6               	addwf	terminal_ringBufferPull@index_2412& (0+255),w,b
  8860  016F36  6ED9               	movwf	fsr2l,c
  8861  016F38  0E02               	movlw	high _line
  8862  016F3A  21E7               	addwfc	(terminal_ringBufferPull@index_2412+1)& (0+255),w,b
  8863  016F3C  6EDA               	movwf	fsr2h,c
  8864  016F3E  C1B8  FFDF         	movff	??_terminal_ringBufferPull,indf2
  8865                           
  8866                           ; BSR set to: 2
  8867  016F42  4BE6               	infsnz	terminal_ringBufferPull@index_2412& (0+255),f,b
  8868  016F44  2BE7               	incf	(terminal_ringBufferPull@index_2412+1)& (0+255),f,b
  8869  016F46                     l1053:
  8870                           
  8871                           ; BSR set to: 2
  8872                           
  8873                           ; BSR set to: 2
  8874  016F46  51E4               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  8875  016F48  5DE6               	subwf	terminal_ringBufferPull@index_2412& (0+255),w,b
  8876  016F4A  51E7               	movf	(terminal_ringBufferPull@index_2412+1)& (0+255),w,b
  8877  016F4C  0A80               	xorlw	128
  8878  016F4E  0101               	movlb	1	; () banked
  8879  016F50  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8880  016F52  0102               	movlb	2	; () banked
  8881  016F54  51E5               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  8882  016F56  0A80               	xorlw	128
  8883  016F58  0101               	movlb	1	; () banked
  8884  016F5A  59B8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  8885  016F5C  A0D8               	btfss	status,0,c
  8886  016F5E  D7E4               	goto	l1054
  8887                           
  8888                           ; BSR set to: 1
  8889                           ;ring_buffer_interface.c: 28: }
  8890                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  8891  016F60  C0FA  F1E0         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  8892                           
  8893                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  8894                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  8895  016F64  D017               	goto	l1056
  8896  016F66                     
  8897                           ; BSR set to: 1
  8898                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  8899                           
  8900                           ; BSR set to: 1
  8901  016F66  0EFF               	movlw	255
  8902  016F68  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8903  016F6A  0EFF               	movlw	255
  8904  016F6C  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8905  016F6E  0E70               	movlw	low _line
  8906  016F70  6F17               	movwf	strlen@s& (0+255),b
  8907  016F72  0E02               	movlw	high _line
  8908  016F74  6F18               	movwf	(strlen@s+1)& (0+255),b
  8909  016F76  ECBA  F0C0         	call	_strlen	;wreg free
  8910  016F7A  0101               	movlb	1	; () banked
  8911  016F7C  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8912  016F7E  2717               	addwf	?_strlen& (0+255),f,b
  8913  016F80  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8914  016F82  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8915  016F84  0E70               	movlw	low _line
  8916  016F86  2517               	addwf	?_strlen& (0+255),w,b
  8917  016F88  6ED9               	movwf	fsr2l,c
  8918  016F8A  0E02               	movlw	high _line
  8919  016F8C  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8920  016F8E  6EDA               	movwf	fsr2h,c
  8921  016F90  0E00               	movlw	0
  8922  016F92  6EDF               	movwf	indf2,c
  8923  016F94                     l1056:
  8924                           
  8925                           ; BSR set to: 1
  8926  016F94  0EFF               	movlw	255
  8927  016F96  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8928  016F98  0EFF               	movlw	255
  8929  016F9A  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8930  016F9C  0E70               	movlw	low _line
  8931  016F9E  6F17               	movwf	strlen@s& (0+255),b
  8932  016FA0  0E02               	movlw	high _line
  8933  016FA2  6F18               	movwf	(strlen@s+1)& (0+255),b
  8934  016FA4  ECBA  F0C0         	call	_strlen	;wreg free
  8935  016FA8  0101               	movlb	1	; () banked
  8936  016FAA  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8937  016FAC  2717               	addwf	?_strlen& (0+255),f,b
  8938  016FAE  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8939  016FB0  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8940  016FB2  0E70               	movlw	low _line
  8941  016FB4  2517               	addwf	?_strlen& (0+255),w,b
  8942  016FB6  6ED9               	movwf	fsr2l,c
  8943  016FB8  0E02               	movlw	high _line
  8944  016FBA  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8945  016FBC  6EDA               	movwf	fsr2h,c
  8946  016FBE  0E0A               	movlw	10
  8947  016FC0  18DE               	xorwf	postinc2,w,c
  8948  016FC2  B4D8               	btfsc	status,2,c
  8949  016FC4  D7D0               	goto	l1057
  8950                           
  8951                           ; BSR set to: 1
  8952  016FC6  0EFF               	movlw	255
  8953  016FC8  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  8954  016FCA  0EFF               	movlw	255
  8955  016FCC  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8956  016FCE  0E70               	movlw	low _line
  8957  016FD0  6F17               	movwf	strlen@s& (0+255),b
  8958  016FD2  0E02               	movlw	high _line
  8959  016FD4  6F18               	movwf	(strlen@s+1)& (0+255),b
  8960  016FD6  ECBA  F0C0         	call	_strlen	;wreg free
  8961  016FDA  0101               	movlb	1	; () banked
  8962  016FDC  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8963  016FDE  2717               	addwf	?_strlen& (0+255),f,b
  8964  016FE0  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8965  016FE2  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8966  016FE4  0E70               	movlw	low _line
  8967  016FE6  2517               	addwf	?_strlen& (0+255),w,b
  8968  016FE8  6ED9               	movwf	fsr2l,c
  8969  016FEA  0E02               	movlw	high _line
  8970  016FEC  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8971  016FEE  6EDA               	movwf	fsr2h,c
  8972  016FF0  0E0D               	movlw	13
  8973  016FF2  18DE               	xorwf	postinc2,w,c
  8974  016FF4  B4D8               	btfsc	status,2,c
  8975  016FF6  D7B7               	goto	l1057
  8976                           
  8977                           ; BSR set to: 1
  8978                           ;ring_buffer_interface.c: 40: }
  8979                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  8980  016FF8  0100               	movlb	0	; () banked
  8981  016FFA  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  8985  016FFC  0E70               	movlw	low _line
  8986  016FFE  0101               	movlb	1	; () banked
  8987  017000  6FB4               	movwf	ringBufferLUT@line& (0+255),b
  8988  017002  0E02               	movlw	high _line
  8989  017004  6FB5               	movwf	(ringBufferLUT@line+1)& (0+255),b
  8990  017006  EC00  F080         	call	_ringBufferLUT	;wreg free
  8991  01700A  0012               	return		;funcret
  8992  01700C                     __end_of_terminal_ringBufferPull:
  8993                           	opt stack 0
  8994                           tblptru	equ	0xFF8
  8995                           tblptrh	equ	0xFF7
  8996                           tblptrl	equ	0xFF6
  8997                           tablat	equ	0xFF5
  8998                           intcon	equ	0xFF2
  8999                           postinc0	equ	0xFEE
  9000                           wreg	equ	0xFE8
  9001                           postdec1	equ	0xFE5
  9002                           fsr1l	equ	0xFE1
  9003                           indf2	equ	0xFDF
  9004                           postinc2	equ	0xFDE
  9005                           fsr2h	equ	0xFDA
  9006                           fsr2l	equ	0xFD9
  9007                           status	equ	0xFD8
  9008                           
  9009 ;; *************** function _ringBufferLUT *****************
  9010 ;; Defined at:
  9011 ;;		line 49 in file "ring_buffer_LUT.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  line            2  180[BANK1 ] PTR unsigned char 
  9014 ;;		 -> line(64), 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  angle_degree    4   22[BANK3 ] PTR unsigned char 
  9017 ;;  index           2   37[BANK3 ] int 
  9018 ;;  channel_name   22    0[BANK3 ] unsigned char [22]
  9019 ;;  userID          2   41[BANK3 ] int 
  9020 ;;  max_Power_pr    4   30[BANK3 ] int 
  9021 ;;  max_current_    4   26[BANK3 ] int 
  9022 ;;  arg_buff        3   34[BANK3 ] unsigned char [3]
  9023 ;;  percentage      2   39[BANK3 ] int 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9033 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;      Locals:         0       0       0       0      43       0       0       0       0       0       0       0       
      +0       0       0
  9035 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9036 ;;      Totals:         0       0       4       0      43       0       0       0       0       0       0       0       
      +0       0       0
  9037 ;;Total ram usage:       47 bytes
  9038 ;; Hardware stack levels used:    1
  9039 ;; Hardware stack levels required when called:   18
  9040 ;; This function calls:
  9041 ;;		_TMR7_StopTimer
  9042 ;;		___fladd
  9043 ;;		___fldiv
  9044 ;;		___flmul
  9045 ;;		___flneg
  9046 ;;		___wmul
  9047 ;;		___xxtofl
  9048 ;;		_atoi
  9049 ;;		_getCauseOfResetString
  9050 ;;		_getDeviceID
  9051 ;;		_getDeviceIDString
  9052 ;;		_getMajorRevisionID
  9053 ;;		_getMinorRevisionID
  9054 ;;		_getUserID
  9055 ;;		_printf
  9056 ;;		_readDoubleFromEEPROM
  9057 ;;		_strcmp
  9058 ;;		_strcpy
  9059 ;;		_strstr
  9060 ;;		_terminal_printNewline
  9061 ;;		_terminal_textAttributes
  9062 ;;		_terminal_textAttributesReset
  9063 ;; This function is called by:
  9064 ;;		_terminal_ringBufferPull
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text5
  9069  010000                     __ptext5:
  9070                           	opt stack 0
  9071  010000                     _ringBufferLUT:
  9072                           	opt stack 11
  9073                           
  9074                           ;ring_buffer_LUT.c: 55: if((0 == strcmp(line, "Reset"))) {
  9075                           
  9076                           ;incstack = 0
  9077  010000  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9078  010004  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9079  010008  0E0E               	movlw	low (STR_134+10)
  9080  01000A  0101               	movlb	1	; () banked
  9081  01000C  6F19               	movwf	strcmp@s2& (0+255),b
  9082  01000E  0EFE               	movlw	high (STR_134+10)
  9083  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9084  010012  EC60  F0C1         	call	_strcmp	;wreg free
  9085  010016  0101               	movlb	1	; () banked
  9086  010018  5117               	movf	?_strcmp& (0+255),w,b
  9087  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9088  01001C  A4D8               	btfss	status,2,c
  9089  01001E  D00F               	goto	l1206
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;ring_buffer_LUT.c: 58: printf("\033[2J");
  9093  010020  0EAF               	movlw	low STR_2
  9094  010022  6F82               	movwf	printf@f& (0+255),b
  9095  010024  0EFF               	movlw	high STR_2
  9096  010026  6F83               	movwf	(printf@f+1)& (0+255),b
  9097  010028  EC50  F087         	call	_printf	;wreg free
  9098                           
  9099                           ;ring_buffer_LUT.c: 61: printf("\033[H");
  9100  01002C  0EB8               	movlw	low STR_3
  9101  01002E  0101               	movlb	1	; () banked
  9102  010030  6F82               	movwf	printf@f& (0+255),b
  9103  010032  0EFF               	movlw	high STR_3
  9104  010034  6F83               	movwf	(printf@f+1)& (0+255),b
  9105  010036  EC50  F087         	call	_printf	;wreg free
  9106  01003A  00FF               	reset		;# 
  9107                           
  9108                           ;ring_buffer_LUT.c: 66: }
  9109  01003C  0012               	return	
  9110  01003E                     l1206:
  9111                           
  9112                           ;ring_buffer_LUT.c: 69: else if((0 == strcmp(line, "Clear"))) {
  9113  01003E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9114  010042  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9115  010046  0E9F               	movlw	low STR_44
  9116  010048  0101               	movlb	1	; () banked
  9117  01004A  6F19               	movwf	strcmp@s2& (0+255),b
  9118  01004C  0EFF               	movlw	high STR_44
  9119  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9120  010050  EC60  F0C1         	call	_strcmp	;wreg free
  9121  010054  0101               	movlb	1	; () banked
  9122  010056  5117               	movf	?_strcmp& (0+255),w,b
  9123  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9124  01005A  A4D8               	btfss	status,2,c
  9125  01005C  D00E               	goto	l1208
  9126                           
  9127                           ; BSR set to: 1
  9128                           ;ring_buffer_LUT.c: 72: printf("\033[2J");
  9129  01005E  0EAF               	movlw	low STR_2
  9130  010060  6F82               	movwf	printf@f& (0+255),b
  9131  010062  0EFF               	movlw	high STR_2
  9132  010064  6F83               	movwf	(printf@f+1)& (0+255),b
  9133  010066  EC50  F087         	call	_printf	;wreg free
  9134                           
  9135                           ;ring_buffer_LUT.c: 75: printf("\033[H");
  9136  01006A  0EB8               	movlw	low STR_3
  9137  01006C  0101               	movlb	1	; () banked
  9138  01006E  6F82               	movwf	printf@f& (0+255),b
  9139  010070  0EFF               	movlw	high STR_3
  9140  010072  6F83               	movwf	(printf@f+1)& (0+255),b
  9141  010074  EC50  F087         	call	_printf	;wreg free
  9142                           
  9143                           ;ring_buffer_LUT.c: 77: }
  9144  010078  0012               	return	
  9145  01007A                     l1208:
  9146                           
  9147                           ;ring_buffer_LUT.c: 80: else if((0 == strcmp(line, "Cause of Reset?"))) {
  9148  01007A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9149  01007E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9150  010082  0E44               	movlw	low STR_47
  9151  010084  0101               	movlb	1	; () banked
  9152  010086  6F19               	movwf	strcmp@s2& (0+255),b
  9153  010088  0EFE               	movlw	high STR_47
  9154  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9155  01008C  EC60  F0C1         	call	_strcmp	;wreg free
  9156  010090  0101               	movlb	1	; () banked
  9157  010092  5117               	movf	?_strcmp& (0+255),w,b
  9158  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9159  010096  A4D8               	btfss	status,2,c
  9160  010098  D019               	goto	l1210
  9161                           
  9162                           ; BSR set to: 1
  9163                           ;ring_buffer_LUT.c: 82: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9164  01009A  0E00               	movlw	0
  9165  01009C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9166  01009E  0E00               	movlw	0
  9167  0100A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9168  0100A2  0E02               	movlw	2
  9169  0100A4  EC9B  F09E         	call	_terminal_textAttributes
  9170                           
  9171                           ;ring_buffer_LUT.c: 85: printf("The cause of the most recent device reset was: %s\n\r",
  9172                           ;ring_buffer_LUT.c: 86: getCauseOfResetString(reset_cause));
  9173  0100A8  0E88               	movlw	low STR_48
  9174  0100AA  0101               	movlb	1	; () banked
  9175  0100AC  6F82               	movwf	printf@f& (0+255),b
  9176  0100AE  0EF8               	movlw	high STR_48
  9177  0100B0  6F83               	movwf	(printf@f+1)& (0+255),b
  9178  0100B2  0102               	movlb	2	; () banked
  9179  0100B4  51EC               	movf	_reset_cause& (0+255),w,b
  9180  0100B6  EC0E  F0C4         	call	_getCauseOfResetString
  9181  0100BA  C117  F184         	movff	?_getCauseOfResetString,?_printf+2
  9182  0100BE  C118  F185         	movff	?_getCauseOfResetString+1,?_printf+3
  9183  0100C2  EC50  F087         	call	_printf	;wreg free
  9184                           
  9185                           ;ring_buffer_LUT.c: 88: terminal_textAttributesReset();
  9186  0100C6  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9187                           
  9188                           ;ring_buffer_LUT.c: 90: }
  9189  0100CA  0012               	return	
  9190  0100CC                     l1210:
  9191                           
  9192                           ;ring_buffer_LUT.c: 93: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  9193  0100CC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9194  0100D0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9195  0100D4  0E99               	movlw	low STR_49
  9196  0100D6  0101               	movlb	1	; () banked
  9197  0100D8  6F19               	movwf	strcmp@s2& (0+255),b
  9198  0100DA  0EFF               	movlw	high STR_49
  9199  0100DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9200  0100DE  EC60  F0C1         	call	_strcmp	;wreg free
  9201  0100E2  0101               	movlb	1	; () banked
  9202  0100E4  5117               	movf	?_strcmp& (0+255),w,b
  9203  0100E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9204  0100E8  B4D8               	btfsc	status,2,c
  9205  0100EA  D00F               	goto	u25530
  9206                           
  9207                           ; BSR set to: 1
  9208  0100EC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9209  0100F0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9210  0100F4  0EB4               	movlw	low STR_50
  9211  0100F6  6F19               	movwf	strcmp@s2& (0+255),b
  9212  0100F8  0EFF               	movlw	high STR_50
  9213  0100FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9214  0100FC  EC60  F0C1         	call	_strcmp	;wreg free
  9215  010100  0101               	movlb	1	; () banked
  9216  010102  5117               	movf	?_strcmp& (0+255),w,b
  9217  010104  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9218  010106  A4D8               	btfss	status,2,c
  9219  010108  D018               	goto	l1212
  9220  01010A                     u25530:
  9221                           
  9222                           ; BSR set to: 1
  9223                           ;ring_buffer_LUT.c: 95: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9224                           
  9225                           ; BSR set to: 1
  9226  01010A  0E00               	movlw	0
  9227  01010C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9228  01010E  0E00               	movlw	0
  9229  010110  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9230  010112  0E02               	movlw	2
  9231  010114  EC9B  F09E         	call	_terminal_textAttributes
  9232                           
  9233                           ;ring_buffer_LUT.c: 96: printf("AC Power Meter\n\r");
  9234  010118  0EC0               	movlw	low STR_51
  9235  01011A  0101               	movlb	1	; () banked
  9236  01011C  6F82               	movwf	printf@f& (0+255),b
  9237  01011E  0EFD               	movlw	high STR_51
  9238  010120  6F83               	movwf	(printf@f+1)& (0+255),b
  9239  010122  EC50  F087         	call	_printf	;wreg free
  9240                           
  9241                           ;ring_buffer_LUT.c: 97: printf("Marquette University ELEN 3035 Final Project\n\r");
  9242  010126  0E1F               	movlw	low STR_52
  9243  010128  0101               	movlb	1	; () banked
  9244  01012A  6F82               	movwf	printf@f& (0+255),b
  9245  01012C  0EF9               	movlw	high STR_52
  9246  01012E  6F83               	movwf	(printf@f+1)& (0+255),b
  9247  010130  EC50  F087         	call	_printf	;wreg free
  9248                           
  9249                           ;ring_buffer_LUT.c: 98: terminal_textAttributesReset();
  9250  010134  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9251                           
  9252                           ;ring_buffer_LUT.c: 100: }
  9253  010138  0012               	return	
  9254  01013A                     l1212:
  9255                           
  9256                           ;ring_buffer_LUT.c: 103: else if((0 == strcmp(line, "Device ID?"))) {
  9257  01013A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9258  01013E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9259  010142  0E50               	movlw	low STR_53
  9260  010144  0101               	movlb	1	; () banked
  9261  010146  6F19               	movwf	strcmp@s2& (0+255),b
  9262  010148  0EFF               	movlw	high STR_53
  9263  01014A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9264  01014C  EC60  F0C1         	call	_strcmp	;wreg free
  9265  010150  0101               	movlb	1	; () banked
  9266  010152  5117               	movf	?_strcmp& (0+255),w,b
  9267  010154  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9268  010156  A4D8               	btfss	status,2,c
  9269  010158  D023               	goto	l1216
  9270                           
  9271                           ; BSR set to: 1
  9272                           ;ring_buffer_LUT.c: 105: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9273  01015A  0E00               	movlw	0
  9274  01015C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9275  01015E  0E00               	movlw	0
  9276  010160  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9277  010162  0E02               	movlw	2
  9278  010164  EC9B  F09E         	call	_terminal_textAttributes
  9279                           
  9280                           ;ring_buffer_LUT.c: 108: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
  9281                           ;ring_buffer_LUT.c: 109: "part number of %s\n\r",
  9282                           ;ring_buffer_LUT.c: 110: getDeviceID(),
  9283                           ;ring_buffer_LUT.c: 111: getDeviceIDString(getDeviceID()));
  9284  010168  0E2F               	movlw	low STR_54
  9285  01016A  0101               	movlb	1	; () banked
  9286  01016C  6F82               	movwf	printf@f& (0+255),b
  9287  01016E  0EF5               	movlw	high STR_54
  9288  010170  6F83               	movwf	(printf@f+1)& (0+255),b
  9289  010172  EC19  F0C5         	call	_getDeviceID	;wreg free
  9290  010176  C122  F184         	movff	?_getDeviceID,?_printf+2
  9291  01017A  C123  F185         	movff	?_getDeviceID+1,?_printf+3
  9292  01017E  EC19  F0C5         	call	_getDeviceID	;wreg free
  9293  010182  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
  9294  010186  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
  9295  01018A  EC5A  F0C0         	call	_getDeviceIDString	;wreg free
  9296  01018E  C124  F186         	movff	?_getDeviceIDString,?_printf+4
  9297  010192  C125  F187         	movff	?_getDeviceIDString+1,?_printf+5
  9298  010196  EC50  F087         	call	_printf	;wreg free
  9299                           
  9300                           ;ring_buffer_LUT.c: 113: terminal_textAttributesReset();
  9301  01019A  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9302                           
  9303                           ;ring_buffer_LUT.c: 115: }
  9304  01019E  0012               	return	
  9305  0101A0                     l1216:
  9306                           
  9307                           ;ring_buffer_LUT.c: 118: else if((0 == strcmp(line, "Revision ID?"))) {
  9308  0101A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9309  0101A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9310  0101A8  0E11               	movlw	low STR_55
  9311  0101AA  0101               	movlb	1	; () banked
  9312  0101AC  6F19               	movwf	strcmp@s2& (0+255),b
  9313  0101AE  0EFF               	movlw	high STR_55
  9314  0101B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9315  0101B2  EC60  F0C1         	call	_strcmp	;wreg free
  9316  0101B6  0101               	movlb	1	; () banked
  9317  0101B8  5117               	movf	?_strcmp& (0+255),w,b
  9318  0101BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9319  0101BC  A4D8               	btfss	status,2,c
  9320  0101BE  D022               	goto	l1218
  9321                           
  9322                           ; BSR set to: 1
  9323                           ;ring_buffer_LUT.c: 120: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9324  0101C0  0E00               	movlw	0
  9325  0101C2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9326  0101C4  0E00               	movlw	0
  9327  0101C6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9328  0101C8  0E02               	movlw	2
  9329  0101CA  EC9B  F09E         	call	_terminal_textAttributes
  9330                           
  9331                           ;ring_buffer_LUT.c: 123: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
  9332                           ;ring_buffer_LUT.c: 124: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
  9333  0101CE  0ECA               	movlw	low STR_56
  9334  0101D0  0101               	movlb	1	; () banked
  9335  0101D2  6F82               	movwf	printf@f& (0+255),b
  9336  0101D4  0EF6               	movlw	high STR_56
  9337  0101D6  6F83               	movwf	(printf@f+1)& (0+255),b
  9338  0101D8  EC33  F0C3         	call	_getMajorRevisionID	;wreg free
  9339  0101DC  0101               	movlb	1	; () banked
  9340  0101DE  6FB6               	movwf	??_ringBufferLUT& (0+255),b
  9341  0101E0  0E41               	movlw	65
  9342  0101E2  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
  9343  0101E4  6F84               	movwf	(?_printf+2)& (0+255),b
  9344  0101E6  6B85               	clrf	(?_printf+3)& (0+255),b
  9345  0101E8  0E00               	movlw	0
  9346  0101EA  2385               	addwfc	(?_printf+3)& (0+255),f,b
  9347  0101EC  ECBD  F0C4         	call	_getMinorRevisionID	;wreg free
  9348  0101F0  0101               	movlb	1	; () banked
  9349  0101F2  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9350  0101F4  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9351  0101F6  6F86               	movwf	(?_printf+4)& (0+255),b
  9352  0101F8  6B87               	clrf	(?_printf+5)& (0+255),b
  9353  0101FA  EC50  F087         	call	_printf	;wreg free
  9354                           
  9355                           ;ring_buffer_LUT.c: 126: terminal_textAttributesReset();
  9356  0101FE  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9357                           
  9358                           ;ring_buffer_LUT.c: 128: }
  9359  010202  0012               	return	
  9360  010204                     l1218:
  9361                           
  9362                           ;ring_buffer_LUT.c: 131: else if((0 == strcmp(line, "User IDs?"))) {
  9363  010204  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9364  010208  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9365  01020C  0E71               	movlw	low STR_57
  9366  01020E  0101               	movlb	1	; () banked
  9367  010210  6F19               	movwf	strcmp@s2& (0+255),b
  9368  010212  0EFF               	movlw	high STR_57
  9369  010214  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9370  010216  EC60  F0C1         	call	_strcmp	;wreg free
  9371  01021A  0101               	movlb	1	; () banked
  9372  01021C  5117               	movf	?_strcmp& (0+255),w,b
  9373  01021E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9374  010220  A4D8               	btfss	status,2,c
  9375  010222  D03E               	goto	l1220
  9376                           
  9377                           ; BSR set to: 1
  9378                           ;ring_buffer_LUT.c: 133: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9379  010224  0E00               	movlw	0
  9380  010226  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9381  010228  0E00               	movlw	0
  9382  01022A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9383  01022C  0E02               	movlw	2
  9384  01022E  EC9B  F09E         	call	_terminal_textAttributes
  9385                           
  9386                           ;ring_buffer_LUT.c: 135: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  9387  010232  0E0D               	movlw	low STR_58
  9388  010234  0101               	movlb	1	; () banked
  9389  010236  6F82               	movwf	printf@f& (0+255),b
  9390  010238  0EF6               	movlw	high STR_58
  9391  01023A  6F83               	movwf	(printf@f+1)& (0+255),b
  9392  01023C  EC50  F087         	call	_printf	;wreg free
  9393                           
  9394                           ;ring_buffer_LUT.c: 138: for (int userID = 0; userID <= 7; userID++) {
  9395  010240  0E00               	movlw	0
  9396  010242  0103               	movlb	3	; () banked
  9397  010244  6FAA               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  9398  010246  0E00               	movlw	0
  9399  010248  6FA9               	movwf	ringBufferLUT@userID& (0+255),b
  9400  01024A                     l19054:
  9401                           
  9402                           ; BSR set to: 3
  9403  01024A  BFAA               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  9404  01024C  D006               	goto	l1221
  9405  01024E  51AA               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  9406  010250  E124               	bnz	l19064
  9407  010252  0E08               	movlw	8
  9408  010254  5DA9               	subwf	ringBufferLUT@userID& (0+255),w,b
  9409  010256  B0D8               	btfsc	status,0,c
  9410  010258  D020               	goto	u25580
  9411  01025A                     l1221:
  9412                           
  9413                           ; BSR set to: 3
  9414                           ;ring_buffer_LUT.c: 140: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
  9415                           ;ring_buffer_LUT.c: 141: userID,
  9416                           ;ring_buffer_LUT.c: 142: (2 * userID),
  9417                           ;ring_buffer_LUT.c: 143: getUserID(userID));
  9418                           
  9419                           ; BSR set to: 3
  9420  01025A  0EE8               	movlw	low STR_59
  9421  01025C  0101               	movlb	1	; () banked
  9422  01025E  6F82               	movwf	printf@f& (0+255),b
  9423  010260  0EF7               	movlw	high STR_59
  9424  010262  6F83               	movwf	(printf@f+1)& (0+255),b
  9425  010264  C3A9  F184         	movff	ringBufferLUT@userID,?_printf+2
  9426  010268  C3AA  F185         	movff	ringBufferLUT@userID+1,?_printf+3
  9427  01026C  90D8               	bcf	status,0,c
  9428  01026E  0103               	movlb	3	; () banked
  9429  010270  35A9               	rlcf	ringBufferLUT@userID& (0+255),w,b
  9430  010272  0101               	movlb	1	; () banked
  9431  010274  6F86               	movwf	(?_printf+4)& (0+255),b
  9432  010276  0103               	movlb	3	; () banked
  9433  010278  35AA               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  9434  01027A  0101               	movlb	1	; () banked
  9435  01027C  6F87               	movwf	(?_printf+5)& (0+255),b
  9436  01027E  0103               	movlb	3	; () banked
  9437  010280  51A9               	movf	ringBufferLUT@userID& (0+255),w,b
  9438  010282  ECB1  F0C2         	call	_getUserID
  9439  010286  C122  F188         	movff	?_getUserID,?_printf+6
  9440  01028A  C123  F189         	movff	?_getUserID+1,?_printf+7
  9441  01028E  EC50  F087         	call	_printf	;wreg free
  9442  010292  0103               	movlb	3	; () banked
  9443  010294  4BA9               	infsnz	ringBufferLUT@userID& (0+255),f,b
  9444  010296  2BAA               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  9445  010298  D7D8               	goto	l19054
  9446  01029A                     u25580:
  9447  01029A                     l19064:
  9448                           
  9449                           ; BSR set to: 3
  9450                           ;ring_buffer_LUT.c: 145: }
  9451                           ;ring_buffer_LUT.c: 147: terminal_textAttributesReset();
  9452  01029A  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9453                           
  9454                           ;ring_buffer_LUT.c: 149: }
  9455  01029E  0012               	return	
  9456  0102A0                     l1220:
  9457                           
  9458                           ;ring_buffer_LUT.c: 152: else if((0 == strcmp(line, "ADC Error?"))) {
  9459  0102A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9460  0102A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9461  0102A8  0E66               	movlw	low STR_60
  9462  0102AA  0101               	movlb	1	; () banked
  9463  0102AC  6F19               	movwf	strcmp@s2& (0+255),b
  9464  0102AE  0EFF               	movlw	high STR_60
  9465  0102B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9466  0102B2  EC60  F0C1         	call	_strcmp	;wreg free
  9467  0102B6  0101               	movlb	1	; () banked
  9468  0102B8  5117               	movf	?_strcmp& (0+255),w,b
  9469  0102BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9470  0102BC  A4D8               	btfss	status,2,c
  9471  0102BE  D0A4               	goto	l1224
  9472                           
  9473                           ; BSR set to: 1
  9474                           ;ring_buffer_LUT.c: 154: if (adc_error_flag) {
  9475  0102C0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  9476  0102C2  D090               	goto	l1225
  9477                           
  9478                           ; BSR set to: 1
  9479                           ;ring_buffer_LUT.c: 156: terminal_textAttributes(RED, BLACK, NORMAL);
  9480  0102C4  0E00               	movlw	0
  9481  0102C6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9482  0102C8  0E00               	movlw	0
  9483  0102CA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9484  0102CC  0E01               	movlw	1
  9485  0102CE  EC9B  F09E         	call	_terminal_textAttributes
  9486                           
  9487                           ;ring_buffer_LUT.c: 159: current_adc_channel = ADPCH;
  9488  0102D2  CF5F F1DB          	movff	3935,_current_adc_channel	;volatile
  9489                           
  9490                           ;ring_buffer_LUT.c: 162: char channel_name[22];
  9491                           ;ring_buffer_LUT.c: 164: switch (current_adc_channel) {
  9492  0102D6  D060               	goto	l1226
  9493  0102D8                     
  9494                           ;ring_buffer_LUT.c: 167: strcpy(channel_name, "ISNS");
  9495  0102D8  0E80               	movlw	low ringBufferLUT@channel_name
  9496  0102DA  0101               	movlb	1	; () banked
  9497  0102DC  6F17               	movwf	strcpy@to& (0+255),b
  9498  0102DE  0E03               	movlw	high ringBufferLUT@channel_name
  9499  0102E0  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9500  0102E2  0EA5               	movlw	low STR_61
  9501  0102E4  6F19               	movwf	strcpy@from& (0+255),b
  9502  0102E6  0EFF               	movlw	high STR_61
  9503  0102E8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9504  0102EA  EC8B  F0C3         	call	_strcpy	;wreg free
  9505                           
  9506                           ;ring_buffer_LUT.c: 168: break;
  9507  0102EE  D06C               	goto	l1228
  9508  0102F0                     
  9509                           ;ring_buffer_LUT.c: 171: strcpy(channel_name, "POS12");
  9510  0102F0  0E80               	movlw	low ringBufferLUT@channel_name
  9511  0102F2  0101               	movlb	1	; () banked
  9512  0102F4  6F17               	movwf	strcpy@to& (0+255),b
  9513  0102F6  0E03               	movlw	high ringBufferLUT@channel_name
  9514  0102F8  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9515  0102FA  0E93               	movlw	low STR_62
  9516  0102FC  6F19               	movwf	strcpy@from& (0+255),b
  9517  0102FE  0EFF               	movlw	high STR_62
  9518  010300  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9519  010302  EC8B  F0C3         	call	_strcpy	;wreg free
  9520                           
  9521                           ;ring_buffer_LUT.c: 172: break;
  9522  010306  D060               	goto	l1228
  9523  010308                     
  9524                           ;ring_buffer_LUT.c: 175: strcpy(channel_name, "POS3P3");
  9525  010308  0E80               	movlw	low ringBufferLUT@channel_name
  9526  01030A  0101               	movlb	1	; () banked
  9527  01030C  6F17               	movwf	strcpy@to& (0+255),b
  9528  01030E  0E03               	movlw	high ringBufferLUT@channel_name
  9529  010310  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9530  010312  0E8C               	movlw	low STR_63
  9531  010314  6F19               	movwf	strcpy@from& (0+255),b
  9532  010316  0EFF               	movlw	high STR_63
  9533  010318  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9534  01031A  EC8B  F0C3         	call	_strcpy	;wreg free
  9535                           
  9536                           ;ring_buffer_LUT.c: 176: break;
  9537  01031E  D054               	goto	l1228
  9538  010320                     
  9539                           ;ring_buffer_LUT.c: 179: strcpy(channel_name, "Internal AVSS");
  9540  010320  0E80               	movlw	low ringBufferLUT@channel_name
  9541  010322  0101               	movlb	1	; () banked
  9542  010324  6F17               	movwf	strcpy@to& (0+255),b
  9543  010326  0E03               	movlw	high ringBufferLUT@channel_name
  9544  010328  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9545  01032A  0EE8               	movlw	low STR_64
  9546  01032C  6F19               	movwf	strcpy@from& (0+255),b
  9547  01032E  0EFE               	movlw	high STR_64
  9548  010330  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9549  010332  EC8B  F0C3         	call	_strcpy	;wreg free
  9550                           
  9551                           ;ring_buffer_LUT.c: 180: break;
  9552  010336  D048               	goto	l1228
  9553  010338                     
  9554                           ;ring_buffer_LUT.c: 183: strcpy(channel_name, "Internal Temp");
  9555  010338  0E80               	movlw	low ringBufferLUT@channel_name
  9556  01033A  0101               	movlb	1	; () banked
  9557  01033C  6F17               	movwf	strcpy@to& (0+255),b
  9558  01033E  0E03               	movlw	high ringBufferLUT@channel_name
  9559  010340  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9560  010342  0EF6               	movlw	low STR_65
  9561  010344  6F19               	movwf	strcpy@from& (0+255),b
  9562  010346  0EFE               	movlw	high STR_65
  9563  010348  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9564  01034A  EC8B  F0C3         	call	_strcpy	;wreg free
  9565                           
  9566                           ;ring_buffer_LUT.c: 184: break;
  9567  01034E  D03C               	goto	l1228
  9568  010350                     
  9569                           ;ring_buffer_LUT.c: 187: strcpy(channel_name, "Internal DAC1");
  9570  010350  0E80               	movlw	low ringBufferLUT@channel_name
  9571  010352  0101               	movlb	1	; () banked
  9572  010354  6F17               	movwf	strcpy@to& (0+255),b
  9573  010356  0E03               	movlw	high ringBufferLUT@channel_name
  9574  010358  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9575  01035A  0EB0               	movlw	low STR_66
  9576  01035C  6F19               	movwf	strcpy@from& (0+255),b
  9577  01035E  0EFE               	movlw	high STR_66
  9578  010360  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9579  010362  EC8B  F0C3         	call	_strcpy	;wreg free
  9580                           
  9581                           ;ring_buffer_LUT.c: 188: break;
  9582  010366  D030               	goto	l1228
  9583  010368                     
  9584                           ;ring_buffer_LUT.c: 191: strcpy(channel_name, "Internal FVR Buffer 1");
  9585  010368  0E80               	movlw	low ringBufferLUT@channel_name
  9586  01036A  0101               	movlb	1	; () banked
  9587  01036C  6F17               	movwf	strcpy@to& (0+255),b
  9588  01036E  0E03               	movlw	high ringBufferLUT@channel_name
  9589  010370  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9590  010372  0E20               	movlw	low STR_67
  9591  010374  6F19               	movwf	strcpy@from& (0+255),b
  9592  010376  0EFD               	movlw	high STR_67
  9593  010378  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9594  01037A  EC8B  F0C3         	call	_strcpy	;wreg free
  9595                           
  9596                           ;ring_buffer_LUT.c: 192: break;
  9597  01037E  D024               	goto	l1228
  9598  010380                     
  9599                           ;ring_buffer_LUT.c: 195: strcpy(channel_name, "Undefined");
  9600  010380  0E80               	movlw	low ringBufferLUT@channel_name
  9601  010382  0101               	movlb	1	; () banked
  9602  010384  6F17               	movwf	strcpy@to& (0+255),b
  9603  010386  0E03               	movlw	high ringBufferLUT@channel_name
  9604  010388  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9605  01038A  0E7B               	movlw	low STR_68
  9606  01038C  6F19               	movwf	strcpy@from& (0+255),b
  9607  01038E  0EFF               	movlw	high STR_68
  9608  010390  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9609  010392  EC8B  F0C3         	call	_strcpy	;wreg free
  9610                           
  9611                           ;ring_buffer_LUT.c: 198: }
  9612                           
  9613                           ;ring_buffer_LUT.c: 196: break;
  9614  010396  D018               	goto	l1228
  9615  010398                     l1226:
  9616  010398  0101               	movlb	1	; () banked
  9617  01039A  51DB               	movf	_current_adc_channel& (0+255),w,b
  9618                           
  9619                           ; Switch size 1, requested type "space"
  9620                           ; Number of cases is 7, Range of values is 0 to 63
  9621                           ; switch strategies available:
  9622                           ; Name         Instructions Cycles
  9623                           ; simple_byte           22    12 (average)
  9624                           ;	Chosen strategy is simple_byte
  9625  01039C  0A00               	xorlw	0	; case 0
  9626  01039E  B4D8               	btfsc	status,2,c
  9627  0103A0  D79B               	goto	l1227
  9628  0103A2  0A04               	xorlw	4	; case 4
  9629  0103A4  B4D8               	btfsc	status,2,c
  9630  0103A6  D7A4               	goto	l1229
  9631  0103A8  0A26               	xorlw	38	; case 34
  9632  0103AA  B4D8               	btfsc	status,2,c
  9633  0103AC  D7AD               	goto	l1230
  9634  0103AE  0A1E               	xorlw	30	; case 60
  9635  0103B0  B4D8               	btfsc	status,2,c
  9636  0103B2  D7B6               	goto	l1231
  9637  0103B4  0A01               	xorlw	1	; case 61
  9638  0103B6  B4D8               	btfsc	status,2,c
  9639  0103B8  D7BF               	goto	l1232
  9640  0103BA  0A03               	xorlw	3	; case 62
  9641  0103BC  B4D8               	btfsc	status,2,c
  9642  0103BE  D7C8               	goto	l1233
  9643  0103C0  0A01               	xorlw	1	; case 63
  9644  0103C2  B4D8               	btfsc	status,2,c
  9645  0103C4  D7D1               	goto	l1234
  9646  0103C6  D7DC               	goto	l1235
  9647  0103C8                     l1228:
  9648                           
  9649                           ;ring_buffer_LUT.c: 201: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  9650                           
  9651                           ; BSR set to: 1
  9652  0103C8  0EEF               	movlw	low STR_69
  9653  0103CA  0101               	movlb	1	; () banked
  9654  0103CC  6F82               	movwf	printf@f& (0+255),b
  9655  0103CE  0EF8               	movlw	high STR_69
  9656  0103D0  6F83               	movwf	(printf@f+1)& (0+255),b
  9657  0103D2  0E80               	movlw	low ringBufferLUT@channel_name
  9658  0103D4  6F84               	movwf	(?_printf+2)& (0+255),b
  9659  0103D6  0E03               	movlw	high ringBufferLUT@channel_name
  9660  0103D8  6F85               	movwf	(?_printf+3)& (0+255),b
  9661  0103DA  EC50  F087         	call	_printf	;wreg free
  9662                           
  9663                           ;ring_buffer_LUT.c: 202: terminal_textAttributesReset();
  9664  0103DE  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9665                           
  9666                           ;ring_buffer_LUT.c: 204: }
  9667  0103E2  0012               	return	
  9668  0103E4                     l1225:
  9669                           
  9670                           ;ring_buffer_LUT.c: 206: else {
  9671                           ;ring_buffer_LUT.c: 208: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9672  0103E4  0E00               	movlw	0
  9673  0103E6  0101               	movlb	1	; () banked
  9674  0103E8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9675  0103EA  0E00               	movlw	0
  9676  0103EC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9677  0103EE  0E02               	movlw	2
  9678  0103F0  EC9B  F09E         	call	_terminal_textAttributes
  9679                           
  9680                           ;ring_buffer_LUT.c: 209: printf("No ADC Error detected\n\r");
  9681  0103F4  0EF2               	movlw	low STR_70
  9682  0103F6  0101               	movlb	1	; () banked
  9683  0103F8  6F82               	movwf	printf@f& (0+255),b
  9684  0103FA  0EFC               	movlw	high STR_70
  9685  0103FC  6F83               	movwf	(printf@f+1)& (0+255),b
  9686  0103FE  EC50  F087         	call	_printf	;wreg free
  9687                           
  9688                           ;ring_buffer_LUT.c: 210: terminal_textAttributesReset();
  9689  010402  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9690                           
  9691                           ;ring_buffer_LUT.c: 212: }
  9692                           ;ring_buffer_LUT.c: 214: }
  9693  010406  0012               	return	
  9694  010408                     l1224:
  9695                           
  9696                           ;ring_buffer_LUT.c: 217: else if((0 == strcmp(line, "Clear ADC Error"))) {
  9697  010408  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9698  01040C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9699  010410  0E64               	movlw	low STR_71
  9700  010412  0101               	movlb	1	; () banked
  9701  010414  6F19               	movwf	strcmp@s2& (0+255),b
  9702  010416  0EFE               	movlw	high STR_71
  9703  010418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9704  01041A  EC60  F0C1         	call	_strcmp	;wreg free
  9705  01041E  0101               	movlb	1	; () banked
  9706  010420  5117               	movf	?_strcmp& (0+255),w,b
  9707  010422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9708  010424  A4D8               	btfss	status,2,c
  9709  010426  D018               	goto	l1238
  9710                           
  9711                           ; BSR set to: 1
  9712                           ;ring_buffer_LUT.c: 219: LATFbits.LATF3 = 0;
  9713  010428  967E               	bcf	3966,3,c	;volatile
  9714                           
  9715                           ;ring_buffer_LUT.c: 220: adc_error_flag = 0;
  9716  01042A  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  9717                           
  9718                           ;ring_buffer_LUT.c: 222: PIE5bits.TMR7IE = 1;
  9719  01042C  010E               	movlb	14	; () banked
  9720  01042E  8D2E               	bsf	46,6,b	;volatile
  9721                           
  9722                           ; BSR set to: 14
  9723                           ;ring_buffer_LUT.c: 223: TMR7_StopTimer();
  9724  010430  EC1E  F0C6         	call	_TMR7_StopTimer	;wreg free
  9725                           
  9726                           ;ring_buffer_LUT.c: 225: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9727  010434  0E00               	movlw	0
  9728  010436  0101               	movlb	1	; () banked
  9729  010438  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9730  01043A  0E00               	movlw	0
  9731  01043C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9732  01043E  0E02               	movlw	2
  9733  010440  EC9B  F09E         	call	_terminal_textAttributes
  9734                           
  9735                           ;ring_buffer_LUT.c: 226: printf("Clearing ADC Error\n\r");
  9736  010444  0E4B               	movlw	low STR_72
  9737  010446  0101               	movlb	1	; () banked
  9738  010448  6F82               	movwf	printf@f& (0+255),b
  9739  01044A  0EFD               	movlw	high STR_72
  9740  01044C  6F83               	movwf	(printf@f+1)& (0+255),b
  9741  01044E  EC50  F087         	call	_printf	;wreg free
  9742                           
  9743                           ;ring_buffer_LUT.c: 227: terminal_textAttributesReset();
  9744  010452  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9745                           
  9746                           ;ring_buffer_LUT.c: 229: }
  9747  010456  0012               	return	
  9748  010458                     l1238:
  9749                           
  9750                           ;ring_buffer_LUT.c: 232: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
  9751  010458  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9752  01045C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9753  010460  0EE2               	movlw	low STR_73
  9754  010462  0101               	movlb	1	; () banked
  9755  010464  6F19               	movwf	strcmp@s2& (0+255),b
  9756  010466  0EFD               	movlw	high STR_73
  9757  010468  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9758  01046A  EC60  F0C1         	call	_strcmp	;wreg free
  9759  01046E  0101               	movlb	1	; () banked
  9760  010470  5117               	movf	?_strcmp& (0+255),w,b
  9761  010472  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9762  010474  A4D8               	btfss	status,2,c
  9763  010476  D026               	goto	l1240
  9764                           
  9765                           ; BSR set to: 1
  9766                           ;ring_buffer_LUT.c: 235: if (VCC_overvoltage_flag == 1) {
  9767  010478  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  9768  01047A  D012               	goto	l1241
  9769                           
  9770                           ; BSR set to: 1
  9771                           ;ring_buffer_LUT.c: 237: terminal_textAttributes(RED, BLACK, NORMAL);
  9772  01047C  0E00               	movlw	0
  9773  01047E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9774  010480  0E00               	movlw	0
  9775  010482  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9776  010484  0E01               	movlw	1
  9777  010486  EC9B  F09E         	call	_terminal_textAttributes
  9778                           
  9779                           ;ring_buffer_LUT.c: 238: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
  9780  01048A  0ECB               	movlw	low STR_74
  9781  01048C  0101               	movlb	1	; () banked
  9782  01048E  6F82               	movwf	printf@f& (0+255),b
  9783  010490  0EF5               	movlw	high STR_74
  9784  010492  6F83               	movwf	(printf@f+1)& (0+255),b
  9785  010494  EC50  F087         	call	_printf	;wreg free
  9786                           
  9787                           ;ring_buffer_LUT.c: 239: terminal_textAttributesReset();
  9788  010498  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9789                           
  9790                           ;ring_buffer_LUT.c: 242: VCC_overvoltage_flag = 0;
  9791  01049C  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  9792                           
  9793                           ;ring_buffer_LUT.c: 244: }
  9794  01049E  0012               	return	
  9795  0104A0                     l1241:
  9796                           
  9797                           ;ring_buffer_LUT.c: 246: else {
  9798                           ;ring_buffer_LUT.c: 248: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9799  0104A0  0E00               	movlw	0
  9800  0104A2  0101               	movlb	1	; () banked
  9801  0104A4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9802  0104A6  0E00               	movlw	0
  9803  0104A8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9804  0104AA  0E02               	movlw	2
  9805  0104AC  EC9B  F09E         	call	_terminal_textAttributes
  9806                           
  9807                           ;ring_buffer_LUT.c: 249: printf("VCC Overvoltage condition has not occurred\n\r");
  9808  0104B0  0ED8               	movlw	low STR_75
  9809  0104B2  0101               	movlb	1	; () banked
  9810  0104B4  6F82               	movwf	printf@f& (0+255),b
  9811  0104B6  0EF9               	movlw	high STR_75
  9812  0104B8  6F83               	movwf	(printf@f+1)& (0+255),b
  9813  0104BA  EC50  F087         	call	_printf	;wreg free
  9814                           
  9815                           ;ring_buffer_LUT.c: 250: terminal_textAttributesReset();
  9816  0104BE  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9817                           
  9818                           ;ring_buffer_LUT.c: 252: }
  9819                           ;ring_buffer_LUT.c: 254: }
  9820  0104C2  0012               	return	
  9821  0104C4                     l1240:
  9822                           
  9823                           ;ring_buffer_LUT.c: 257: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  9824  0104C4  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9825  0104C8  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9826  0104CC  0E24               	movlw	low STR_76
  9827  0104CE  0101               	movlb	1	; () banked
  9828  0104D0  6F19               	movwf	strcmp@s2& (0+255),b
  9829  0104D2  0EFE               	movlw	high STR_76
  9830  0104D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9831  0104D6  EC60  F0C1         	call	_strcmp	;wreg free
  9832  0104DA  0101               	movlb	1	; () banked
  9833  0104DC  5117               	movf	?_strcmp& (0+255),w,b
  9834  0104DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9835  0104E0  A4D8               	btfss	status,2,c
  9836  0104E2  D019               	goto	l1244
  9837                           
  9838                           ; BSR set to: 1
  9839                           ;ring_buffer_LUT.c: 259: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9840  0104E4  0E00               	movlw	0
  9841  0104E6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9842  0104E8  0E00               	movlw	0
  9843  0104EA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9844  0104EC  0E06               	movlw	6
  9845  0104EE  EC9B  F09E         	call	_terminal_textAttributes
  9846                           
  9847                           ;ring_buffer_LUT.c: 260: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
  9848  0104F2  0E1F               	movlw	low STR_77
  9849  0104F4  0101               	movlb	1	; () banked
  9850  0104F6  6F82               	movwf	printf@f& (0+255),b
  9851  0104F8  0EFB               	movlw	high STR_77
  9852  0104FA  6F83               	movwf	(printf@f+1)& (0+255),b
  9853  0104FC  C1CF  F184         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  9854  010500  C1D0  F185         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  9855  010504  C1D1  F186         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  9856  010508  C1D2  F187         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
  9857  01050C  EC50  F087         	call	_printf	;wreg free
  9858                           
  9859                           ;ring_buffer_LUT.c: 261: terminal_textAttributesReset();
  9860  010510  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9861                           
  9862                           ;ring_buffer_LUT.c: 263: }
  9863  010514  0012               	return	
  9864  010516                     l1244:
  9865                           
  9866                           ;ring_buffer_LUT.c: 266: else if((0 == strcmp(line, "Measure POS12?"))) {
  9867  010516  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9868  01051A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9869  01051E  0E83               	movlw	low STR_78
  9870  010520  0101               	movlb	1	; () banked
  9871  010522  6F19               	movwf	strcmp@s2& (0+255),b
  9872  010524  0EFE               	movlw	high STR_78
  9873  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9874  010528  EC60  F0C1         	call	_strcmp	;wreg free
  9875  01052C  0101               	movlb	1	; () banked
  9876  01052E  5117               	movf	?_strcmp& (0+255),w,b
  9877  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9878  010532  A4D8               	btfss	status,2,c
  9879  010534  D019               	goto	l1246
  9880                           
  9881                           ; BSR set to: 1
  9882                           ;ring_buffer_LUT.c: 268: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9883  010536  0E00               	movlw	0
  9884  010538  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9885  01053A  0E00               	movlw	0
  9886  01053C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9887  01053E  0E06               	movlw	6
  9888  010540  EC9B  F09E         	call	_terminal_textAttributes
  9889                           
  9890                           ;ring_buffer_LUT.c: 269: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
  9891  010544  0E8D               	movlw	low STR_79
  9892  010546  0101               	movlb	1	; () banked
  9893  010548  6F82               	movwf	printf@f& (0+255),b
  9894  01054A  0EFB               	movlw	high STR_79
  9895  01054C  6F83               	movwf	(printf@f+1)& (0+255),b
  9896  01054E  C1CB  F184         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  9897  010552  C1CC  F185         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  9898  010556  C1CD  F186         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  9899  01055A  C1CE  F187         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
  9900  01055E  EC50  F087         	call	_printf	;wreg free
  9901                           
  9902                           ;ring_buffer_LUT.c: 270: terminal_textAttributesReset();
  9903  010562  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9904                           
  9905                           ;ring_buffer_LUT.c: 272: }
  9906  010566  0012               	return	
  9907  010568                     l1246:
  9908                           
  9909                           ;ring_buffer_LUT.c: 275: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  9910  010568  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9911  01056C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9912  010570  0E9D               	movlw	low STR_80
  9913  010572  0101               	movlb	1	; () banked
  9914  010574  6F19               	movwf	strcmp@s2& (0+255),b
  9915  010576  0EFD               	movlw	high STR_80
  9916  010578  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9917  01057A  EC60  F0C1         	call	_strcmp	;wreg free
  9918  01057E  0101               	movlb	1	; () banked
  9919  010580  5117               	movf	?_strcmp& (0+255),w,b
  9920  010582  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9921  010584  A4D8               	btfss	status,2,c
  9922  010586  D019               	goto	l1248
  9923                           
  9924                           ; BSR set to: 1
  9925                           ;ring_buffer_LUT.c: 277: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9926  010588  0E00               	movlw	0
  9927  01058A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9928  01058C  0E00               	movlw	0
  9929  01058E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9930  010590  0E06               	movlw	6
  9931  010592  EC9B  F09E         	call	_terminal_textAttributes
  9932                           
  9933                           ;ring_buffer_LUT.c: 278: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
  9934  010596  0E69               	movlw	low STR_81
  9935  010598  0101               	movlb	1	; () banked
  9936  01059A  6F82               	movwf	printf@f& (0+255),b
  9937  01059C  0EFB               	movlw	high STR_81
  9938  01059E  6F83               	movwf	(printf@f+1)& (0+255),b
  9939  0105A0  C254  F184         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  9940  0105A4  C255  F185         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  9941  0105A8  C256  F186         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  9942  0105AC  C257  F187         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
  9943  0105B0  EC50  F087         	call	_printf	;wreg free
  9944                           
  9945                           ;ring_buffer_LUT.c: 279: terminal_textAttributesReset();
  9946  0105B4  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9947                           
  9948                           ;ring_buffer_LUT.c: 283: }
  9949  0105B8  0012               	return	
  9950  0105BA                     l1248:
  9951                           
  9952                           ;ring_buffer_LUT.c: 286: else if((0 == strcmp(line, "Measure FVR?"))) {
  9953  0105BA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9954  0105BE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9955  0105C2  0E1E               	movlw	low STR_82
  9956  0105C4  0101               	movlb	1	; () banked
  9957  0105C6  6F19               	movwf	strcmp@s2& (0+255),b
  9958  0105C8  0EFF               	movlw	high STR_82
  9959  0105CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9960  0105CC  EC60  F0C1         	call	_strcmp	;wreg free
  9961  0105D0  0101               	movlb	1	; () banked
  9962  0105D2  5117               	movf	?_strcmp& (0+255),w,b
  9963  0105D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9964  0105D6  A4D8               	btfss	status,2,c
  9965  0105D8  D019               	goto	l1250
  9966                           
  9967                           ; BSR set to: 1
  9968                           ;ring_buffer_LUT.c: 288: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9969  0105DA  0E00               	movlw	0
  9970  0105DC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
  9971  0105DE  0E00               	movlw	0
  9972  0105E0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9973  0105E2  0E06               	movlw	6
  9974  0105E4  EC9B  F09E         	call	_terminal_textAttributes
  9975                           
  9976                           ;ring_buffer_LUT.c: 289: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
  9977  0105E8  0E3F               	movlw	low STR_83
  9978  0105EA  0101               	movlb	1	; () banked
  9979  0105EC  6F82               	movwf	printf@f& (0+255),b
  9980  0105EE  0EF7               	movlw	high STR_83
  9981  0105F0  6F83               	movwf	(printf@f+1)& (0+255),b
  9982  0105F2  C1E4  F184         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  9983  0105F6  C1E5  F185         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  9984  0105FA  C1E6  F186         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  9985  0105FE  C1E7  F187         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
  9986  010602  EC50  F087         	call	_printf	;wreg free
  9987                           
  9988                           ;ring_buffer_LUT.c: 290: terminal_textAttributesReset();
  9989  010606  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
  9990                           
  9991                           ;ring_buffer_LUT.c: 292: }
  9992  01060A  0012               	return	
  9993  01060C                     l1250:
  9994                           
  9995                           ;ring_buffer_LUT.c: 295: else if((0 == strcmp(line, "Measure AVSS?"))) {
  9996  01060C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
  9997  010610  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9998  010614  0EBE               	movlw	low STR_84
  9999  010616  0101               	movlb	1	; () banked
 10000  010618  6F19               	movwf	strcmp@s2& (0+255),b
 10001  01061A  0EFE               	movlw	high STR_84
 10002  01061C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10003  01061E  EC60  F0C1         	call	_strcmp	;wreg free
 10004  010622  0101               	movlb	1	; () banked
 10005  010624  5117               	movf	?_strcmp& (0+255),w,b
 10006  010626  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10007  010628  A4D8               	btfss	status,2,c
 10008  01062A  D019               	goto	l1252
 10009                           
 10010                           ; BSR set to: 1
 10011                           ;ring_buffer_LUT.c: 297: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10012  01062C  0E00               	movlw	0
 10013  01062E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10014  010630  0E00               	movlw	0
 10015  010632  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10016  010634  0E06               	movlw	6
 10017  010636  EC9B  F09E         	call	_terminal_textAttributes
 10018                           
 10019                           ;ring_buffer_LUT.c: 298: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 10020  01063A  0EFA               	movlw	low STR_85
 10021  01063C  0101               	movlb	1	; () banked
 10022  01063E  6F82               	movwf	printf@f& (0+255),b
 10023  010640  0EFA               	movlw	high STR_85
 10024  010642  6F83               	movwf	(printf@f+1)& (0+255),b
 10025  010644  C1D3  F184         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 10026  010648  C1D4  F185         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 10027  01064C  C1D5  F186         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 10028  010650  C1D6  F187         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 10029  010654  EC50  F087         	call	_printf	;wreg free
 10030                           
 10031                           ;ring_buffer_LUT.c: 299: terminal_textAttributesReset();
 10032  010658  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10033                           
 10034                           ;ring_buffer_LUT.c: 301: }
 10035  01065C  0012               	return	
 10036  01065E                     l1252:
 10037                           
 10038                           ;ring_buffer_LUT.c: 304: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 10039  01065E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10040  010662  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10041  010666  0EA6               	movlw	low STR_86
 10042  010668  0101               	movlb	1	; () banked
 10043  01066A  6F19               	movwf	strcmp@s2& (0+255),b
 10044  01066C  0EFC               	movlw	high STR_86
 10045  01066E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10046  010670  EC60  F0C1         	call	_strcmp	;wreg free
 10047  010674  0101               	movlb	1	; () banked
 10048  010676  5117               	movf	?_strcmp& (0+255),w,b
 10049  010678  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10050  01067A  A4D8               	btfss	status,2,c
 10051  01067C  D019               	goto	l1254
 10052                           
 10053                           ; BSR set to: 1
 10054                           ;ring_buffer_LUT.c: 306: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10055  01067E  0E00               	movlw	0
 10056  010680  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10057  010682  0E00               	movlw	0
 10058  010684  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10059  010686  0E06               	movlw	6
 10060  010688  EC9B  F09E         	call	_terminal_textAttributes
 10061                           
 10062                           ;ring_buffer_LUT.c: 307: printf("Measured Current is %.3f Amps\n\r", Imeas);
 10063  01068C  0EF5               	movlw	low STR_87
 10064  01068E  0101               	movlb	1	; () banked
 10065  010690  6F82               	movwf	printf@f& (0+255),b
 10066  010692  0EFB               	movlw	high STR_87
 10067  010694  6F83               	movwf	(printf@f+1)& (0+255),b
 10068  010696  C1C3  F184         	movff	_Imeas,?_printf+2	;volatile
 10069  01069A  C1C4  F185         	movff	_Imeas+1,?_printf+3	;volatile
 10070  01069E  C1C5  F186         	movff	_Imeas+2,?_printf+4	;volatile
 10071  0106A2  C1C6  F187         	movff	_Imeas+3,?_printf+5	;volatile
 10072  0106A6  EC50  F087         	call	_printf	;wreg free
 10073                           
 10074                           ;ring_buffer_LUT.c: 308: terminal_textAttributesReset();
 10075  0106AA  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10076                           
 10077                           ;ring_buffer_LUT.c: 310: }
 10078  0106AE  0012               	return	
 10079  0106B0                     l1254:
 10080                           
 10081                           ;ring_buffer_LUT.c: 313: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 10082  0106B0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10083  0106B4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10084  0106B8  0E75               	movlw	low STR_88
 10085  0106BA  0101               	movlb	1	; () banked
 10086  0106BC  6F19               	movwf	strcmp@s2& (0+255),b
 10087  0106BE  0EFD               	movlw	high STR_88
 10088  0106C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10089  0106C2  EC60  F0C1         	call	_strcmp	;wreg free
 10090  0106C6  0101               	movlb	1	; () banked
 10091  0106C8  5117               	movf	?_strcmp& (0+255),w,b
 10092  0106CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10093  0106CC  A4D8               	btfss	status,2,c
 10094  0106CE  D019               	goto	l1256
 10095                           
 10096                           ; BSR set to: 1
 10097                           ;ring_buffer_LUT.c: 315: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10098  0106D0  0E00               	movlw	0
 10099  0106D2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10100  0106D4  0E00               	movlw	0
 10101  0106D6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10102  0106D8  0E06               	movlw	6
 10103  0106DA  EC9B  F09E         	call	_terminal_textAttributes
 10104                           
 10105                           ;ring_buffer_LUT.c: 316: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 10106  0106DE  0EB1               	movlw	low STR_89
 10107  0106E0  0101               	movlb	1	; () banked
 10108  0106E2  6F82               	movwf	printf@f& (0+255),b
 10109  0106E4  0EFB               	movlw	high STR_89
 10110  0106E6  6F83               	movwf	(printf@f+1)& (0+255),b
 10111  0106E8  C0F6  F184         	movff	_Irms,?_printf+2	;volatile
 10112  0106EC  C0F7  F185         	movff	_Irms+1,?_printf+3	;volatile
 10113  0106F0  C0F8  F186         	movff	_Irms+2,?_printf+4	;volatile
 10114  0106F4  C0F9  F187         	movff	_Irms+3,?_printf+5	;volatile
 10115  0106F8  EC50  F087         	call	_printf	;wreg free
 10116                           
 10117                           ;ring_buffer_LUT.c: 317: terminal_textAttributesReset();
 10118  0106FC  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10119                           
 10120                           ;ring_buffer_LUT.c: 319: }
 10121  010700  0012               	return	
 10122  010702                     l1256:
 10123                           
 10124                           ;ring_buffer_LUT.c: 322: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 10125  010702  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10126  010706  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10127  01070A  0E60               	movlw	low STR_90
 10128  01070C  0101               	movlb	1	; () banked
 10129  01070E  6F19               	movwf	strcmp@s2& (0+255),b
 10130  010710  0EFD               	movlw	high STR_90
 10131  010712  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10132  010714  EC60  F0C1         	call	_strcmp	;wreg free
 10133  010718  0101               	movlb	1	; () banked
 10134  01071A  5117               	movf	?_strcmp& (0+255),w,b
 10135  01071C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10136  01071E  A4D8               	btfss	status,2,c
 10137  010720  D019               	goto	l1258
 10138                           
 10139                           ; BSR set to: 1
 10140                           ;ring_buffer_LUT.c: 324: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10141  010722  0E00               	movlw	0
 10142  010724  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10143  010726  0E00               	movlw	0
 10144  010728  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10145  01072A  0E06               	movlw	6
 10146  01072C  EC9B  F09E         	call	_terminal_textAttributes
 10147                           
 10148                           ;ring_buffer_LUT.c: 325: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 10149  010730  0ED3               	movlw	low STR_91
 10150  010732  0101               	movlb	1	; () banked
 10151  010734  6F82               	movwf	printf@f& (0+255),b
 10152  010736  0EFB               	movlw	high STR_91
 10153  010738  6F83               	movwf	(printf@f+1)& (0+255),b
 10154  01073A  C1BF  F184         	movff	_Vrms,?_printf+2	;volatile
 10155  01073E  C1C0  F185         	movff	_Vrms+1,?_printf+3	;volatile
 10156  010742  C1C1  F186         	movff	_Vrms+2,?_printf+4	;volatile
 10157  010746  C1C2  F187         	movff	_Vrms+3,?_printf+5	;volatile
 10158  01074A  EC50  F087         	call	_printf	;wreg free
 10159                           
 10160                           ;ring_buffer_LUT.c: 326: terminal_textAttributesReset();
 10161  01074E  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10162                           
 10163                           ;ring_buffer_LUT.c: 328: }
 10164  010752  0012               	return	
 10165  010754                     l1258:
 10166                           
 10167                           ;ring_buffer_LUT.c: 331: else if ((0 == strcmp(line, "Measure Power?"))) {
 10168  010754  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10169  010758  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10170  01075C  0E92               	movlw	low STR_92
 10171  01075E  0101               	movlb	1	; () banked
 10172  010760  6F19               	movwf	strcmp@s2& (0+255),b
 10173  010762  0EFE               	movlw	high STR_92
 10174  010764  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10175  010766  EC60  F0C1         	call	_strcmp	;wreg free
 10176  01076A  0101               	movlb	1	; () banked
 10177  01076C  5117               	movf	?_strcmp& (0+255),w,b
 10178  01076E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10179  010770  A4D8               	btfss	status,2,c
 10180  010772  D019               	goto	l1260
 10181                           
 10182                           ; BSR set to: 1
 10183                           ;ring_buffer_LUT.c: 333: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10184  010774  0E00               	movlw	0
 10185  010776  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10186  010778  0E00               	movlw	0
 10187  01077A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10188  01077C  0E06               	movlw	6
 10189  01077E  EC9B  F09E         	call	_terminal_textAttributes
 10190                           
 10191                           ;ring_buffer_LUT.c: 334: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 10192  010782  0E79               	movlw	low STR_93
 10193  010784  0101               	movlb	1	; () banked
 10194  010786  6F82               	movwf	printf@f& (0+255),b
 10195  010788  0EF7               	movlw	high STR_93
 10196  01078A  6F83               	movwf	(printf@f+1)& (0+255),b
 10197  01078C  C1BB  F184         	movff	_Avg_Power,?_printf+2	;volatile
 10198  010790  C1BC  F185         	movff	_Avg_Power+1,?_printf+3	;volatile
 10199  010794  C1BD  F186         	movff	_Avg_Power+2,?_printf+4	;volatile
 10200  010798  C1BE  F187         	movff	_Avg_Power+3,?_printf+5	;volatile
 10201  01079C  EC50  F087         	call	_printf	;wreg free
 10202                           
 10203                           ;ring_buffer_LUT.c: 335: terminal_textAttributesReset();
 10204  0107A0  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10205                           
 10206                           ;ring_buffer_LUT.c: 337: }
 10207  0107A4  0012               	return	
 10208  0107A6                     l1260:
 10209                           
 10210                           ;ring_buffer_LUT.c: 340: else if ((0 == strcmp(line, "Enable Dimming"))) {
 10211  0107A6  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10212  0107AA  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10213  0107AE  0EA1               	movlw	low STR_94
 10214  0107B0  0101               	movlb	1	; () banked
 10215  0107B2  6F19               	movwf	strcmp@s2& (0+255),b
 10216  0107B4  0EFE               	movlw	high STR_94
 10217  0107B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10218  0107B8  EC60  F0C1         	call	_strcmp	;wreg free
 10219  0107BC  0101               	movlb	1	; () banked
 10220  0107BE  5117               	movf	?_strcmp& (0+255),w,b
 10221  0107C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10222  0107C2  A4D8               	btfss	status,2,c
 10223  0107C4  D012               	goto	l1262
 10224                           
 10225                           ; BSR set to: 1
 10226                           ;ring_buffer_LUT.c: 343: LATGbits.LATG0 = 0;
 10227  0107C6  907F               	bcf	3967,0,c	;volatile
 10228                           
 10229                           ; BSR set to: 1
 10230                           ;ring_buffer_LUT.c: 345: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10231  0107C8  0E00               	movlw	0
 10232  0107CA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10233  0107CC  0E00               	movlw	0
 10234  0107CE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10235  0107D0  0E02               	movlw	2
 10236  0107D2  EC9B  F09E         	call	_terminal_textAttributes
 10237                           
 10238                           ;ring_buffer_LUT.c: 346: printf("TRIAC output dimming has been enabled\n\r");
 10239  0107D6  0EAB               	movlw	low STR_95
 10240  0107D8  0101               	movlb	1	; () banked
 10241  0107DA  6F82               	movwf	printf@f& (0+255),b
 10242  0107DC  0EFA               	movlw	high STR_95
 10243  0107DE  6F83               	movwf	(printf@f+1)& (0+255),b
 10244  0107E0  EC50  F087         	call	_printf	;wreg free
 10245                           
 10246                           ;ring_buffer_LUT.c: 347: terminal_textAttributesReset();
 10247  0107E4  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10248                           
 10249                           ;ring_buffer_LUT.c: 349: }
 10250  0107E8  0012               	return	
 10251  0107EA                     l1262:
 10252                           
 10253                           ;ring_buffer_LUT.c: 352: else if ((0 == strcmp(line, "Disable Dimming"))) {
 10254  0107EA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10255  0107EE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10256  0107F2  0E54               	movlw	low STR_96
 10257  0107F4  0101               	movlb	1	; () banked
 10258  0107F6  6F19               	movwf	strcmp@s2& (0+255),b
 10259  0107F8  0EFE               	movlw	high STR_96
 10260  0107FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10261  0107FC  EC60  F0C1         	call	_strcmp	;wreg free
 10262  010800  0101               	movlb	1	; () banked
 10263  010802  5117               	movf	?_strcmp& (0+255),w,b
 10264  010804  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10265  010806  A4D8               	btfss	status,2,c
 10266  010808  D012               	goto	l1264
 10267                           
 10268                           ; BSR set to: 1
 10269                           ;ring_buffer_LUT.c: 355: LATGbits.LATG0 = 1;
 10270  01080A  807F               	bsf	3967,0,c	;volatile
 10271                           
 10272                           ; BSR set to: 1
 10273                           ;ring_buffer_LUT.c: 357: terminal_textAttributes(RED, BLACK, NORMAL);
 10274  01080C  0E00               	movlw	0
 10275  01080E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10276  010810  0E00               	movlw	0
 10277  010812  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10278  010814  0E01               	movlw	1
 10279  010816  EC9B  F09E         	call	_terminal_textAttributes
 10280                           
 10281                           ;ring_buffer_LUT.c: 358: printf("TRIAC output dimming has been disabled\n\r");
 10282  01081A  0E82               	movlw	low STR_97
 10283  01081C  0101               	movlb	1	; () banked
 10284  01081E  6F82               	movwf	printf@f& (0+255),b
 10285  010820  0EFA               	movlw	high STR_97
 10286  010822  6F83               	movwf	(printf@f+1)& (0+255),b
 10287  010824  EC50  F087         	call	_printf	;wreg free
 10288                           
 10289                           ;ring_buffer_LUT.c: 359: terminal_textAttributesReset();
 10290  010828  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10291                           
 10292                           ;ring_buffer_LUT.c: 361: }
 10293  01082C  0012               	return	
 10294  01082E                     l1264:
 10295                           
 10296                           ;ring_buffer_LUT.c: 364: else if ((0 == strcmp(line, "Enable Load"))) {
 10297  01082E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10298  010832  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10299  010836  0E44               	movlw	low STR_98
 10300  010838  0101               	movlb	1	; () banked
 10301  01083A  6F19               	movwf	strcmp@s2& (0+255),b
 10302  01083C  0EFF               	movlw	high STR_98
 10303  01083E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10304  010840  EC60  F0C1         	call	_strcmp	;wreg free
 10305  010844  0101               	movlb	1	; () banked
 10306  010846  5117               	movf	?_strcmp& (0+255),w,b
 10307  010848  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10308  01084A  A4D8               	btfss	status,2,c
 10309  01084C  D014               	goto	l1266
 10310                           
 10311                           ; BSR set to: 1
 10312                           ;ring_buffer_LUT.c: 366: LATGbits.LATG0 = 1;
 10313  01084E  807F               	bsf	3967,0,c	;volatile
 10314                           
 10315                           ;ring_buffer_LUT.c: 367: LATGbits.LATG1 = 0;
 10316  010850  927F               	bcf	3967,1,c	;volatile
 10317                           
 10318                           ;ring_buffer_LUT.c: 368: load_enable = 1;
 10319  010852  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10320                           
 10321                           ; BSR set to: 1
 10322                           ;ring_buffer_LUT.c: 370: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10323  010854  0E00               	movlw	0
 10324  010856  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10325  010858  0E00               	movlw	0
 10326  01085A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10327  01085C  0E02               	movlw	2
 10328  01085E  EC9B  F09E         	call	_terminal_textAttributes
 10329                           
 10330                           ;ring_buffer_LUT.c: 371: printf("Load has been enabled, dimming disabled\n\r");
 10331  010862  0E05               	movlw	low STR_99
 10332  010864  0101               	movlb	1	; () banked
 10333  010866  6F82               	movwf	printf@f& (0+255),b
 10334  010868  0EFA               	movlw	high STR_99
 10335  01086A  6F83               	movwf	(printf@f+1)& (0+255),b
 10336  01086C  EC50  F087         	call	_printf	;wreg free
 10337                           
 10338                           ;ring_buffer_LUT.c: 372: terminal_textAttributesReset();
 10339  010870  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10340                           
 10341                           ;ring_buffer_LUT.c: 374: }
 10342  010874  0012               	return	
 10343  010876                     l1266:
 10344                           
 10345                           ;ring_buffer_LUT.c: 377: else if ((0 == strcmp(line, "Load Enabled?"))) {
 10346  010876  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10347  01087A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10348  01087E  0ECC               	movlw	low STR_100
 10349  010880  0101               	movlb	1	; () banked
 10350  010882  6F19               	movwf	strcmp@s2& (0+255),b
 10351  010884  0EFE               	movlw	high STR_100
 10352  010886  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10353  010888  EC60  F0C1         	call	_strcmp	;wreg free
 10354  01088C  0101               	movlb	1	; () banked
 10355  01088E  5117               	movf	?_strcmp& (0+255),w,b
 10356  010890  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10357  010892  A4D8               	btfss	status,2,c
 10358  010894  D025               	goto	l1268
 10359                           
 10360                           ; BSR set to: 1
 10361                           ;ring_buffer_LUT.c: 379: if (load_enable == 1) {
 10362  010896  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10363  010898  D011               	goto	l1269
 10364                           
 10365                           ; BSR set to: 1
 10366                           ;ring_buffer_LUT.c: 381: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10367  01089A  0E00               	movlw	0
 10368  01089C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10369  01089E  0E00               	movlw	0
 10370  0108A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10371  0108A2  0E02               	movlw	2
 10372  0108A4  EC9B  F09E         	call	_terminal_textAttributes
 10373                           
 10374                           ;ring_buffer_LUT.c: 382: printf("Load is currently enabled\n\r");
 10375  0108A8  0E6F               	movlw	low STR_101
 10376  0108AA  0101               	movlb	1	; () banked
 10377  0108AC  6F82               	movwf	printf@f& (0+255),b
 10378  0108AE  0EFC               	movlw	high STR_101
 10379  0108B0  6F83               	movwf	(printf@f+1)& (0+255),b
 10380  0108B2  EC50  F087         	call	_printf	;wreg free
 10381                           
 10382                           ;ring_buffer_LUT.c: 383: terminal_textAttributesReset();
 10383  0108B6  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10384                           
 10385                           ;ring_buffer_LUT.c: 385: }
 10386  0108BA  0012               	return	
 10387  0108BC                     l1269:
 10388                           
 10389                           ;ring_buffer_LUT.c: 387: else {
 10390                           ;ring_buffer_LUT.c: 389: terminal_textAttributes(RED, BLACK, NORMAL);
 10391  0108BC  0E00               	movlw	0
 10392  0108BE  0101               	movlb	1	; () banked
 10393  0108C0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10394  0108C2  0E00               	movlw	0
 10395  0108C4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10396  0108C6  0E01               	movlw	1
 10397  0108C8  EC9B  F09E         	call	_terminal_textAttributes
 10398                           
 10399                           ;ring_buffer_LUT.c: 390: printf("Load is currently disabled\n\r");
 10400  0108CC  0E52               	movlw	low STR_102
 10401  0108CE  0101               	movlb	1	; () banked
 10402  0108D0  6F82               	movwf	printf@f& (0+255),b
 10403  0108D2  0EFC               	movlw	high STR_102
 10404  0108D4  6F83               	movwf	(printf@f+1)& (0+255),b
 10405  0108D6  EC50  F087         	call	_printf	;wreg free
 10406                           
 10407                           ;ring_buffer_LUT.c: 391: terminal_textAttributesReset();
 10408  0108DA  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10409                           
 10410                           ;ring_buffer_LUT.c: 394: }
 10411                           ;ring_buffer_LUT.c: 396: }
 10412  0108DE  0012               	return	
 10413  0108E0                     l1268:
 10414                           
 10415                           ;ring_buffer_LUT.c: 399: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 10416  0108E0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10417  0108E4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10418  0108E8  0ED1               	movlw	low STR_103
 10419  0108EA  0101               	movlb	1	; () banked
 10420  0108EC  6F19               	movwf	strcmp@s2& (0+255),b
 10421  0108EE  0EFD               	movlw	high STR_103
 10422  0108F0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10423  0108F2  EC60  F0C1         	call	_strcmp	;wreg free
 10424  0108F6  0101               	movlb	1	; () banked
 10425  0108F8  5117               	movf	?_strcmp& (0+255),w,b
 10426  0108FA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10427  0108FC  A4D8               	btfss	status,2,c
 10428  0108FE  D039               	goto	l1272
 10429                           
 10430                           ; BSR set to: 1
 10431                           ;ring_buffer_LUT.c: 401: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 10432  010900  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10433                           
 10434                           ; BSR set to: 1
 10435  010902  B07F               	btfsc	3967,0,c	;volatile
 10436  010904  D011               	goto	l1273
 10437                           
 10438                           ; BSR set to: 1
 10439                           ;ring_buffer_LUT.c: 403: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10440  010906  0E00               	movlw	0
 10441  010908  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10442  01090A  0E00               	movlw	0
 10443  01090C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10444  01090E  0E02               	movlw	2
 10445  010910  EC9B  F09E         	call	_terminal_textAttributes
 10446                           
 10447                           ;ring_buffer_LUT.c: 404: printf("Dimming is currently enabled\n\r");
 10448  010914  0E15               	movlw	low STR_104
 10449  010916  0101               	movlb	1	; () banked
 10450  010918  6F82               	movwf	printf@f& (0+255),b
 10451  01091A  0EFC               	movlw	high STR_104
 10452  01091C  6F83               	movwf	(printf@f+1)& (0+255),b
 10453  01091E  EC50  F087         	call	_printf	;wreg free
 10454                           
 10455                           ;ring_buffer_LUT.c: 405: terminal_textAttributesReset();
 10456  010922  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10457                           
 10458                           ;ring_buffer_LUT.c: 407: }
 10459  010926  0012               	return	
 10460  010928                     l1273:
 10461                           
 10462                           ; BSR set to: 1
 10463                           ;ring_buffer_LUT.c: 409: else if (load_enable == 1){
 10464  010928  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10465  01092A  D011               	goto	l1275
 10466                           
 10467                           ; BSR set to: 1
 10468                           ;ring_buffer_LUT.c: 411: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 10469  01092C  0E00               	movlw	0
 10470  01092E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10471  010930  0E00               	movlw	0
 10472  010932  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10473  010934  0E03               	movlw	3
 10474  010936  EC9B  F09E         	call	_terminal_textAttributes
 10475                           
 10476                           ;ring_buffer_LUT.c: 412: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 10477  01093A  0E1E               	movlw	low STR_105
 10478  01093C  0101               	movlb	1	; () banked
 10479  01093E  6F82               	movwf	printf@f& (0+255),b
 10480  010940  0EF8               	movlw	high STR_105
 10481  010942  6F83               	movwf	(printf@f+1)& (0+255),b
 10482  010944  EC50  F087         	call	_printf	;wreg free
 10483                           
 10484                           ;ring_buffer_LUT.c: 413: terminal_textAttributesReset();
 10485  010948  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10486                           
 10487                           ;ring_buffer_LUT.c: 415: }
 10488  01094C  0012               	return	
 10489  01094E                     l1275:
 10490                           
 10491                           ;ring_buffer_LUT.c: 417: else {
 10492                           ;ring_buffer_LUT.c: 419: terminal_textAttributes(RED, BLACK, NORMAL);
 10493  01094E  0E00               	movlw	0
 10494  010950  0101               	movlb	1	; () banked
 10495  010952  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10496  010954  0E00               	movlw	0
 10497  010956  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10498  010958  0E01               	movlw	1
 10499  01095A  EC9B  F09E         	call	_terminal_textAttributes
 10500                           
 10501                           ;ring_buffer_LUT.c: 420: printf("Load and dimming are currently disabled\n\r");
 10502  01095E  0E2F               	movlw	low STR_106
 10503  010960  0101               	movlb	1	; () banked
 10504  010962  6F82               	movwf	printf@f& (0+255),b
 10505  010964  0EFA               	movlw	high STR_106
 10506  010966  6F83               	movwf	(printf@f+1)& (0+255),b
 10507  010968  EC50  F087         	call	_printf	;wreg free
 10508                           
 10509                           ;ring_buffer_LUT.c: 421: terminal_textAttributesReset();
 10510  01096C  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10511                           
 10512                           ;ring_buffer_LUT.c: 423: }
 10513                           ;ring_buffer_LUT.c: 427: }
 10514  010970  0012               	return	
 10515  010972                     l1272:
 10516                           
 10517                           ;ring_buffer_LUT.c: 432: else if ((0 == strcmp(line, "Disable Load"))) {
 10518  010972  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10519  010976  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10520  01097A  0E2B               	movlw	low STR_107
 10521  01097C  0101               	movlb	1	; () banked
 10522  01097E  6F19               	movwf	strcmp@s2& (0+255),b
 10523  010980  0EFF               	movlw	high STR_107
 10524  010982  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10525  010984  EC60  F0C1         	call	_strcmp	;wreg free
 10526  010988  0101               	movlb	1	; () banked
 10527  01098A  5117               	movf	?_strcmp& (0+255),w,b
 10528  01098C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10529  01098E  A4D8               	btfss	status,2,c
 10530  010990  D014               	goto	l1278
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;ring_buffer_LUT.c: 434: LATGbits.LATG1 = 0;
 10534  010992  927F               	bcf	3967,1,c	;volatile
 10535                           
 10536                           ;ring_buffer_LUT.c: 435: LATGbits.LATG0 = 0;
 10537  010994  907F               	bcf	3967,0,c	;volatile
 10538                           
 10539                           ;ring_buffer_LUT.c: 436: load_enable = 0;
 10540  010996  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 10541                           
 10542                           ; BSR set to: 1
 10543                           ;ring_buffer_LUT.c: 438: terminal_textAttributes(RED, BLACK, NORMAL);
 10544  010998  0E00               	movlw	0
 10545  01099A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10546  01099C  0E00               	movlw	0
 10547  01099E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10548  0109A0  0E01               	movlw	1
 10549  0109A2  EC9B  F09E         	call	_terminal_textAttributes
 10550                           
 10551                           ;ring_buffer_LUT.c: 439: printf("Load has been disabled\n\r");
 10552  0109A6  0EC0               	movlw	low STR_108
 10553  0109A8  0101               	movlb	1	; () banked
 10554  0109AA  6F82               	movwf	printf@f& (0+255),b
 10555  0109AC  0EFC               	movlw	high STR_108
 10556  0109AE  6F83               	movwf	(printf@f+1)& (0+255),b
 10557  0109B0  EC50  F087         	call	_printf	;wreg free
 10558                           
 10559                           ;ring_buffer_LUT.c: 440: terminal_textAttributesReset();
 10560  0109B4  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10561                           
 10562                           ;ring_buffer_LUT.c: 442: }
 10563  0109B8  0012               	return	
 10564  0109BA                     l1278:
 10565                           
 10566                           ;ring_buffer_LUT.c: 445: else if ((strstr(line, "Set Dimming Percentage: "))) {
 10567  0109BA  C1B4  F126         	movff	ringBufferLUT@line,strstr@s1
 10568  0109BE  C1B5  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 10569  0109C2  0ED9               	movlw	low STR_109
 10570  0109C4  0101               	movlb	1	; () banked
 10571  0109C6  6F28               	movwf	strstr@s2& (0+255),b
 10572  0109C8  0EFC               	movlw	high STR_109
 10573  0109CA  6F29               	movwf	(strstr@s2+1)& (0+255),b
 10574  0109CC  EC19  F0BD         	call	_strstr	;wreg free
 10575  0109D0  0101               	movlb	1	; () banked
 10576  0109D2  5126               	movf	?_strstr& (0+255),w,b
 10577  0109D4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 10578  0109D6  B4D8               	btfsc	status,2,c
 10579  0109D8  D131               	goto	l1280
 10580                           
 10581                           ; BSR set to: 1
 10582                           ;ring_buffer_LUT.c: 448: char arg_buff[3];
 10583                           ;ring_buffer_LUT.c: 451: for (int index = 0; index < 3; index++) {
 10584  0109DA  0E00               	movlw	0
 10585  0109DC  0103               	movlb	3	; () banked
 10586  0109DE  6FA6               	movwf	(ringBufferLUT@index+1)& (0+255),b
 10587  0109E0  0E00               	movlw	0
 10588  0109E2  6FA5               	movwf	ringBufferLUT@index& (0+255),b
 10589  0109E4                     l19204:
 10590                           
 10591                           ; BSR set to: 3
 10592  0109E4  BFA6               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 10593  0109E6  D006               	goto	l1281
 10594  0109E8  51A6               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 10595  0109EA  E11F               	bnz	l19214
 10596  0109EC  0E03               	movlw	3
 10597  0109EE  5DA5               	subwf	ringBufferLUT@index& (0+255),w,b
 10598  0109F0  B0D8               	btfsc	status,0,c
 10599  0109F2  D01B               	goto	u25850
 10600  0109F4                     l1281:
 10601                           
 10602                           ; BSR set to: 3
 10603                           ;ring_buffer_LUT.c: 453: arg_buff[index] = line[index + 24];
 10604                           
 10605                           ; BSR set to: 3
 10606  0109F4  0E18               	movlw	24
 10607  0109F6  25A5               	addwf	ringBufferLUT@index& (0+255),w,b
 10608  0109F8  0101               	movlb	1	; () banked
 10609  0109FA  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 10610  0109FC  0E00               	movlw	0
 10611  0109FE  0103               	movlb	3	; () banked
 10612  010A00  21A6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 10613  010A02  0101               	movlb	1	; () banked
 10614  010A04  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 10615  010A06  51B6               	movf	??_ringBufferLUT& (0+255),w,b
 10616  010A08  25B4               	addwf	ringBufferLUT@line& (0+255),w,b
 10617  010A0A  6ED9               	movwf	fsr2l,c
 10618  010A0C  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 10619  010A0E  21B5               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 10620  010A10  6EDA               	movwf	fsr2h,c
 10621  010A12  0EA2               	movlw	low ringBufferLUT@arg_buff
 10622  010A14  0103               	movlb	3	; () banked
 10623  010A16  25A5               	addwf	ringBufferLUT@index& (0+255),w,b
 10624  010A18  6EE1               	movwf	fsr1l,c
 10625  010A1A  0E03               	movlw	high ringBufferLUT@arg_buff
 10626  010A1C  21A6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 10627  010A1E  6EE2               	movwf	fsr1h,c
 10628  010A20  CFDF FFE7          	movff	indf2,indf1
 10629                           
 10630                           ; BSR set to: 3
 10631  010A24  4BA5               	infsnz	ringBufferLUT@index& (0+255),f,b
 10632  010A26  2BA6               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 10633  010A28  D7DD               	goto	l19204
 10634  010A2A                     u25850:
 10635  010A2A                     l19214:
 10636                           
 10637                           ; BSR set to: 3
 10638                           ;ring_buffer_LUT.c: 455: }
 10639                           ;ring_buffer_LUT.c: 457: int percentage = atoi(arg_buff);
 10640  010A2A  0EA2               	movlw	low ringBufferLUT@arg_buff
 10641  010A2C  0101               	movlb	1	; () banked
 10642  010A2E  6F1D               	movwf	atoi@s& (0+255),b
 10643  010A30  0E03               	movlw	high ringBufferLUT@arg_buff
 10644  010A32  6F1E               	movwf	(atoi@s+1)& (0+255),b
 10645  010A34  EC0E  F0BB         	call	_atoi	;wreg free
 10646  010A38  C11D  F3A7         	movff	?_atoi,ringBufferLUT@percentage
 10647  010A3C  C11E  F3A8         	movff	?_atoi+1,ringBufferLUT@percentage+1
 10648                           
 10649                           ;ring_buffer_LUT.c: 460: if ( (percentage >= 100) ||
 10650                           ;ring_buffer_LUT.c: 461: (percentage <= 0)) {
 10651  010A40  0103               	movlb	3	; () banked
 10652  010A42  BFA8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 10653  010A44  D006               	goto	u25860
 10654  010A46  51A8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 10655  010A48  E10B               	bnz	l19220
 10656  010A4A  0E64               	movlw	100
 10657  010A4C  5DA7               	subwf	ringBufferLUT@percentage& (0+255),w,b
 10658  010A4E  B0D8               	btfsc	status,0,c
 10659  010A50  D007               	goto	u25870
 10660  010A52                     u25860:
 10661                           
 10662                           ; BSR set to: 3
 10663  010A52  BFA8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 10664  010A54  D005               	goto	u25870
 10665  010A56  51A8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 10666  010A58  E12B               	bnz	l19222
 10667  010A5A  05A7               	decf	ringBufferLUT@percentage& (0+255),w,b
 10668  010A5C  B0D8               	btfsc	status,0,c
 10669  010A5E  D028               	goto	l1283
 10670  010A60                     u25870:
 10671  010A60                     l19220:
 10672                           
 10673                           ; BSR set to: 3
 10674                           ;ring_buffer_LUT.c: 463: terminal_textAttributes(RED, BLACK, NORMAL);
 10675  010A60  0E00               	movlw	0
 10676  010A62  0101               	movlb	1	; () banked
 10677  010A64  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10678  010A66  0E00               	movlw	0
 10679  010A68  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10680  010A6A  0E01               	movlw	1
 10681  010A6C  EC9B  F09E         	call	_terminal_textAttributes
 10682                           
 10683                           ;ring_buffer_LUT.c: 464: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 10684  010A70  0ED9               	movlw	low STR_110
 10685  010A72  0101               	movlb	1	; () banked
 10686  010A74  6F82               	movwf	printf@f& (0+255),b
 10687  010A76  0EF4               	movlw	high STR_110
 10688  010A78  6F83               	movwf	(printf@f+1)& (0+255),b
 10689  010A7A  EC50  F087         	call	_printf	;wreg free
 10690                           
 10691                           ;ring_buffer_LUT.c: 465: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 10692  010A7E  0E00               	movlw	0
 10693  010A80  0101               	movlb	1	; () banked
 10694  010A82  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10695  010A84  0E00               	movlw	0
 10696  010A86  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10697  010A88  0E03               	movlw	3
 10698  010A8A  EC9B  F09E         	call	_terminal_textAttributes
 10699                           
 10700                           ;ring_buffer_LUT.c: 466: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 10701  010A8E  0E73               	movlw	low STR_111
 10702  010A90  0101               	movlb	1	; () banked
 10703  010A92  6F82               	movwf	printf@f& (0+255),b
 10704  010A94  0EF4               	movlw	high STR_111
 10705  010A96  6F83               	movwf	(printf@f+1)& (0+255),b
 10706  010A98  EC50  F087         	call	_printf	;wreg free
 10707                           
 10708                           ;ring_buffer_LUT.c: 467: printf("Enter 'Help' for list of available commands\n\r");
 10709  010A9C  0E7C               	movlw	low STR_112
 10710  010A9E  0101               	movlb	1	; () banked
 10711  010AA0  6F82               	movwf	printf@f& (0+255),b
 10712  010AA2  0EF9               	movlw	high STR_112
 10713  010AA4  6F83               	movwf	(printf@f+1)& (0+255),b
 10714  010AA6  EC50  F087         	call	_printf	;wreg free
 10715                           
 10716                           ;ring_buffer_LUT.c: 468: terminal_textAttributesReset();
 10717  010AAA  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10718                           
 10719                           ;ring_buffer_LUT.c: 470: }
 10720  010AAE  0012               	return	
 10721  010AB0                     l1283:
 10722  010AB0                     l19222:
 10723                           
 10724                           ;ring_buffer_LUT.c: 473: else {
 10725                           ;ring_buffer_LUT.c: 476: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 10726  010AB0  0E00               	movlw	0
 10727  010AB2  0101               	movlb	1	; () banked
 10728  010AB4  6F41               	movwf	___fldiv@a& (0+255),b
 10729  010AB6  0E00               	movlw	0
 10730  010AB8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 10731  010ABA  0EC8               	movlw	200
 10732  010ABC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 10733  010ABE  0E42               	movlw	66
 10734  010AC0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 10735  010AC2  0E00               	movlw	0
 10736  010AC4  6F2D               	movwf	___fladd@a& (0+255),b
 10737  010AC6  0E00               	movlw	0
 10738  010AC8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 10739  010ACA  0EC8               	movlw	200
 10740  010ACC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 10741  010ACE  0E42               	movlw	66
 10742  010AD0  6F30               	movwf	(___fladd@a+3)& (0+255),b
 10743  010AD2  C3A7  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 10744  010AD6  C3A8  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 10745  010ADA  0E00               	movlw	0
 10746  010ADC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 10747  010ADE  0EFF               	movlw	-1
 10748  010AE0  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 10749  010AE2  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 10750  010AE4  0E01               	movlw	1
 10751  010AE6  ECC6  F0B3         	call	___xxtofl
 10752  010AEA  C117  F125         	movff	?___xxtofl,___flneg@f1
 10753  010AEE  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 10754  010AF2  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 10755  010AF6  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 10756  010AFA  EC26  F0C4         	call	___flneg	;wreg free
 10757  010AFE  C125  F129         	movff	?___flneg,___fladd@b
 10758  010B02  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 10759  010B06  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 10760  010B0A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 10761  010B0E  ECA0  F0A3         	call	___fladd	;wreg free
 10762  010B12  C129  F13D         	movff	?___fladd,___fldiv@b
 10763  010B16  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 10764  010B1A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 10765  010B1E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 10766  010B22  ECA4  F0AC         	call	___fldiv	;wreg free
 10767  010B26  C13D  F156         	movff	?___fldiv,___flmul@b
 10768  010B2A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 10769  010B2E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 10770  010B32  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 10771  010B36  0EDB               	movlw	219
 10772  010B38  0101               	movlb	1	; () banked
 10773  010B3A  6F5A               	movwf	___flmul@a& (0+255),b
 10774  010B3C  0E0F               	movlw	15
 10775  010B3E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 10776  010B40  0E49               	movlw	73
 10777  010B42  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 10778  010B44  0E40               	movlw	64
 10779  010B46  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 10780  010B48  EC4F  F0A0         	call	___flmul	;wreg free
 10781  010B4C  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 10782  010B50  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 10783  010B54  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 10784  010B58  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 10785                           
 10786                           ;ring_buffer_LUT.c: 477: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 10787  010B5C  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 10788  010B60  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 10789  010B64  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 10790  010B68  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 10791  010B6C  0EE1               	movlw	225
 10792  010B6E  0101               	movlb	1	; () banked
 10793  010B70  6F5A               	movwf	___flmul@a& (0+255),b
 10794  010B72  0E2E               	movlw	46
 10795  010B74  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 10796  010B76  0E65               	movlw	101
 10797  010B78  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 10798  010B7A  0E42               	movlw	66
 10799  010B7C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 10800  010B7E  EC4F  F0A0         	call	___flmul	;wreg free
 10801  010B82  C156  F396         	movff	?___flmul,ringBufferLUT@angle_degrees
 10802  010B86  C157  F397         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 10803  010B8A  C158  F398         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 10804  010B8E  C159  F399         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 10805                           
 10806                           ;ring_buffer_LUT.c: 478: dimming_period = (100 - percentage) * (0xFFFF / 100);
 10807  010B92  C3A7  F1B6         	movff	ringBufferLUT@percentage,??_ringBufferLUT
 10808  010B96  C3A8  F1B7         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
 10809  010B9A  0101               	movlb	1	; () banked
 10810  010B9C  1FB6               	comf	??_ringBufferLUT& (0+255),f,b
 10811  010B9E  1FB7               	comf	(??_ringBufferLUT+1)& (0+255),f,b
 10812  010BA0  4BB6               	infsnz	??_ringBufferLUT& (0+255),f,b
 10813  010BA2  2BB7               	incf	(??_ringBufferLUT+1)& (0+255),f,b
 10814  010BA4  0E64               	movlw	100
 10815  010BA6  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 10816  010BA8  6F17               	movwf	___wmul@multiplier& (0+255),b
 10817  010BAA  0E00               	movlw	0
 10818  010BAC  21B7               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
 10819  010BAE  6F18               	movwf	(___wmul@multiplier+1)& (0+255),b
 10820  010BB0  0E02               	movlw	2
 10821  010BB2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10822  010BB4  0E8F               	movlw	143
 10823  010BB6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 10824  010BB8  EC81  F0C4         	call	___wmul	;wreg free
 10825  010BBC  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 10826  010BC0  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 10827                           
 10828                           ;ring_buffer_LUT.c: 480: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10829  010BC4  0E00               	movlw	0
 10830  010BC6  0101               	movlb	1	; () banked
 10831  010BC8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10832  010BCA  0E00               	movlw	0
 10833  010BCC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10834  010BCE  0E02               	movlw	2
 10835  010BD0  EC9B  F09E         	call	_terminal_textAttributes
 10836                           
 10837                           ;ring_buffer_LUT.c: 481: printf("Dimming has been set to %d percent\n\r", percentage);
 10838  010BD4  0E44               	movlw	low STR_113
 10839  010BD6  0101               	movlb	1	; () banked
 10840  010BD8  6F82               	movwf	printf@f& (0+255),b
 10841  010BDA  0EFB               	movlw	high STR_113
 10842  010BDC  6F83               	movwf	(printf@f+1)& (0+255),b
 10843  010BDE  C3A7  F184         	movff	ringBufferLUT@percentage,?_printf+2
 10844  010BE2  C3A8  F185         	movff	ringBufferLUT@percentage+1,?_printf+3
 10845  010BE6  EC50  F087         	call	_printf	;wreg free
 10846                           
 10847                           ;ring_buffer_LUT.c: 482: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 10848  010BEA  0E4D               	movlw	low STR_114
 10849  010BEC  0101               	movlb	1	; () banked
 10850  010BEE  6F82               	movwf	printf@f& (0+255),b
 10851  010BF0  0EF6               	movlw	high STR_114
 10852  010BF2  6F83               	movwf	(printf@f+1)& (0+255),b
 10853  010BF4  C0F2  F184         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 10854  010BF8  C0F3  F185         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 10855  010BFC  C0F4  F186         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 10856  010C00  C0F5  F187         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 10857  010C04  C396  F188         	movff	ringBufferLUT@angle_degrees,?_printf+6
 10858  010C08  C397  F189         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 10859  010C0C  C398  F18A         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 10860  010C10  C399  F18B         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 10861  010C14  EC50  F087         	call	_printf	;wreg free
 10862                           
 10863                           ;ring_buffer_LUT.c: 483: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 10864  010C18  0E84               	movlw	low STR_115
 10865  010C1A  0101               	movlb	1	; () banked
 10866  010C1C  6F82               	movwf	printf@f& (0+255),b
 10867  010C1E  0EF5               	movlw	high STR_115
 10868  010C20  6F83               	movwf	(printf@f+1)& (0+255),b
 10869  010C22  C0F0  F184         	movff	_dimming_period,?_printf+2	;volatile
 10870  010C26  C0F1  F185         	movff	_dimming_period+1,?_printf+3	;volatile
 10871  010C2A  C0F0  F186         	movff	_dimming_period,?_printf+4	;volatile
 10872  010C2E  C0F1  F187         	movff	_dimming_period+1,?_printf+5	;volatile
 10873  010C32  EC50  F087         	call	_printf	;wreg free
 10874                           
 10875                           ;ring_buffer_LUT.c: 484: terminal_textAttributesReset();
 10876  010C36  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10877                           
 10878                           ;ring_buffer_LUT.c: 486: }
 10879                           ;ring_buffer_LUT.c: 488: }
 10880  010C3A  0012               	return	
 10881  010C3C                     l1280:
 10882                           
 10883                           ;ring_buffer_LUT.c: 491: else if((0 == strcmp(line, "Device On Time?"))) {
 10884  010C3C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10885  010C40  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10886  010C44  0E34               	movlw	low STR_116
 10887  010C46  0101               	movlb	1	; () banked
 10888  010C48  6F19               	movwf	strcmp@s2& (0+255),b
 10889  010C4A  0EFE               	movlw	high STR_116
 10890  010C4C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10891  010C4E  EC60  F0C1         	call	_strcmp	;wreg free
 10892  010C52  0101               	movlb	1	; () banked
 10893  010C54  5117               	movf	?_strcmp& (0+255),w,b
 10894  010C56  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10895  010C58  A4D8               	btfss	status,2,c
 10896  010C5A  D019               	goto	l1288
 10897                           
 10898                           ; BSR set to: 1
 10899                           ;ring_buffer_LUT.c: 493: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10900  010C5C  0E00               	movlw	0
 10901  010C5E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10902  010C60  0E00               	movlw	0
 10903  010C62  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10904  010C64  0E02               	movlw	2
 10905  010C66  EC9B  F09E         	call	_terminal_textAttributes
 10906                           
 10907                           ;ring_buffer_LUT.c: 494: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 10908  010C6A  0E05               	movlw	low STR_117
 10909  010C6C  0101               	movlb	1	; () banked
 10910  010C6E  6F82               	movwf	printf@f& (0+255),b
 10911  010C70  0EF7               	movlw	high STR_117
 10912  010C72  6F83               	movwf	(printf@f+1)& (0+255),b
 10913  010C74  C24C  F184         	movff	_dev_on_time,?_printf+2	;volatile
 10914  010C78  C24D  F185         	movff	_dev_on_time+1,?_printf+3	;volatile
 10915  010C7C  C24E  F186         	movff	_dev_on_time+2,?_printf+4	;volatile
 10916  010C80  C24F  F187         	movff	_dev_on_time+3,?_printf+5	;volatile
 10917  010C84  EC50  F087         	call	_printf	;wreg free
 10918                           
 10919                           ;ring_buffer_LUT.c: 495: terminal_textAttributesReset();
 10920  010C88  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10921                           
 10922                           ;ring_buffer_LUT.c: 497: }
 10923  010C8C  0012               	return	
 10924  010C8E                     l1288:
 10925                           
 10926                           ;ring_buffer_LUT.c: 500: else if((0 == strcmp(line, "Load On Time?"))) {
 10927  010C8E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10928  010C92  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10929  010C96  0EDA               	movlw	low STR_118
 10930  010C98  0101               	movlb	1	; () banked
 10931  010C9A  6F19               	movwf	strcmp@s2& (0+255),b
 10932  010C9C  0EFE               	movlw	high STR_118
 10933  010C9E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10934  010CA0  EC60  F0C1         	call	_strcmp	;wreg free
 10935  010CA4  0101               	movlb	1	; () banked
 10936  010CA6  5117               	movf	?_strcmp& (0+255),w,b
 10937  010CA8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10938  010CAA  A4D8               	btfss	status,2,c
 10939  010CAC  D019               	goto	l1290
 10940                           
 10941                           ; BSR set to: 1
 10942                           ;ring_buffer_LUT.c: 502: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10943  010CAE  0E00               	movlw	0
 10944  010CB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10945  010CB2  0E00               	movlw	0
 10946  010CB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10947  010CB6  0E02               	movlw	2
 10948  010CB8  EC9B  F09E         	call	_terminal_textAttributes
 10949                           
 10950                           ;ring_buffer_LUT.c: 503: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 10951  010CBC  0E53               	movlw	low STR_119
 10952  010CBE  0101               	movlb	1	; () banked
 10953  010CC0  6F82               	movwf	printf@f& (0+255),b
 10954  010CC2  0EF8               	movlw	high STR_119
 10955  010CC4  6F83               	movwf	(printf@f+1)& (0+255),b
 10956  010CC6  C248  F184         	movff	_load_on_time,?_printf+2	;volatile
 10957  010CCA  C249  F185         	movff	_load_on_time+1,?_printf+3	;volatile
 10958  010CCE  C24A  F186         	movff	_load_on_time+2,?_printf+4	;volatile
 10959  010CD2  C24B  F187         	movff	_load_on_time+3,?_printf+5	;volatile
 10960  010CD6  EC50  F087         	call	_printf	;wreg free
 10961                           
 10962                           ;ring_buffer_LUT.c: 504: terminal_textAttributesReset();
 10963  010CDA  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 10964                           
 10965                           ;ring_buffer_LUT.c: 506: }
 10966  010CDE  0012               	return	
 10967  010CE0                     l1290:
 10968                           
 10969                           ;ring_buffer_LUT.c: 509: else if((0 == strcmp(line, "Max RMS Current?"))) {
 10970  010CE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10971  010CE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10972  010CE8  0EF3               	movlw	low STR_120
 10973  010CEA  0101               	movlb	1	; () banked
 10974  010CEC  6F19               	movwf	strcmp@s2& (0+255),b
 10975  010CEE  0EFD               	movlw	high STR_120
 10976  010CF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10977  010CF2  EC60  F0C1         	call	_strcmp	;wreg free
 10978  010CF6  0101               	movlb	1	; () banked
 10979  010CF8  5117               	movf	?_strcmp& (0+255),w,b
 10980  010CFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10981  010CFC  A4D8               	btfss	status,2,c
 10982  010CFE  D030               	goto	l1292
 10983                           
 10984                           ; BSR set to: 1
 10985                           ;ring_buffer_LUT.c: 512: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 10986  010D00  0E75               	movlw	low _max_Irms_address
 10987  010D02  6EF6               	movwf	tblptrl,c
 10988  010D04                     	if	1	;There is more than 1 active tblptr byte
 10989  010D04  0EE9               	movlw	high _max_Irms_address
 10990  010D06  6EF7               	movwf	tblptrh,c
 10991  010D08                     	endif
 10992  010D08                     	if	1	;There are 3 active tblptr bytes
 10993  010D08  0E00               	movlw	low (_max_Irms_address shr (0+16))
 10994  010D0A  6EF8               	movwf	tblptru,c
 10995  010D0C                     	endif
 10996  010D0C  0009               	tblrd		*+
 10997  010D0E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 10998  010D12  000A               	tblrd		*-
 10999  010D14  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 11000  010D18  ECE6  F0C0         	call	_readDoubleFromEEPROM	;wreg free
 11001  010D1C  C119  F39A         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 11002  010D20  C11A  F39B         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 11003  010D24  C11B  F39C         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 11004  010D28  C11C  F39D         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 11005                           
 11006                           ;ring_buffer_LUT.c: 514: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11007  010D2C  0E00               	movlw	0
 11008  010D2E  0101               	movlb	1	; () banked
 11009  010D30  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11010  010D32  0E00               	movlw	0
 11011  010D34  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11012  010D36  0E06               	movlw	6
 11013  010D38  EC9B  F09E         	call	_terminal_textAttributes
 11014                           
 11015                           ;ring_buffer_LUT.c: 515: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 11016  010D3C  0EBC               	movlw	low STR_121
 11017  010D3E  0101               	movlb	1	; () banked
 11018  010D40  6F82               	movwf	printf@f& (0+255),b
 11019  010D42  0EF8               	movlw	high STR_121
 11020  010D44  6F83               	movwf	(printf@f+1)& (0+255),b
 11021  010D46  C39A  F184         	movff	ringBufferLUT@max_current_print,?_printf+2
 11022  010D4A  C39B  F185         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 11023  010D4E  C39C  F186         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 11024  010D52  C39D  F187         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 11025  010D56  EC50  F087         	call	_printf	;wreg free
 11026                           
 11027                           ;ring_buffer_LUT.c: 516: terminal_textAttributesReset();
 11028  010D5A  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 11029                           
 11030                           ;ring_buffer_LUT.c: 518: }
 11031  010D5E  0012               	return	
 11032  010D60                     l1292:
 11033                           
 11034                           ;ring_buffer_LUT.c: 521: else if((0 == strcmp(line, "Max Power?"))) {
 11035  010D60  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11036  010D64  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11037  010D68  0E5B               	movlw	low STR_122
 11038  010D6A  0101               	movlb	1	; () banked
 11039  010D6C  6F19               	movwf	strcmp@s2& (0+255),b
 11040  010D6E  0EFF               	movlw	high STR_122
 11041  010D70  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11042  010D72  EC60  F0C1         	call	_strcmp	;wreg free
 11043  010D76  0101               	movlb	1	; () banked
 11044  010D78  5117               	movf	?_strcmp& (0+255),w,b
 11045  010D7A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11046  010D7C  A4D8               	btfss	status,2,c
 11047  010D7E  D030               	goto	l1294
 11048                           
 11049                           ; BSR set to: 1
 11050                           ;ring_buffer_LUT.c: 524: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 11051  010D80  0E73               	movlw	low _max_Power_address
 11052  010D82  6EF6               	movwf	tblptrl,c
 11053  010D84                     	if	1	;There is more than 1 active tblptr byte
 11054  010D84  0EE9               	movlw	high _max_Power_address
 11055  010D86  6EF7               	movwf	tblptrh,c
 11056  010D88                     	endif
 11057  010D88                     	if	1	;There are 3 active tblptr bytes
 11058  010D88  0E00               	movlw	low (_max_Power_address shr (0+16))
 11059  010D8A  6EF8               	movwf	tblptru,c
 11060  010D8C                     	endif
 11061  010D8C  0009               	tblrd		*+
 11062  010D8E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 11063  010D92  000A               	tblrd		*-
 11064  010D94  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 11065  010D98  ECE6  F0C0         	call	_readDoubleFromEEPROM	;wreg free
 11066  010D9C  C119  F39E         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 11067  010DA0  C11A  F39F         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 11068  010DA4  C11B  F3A0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 11069  010DA8  C11C  F3A1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 11070                           
 11071                           ;ring_buffer_LUT.c: 526: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11072  010DAC  0E00               	movlw	0
 11073  010DAE  0101               	movlb	1	; () banked
 11074  010DB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11075  010DB2  0E00               	movlw	0
 11076  010DB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11077  010DB6  0E06               	movlw	6
 11078  010DB8  EC9B  F09E         	call	_terminal_textAttributes
 11079                           
 11080                           ;ring_buffer_LUT.c: 527: printf("Maximum recorded output Power is %.3f Watts\n\r", max_P
      +                          ower_print);
 11081  010DBC  0EAA               	movlw	low STR_123
 11082  010DBE  0101               	movlb	1	; () banked
 11083  010DC0  6F82               	movwf	printf@f& (0+255),b
 11084  010DC2  0EF9               	movlw	high STR_123
 11085  010DC4  6F83               	movwf	(printf@f+1)& (0+255),b
 11086  010DC6  C39E  F184         	movff	ringBufferLUT@max_Power_print,?_printf+2
 11087  010DCA  C39F  F185         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 11088  010DCE  C3A0  F186         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 11089  010DD2  C3A1  F187         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 11090  010DD6  EC50  F087         	call	_printf	;wreg free
 11091                           
 11092                           ;ring_buffer_LUT.c: 528: terminal_textAttributesReset();
 11093  010DDA  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 11094                           
 11095                           ;ring_buffer_LUT.c: 530: }
 11096  010DDE  0012               	return	
 11097  010DE0                     l1294:
 11098                           
 11099                           ;ring_buffer_LUT.c: 534: else if((0 == strcmp(line, "Help"))) {
 11100  010DE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11101  010DE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11102  010DE8  0EAA               	movlw	low STR_124
 11103  010DEA  0101               	movlb	1	; () banked
 11104  010DEC  6F19               	movwf	strcmp@s2& (0+255),b
 11105  010DEE  0EFF               	movlw	high STR_124
 11106  010DF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11107  010DF2  EC60  F0C1         	call	_strcmp	;wreg free
 11108  010DF6  0101               	movlb	1	; () banked
 11109  010DF8  5117               	movf	?_strcmp& (0+255),w,b
 11110  010DFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11111  010DFC  A4D8               	btfss	status,2,c
 11112  010DFE  0012               	return	
 11113                           
 11114                           ; BSR set to: 1
 11115                           ;ring_buffer_LUT.c: 536: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 11116  010E00  0E00               	movlw	0
 11117  010E02  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11118  010E04  0E00               	movlw	0
 11119  010E06  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11120  010E08  0E03               	movlw	3
 11121  010E0A  EC9B  F09E         	call	_terminal_textAttributes
 11122                           
 11123                           ;ring_buffer_LUT.c: 537: printf("List of supported commands:\n\r"
 11124                           ;ring_buffer_LUT.c: 539: "Device Commands:\n\r"
 11125                           ;ring_buffer_LUT.c: 540: "   Reset: Clears the terminal and resets the micro\n\r"
 11126                           ;ring_buffer_LUT.c: 541: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 11127                           ;ring_buffer_LUT.c: 542: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 11128                           ;ring_buffer_LUT.c: 543: "   *IDN?: Returns device identification string\n\r"
 11129                           ;ring_buffer_LUT.c: 544: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 11130  010E0E  0EC7               	movlw	low STR_125
 11131  010E10  0101               	movlb	1	; () banked
 11132  010E12  6F82               	movwf	printf@f& (0+255),b
 11133  010E14  0EE9               	movlw	high STR_125
 11134  010E16  6F83               	movwf	(printf@f+1)& (0+255),b
 11135  010E18  EC50  F087         	call	_printf	;wreg free
 11136                           
 11137                           ;ring_buffer_LUT.c: 581: terminal_printNewline();
 11138  010E1C  ECB4  F0C5         	call	_terminal_printNewline	;wreg free
 11139                           
 11140                           ;ring_buffer_LUT.c: 582: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 11141  010E20  0EB1               	movlw	low STR_126
 11142  010E22  0101               	movlb	1	; () banked
 11143  010E24  6F82               	movwf	printf@f& (0+255),b
 11144  010E26  0EF7               	movlw	high STR_126
 11145  010E28  6F83               	movwf	(printf@f+1)& (0+255),b
 11146  010E2A  EC50  F087         	call	_printf	;wreg free
 11147                           
 11148                           ;ring_buffer_LUT.c: 584: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11149  010E2E  0E00               	movlw	0
 11150  010E30  0101               	movlb	1	; () banked
 11151  010E32  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11152  010E34  0E00               	movlw	0
 11153  010E36  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11154  010E38  0E02               	movlw	2
 11155  010E3A  EC9B  F09E         	call	_terminal_textAttributes
 11156                           
 11157                           ;ring_buffer_LUT.c: 585: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 11158  010E3E  0E8C               	movlw	low STR_127
 11159  010E40  0101               	movlb	1	; () banked
 11160  010E42  6F82               	movwf	printf@f& (0+255),b
 11161  010E44  0EF6               	movlw	high STR_127
 11162  010E46  6F83               	movwf	(printf@f+1)& (0+255),b
 11163  010E48  EC50  F087         	call	_printf	;wreg free
 11164                           
 11165                           ;ring_buffer_LUT.c: 586: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11166  010E4C  0E00               	movlw	0
 11167  010E4E  0101               	movlb	1	; () banked
 11168  010E50  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11169  010E52  0E00               	movlw	0
 11170  010E54  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11171  010E56  0E06               	movlw	6
 11172  010E58  EC9B  F09E         	call	_terminal_textAttributes
 11173                           
 11174                           ;ring_buffer_LUT.c: 587: printf("Measurement responses appear in cyan\n\r");
 11175  010E5C  0ED3               	movlw	low STR_128
 11176  010E5E  0101               	movlb	1	; () banked
 11177  010E60  6F82               	movwf	printf@f& (0+255),b
 11178  010E62  0EFA               	movlw	high STR_128
 11179  010E64  6F83               	movwf	(printf@f+1)& (0+255),b
 11180  010E66  EC50  F087         	call	_printf	;wreg free
 11181                           
 11182                           ;ring_buffer_LUT.c: 588: terminal_textAttributes(RED, BLACK, NORMAL);
 11183  010E6A  0E00               	movlw	0
 11184  010E6C  0101               	movlb	1	; () banked
 11185  010E6E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11186  010E70  0E00               	movlw	0
 11187  010E72  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11188  010E74  0E01               	movlw	1
 11189  010E76  EC9B  F09E         	call	_terminal_textAttributes
 11190                           
 11191                           ;ring_buffer_LUT.c: 589: printf("Errors and negative responses appear in red\n\r");
 11192  010E7A  0E4E               	movlw	low STR_129
 11193  010E7C  0101               	movlb	1	; () banked
 11194  010E7E  6F82               	movwf	printf@f& (0+255),b
 11195  010E80  0EF9               	movlw	high STR_129
 11196  010E82  6F83               	movwf	(printf@f+1)& (0+255),b
 11197  010E84  EC50  F087         	call	_printf	;wreg free
 11198                           
 11199                           ;ring_buffer_LUT.c: 590: terminal_textAttributesReset();
 11200  010E88  EC9A  F0C5         	call	_terminal_textAttributesReset	;wreg free
 11201                           
 11202                           ;ring_buffer_LUT.c: 591: printf("User input appears in white\n\r");
 11203  010E8C  0E34               	movlw	low STR_130
 11204  010E8E  0101               	movlb	1	; () banked
 11205  010E90  6F82               	movwf	printf@f& (0+255),b
 11206  010E92  0EFC               	movlw	high STR_130
 11207  010E94  6F83               	movwf	(printf@f+1)& (0+255),b
 11208  010E96  EC50  F087         	call	_printf	;wreg free
 11209                           
 11210                           ;ring_buffer_LUT.c: 594: terminal_printNewline();
 11211  010E9A  ECB4  F0C5         	call	_terminal_printNewline	;wreg free
 11212  010E9E  0012               	return	
 11213  010EA0                     __end_of_ringBufferLUT:
 11214                           	opt stack 0
 11215                           tblptru	equ	0xFF8
 11216                           tblptrh	equ	0xFF7
 11217                           tblptrl	equ	0xFF6
 11218                           tablat	equ	0xFF5
 11219                           intcon	equ	0xFF2
 11220                           postinc0	equ	0xFEE
 11221                           wreg	equ	0xFE8
 11222                           indf1	equ	0xFE7
 11223                           postdec1	equ	0xFE5
 11224                           fsr1h	equ	0xFE2
 11225                           fsr1l	equ	0xFE1
 11226                           indf2	equ	0xFDF
 11227                           postinc2	equ	0xFDE
 11228                           fsr2h	equ	0xFDA
 11229                           fsr2l	equ	0xFD9
 11230                           status	equ	0xFD8
 11231                           
 11232 ;; *************** function _terminal_textAttributesReset *****************
 11233 ;; Defined at:
 11234 ;;		line 223 in file "ring_buffer_interface.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;		None
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  1    wreg      void 
 11241 ;; Registers used:
 11242 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11252 ;;Total ram usage:        0 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:   17
 11255 ;; This function calls:
 11256 ;;		_terminal_textAttributes
 11257 ;; This function is called by:
 11258 ;;		_main
 11259 ;;		_ringBufferLUT
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           	psect	text6
 11264  018B34                     __ptext6:
 11265                           	opt stack 0
 11266  018B34                     _terminal_textAttributesReset:
 11267                           	opt stack 13
 11268                           
 11269                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 11270                           
 11271                           ;incstack = 0
 11272  018B34  0E00               	movlw	0
 11273  018B36  0101               	movlb	1	; () banked
 11274  018B38  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11275  018B3A  0E00               	movlw	0
 11276  018B3C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11277  018B3E  0E07               	movlw	7
 11278  018B40  EC9B  F09E         	call	_terminal_textAttributes
 11279  018B44  0012               	return		;funcret
 11280  018B46                     __end_of_terminal_textAttributesReset:
 11281                           	opt stack 0
 11282                           tblptru	equ	0xFF8
 11283                           tblptrh	equ	0xFF7
 11284                           tblptrl	equ	0xFF6
 11285                           tablat	equ	0xFF5
 11286                           intcon	equ	0xFF2
 11287                           postinc0	equ	0xFEE
 11288                           wreg	equ	0xFE8
 11289                           indf1	equ	0xFE7
 11290                           postdec1	equ	0xFE5
 11291                           fsr1h	equ	0xFE2
 11292                           fsr1l	equ	0xFE1
 11293                           indf2	equ	0xFDF
 11294                           postinc2	equ	0xFDE
 11295                           fsr2h	equ	0xFDA
 11296                           fsr2l	equ	0xFD9
 11297                           status	equ	0xFD8
 11298                           
 11299 ;; *************** function _terminal_textAttributes *****************
 11300 ;; Defined at:
 11301 ;;		line 115 in file "ring_buffer_interface.c"
 11302 ;; Parameters:    Size  Location     Type
 11303 ;;  foreground_c    1    wreg     enum E17893
 11304 ;;  background_c    1  178[BANK1 ] enum E17893
 11305 ;;  input_attrib    1  179[BANK1 ] enum E17885
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;  foreground_c    1    0[BANK2 ] enum E17893
 11308 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  1    wreg      void 
 11311 ;; Registers used:
 11312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11318 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 11322 ;;Total ram usage:       18 bytes
 11323 ;; Hardware stack levels used:    1
 11324 ;; Hardware stack levels required when called:   16
 11325 ;; This function calls:
 11326 ;;		_printf
 11327 ;;		_strcat
 11328 ;;		_strncpy
 11329 ;; This function is called by:
 11330 ;;		_terminal_textAttributesReset
 11331 ;;		_ringBufferLUT
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335                           	psect	text7
 11336  013D36                     __ptext7:
 11337                           	opt stack 0
 11338  013D36                     _terminal_textAttributes:
 11339                           	opt stack 13
 11340                           
 11341                           ;incstack = 0
 11342                           ;terminal_textAttributes@foreground_color stored from wreg
 11343  013D36  0102               	movlb	2	; () banked
 11344  013D38  6FD4               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 11345                           
 11346                           ;ring_buffer_interface.c: 119: char output_buff[15];
 11347                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 11348  013D3A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11349  013D3C  0101               	movlb	1	; () banked
 11350  013D3E  6F17               	movwf	strncpy@to& (0+255),b
 11351  013D40  0E02               	movlw	high terminal_textAttributes@output_buff
 11352  013D42  6F18               	movwf	(strncpy@to+1)& (0+255),b
 11353  013D44  0EF5               	movlw	low STR_11
 11354  013D46  6F19               	movwf	strncpy@from& (0+255),b
 11355  013D48  0EFF               	movlw	high STR_11
 11356  013D4A  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 11357  013D4C  0E00               	movlw	0
 11358  013D4E  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 11359  013D50  0E0F               	movlw	15
 11360  013D52  6F1B               	movwf	strncpy@size& (0+255),b
 11361  013D54  ECBF  F0BF         	call	_strncpy	;wreg free
 11362                           
 11363                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 11364  013D58  D054               	goto	l1080
 11365  013D5A                     
 11366                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 11367  013D5A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11368  013D5C  0101               	movlb	1	; () banked
 11369  013D5E  6F17               	movwf	strcat@to& (0+255),b
 11370  013D60  0E02               	movlw	high terminal_textAttributes@output_buff
 11371  013D62  6F18               	movwf	(strcat@to+1)& (0+255),b
 11372  013D64  0EC9               	movlw	low (STR_20+1)
 11373  013D66  6F19               	movwf	strcat@from& (0+255),b
 11374  013D68  0EFF               	movlw	high (STR_20+1)
 11375  013D6A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11376  013D6C  ECAF  F0C1         	call	_strcat	;wreg free
 11377                           
 11378                           ;ring_buffer_interface.c: 127: break;
 11379  013D70  D05D               	goto	l1082
 11380  013D72                     
 11381                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 11382  013D72  0ED5               	movlw	low terminal_textAttributes@output_buff
 11383  013D74  0101               	movlb	1	; () banked
 11384  013D76  6F17               	movwf	strcat@to& (0+255),b
 11385  013D78  0E02               	movlw	high terminal_textAttributes@output_buff
 11386  013D7A  6F18               	movwf	(strcat@to+1)& (0+255),b
 11387  013D7C  0E34               	movlw	low (STR_67+20)
 11388  013D7E  6F19               	movwf	strcat@from& (0+255),b
 11389  013D80  0EFD               	movlw	high (STR_67+20)
 11390  013D82  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11391  013D84  ECAF  F0C1         	call	_strcat	;wreg free
 11392                           
 11393                           ;ring_buffer_interface.c: 130: break;
 11394  013D88  D051               	goto	l1082
 11395  013D8A                     
 11396                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 11397  013D8A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11398  013D8C  0101               	movlb	1	; () banked
 11399  013D8E  6F17               	movwf	strcat@to& (0+255),b
 11400  013D90  0E02               	movlw	high terminal_textAttributes@output_buff
 11401  013D92  6F18               	movwf	(strcat@to+1)& (0+255),b
 11402  013D94  0EDE               	movlw	low (STR_24+1)
 11403  013D96  6F19               	movwf	strcat@from& (0+255),b
 11404  013D98  0EFF               	movlw	high (STR_24+1)
 11405  013D9A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11406  013D9C  ECAF  F0C1         	call	_strcat	;wreg free
 11407                           
 11408                           ;ring_buffer_interface.c: 133: break;
 11409  013DA0  D045               	goto	l1082
 11410  013DA2                     
 11411                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 11412  013DA2  0ED5               	movlw	low terminal_textAttributes@output_buff
 11413  013DA4  0101               	movlb	1	; () banked
 11414  013DA6  6F17               	movwf	strcat@to& (0+255),b
 11415  013DA8  0E02               	movlw	high terminal_textAttributes@output_buff
 11416  013DAA  6F18               	movwf	(strcat@to+1)& (0+255),b
 11417  013DAC  0EE4               	movlw	low (STR_25+1)
 11418  013DAE  6F19               	movwf	strcat@from& (0+255),b
 11419  013DB0  0EFF               	movlw	high (STR_25+1)
 11420  013DB2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11421  013DB4  ECAF  F0C1         	call	_strcat	;wreg free
 11422                           
 11423                           ;ring_buffer_interface.c: 136: break;
 11424  013DB8  D039               	goto	l1082
 11425  013DBA                     
 11426                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 11427  013DBA  0ED5               	movlw	low terminal_textAttributes@output_buff
 11428  013DBC  0101               	movlb	1	; () banked
 11429  013DBE  6F17               	movwf	strcat@to& (0+255),b
 11430  013DC0  0E02               	movlw	high terminal_textAttributes@output_buff
 11431  013DC2  6F18               	movwf	(strcat@to+1)& (0+255),b
 11432  013DC4  0EF0               	movlw	low (STR_27+1)
 11433  013DC6  6F19               	movwf	strcat@from& (0+255),b
 11434  013DC8  0EFF               	movlw	high (STR_27+1)
 11435  013DCA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11436  013DCC  ECAF  F0C1         	call	_strcat	;wreg free
 11437                           
 11438                           ;ring_buffer_interface.c: 139: break;
 11439  013DD0  D02D               	goto	l1082
 11440  013DD2                     
 11441                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 11442  013DD2  0ED5               	movlw	low terminal_textAttributes@output_buff
 11443  013DD4  0101               	movlb	1	; () banked
 11444  013DD6  6F17               	movwf	strcat@to& (0+255),b
 11445  013DD8  0E02               	movlw	high terminal_textAttributes@output_buff
 11446  013DDA  6F18               	movwf	(strcat@to+1)& (0+255),b
 11447  013DDC  0EF8               	movlw	low STR_17
 11448  013DDE  6F19               	movwf	strcat@from& (0+255),b
 11449  013DE0  0EFF               	movlw	high STR_17
 11450  013DE2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11451  013DE4  ECAF  F0C1         	call	_strcat	;wreg free
 11452                           
 11453                           ;ring_buffer_interface.c: 142: break;
 11454  013DE8  D021               	goto	l1082
 11455  013DEA                     
 11456                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 11457  013DEA  0ED5               	movlw	low terminal_textAttributes@output_buff
 11458  013DEC  0101               	movlb	1	; () banked
 11459  013DEE  6F17               	movwf	strcat@to& (0+255),b
 11460  013DF0  0E02               	movlw	high terminal_textAttributes@output_buff
 11461  013DF2  6F18               	movwf	(strcat@to+1)& (0+255),b
 11462  013DF4  0EC9               	movlw	low (STR_20+1)
 11463  013DF6  6F19               	movwf	strcat@from& (0+255),b
 11464  013DF8  0EFF               	movlw	high (STR_20+1)
 11465  013DFA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11466  013DFC  ECAF  F0C1         	call	_strcat	;wreg free
 11467                           
 11468                           ;ring_buffer_interface.c: 147: }
 11469                           
 11470                           ;ring_buffer_interface.c: 146: break;
 11471  013E00  D015               	goto	l1082
 11472  013E02                     l1080:
 11473  013E02  0101               	movlb	1	; () banked
 11474  013E04  51B3               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 11475                           
 11476                           ; Switch size 1, requested type "space"
 11477                           ; Number of cases is 6, Range of values is 0 to 5
 11478                           ; switch strategies available:
 11479                           ; Name         Instructions Cycles
 11480                           ; simple_byte           19    10 (average)
 11481                           ;	Chosen strategy is simple_byte
 11482  013E06  0A00               	xorlw	0	; case 0
 11483  013E08  B4D8               	btfsc	status,2,c
 11484  013E0A  D7A7               	goto	l1081
 11485  013E0C  0A01               	xorlw	1	; case 1
 11486  013E0E  B4D8               	btfsc	status,2,c
 11487  013E10  D7B0               	goto	l1083
 11488  013E12  0A03               	xorlw	3	; case 2
 11489  013E14  B4D8               	btfsc	status,2,c
 11490  013E16  D7B9               	goto	l1084
 11491  013E18  0A01               	xorlw	1	; case 3
 11492  013E1A  B4D8               	btfsc	status,2,c
 11493  013E1C  D7C2               	goto	l1085
 11494  013E1E  0A07               	xorlw	7	; case 4
 11495  013E20  B4D8               	btfsc	status,2,c
 11496  013E22  D7CB               	goto	l1086
 11497  013E24  0A01               	xorlw	1	; case 5
 11498  013E26  B4D8               	btfsc	status,2,c
 11499  013E28  D7D4               	goto	l1087
 11500  013E2A  D7DF               	goto	l1088
 11501  013E2C                     l1082:
 11502                           
 11503                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 11504                           
 11505                           ; BSR set to: 1
 11506  013E2C  0ED5               	movlw	low terminal_textAttributes@output_buff
 11507  013E2E  0101               	movlb	1	; () banked
 11508  013E30  6F17               	movwf	strcat@to& (0+255),b
 11509  013E32  0E02               	movlw	high terminal_textAttributes@output_buff
 11510  013E34  6F18               	movwf	(strcat@to+1)& (0+255),b
 11511  013E36  0EFA               	movlw	low STR_19
 11512  013E38  6F19               	movwf	strcat@from& (0+255),b
 11513  013E3A  0EFF               	movlw	high STR_19
 11514  013E3C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11515  013E3E  ECAF  F0C1         	call	_strcat	;wreg free
 11516                           
 11517                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 11518  013E42  D06C               	goto	l1089
 11519  013E44                     
 11520                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 11521  013E44  0ED5               	movlw	low terminal_textAttributes@output_buff
 11522  013E46  0101               	movlb	1	; () banked
 11523  013E48  6F17               	movwf	strcat@to& (0+255),b
 11524  013E4A  0E02               	movlw	high terminal_textAttributes@output_buff
 11525  013E4C  6F18               	movwf	(strcat@to+1)& (0+255),b
 11526  013E4E  0EC8               	movlw	low STR_20
 11527  013E50  6F19               	movwf	strcat@from& (0+255),b
 11528  013E52  0EFF               	movlw	high STR_20
 11529  013E54  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11530  013E56  ECAF  F0C1         	call	_strcat	;wreg free
 11531                           
 11532                           ;ring_buffer_interface.c: 155: break;
 11533  013E5A  D07B               	goto	l1091
 11534  013E5C                     
 11535                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 11536  013E5C  0ED5               	movlw	low terminal_textAttributes@output_buff
 11537  013E5E  0101               	movlb	1	; () banked
 11538  013E60  6F17               	movwf	strcat@to& (0+255),b
 11539  013E62  0E02               	movlw	high terminal_textAttributes@output_buff
 11540  013E64  6F18               	movwf	(strcat@to+1)& (0+255),b
 11541  013E66  0ECB               	movlw	low STR_21
 11542  013E68  6F19               	movwf	strcat@from& (0+255),b
 11543  013E6A  0EFF               	movlw	high STR_21
 11544  013E6C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11545  013E6E  ECAF  F0C1         	call	_strcat	;wreg free
 11546                           
 11547                           ;ring_buffer_interface.c: 158: break;
 11548  013E72  D06F               	goto	l1091
 11549  013E74                     
 11550                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 11551  013E74  0ED5               	movlw	low terminal_textAttributes@output_buff
 11552  013E76  0101               	movlb	1	; () banked
 11553  013E78  6F17               	movwf	strcat@to& (0+255),b
 11554  013E7A  0E02               	movlw	high terminal_textAttributes@output_buff
 11555  013E7C  6F18               	movwf	(strcat@to+1)& (0+255),b
 11556  013E7E  0ED1               	movlw	low STR_22
 11557  013E80  6F19               	movwf	strcat@from& (0+255),b
 11558  013E82  0EFF               	movlw	high STR_22
 11559  013E84  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11560  013E86  ECAF  F0C1         	call	_strcat	;wreg free
 11561                           
 11562                           ;ring_buffer_interface.c: 161: break;
 11563  013E8A  D063               	goto	l1091
 11564  013E8C                     
 11565                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 11566  013E8C  0ED5               	movlw	low terminal_textAttributes@output_buff
 11567  013E8E  0101               	movlb	1	; () banked
 11568  013E90  6F17               	movwf	strcat@to& (0+255),b
 11569  013E92  0E02               	movlw	high terminal_textAttributes@output_buff
 11570  013E94  6F18               	movwf	(strcat@to+1)& (0+255),b
 11571  013E96  0ED7               	movlw	low STR_23
 11572  013E98  6F19               	movwf	strcat@from& (0+255),b
 11573  013E9A  0EFF               	movlw	high STR_23
 11574  013E9C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11575  013E9E  ECAF  F0C1         	call	_strcat	;wreg free
 11576                           
 11577                           ;ring_buffer_interface.c: 164: break;
 11578  013EA2  D057               	goto	l1091
 11579  013EA4                     
 11580                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 11581  013EA4  0ED5               	movlw	low terminal_textAttributes@output_buff
 11582  013EA6  0101               	movlb	1	; () banked
 11583  013EA8  6F17               	movwf	strcat@to& (0+255),b
 11584  013EAA  0E02               	movlw	high terminal_textAttributes@output_buff
 11585  013EAC  6F18               	movwf	(strcat@to+1)& (0+255),b
 11586  013EAE  0EDD               	movlw	low STR_24
 11587  013EB0  6F19               	movwf	strcat@from& (0+255),b
 11588  013EB2  0EFF               	movlw	high STR_24
 11589  013EB4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11590  013EB6  ECAF  F0C1         	call	_strcat	;wreg free
 11591                           
 11592                           ;ring_buffer_interface.c: 167: break;
 11593  013EBA  D04B               	goto	l1091
 11594  013EBC                     
 11595                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 11596  013EBC  0ED5               	movlw	low terminal_textAttributes@output_buff
 11597  013EBE  0101               	movlb	1	; () banked
 11598  013EC0  6F17               	movwf	strcat@to& (0+255),b
 11599  013EC2  0E02               	movlw	high terminal_textAttributes@output_buff
 11600  013EC4  6F18               	movwf	(strcat@to+1)& (0+255),b
 11601  013EC6  0EE3               	movlw	low STR_25
 11602  013EC8  6F19               	movwf	strcat@from& (0+255),b
 11603  013ECA  0EFF               	movlw	high STR_25
 11604  013ECC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11605  013ECE  ECAF  F0C1         	call	_strcat	;wreg free
 11606                           
 11607                           ;ring_buffer_interface.c: 170: break;
 11608  013ED2  D03F               	goto	l1091
 11609  013ED4                     
 11610                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 11611  013ED4  0ED5               	movlw	low terminal_textAttributes@output_buff
 11612  013ED6  0101               	movlb	1	; () banked
 11613  013ED8  6F17               	movwf	strcat@to& (0+255),b
 11614  013EDA  0E02               	movlw	high terminal_textAttributes@output_buff
 11615  013EDC  6F18               	movwf	(strcat@to+1)& (0+255),b
 11616  013EDE  0EE9               	movlw	low STR_26
 11617  013EE0  6F19               	movwf	strcat@from& (0+255),b
 11618  013EE2  0EFF               	movlw	high STR_26
 11619  013EE4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11620  013EE6  ECAF  F0C1         	call	_strcat	;wreg free
 11621                           
 11622                           ;ring_buffer_interface.c: 173: break;
 11623  013EEA  D033               	goto	l1091
 11624  013EEC                     
 11625                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 11626  013EEC  0ED5               	movlw	low terminal_textAttributes@output_buff
 11627  013EEE  0101               	movlb	1	; () banked
 11628  013EF0  6F17               	movwf	strcat@to& (0+255),b
 11629  013EF2  0E02               	movlw	high terminal_textAttributes@output_buff
 11630  013EF4  6F18               	movwf	(strcat@to+1)& (0+255),b
 11631  013EF6  0EEF               	movlw	low STR_27
 11632  013EF8  6F19               	movwf	strcat@from& (0+255),b
 11633  013EFA  0EFF               	movlw	high STR_27
 11634  013EFC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11635  013EFE  ECAF  F0C1         	call	_strcat	;wreg free
 11636                           
 11637                           ;ring_buffer_interface.c: 176: break;
 11638  013F02  D027               	goto	l1091
 11639  013F04                     
 11640                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 11641  013F04  0ED5               	movlw	low terminal_textAttributes@output_buff
 11642  013F06  0101               	movlb	1	; () banked
 11643  013F08  6F17               	movwf	strcat@to& (0+255),b
 11644  013F0A  0E02               	movlw	high terminal_textAttributes@output_buff
 11645  013F0C  6F18               	movwf	(strcat@to+1)& (0+255),b
 11646  013F0E  0EEF               	movlw	low STR_27
 11647  013F10  6F19               	movwf	strcat@from& (0+255),b
 11648  013F12  0EFF               	movlw	high STR_27
 11649  013F14  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11650  013F16  ECAF  F0C1         	call	_strcat	;wreg free
 11651                           
 11652                           ;ring_buffer_interface.c: 181: }
 11653                           
 11654                           ;ring_buffer_interface.c: 180: break;
 11655  013F1A  D01B               	goto	l1091
 11656  013F1C                     l1089:
 11657  013F1C  0102               	movlb	2	; () banked
 11658  013F1E  51D4               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 11659                           
 11660                           ; Switch size 1, requested type "space"
 11661                           ; Number of cases is 8, Range of values is 0 to 7
 11662                           ; switch strategies available:
 11663                           ; Name         Instructions Cycles
 11664                           ; simple_byte           25    13 (average)
 11665                           ;	Chosen strategy is simple_byte
 11666  013F20  0A00               	xorlw	0	; case 0
 11667  013F22  B4D8               	btfsc	status,2,c
 11668  013F24  D78F               	goto	l1090
 11669  013F26  0A01               	xorlw	1	; case 1
 11670  013F28  B4D8               	btfsc	status,2,c
 11671  013F2A  D798               	goto	l1092
 11672  013F2C  0A03               	xorlw	3	; case 2
 11673  013F2E  B4D8               	btfsc	status,2,c
 11674  013F30  D7A1               	goto	l1093
 11675  013F32  0A01               	xorlw	1	; case 3
 11676  013F34  B4D8               	btfsc	status,2,c
 11677  013F36  D7AA               	goto	l1094
 11678  013F38  0A07               	xorlw	7	; case 4
 11679  013F3A  B4D8               	btfsc	status,2,c
 11680  013F3C  D7B3               	goto	l1095
 11681  013F3E  0A01               	xorlw	1	; case 5
 11682  013F40  B4D8               	btfsc	status,2,c
 11683  013F42  D7BC               	goto	l1096
 11684  013F44  0A03               	xorlw	3	; case 6
 11685  013F46  B4D8               	btfsc	status,2,c
 11686  013F48  D7C5               	goto	l1097
 11687  013F4A  0A01               	xorlw	1	; case 7
 11688  013F4C  B4D8               	btfsc	status,2,c
 11689  013F4E  D7CE               	goto	l1098
 11690  013F50  D7D9               	goto	l1099
 11691  013F52                     l1091:
 11692                           
 11693                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 11694                           
 11695                           ; BSR set to: 2
 11696  013F52  0ED5               	movlw	low terminal_textAttributes@output_buff
 11697  013F54  0101               	movlb	1	; () banked
 11698  013F56  6F17               	movwf	strcat@to& (0+255),b
 11699  013F58  0E02               	movlw	high terminal_textAttributes@output_buff
 11700  013F5A  6F18               	movwf	(strcat@to+1)& (0+255),b
 11701  013F5C  0EFA               	movlw	low STR_19
 11702  013F5E  6F19               	movwf	strcat@from& (0+255),b
 11703  013F60  0EFF               	movlw	high STR_19
 11704  013F62  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11705  013F64  ECAF  F0C1         	call	_strcat	;wreg free
 11706                           
 11707                           ;ring_buffer_interface.c: 185: switch (background_color) {
 11708  013F68  D06C               	goto	l1100
 11709  013F6A                     
 11710                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 11711  013F6A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11712  013F6C  0101               	movlb	1	; () banked
 11713  013F6E  6F17               	movwf	strcat@to& (0+255),b
 11714  013F70  0E02               	movlw	high terminal_textAttributes@output_buff
 11715  013F72  6F18               	movwf	(strcat@to+1)& (0+255),b
 11716  013F74  0E41               	movlw	low (STR_131+9)
 11717  013F76  6F19               	movwf	strcat@from& (0+255),b
 11718  013F78  0EFF               	movlw	high (STR_131+9)
 11719  013F7A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11720  013F7C  ECAF  F0C1         	call	_strcat	;wreg free
 11721                           
 11722                           ;ring_buffer_interface.c: 189: break;
 11723  013F80  D07B               	goto	l1102
 11724  013F82                     
 11725                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 11726  013F82  0ED5               	movlw	low terminal_textAttributes@output_buff
 11727  013F84  0101               	movlb	1	; () banked
 11728  013F86  6F17               	movwf	strcat@to& (0+255),b
 11729  013F88  0E02               	movlw	high terminal_textAttributes@output_buff
 11730  013F8A  6F18               	movwf	(strcat@to+1)& (0+255),b
 11731  013F8C  0ECE               	movlw	low STR_31
 11732  013F8E  6F19               	movwf	strcat@from& (0+255),b
 11733  013F90  0EFF               	movlw	high STR_31
 11734  013F92  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11735  013F94  ECAF  F0C1         	call	_strcat	;wreg free
 11736                           
 11737                           ;ring_buffer_interface.c: 192: break;
 11738  013F98  D06F               	goto	l1102
 11739  013F9A                     
 11740                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 11741  013F9A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11742  013F9C  0101               	movlb	1	; () banked
 11743  013F9E  6F17               	movwf	strcat@to& (0+255),b
 11744  013FA0  0E02               	movlw	high terminal_textAttributes@output_buff
 11745  013FA2  6F18               	movwf	(strcat@to+1)& (0+255),b
 11746  013FA4  0ED4               	movlw	low STR_32
 11747  013FA6  6F19               	movwf	strcat@from& (0+255),b
 11748  013FA8  0EFF               	movlw	high STR_32
 11749  013FAA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11750  013FAC  ECAF  F0C1         	call	_strcat	;wreg free
 11751                           
 11752                           ;ring_buffer_interface.c: 195: break;
 11753  013FB0  D063               	goto	l1102
 11754  013FB2                     
 11755                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 11756  013FB2  0ED5               	movlw	low terminal_textAttributes@output_buff
 11757  013FB4  0101               	movlb	1	; () banked
 11758  013FB6  6F17               	movwf	strcat@to& (0+255),b
 11759  013FB8  0E02               	movlw	high terminal_textAttributes@output_buff
 11760  013FBA  6F18               	movwf	(strcat@to+1)& (0+255),b
 11761  013FBC  0EDA               	movlw	low STR_33
 11762  013FBE  6F19               	movwf	strcat@from& (0+255),b
 11763  013FC0  0EFF               	movlw	high STR_33
 11764  013FC2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11765  013FC4  ECAF  F0C1         	call	_strcat	;wreg free
 11766                           
 11767                           ;ring_buffer_interface.c: 198: break;
 11768  013FC8  D057               	goto	l1102
 11769  013FCA                     
 11770                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 11771  013FCA  0ED5               	movlw	low terminal_textAttributes@output_buff
 11772  013FCC  0101               	movlb	1	; () banked
 11773  013FCE  6F17               	movwf	strcat@to& (0+255),b
 11774  013FD0  0E02               	movlw	high terminal_textAttributes@output_buff
 11775  013FD2  6F18               	movwf	(strcat@to+1)& (0+255),b
 11776  013FD4  0EE0               	movlw	low STR_34
 11777  013FD6  6F19               	movwf	strcat@from& (0+255),b
 11778  013FD8  0EFF               	movlw	high STR_34
 11779  013FDA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11780  013FDC  ECAF  F0C1         	call	_strcat	;wreg free
 11781                           
 11782                           ;ring_buffer_interface.c: 201: break;
 11783  013FE0  D04B               	goto	l1102
 11784  013FE2                     
 11785                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 11786  013FE2  0ED5               	movlw	low terminal_textAttributes@output_buff
 11787  013FE4  0101               	movlb	1	; () banked
 11788  013FE6  6F17               	movwf	strcat@to& (0+255),b
 11789  013FE8  0E02               	movlw	high terminal_textAttributes@output_buff
 11790  013FEA  6F18               	movwf	(strcat@to+1)& (0+255),b
 11791  013FEC  0EE6               	movlw	low STR_35
 11792  013FEE  6F19               	movwf	strcat@from& (0+255),b
 11793  013FF0  0EFF               	movlw	high STR_35
 11794  013FF2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11795  013FF4  ECAF  F0C1         	call	_strcat	;wreg free
 11796                           
 11797                           ;ring_buffer_interface.c: 204: break;
 11798  013FF8  D03F               	goto	l1102
 11799  013FFA                     
 11800                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 11801  013FFA  0ED5               	movlw	low terminal_textAttributes@output_buff
 11802  013FFC  0101               	movlb	1	; () banked
 11803  013FFE  6F17               	movwf	strcat@to& (0+255),b
 11804  014000  0E02               	movlw	high terminal_textAttributes@output_buff
 11805  014002  6F18               	movwf	(strcat@to+1)& (0+255),b
 11806  014004  0EEC               	movlw	low STR_36
 11807  014006  6F19               	movwf	strcat@from& (0+255),b
 11808  014008  0EFF               	movlw	high STR_36
 11809  01400A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11810  01400C  ECAF  F0C1         	call	_strcat	;wreg free
 11811                           
 11812                           ;ring_buffer_interface.c: 207: break;
 11813  014010  D033               	goto	l1102
 11814  014012                     
 11815                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 11816  014012  0ED5               	movlw	low terminal_textAttributes@output_buff
 11817  014014  0101               	movlb	1	; () banked
 11818  014016  6F17               	movwf	strcat@to& (0+255),b
 11819  014018  0E02               	movlw	high terminal_textAttributes@output_buff
 11820  01401A  6F18               	movwf	(strcat@to+1)& (0+255),b
 11821  01401C  0EF2               	movlw	low STR_37
 11822  01401E  6F19               	movwf	strcat@from& (0+255),b
 11823  014020  0EFF               	movlw	high STR_37
 11824  014022  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11825  014024  ECAF  F0C1         	call	_strcat	;wreg free
 11826                           
 11827                           ;ring_buffer_interface.c: 210: break;
 11828  014028  D027               	goto	l1102
 11829  01402A                     
 11830                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 11831  01402A  0ED5               	movlw	low terminal_textAttributes@output_buff
 11832  01402C  0101               	movlb	1	; () banked
 11833  01402E  6F17               	movwf	strcat@to& (0+255),b
 11834  014030  0E02               	movlw	high terminal_textAttributes@output_buff
 11835  014032  6F18               	movwf	(strcat@to+1)& (0+255),b
 11836  014034  0EF2               	movlw	low STR_37
 11837  014036  6F19               	movwf	strcat@from& (0+255),b
 11838  014038  0EFF               	movlw	high STR_37
 11839  01403A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11840  01403C  ECAF  F0C1         	call	_strcat	;wreg free
 11841                           
 11842                           ;ring_buffer_interface.c: 215: }
 11843                           
 11844                           ;ring_buffer_interface.c: 214: break;
 11845  014040  D01B               	goto	l1102
 11846  014042                     l1100:
 11847  014042  0101               	movlb	1	; () banked
 11848  014044  51B2               	movf	terminal_textAttributes@background_color& (0+255),w,b
 11849                           
 11850                           ; Switch size 1, requested type "space"
 11851                           ; Number of cases is 8, Range of values is 0 to 7
 11852                           ; switch strategies available:
 11853                           ; Name         Instructions Cycles
 11854                           ; simple_byte           25    13 (average)
 11855                           ;	Chosen strategy is simple_byte
 11856  014046  0A00               	xorlw	0	; case 0
 11857  014048  B4D8               	btfsc	status,2,c
 11858  01404A  D78F               	goto	l1101
 11859  01404C  0A01               	xorlw	1	; case 1
 11860  01404E  B4D8               	btfsc	status,2,c
 11861  014050  D798               	goto	l1103
 11862  014052  0A03               	xorlw	3	; case 2
 11863  014054  B4D8               	btfsc	status,2,c
 11864  014056  D7A1               	goto	l1104
 11865  014058  0A01               	xorlw	1	; case 3
 11866  01405A  B4D8               	btfsc	status,2,c
 11867  01405C  D7AA               	goto	l1105
 11868  01405E  0A07               	xorlw	7	; case 4
 11869  014060  B4D8               	btfsc	status,2,c
 11870  014062  D7B3               	goto	l1106
 11871  014064  0A01               	xorlw	1	; case 5
 11872  014066  B4D8               	btfsc	status,2,c
 11873  014068  D7BC               	goto	l1107
 11874  01406A  0A03               	xorlw	3	; case 6
 11875  01406C  B4D8               	btfsc	status,2,c
 11876  01406E  D7C5               	goto	l1108
 11877  014070  0A01               	xorlw	1	; case 7
 11878  014072  B4D8               	btfsc	status,2,c
 11879  014074  D7CE               	goto	l1109
 11880  014076  D7D9               	goto	l1110
 11881  014078                     l1102:
 11882                           
 11883                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 11884                           
 11885                           ; BSR set to: 1
 11886  014078  0ED5               	movlw	low terminal_textAttributes@output_buff
 11887  01407A  0101               	movlb	1	; () banked
 11888  01407C  6F17               	movwf	strcat@to& (0+255),b
 11889  01407E  0E02               	movlw	high terminal_textAttributes@output_buff
 11890  014080  6F18               	movwf	(strcat@to+1)& (0+255),b
 11891  014082  0EFC               	movlw	low STR_39
 11892  014084  6F19               	movwf	strcat@from& (0+255),b
 11893  014086  0EFF               	movlw	high STR_39
 11894  014088  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11895  01408A  ECAF  F0C1         	call	_strcat	;wreg free
 11896                           
 11897                           ;ring_buffer_interface.c: 219: printf(output_buff);
 11898  01408E  0ED5               	movlw	low terminal_textAttributes@output_buff
 11899  014090  0101               	movlb	1	; () banked
 11900  014092  6F82               	movwf	printf@f& (0+255),b
 11901  014094  0E02               	movlw	high terminal_textAttributes@output_buff
 11902  014096  6F83               	movwf	(printf@f+1)& (0+255),b
 11903  014098  EC50  F087         	call	_printf	;wreg free
 11904  01409C  0012               	return		;funcret
 11905  01409E                     __end_of_terminal_textAttributes:
 11906                           	opt stack 0
 11907                           tblptru	equ	0xFF8
 11908                           tblptrh	equ	0xFF7
 11909                           tblptrl	equ	0xFF6
 11910                           tablat	equ	0xFF5
 11911                           intcon	equ	0xFF2
 11912                           postinc0	equ	0xFEE
 11913                           wreg	equ	0xFE8
 11914                           indf1	equ	0xFE7
 11915                           postdec1	equ	0xFE5
 11916                           fsr1h	equ	0xFE2
 11917                           fsr1l	equ	0xFE1
 11918                           indf2	equ	0xFDF
 11919                           postinc2	equ	0xFDE
 11920                           fsr2h	equ	0xFDA
 11921                           fsr2l	equ	0xFD9
 11922                           status	equ	0xFD8
 11923                           
 11924 ;; *************** function _strncpy *****************
 11925 ;; Defined at:
 11926 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11929 ;;		 -> terminal_textAttributes@output_buff(15), 
 11930 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11931 ;;		 -> STR_11(3), 
 11932 ;;  size            2   27[BANK1 ] unsigned int 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 11935 ;;		 -> terminal_textAttributes@output_buff(15), 
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  2   23[BANK1 ] PTR unsigned char 
 11938 ;; Registers used:
 11939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11945 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11946 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11948 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11949 ;;Total ram usage:        8 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:   13
 11952 ;; This function calls:
 11953 ;;		Nothing
 11954 ;; This function is called by:
 11955 ;;		_terminal_textAttributes
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959                           	psect	text8
 11960  017F7E                     __ptext8:
 11961                           	opt stack 0
 11962  017F7E                     _strncpy:
 11963                           	opt stack 15
 11964                           
 11965                           ;incstack = 0
 11966  017F7E  C117  F11D         	movff	strncpy@to,strncpy@cp
 11967  017F82  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 11968  017F86  D018               	goto	l2261
 11969  017F88  0101               	movlb	1	; () banked
 11970  017F8A  071B               	decf	strncpy@size& (0+255),f,b
 11971  017F8C  A0D8               	btfss	status,0,c
 11972  017F8E  071C               	decf	(strncpy@size+1)& (0+255),f,b
 11973                           
 11974                           ; BSR set to: 1
 11975  017F90  C119  FFF6         	movff	strncpy@from,tblptrl
 11976  017F94  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 11977  017F98  4B19               	infsnz	strncpy@from& (0+255),f,b
 11978  017F9A  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 11979  017F9C                     	if	0	;tblptru may be non-zero
 11980  017F9C                     	endif
 11981  017F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11982  017F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 11983  017F9E  6EF8               	movwf	tblptru,c
 11984  017FA0                     	endif
 11985  017FA0  C11D  FFD9         	movff	strncpy@cp,fsr2l
 11986  017FA4  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 11987  017FA8  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 11988  017FAA  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 11989  017FAC  0008               	tblrd		*
 11990  017FAE  CFF5 FFDF          	movff	tablat,indf2
 11991  017FB2  50DF               	movf	indf2,w,c
 11992  017FB4  B4D8               	btfsc	status,2,c
 11993  017FB6  D00E               	goto	l2263
 11994  017FB8                     l2261:
 11995                           
 11996                           ; BSR set to: 1
 11997                           
 11998                           ; BSR set to: 1
 11999  017FB8  0101               	movlb	1	; () banked
 12000  017FBA  511B               	movf	strncpy@size& (0+255),w,b
 12001  017FBC  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 12002  017FBE  B4D8               	btfsc	status,2,c
 12003  017FC0  D009               	goto	l2263
 12004  017FC2  D7E2               	goto	l2260
 12005  017FC4                     l18562:
 12006                           
 12007                           ; BSR set to: 1
 12008  017FC4  C11D  FFD9         	movff	strncpy@cp,fsr2l
 12009  017FC8  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 12010  017FCC  0E00               	movlw	0
 12011  017FCE  6EDF               	movwf	indf2,c
 12012                           
 12013                           ; BSR set to: 1
 12014  017FD0  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 12015  017FD2  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 12016  017FD4                     l2263:
 12017                           
 12018                           ; BSR set to: 1
 12019                           
 12020                           ; BSR set to: 1
 12021  017FD4  071B               	decf	strncpy@size& (0+255),f,b
 12022  017FD6  A0D8               	btfss	status,0,c
 12023  017FD8  071C               	decf	(strncpy@size+1)& (0+255),f,b
 12024  017FDA  291B               	incf	strncpy@size& (0+255),w,b
 12025  017FDC  E1F3               	bnz	l18562
 12026  017FDE  291C               	incf	(strncpy@size+1)& (0+255),w,b
 12027  017FE0  B4D8               	btfsc	status,2,c
 12028  017FE2  0012               	return	
 12029  017FE4  D7EF               	goto	l2264
 12030  017FE6                     __end_of_strncpy:
 12031                           	opt stack 0
 12032                           tblptru	equ	0xFF8
 12033                           tblptrh	equ	0xFF7
 12034                           tblptrl	equ	0xFF6
 12035                           tablat	equ	0xFF5
 12036                           intcon	equ	0xFF2
 12037                           postinc0	equ	0xFEE
 12038                           wreg	equ	0xFE8
 12039                           indf1	equ	0xFE7
 12040                           postdec1	equ	0xFE5
 12041                           fsr1h	equ	0xFE2
 12042                           fsr1l	equ	0xFE1
 12043                           indf2	equ	0xFDF
 12044                           postinc2	equ	0xFDE
 12045                           fsr2h	equ	0xFDA
 12046                           fsr2l	equ	0xFD9
 12047                           status	equ	0xFD8
 12048                           
 12049 ;; *************** function _strcat *****************
 12050 ;; Defined at:
 12051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  to              2   23[BANK1 ] PTR unsigned char 
 12054 ;;		 -> terminal_textAttributes@output_buff(15), 
 12055 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 12056 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 12057 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 12058 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 12059 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 12060 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 12061 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 12062 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 12065 ;;		 -> terminal_textAttributes@output_buff(15), 
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  2   23[BANK1 ] PTR unsigned char 
 12068 ;; Registers used:
 12069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12075 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12076 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12078 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12079 ;;Total ram usage:        6 bytes
 12080 ;; Hardware stack levels used:    1
 12081 ;; Hardware stack levels required when called:   13
 12082 ;; This function calls:
 12083 ;;		Nothing
 12084 ;; This function is called by:
 12085 ;;		_terminal_textAttributes
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           	psect	text9
 12090  01835E                     __ptext9:
 12091                           	opt stack 0
 12092  01835E                     _strcat:
 12093                           	opt stack 15
 12094                           
 12095                           ; BSR set to: 1
 12096                           ;incstack = 0
 12097  01835E  C117  F11B         	movff	strcat@to,strcat@cp
 12098  018362  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 12099  018366  D003               	goto	l2230
 12100  018368  0101               	movlb	1	; () banked
 12101  01836A  4B1B               	infsnz	strcat@cp& (0+255),f,b
 12102  01836C  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 12103  01836E                     l2230:
 12104                           
 12105                           ; BSR set to: 1
 12106  01836E  C11B  FFD9         	movff	strcat@cp,fsr2l
 12107  018372  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 12108  018376  50DF               	movf	indf2,w,c
 12109  018378  B4D8               	btfsc	status,2,c
 12110  01837A  D006               	goto	l2233
 12111  01837C  D7F5               	goto	l2231
 12112  01837E  0101               	movlb	1	; () banked
 12113  018380  4B1B               	infsnz	strcat@cp& (0+255),f,b
 12114  018382  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 12115  018384  4B19               	infsnz	strcat@from& (0+255),f,b
 12116  018386  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 12117  018388                     l2233:
 12118                           
 12119                           ; BSR set to: 1
 12120  018388  C119  FFF6         	movff	strcat@from,tblptrl
 12121  01838C  C11A  FFF7         	movff	strcat@from+1,tblptrh
 12122  018390                     	if	0	;tblptru may be non-zero
 12123  018390                     	endif
 12124  018390                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12125  018390  0E00               	movlw	low (__mediumconst shr (0+16))
 12126  018392  6EF8               	movwf	tblptru,c
 12127  018394                     	endif
 12128  018394  C11B  FFD9         	movff	strcat@cp,fsr2l
 12129  018398  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 12130  01839C  0008               	tblrd		*
 12131  01839E  CFF5 FFDF          	movff	tablat,indf2
 12132  0183A2  50DF               	movf	indf2,w,c
 12133  0183A4  B4D8               	btfsc	status,2,c
 12134  0183A6  0012               	return	
 12135  0183A8  D7EA               	goto	l2234
 12136  0183AA                     __end_of_strcat:
 12137                           	opt stack 0
 12138                           tblptru	equ	0xFF8
 12139                           tblptrh	equ	0xFF7
 12140                           tblptrl	equ	0xFF6
 12141                           tablat	equ	0xFF5
 12142                           intcon	equ	0xFF2
 12143                           postinc0	equ	0xFEE
 12144                           wreg	equ	0xFE8
 12145                           indf1	equ	0xFE7
 12146                           postdec1	equ	0xFE5
 12147                           fsr1h	equ	0xFE2
 12148                           fsr1l	equ	0xFE1
 12149                           indf2	equ	0xFDF
 12150                           postinc2	equ	0xFDE
 12151                           fsr2h	equ	0xFDA
 12152                           fsr2l	equ	0xFD9
 12153                           status	equ	0xFD8
 12154                           
 12155 ;; *************** function _terminal_printNewline *****************
 12156 ;; Defined at:
 12157 ;;		line 230 in file "ring_buffer_interface.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;		None
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;		None
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12175 ;;Total ram usage:        0 bytes
 12176 ;; Hardware stack levels used:    1
 12177 ;; Hardware stack levels required when called:   16
 12178 ;; This function calls:
 12179 ;;		_printf
 12180 ;; This function is called by:
 12181 ;;		_ringBufferLUT
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185                           	psect	text10
 12186  018B68                     __ptext10:
 12187                           	opt stack 0
 12188  018B68                     _terminal_printNewline:
 12189                           	opt stack 12
 12190                           
 12191                           ;ring_buffer_interface.c: 232: printf("\n\r");
 12192                           
 12193                           ;incstack = 0
 12194  018B68  0EC8               	movlw	low (STR_115+68)
 12195  018B6A  0101               	movlb	1	; () banked
 12196  018B6C  6F82               	movwf	printf@f& (0+255),b
 12197  018B6E  0EF5               	movlw	high (STR_115+68)
 12198  018B70  6F83               	movwf	(printf@f+1)& (0+255),b
 12199  018B72  EC50  F087         	call	_printf	;wreg free
 12200  018B76  0012               	return		;funcret
 12201  018B78                     __end_of_terminal_printNewline:
 12202                           	opt stack 0
 12203                           tblptru	equ	0xFF8
 12204                           tblptrh	equ	0xFF7
 12205                           tblptrl	equ	0xFF6
 12206                           tablat	equ	0xFF5
 12207                           intcon	equ	0xFF2
 12208                           postinc0	equ	0xFEE
 12209                           wreg	equ	0xFE8
 12210                           indf1	equ	0xFE7
 12211                           postdec1	equ	0xFE5
 12212                           fsr1h	equ	0xFE2
 12213                           fsr1l	equ	0xFE1
 12214                           indf2	equ	0xFDF
 12215                           postinc2	equ	0xFDE
 12216                           fsr2h	equ	0xFDA
 12217                           fsr2l	equ	0xFD9
 12218                           status	equ	0xFD8
 12219                           
 12220 ;; *************** function _strstr *****************
 12221 ;; Defined at:
 12222 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 12225 ;;		 -> NULL(0), line(64), 
 12226 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 12227 ;;		 -> STR_109(25), 
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;		None
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  2   38[BANK1 ] PTR unsigned char 
 12232 ;; Registers used:
 12233 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12234 ;; Tracked objects:
 12235 ;;		On entry : 0/0
 12236 ;;		On exit  : 0/0
 12237 ;;		Unchanged: 0/0
 12238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12239 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12242 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12243 ;;Total ram usage:        4 bytes
 12244 ;; Hardware stack levels used:    1
 12245 ;; Hardware stack levels required when called:   14
 12246 ;; This function calls:
 12247 ;;		_strchr
 12248 ;;		_strlen
 12249 ;;		_strncmp
 12250 ;; This function is called by:
 12251 ;;		_ringBufferLUT
 12252 ;; This function uses a non-reentrant model
 12253 ;;
 12254                           
 12255                           	psect	text11
 12256  017A32                     __ptext11:
 12257                           	opt stack 0
 12258  017A32                     _strstr:
 12259                           	opt stack 14
 12260                           
 12261                           ;incstack = 0
 12262  017A32  D034               	goto	l2275
 12263  017A34  C126  F11D         	movff	strstr@s1,strncmp@s1
 12264  017A38  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 12265  017A3C  C128  F11F         	movff	strstr@s2,strncmp@s2
 12266  017A40  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 12267  017A44  C128  F117         	movff	strstr@s2,strlen@s
 12268  017A48  C129  F118         	movff	strstr@s2+1,strlen@s+1
 12269  017A4C  ECBA  F0C0         	call	_strlen	;wreg free
 12270  017A50  C117  F121         	movff	?_strlen,strncmp@len
 12271  017A54  C118  F122         	movff	?_strlen+1,strncmp@len+1
 12272  017A58  ECD1  F0BC         	call	_strncmp	;wreg free
 12273  017A5C  0101               	movlb	1	; () banked
 12274  017A5E  511D               	movf	?_strncmp& (0+255),w,b
 12275  017A60  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 12276  017A62  A4D8               	btfss	status,2,c
 12277  017A64  D005               	goto	l2277
 12278                           
 12279                           ; BSR set to: 1
 12280  017A66  C126  F126         	movff	strstr@s1,?_strstr
 12281  017A6A  C127  F127         	movff	strstr@s1+1,?_strstr+1
 12282                           
 12283                           ; BSR set to: 1
 12284  017A6E  0012               	return	
 12285  017A70                     l2277:
 12286                           
 12287                           ; BSR set to: 1
 12288                           
 12289                           ; BSR set to: 1
 12290  017A70  0E01               	movlw	1
 12291  017A72  2526               	addwf	strstr@s1& (0+255),w,b
 12292  017A74  6F17               	movwf	strchr@ptr& (0+255),b
 12293  017A76  0E00               	movlw	0
 12294  017A78  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 12295  017A7A  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 12296  017A7C  C128  FFF6         	movff	strstr@s2,tblptrl
 12297  017A80  C129  FFF7         	movff	strstr@s2+1,tblptrh
 12298  017A84                     	if	0	;tblptru may be non-zero
 12299  017A84                     	endif
 12300  017A84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12301  017A84  0E00               	movlw	low (__mediumconst shr (0+16))
 12302  017A86  6EF8               	movwf	tblptru,c
 12303  017A88                     	endif
 12304  017A88  0008               	tblrd		*
 12305  017A8A  50F5               	movf	tablat,w,c
 12306  017A8C  6F19               	movwf	strchr@chr& (0+255),b
 12307  017A8E  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 12308  017A90  EC6F  F0C3         	call	_strchr	;wreg free
 12309  017A94  C117  F126         	movff	?_strchr,strstr@s1
 12310  017A98  C118  F127         	movff	?_strchr+1,strstr@s1+1
 12311  017A9C                     l2275:
 12312  017A9C  0101               	movlb	1	; () banked
 12313  017A9E  5126               	movf	strstr@s1& (0+255),w,b
 12314  017AA0  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 12315  017AA2  B4D8               	btfsc	status,2,c
 12316  017AA4  D007               	goto	u25170
 12317                           
 12318                           ; BSR set to: 1
 12319  017AA6  C126  FFD9         	movff	strstr@s1,fsr2l
 12320  017AAA  C127  FFDA         	movff	strstr@s1+1,fsr2h
 12321  017AAE  50DF               	movf	indf2,w,c
 12322  017AB0  A4D8               	btfss	status,2,c
 12323  017AB2  D7C0               	goto	l2276
 12324  017AB4                     u25170:
 12325                           
 12326                           ; BSR set to: 1
 12327                           
 12328                           ; BSR set to: 1
 12329                           
 12330                           ; BSR set to: 1
 12331  017AB4  0E00               	movlw	0
 12332  017AB6  6F26               	movwf	?_strstr& (0+255),b
 12333  017AB8  0E00               	movlw	0
 12334  017ABA  6F27               	movwf	(?_strstr+1)& (0+255),b
 12335  017ABC  0012               	return	
 12336  017ABE                     __end_of_strstr:
 12337                           	opt stack 0
 12338                           tblptru	equ	0xFF8
 12339                           tblptrh	equ	0xFF7
 12340                           tblptrl	equ	0xFF6
 12341                           tablat	equ	0xFF5
 12342                           intcon	equ	0xFF2
 12343                           postinc0	equ	0xFEE
 12344                           wreg	equ	0xFE8
 12345                           indf1	equ	0xFE7
 12346                           postdec1	equ	0xFE5
 12347                           fsr1h	equ	0xFE2
 12348                           fsr1l	equ	0xFE1
 12349                           indf2	equ	0xFDF
 12350                           postinc2	equ	0xFDE
 12351                           fsr2h	equ	0xFDA
 12352                           fsr2l	equ	0xFD9
 12353                           status	equ	0xFD8
 12354                           
 12355 ;; *************** function _strncmp *****************
 12356 ;; Defined at:
 12357 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 12360 ;;		 -> NULL(0), line(64), 
 12361 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 12362 ;;		 -> STR_109(25), 
 12363 ;;  len             2   33[BANK1 ] unsigned int 
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;		None
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  2   29[BANK1 ] int 
 12368 ;; Registers used:
 12369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12370 ;; Tracked objects:
 12371 ;;		On entry : 0/0
 12372 ;;		On exit  : 0/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12375 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12377 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12378 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12379 ;;Total ram usage:        9 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:   13
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_strstr
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           	psect	text12
 12390  0179A2                     __ptext12:
 12391                           	opt stack 0
 12392  0179A2                     _strncmp:
 12393                           	opt stack 14
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;incstack = 0
 12397  0179A2  D039               	goto	l2334
 12398  0179A4                     l18682:
 12399  0179A4  C11D  FFD9         	movff	strncmp@s1,fsr2l
 12400  0179A8  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 12401  0179AC  50DF               	movf	indf2,w,c
 12402  0179AE  B4D8               	btfsc	status,2,c
 12403  0179B0  D012               	goto	u25030
 12404  0179B2  C11D  FFD9         	movff	strncmp@s1,fsr2l
 12405  0179B6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 12406  0179BA  50DF               	movf	indf2,w,c
 12407  0179BC  0101               	movlb	1	; () banked
 12408  0179BE  6F23               	movwf	??_strncmp& (0+255),b
 12409  0179C0  C11F  FFF6         	movff	strncmp@s2,tblptrl
 12410  0179C4  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 12411  0179C8                     	if	0	;tblptru may be non-zero
 12412  0179C8                     	endif
 12413  0179C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12414  0179C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12415  0179CA  6EF8               	movwf	tblptru,c
 12416  0179CC                     	endif
 12417  0179CC  0008               	tblrd		*
 12418  0179CE  50F5               	movf	tablat,w,c
 12419  0179D0  1923               	xorwf	??_strncmp& (0+255),w,b
 12420  0179D2  B4D8               	btfsc	status,2,c
 12421  0179D4  D01C               	goto	l2336
 12422  0179D6                     u25030:
 12423                           
 12424                           ; BSR set to: 1
 12425  0179D6  C11F  FFF6         	movff	strncmp@s2,tblptrl
 12426  0179DA  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 12427  0179DE                     	if	0	;tblptru may be non-zero
 12428  0179DE                     	endif
 12429  0179DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12430  0179DE  0E00               	movlw	low (__mediumconst shr (0+16))
 12431  0179E0  6EF8               	movwf	tblptru,c
 12432  0179E2                     	endif
 12433  0179E2  0008               	tblrd		*
 12434  0179E4  50F5               	movf	tablat,w,c
 12435  0179E6  0101               	movlb	1	; () banked
 12436  0179E8  6F23               	movwf	??_strncmp& (0+255),b
 12437  0179EA  6B24               	clrf	(??_strncmp+1)& (0+255),b
 12438  0179EC  1F23               	comf	??_strncmp& (0+255),f,b
 12439  0179EE  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 12440  0179F0  4B23               	infsnz	??_strncmp& (0+255),f,b
 12441  0179F2  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 12442  0179F4  C11D  FFD9         	movff	strncmp@s1,fsr2l
 12443  0179F8  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 12444  0179FC  50DF               	movf	indf2,w,c
 12445  0179FE  6F25               	movwf	(??_strncmp+2)& (0+255),b
 12446  017A00  5125               	movf	(??_strncmp+2)& (0+255),w,b
 12447  017A02  2523               	addwf	??_strncmp& (0+255),w,b
 12448  017A04  6F1D               	movwf	?_strncmp& (0+255),b
 12449  017A06  0E00               	movlw	0
 12450  017A08  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 12451  017A0A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 12452                           
 12453                           ; BSR set to: 1
 12454  017A0C  0012               	return	
 12455  017A0E                     l2336:
 12456                           
 12457                           ; BSR set to: 1
 12458                           
 12459                           ; BSR set to: 1
 12460  017A0E  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 12461  017A10  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 12462  017A12  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 12463  017A14  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 12464  017A16                     l2334:
 12465                           
 12466                           ; BSR set to: 1
 12467  017A16  0101               	movlb	1	; () banked
 12468  017A18  0721               	decf	strncmp@len& (0+255),f,b
 12469  017A1A  A0D8               	btfss	status,0,c
 12470  017A1C  0722               	decf	(strncmp@len+1)& (0+255),f,b
 12471  017A1E  2921               	incf	strncmp@len& (0+255),w,b
 12472  017A20  E1C1               	bnz	l18682
 12473  017A22  2922               	incf	(strncmp@len+1)& (0+255),w,b
 12474  017A24  A4D8               	btfss	status,2,c
 12475  017A26  D7BE               	goto	l2335
 12476                           
 12477                           ; BSR set to: 1
 12478                           
 12479                           ; BSR set to: 1
 12480  017A28  0E00               	movlw	0
 12481  017A2A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 12482  017A2C  0E00               	movlw	0
 12483  017A2E  6F1D               	movwf	?_strncmp& (0+255),b
 12484  017A30  0012               	return	
 12485  017A32                     __end_of_strncmp:
 12486                           	opt stack 0
 12487                           tblptru	equ	0xFF8
 12488                           tblptrh	equ	0xFF7
 12489                           tblptrl	equ	0xFF6
 12490                           tablat	equ	0xFF5
 12491                           intcon	equ	0xFF2
 12492                           postinc0	equ	0xFEE
 12493                           wreg	equ	0xFE8
 12494                           indf1	equ	0xFE7
 12495                           postdec1	equ	0xFE5
 12496                           fsr1h	equ	0xFE2
 12497                           fsr1l	equ	0xFE1
 12498                           indf2	equ	0xFDF
 12499                           postinc2	equ	0xFDE
 12500                           fsr2h	equ	0xFDA
 12501                           fsr2l	equ	0xFD9
 12502                           status	equ	0xFD8
 12503                           
 12504 ;; *************** function _strlen *****************
 12505 ;; Defined at:
 12506 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 12507 ;; Parameters:    Size  Location     Type
 12508 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 12509 ;;		 -> STR_109(25), line(64), 
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 12512 ;;		 -> STR_109(25), line(64), 
 12513 ;; Return value:  Size  Location     Type
 12514 ;;                  2   23[BANK1 ] unsigned int 
 12515 ;; Registers used:
 12516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 12517 ;; Tracked objects:
 12518 ;;		On entry : 0/0
 12519 ;;		On exit  : 0/0
 12520 ;;		Unchanged: 0/0
 12521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12522 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12523 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12524 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12525 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12526 ;;Total ram usage:        6 bytes
 12527 ;; Hardware stack levels used:    1
 12528 ;; Hardware stack levels required when called:   13
 12529 ;; This function calls:
 12530 ;;		Nothing
 12531 ;; This function is called by:
 12532 ;;		_terminal_ringBufferPull
 12533 ;;		_strstr
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text13
 12538  018174                     __ptext13:
 12539                           	opt stack 0
 12540  018174                     _strlen:
 12541                           	opt stack 16
 12542                           
 12543                           ; BSR set to: 1
 12544                           ;incstack = 0
 12545  018174  C117  F11B         	movff	strlen@s,strlen@cp
 12546  018178  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 12547  01817C  D003               	goto	l2253
 12548  01817E  0101               	movlb	1	; () banked
 12549  018180  4B1B               	infsnz	strlen@cp& (0+255),f,b
 12550  018182  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 12551  018184                     l2253:
 12552                           
 12553                           ; BSR set to: 1
 12554  018184  C11B  FFF6         	movff	strlen@cp,tblptrl
 12555  018188  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 12556  01818C  0E00               	movlw	low (__mediumconst shr (0+16))
 12557  01818E  6EF8               	movwf	tblptru,c
 12558  018190  0E0D               	movlw	(high __ramtop+-1)
 12559  018192  64F7               	cpfsgt	tblptrh,c
 12560  018194  D003               	bra	u25007
 12561  018196  0008               	tblrd		*
 12562  018198  50F5               	movf	tablat,w,c
 12563  01819A  D005               	bra	u25000
 12564  01819C                     u25007:
 12565  01819C  CFF6 FFE9          	movff	tblptrl,fsr0l
 12566  0181A0  CFF7 FFEA          	movff	tblptrh,fsr0h
 12567  0181A4  50EF               	movf	indf0,w,c
 12568  0181A6                     u25000:
 12569  0181A6  0900               	iorlw	0
 12570  0181A8  A4D8               	btfss	status,2,c
 12571  0181AA  D7E9               	goto	l2254
 12572  0181AC  C117  F119         	movff	strlen@s,??_strlen
 12573  0181B0  C118  F11A         	movff	strlen@s+1,??_strlen+1
 12574  0181B4  0101               	movlb	1	; () banked
 12575  0181B6  1F19               	comf	??_strlen& (0+255),f,b
 12576  0181B8  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 12577  0181BA  4B19               	infsnz	??_strlen& (0+255),f,b
 12578  0181BC  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 12579  0181BE  511B               	movf	strlen@cp& (0+255),w,b
 12580  0181C0  2519               	addwf	??_strlen& (0+255),w,b
 12581  0181C2  6F17               	movwf	?_strlen& (0+255),b
 12582  0181C4  511C               	movf	(strlen@cp+1)& (0+255),w,b
 12583  0181C6  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 12584  0181C8  6F18               	movwf	(?_strlen+1)& (0+255),b
 12585  0181CA  0012               	return	
 12586  0181CC                     __end_of_strlen:
 12587                           	opt stack 0
 12588                           tblptru	equ	0xFF8
 12589                           tblptrh	equ	0xFF7
 12590                           tblptrl	equ	0xFF6
 12591                           tablat	equ	0xFF5
 12592                           intcon	equ	0xFF2
 12593                           indf0	equ	0xFEF
 12594                           postinc0	equ	0xFEE
 12595                           fsr0h	equ	0xFEA
 12596                           fsr0l	equ	0xFE9
 12597                           wreg	equ	0xFE8
 12598                           indf1	equ	0xFE7
 12599                           postdec1	equ	0xFE5
 12600                           fsr1h	equ	0xFE2
 12601                           fsr1l	equ	0xFE1
 12602                           indf2	equ	0xFDF
 12603                           postinc2	equ	0xFDE
 12604                           fsr2h	equ	0xFDA
 12605                           fsr2l	equ	0xFD9
 12606                           status	equ	0xFD8
 12607                           
 12608 ;; *************** function _strchr *****************
 12609 ;; Defined at:
 12610 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 12613 ;;		 -> NULL(0), line(64), 
 12614 ;;  chr             2   25[BANK1 ] int 
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;		None
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  2   23[BANK1 ] PTR unsigned char 
 12619 ;; Registers used:
 12620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12626 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12628 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12629 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12630 ;;Total ram usage:        5 bytes
 12631 ;; Hardware stack levels used:    1
 12632 ;; Hardware stack levels required when called:   13
 12633 ;; This function calls:
 12634 ;;		Nothing
 12635 ;; This function is called by:
 12636 ;;		_strstr
 12637 ;; This function uses a non-reentrant model
 12638 ;;
 12639                           
 12640                           	psect	text14
 12641  0186DE                     __ptext14:
 12642                           	opt stack 0
 12643  0186DE                     _strchr:
 12644                           	opt stack 14
 12645                           
 12646                           ; BSR set to: 1
 12647                           ;incstack = 0
 12648  0186DE  C117  FFD9         	movff	strchr@ptr,fsr2l
 12649  0186E2  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 12650  0186E6  0101               	movlb	1	; () banked
 12651  0186E8  5119               	movf	strchr@chr& (0+255),w,b
 12652  0186EA  18DE               	xorwf	postinc2,w,c
 12653  0186EC  A4D8               	btfss	status,2,c
 12654  0186EE  D005               	goto	l2329
 12655                           
 12656                           ; BSR set to: 1
 12657  0186F0  C117  F117         	movff	strchr@ptr,?_strchr
 12658  0186F4  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 12659                           
 12660                           ; BSR set to: 1
 12661  0186F8  0012               	return	
 12662  0186FA                     l2329:
 12663                           
 12664                           ; BSR set to: 1
 12665                           
 12666                           ; BSR set to: 1
 12667  0186FA  C117  FFD9         	movff	strchr@ptr,fsr2l
 12668  0186FE  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 12669  018702  4B17               	infsnz	strchr@ptr& (0+255),f,b
 12670  018704  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 12671  018706  50DF               	movf	indf2,w,c
 12672  018708  A4D8               	btfss	status,2,c
 12673  01870A  D7E9               	goto	_strchr
 12674                           
 12675                           ; BSR set to: 1
 12676                           
 12677                           ; BSR set to: 1
 12678  01870C  0E00               	movlw	0
 12679  01870E  6F17               	movwf	?_strchr& (0+255),b
 12680  018710  0E00               	movlw	0
 12681  018712  6F18               	movwf	(?_strchr+1)& (0+255),b
 12682  018714  0012               	return	
 12683  018716                     __end_of_strchr:
 12684                           	opt stack 0
 12685                           tblptru	equ	0xFF8
 12686                           tblptrh	equ	0xFF7
 12687                           tblptrl	equ	0xFF6
 12688                           tablat	equ	0xFF5
 12689                           intcon	equ	0xFF2
 12690                           indf0	equ	0xFEF
 12691                           postinc0	equ	0xFEE
 12692                           fsr0h	equ	0xFEA
 12693                           fsr0l	equ	0xFE9
 12694                           wreg	equ	0xFE8
 12695                           indf1	equ	0xFE7
 12696                           postdec1	equ	0xFE5
 12697                           fsr1h	equ	0xFE2
 12698                           fsr1l	equ	0xFE1
 12699                           indf2	equ	0xFDF
 12700                           postinc2	equ	0xFDE
 12701                           fsr2h	equ	0xFDA
 12702                           fsr2l	equ	0xFD9
 12703                           status	equ	0xFD8
 12704                           
 12705 ;; *************** function _strcpy *****************
 12706 ;; Defined at:
 12707 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 12708 ;; Parameters:    Size  Location     Type
 12709 ;;  to              2   23[BANK1 ] PTR unsigned char 
 12710 ;;		 -> ringBufferLUT@channel_name(22), 
 12711 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 12712 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 12713 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 12716 ;;		 -> ringBufferLUT@channel_name(22), 
 12717 ;; Return value:  Size  Location     Type
 12718 ;;                  2   23[BANK1 ] PTR unsigned char 
 12719 ;; Registers used:
 12720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12721 ;; Tracked objects:
 12722 ;;		On entry : 0/0
 12723 ;;		On exit  : 0/0
 12724 ;;		Unchanged: 0/0
 12725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12726 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12727 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12729 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12730 ;;Total ram usage:        6 bytes
 12731 ;; Hardware stack levels used:    1
 12732 ;; Hardware stack levels required when called:   13
 12733 ;; This function calls:
 12734 ;;		Nothing
 12735 ;; This function is called by:
 12736 ;;		_ringBufferLUT
 12737 ;; This function uses a non-reentrant model
 12738 ;;
 12739                           
 12740                           	psect	text15
 12741  018716                     __ptext15:
 12742                           	opt stack 0
 12743  018716                     _strcpy:
 12744                           	opt stack 15
 12745                           
 12746                           ; BSR set to: 1
 12747                           ;incstack = 0
 12748  018716  C117  F11B         	movff	strcpy@to,strcpy@cp
 12749  01871A  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 12750  01871E  D005               	goto	l2247
 12751  018720  0101               	movlb	1	; () banked
 12752  018722  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 12753  018724  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 12754  018726  4B19               	infsnz	strcpy@from& (0+255),f,b
 12755  018728  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 12756  01872A                     l2247:
 12757                           
 12758                           ; BSR set to: 1
 12759  01872A  C119  FFF6         	movff	strcpy@from,tblptrl
 12760  01872E  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 12761  018732                     	if	0	;tblptru may be non-zero
 12762  018732                     	endif
 12763  018732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12764  018732  0E00               	movlw	low (__mediumconst shr (0+16))
 12765  018734  6EF8               	movwf	tblptru,c
 12766  018736                     	endif
 12767  018736  C11B  FFD9         	movff	strcpy@cp,fsr2l
 12768  01873A  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 12769  01873E  0008               	tblrd		*
 12770  018740  CFF5 FFDF          	movff	tablat,indf2
 12771  018744  50DF               	movf	indf2,w,c
 12772  018746  B4D8               	btfsc	status,2,c
 12773  018748  0012               	return	
 12774  01874A  D7EA               	goto	l2248
 12775  01874C                     __end_of_strcpy:
 12776                           	opt stack 0
 12777                           tblptru	equ	0xFF8
 12778                           tblptrh	equ	0xFF7
 12779                           tblptrl	equ	0xFF6
 12780                           tablat	equ	0xFF5
 12781                           intcon	equ	0xFF2
 12782                           indf0	equ	0xFEF
 12783                           postinc0	equ	0xFEE
 12784                           fsr0h	equ	0xFEA
 12785                           fsr0l	equ	0xFE9
 12786                           wreg	equ	0xFE8
 12787                           indf1	equ	0xFE7
 12788                           postdec1	equ	0xFE5
 12789                           fsr1h	equ	0xFE2
 12790                           fsr1l	equ	0xFE1
 12791                           indf2	equ	0xFDF
 12792                           postinc2	equ	0xFDE
 12793                           fsr2h	equ	0xFDA
 12794                           fsr2l	equ	0xFD9
 12795                           status	equ	0xFD8
 12796                           
 12797 ;; *************** function _strcmp *****************
 12798 ;; Defined at:
 12799 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 12800 ;; Parameters:    Size  Location     Type
 12801 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 12802 ;;		 -> line(64), 
 12803 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 12804 ;;		 -> STR_124(5), STR_122(11), STR_120(17), STR_118(14), 
 12805 ;;		 -> STR_116(16), STR_107(13), STR_103(17), STR_100(14), 
 12806 ;;		 -> STR_98(12), STR_96(16), STR_94(15), STR_92(15), 
 12807 ;;		 -> STR_90(21), STR_88(21), STR_86(26), STR_84(14), 
 12808 ;;		 -> STR_82(13), STR_80(18), STR_78(15), STR_76(16), 
 12809 ;;		 -> STR_73(17), STR_71(16), STR_60(11), STR_57(10), 
 12810 ;;		 -> STR_55(13), STR_53(11), STR_50(4), STR_49(6), 
 12811 ;;		 -> STR_47(16), STR_44(6), STR_41(6), 
 12812 ;; Auto vars:     Size  Location     Type
 12813 ;;  r               1   28[BANK1 ] char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  2   23[BANK1 ] int 
 12816 ;; Registers used:
 12817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12823 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12824 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12825 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12826 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12827 ;;Total ram usage:        6 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:   13
 12830 ;; This function calls:
 12831 ;;		Nothing
 12832 ;; This function is called by:
 12833 ;;		_ringBufferLUT
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text16
 12838  0182C0                     __ptext16:
 12839                           	opt stack 0
 12840  0182C0                     _strcmp:
 12841                           	opt stack 15
 12842                           
 12843                           ;incstack = 0
 12844  0182C0  D005               	goto	l2239
 12845  0182C2  0101               	movlb	1	; () banked
 12846  0182C4  4B17               	infsnz	strcmp@s1& (0+255),f,b
 12847  0182C6  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 12848  0182C8  4B19               	infsnz	strcmp@s2& (0+255),f,b
 12849  0182CA  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 12850  0182CC                     l2239:
 12851                           
 12852                           ; BSR set to: 1
 12853  0182CC  C117  FFD9         	movff	strcmp@s1,fsr2l
 12854  0182D0  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 12855  0182D4  50DF               	movf	indf2,w,c
 12856  0182D6  0101               	movlb	1	; () banked
 12857  0182D8  6F1B               	movwf	??_strcmp& (0+255),b
 12858  0182DA  C119  FFF6         	movff	strcmp@s2,tblptrl
 12859  0182DE  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 12860  0182E2                     	if	0	;tblptru may be non-zero
 12861  0182E2                     	endif
 12862  0182E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12863  0182E2  0E00               	movlw	low (__mediumconst shr (0+16))
 12864  0182E4  6EF8               	movwf	tblptru,c
 12865  0182E6                     	endif
 12866  0182E6  0008               	tblrd		*
 12867  0182E8  50F5               	movf	tablat,w,c
 12868  0182EA  0800               	sublw	0
 12869  0182EC  251B               	addwf	??_strcmp& (0+255),w,b
 12870  0182EE  6F1C               	movwf	strcmp@r& (0+255),b
 12871  0182F0  511C               	movf	strcmp@r& (0+255),w,b
 12872  0182F2  A4D8               	btfss	status,2,c
 12873  0182F4  D007               	goto	u25100
 12874                           
 12875                           ; BSR set to: 1
 12876  0182F6  C117  FFD9         	movff	strcmp@s1,fsr2l
 12877  0182FA  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 12878  0182FE  50DF               	movf	indf2,w,c
 12879  018300  A4D8               	btfss	status,2,c
 12880  018302  D7DF               	goto	l2240
 12881  018304                     u25100:
 12882                           
 12883                           ; BSR set to: 1
 12884                           
 12885                           ; BSR set to: 1
 12886                           
 12887                           ; BSR set to: 1
 12888  018304  511C               	movf	strcmp@r& (0+255),w,b
 12889  018306  6F17               	movwf	?_strcmp& (0+255),b
 12890  018308  6B18               	clrf	(?_strcmp+1)& (0+255),b
 12891  01830A  BF17               	btfsc	?_strcmp& (0+255),7,b
 12892  01830C  0718               	decf	(?_strcmp+1)& (0+255),f,b
 12893  01830E  0012               	return	
 12894  018310                     __end_of_strcmp:
 12895                           	opt stack 0
 12896                           tblptru	equ	0xFF8
 12897                           tblptrh	equ	0xFF7
 12898                           tblptrl	equ	0xFF6
 12899                           tablat	equ	0xFF5
 12900                           intcon	equ	0xFF2
 12901                           indf0	equ	0xFEF
 12902                           postinc0	equ	0xFEE
 12903                           fsr0h	equ	0xFEA
 12904                           fsr0l	equ	0xFE9
 12905                           wreg	equ	0xFE8
 12906                           indf1	equ	0xFE7
 12907                           postdec1	equ	0xFE5
 12908                           fsr1h	equ	0xFE2
 12909                           fsr1l	equ	0xFE1
 12910                           indf2	equ	0xFDF
 12911                           postinc2	equ	0xFDE
 12912                           fsr2h	equ	0xFDA
 12913                           fsr2l	equ	0xFD9
 12914                           status	equ	0xFD8
 12915                           
 12916 ;; *************** function _readDoubleFromEEPROM *****************
 12917 ;; Defined at:
 12918 ;;		line 22 in file "double_to_EEPROM.c"
 12919 ;; Parameters:    Size  Location     Type
 12920 ;;  starting_add    2   25[BANK1 ] unsigned int 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;  byte_index      2   33[BANK1 ] int 
 12923 ;;  output_data     4   29[BANK1 ] struct .
 12924 ;; Return value:  Size  Location     Type
 12925 ;;                  4   25[BANK1 ] struct .
 12926 ;; Registers used:
 12927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12928 ;; Tracked objects:
 12929 ;;		On entry : 0/0
 12930 ;;		On exit  : 0/0
 12931 ;;		Unchanged: 0/0
 12932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12933 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12934 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12936 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12937 ;;Total ram usage:       10 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:   14
 12940 ;; This function calls:
 12941 ;;		_DATAEE_ReadByte
 12942 ;; This function is called by:
 12943 ;;		_main
 12944 ;;		_ringBufferLUT
 12945 ;; This function uses a non-reentrant model
 12946 ;;
 12947                           
 12948                           	psect	text17
 12949  0181CC                     __ptext17:
 12950                           	opt stack 0
 12951  0181CC                     _readDoubleFromEEPROM:
 12952                           	opt stack 14
 12953                           
 12954                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 12955                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 12956                           
 12957                           ; BSR set to: 1
 12958                           ;incstack = 0
 12959  0181CC  0E00               	movlw	0
 12960  0181CE  0101               	movlb	1	; () banked
 12961  0181D0  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 12962  0181D2  0E00               	movlw	0
 12963  0181D4  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 12964                           
 12965                           ; BSR set to: 1
 12966  0181D6  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 12967  0181D8  E119               	bnz	l1360
 12968  0181DA  D014               	goto	L1
 12969  0181DC                     
 12970                           ; BSR set to: 1
 12971                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 12972                           
 12973                           ; BSR set to: 1
 12974  0181DC  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 12975  0181DE  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 12976  0181E0  6ED9               	movwf	fsr2l,c
 12977  0181E2  0E01               	movlw	high readDoubleFromEEPROM@output_data
 12978  0181E4  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 12979  0181E6  6EDA               	movwf	fsr2h,c
 12980  0181E8  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 12981  0181EA  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 12982  0181EC  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 12983  0181EE  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 12984  0181F0  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 12985  0181F2  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 12986  0181F4  EC62  F0C5         	call	_DATAEE_ReadByte	;wreg free
 12987  0181F8  6EDF               	movwf	indf2,c
 12988  0181FA  0101               	movlb	1	; () banked
 12989  0181FC  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 12990  0181FE  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 12991                           
 12992                           ; BSR set to: 1
 12993  018200  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 12994  018202  E104               	bnz	u25080
 12995  018204                     L1:
 12996  018204  0E04               	movlw	4
 12997  018206  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 12998  018208  A0D8               	btfss	status,0,c
 12999  01820A  D7E8               	goto	l1359
 13000  01820C                     u25080:
 13001  01820C                     l1360:
 13002                           
 13003                           ; BSR set to: 1
 13004                           ;double_to_EEPROM.c: 32: }
 13005                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 13006  01820C  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 13007  018210  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 13008  018214  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 13009  018218  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 13010                           
 13011                           ; BSR set to: 1
 13012  01821C  0012               	return		;funcret
 13013  01821E                     __end_of_readDoubleFromEEPROM:
 13014                           	opt stack 0
 13015                           tblptru	equ	0xFF8
 13016                           tblptrh	equ	0xFF7
 13017                           tblptrl	equ	0xFF6
 13018                           tablat	equ	0xFF5
 13019                           intcon	equ	0xFF2
 13020                           indf0	equ	0xFEF
 13021                           postinc0	equ	0xFEE
 13022                           fsr0h	equ	0xFEA
 13023                           fsr0l	equ	0xFE9
 13024                           wreg	equ	0xFE8
 13025                           indf1	equ	0xFE7
 13026                           postdec1	equ	0xFE5
 13027                           fsr1h	equ	0xFE2
 13028                           fsr1l	equ	0xFE1
 13029                           indf2	equ	0xFDF
 13030                           postinc2	equ	0xFDE
 13031                           fsr2h	equ	0xFDA
 13032                           fsr2l	equ	0xFD9
 13033                           status	equ	0xFD8
 13034                           
 13035 ;; *************** function _DATAEE_ReadByte *****************
 13036 ;; Defined at:
 13037 ;;		line 190 in file "mcc_generated_files/memory.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;  bAdd            2   23[BANK1 ] unsigned int 
 13040 ;; Auto vars:     Size  Location     Type
 13041 ;;		None
 13042 ;; Return value:  Size  Location     Type
 13043 ;;                  1    wreg      unsigned char 
 13044 ;; Registers used:
 13045 ;;		wreg, status,2, status,0
 13046 ;; Tracked objects:
 13047 ;;		On entry : 0/0
 13048 ;;		On exit  : 0/0
 13049 ;;		Unchanged: 0/0
 13050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13051 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13054 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13055 ;;Total ram usage:        2 bytes
 13056 ;; Hardware stack levels used:    1
 13057 ;; Hardware stack levels required when called:   13
 13058 ;; This function calls:
 13059 ;;		Nothing
 13060 ;; This function is called by:
 13061 ;;		_readDoubleFromEEPROM
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           	psect	text18
 13066  018AC4                     __ptext18:
 13067                           	opt stack 0
 13068  018AC4                     _DATAEE_ReadByte:
 13069                           	opt stack 14
 13070                           
 13071                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 13072                           
 13073                           ; BSR set to: 1
 13074                           ;incstack = 0
 13075  018AC4  0101               	movlb	1	; () banked
 13076  018AC6  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 13077  018AC8  0B03               	andlw	3
 13078  018ACA  6E75               	movwf	3957,c	;volatile
 13079                           
 13080                           ; BSR set to: 1
 13081                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 13082  018ACC  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 13083                           
 13084                           ; BSR set to: 1
 13085                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 13086  018AD0  0E3F               	movlw	-193
 13087  018AD2  1677               	andwf	3959,f,c	;volsfr
 13088                           
 13089                           ; BSR set to: 1
 13090                           ;memory.c: 195: NVMCON1bits.RD = 1;
 13091  018AD4  8077               	bsf	3959,0,c	;volsfr
 13092                           
 13093                           ; BSR set to: 1
 13094                           ;memory.c: 196: __nop();
 13095  018AD6  F000               	nop	
 13096                           
 13097                           ;memory.c: 197: __nop();
 13098  018AD8  F000               	nop	
 13099                           
 13100                           ;memory.c: 199: return (NVMDAT);
 13101  018ADA  5076               	movf	3958,w,c	;volatile
 13102  018ADC  0012               	return	
 13103  018ADE                     __end_of_DATAEE_ReadByte:
 13104                           	opt stack 0
 13105                           tblptru	equ	0xFF8
 13106                           tblptrh	equ	0xFF7
 13107                           tblptrl	equ	0xFF6
 13108                           tablat	equ	0xFF5
 13109                           intcon	equ	0xFF2
 13110                           indf0	equ	0xFEF
 13111                           postinc0	equ	0xFEE
 13112                           fsr0h	equ	0xFEA
 13113                           fsr0l	equ	0xFE9
 13114                           wreg	equ	0xFE8
 13115                           indf1	equ	0xFE7
 13116                           postdec1	equ	0xFE5
 13117                           fsr1h	equ	0xFE2
 13118                           fsr1l	equ	0xFE1
 13119                           indf2	equ	0xFDF
 13120                           postinc2	equ	0xFDE
 13121                           fsr2h	equ	0xFDA
 13122                           fsr2l	equ	0xFD9
 13123                           status	equ	0xFD8
 13124                           
 13125 ;; *************** function _getUserID *****************
 13126 ;; Defined at:
 13127 ;;		line 65 in file "device_IDs.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;  inputUserID     1    wreg     unsigned char 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;  inputUserID     1   36[BANK1 ] unsigned char 
 13132 ;;  initialOffse    4   37[BANK1 ] unsigned long 
 13133 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 13134 ;; Return value:  Size  Location     Type
 13135 ;;                  2   34[BANK1 ] unsigned int 
 13136 ;; Registers used:
 13137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13138 ;; Tracked objects:
 13139 ;;		On entry : 0/0
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13143 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13144 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13146 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13147 ;;Total ram usage:        8 bytes
 13148 ;; Hardware stack levels used:    1
 13149 ;; Hardware stack levels required when called:   15
 13150 ;; This function calls:
 13151 ;;		_FLASH_ReadWord
 13152 ;; This function is called by:
 13153 ;;		_ringBufferLUT
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           	psect	text19
 13158  018562                     __ptext19:
 13159                           	opt stack 0
 13160  018562                     _getUserID:
 13161                           	opt stack 13
 13162                           
 13163                           ;incstack = 0
 13164                           ;getUserID@inputUserID stored from wreg
 13165  018562  0101               	movlb	1	; () banked
 13166  018564  6F24               	movwf	getUserID@inputUserID& (0+255),b
 13167                           
 13168                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 13169  018566  0E00               	movlw	0
 13170  018568  0101               	movlb	1	; () banked
 13171  01856A  6F25               	movwf	getUserID@initialOffset& (0+255),b
 13172  01856C  0E00               	movlw	0
 13173  01856E  6F26               	movwf	(getUserID@initialOffset+1)& (0+255),b
 13174  018570  0E20               	movlw	32
 13175  018572  6F27               	movwf	(getUserID@initialOffset+2)& (0+255),b
 13176  018574  0E00               	movlw	0
 13177  018576  6F28               	movwf	(getUserID@initialOffset+3)& (0+255),b
 13178                           
 13179                           ; BSR set to: 1
 13180                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 13181  018578  5124               	movf	getUserID@inputUserID& (0+255),w,b
 13182  01857A  0D02               	mullw	2
 13183  01857C  CFF3 F129          	movff	prodl,getUserID@IDOffset
 13184                           
 13185                           ; BSR set to: 1
 13186                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 13187  018580  5129               	movf	getUserID@IDOffset& (0+255),w,b
 13188  018582  2525               	addwf	getUserID@initialOffset& (0+255),w,b
 13189  018584  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13190  018586  0E00               	movlw	0
 13191  018588  2126               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 13192  01858A  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13193  01858C  0E00               	movlw	0
 13194  01858E  2127               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 13195  018590  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13196  018592  0E00               	movlw	0
 13197  018594  2128               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 13198  018596  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13199  018598  ECD3  F0C2         	call	_FLASH_ReadWord	;wreg free
 13200  01859C  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 13201  0185A0  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 13202  0185A4  0012               	return	
 13203  0185A6                     __end_of_getUserID:
 13204                           	opt stack 0
 13205                           tblptru	equ	0xFF8
 13206                           tblptrh	equ	0xFF7
 13207                           tblptrl	equ	0xFF6
 13208                           tablat	equ	0xFF5
 13209                           prodl	equ	0xFF3
 13210                           intcon	equ	0xFF2
 13211                           indf0	equ	0xFEF
 13212                           postinc0	equ	0xFEE
 13213                           fsr0h	equ	0xFEA
 13214                           fsr0l	equ	0xFE9
 13215                           wreg	equ	0xFE8
 13216                           indf1	equ	0xFE7
 13217                           postdec1	equ	0xFE5
 13218                           fsr1h	equ	0xFE2
 13219                           fsr1l	equ	0xFE1
 13220                           indf2	equ	0xFDF
 13221                           postinc2	equ	0xFDE
 13222                           fsr2h	equ	0xFDA
 13223                           fsr2l	equ	0xFD9
 13224                           status	equ	0xFD8
 13225                           
 13226 ;; *************** function _getMinorRevisionID *****************
 13227 ;; Defined at:
 13228 ;;		line 23 in file "device_IDs.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;		None
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  1    wreg      unsigned char 
 13235 ;; Registers used:
 13236 ;;		wreg, status,2, status,0, cstack
 13237 ;; Tracked objects:
 13238 ;;		On entry : 0/0
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13243 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13245 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13246 ;;Total ram usage:        2 bytes
 13247 ;; Hardware stack levels used:    1
 13248 ;; Hardware stack levels required when called:   15
 13249 ;; This function calls:
 13250 ;;		_FLASH_ReadWord
 13251 ;; This function is called by:
 13252 ;;		_ringBufferLUT
 13253 ;; This function uses a non-reentrant model
 13254 ;;
 13255                           
 13256                           	psect	text20
 13257  01897A                     __ptext20:
 13258                           	opt stack 0
 13259  01897A                     _getMinorRevisionID:
 13260                           	opt stack 13
 13261                           
 13262                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 13263                           
 13264                           ;incstack = 0
 13265  01897A  0EFC               	movlw	252
 13266  01897C  0101               	movlb	1	; () banked
 13267  01897E  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13268  018980  0EFF               	movlw	255
 13269  018982  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13270  018984  0E3F               	movlw	63
 13271  018986  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13272  018988  0E00               	movlw	0
 13273  01898A  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13274  01898C  ECD3  F0C2         	call	_FLASH_ReadWord	;wreg free
 13275  018990  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 13276  018994  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 13277                           
 13278                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 13279  018998  0101               	movlb	1	; () banked
 13280  01899A  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 13281  01899C  0B1F               	andlw	31
 13282  01899E  0012               	return	
 13283  0189A0                     __end_of_getMinorRevisionID:
 13284                           	opt stack 0
 13285                           tblptru	equ	0xFF8
 13286                           tblptrh	equ	0xFF7
 13287                           tblptrl	equ	0xFF6
 13288                           tablat	equ	0xFF5
 13289                           prodl	equ	0xFF3
 13290                           intcon	equ	0xFF2
 13291                           indf0	equ	0xFEF
 13292                           postinc0	equ	0xFEE
 13293                           fsr0h	equ	0xFEA
 13294                           fsr0l	equ	0xFE9
 13295                           wreg	equ	0xFE8
 13296                           indf1	equ	0xFE7
 13297                           postdec1	equ	0xFE5
 13298                           fsr1h	equ	0xFE2
 13299                           fsr1l	equ	0xFE1
 13300                           indf2	equ	0xFDF
 13301                           postinc2	equ	0xFDE
 13302                           fsr2h	equ	0xFDA
 13303                           fsr2l	equ	0xFD9
 13304                           status	equ	0xFD8
 13305                           
 13306 ;; *************** function _getMajorRevisionID *****************
 13307 ;; Defined at:
 13308 ;;		line 12 in file "device_IDs.c"
 13309 ;; Parameters:    Size  Location     Type
 13310 ;;		None
 13311 ;; Auto vars:     Size  Location     Type
 13312 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 13313 ;; Return value:  Size  Location     Type
 13314 ;;                  1    wreg      unsigned char 
 13315 ;; Registers used:
 13316 ;;		wreg, status,2, status,0, cstack
 13317 ;; Tracked objects:
 13318 ;;		On entry : 0/0
 13319 ;;		On exit  : 0/0
 13320 ;;		Unchanged: 0/0
 13321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13323 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13324 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13325 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13326 ;;Total ram usage:        5 bytes
 13327 ;; Hardware stack levels used:    1
 13328 ;; Hardware stack levels required when called:   15
 13329 ;; This function calls:
 13330 ;;		_FLASH_ReadWord
 13331 ;; This function is called by:
 13332 ;;		_ringBufferLUT
 13333 ;; This function uses a non-reentrant model
 13334 ;;
 13335                           
 13336                           	psect	text21
 13337  018666                     __ptext21:
 13338                           	opt stack 0
 13339  018666                     _getMajorRevisionID:
 13340                           	opt stack 13
 13341                           
 13342                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 13343                           
 13344                           ; BSR set to: 1
 13345                           ;incstack = 0
 13346  018666  0EFC               	movlw	252
 13347  018668  0101               	movlb	1	; () banked
 13348  01866A  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13349  01866C  0EFF               	movlw	255
 13350  01866E  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13351  018670  0E3F               	movlw	63
 13352  018672  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13353  018674  0E00               	movlw	0
 13354  018676  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13355  018678  ECD3  F0C2         	call	_FLASH_ReadWord	;wreg free
 13356  01867C  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 13357  018680  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 13358                           
 13359                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 13360  018684  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 13361  018688  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 13362  01868C  0E06               	movlw	6
 13363  01868E  0101               	movlb	1	; () banked
 13364  018690  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 13365  018692                     u25135:
 13366  018692  90D8               	bcf	status,0,c
 13367  018694  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 13368  018696  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 13369  018698  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 13370  01869A  D7FB               	goto	u25135
 13371  01869C  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 13372  01869E  0B1F               	andlw	31
 13373  0186A0  0012               	return	
 13374  0186A2                     __end_of_getMajorRevisionID:
 13375                           	opt stack 0
 13376                           tblptru	equ	0xFF8
 13377                           tblptrh	equ	0xFF7
 13378                           tblptrl	equ	0xFF6
 13379                           tablat	equ	0xFF5
 13380                           prodl	equ	0xFF3
 13381                           intcon	equ	0xFF2
 13382                           indf0	equ	0xFEF
 13383                           postinc0	equ	0xFEE
 13384                           fsr0h	equ	0xFEA
 13385                           fsr0l	equ	0xFE9
 13386                           wreg	equ	0xFE8
 13387                           indf1	equ	0xFE7
 13388                           postdec1	equ	0xFE5
 13389                           fsr1h	equ	0xFE2
 13390                           fsr1l	equ	0xFE1
 13391                           indf2	equ	0xFDF
 13392                           postinc2	equ	0xFDE
 13393                           fsr2h	equ	0xFDA
 13394                           fsr2l	equ	0xFD9
 13395                           status	equ	0xFD8
 13396                           
 13397 ;; *************** function _getDeviceIDString *****************
 13398 ;; Defined at:
 13399 ;;		line 34 in file "device_IDs.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 13404 ;;		 -> STR_133(10), STR_132(13), STR_131(12), 
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  2   36[BANK1 ] PTR inline unsigned char
 13407 ;; Registers used:
 13408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13409 ;; Tracked objects:
 13410 ;;		On entry : 0/0
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13414 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13415 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13416 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13417 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13418 ;;Total ram usage:       10 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; Hardware stack levels required when called:   13
 13421 ;; This function calls:
 13422 ;;		Nothing
 13423 ;; This function is called by:
 13424 ;;		_ringBufferLUT
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text22
 13429  0180B4                     __ptext22:
 13430                           	opt stack 0
 13431  0180B4                     _getDeviceIDString:
 13432                           	opt stack 15
 13433                           
 13434                           ;device_IDs.c: 37: const char *strings[] = {
 13435                           ;device_IDs.c: 39: "PIC18F67K40",
 13436                           ;device_IDs.c: 40: "PIC18LF67K40",
 13437                           ;device_IDs.c: 41: "Undefined"
 13438                           ;device_IDs.c: 43: };
 13439                           
 13440                           ; BSR set to: 1
 13441                           ;incstack = 0
 13442  0180B4  EE22  F0C2         	lfsr	2,getDeviceIDString@F17550
 13443  0180B8  EE11  F028         	lfsr	1,getDeviceIDString@strings
 13444  0180BC  0E05               	movlw	5
 13445  0180BE                     u25121:
 13446  0180BE  CFDB FFE3          	movff	plusw2,plusw1
 13447  0180C2  06E8               	decf	wreg,f,c
 13448  0180C4  E2FC               	bc	u25121
 13449                           
 13450                           ;device_IDs.c: 47: switch (inputDevID) {
 13451  0180C6  D00F               	goto	l1313
 13452  0180C8                     
 13453                           ;device_IDs.c: 50: return strings[0];
 13454  0180C8  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 13455  0180CC  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 13456                           
 13457                           ;device_IDs.c: 51: break;
 13458  0180D0  0012               	return	
 13459  0180D2                     
 13460                           ;device_IDs.c: 54: return strings[1];
 13461  0180D2  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 13462  0180D6  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 13463                           
 13464                           ;device_IDs.c: 55: break;
 13465  0180DA  0012               	return	
 13466  0180DC                     
 13467                           ;device_IDs.c: 58: return strings[2];
 13468  0180DC  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 13469  0180E0  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 13470                           
 13471                           ;device_IDs.c: 61: }
 13472                           
 13473                           ;device_IDs.c: 59: break;
 13474  0180E4  0012               	return	
 13475  0180E6                     l1313:
 13476  0180E6  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 13477  0180EA  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 13478                           
 13479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13480                           ; Switch size 1, requested type "space"
 13481                           ; Number of cases is 2, Range of values is 106 to 107
 13482                           ; switch strategies available:
 13483                           ; Name         Instructions Cycles
 13484                           ; simple_byte            7     4 (average)
 13485                           ;	Chosen strategy is simple_byte
 13486  0180EE  0101               	movlb	1	; () banked
 13487  0180F0  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 13488  0180F2  0A6A               	xorlw	106	; case 106
 13489  0180F4  B4D8               	btfsc	status,2,c
 13490  0180F6  D004               	goto	l19478
 13491  0180F8  0A01               	xorlw	1	; case 107
 13492  0180FA  B4D8               	btfsc	status,2,c
 13493  0180FC  D006               	goto	l19480
 13494  0180FE  D7EE               	goto	l1318
 13495  018100                     l19478:
 13496                           
 13497                           ; BSR set to: 1
 13498                           ; Switch size 1, requested type "space"
 13499                           ; Number of cases is 1, Range of values is 192 to 192
 13500                           ; switch strategies available:
 13501                           ; Name         Instructions Cycles
 13502                           ; simple_byte            4     3 (average)
 13503                           ;	Chosen strategy is simple_byte
 13504  018100  5126               	movf	??_getDeviceIDString& (0+255),w,b
 13505  018102  0AC0               	xorlw	192	; case 192
 13506  018104  B4D8               	btfsc	status,2,c
 13507  018106  D7E0               	goto	l1314
 13508  018108  D7E9               	goto	l1318
 13509  01810A                     l19480:
 13510                           
 13511                           ; BSR set to: 1
 13512                           ; Switch size 1, requested type "space"
 13513                           ; Number of cases is 1, Range of values is 32 to 32
 13514                           ; switch strategies available:
 13515                           ; Name         Instructions Cycles
 13516                           ; simple_byte            4     3 (average)
 13517                           ;	Chosen strategy is simple_byte
 13518  01810A  5126               	movf	??_getDeviceIDString& (0+255),w,b
 13519  01810C  0A20               	xorlw	32	; case 32
 13520  01810E  B4D8               	btfsc	status,2,c
 13521  018110  D7E0               	goto	l1317
 13522  018112  D7E4               	goto	l1318
 13523  018114                     __end_of_getDeviceIDString:
 13524                           	opt stack 0
 13525                           tblptru	equ	0xFF8
 13526                           tblptrh	equ	0xFF7
 13527                           tblptrl	equ	0xFF6
 13528                           tablat	equ	0xFF5
 13529                           prodl	equ	0xFF3
 13530                           intcon	equ	0xFF2
 13531                           indf0	equ	0xFEF
 13532                           postinc0	equ	0xFEE
 13533                           fsr0h	equ	0xFEA
 13534                           fsr0l	equ	0xFE9
 13535                           wreg	equ	0xFE8
 13536                           indf1	equ	0xFE7
 13537                           postdec1	equ	0xFE5
 13538                           plusw1	equ	0xFE3
 13539                           fsr1h	equ	0xFE2
 13540                           fsr1l	equ	0xFE1
 13541                           indf2	equ	0xFDF
 13542                           postinc2	equ	0xFDE
 13543                           plusw2	equ	0xFDB
 13544                           fsr2h	equ	0xFDA
 13545                           fsr2l	equ	0xFD9
 13546                           status	equ	0xFD8
 13547                           
 13548 ;; *************** function _getDeviceID *****************
 13549 ;; Defined at:
 13550 ;;		line 4 in file "device_IDs.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;		None
 13553 ;; Auto vars:     Size  Location     Type
 13554 ;;		None
 13555 ;; Return value:  Size  Location     Type
 13556 ;;                  2   34[BANK1 ] unsigned int 
 13557 ;; Registers used:
 13558 ;;		wreg, status,2, status,0, cstack
 13559 ;; Tracked objects:
 13560 ;;		On entry : 0/0
 13561 ;;		On exit  : 0/0
 13562 ;;		Unchanged: 0/0
 13563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13564 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13567 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13568 ;;Total ram usage:        2 bytes
 13569 ;; Hardware stack levels used:    1
 13570 ;; Hardware stack levels required when called:   15
 13571 ;; This function calls:
 13572 ;;		_FLASH_ReadWord
 13573 ;; This function is called by:
 13574 ;;		_ringBufferLUT
 13575 ;; This function uses a non-reentrant model
 13576 ;;
 13577                           
 13578                           	psect	text23
 13579  018A32                     __ptext23:
 13580                           	opt stack 0
 13581  018A32                     _getDeviceID:
 13582                           	opt stack 13
 13583                           
 13584                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 13585                           
 13586                           ;incstack = 0
 13587  018A32  0EFE               	movlw	254
 13588  018A34  0101               	movlb	1	; () banked
 13589  018A36  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 13590  018A38  0EFF               	movlw	255
 13591  018A3A  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 13592  018A3C  0E3F               	movlw	63
 13593  018A3E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 13594  018A40  0E00               	movlw	0
 13595  018A42  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 13596  018A44  ECD3  F0C2         	call	_FLASH_ReadWord	;wreg free
 13597  018A48  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 13598  018A4C  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 13599  018A50  0012               	return	
 13600  018A52                     __end_of_getDeviceID:
 13601                           	opt stack 0
 13602                           tblptru	equ	0xFF8
 13603                           tblptrh	equ	0xFF7
 13604                           tblptrl	equ	0xFF6
 13605                           tablat	equ	0xFF5
 13606                           prodl	equ	0xFF3
 13607                           intcon	equ	0xFF2
 13608                           indf0	equ	0xFEF
 13609                           postinc0	equ	0xFEE
 13610                           fsr0h	equ	0xFEA
 13611                           fsr0l	equ	0xFE9
 13612                           wreg	equ	0xFE8
 13613                           indf1	equ	0xFE7
 13614                           postdec1	equ	0xFE5
 13615                           plusw1	equ	0xFE3
 13616                           fsr1h	equ	0xFE2
 13617                           fsr1l	equ	0xFE1
 13618                           indf2	equ	0xFDF
 13619                           postinc2	equ	0xFDE
 13620                           plusw2	equ	0xFDB
 13621                           fsr2h	equ	0xFDA
 13622                           fsr2l	equ	0xFD9
 13623                           status	equ	0xFD8
 13624                           
 13625 ;; *************** function _FLASH_ReadWord *****************
 13626 ;; Defined at:
 13627 ;;		line 71 in file "mcc_generated_files/memory.c"
 13628 ;; Parameters:    Size  Location     Type
 13629 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 13630 ;; Auto vars:     Size  Location     Type
 13631 ;;		None
 13632 ;; Return value:  Size  Location     Type
 13633 ;;                  2   27[BANK1 ] unsigned int 
 13634 ;; Registers used:
 13635 ;;		wreg, status,2, status,0, cstack
 13636 ;; Tracked objects:
 13637 ;;		On entry : 0/0
 13638 ;;		On exit  : 0/0
 13639 ;;		Unchanged: 0/0
 13640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13641 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13643 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13644 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13645 ;;Total ram usage:        7 bytes
 13646 ;; Hardware stack levels used:    1
 13647 ;; Hardware stack levels required when called:   14
 13648 ;; This function calls:
 13649 ;;		_FLASH_ReadByte
 13650 ;; This function is called by:
 13651 ;;		_getDeviceID
 13652 ;;		_getMajorRevisionID
 13653 ;;		_getMinorRevisionID
 13654 ;;		_getUserID
 13655 ;; This function uses a non-reentrant model
 13656 ;;
 13657                           
 13658                           	psect	text24
 13659  0185A6                     __ptext24:
 13660                           	opt stack 0
 13661  0185A6                     _FLASH_ReadWord:
 13662                           	opt stack 13
 13663                           
 13664                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 13665                           
 13666                           ;incstack = 0
 13667  0185A6  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 13668  0185AA  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 13669  0185AE  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 13670  0185B2  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 13671  0185B6  EC6F  F0C5         	call	_FLASH_ReadByte	;wreg free
 13672  0185BA  0101               	movlb	1	; () banked
 13673  0185BC  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 13674  0185BE  0E01               	movlw	1
 13675  0185C0  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 13676  0185C2  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 13677  0185C4  0E00               	movlw	0
 13678  0185C6  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 13679  0185C8  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 13680  0185CA  0E00               	movlw	0
 13681  0185CC  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 13682  0185CE  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 13683  0185D0  0E00               	movlw	0
 13684  0185D2  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 13685  0185D4  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 13686  0185D6  EC6F  F0C5         	call	_FLASH_ReadByte	;wreg free
 13687  0185DA  0101               	movlb	1	; () banked
 13688  0185DC  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 13689  0185DE  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 13690  0185E0  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 13691  0185E2  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 13692  0185E6  0012               	return	
 13693  0185E8                     __end_of_FLASH_ReadWord:
 13694                           	opt stack 0
 13695                           tblptru	equ	0xFF8
 13696                           tblptrh	equ	0xFF7
 13697                           tblptrl	equ	0xFF6
 13698                           tablat	equ	0xFF5
 13699                           prodl	equ	0xFF3
 13700                           intcon	equ	0xFF2
 13701                           indf0	equ	0xFEF
 13702                           postinc0	equ	0xFEE
 13703                           fsr0h	equ	0xFEA
 13704                           fsr0l	equ	0xFE9
 13705                           wreg	equ	0xFE8
 13706                           indf1	equ	0xFE7
 13707                           postdec1	equ	0xFE5
 13708                           plusw1	equ	0xFE3
 13709                           fsr1h	equ	0xFE2
 13710                           fsr1l	equ	0xFE1
 13711                           indf2	equ	0xFDF
 13712                           postinc2	equ	0xFDE
 13713                           plusw2	equ	0xFDB
 13714                           fsr2h	equ	0xFDA
 13715                           fsr2l	equ	0xFD9
 13716                           status	equ	0xFD8
 13717                           
 13718 ;; *************** function _FLASH_ReadByte *****************
 13719 ;; Defined at:
 13720 ;;		line 59 in file "mcc_generated_files/memory.c"
 13721 ;; Parameters:    Size  Location     Type
 13722 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;		None
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      unsigned char 
 13727 ;; Registers used:
 13728 ;;		wreg, status,2
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13734 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13737 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13738 ;;Total ram usage:        4 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:   13
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_FLASH_ReadWord
 13745 ;;		_FLASH_WriteByte
 13746 ;; This function uses a non-reentrant model
 13747 ;;
 13748                           
 13749                           	psect	text25
 13750  018ADE                     __ptext25:
 13751                           	opt stack 0
 13752  018ADE                     _FLASH_ReadByte:
 13753                           	opt stack 13
 13754                           
 13755                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 13756                           
 13757                           ; BSR set to: 1
 13758                           ;incstack = 0
 13759  018ADE  5077               	movf	3959,w,c	;volsfr
 13760  018AE0  0B3F               	andlw	-193
 13761  018AE2  0980               	iorlw	128
 13762  018AE4  6E77               	movwf	3959,c	;volsfr
 13763                           
 13764                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 13765  018AE6  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 13766                           
 13767                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 13768  018AEA  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 13769                           
 13770                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 13771  018AEE  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 13772  018AF2  0008               	tblrd		*	;# 
 13773                           
 13774                           ;memory.c: 68: return (TABLAT);
 13775  018AF4  50F5               	movf	tablat,w,c	;volatile
 13776  018AF6  0012               	return	
 13777  018AF8                     __end_of_FLASH_ReadByte:
 13778                           	opt stack 0
 13779                           tblptru	equ	0xFF8
 13780                           tblptrh	equ	0xFF7
 13781                           tblptrl	equ	0xFF6
 13782                           tablat	equ	0xFF5
 13783                           prodl	equ	0xFF3
 13784                           intcon	equ	0xFF2
 13785                           indf0	equ	0xFEF
 13786                           postinc0	equ	0xFEE
 13787                           fsr0h	equ	0xFEA
 13788                           fsr0l	equ	0xFE9
 13789                           wreg	equ	0xFE8
 13790                           indf1	equ	0xFE7
 13791                           postdec1	equ	0xFE5
 13792                           plusw1	equ	0xFE3
 13793                           fsr1h	equ	0xFE2
 13794                           fsr1l	equ	0xFE1
 13795                           indf2	equ	0xFDF
 13796                           postinc2	equ	0xFDE
 13797                           plusw2	equ	0xFDB
 13798                           fsr2h	equ	0xFDA
 13799                           fsr2l	equ	0xFD9
 13800                           status	equ	0xFD8
 13801                           
 13802 ;; *************** function _getCauseOfResetString *****************
 13803 ;; Defined at:
 13804 ;;		line 81 in file "cause_of_reset.c"
 13805 ;; Parameters:    Size  Location     Type
 13806 ;;  r               1    wreg     enum E17455
 13807 ;; Auto vars:     Size  Location     Type
 13808 ;;  r               1   25[BANK1 ] enum E17455
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  2   23[BANK1 ] PTR inline unsigned char
 13811 ;; Registers used:
 13812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13818 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13819 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13821 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13822 ;;Total ram usage:        3 bytes
 13823 ;; Hardware stack levels used:    1
 13824 ;; Hardware stack levels required when called:   13
 13825 ;; This function calls:
 13826 ;;		Nothing
 13827 ;; This function is called by:
 13828 ;;		_ringBufferLUT
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832                           	psect	text26
 13833  01881C                     __ptext26:
 13834                           	opt stack 0
 13835  01881C                     _getCauseOfResetString:
 13836                           	opt stack 15
 13837                           
 13838                           ;incstack = 0
 13839                           ;getCauseOfResetString@r stored from wreg
 13840  01881C  0101               	movlb	1	; () banked
 13841  01881E  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 13842                           
 13843                           ;cause_of_reset.c: 84: static char *strings[] = {
 13844                           ;cause_of_reset.c: 85: "Undefined Reset",
 13845                           ;cause_of_reset.c: 86: "Power On Reset",
 13846                           ;cause_of_reset.c: 87: "Brown Out Reset",
 13847                           ;cause_of_reset.c: 88: "Master Clear Reset",
 13848                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 13849                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 13850                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 13851                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 13852                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 13853                           ;cause_of_reset.c: 94: };
 13854  018820  0E09               	movlw	9
 13855  018822  0101               	movlb	1	; () banked
 13856  018824  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 13857  018826  D00D               	goto	l1345
 13858                           
 13859                           ; BSR set to: 1
 13860                           ;cause_of_reset.c: 99: return strings[r];
 13861  018828  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 13862  01882A  0D02               	mullw	2
 13863  01882C  0EB0               	movlw	low getCauseOfResetString@strings
 13864  01882E  24F3               	addwf	prodl,w,c
 13865  018830  6ED9               	movwf	fsr2l,c
 13866  018832  0E02               	movlw	high getCauseOfResetString@strings
 13867  018834  20F4               	addwfc	prodh,w,c
 13868  018836  6EDA               	movwf	fsr2h,c
 13869  018838  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 13870  01883C  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 13871                           
 13872                           ; BSR set to: 1
 13873                           ;cause_of_reset.c: 101: }
 13874                           
 13875                           ; BSR set to: 1
 13876  018840  0012               	return	
 13877  018842                     l1345:
 13878                           
 13879                           ; BSR set to: 1
 13880                           ;cause_of_reset.c: 103: else {
 13881                           ;cause_of_reset.c: 105: return "Undefined Reset";
 13882                           
 13883                           ; BSR set to: 1
 13884  018842  0E04               	movlw	low STR_134
 13885  018844  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 13886  018846  0EFE               	movlw	high STR_134
 13887  018848  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 13888                           
 13889                           ; BSR set to: 1
 13890  01884A  0012               	return	
 13891  01884C                     __end_of_getCauseOfResetString:
 13892                           	opt stack 0
 13893                           tblptru	equ	0xFF8
 13894                           tblptrh	equ	0xFF7
 13895                           tblptrl	equ	0xFF6
 13896                           tablat	equ	0xFF5
 13897                           prodh	equ	0xFF4
 13898                           prodl	equ	0xFF3
 13899                           intcon	equ	0xFF2
 13900                           indf0	equ	0xFEF
 13901                           postinc0	equ	0xFEE
 13902                           fsr0h	equ	0xFEA
 13903                           fsr0l	equ	0xFE9
 13904                           wreg	equ	0xFE8
 13905                           indf1	equ	0xFE7
 13906                           postdec1	equ	0xFE5
 13907                           plusw1	equ	0xFE3
 13908                           fsr1h	equ	0xFE2
 13909                           fsr1l	equ	0xFE1
 13910                           indf2	equ	0xFDF
 13911                           postinc2	equ	0xFDE
 13912                           postdec2	equ	0xFDD
 13913                           plusw2	equ	0xFDB
 13914                           fsr2h	equ	0xFDA
 13915                           fsr2l	equ	0xFD9
 13916                           status	equ	0xFD8
 13917                           
 13918 ;; *************** function _atoi *****************
 13919 ;; Defined at:
 13920 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 13921 ;; Parameters:    Size  Location     Type
 13922 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 13923 ;;		 -> ringBufferLUT@arg_buff(3), 
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;  a               2   34[BANK1 ] int 
 13926 ;;  sign            1   33[BANK1 ] unsigned char 
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  2   29[BANK1 ] int 
 13929 ;; Registers used:
 13930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13936 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13937 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13938 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13939 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13940 ;;Total ram usage:        7 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; Hardware stack levels required when called:   14
 13943 ;; This function calls:
 13944 ;;		___wmul
 13945 ;;		_isdigit
 13946 ;; This function is called by:
 13947 ;;		_ringBufferLUT
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951                           	psect	text27
 13952  01761C                     __ptext27:
 13953                           	opt stack 0
 13954  01761C                     _atoi:
 13955                           	opt stack 14
 13956                           
 13957                           ; BSR set to: 1
 13958                           ;incstack = 0
 13959  01761C  D003               	goto	l1741
 13960  01761E  0101               	movlb	1	; () banked
 13961  017620  4B1D               	infsnz	atoi@s& (0+255),f,b
 13962  017622  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 13963  017624                     l1741:
 13964                           
 13965                           ; BSR set to: 1
 13966  017624  C11D  FFD9         	movff	atoi@s,fsr2l
 13967  017628  C11E  FFDA         	movff	atoi@s+1,fsr2h
 13968  01762C  0E20               	movlw	32
 13969  01762E  18DE               	xorwf	postinc2,w,c
 13970  017630  B4D8               	btfsc	status,2,c
 13971  017632  D7F5               	goto	l1742
 13972  017634  C11D  FFD9         	movff	atoi@s,fsr2l
 13973  017638  C11E  FFDA         	movff	atoi@s+1,fsr2h
 13974  01763C  0E09               	movlw	9
 13975  01763E  18DE               	xorwf	postinc2,w,c
 13976  017640  B4D8               	btfsc	status,2,c
 13977  017642  D7ED               	goto	l1742
 13978  017644  0E00               	movlw	0
 13979  017646  0101               	movlb	1	; () banked
 13980  017648  6F23               	movwf	(atoi@a+1)& (0+255),b
 13981  01764A  0E00               	movlw	0
 13982  01764C  6F22               	movwf	atoi@a& (0+255),b
 13983  01764E  0E00               	movlw	0
 13984  017650  6F21               	movwf	atoi@sign& (0+255),b
 13985                           
 13986                           ; BSR set to: 1
 13987  017652  C11D  FFD9         	movff	atoi@s,fsr2l
 13988  017656  C11E  FFDA         	movff	atoi@s+1,fsr2h
 13989  01765A  0E2D               	movlw	45
 13990  01765C  18DE               	xorwf	postinc2,w,c
 13991  01765E  A4D8               	btfss	status,2,c
 13992  017660  D002               	goto	l1744
 13993                           
 13994                           ; BSR set to: 1
 13995  017662  2B21               	incf	atoi@sign& (0+255),f,b
 13996  017664  D026               	goto	l18852
 13997  017666                     l1744:
 13998                           
 13999                           ; BSR set to: 1
 14000                           
 14001                           ; BSR set to: 1
 14002  017666  C11D  FFD9         	movff	atoi@s,fsr2l
 14003  01766A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14004  01766E  0E2B               	movlw	43
 14005  017670  18DE               	xorwf	postinc2,w,c
 14006  017672  A4D8               	btfss	status,2,c
 14007  017674  D020               	goto	l1747
 14008  017676  D01D               	goto	l18852
 14009  017678                     
 14010                           ; BSR set to: 1
 14011  017678  C122  F117         	movff	atoi@a,___wmul@multiplier
 14012  01767C  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 14013  017680  0E00               	movlw	0
 14014  017682  0101               	movlb	1	; () banked
 14015  017684  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14016  017686  0E0A               	movlw	10
 14017  017688  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14018  01768A  EC81  F0C4         	call	___wmul	;wreg free
 14019  01768E  C11D  FFD9         	movff	atoi@s,fsr2l
 14020  017692  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14021  017696  50DF               	movf	indf2,w,c
 14022  017698  0101               	movlb	1	; () banked
 14023  01769A  6F1F               	movwf	??_atoi& (0+255),b
 14024  01769C  6B20               	clrf	(??_atoi+1)& (0+255),b
 14025  01769E  5117               	movf	?___wmul& (0+255),w,b
 14026  0176A0  271F               	addwf	??_atoi& (0+255),f,b
 14027  0176A2  5118               	movf	(?___wmul+1)& (0+255),w,b
 14028  0176A4  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 14029  0176A6  0ED0               	movlw	208
 14030  0176A8  251F               	addwf	??_atoi& (0+255),w,b
 14031  0176AA  6F22               	movwf	atoi@a& (0+255),b
 14032  0176AC  0EFF               	movlw	255
 14033  0176AE  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 14034  0176B0  6F23               	movwf	(atoi@a+1)& (0+255),b
 14035  0176B2                     l18852:
 14036                           
 14037                           ; BSR set to: 1
 14038  0176B2  4B1D               	infsnz	atoi@s& (0+255),f,b
 14039  0176B4  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 14040  0176B6                     l1747:
 14041                           
 14042                           ; BSR set to: 1
 14043                           
 14044                           ; BSR set to: 1
 14045  0176B6  C11D  FFD9         	movff	atoi@s,fsr2l
 14046  0176BA  C11E  FFDA         	movff	atoi@s+1,fsr2h
 14047  0176BE  50DF               	movf	indf2,w,c
 14048  0176C0  EC08  F0C5         	call	_isdigit
 14049  0176C4  B0D8               	btfsc	status,0,c
 14050  0176C6  D7D8               	goto	l1748
 14051  0176C8  0101               	movlb	1	; () banked
 14052  0176CA  5121               	movf	atoi@sign& (0+255),w,b
 14053  0176CC  B4D8               	btfsc	status,2,c
 14054  0176CE  D00D               	goto	l1750
 14055                           
 14056                           ; BSR set to: 1
 14057  0176D0  C122  F11F         	movff	atoi@a,??_atoi
 14058  0176D4  C123  F120         	movff	atoi@a+1,??_atoi+1
 14059  0176D8  1F1F               	comf	??_atoi& (0+255),f,b
 14060  0176DA  1F20               	comf	(??_atoi+1)& (0+255),f,b
 14061  0176DC  4B1F               	infsnz	??_atoi& (0+255),f,b
 14062  0176DE  2B20               	incf	(??_atoi+1)& (0+255),f,b
 14063  0176E0  C11F  F11D         	movff	??_atoi,?_atoi
 14064  0176E4  C120  F11E         	movff	??_atoi+1,?_atoi+1
 14065  0176E8  0012               	return	
 14066  0176EA                     l1750:
 14067                           
 14068                           ; BSR set to: 1
 14069  0176EA  C122  F11D         	movff	atoi@a,?_atoi
 14070  0176EE  C123  F11E         	movff	atoi@a+1,?_atoi+1
 14071                           
 14072                           ; BSR set to: 1
 14073  0176F2  0012               	return		;funcret
 14074  0176F4                     __end_of_atoi:
 14075                           	opt stack 0
 14076                           tblptru	equ	0xFF8
 14077                           tblptrh	equ	0xFF7
 14078                           tblptrl	equ	0xFF6
 14079                           tablat	equ	0xFF5
 14080                           prodh	equ	0xFF4
 14081                           prodl	equ	0xFF3
 14082                           intcon	equ	0xFF2
 14083                           indf0	equ	0xFEF
 14084                           postinc0	equ	0xFEE
 14085                           fsr0h	equ	0xFEA
 14086                           fsr0l	equ	0xFE9
 14087                           wreg	equ	0xFE8
 14088                           indf1	equ	0xFE7
 14089                           postdec1	equ	0xFE5
 14090                           plusw1	equ	0xFE3
 14091                           fsr1h	equ	0xFE2
 14092                           fsr1l	equ	0xFE1
 14093                           indf2	equ	0xFDF
 14094                           postinc2	equ	0xFDE
 14095                           postdec2	equ	0xFDD
 14096                           plusw2	equ	0xFDB
 14097                           fsr2h	equ	0xFDA
 14098                           fsr2l	equ	0xFD9
 14099                           status	equ	0xFD8
 14100                           
 14101 ;; *************** function ___fldiv *****************
 14102 ;; Defined at:
 14103 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 14104 ;; Parameters:    Size  Location     Type
 14105 ;;  b               4   61[BANK1 ] int 
 14106 ;;  a               4   65[BANK1 ] int 
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;  grs             4   80[BANK1 ] unsigned long 
 14109 ;;  rem             4   74[BANK1 ] unsigned long 
 14110 ;;  new_exp         2   78[BANK1 ] int 
 14111 ;;  aexp            1   85[BANK1 ] unsigned char 
 14112 ;;  bexp            1   84[BANK1 ] unsigned char 
 14113 ;;  sign            1   73[BANK1 ] unsigned char 
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  4   61[BANK1 ] unsigned char 
 14116 ;; Registers used:
 14117 ;;		wreg, status,2, status,0
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/0
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14123 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14124 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14125 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14126 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14127 ;;Total ram usage:       25 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; Hardware stack levels required when called:   13
 14130 ;; This function calls:
 14131 ;;		Nothing
 14132 ;; This function is called by:
 14133 ;;		_ringBufferLUT
 14134 ;; This function uses a non-reentrant model
 14135 ;;
 14136                           
 14137                           	psect	text28
 14138  015948                     __ptext28:
 14139                           	opt stack 0
 14140  015948                     ___fldiv:
 14141                           	opt stack 15
 14142                           
 14143                           ; BSR set to: 1
 14144                           ;incstack = 0
 14145  015948  0101               	movlb	1	; () banked
 14146  01594A  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 14147  01594C  0B80               	andlw	128
 14148  01594E  6F49               	movwf	___fldiv@sign& (0+255),b
 14149  015950  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 14150  015952  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 14151  015954  6F54               	movwf	___fldiv@bexp& (0+255),b
 14152                           
 14153                           ; BSR set to: 1
 14154  015956  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 14155                           
 14156                           ; BSR set to: 1
 14157  015958  8154               	bsf	___fldiv@bexp& (0+255),0,b
 14158                           
 14159                           ; BSR set to: 1
 14160                           
 14161                           ; BSR set to: 1
 14162  01595A  5154               	movf	___fldiv@bexp& (0+255),w,b
 14163  01595C  B4D8               	btfsc	status,2,c
 14164  01595E  D00D               	goto	l2148
 14165                           
 14166                           ; BSR set to: 1
 14167  015960  2954               	incf	___fldiv@bexp& (0+255),w,b
 14168  015962  A4D8               	btfss	status,2,c
 14169  015964  D008               	goto	l2149
 14170                           
 14171                           ; BSR set to: 1
 14172  015966  0E00               	movlw	0
 14173  015968  6F3D               	movwf	___fldiv@b& (0+255),b
 14174  01596A  0E00               	movlw	0
 14175  01596C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14176  01596E  0E00               	movlw	0
 14177  015970  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14178  015972  0E00               	movlw	0
 14179  015974  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14180  015976                     l2149:
 14181                           
 14182                           ; BSR set to: 1
 14183                           
 14184                           ; BSR set to: 1
 14185  015976  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 14186  015978  D006               	goto	L2
 14187  01597A                     l2148:
 14188                           
 14189                           ; BSR set to: 1
 14190                           
 14191                           ; BSR set to: 1
 14192  01597A  0E00               	movlw	0
 14193  01597C  6F3D               	movwf	___fldiv@b& (0+255),b
 14194  01597E  0E00               	movlw	0
 14195  015980  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14196  015982  0E00               	movlw	0
 14197  015984  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14198  015986                     L2:
 14199  015986  0E00               	movlw	0
 14200  015988  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14201                           
 14202                           ; BSR set to: 1
 14203                           
 14204                           ; BSR set to: 1
 14205  01598A  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 14206  01598C  0B80               	andlw	128
 14207  01598E  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 14208                           
 14209                           ; BSR set to: 1
 14210  015990  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 14211  015992  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 14212  015994  6F55               	movwf	___fldiv@aexp& (0+255),b
 14213                           
 14214                           ; BSR set to: 1
 14215  015996  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 14216                           
 14217                           ; BSR set to: 1
 14218  015998  8155               	bsf	___fldiv@aexp& (0+255),0,b
 14219                           
 14220                           ; BSR set to: 1
 14221                           
 14222                           ; BSR set to: 1
 14223  01599A  5155               	movf	___fldiv@aexp& (0+255),w,b
 14224  01599C  B4D8               	btfsc	status,2,c
 14225  01599E  D00D               	goto	l2152
 14226                           
 14227                           ; BSR set to: 1
 14228  0159A0  2955               	incf	___fldiv@aexp& (0+255),w,b
 14229  0159A2  A4D8               	btfss	status,2,c
 14230  0159A4  D008               	goto	l2153
 14231                           
 14232                           ; BSR set to: 1
 14233  0159A6  0E00               	movlw	0
 14234  0159A8  6F41               	movwf	___fldiv@a& (0+255),b
 14235  0159AA  0E00               	movlw	0
 14236  0159AC  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 14237  0159AE  0E00               	movlw	0
 14238  0159B0  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 14239  0159B2  0E00               	movlw	0
 14240  0159B4  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 14241  0159B6                     l2153:
 14242                           
 14243                           ; BSR set to: 1
 14244                           
 14245                           ; BSR set to: 1
 14246  0159B6  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 14247  0159B8  D006               	goto	L3
 14248  0159BA                     l2152:
 14249                           
 14250                           ; BSR set to: 1
 14251                           
 14252                           ; BSR set to: 1
 14253  0159BA  0E00               	movlw	0
 14254  0159BC  6F41               	movwf	___fldiv@a& (0+255),b
 14255  0159BE  0E00               	movlw	0
 14256  0159C0  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 14257  0159C2  0E00               	movlw	0
 14258  0159C4  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 14259  0159C6                     L3:
 14260  0159C6  0E00               	movlw	0
 14261  0159C8  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 14262                           
 14263                           ; BSR set to: 1
 14264                           
 14265                           ; BSR set to: 1
 14266  0159CA  5141               	movf	___fldiv@a& (0+255),w,b
 14267  0159CC  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 14268  0159CE  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 14269  0159D0  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 14270  0159D2  A4D8               	btfss	status,2,c
 14271  0159D4  D015               	goto	l2155
 14272                           
 14273                           ; BSR set to: 1
 14274  0159D6  0E00               	movlw	0
 14275  0159D8  6F3D               	movwf	___fldiv@b& (0+255),b
 14276  0159DA  0E00               	movlw	0
 14277  0159DC  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14278  0159DE  0E00               	movlw	0
 14279  0159E0  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14280  0159E2  0E00               	movlw	0
 14281  0159E4  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14282                           
 14283                           ; BSR set to: 1
 14284  0159E6  0E80               	movlw	128
 14285  0159E8  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 14286  0159EA  0E7F               	movlw	127
 14287  0159EC  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14288                           
 14289                           ; BSR set to: 1
 14290  0159EE  C13D  F13D         	movff	___fldiv@b,?___fldiv
 14291  0159F2  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 14292  0159F6  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 14293  0159FA  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 14294                           
 14295                           ; BSR set to: 1
 14296  0159FE  0012               	return	
 14297  015A00                     l2155:
 14298                           
 14299                           ; BSR set to: 1
 14300                           
 14301                           ; BSR set to: 1
 14302  015A00  5154               	movf	___fldiv@bexp& (0+255),w,b
 14303  015A02  A4D8               	btfss	status,2,c
 14304  015A04  D011               	goto	l2157
 14305                           
 14306                           ; BSR set to: 1
 14307  015A06  0E00               	movlw	0
 14308  015A08  6F3D               	movwf	___fldiv@b& (0+255),b
 14309  015A0A  0E00               	movlw	0
 14310  015A0C  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14311  015A0E  0E00               	movlw	0
 14312  015A10  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14313  015A12  0E00               	movlw	0
 14314  015A14  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14315                           
 14316                           ; BSR set to: 1
 14317  015A16  C13D  F13D         	movff	___fldiv@b,?___fldiv
 14318  015A1A  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 14319  015A1E  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 14320  015A22  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 14321                           
 14322                           ; BSR set to: 1
 14323  015A26  0012               	return	
 14324  015A28                     l2157:
 14325                           
 14326                           ; BSR set to: 1
 14327                           
 14328                           ; BSR set to: 1
 14329  015A28  5155               	movf	___fldiv@aexp& (0+255),w,b
 14330  015A2A  6F45               	movwf	??___fldiv& (0+255),b
 14331  015A2C  6B46               	clrf	(??___fldiv+1)& (0+255),b
 14332  015A2E  1F45               	comf	??___fldiv& (0+255),f,b
 14333  015A30  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 14334  015A32  4B45               	infsnz	??___fldiv& (0+255),f,b
 14335  015A34  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 14336  015A36  5154               	movf	___fldiv@bexp& (0+255),w,b
 14337  015A38  6F47               	movwf	(??___fldiv+2)& (0+255),b
 14338  015A3A  6B48               	clrf	(??___fldiv+3)& (0+255),b
 14339  015A3C  5145               	movf	??___fldiv& (0+255),w,b
 14340  015A3E  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 14341  015A40  5146               	movf	(??___fldiv+1)& (0+255),w,b
 14342  015A42  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 14343  015A44  0E7F               	movlw	127
 14344  015A46  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 14345  015A48  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 14346  015A4A  0E00               	movlw	0
 14347  015A4C  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 14348  015A4E  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14349                           
 14350                           ; BSR set to: 1
 14351  015A50  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 14352  015A54  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 14353  015A58  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 14354  015A5C  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 14355                           
 14356                           ; BSR set to: 1
 14357  015A60  0E00               	movlw	0
 14358  015A62  6F3D               	movwf	___fldiv@b& (0+255),b
 14359  015A64  0E00               	movlw	0
 14360  015A66  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14361  015A68  0E00               	movlw	0
 14362  015A6A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14363  015A6C  0E00               	movlw	0
 14364  015A6E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14365                           
 14366                           ; BSR set to: 1
 14367  015A70  0E00               	movlw	0
 14368  015A72  6F50               	movwf	___fldiv@grs& (0+255),b
 14369  015A74  0E00               	movlw	0
 14370  015A76  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 14371  015A78  0E00               	movlw	0
 14372  015A7A  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 14373  015A7C  0E00               	movlw	0
 14374  015A7E  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 14375                           
 14376                           ; BSR set to: 1
 14377  015A80  0E00               	movlw	0
 14378  015A82  6F55               	movwf	___fldiv@aexp& (0+255),b
 14379  015A84  D028               	goto	l2158
 14380  015A86                     
 14381                           ; BSR set to: 1
 14382                           
 14383                           ; BSR set to: 1
 14384  015A86  5155               	movf	___fldiv@aexp& (0+255),w,b
 14385  015A88  B4D8               	btfsc	status,2,c
 14386  015A8A  D011               	goto	l2160
 14387                           
 14388                           ; BSR set to: 1
 14389  015A8C  90D8               	bcf	status,0,c
 14390  015A8E  374A               	rlcf	___fldiv@rem& (0+255),f,b
 14391  015A90  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14392  015A92  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14393  015A94  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14394  015A96  90D8               	bcf	status,0,c
 14395  015A98  373D               	rlcf	___fldiv@b& (0+255),f,b
 14396  015A9A  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14397  015A9C  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14398  015A9E  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14399                           
 14400                           ; BSR set to: 1
 14401  015AA0  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 14402                           
 14403                           ; BSR set to: 1
 14404  015AA2  813D               	bsf	___fldiv@b& (0+255),0,b
 14405                           
 14406                           ; BSR set to: 1
 14407  015AA4  90D8               	bcf	status,0,c
 14408  015AA6  3750               	rlcf	___fldiv@grs& (0+255),f,b
 14409  015AA8  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14410  015AAA  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14411  015AAC  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14412  015AAE                     l2160:
 14413                           
 14414                           ; BSR set to: 1
 14415                           
 14416                           ; BSR set to: 1
 14417  015AAE  5141               	movf	___fldiv@a& (0+255),w,b
 14418  015AB0  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 14419  015AB2  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 14420  015AB4  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14421  015AB6  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 14422  015AB8  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14423  015ABA  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 14424  015ABC  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14425  015ABE  A0D8               	btfss	status,0,c
 14426  015AC0  D009               	goto	l2162
 14427                           
 14428                           ; BSR set to: 1
 14429  015AC2  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14430                           
 14431                           ; BSR set to: 1
 14432  015AC4  5141               	movf	___fldiv@a& (0+255),w,b
 14433  015AC6  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 14434  015AC8  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 14435  015ACA  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14436  015ACC  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 14437  015ACE  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14438  015AD0  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 14439  015AD2  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14440  015AD4                     l2162:
 14441                           
 14442                           ; BSR set to: 1
 14443                           
 14444                           ; BSR set to: 1
 14445  015AD4  2B55               	incf	___fldiv@aexp& (0+255),f,b
 14446  015AD6                     l2158:
 14447                           
 14448                           ; BSR set to: 1
 14449  015AD6  0E19               	movlw	25
 14450  015AD8  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 14451  015ADA  D7D5               	goto	l2159
 14452                           
 14453                           ; BSR set to: 1
 14454                           
 14455                           ; BSR set to: 1
 14456  015ADC  514A               	movf	___fldiv@rem& (0+255),w,b
 14457  015ADE  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14458  015AE0  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14459  015AE2  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14460  015AE4  B4D8               	btfsc	status,2,c
 14461  015AE6  D011               	goto	l2165
 14462                           
 14463                           ; BSR set to: 1
 14464  015AE8  8150               	bsf	___fldiv@grs& (0+255),0,b
 14465                           
 14466                           ; BSR set to: 1
 14467  015AEA  D00F               	goto	l2165
 14468  015AEC                     
 14469                           ; BSR set to: 1
 14470                           
 14471                           ; BSR set to: 1
 14472  015AEC  90D8               	bcf	status,0,c
 14473  015AEE  373D               	rlcf	___fldiv@b& (0+255),f,b
 14474  015AF0  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14475  015AF2  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14476  015AF4  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14477                           
 14478                           ; BSR set to: 1
 14479  015AF6  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 14480                           
 14481                           ; BSR set to: 1
 14482  015AF8  813D               	bsf	___fldiv@b& (0+255),0,b
 14483                           
 14484                           ; BSR set to: 1
 14485  015AFA  90D8               	bcf	status,0,c
 14486  015AFC  3750               	rlcf	___fldiv@grs& (0+255),f,b
 14487  015AFE  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14488  015B00  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14489  015B02  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14490  015B04  074E               	decf	___fldiv@new_exp& (0+255),f,b
 14491  015B06  A0D8               	btfss	status,0,c
 14492  015B08  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14493  015B0A                     l2165:
 14494                           
 14495                           ; BSR set to: 1
 14496                           
 14497                           ; BSR set to: 1
 14498  015B0A  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 14499  015B0C  D7EF               	goto	l2166
 14500                           
 14501                           ; BSR set to: 1
 14502                           
 14503                           ; BSR set to: 1
 14504  015B0E  0E00               	movlw	0
 14505  015B10  6F55               	movwf	___fldiv@aexp& (0+255),b
 14506                           
 14507                           ; BSR set to: 1
 14508  015B12  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14509  015B14  D016               	goto	l2172
 14510                           
 14511                           ; BSR set to: 1
 14512  015B16  0EFF               	movlw	255
 14513  015B18  1550               	andwf	___fldiv@grs& (0+255),w,b
 14514  015B1A  6F45               	movwf	??___fldiv& (0+255),b
 14515  015B1C  0EFF               	movlw	255
 14516  015B1E  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14517  015B20  6F46               	movwf	(??___fldiv+1)& (0+255),b
 14518  015B22  0EFF               	movlw	255
 14519  015B24  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14520  015B26  6F47               	movwf	(??___fldiv+2)& (0+255),b
 14521  015B28  0E7F               	movlw	127
 14522  015B2A  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14523  015B2C  6F48               	movwf	(??___fldiv+3)& (0+255),b
 14524  015B2E  5145               	movf	??___fldiv& (0+255),w,b
 14525  015B30  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 14526  015B32  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 14527  015B34  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 14528  015B36  A4D8               	btfss	status,2,c
 14529  015B38  D002               	goto	u25410
 14530                           
 14531                           ; BSR set to: 1
 14532                           
 14533                           ; BSR set to: 1
 14534  015B3A  A13D               	btfss	___fldiv@b& (0+255),0,b
 14535  015B3C  D002               	goto	l2172
 14536  015B3E                     u25410:
 14537                           
 14538                           ; BSR set to: 1
 14539  015B3E  0E01               	movlw	1
 14540  015B40  6F55               	movwf	___fldiv@aexp& (0+255),b
 14541  015B42                     l2172:
 14542                           
 14543                           ; BSR set to: 1
 14544                           
 14545                           ; BSR set to: 1
 14546                           
 14547                           ; BSR set to: 1
 14548  015B42  5155               	movf	___fldiv@aexp& (0+255),w,b
 14549  015B44  B4D8               	btfsc	status,2,c
 14550  015B46  D01F               	goto	l2174
 14551                           
 14552                           ; BSR set to: 1
 14553  015B48  0E01               	movlw	1
 14554  015B4A  273D               	addwf	___fldiv@b& (0+255),f,b
 14555  015B4C  0E00               	movlw	0
 14556  015B4E  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14557  015B50  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14558  015B52  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14559                           
 14560                           ; BSR set to: 1
 14561  015B54  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 14562  015B56  D017               	goto	l2174
 14563                           
 14564                           ; BSR set to: 1
 14565  015B58  C13D  F145         	movff	___fldiv@b,??___fldiv
 14566  015B5C  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 14567  015B60  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 14568  015B64  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 14569  015B68  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 14570  015B6A  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 14571  015B6C  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 14572  015B6E  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 14573  015B70  3345               	rrcf	??___fldiv& (0+255),f,b
 14574  015B72  C145  F13D         	movff	??___fldiv,___fldiv@b
 14575  015B76  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 14576  015B7A  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 14577  015B7E  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 14578                           
 14579                           ; BSR set to: 1
 14580  015B82  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 14581  015B84  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14582  015B86                     l2174:
 14583                           
 14584                           ; BSR set to: 1
 14585                           
 14586                           ; BSR set to: 1
 14587                           
 14588                           ; BSR set to: 1
 14589  015B86  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14590  015B88  D010               	goto	l2175
 14591  015B8A  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14592  015B8C  E103               	bnz	u25440
 14593  015B8E  294E               	incf	___fldiv@new_exp& (0+255),w,b
 14594  015B90  A0D8               	btfss	status,0,c
 14595  015B92  D00B               	goto	l2175
 14596  015B94                     u25440:
 14597                           
 14598                           ; BSR set to: 1
 14599  015B94  0E00               	movlw	0
 14600  015B96  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14601  015B98  694E               	setf	___fldiv@new_exp& (0+255),b
 14602  015B9A  0E00               	movlw	0
 14603  015B9C  6F3D               	movwf	___fldiv@b& (0+255),b
 14604  015B9E  0E00               	movlw	0
 14605  015BA0  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14606  015BA2  0E00               	movlw	0
 14607  015BA4  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14608  015BA6  0E00               	movlw	0
 14609  015BA8  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14610  015BAA                     l2175:
 14611                           
 14612                           ; BSR set to: 1
 14613                           
 14614                           ; BSR set to: 1
 14615  015BAA  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14616  015BAC  D005               	goto	u25450
 14617  015BAE  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14618  015BB0  E111               	bnz	l18980
 14619  015BB2  054E               	decf	___fldiv@new_exp& (0+255),w,b
 14620  015BB4  B0D8               	btfsc	status,0,c
 14621  015BB6  D00E               	goto	l2176
 14622  015BB8                     u25450:
 14623                           
 14624                           ; BSR set to: 1
 14625  015BB8  0E00               	movlw	0
 14626  015BBA  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14627  015BBC  0E00               	movlw	0
 14628  015BBE  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 14629  015BC0  0E00               	movlw	0
 14630  015BC2  6F3D               	movwf	___fldiv@b& (0+255),b
 14631  015BC4  0E00               	movlw	0
 14632  015BC6  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 14633  015BC8  0E00               	movlw	0
 14634  015BCA  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 14635  015BCC  0E00               	movlw	0
 14636  015BCE  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14637  015BD0  0E00               	movlw	0
 14638  015BD2  6F49               	movwf	___fldiv@sign& (0+255),b
 14639  015BD4                     l2176:
 14640  015BD4                     l18980:
 14641                           
 14642                           ; BSR set to: 1
 14643  015BD4  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 14644                           
 14645                           ; BSR set to: 1
 14646  015BD8  A154               	btfss	___fldiv@bexp& (0+255),0,b
 14647  015BDA  D002               	goto	l2177
 14648                           
 14649                           ; BSR set to: 1
 14650  015BDC  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 14651  015BDE  D001               	goto	l2178
 14652  015BE0                     l2177:
 14653                           
 14654                           ; BSR set to: 1
 14655                           
 14656                           ; BSR set to: 1
 14657  015BE0  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 14658  015BE2                     l2178:
 14659                           
 14660                           ; BSR set to: 1
 14661                           
 14662                           ; BSR set to: 1
 14663  015BE2  90D8               	bcf	status,0,c
 14664  015BE4  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 14665  015BE6  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 14666                           
 14667                           ; BSR set to: 1
 14668  015BE8  5149               	movf	___fldiv@sign& (0+255),w,b
 14669  015BEA  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14670                           
 14671                           ; BSR set to: 1
 14672  015BEC  C13D  F13D         	movff	___fldiv@b,?___fldiv
 14673  015BF0  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 14674  015BF4  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 14675  015BF8  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 14676  015BFC  0012               	return	
 14677  015BFE                     __end_of___fldiv:
 14678                           	opt stack 0
 14679                           tblptru	equ	0xFF8
 14680                           tblptrh	equ	0xFF7
 14681                           tblptrl	equ	0xFF6
 14682                           tablat	equ	0xFF5
 14683                           prodh	equ	0xFF4
 14684                           prodl	equ	0xFF3
 14685                           intcon	equ	0xFF2
 14686                           indf0	equ	0xFEF
 14687                           postinc0	equ	0xFEE
 14688                           fsr0h	equ	0xFEA
 14689                           fsr0l	equ	0xFE9
 14690                           wreg	equ	0xFE8
 14691                           indf1	equ	0xFE7
 14692                           postdec1	equ	0xFE5
 14693                           plusw1	equ	0xFE3
 14694                           fsr1h	equ	0xFE2
 14695                           fsr1l	equ	0xFE1
 14696                           indf2	equ	0xFDF
 14697                           postinc2	equ	0xFDE
 14698                           postdec2	equ	0xFDD
 14699                           plusw2	equ	0xFDB
 14700                           fsr2h	equ	0xFDA
 14701                           fsr2l	equ	0xFD9
 14702                           status	equ	0xFD8
 14703                           
 14704 ;; *************** function _TMR7_StopTimer *****************
 14705 ;; Defined at:
 14706 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;		None
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;		None
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  1    wreg      void 
 14713 ;; Registers used:
 14714 ;;		None
 14715 ;; Tracked objects:
 14716 ;;		On entry : 0/0
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14724 ;;Total ram usage:        0 bytes
 14725 ;; Hardware stack levels used:    1
 14726 ;; Hardware stack levels required when called:   13
 14727 ;; This function calls:
 14728 ;;		Nothing
 14729 ;; This function is called by:
 14730 ;;		_ringBufferLUT
 14731 ;; This function uses a non-reentrant model
 14732 ;;
 14733                           
 14734                           	psect	text29
 14735  018C3C                     __ptext29:
 14736                           	opt stack 0
 14737  018C3C                     _TMR7_StopTimer:
 14738                           	opt stack 15
 14739                           
 14740                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 14741                           
 14742                           ; BSR set to: 1
 14743                           ;incstack = 0
 14744  018C3C  010F               	movlb	15	; () banked
 14745  018C3E  9130               	bcf	48,0,b	;volatile
 14746                           
 14747                           ; BSR set to: 15
 14748  018C40  0012               	return		;funcret
 14749  018C42                     __end_of_TMR7_StopTimer:
 14750                           	opt stack 0
 14751                           tblptru	equ	0xFF8
 14752                           tblptrh	equ	0xFF7
 14753                           tblptrl	equ	0xFF6
 14754                           tablat	equ	0xFF5
 14755                           prodh	equ	0xFF4
 14756                           prodl	equ	0xFF3
 14757                           intcon	equ	0xFF2
 14758                           indf0	equ	0xFEF
 14759                           postinc0	equ	0xFEE
 14760                           fsr0h	equ	0xFEA
 14761                           fsr0l	equ	0xFE9
 14762                           wreg	equ	0xFE8
 14763                           indf1	equ	0xFE7
 14764                           postdec1	equ	0xFE5
 14765                           plusw1	equ	0xFE3
 14766                           fsr1h	equ	0xFE2
 14767                           fsr1l	equ	0xFE1
 14768                           indf2	equ	0xFDF
 14769                           postinc2	equ	0xFDE
 14770                           postdec2	equ	0xFDD
 14771                           plusw2	equ	0xFDB
 14772                           fsr2h	equ	0xFDA
 14773                           fsr2l	equ	0xFD9
 14774                           status	equ	0xFD8
 14775                           
 14776 ;; *************** function _EUSART2_Read *****************
 14777 ;; Defined at:
 14778 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 14779 ;; Parameters:    Size  Location     Type
 14780 ;;		None
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;  readValue       1   23[BANK1 ] unsigned char 
 14783 ;; Return value:  Size  Location     Type
 14784 ;;                  1    wreg      unsigned char 
 14785 ;; Registers used:
 14786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14787 ;; Tracked objects:
 14788 ;;		On entry : 0/0
 14789 ;;		On exit  : 0/0
 14790 ;;		Unchanged: 0/0
 14791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14793 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14795 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14796 ;;Total ram usage:        1 bytes
 14797 ;; Hardware stack levels used:    1
 14798 ;; Hardware stack levels required when called:   13
 14799 ;; This function calls:
 14800 ;;		Nothing
 14801 ;; This function is called by:
 14802 ;;		_terminal_ringBufferPull
 14803 ;;		_getch
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807                           	psect	text30
 14808  01848A                     __ptext30:
 14809                           	opt stack 0
 14810  01848A                     _EUSART2_Read:
 14811                           	opt stack 16
 14812                           
 14813                           ;eusart2.c: 139: uint8_t readValue = 0;
 14814                           
 14815                           ; BSR set to: 15
 14816                           ;incstack = 0
 14817  01848A  0E00               	movlw	0
 14818  01848C  0101               	movlb	1	; () banked
 14819  01848E  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 14820                           
 14821                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 14822  018490  D002               	goto	l381
 14823  018492                     l382:
 14824                           
 14825                           ; BSR set to: 1
 14826  018492  0004               	clrwdt		;# 
 14827                           
 14828                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 14829  018494  827E               	bsf	3966,1,c	;volatile
 14830  018496                     l381:
 14831  018496  0101               	movlb	1	; () banked
 14832  018498  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 14833  01849A  B4D8               	btfsc	status,2,c
 14834  01849C  D7FA               	goto	l382
 14835                           
 14836                           ; BSR set to: 1
 14837                           ;eusart2.c: 145: }
 14838                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 14839  01849E  927E               	bcf	3966,1,c	;volatile
 14840                           
 14841                           ; BSR set to: 1
 14842                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 14843  0184A0  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 14844  0184A2  0D01               	mullw	1
 14845  0184A4  0E00               	movlw	low _eusart2RxBuffer
 14846  0184A6  24F3               	addwf	prodl,w,c
 14847  0184A8  6ED9               	movwf	fsr2l,c
 14848  0184AA  0E02               	movlw	high _eusart2RxBuffer
 14849  0184AC  20F4               	addwfc	prodh,w,c
 14850  0184AE  6EDA               	movwf	fsr2h,c
 14851  0184B0  50DF               	movf	indf2,w,c
 14852  0184B2  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 14853                           
 14854                           ; BSR set to: 1
 14855  0184B4  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 14856                           
 14857                           ; BSR set to: 1
 14858                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 14859  0184B6  0E3F               	movlw	63
 14860  0184B8  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 14861  0184BA  D002               	goto	l384
 14862                           
 14863                           ; BSR set to: 1
 14864                           ;eusart2.c: 151: {
 14865                           ;eusart2.c: 152: eusart2RxTail = 0;
 14866  0184BC  0E00               	movlw	0
 14867  0184BE  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 14868  0184C0                     l384:
 14869                           
 14870                           ; BSR set to: 1
 14871                           ;eusart2.c: 153: }
 14872                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 14873                           
 14874                           ; BSR set to: 1
 14875  0184C0  010E               	movlb	14	; () banked
 14876  0184C2  9F2C               	bcf	44,7,b	;volatile
 14877                           
 14878                           ; BSR set to: 14
 14879                           ;eusart2.c: 155: eusart2RxCount--;
 14880  0184C4  0101               	movlb	1	; () banked
 14881  0184C6  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 14882                           
 14883                           ; BSR set to: 1
 14884                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 14885  0184C8  010E               	movlb	14	; () banked
 14886  0184CA  8F2C               	bsf	44,7,b	;volatile
 14887                           
 14888                           ; BSR set to: 14
 14889                           ;eusart2.c: 158: return readValue;
 14890  0184CC  0101               	movlb	1	; () banked
 14891  0184CE  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 14892  0184D0  0012               	return	
 14893  0184D2                     __end_of_EUSART2_Read:
 14894                           	opt stack 0
 14895                           tblptru	equ	0xFF8
 14896                           tblptrh	equ	0xFF7
 14897                           tblptrl	equ	0xFF6
 14898                           tablat	equ	0xFF5
 14899                           prodh	equ	0xFF4
 14900                           prodl	equ	0xFF3
 14901                           intcon	equ	0xFF2
 14902                           indf0	equ	0xFEF
 14903                           postinc0	equ	0xFEE
 14904                           fsr0h	equ	0xFEA
 14905                           fsr0l	equ	0xFE9
 14906                           wreg	equ	0xFE8
 14907                           indf1	equ	0xFE7
 14908                           postdec1	equ	0xFE5
 14909                           plusw1	equ	0xFE3
 14910                           fsr1h	equ	0xFE2
 14911                           fsr1l	equ	0xFE1
 14912                           indf2	equ	0xFDF
 14913                           postinc2	equ	0xFDE
 14914                           postdec2	equ	0xFDD
 14915                           plusw2	equ	0xFDB
 14916                           fsr2h	equ	0xFDA
 14917                           fsr2l	equ	0xFD9
 14918                           status	equ	0xFD8
 14919                           
 14920 ;; *************** function _terminal_clearTerminal *****************
 14921 ;; Defined at:
 14922 ;;		line 80 in file "ring_buffer_interface.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;		None
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;		None
 14927 ;; Return value:  Size  Location     Type
 14928 ;;                  1    wreg      void 
 14929 ;; Registers used:
 14930 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14940 ;;Total ram usage:        0 bytes
 14941 ;; Hardware stack levels used:    1
 14942 ;; Hardware stack levels required when called:   16
 14943 ;; This function calls:
 14944 ;;		_printf
 14945 ;; This function is called by:
 14946 ;;		_main
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950                           	psect	text31
 14951  018B78                     __ptext31:
 14952                           	opt stack 0
 14953  018B78                     _terminal_clearTerminal:
 14954                           	opt stack 14
 14955                           
 14956                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 14957                           
 14958                           ; BSR set to: 1
 14959                           ;incstack = 0
 14960  018B78  0EAF               	movlw	low STR_2
 14961  018B7A  0101               	movlb	1	; () banked
 14962  018B7C  6F82               	movwf	printf@f& (0+255),b
 14963  018B7E  0EFF               	movlw	high STR_2
 14964  018B80  6F83               	movwf	(printf@f+1)& (0+255),b
 14965  018B82  EC50  F087         	call	_printf	;wreg free
 14966  018B86  0012               	return		;funcret
 14967  018B88                     __end_of_terminal_clearTerminal:
 14968                           	opt stack 0
 14969                           tblptru	equ	0xFF8
 14970                           tblptrh	equ	0xFF7
 14971                           tblptrl	equ	0xFF6
 14972                           tablat	equ	0xFF5
 14973                           prodh	equ	0xFF4
 14974                           prodl	equ	0xFF3
 14975                           intcon	equ	0xFF2
 14976                           indf0	equ	0xFEF
 14977                           postinc0	equ	0xFEE
 14978                           fsr0h	equ	0xFEA
 14979                           fsr0l	equ	0xFE9
 14980                           wreg	equ	0xFE8
 14981                           indf1	equ	0xFE7
 14982                           postdec1	equ	0xFE5
 14983                           plusw1	equ	0xFE3
 14984                           fsr1h	equ	0xFE2
 14985                           fsr1l	equ	0xFE1
 14986                           indf2	equ	0xFDF
 14987                           postinc2	equ	0xFDE
 14988                           postdec2	equ	0xFDD
 14989                           plusw2	equ	0xFDB
 14990                           fsr2h	equ	0xFDA
 14991                           fsr2l	equ	0xFD9
 14992                           status	equ	0xFD8
 14993                           
 14994 ;; *************** function _printf *****************
 14995 ;; Defined at:
 14996 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 14997 ;; Parameters:    Size  Location     Type
 14998 ;;  f               2  130[BANK1 ] PTR const unsigned char 
 14999 ;;		 -> STR_130(30), STR_129(46), STR_128(39), STR_127(62), 
 15000 ;;		 -> STR_126(55), STR_125(2360), STR_123(46), STR_121(51), 
 15001 ;;		 -> STR_119(53), STR_117(58), STR_115(71), STR_114(63), 
 15002 ;;		 -> STR_113(37), STR_112(46), STR_111(102), STR_110(86), 
 15003 ;;		 -> STR_108(25), STR_106(42), STR_105(53), STR_104(31), 
 15004 ;;		 -> STR_102(29), STR_101(28), STR_99(42), STR_97(41), 
 15005 ;;		 -> STR_95(40), STR_93(56), STR_91(34), STR_89(34), 
 15006 ;;		 -> STR_87(32), STR_85(37), STR_83(58), STR_81(36), 
 15007 ;;		 -> STR_79(36), STR_77(37), STR_75(45), STR_74(66), 
 15008 ;;		 -> STR_72(21), STR_70(24), STR_69(48), STR_59(54), 
 15009 ;;		 -> STR_58(64), STR_56(59), STR_54(85), STR_52(47), 
 15010 ;;		 -> STR_51(17), STR_48(52), STR_46(4), STR_45(5), 
 15011 ;;		 -> STR_43(4), STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), 
 15012 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 15013 ;;		 -> STR_6(5), STR_5(3), STR_4(372), STR_3(4), 
 15014 ;;		 -> STR_2(5), STR_1(4), 
 15015 ;; Auto vars:     Size  Location     Type
 15016 ;;  idx             1  150[BANK1 ] unsigned char 
 15017 ;;  val             4  167[BANK1 ] unsigned long 
 15018 ;;  fval            4  163[BANK1 ] unsigned long 
 15019 ;;  tmpval          4  157[BANK1 ] struct .
 15020 ;;  prec            2  175[BANK1 ] int 
 15021 ;;  width           2  173[BANK1 ] int 
 15022 ;;  flag            2  171[BANK1 ] unsigned short 
 15023 ;;  exp             2  161[BANK1 ] int 
 15024 ;;  ap              2  155[BANK1 ] PTR void [1]
 15025 ;;		 -> ?i2_printf(2), ?_printf(2), 
 15026 ;;  len             2  153[BANK1 ] unsigned int 
 15027 ;;  cp              2  151[BANK1 ] PTR const unsigned char 
 15028 ;;		 -> STR_144(7), printf@c(1), STR_143(16), STR_142(22), 
 15029 ;;		 -> STR_141(21), STR_140(27), STR_139(41), STR_138(32), 
 15030 ;;		 -> STR_137(19), STR_136(16), STR_135(15), STR_134(16), 
 15031 ;;		 -> STR_133(10), STR_132(13), STR_131(12), ringBufferLUT@channel_name(22), 
 15032 ;;		 -> TRIAC_Firing_Angle(4), 
 15033 ;;  c               1  177[BANK1 ] char 
 15034 ;;  d               1    0        unsigned char 
 15035 ;; Return value:  Size  Location     Type
 15036 ;;                  2  130[BANK1 ] int 
 15037 ;; Registers used:
 15038 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15039 ;; Tracked objects:
 15040 ;;		On entry : 0/0
 15041 ;;		On exit  : 0/0
 15042 ;;		Unchanged: 0/0
 15043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15044 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15045 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15046 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15047 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15048 ;;Total ram usage:       48 bytes
 15049 ;; Hardware stack levels used:    1
 15050 ;; Hardware stack levels required when called:   15
 15051 ;; This function calls:
 15052 ;;		___awdiv
 15053 ;;		___fladd
 15054 ;;		___flge
 15055 ;;		___flmul
 15056 ;;		___flneg
 15057 ;;		___flsub
 15058 ;;		___fltol
 15059 ;;		___lldiv
 15060 ;;		___llmod
 15061 ;;		___wmul
 15062 ;;		___xxtofl
 15063 ;;		__div_to_l_
 15064 ;;		__tdiv_to_l_
 15065 ;;		_fround
 15066 ;;		_isdigit
 15067 ;;		_putch
 15068 ;;		_scale
 15069 ;; This function is called by:
 15070 ;;		_terminal_clearTerminal
 15071 ;;		_terminal_setCursorHome
 15072 ;;		_terminal_textAttributes
 15073 ;;		_terminal_printNewline
 15074 ;;		_ringBufferLUT
 15075 ;;		_terminal_printResetMessage
 15076 ;;		_terminal_clearLine
 15077 ;;		_terminal_saveCursor
 15078 ;;		_terminal_returnCursor
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           	psect	text32
 15083  010EA0                     __ptext32:
 15084                           	opt stack 0
 15085  010EA0                     _printf:
 15086                           	opt stack 13
 15087                           
 15088                           ;doprnt.c: 466: va_list ap;
 15089                           ;doprnt.c: 499: signed char c;
 15090                           ;doprnt.c: 501: int width;
 15091                           ;doprnt.c: 504: int prec;
 15092                           ;doprnt.c: 508: unsigned short flag;
 15093                           ;doprnt.c: 515: char d;
 15094                           ;doprnt.c: 516: double fval;
 15095                           ;doprnt.c: 517: int exp;
 15096                           ;doprnt.c: 523: union {
 15097                           ;doprnt.c: 524: unsigned long vd;
 15098                           ;doprnt.c: 525: double integ;
 15099                           ;doprnt.c: 526: } tmpval;
 15100                           ;doprnt.c: 528: unsigned long val;
 15101                           ;doprnt.c: 529: unsigned len;
 15102                           ;doprnt.c: 530: const char * cp;
 15103                           ;doprnt.c: 533: *ap = __va_start();
 15104                           
 15105                           ;incstack = 0
 15106  010EA0  0E84               	movlw	low (?_printf+2)
 15107  010EA2  0101               	movlb	1	; () banked
 15108  010EA4  6F9B               	movwf	printf@ap& (0+255),b
 15109  010EA6  0E01               	movlw	high (?_printf+2)
 15110  010EA8  6F9C               	movwf	(printf@ap+1)& (0+255),b
 15111                           
 15112                           ;doprnt.c: 536: while(c = *f++) {
 15113  010EAA  EF18  F08E         	goto	u24920
 15114  010EAE                     
 15115                           ; BSR set to: 1
 15116                           ;doprnt.c: 538: if(c != '%')
 15117                           
 15118                           ; BSR set to: 1
 15119  010EAE  0E25               	movlw	37
 15120  010EB0  19B1               	xorwf	printf@c& (0+255),w,b
 15121  010EB2  B4D8               	btfsc	status,2,c
 15122  010EB4  D005               	goto	l1402
 15123                           
 15124                           ; BSR set to: 1
 15125                           ;doprnt.c: 540: {
 15126                           ;doprnt.c: 541: (putch(c) );
 15127  010EB6  51B1               	movf	printf@c& (0+255),w,b
 15128  010EB8  ECCC  F0C5         	call	_putch
 15129                           
 15130                           ;doprnt.c: 542: continue;
 15131  010EBC  EF18  F08E         	goto	u24920
 15132  010EC0                     l1402:
 15133                           
 15134                           ;doprnt.c: 543: }
 15135                           ;doprnt.c: 546: width = 0;
 15136  010EC0  0E00               	movlw	0
 15137  010EC2  0101               	movlb	1	; () banked
 15138  010EC4  6FAE               	movwf	(printf@width+1)& (0+255),b
 15139  010EC6  0E00               	movlw	0
 15140  010EC8  6FAD               	movwf	printf@width& (0+255),b
 15141                           
 15142                           ;doprnt.c: 548: flag = 0;
 15143  010ECA  0E00               	movlw	0
 15144  010ECC  6FAC               	movwf	(printf@flag+1)& (0+255),b
 15145  010ECE  0E00               	movlw	0
 15146  010ED0  6FAB               	movwf	printf@flag& (0+255),b
 15147                           
 15148                           ; BSR set to: 1
 15149                           ;doprnt.c: 551: switch(*f) {
 15150                           
 15151                           ;doprnt.c: 550: for(;;) {
 15152  010ED2  D004               	goto	l1404
 15153  010ED4                     
 15154                           ;doprnt.c: 580: flag |= 0x04;
 15155                           
 15156                           ; BSR set to: 1
 15157  010ED4  0101               	movlb	1	; () banked
 15158  010ED6  85AB               	bsf	printf@flag& (0+255),2,b
 15159                           
 15160                           ;doprnt.c: 581: f++;
 15161  010ED8  4B82               	infsnz	printf@f& (0+255),f,b
 15162  010EDA  2B83               	incf	(printf@f+1)& (0+255),f,b
 15163  010EDC                     l1404:
 15164                           
 15165                           ; BSR set to: 1
 15166  010EDC  C182  FFF6         	movff	printf@f,tblptrl
 15167  010EE0  C183  FFF7         	movff	printf@f+1,tblptrh
 15168  010EE4  0E00               	movlw	low (__mediumconst shr (0+16))
 15169  010EE6  6EF8               	movwf	tblptru,c
 15170  010EE8  0E0D               	movlw	(high __ramtop+-1)
 15171  010EEA  64F7               	cpfsgt	tblptrh,c
 15172  010EEC  D003               	bra	u24187
 15173  010EEE  0008               	tblrd		*
 15174  010EF0  50F5               	movf	tablat,w,c
 15175  010EF2  D005               	bra	u24180
 15176  010EF4                     u24187:
 15177  010EF4  CFF6 FFE9          	movff	tblptrl,fsr0l
 15178  010EF8  CFF7 FFEA          	movff	tblptrh,fsr0h
 15179  010EFC  50EF               	movf	indf0,w,c
 15180  010EFE                     u24180:
 15181                           
 15182                           ; Switch size 1, requested type "space"
 15183                           ; Number of cases is 1, Range of values is 48 to 48
 15184                           ; switch strategies available:
 15185                           ; Name         Instructions Cycles
 15186                           ; simple_byte            4     3 (average)
 15187                           ;	Chosen strategy is simple_byte
 15188  010EFE  0A30               	xorlw	48	; case 48
 15189  010F00  B4D8               	btfsc	status,2,c
 15190  010F02  D7E8               	goto	l1405
 15191                           
 15192                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 15193                           
 15194                           ;doprnt.c: 586: }
 15195                           
 15196                           ;doprnt.c: 585: break;
 15197  010F04  C182  FFF6         	movff	printf@f,tblptrl
 15198  010F08  C183  FFF7         	movff	printf@f+1,tblptrh
 15199  010F0C  0E00               	movlw	low (__mediumconst shr (0+16))
 15200  010F0E  6EF8               	movwf	tblptru,c
 15201  010F10  0E0D               	movlw	(high __ramtop+-1)
 15202  010F12  64F7               	cpfsgt	tblptrh,c
 15203  010F14  D003               	bra	u24197
 15204  010F16  0008               	tblrd		*
 15205  010F18  50F5               	movf	tablat,w,c
 15206  010F1A  D005               	bra	u24190
 15207  010F1C                     u24197:
 15208  010F1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15209  010F20  CFF7 FFEA          	movff	tblptrh,fsr0h
 15210  010F24  50EF               	movf	indf0,w,c
 15211  010F26                     u24190:
 15212  010F26  EC08  F0C5         	call	_isdigit
 15213  010F2A  A0D8               	btfss	status,0,c
 15214  010F2C  D04C               	goto	u24230
 15215                           
 15216                           ;doprnt.c: 598: width = 0;
 15217  010F2E  0E00               	movlw	0
 15218  010F30  0101               	movlb	1	; () banked
 15219  010F32  6FAE               	movwf	(printf@width+1)& (0+255),b
 15220  010F34  0E00               	movlw	0
 15221  010F36  6FAD               	movwf	printf@width& (0+255),b
 15222  010F38                     
 15223                           ;doprnt.c: 600: width *= 10;
 15224                           
 15225                           ; BSR set to: 1
 15226  010F38  C1AD  F117         	movff	printf@width,___wmul@multiplier
 15227  010F3C  C1AE  F118         	movff	printf@width+1,___wmul@multiplier+1
 15228  010F40  0E00               	movlw	0
 15229  010F42  0101               	movlb	1	; () banked
 15230  010F44  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15231  010F46  0E0A               	movlw	10
 15232  010F48  6F19               	movwf	___wmul@multiplicand& (0+255),b
 15233  010F4A  EC81  F0C4         	call	___wmul	;wreg free
 15234  010F4E  C117  F1AD         	movff	?___wmul,printf@width
 15235  010F52  C118  F1AE         	movff	?___wmul+1,printf@width+1
 15236                           
 15237                           ;doprnt.c: 601: width += *f++ - '0';
 15238  010F56  0ED0               	movlw	208
 15239  010F58  0101               	movlb	1	; () banked
 15240  010F5A  6F8C               	movwf	??_printf& (0+255),b
 15241  010F5C  0EFF               	movlw	255
 15242  010F5E  6F8D               	movwf	(??_printf+1)& (0+255),b
 15243  010F60  C182  FFF6         	movff	printf@f,tblptrl
 15244  010F64  C183  FFF7         	movff	printf@f+1,tblptrh
 15245  010F68  0E00               	movlw	low (__mediumconst shr (0+16))
 15246  010F6A  6EF8               	movwf	tblptru,c
 15247  010F6C  0E0D               	movlw	(high __ramtop+-1)
 15248  010F6E  64F7               	cpfsgt	tblptrh,c
 15249  010F70  D003               	bra	u24217
 15250  010F72  0008               	tblrd		*
 15251  010F74  50F5               	movf	tablat,w,c
 15252  010F76  D005               	bra	u24210
 15253  010F78                     u24217:
 15254  010F78  CFF6 FFE9          	movff	tblptrl,fsr0l
 15255  010F7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15256  010F80  50EF               	movf	indf0,w,c
 15257  010F82                     u24210:
 15258  010F82  0101               	movlb	1	; () banked
 15259  010F84  6F8E               	movwf	(??_printf+2)& (0+255),b
 15260  010F86  6B8F               	clrf	(??_printf+3)& (0+255),b
 15261  010F88  518C               	movf	??_printf& (0+255),w,b
 15262  010F8A  278E               	addwf	(??_printf+2)& (0+255),f,b
 15263  010F8C  518D               	movf	(??_printf+1)& (0+255),w,b
 15264  010F8E  238F               	addwfc	(??_printf+3)& (0+255),f,b
 15265  010F90  518E               	movf	(??_printf+2)& (0+255),w,b
 15266  010F92  27AD               	addwf	printf@width& (0+255),f,b
 15267  010F94  518F               	movf	(??_printf+3)& (0+255),w,b
 15268  010F96  23AE               	addwfc	(printf@width+1)& (0+255),f,b
 15269                           
 15270                           ; BSR set to: 1
 15271  010F98  4B82               	infsnz	printf@f& (0+255),f,b
 15272  010F9A  2B83               	incf	(printf@f+1)& (0+255),f,b
 15273                           
 15274                           ; BSR set to: 1
 15275                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 15276  010F9C  C182  FFF6         	movff	printf@f,tblptrl
 15277  010FA0  C183  FFF7         	movff	printf@f+1,tblptrh
 15278  010FA4  0E00               	movlw	low (__mediumconst shr (0+16))
 15279  010FA6  6EF8               	movwf	tblptru,c
 15280  010FA8  0E0D               	movlw	(high __ramtop+-1)
 15281  010FAA  64F7               	cpfsgt	tblptrh,c
 15282  010FAC  D003               	bra	u24227
 15283  010FAE  0008               	tblrd		*
 15284  010FB0  50F5               	movf	tablat,w,c
 15285  010FB2  D005               	bra	u24220
 15286  010FB4                     u24227:
 15287  010FB4  CFF6 FFE9          	movff	tblptrl,fsr0l
 15288  010FB8  CFF7 FFEA          	movff	tblptrh,fsr0h
 15289  010FBC  50EF               	movf	indf0,w,c
 15290  010FBE                     u24220:
 15291  010FBE  EC08  F0C5         	call	_isdigit
 15292  010FC2  B0D8               	btfsc	status,0,c
 15293  010FC4  D7B9               	goto	l1410
 15294  010FC6                     u24230:
 15295                           
 15296                           ;doprnt.c: 608: }
 15297                           ;doprnt.c: 611: if(*f == '.') {
 15298  010FC6  C182  FFF6         	movff	printf@f,tblptrl
 15299  010FCA  C183  FFF7         	movff	printf@f+1,tblptrh
 15300  010FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 15301  010FD0  6EF8               	movwf	tblptru,c
 15302  010FD2  0E0D               	movlw	(high __ramtop+-1)
 15303  010FD4  64F7               	cpfsgt	tblptrh,c
 15304  010FD6  D003               	bra	u24247
 15305  010FD8  0008               	tblrd		*
 15306  010FDA  50F5               	movf	tablat,w,c
 15307  010FDC  D005               	bra	u24240
 15308  010FDE                     u24247:
 15309  010FDE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15310  010FE2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15311  010FE6  50EF               	movf	indf0,w,c
 15312  010FE8                     u24240:
 15313  010FE8  0A2E               	xorlw	46
 15314  010FEA  A4D8               	btfss	status,2,c
 15315  010FEC  D049               	goto	l1412
 15316                           
 15317                           ;doprnt.c: 612: flag |= 0x4000;
 15318  010FEE  0101               	movlb	1	; () banked
 15319  010FF0  8DAC               	bsf	(printf@flag+1)& (0+255),6,b
 15320                           
 15321                           ;doprnt.c: 613: f++;
 15322  010FF2  4B82               	infsnz	printf@f& (0+255),f,b
 15323  010FF4  2B83               	incf	(printf@f+1)& (0+255),f,b
 15324                           
 15325                           ; BSR set to: 1
 15326                           ;doprnt.c: 620: {
 15327                           ;doprnt.c: 621: prec = 0;
 15328  010FF6  0E00               	movlw	0
 15329  010FF8  6FB0               	movwf	(printf@prec+1)& (0+255),b
 15330  010FFA  0E00               	movlw	0
 15331  010FFC  6FAF               	movwf	printf@prec& (0+255),b
 15332                           
 15333                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 15334  010FFE  D02A               	goto	l1413
 15335  011000                     
 15336                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 15337                           
 15338                           ; BSR set to: 1
 15339  011000  C1AF  F117         	movff	printf@prec,___wmul@multiplier
 15340  011004  C1B0  F118         	movff	printf@prec+1,___wmul@multiplier+1
 15341  011008  0E00               	movlw	0
 15342  01100A  0101               	movlb	1	; () banked
 15343  01100C  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15344  01100E  0E0A               	movlw	10
 15345  011010  6F19               	movwf	___wmul@multiplicand& (0+255),b
 15346  011012  EC81  F0C4         	call	___wmul	;wreg free
 15347  011016  C182  FFF6         	movff	printf@f,tblptrl
 15348  01101A  C183  FFF7         	movff	printf@f+1,tblptrh
 15349  01101E  0E00               	movlw	low (__mediumconst shr (0+16))
 15350  011020  6EF8               	movwf	tblptru,c
 15351  011022  0E0D               	movlw	(high __ramtop+-1)
 15352  011024  64F7               	cpfsgt	tblptrh,c
 15353  011026  D003               	bra	u24267
 15354  011028  0008               	tblrd		*
 15355  01102A  50F5               	movf	tablat,w,c
 15356  01102C  D005               	bra	u24260
 15357  01102E                     u24267:
 15358  01102E  CFF6 FFE9          	movff	tblptrl,fsr0l
 15359  011032  CFF7 FFEA          	movff	tblptrh,fsr0h
 15360  011036  50EF               	movf	indf0,w,c
 15361  011038                     u24260:
 15362  011038  0101               	movlb	1	; () banked
 15363  01103A  6F8C               	movwf	??_printf& (0+255),b
 15364  01103C  518C               	movf	??_printf& (0+255),w,b
 15365  01103E  2717               	addwf	?___wmul& (0+255),f,b
 15366  011040  0E00               	movlw	0
 15367  011042  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 15368  011044  0ED0               	movlw	208
 15369  011046  2517               	addwf	?___wmul& (0+255),w,b
 15370  011048  6FAF               	movwf	printf@prec& (0+255),b
 15371  01104A  0EFF               	movlw	255
 15372  01104C  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 15373  01104E  6FB0               	movwf	(printf@prec+1)& (0+255),b
 15374                           
 15375                           ; BSR set to: 1
 15376  011050  4B82               	infsnz	printf@f& (0+255),f,b
 15377  011052  2B83               	incf	(printf@f+1)& (0+255),f,b
 15378  011054                     l1413:
 15379                           
 15380                           ; BSR set to: 1
 15381                           
 15382                           ; BSR set to: 1
 15383  011054  C182  FFF6         	movff	printf@f,tblptrl
 15384  011058  C183  FFF7         	movff	printf@f+1,tblptrh
 15385  01105C  0E00               	movlw	low (__mediumconst shr (0+16))
 15386  01105E  6EF8               	movwf	tblptru,c
 15387  011060  0E0D               	movlw	(high __ramtop+-1)
 15388  011062  64F7               	cpfsgt	tblptrh,c
 15389  011064  D003               	bra	u24277
 15390  011066  0008               	tblrd		*
 15391  011068  50F5               	movf	tablat,w,c
 15392  01106A  D005               	bra	u24270
 15393  01106C                     u24277:
 15394  01106C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15395  011070  CFF7 FFEA          	movff	tblptrh,fsr0h
 15396  011074  50EF               	movf	indf0,w,c
 15397  011076                     u24270:
 15398  011076  EC08  F0C5         	call	_isdigit
 15399  01107A  A0D8               	btfss	status,0,c
 15400  01107C  D0A4               	goto	l1417
 15401  01107E  D7C0               	goto	l1414
 15402  011080                     l1412:
 15403                           
 15404                           ;doprnt.c: 626: prec = 0;
 15405  011080  0E00               	movlw	0
 15406  011082  0101               	movlb	1	; () banked
 15407  011084  6FB0               	movwf	(printf@prec+1)& (0+255),b
 15408  011086  0E00               	movlw	0
 15409  011088  6FAF               	movwf	printf@prec& (0+255),b
 15410                           
 15411                           ; BSR set to: 1
 15412                           ;doprnt.c: 628: flag |= 0x1000;
 15413  01108A  89AC               	bsf	(printf@flag+1)& (0+255),4,b
 15414                           
 15415                           ; BSR set to: 1
 15416                           ;doprnt.c: 630: }
 15417                           ;doprnt.c: 635: switch(c = *f++) {
 15418  01108C  D09C               	goto	l1417
 15419  01108E                     
 15420                           ; BSR set to: 1
 15421                           ;doprnt.c: 663: flag |= 0x400;
 15422                           
 15423                           ; BSR set to: 1
 15424  01108E  85AC               	bsf	(printf@flag+1)& (0+255),2,b
 15425                           
 15426                           ; BSR set to: 1
 15427                           ;doprnt.c: 698: case 'i':
 15428                           ;doprnt.c: 699: break;
 15429                           
 15430                           ; BSR set to: 1
 15431                           
 15432                           ;doprnt.c: 697: case 'd':
 15433                           
 15434                           ;doprnt.c: 664: break;
 15435  011090  D0D1               	goto	l1421
 15436  011092                     
 15437                           ; BSR set to: 1
 15438                           ;doprnt.c: 718: case 'x':
 15439                           ;doprnt.c: 721: flag |= 0x80;
 15440                           
 15441                           ; BSR set to: 1
 15442                           
 15443                           ; BSR set to: 1
 15444  011092  8FAB               	bsf	printf@flag& (0+255),7,b
 15445                           
 15446                           ;doprnt.c: 723: break;
 15447  011094  D0CF               	goto	l1421
 15448  011096                     
 15449                           ; BSR set to: 1
 15450                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15451                           
 15452                           ; BSR set to: 1
 15453  011096  C19B  FFD9         	movff	printf@ap,fsr2l
 15454  01109A  C19C  FFDA         	movff	printf@ap+1,fsr2h
 15455  01109E  CFDE F197          	movff	postinc2,printf@cp
 15456  0110A2  CFDD F198          	movff	postdec2,printf@cp+1
 15457                           
 15458                           ; BSR set to: 1
 15459  0110A6  0E02               	movlw	2
 15460  0110A8  279B               	addwf	printf@ap& (0+255),f,b
 15461  0110AA  0E00               	movlw	0
 15462  0110AC  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 15463                           
 15464                           ; BSR set to: 1
 15465                           ;doprnt.c: 740: if(!cp)
 15466  0110AE  5197               	movf	printf@cp& (0+255),w,b
 15467  0110B0  1198               	iorwf	(printf@cp+1)& (0+255),w,b
 15468  0110B2  A4D8               	btfss	status,2,c
 15469  0110B4  D004               	goto	l1427
 15470                           
 15471                           ; BSR set to: 1
 15472                           ;doprnt.c: 741: cp = "(null)";
 15473  0110B6  0E85               	movlw	low STR_144
 15474  0110B8  6F97               	movwf	printf@cp& (0+255),b
 15475  0110BA  0EFF               	movlw	high STR_144
 15476  0110BC  6F98               	movwf	(printf@cp+1)& (0+255),b
 15477  0110BE                     l1427:
 15478                           
 15479                           ; BSR set to: 1
 15480                           ;doprnt.c: 745: len = 0;
 15481                           
 15482                           ; BSR set to: 1
 15483  0110BE  0E00               	movlw	0
 15484  0110C0  6F9A               	movwf	(printf@len+1)& (0+255),b
 15485  0110C2  0E00               	movlw	0
 15486  0110C4  6F99               	movwf	printf@len& (0+255),b
 15487                           
 15488                           ;doprnt.c: 746: while(cp[len])
 15489  0110C6  D003               	goto	l1428
 15490  0110C8                     
 15491                           ;doprnt.c: 747: len++;
 15492                           
 15493                           ; BSR set to: 1
 15494  0110C8  0101               	movlb	1	; () banked
 15495  0110CA  4B99               	infsnz	printf@len& (0+255),f,b
 15496  0110CC  2B9A               	incf	(printf@len+1)& (0+255),f,b
 15497  0110CE                     l1428:
 15498                           
 15499                           ; BSR set to: 1
 15500                           
 15501                           ; BSR set to: 1
 15502  0110CE  5199               	movf	printf@len& (0+255),w,b
 15503  0110D0  2597               	addwf	printf@cp& (0+255),w,b
 15504  0110D2  6F8C               	movwf	??_printf& (0+255),b
 15505  0110D4  519A               	movf	(printf@len+1)& (0+255),w,b
 15506  0110D6  2198               	addwfc	(printf@cp+1)& (0+255),w,b
 15507  0110D8  6F8D               	movwf	(??_printf+1)& (0+255),b
 15508  0110DA  C18C  FFF6         	movff	??_printf,tblptrl
 15509  0110DE  C18D  FFF7         	movff	??_printf+1,tblptrh
 15510  0110E2  0E00               	movlw	low (__mediumconst shr (0+16))
 15511  0110E4  6EF8               	movwf	tblptru,c
 15512  0110E6  0E0D               	movlw	(high __ramtop+-1)
 15513  0110E8  64F7               	cpfsgt	tblptrh,c
 15514  0110EA  D003               	bra	u24307
 15515  0110EC  0008               	tblrd		*
 15516  0110EE  50F5               	movf	tablat,w,c
 15517  0110F0  D005               	bra	u24300
 15518  0110F2                     u24307:
 15519  0110F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 15520  0110F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 15521  0110FA  50EF               	movf	indf0,w,c
 15522  0110FC                     u24300:
 15523  0110FC  0900               	iorlw	0
 15524  0110FE  A4D8               	btfss	status,2,c
 15525  011100  D7E3               	goto	l1429
 15526  011102                     u24310:
 15527                           
 15528                           ;doprnt.c: 753: if(prec && prec < len)
 15529                           
 15530                           ;doprnt.c: 750: dostring:
 15531  011102  0101               	movlb	1	; () banked
 15532  011104  51AF               	movf	printf@prec& (0+255),w,b
 15533  011106  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 15534  011108  B4D8               	btfsc	status,2,c
 15535  01110A  D00A               	goto	l1432
 15536                           
 15537                           ; BSR set to: 1
 15538  01110C  5199               	movf	printf@len& (0+255),w,b
 15539  01110E  5DAF               	subwf	printf@prec& (0+255),w,b
 15540  011110  519A               	movf	(printf@len+1)& (0+255),w,b
 15541  011112  59B0               	subwfb	(printf@prec+1)& (0+255),w,b
 15542  011114  B0D8               	btfsc	status,0,c
 15543  011116  D004               	goto	l1432
 15544                           
 15545                           ; BSR set to: 1
 15546                           ;doprnt.c: 754: len = prec;
 15547  011118  C1AF  F199         	movff	printf@prec,printf@len
 15548  01111C  C1B0  F19A         	movff	printf@prec+1,printf@len+1
 15549  011120                     l1432:
 15550                           
 15551                           ; BSR set to: 1
 15552                           ;doprnt.c: 757: if(width > len)
 15553                           
 15554                           ; BSR set to: 1
 15555  011120  51AD               	movf	printf@width& (0+255),w,b
 15556  011122  5D99               	subwf	printf@len& (0+255),w,b
 15557  011124  51AE               	movf	(printf@width+1)& (0+255),w,b
 15558  011126  599A               	subwfb	(printf@len+1)& (0+255),w,b
 15559  011128  B0D8               	btfsc	status,0,c
 15560  01112A  D005               	goto	l1433
 15561                           
 15562                           ; BSR set to: 1
 15563                           ;doprnt.c: 758: width -= len;
 15564  01112C  5199               	movf	printf@len& (0+255),w,b
 15565  01112E  5FAD               	subwf	printf@width& (0+255),f,b
 15566  011130  519A               	movf	(printf@len+1)& (0+255),w,b
 15567  011132  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 15568  011134  D008               	goto	l1435
 15569  011136                     l1433:
 15570                           
 15571                           ; BSR set to: 1
 15572                           ;doprnt.c: 759: else
 15573                           ;doprnt.c: 760: width = 0;
 15574                           
 15575                           ; BSR set to: 1
 15576  011136  0E00               	movlw	0
 15577  011138  6FAE               	movwf	(printf@width+1)& (0+255),b
 15578  01113A  0E00               	movlw	0
 15579  01113C  6FAD               	movwf	printf@width& (0+255),b
 15580                           
 15581                           ; BSR set to: 1
 15582                           ;doprnt.c: 764: while(width--)
 15583  01113E  D003               	goto	l1435
 15584  011140                     l18236:
 15585                           
 15586                           ; BSR set to: 1
 15587                           ;doprnt.c: 765: (putch(' ') );
 15588  011140  0E20               	movlw	32
 15589  011142  ECCC  F0C5         	call	_putch
 15590  011146                     l1435:
 15591  011146  0101               	movlb	1	; () banked
 15592  011148  07AD               	decf	printf@width& (0+255),f,b
 15593  01114A  A0D8               	btfss	status,0,c
 15594  01114C  07AE               	decf	(printf@width+1)& (0+255),f,b
 15595  01114E  29AD               	incf	printf@width& (0+255),w,b
 15596  011150  E1F7               	bnz	l18236
 15597  011152  29AE               	incf	(printf@width+1)& (0+255),w,b
 15598  011154  B4D8               	btfsc	status,2,c
 15599  011156  D017               	goto	l1438
 15600  011158  D7F3               	goto	l1436
 15601  01115A                     l18240:
 15602                           
 15603                           ; BSR set to: 1
 15604                           ;doprnt.c: 768: (putch(*cp++) );
 15605  01115A  C197  FFF6         	movff	printf@cp,tblptrl
 15606  01115E  C198  FFF7         	movff	printf@cp+1,tblptrh
 15607  011162  0E00               	movlw	low (__mediumconst shr (0+16))
 15608  011164  6EF8               	movwf	tblptru,c
 15609  011166  0E0D               	movlw	(high __ramtop+-1)
 15610  011168  64F7               	cpfsgt	tblptrh,c
 15611  01116A  D003               	bra	u24367
 15612  01116C  0008               	tblrd		*
 15613  01116E  50F5               	movf	tablat,w,c
 15614  011170  D005               	bra	u24360
 15615  011172                     u24367:
 15616  011172  CFF6 FFE9          	movff	tblptrl,fsr0l
 15617  011176  CFF7 FFEA          	movff	tblptrh,fsr0h
 15618  01117A  50EF               	movf	indf0,w,c
 15619  01117C                     u24360:
 15620  01117C  ECCC  F0C5         	call	_putch
 15621  011180  0101               	movlb	1	; () banked
 15622  011182  4B97               	infsnz	printf@cp& (0+255),f,b
 15623  011184  2B98               	incf	(printf@cp+1)& (0+255),f,b
 15624  011186                     l1438:
 15625                           
 15626                           ; BSR set to: 1
 15627                           
 15628                           ; BSR set to: 1
 15629  011186  0799               	decf	printf@len& (0+255),f,b
 15630  011188  A0D8               	btfss	status,0,c
 15631  01118A  079A               	decf	(printf@len+1)& (0+255),f,b
 15632  01118C  2999               	incf	printf@len& (0+255),w,b
 15633  01118E  E1E5               	bnz	l18240
 15634  011190  299A               	incf	(printf@len+1)& (0+255),w,b
 15635  011192  B4D8               	btfsc	status,2,c
 15636  011194  EF18  F08E         	goto	u24920
 15637  011198  D7E0               	goto	l1439
 15638  01119A                     
 15639                           ; BSR set to: 1
 15640                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 15641                           
 15642                           ; BSR set to: 1
 15643  01119A  C19B  FFD9         	movff	printf@ap,fsr2l
 15644  01119E  C19C  FFDA         	movff	printf@ap+1,fsr2h
 15645  0111A2  50DF               	movf	indf2,w,c
 15646  0111A4  6FB1               	movwf	printf@c& (0+255),b
 15647                           
 15648                           ; BSR set to: 1
 15649  0111A6  0E02               	movlw	2
 15650  0111A8  279B               	addwf	printf@ap& (0+255),f,b
 15651  0111AA  0E00               	movlw	0
 15652  0111AC  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 15653  0111AE                     
 15654                           ; BSR set to: 1
 15655                           ;doprnt.c: 805: cp = (char *)&c;
 15656                           
 15657                           ; BSR set to: 1
 15658  0111AE  0EB1               	movlw	low printf@c
 15659  0111B0  6F97               	movwf	printf@cp& (0+255),b
 15660  0111B2  0E01               	movlw	high printf@c
 15661  0111B4  6F98               	movwf	(printf@cp+1)& (0+255),b
 15662                           
 15663                           ; BSR set to: 1
 15664                           ;doprnt.c: 806: len = 1;
 15665  0111B6  0E00               	movlw	0
 15666  0111B8  6F9A               	movwf	(printf@len+1)& (0+255),b
 15667  0111BA  0E01               	movlw	1
 15668  0111BC  6F99               	movwf	printf@len& (0+255),b
 15669                           
 15670                           ;doprnt.c: 807: goto dostring;
 15671  0111BE  D7A1               	goto	u24310
 15672  0111C0                     
 15673                           ; BSR set to: 1
 15674                           ;doprnt.c: 818: flag |= 0xC0;
 15675                           
 15676                           ; BSR set to: 1
 15677  0111C0  0EC0               	movlw	192
 15678  0111C2  13AB               	iorwf	printf@flag& (0+255),f,b
 15679                           
 15680                           ; BSR set to: 1
 15681                           ;doprnt.c: 822: }
 15682                           
 15683                           ;doprnt.c: 819: break;
 15684  0111C4  D037               	goto	l1421
 15685  0111C6                     l1417:
 15686                           
 15687                           ; BSR set to: 1
 15688  0111C6  0101               	movlb	1	; () banked
 15689  0111C8  5182               	movf	printf@f& (0+255),w,b
 15690  0111CA  6F8C               	movwf	??_printf& (0+255),b
 15691  0111CC  5183               	movf	(printf@f+1)& (0+255),w,b
 15692  0111CE  6F8D               	movwf	(??_printf+1)& (0+255),b
 15693  0111D0  4B82               	infsnz	printf@f& (0+255),f,b
 15694  0111D2  2B83               	incf	(printf@f+1)& (0+255),f,b
 15695  0111D4  C18C  FFF6         	movff	??_printf,tblptrl
 15696  0111D8  C18D  FFF7         	movff	??_printf+1,tblptrh
 15697  0111DC  0E00               	movlw	low (__mediumconst shr (0+16))
 15698  0111DE  6EF8               	movwf	tblptru,c
 15699  0111E0  0E0D               	movlw	(high __ramtop+-1)
 15700  0111E2  64F7               	cpfsgt	tblptrh,c
 15701  0111E4  D003               	bra	u24387
 15702  0111E6  0008               	tblrd		*
 15703  0111E8  50F5               	movf	tablat,w,c
 15704  0111EA  D005               	bra	u24380
 15705  0111EC                     u24387:
 15706  0111EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15707  0111F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15708  0111F4  50EF               	movf	indf0,w,c
 15709  0111F6                     u24380:
 15710  0111F6  0101               	movlb	1	; () banked
 15711  0111F8  6FB1               	movwf	printf@c& (0+255),b
 15712  0111FA  51B1               	movf	printf@c& (0+255),w,b
 15713                           
 15714                           ; Switch size 1, requested type "space"
 15715                           ; Number of cases is 9, Range of values is 0 to 120
 15716                           ; switch strategies available:
 15717                           ; Name         Instructions Cycles
 15718                           ; simple_byte           28    15 (average)
 15719                           ;	Chosen strategy is simple_byte
 15720  0111FC  0A00               	xorlw	0	; case 0
 15721  0111FE  B4D8               	btfsc	status,2,c
 15722  011200  0012               	return	
 15723  011202  0A58               	xorlw	88	; case 88
 15724  011204  B4D8               	btfsc	status,2,c
 15725  011206  D745               	goto	l1424
 15726  011208  0A3B               	xorlw	59	; case 99
 15727  01120A  B4D8               	btfsc	status,2,c
 15728  01120C  D7C6               	goto	l1441
 15729  01120E  0A07               	xorlw	7	; case 100
 15730  011210  B4D8               	btfsc	status,2,c
 15731  011212  D010               	goto	l1421
 15732  011214  0A02               	xorlw	2	; case 102
 15733  011216  B4D8               	btfsc	status,2,c
 15734  011218  D73A               	goto	l1420
 15735  01121A  0A0F               	xorlw	15	; case 105
 15736  01121C  B4D8               	btfsc	status,2,c
 15737  01121E  D00A               	goto	l1421
 15738  011220  0A1A               	xorlw	26	; case 115
 15739  011222  B4D8               	btfsc	status,2,c
 15740  011224  D738               	goto	l1426
 15741  011226  0A06               	xorlw	6	; case 117
 15742  011228  B4D8               	btfsc	status,2,c
 15743  01122A  D7CA               	goto	l1443
 15744  01122C  0A0D               	xorlw	13	; case 120
 15745  01122E  B4D8               	btfsc	status,2,c
 15746  011230  D730               	goto	l1424
 15747  011232  D7BD               	goto	l1442
 15748  011234                     l1421:
 15749                           
 15750                           ; BSR set to: 1
 15751                           ;doprnt.c: 825: if(flag & (0x700)) {
 15752                           
 15753                           ; BSR set to: 1
 15754  011234  0E07               	movlw	7
 15755  011236  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 15756  011238  B4D8               	btfsc	status,2,c
 15757  01123A  D33D               	goto	l1444
 15758                           
 15759                           ; BSR set to: 1
 15760                           ;doprnt.c: 827: if(flag & 0x1000)
 15761  01123C  A9AC               	btfss	(printf@flag+1)& (0+255),4,b
 15762  01123E  D004               	goto	l1445
 15763                           
 15764                           ; BSR set to: 1
 15765                           ;doprnt.c: 829: prec = 6;
 15766  011240  0E00               	movlw	0
 15767  011242  6FB0               	movwf	(printf@prec+1)& (0+255),b
 15768  011244  0E06               	movlw	6
 15769  011246  6FAF               	movwf	printf@prec& (0+255),b
 15770  011248                     l1445:
 15771                           
 15772                           ; BSR set to: 1
 15773                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 15774                           
 15775                           ; BSR set to: 1
 15776  011248  C19B  FFD9         	movff	printf@ap,fsr2l
 15777  01124C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 15778  011250  CFDE F1A3          	movff	postinc2,printf@fval
 15779  011254  CFDE F1A4          	movff	postinc2,printf@fval+1
 15780  011258  CFDE F1A5          	movff	postinc2,printf@fval+2
 15781  01125C  CFDE F1A6          	movff	postinc2,printf@fval+3
 15782                           
 15783                           ; BSR set to: 1
 15784  011260  0E04               	movlw	4
 15785  011262  279B               	addwf	printf@ap& (0+255),f,b
 15786  011264  0E00               	movlw	0
 15787  011266  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 15788                           
 15789                           ; BSR set to: 1
 15790                           ;doprnt.c: 831: if(fval < 0.0) {
 15791  011268  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 15792  01126A  D015               	goto	l1446
 15793                           
 15794                           ; BSR set to: 1
 15795                           ;doprnt.c: 832: fval = -fval;
 15796  01126C  C1A3  F125         	movff	printf@fval,___flneg@f1
 15797  011270  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 15798  011274  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 15799  011278  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 15800  01127C  EC26  F0C4         	call	___flneg	;wreg free
 15801  011280  C125  F1A3         	movff	?___flneg,printf@fval
 15802  011284  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 15803  011288  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 15804  01128C  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 15805                           
 15806                           ;doprnt.c: 833: flag |= 0x03;
 15807  011290  0E03               	movlw	3
 15808  011292  0101               	movlb	1	; () banked
 15809  011294  13AB               	iorwf	printf@flag& (0+255),f,b
 15810  011296                     l1446:
 15811                           
 15812                           ; BSR set to: 1
 15813                           ;doprnt.c: 834: }
 15814                           ;doprnt.c: 835: exp = 0;
 15815                           
 15816                           ; BSR set to: 1
 15817  011296  0E00               	movlw	0
 15818  011298  6FA2               	movwf	(printf@exp+1)& (0+255),b
 15819  01129A  0E00               	movlw	0
 15820  01129C  6FA1               	movwf	printf@exp& (0+255),b
 15821                           
 15822                           ; BSR set to: 1
 15823                           ;doprnt.c: 836: if( fval!=0) {
 15824  01129E  51A3               	movf	printf@fval& (0+255),w,b
 15825  0112A0  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 15826  0112A2  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 15827  0112A4  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 15828  0112A6  B4D8               	btfsc	status,2,c
 15829  0112A8  D084               	goto	l1451
 15830                           
 15831                           ; BSR set to: 1
 15832                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 15833  0112AA  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 15834  0112AC  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 15835  0112AE  0F82               	addlw	130
 15836  0112B0  6FA1               	movwf	printf@exp& (0+255),b
 15837  0112B2  6BA2               	clrf	(printf@exp+1)& (0+255),b
 15838  0112B4  0EFF               	movlw	255
 15839  0112B6  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 15840                           
 15841                           ; BSR set to: 1
 15842                           ;doprnt.c: 838: exp--;
 15843  0112B8  07A1               	decf	printf@exp& (0+255),f,b
 15844  0112BA  A0D8               	btfss	status,0,c
 15845  0112BC  07A2               	decf	(printf@exp+1)& (0+255),f,b
 15846                           
 15847                           ; BSR set to: 1
 15848                           ;doprnt.c: 839: exp *= 3;
 15849  0112BE  C1A1  F117         	movff	printf@exp,___wmul@multiplier
 15850  0112C2  C1A2  F118         	movff	printf@exp+1,___wmul@multiplier+1
 15851  0112C6  0E00               	movlw	0
 15852  0112C8  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15853  0112CA  0E03               	movlw	3
 15854  0112CC  6F19               	movwf	___wmul@multiplicand& (0+255),b
 15855  0112CE  EC81  F0C4         	call	___wmul	;wreg free
 15856  0112D2  C117  F1A1         	movff	?___wmul,printf@exp
 15857  0112D6  C118  F1A2         	movff	?___wmul+1,printf@exp+1
 15858                           
 15859                           ;doprnt.c: 840: exp /= 10;
 15860  0112DA  C1A1  F11D         	movff	printf@exp,___awdiv@dividend
 15861  0112DE  C1A2  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 15862  0112E2  0E00               	movlw	0
 15863  0112E4  0101               	movlb	1	; () banked
 15864  0112E6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15865  0112E8  0E0A               	movlw	10
 15866  0112EA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15867  0112EC  EC5F  F0BD         	call	___awdiv	;wreg free
 15868  0112F0  C11D  F1A1         	movff	?___awdiv,printf@exp
 15869  0112F4  C11E  F1A2         	movff	?___awdiv+1,printf@exp+1
 15870                           
 15871                           ;doprnt.c: 841: if(exp < 0)
 15872  0112F8  0101               	movlb	1	; () banked
 15873  0112FA  AFA2               	btfss	(printf@exp+1)& (0+255),7,b
 15874  0112FC  D003               	goto	l1448
 15875                           
 15876                           ; BSR set to: 1
 15877                           ;doprnt.c: 842: exp--;
 15878  0112FE  07A1               	decf	printf@exp& (0+255),f,b
 15879  011300  A0D8               	btfss	status,0,c
 15880  011302  07A2               	decf	(printf@exp+1)& (0+255),f,b
 15881  011304                     l1448:
 15882                           
 15883                           ; BSR set to: 1
 15884                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 15885                           
 15886                           ; BSR set to: 1
 15887  011304  51A1               	movf	printf@exp& (0+255),w,b
 15888  011306  0800               	sublw	0
 15889  011308  EC09  F09A         	call	_scale
 15890  01130C  C16F  F19D         	movff	?_scale,printf@tmpval
 15891  011310  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 15892  011314  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 15893  011318  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 15894                           
 15895                           ;doprnt.c: 847: tmpval.integ *= fval;
 15896  01131C  C19D  F156         	movff	printf@tmpval,___flmul@b
 15897  011320  C19E  F157         	movff	printf@tmpval+1,___flmul@b+1
 15898  011324  C19F  F158         	movff	printf@tmpval+2,___flmul@b+2
 15899  011328  C1A0  F159         	movff	printf@tmpval+3,___flmul@b+3
 15900  01132C  C1A3  F15A         	movff	printf@fval,___flmul@a
 15901  011330  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 15902  011334  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 15903  011338  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 15904  01133C  EC4F  F0A0         	call	___flmul	;wreg free
 15905  011340  C156  F19D         	movff	?___flmul,printf@tmpval
 15906  011344  C157  F19E         	movff	?___flmul+1,printf@tmpval+1
 15907  011348  C158  F19F         	movff	?___flmul+2,printf@tmpval+2
 15908  01134C  C159  F1A0         	movff	?___flmul+3,printf@tmpval+3
 15909                           
 15910                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 15911  011350  C19D  F117         	movff	printf@tmpval,___flge@ff1
 15912  011354  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 15913  011358  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 15914  01135C  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 15915  011360  0E00               	movlw	0
 15916  011362  0101               	movlb	1	; () banked
 15917  011364  6F1B               	movwf	___flge@ff2& (0+255),b
 15918  011366  0E00               	movlw	0
 15919  011368  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 15920  01136A  0E80               	movlw	128
 15921  01136C  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 15922  01136E  0E3F               	movlw	63
 15923  011370  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 15924  011372  EC06  F0B8         	call	___flge	;wreg free
 15925  011376  0101               	movlb	1	; () banked
 15926  011378  B0D8               	btfsc	status,0,c
 15927  01137A  D004               	goto	l1449
 15928                           
 15929                           ; BSR set to: 1
 15930                           ;doprnt.c: 849: exp--;
 15931  01137C  07A1               	decf	printf@exp& (0+255),f,b
 15932  01137E  A0D8               	btfss	status,0,c
 15933  011380  07A2               	decf	(printf@exp+1)& (0+255),f,b
 15934  011382  D017               	goto	l1451
 15935  011384                     l1449:
 15936                           
 15937                           ; BSR set to: 1
 15938                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 15939                           
 15940                           ; BSR set to: 1
 15941  011384  C19D  F117         	movff	printf@tmpval,___flge@ff1
 15942  011388  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 15943  01138C  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 15944  011390  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 15945  011394  0E00               	movlw	0
 15946  011396  6F1B               	movwf	___flge@ff2& (0+255),b
 15947  011398  0E00               	movlw	0
 15948  01139A  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 15949  01139C  0E20               	movlw	32
 15950  01139E  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 15951  0113A0  0E41               	movlw	65
 15952  0113A2  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 15953  0113A4  EC06  F0B8         	call	___flge	;wreg free
 15954  0113A8  0101               	movlb	1	; () banked
 15955  0113AA  A0D8               	btfss	status,0,c
 15956  0113AC  D002               	goto	l1451
 15957                           
 15958                           ; BSR set to: 1
 15959                           ;doprnt.c: 851: exp++;
 15960  0113AE  4BA1               	infsnz	printf@exp& (0+255),f,b
 15961  0113B0  2BA2               	incf	(printf@exp+1)& (0+255),f,b
 15962  0113B2                     l1451:
 15963                           
 15964                           ; BSR set to: 1
 15965                           ;doprnt.c: 852: }
 15966                           ;doprnt.c: 1112: if(prec <= 12)
 15967                           
 15968                           ; BSR set to: 1
 15969                           
 15970                           ; BSR set to: 1
 15971                           
 15972                           ; BSR set to: 1
 15973  0113B2  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 15974  0113B4  D006               	goto	u24460
 15975  0113B6  51B0               	movf	(printf@prec+1)& (0+255),w,b
 15976  0113B8  E121               	bnz	l18308
 15977  0113BA  0E0D               	movlw	13
 15978  0113BC  5DAF               	subwf	printf@prec& (0+255),w,b
 15979  0113BE  B0D8               	btfsc	status,0,c
 15980  0113C0  D01D               	goto	l1452
 15981  0113C2                     u24460:
 15982                           
 15983                           ; BSR set to: 1
 15984                           ;doprnt.c: 1113: fval += fround(prec);
 15985  0113C2  C1A3  F129         	movff	printf@fval,___fladd@b
 15986  0113C6  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 15987  0113CA  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 15988  0113CE  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 15989  0113D2  51AF               	movf	printf@prec& (0+255),w,b
 15990  0113D4  EC41  F0AB         	call	_fround
 15991  0113D8  C16F  F12D         	movff	?_fround,___fladd@a
 15992  0113DC  C170  F12E         	movff	?_fround+1,___fladd@a+1
 15993  0113E0  C171  F12F         	movff	?_fround+2,___fladd@a+2
 15994  0113E4  C172  F130         	movff	?_fround+3,___fladd@a+3
 15995  0113E8  ECA0  F0A3         	call	___fladd	;wreg free
 15996  0113EC  C129  F1A3         	movff	?___fladd,printf@fval
 15997  0113F0  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 15998  0113F4  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 15999  0113F8  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 16000  0113FC                     l1452:
 16001  0113FC                     l18308:
 16002                           
 16003                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 16004  0113FC  0101               	movlb	1	; () banked
 16005  0113FE  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 16006  011400  D006               	goto	u24470
 16007  011402  51A2               	movf	(printf@exp+1)& (0+255),w,b
 16008  011404  E122               	bnz	l18316
 16009  011406  0E0A               	movlw	10
 16010  011408  5DA1               	subwf	printf@exp& (0+255),w,b
 16011  01140A  B0D8               	btfsc	status,0,c
 16012  01140C  D01E               	goto	u24500
 16013  01140E                     u24470:
 16014                           
 16015                           ; BSR set to: 1
 16016  01140E  51A3               	movf	printf@fval& (0+255),w,b
 16017  011410  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 16018  011412  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 16019  011414  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 16020  011416  B4D8               	btfsc	status,2,c
 16021  011418  D062               	goto	l1453
 16022                           
 16023                           ; BSR set to: 1
 16024  01141A  C1A3  F178         	movff	printf@fval,___fltol@f1
 16025  01141E  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 16026  011422  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 16027  011426  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 16028  01142A  EC30  F0BA         	call	___fltol	;wreg free
 16029  01142E  0101               	movlb	1	; () banked
 16030  011430  5178               	movf	?___fltol& (0+255),w,b
 16031  011432  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 16032  011434  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 16033  011436  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 16034  011438  B4D8               	btfsc	status,2,c
 16035                           
 16036                           ; BSR set to: 1
 16037  01143A  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 16038  01143C  D050               	goto	l1453
 16039  01143E  51A2               	movf	(printf@exp+1)& (0+255),w,b
 16040  011440  E104               	bnz	l18316
 16041  011442  0E02               	movlw	2
 16042  011444  5DA1               	subwf	printf@exp& (0+255),w,b
 16043  011446  A0D8               	btfss	status,0,c
 16044  011448  D04A               	goto	l1453
 16045  01144A                     u24500:
 16046  01144A                     l18316:
 16047                           
 16048                           ; BSR set to: 1
 16049                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 16050  01144A  C19D  F117         	movff	printf@tmpval,___flge@ff1
 16051  01144E  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 16052  011452  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 16053  011456  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 16054  01145A  0E5F               	movlw	95
 16055  01145C  6F1B               	movwf	___flge@ff2& (0+255),b
 16056  01145E  0E70               	movlw	112
 16057  011460  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 16058  011462  0E89               	movlw	137
 16059  011464  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 16060  011466  0E40               	movlw	64
 16061  011468  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 16062  01146A  EC06  F0B8         	call	___flge	;wreg free
 16063  01146E  0101               	movlb	1	; () banked
 16064  011470  B0D8               	btfsc	status,0,c
 16065  011472  D002               	goto	l1456
 16066                           
 16067                           ; BSR set to: 1
 16068                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 16069  011474  0EF7               	movlw	247
 16070  011476  D001               	goto	L4
 16071  011478                     l1456:
 16072                           
 16073                           ; BSR set to: 1
 16074                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 16075                           
 16076                           ; BSR set to: 1
 16077  011478  0EF8               	movlw	248
 16078  01147A                     L4:
 16079  01147A  27A1               	addwf	printf@exp& (0+255),f,b
 16080  01147C  0EFF               	movlw	255
 16081  01147E  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 16082                           
 16083                           ; BSR set to: 1
 16084                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 16085                           
 16086                           ; BSR set to: 1
 16087  011480  51A1               	movf	printf@exp& (0+255),w,b
 16088  011482  EC09  F09A         	call	_scale
 16089  011486  C16F  F19D         	movff	?_scale,printf@tmpval
 16090  01148A  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 16091  01148E  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 16092  011492  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 16093  011496  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 16094  01149A  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 16095  01149E  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 16096  0114A2  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 16097  0114A6  C19D  F11B         	movff	printf@tmpval,__div_to_l_@f2
 16098  0114AA  C19E  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 16099  0114AE  C19F  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 16100  0114B2  C1A0  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 16101  0114B6  EC4B  F0B6         	call	__div_to_l_	;wreg free
 16102  0114BA  C117  F1A7         	movff	?__div_to_l_,printf@val
 16103  0114BE  C118  F1A8         	movff	?__div_to_l_+1,printf@val+1
 16104  0114C2  C119  F1A9         	movff	?__div_to_l_+2,printf@val+2
 16105  0114C6  C11A  F1AA         	movff	?__div_to_l_+3,printf@val+3
 16106                           
 16107                           ;doprnt.c: 1129: fval = 0.0;
 16108  0114CA  0E00               	movlw	0
 16109  0114CC  0101               	movlb	1	; () banked
 16110  0114CE  6FA3               	movwf	printf@fval& (0+255),b
 16111  0114D0  0E00               	movlw	0
 16112  0114D2  6FA4               	movwf	(printf@fval+1)& (0+255),b
 16113  0114D4  0E00               	movlw	0
 16114  0114D6  6FA5               	movwf	(printf@fval+2)& (0+255),b
 16115  0114D8  0E00               	movlw	0
 16116  0114DA  6FA6               	movwf	(printf@fval+3)& (0+255),b
 16117                           
 16118                           ;doprnt.c: 1130: } else {
 16119  0114DC  D03C               	goto	l1462
 16120  0114DE                     l1453:
 16121                           
 16122                           ; BSR set to: 1
 16123                           ;doprnt.c: 1131: val = (unsigned long)fval;
 16124                           
 16125                           ; BSR set to: 1
 16126  0114DE  C1A3  F178         	movff	printf@fval,___fltol@f1
 16127  0114E2  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 16128  0114E6  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 16129  0114EA  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 16130  0114EE  EC30  F0BA         	call	___fltol	;wreg free
 16131  0114F2  C178  F1A7         	movff	?___fltol,printf@val
 16132  0114F6  C179  F1A8         	movff	?___fltol+1,printf@val+1
 16133  0114FA  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 16134  0114FE  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 16135                           
 16136                           ;doprnt.c: 1132: fval -= (double)val;
 16137  011502  C1A3  F13D         	movff	printf@fval,___flsub@b
 16138  011506  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 16139  01150A  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 16140  01150E  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 16141  011512  C1A7  F117         	movff	printf@val,___xxtofl@val
 16142  011516  C1A8  F118         	movff	printf@val+1,___xxtofl@val+1
 16143  01151A  C1A9  F119         	movff	printf@val+2,___xxtofl@val+2
 16144  01151E  C1AA  F11A         	movff	printf@val+3,___xxtofl@val+3
 16145  011522  0E00               	movlw	0
 16146  011524  ECC6  F0B3         	call	___xxtofl
 16147  011528  C117  F141         	movff	?___xxtofl,___flsub@a
 16148  01152C  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 16149  011530  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 16150  011534  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 16151  011538  EC69  F0C2         	call	___flsub	;wreg free
 16152  01153C  C13D  F1A3         	movff	?___flsub,printf@fval
 16153  011540  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 16154  011544  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 16155  011548  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 16156                           
 16157                           ;doprnt.c: 1133: exp = 0;
 16158  01154C  0E00               	movlw	0
 16159  01154E  0101               	movlb	1	; () banked
 16160  011550  6FA2               	movwf	(printf@exp+1)& (0+255),b
 16161  011552  0E00               	movlw	0
 16162  011554  6FA1               	movwf	printf@exp& (0+255),b
 16163  011556                     l1462:
 16164                           
 16165                           ; BSR set to: 1
 16166                           ;doprnt.c: 1134: }
 16167                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 16168                           
 16169                           ; BSR set to: 1
 16170  011556  0E01               	movlw	1
 16171  011558  6FB1               	movwf	printf@c& (0+255),b
 16172  01155A                     l18336:
 16173                           
 16174                           ; BSR set to: 1
 16175  01155A  0E0A               	movlw	10
 16176  01155C  19B1               	xorwf	printf@c& (0+255),w,b
 16177  01155E  B4D8               	btfsc	status,2,c
 16178  011560  D01B               	goto	u24540
 16179                           
 16180                           ; BSR set to: 1
 16181                           ;doprnt.c: 1137: if(val < dpowers[c])
 16182                           
 16183                           ; BSR set to: 1
 16184                           
 16185                           ; BSR set to: 1
 16186  011562  51B1               	movf	printf@c& (0+255),w,b
 16187  011564  0D04               	mullw	4
 16188  011566  0E2B               	movlw	low _dpowers
 16189  011568  24F3               	addwf	prodl,w,c
 16190  01156A  6EF6               	movwf	tblptrl,c
 16191  01156C  0EE9               	movlw	high _dpowers
 16192  01156E  20F4               	addwfc	prodh,w,c
 16193  011570  6EF7               	movwf	tblptrh,c
 16194  011572                     	if	1	;There are 3 active tblptr bytes
 16195  011572  6AF8               	clrf	tblptru,c
 16196  011574  0E00               	movlw	low (__mediumconst shr (0+16))
 16197  011576  22F8               	addwfc	tblptru,f,c
 16198  011578                     	endif
 16199  011578  0009               	tblrd		*+
 16200  01157A  50F5               	movf	tablat,w,c
 16201  01157C  5DA7               	subwf	printf@val& (0+255),w,b
 16202  01157E  0009               	tblrd		*+
 16203  011580  50F5               	movf	tablat,w,c
 16204  011582  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 16205  011584  0009               	tblrd		*+
 16206  011586  50F5               	movf	tablat,w,c
 16207  011588  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 16208  01158A  0009               	tblrd		*+
 16209  01158C  50F5               	movf	tablat,w,c
 16210  01158E  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 16211  011590  A0D8               	btfss	status,0,c
 16212  011592  D002               	goto	u24540
 16213                           
 16214                           ; BSR set to: 1
 16215                           
 16216                           ; BSR set to: 1
 16217                           
 16218                           ; BSR set to: 1
 16219                           ;doprnt.c: 1138: break;
 16220  011594  2BB1               	incf	printf@c& (0+255),f,b
 16221  011596  D7E1               	goto	l18336
 16222  011598                     u24540:
 16223                           
 16224                           ; BSR set to: 1
 16225                           ;doprnt.c: 1142: width -= prec + c + exp;
 16226                           
 16227                           ; BSR set to: 1
 16228  011598  C1B1  F18C         	movff	printf@c,??_printf
 16229  01159C  6B8D               	clrf	(??_printf+1)& (0+255),b
 16230  01159E  BF8C               	btfsc	??_printf& (0+255),7,b
 16231  0115A0  078D               	decf	(??_printf+1)& (0+255),f,b
 16232  0115A2  51AF               	movf	printf@prec& (0+255),w,b
 16233  0115A4  278C               	addwf	??_printf& (0+255),f,b
 16234  0115A6  51B0               	movf	(printf@prec+1)& (0+255),w,b
 16235  0115A8  238D               	addwfc	(??_printf+1)& (0+255),f,b
 16236  0115AA  51A1               	movf	printf@exp& (0+255),w,b
 16237  0115AC  278C               	addwf	??_printf& (0+255),f,b
 16238  0115AE  51A2               	movf	(printf@exp+1)& (0+255),w,b
 16239  0115B0  238D               	addwfc	(??_printf+1)& (0+255),f,b
 16240  0115B2  518C               	movf	??_printf& (0+255),w,b
 16241  0115B4  5FAD               	subwf	printf@width& (0+255),f,b
 16242  0115B6  518D               	movf	(??_printf+1)& (0+255),w,b
 16243  0115B8  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 16244                           
 16245                           ;doprnt.c: 1143: if(
 16246                           ;doprnt.c: 1147: prec)
 16247  0115BA  51AF               	movf	printf@prec& (0+255),w,b
 16248  0115BC  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 16249  0115BE  B4D8               	btfsc	status,2,c
 16250  0115C0  D003               	goto	l1466
 16251                           
 16252                           ; BSR set to: 1
 16253                           ;doprnt.c: 1148: width--;
 16254  0115C2  07AD               	decf	printf@width& (0+255),f,b
 16255  0115C4  A0D8               	btfss	status,0,c
 16256  0115C6  07AE               	decf	(printf@width+1)& (0+255),f,b
 16257  0115C8                     l1466:
 16258                           
 16259                           ; BSR set to: 1
 16260                           ;doprnt.c: 1149: if(flag & 0x03)
 16261                           
 16262                           ; BSR set to: 1
 16263  0115C8  0E03               	movlw	3
 16264  0115CA  15AB               	andwf	printf@flag& (0+255),w,b
 16265  0115CC  6F8C               	movwf	??_printf& (0+255),b
 16266  0115CE  0E00               	movlw	0
 16267  0115D0  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16268  0115D2  6F8D               	movwf	(??_printf+1)& (0+255),b
 16269  0115D4  518C               	movf	??_printf& (0+255),w,b
 16270  0115D6  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16271  0115D8  B4D8               	btfsc	status,2,c
 16272  0115DA  D003               	goto	l1467
 16273                           
 16274                           ; BSR set to: 1
 16275                           ;doprnt.c: 1150: width--;
 16276  0115DC  07AD               	decf	printf@width& (0+255),f,b
 16277  0115DE  A0D8               	btfss	status,0,c
 16278  0115E0  07AE               	decf	(printf@width+1)& (0+255),f,b
 16279  0115E2                     l1467:
 16280                           
 16281                           ; BSR set to: 1
 16282                           ;doprnt.c: 1153: if(flag & 0x04) {
 16283                           
 16284                           ; BSR set to: 1
 16285  0115E2  A5AB               	btfss	printf@flag& (0+255),2,b
 16286  0115E4  D025               	goto	l1474
 16287                           
 16288                           ; BSR set to: 1
 16289                           ;doprnt.c: 1157: if(flag & 0x03)
 16290  0115E6  0E03               	movlw	3
 16291  0115E8  15AB               	andwf	printf@flag& (0+255),w,b
 16292  0115EA  6F8C               	movwf	??_printf& (0+255),b
 16293  0115EC  0E00               	movlw	0
 16294  0115EE  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16295  0115F0  6F8D               	movwf	(??_printf+1)& (0+255),b
 16296  0115F2  518C               	movf	??_printf& (0+255),w,b
 16297  0115F4  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16298  0115F6  B4D8               	btfsc	status,2,c
 16299  0115F8  D00B               	goto	l1470
 16300                           
 16301                           ; BSR set to: 1
 16302                           ;doprnt.c: 1159: (putch('-') );
 16303  0115FA  0E2D               	movlw	45
 16304  0115FC  ECCC  F0C5         	call	_putch
 16305                           
 16306                           ;doprnt.c: 1168: while(width > 0) {
 16307  011600  D007               	goto	l1470
 16308  011602                     l18362:
 16309                           
 16310                           ;doprnt.c: 1169: (putch('0') );
 16311  011602  0E30               	movlw	48
 16312  011604  ECCC  F0C5         	call	_putch
 16313                           
 16314                           ;doprnt.c: 1170: width--;
 16315  011608  0101               	movlb	1	; () banked
 16316  01160A  07AD               	decf	printf@width& (0+255),f,b
 16317  01160C  A0D8               	btfss	status,0,c
 16318  01160E  07AE               	decf	(printf@width+1)& (0+255),f,b
 16319  011610                     l1470:
 16320                           
 16321                           ; BSR set to: 1
 16322  011610  0101               	movlb	1	; () banked
 16323  011612  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 16324  011614  D06C               	goto	l1478
 16325  011616  51AE               	movf	(printf@width+1)& (0+255),w,b
 16326  011618  E1F4               	bnz	l18362
 16327  01161A  05AD               	decf	printf@width& (0+255),w,b
 16328  01161C  A0D8               	btfss	status,0,c
 16329  01161E  D067               	goto	l1478
 16330  011620  D7F0               	goto	l1471
 16331  011622                     l18368:
 16332                           
 16333                           ; BSR set to: 1
 16334                           ;doprnt.c: 1181: (putch(' ') );
 16335  011622  0E20               	movlw	32
 16336  011624  ECCC  F0C5         	call	_putch
 16337                           
 16338                           ;doprnt.c: 1182: width--;
 16339  011628  0101               	movlb	1	; () banked
 16340  01162A  07AD               	decf	printf@width& (0+255),f,b
 16341  01162C  A0D8               	btfss	status,0,c
 16342  01162E  07AE               	decf	(printf@width+1)& (0+255),f,b
 16343  011630                     l1474:
 16344                           
 16345                           ; BSR set to: 1
 16346                           
 16347                           ; BSR set to: 1
 16348  011630  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 16349  011632  D005               	goto	u24600
 16350  011634  51AE               	movf	(printf@width+1)& (0+255),w,b
 16351  011636  E1F5               	bnz	l18368
 16352  011638  05AD               	decf	printf@width& (0+255),w,b
 16353  01163A  B0D8               	btfsc	status,0,c
 16354  01163C  D7F2               	goto	l1475
 16355  01163E                     u24600:
 16356                           
 16357                           ; BSR set to: 1
 16358                           ;doprnt.c: 1183: }
 16359                           ;doprnt.c: 1188: if(flag & 0x03)
 16360                           
 16361                           ; BSR set to: 1
 16362  01163E  0E03               	movlw	3
 16363  011640  15AB               	andwf	printf@flag& (0+255),w,b
 16364  011642  6F8C               	movwf	??_printf& (0+255),b
 16365  011644  0E00               	movlw	0
 16366  011646  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16367  011648  6F8D               	movwf	(??_printf+1)& (0+255),b
 16368  01164A  518C               	movf	??_printf& (0+255),w,b
 16369  01164C  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16370  01164E  B4D8               	btfsc	status,2,c
 16371  011650  D04E               	goto	l1478
 16372                           
 16373                           ; BSR set to: 1
 16374                           ;doprnt.c: 1190: (putch('-') );
 16375  011652  0E2D               	movlw	45
 16376  011654  ECCC  F0C5         	call	_putch
 16377                           
 16378                           ;doprnt.c: 1195: }
 16379                           ;doprnt.c: 1196: while(c--) {
 16380  011658  D04A               	goto	l1478
 16381  01165A                     
 16382                           ;doprnt.c: 1200: {
 16383                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 16384  01165A  C1A7  F117         	movff	printf@val,___lldiv@dividend
 16385  01165E  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 16386  011662  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 16387  011666  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 16388  01166A  0101               	movlb	1	; () banked
 16389  01166C  51B1               	movf	printf@c& (0+255),w,b
 16390  01166E  0D04               	mullw	4
 16391  011670  0E2B               	movlw	low _dpowers
 16392  011672  24F3               	addwf	prodl,w,c
 16393  011674  6EF6               	movwf	tblptrl,c
 16394  011676  0EE9               	movlw	high _dpowers
 16395  011678  20F4               	addwfc	prodh,w,c
 16396  01167A  6EF7               	movwf	tblptrh,c
 16397  01167C                     	if	1	;There are 3 active tblptr bytes
 16398  01167C  6AF8               	clrf	tblptru,c
 16399  01167E  0E00               	movlw	low (__mediumconst shr (0+16))
 16400  011680  22F8               	addwfc	tblptru,f,c
 16401  011682                     	endif
 16402  011682  0009               	tblrd		*+
 16403  011684  CFF5 F11B          	movff	tablat,___lldiv@divisor
 16404  011688  0009               	tblrd		*+
 16405  01168A  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 16406  01168E  0009               	tblrd		*+
 16407  011690  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 16408  011694  000A               	tblrd		*-
 16409  011696  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 16410  01169A  ECA2  F0BD         	call	___lldiv	;wreg free
 16411  01169E  C117  F19D         	movff	?___lldiv,printf@tmpval
 16412  0116A2  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 16413  0116A6  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 16414  0116AA  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 16415                           
 16416                           ;doprnt.c: 1202: tmpval.vd %= 10;
 16417  0116AE  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 16418  0116B2  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 16419  0116B6  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 16420  0116BA  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 16421  0116BE  0E0A               	movlw	10
 16422  0116C0  0101               	movlb	1	; () banked
 16423  0116C2  6F28               	movwf	___llmod@divisor& (0+255),b
 16424  0116C4  0E00               	movlw	0
 16425  0116C6  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 16426  0116C8  0E00               	movlw	0
 16427  0116CA  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 16428  0116CC  0E00               	movlw	0
 16429  0116CE  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 16430  0116D0  ECF3  F0BF         	call	___llmod	;wreg free
 16431  0116D4  C124  F19D         	movff	?___llmod,printf@tmpval
 16432  0116D8  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 16433  0116DC  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 16434  0116E0  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 16435                           
 16436                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 16437  0116E4  0101               	movlb	1	; () banked
 16438  0116E6  519D               	movf	printf@tmpval& (0+255),w,b
 16439  0116E8  0F30               	addlw	48
 16440  0116EA  ECCC  F0C5         	call	_putch
 16441  0116EE                     l1478:
 16442  0116EE  0101               	movlb	1	; () banked
 16443  0116F0  07B1               	decf	printf@c& (0+255),f,b
 16444  0116F2  29B1               	incf	printf@c& (0+255),w,b
 16445  0116F4  B4D8               	btfsc	status,2,c
 16446  0116F6  D008               	goto	l1481
 16447  0116F8  D7B0               	goto	l1479
 16448  0116FA                     l18386:
 16449                           
 16450                           ; BSR set to: 1
 16451                           ;doprnt.c: 1208: (putch('0') );
 16452  0116FA  0E30               	movlw	48
 16453  0116FC  ECCC  F0C5         	call	_putch
 16454                           
 16455                           ;doprnt.c: 1209: exp--;
 16456  011700  0101               	movlb	1	; () banked
 16457  011702  07A1               	decf	printf@exp& (0+255),f,b
 16458  011704  A0D8               	btfss	status,0,c
 16459  011706  07A2               	decf	(printf@exp+1)& (0+255),f,b
 16460  011708                     l1481:
 16461                           
 16462                           ; BSR set to: 1
 16463                           
 16464                           ; BSR set to: 1
 16465  011708  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 16466  01170A  D005               	goto	u24630
 16467  01170C  51A2               	movf	(printf@exp+1)& (0+255),w,b
 16468  01170E  E1F5               	bnz	l18386
 16469  011710  05A1               	decf	printf@exp& (0+255),w,b
 16470  011712  B0D8               	btfsc	status,0,c
 16471  011714  D7F2               	goto	l1482
 16472  011716                     u24630:
 16473                           
 16474                           ; BSR set to: 1
 16475                           ;doprnt.c: 1210: }
 16476                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 16477                           
 16478                           ; BSR set to: 1
 16479  011716  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 16480  011718  D009               	goto	l1484
 16481  01171A  51B0               	movf	(printf@prec+1)& (0+255),w,b
 16482  01171C  E104               	bnz	u24640
 16483  01171E  0E09               	movlw	9
 16484  011720  5DAF               	subwf	printf@prec& (0+255),w,b
 16485  011722  A0D8               	btfss	status,0,c
 16486  011724  D003               	goto	l1484
 16487  011726                     u24640:
 16488                           
 16489                           ; BSR set to: 1
 16490                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 16491  011726  0E08               	movlw	8
 16492  011728  6FB1               	movwf	printf@c& (0+255),b
 16493  01172A  D002               	goto	l1485
 16494  01172C                     l1484:
 16495                           
 16496                           ; BSR set to: 1
 16497                           ;doprnt.c: 1213: else
 16498                           ;doprnt.c: 1214: c = prec;
 16499  01172C  C1AF  F1B1         	movff	printf@prec,printf@c
 16500  011730                     l1485:
 16501                           
 16502                           ; BSR set to: 1
 16503                           ;doprnt.c: 1215: prec -= c;
 16504                           
 16505                           ; BSR set to: 1
 16506  011730  51B1               	movf	printf@c& (0+255),w,b
 16507  011732  5FAF               	subwf	printf@prec& (0+255),f,b
 16508  011734  0E00               	movlw	0
 16509  011736  BFB1               	btfsc	printf@c& (0+255),7,b
 16510  011738  0EFF               	movlw	255
 16511  01173A  5BB0               	subwfb	(printf@prec+1)& (0+255),f,b
 16512                           
 16513                           ; BSR set to: 1
 16514                           ;doprnt.c: 1219: if(c)
 16515  01173C  51B1               	movf	printf@c& (0+255),w,b
 16516  01173E  B4D8               	btfsc	status,2,c
 16517  011740  D003               	goto	l1486
 16518                           
 16519                           ; BSR set to: 1
 16520                           ;doprnt.c: 1221: (putch('.') );
 16521  011742  0E2E               	movlw	46
 16522  011744  ECCC  F0C5         	call	_putch
 16523  011748                     l1486:
 16524                           
 16525                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 16526  011748  0101               	movlb	1	; () banked
 16527  01174A  51B1               	movf	printf@c& (0+255),w,b
 16528  01174C  EC09  F09A         	call	_scale
 16529  011750  C16F  F192         	movff	?_scale,_printf$3940
 16530  011754  C170  F193         	movff	?_scale+1,_printf$3940+1
 16531  011758  C171  F194         	movff	?_scale+2,_printf$3940+2
 16532  01175C  C172  F195         	movff	?_scale+3,_printf$3940+3
 16533                           
 16534                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 16535  011760  C1A3  F15A         	movff	printf@fval,___flmul@a
 16536  011764  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 16537  011768  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 16538  01176C  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 16539  011770  C192  F156         	movff	_printf$3940,___flmul@b
 16540  011774  C193  F157         	movff	_printf$3940+1,___flmul@b+1
 16541  011778  C194  F158         	movff	_printf$3940+2,___flmul@b+2
 16542  01177C  C195  F159         	movff	_printf$3940+3,___flmul@b+3
 16543  011780  EC4F  F0A0         	call	___flmul	;wreg free
 16544  011784  C156  F178         	movff	?___flmul,___fltol@f1
 16545  011788  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 16546  01178C  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 16547  011790  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 16548  011794  EC30  F0BA         	call	___fltol	;wreg free
 16549  011798  C178  F1A7         	movff	?___fltol,printf@val
 16550  01179C  C179  F1A8         	movff	?___fltol+1,printf@val+1
 16551  0117A0  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 16552  0117A4  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 16553                           
 16554                           ;doprnt.c: 1228: while(c--) {
 16555  0117A8  D074               	goto	l1487
 16556  0117AA                     
 16557                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 16558  0117AA  C1A7  F117         	movff	printf@val,___lldiv@dividend
 16559  0117AE  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 16560  0117B2  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 16561  0117B6  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 16562  0117BA  0101               	movlb	1	; () banked
 16563  0117BC  51B1               	movf	printf@c& (0+255),w,b
 16564  0117BE  0D04               	mullw	4
 16565  0117C0  0E2B               	movlw	low _dpowers
 16566  0117C2  24F3               	addwf	prodl,w,c
 16567  0117C4  6EF6               	movwf	tblptrl,c
 16568  0117C6  0EE9               	movlw	high _dpowers
 16569  0117C8  20F4               	addwfc	prodh,w,c
 16570  0117CA  6EF7               	movwf	tblptrh,c
 16571  0117CC                     	if	1	;There are 3 active tblptr bytes
 16572  0117CC  6AF8               	clrf	tblptru,c
 16573  0117CE  0E00               	movlw	low (__mediumconst shr (0+16))
 16574  0117D0  22F8               	addwfc	tblptru,f,c
 16575  0117D2                     	endif
 16576  0117D2  0009               	tblrd		*+
 16577  0117D4  CFF5 F11B          	movff	tablat,___lldiv@divisor
 16578  0117D8  0009               	tblrd		*+
 16579  0117DA  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 16580  0117DE  0009               	tblrd		*+
 16581  0117E0  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 16582  0117E4  000A               	tblrd		*-
 16583  0117E6  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 16584  0117EA  ECA2  F0BD         	call	___lldiv	;wreg free
 16585  0117EE  C117  F19D         	movff	?___lldiv,printf@tmpval
 16586  0117F2  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 16587  0117F6  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 16588  0117FA  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 16589                           
 16590                           ;doprnt.c: 1230: tmpval.vd %= 10;
 16591  0117FE  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 16592  011802  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 16593  011806  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 16594  01180A  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 16595  01180E  0E0A               	movlw	10
 16596  011810  0101               	movlb	1	; () banked
 16597  011812  6F28               	movwf	___llmod@divisor& (0+255),b
 16598  011814  0E00               	movlw	0
 16599  011816  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 16600  011818  0E00               	movlw	0
 16601  01181A  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 16602  01181C  0E00               	movlw	0
 16603  01181E  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 16604  011820  ECF3  F0BF         	call	___llmod	;wreg free
 16605  011824  C124  F19D         	movff	?___llmod,printf@tmpval
 16606  011828  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 16607  01182C  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 16608  011830  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 16609                           
 16610                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 16611  011834  0101               	movlb	1	; () banked
 16612  011836  519D               	movf	printf@tmpval& (0+255),w,b
 16613  011838  0F30               	addlw	48
 16614  01183A  ECCC  F0C5         	call	_putch
 16615                           
 16616                           ;doprnt.c: 1232: val %= dpowers[c];
 16617  01183E  C1A7  F124         	movff	printf@val,___llmod@dividend
 16618  011842  C1A8  F125         	movff	printf@val+1,___llmod@dividend+1
 16619  011846  C1A9  F126         	movff	printf@val+2,___llmod@dividend+2
 16620  01184A  C1AA  F127         	movff	printf@val+3,___llmod@dividend+3
 16621  01184E  0101               	movlb	1	; () banked
 16622  011850  51B1               	movf	printf@c& (0+255),w,b
 16623  011852  0D04               	mullw	4
 16624  011854  0E2B               	movlw	low _dpowers
 16625  011856  24F3               	addwf	prodl,w,c
 16626  011858  6EF6               	movwf	tblptrl,c
 16627  01185A  0EE9               	movlw	high _dpowers
 16628  01185C  20F4               	addwfc	prodh,w,c
 16629  01185E  6EF7               	movwf	tblptrh,c
 16630  011860                     	if	1	;There are 3 active tblptr bytes
 16631  011860  6AF8               	clrf	tblptru,c
 16632  011862  0E00               	movlw	low (__mediumconst shr (0+16))
 16633  011864  22F8               	addwfc	tblptru,f,c
 16634  011866                     	endif
 16635  011866  0009               	tblrd		*+
 16636  011868  CFF5 F128          	movff	tablat,___llmod@divisor
 16637  01186C  0009               	tblrd		*+
 16638  01186E  CFF5 F129          	movff	tablat,___llmod@divisor+1
 16639  011872  0009               	tblrd		*+
 16640  011874  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 16641  011878  000A               	tblrd		*-
 16642  01187A  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 16643  01187E  ECF3  F0BF         	call	___llmod	;wreg free
 16644  011882  C124  F1A7         	movff	?___llmod,printf@val
 16645  011886  C125  F1A8         	movff	?___llmod+1,printf@val+1
 16646  01188A  C126  F1A9         	movff	?___llmod+2,printf@val+2
 16647  01188E  C127  F1AA         	movff	?___llmod+3,printf@val+3
 16648  011892                     l1487:
 16649  011892  0101               	movlb	1	; () banked
 16650  011894  07B1               	decf	printf@c& (0+255),f,b
 16651  011896  29B1               	incf	printf@c& (0+255),w,b
 16652  011898  B4D8               	btfsc	status,2,c
 16653  01189A  D008               	goto	l1490
 16654  01189C  D786               	goto	l1488
 16655  01189E                     
 16656                           ; BSR set to: 1
 16657                           ;doprnt.c: 1236: (putch('0') );
 16658                           
 16659                           ; BSR set to: 1
 16660  01189E  0E30               	movlw	48
 16661  0118A0  ECCC  F0C5         	call	_putch
 16662                           
 16663                           ;doprnt.c: 1237: prec--;
 16664  0118A4  0101               	movlb	1	; () banked
 16665  0118A6  07AF               	decf	printf@prec& (0+255),f,b
 16666  0118A8  A0D8               	btfss	status,0,c
 16667  0118AA  07B0               	decf	(printf@prec+1)& (0+255),f,b
 16668  0118AC                     l1490:
 16669                           
 16670                           ; BSR set to: 1
 16671                           
 16672                           ; BSR set to: 1
 16673  0118AC  51AF               	movf	printf@prec& (0+255),w,b
 16674  0118AE  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 16675  0118B0  B4D8               	btfsc	status,2,c
 16676  0118B2  D1BE               	goto	u24920
 16677  0118B4  D7F4               	goto	l1491
 16678  0118B6                     l1444:
 16679                           
 16680                           ; BSR set to: 1
 16681                           ;doprnt.c: 1246: }
 16682                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 16683                           
 16684                           ; BSR set to: 1
 16685  0118B6  0EC0               	movlw	192
 16686  0118B8  15AB               	andwf	printf@flag& (0+255),w,b
 16687  0118BA  6F8C               	movwf	??_printf& (0+255),b
 16688  0118BC  0E00               	movlw	0
 16689  0118BE  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16690  0118C0  6F8D               	movwf	(??_printf+1)& (0+255),b
 16691  0118C2  518C               	movf	??_printf& (0+255),w,b
 16692  0118C4  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16693  0118C6  A4D8               	btfss	status,2,c
 16694  0118C8  D01E               	goto	l1493
 16695                           
 16696                           ; BSR set to: 1
 16697                           ;doprnt.c: 1253: {
 16698                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 16699  0118CA  C19B  FFD9         	movff	printf@ap,fsr2l
 16700  0118CE  C19C  FFDA         	movff	printf@ap+1,fsr2h
 16701  0118D2  CFDE F1A7          	movff	postinc2,printf@val
 16702  0118D6  CFDD F1A8          	movff	postdec2,printf@val+1
 16703  0118DA  0E00               	movlw	0
 16704  0118DC  BFA8               	btfsc	(printf@val+1)& (0+255),7,b
 16705  0118DE  0EFF               	movlw	-1
 16706  0118E0  6FA9               	movwf	(printf@val+2)& (0+255),b
 16707  0118E2  6FAA               	movwf	(printf@val+3)& (0+255),b
 16708                           
 16709                           ; BSR set to: 1
 16710  0118E4  0E02               	movlw	2
 16711  0118E6  279B               	addwf	printf@ap& (0+255),f,b
 16712  0118E8  0E00               	movlw	0
 16713  0118EA  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 16714                           
 16715                           ; BSR set to: 1
 16716                           ;doprnt.c: 1261: if((long)val < 0) {
 16717  0118EC  AFAA               	btfss	(printf@val+3)& (0+255),7,b
 16718  0118EE  D01D               	goto	l1495
 16719                           
 16720                           ; BSR set to: 1
 16721                           ;doprnt.c: 1262: flag |= 0x03;
 16722  0118F0  0E03               	movlw	3
 16723  0118F2  13AB               	iorwf	printf@flag& (0+255),f,b
 16724                           
 16725                           ; BSR set to: 1
 16726                           ;doprnt.c: 1263: val = -val;
 16727  0118F4  1FAA               	comf	(printf@val+3)& (0+255),f,b
 16728  0118F6  1FA9               	comf	(printf@val+2)& (0+255),f,b
 16729  0118F8  1FA8               	comf	(printf@val+1)& (0+255),f,b
 16730  0118FA  6DA7               	negf	printf@val& (0+255),b
 16731  0118FC  0E00               	movlw	0
 16732  0118FE  23A8               	addwfc	(printf@val+1)& (0+255),f,b
 16733  011900  23A9               	addwfc	(printf@val+2)& (0+255),f,b
 16734  011902  23AA               	addwfc	(printf@val+3)& (0+255),f,b
 16735                           
 16736                           ; BSR set to: 1
 16737                           ;doprnt.c: 1264: }
 16738                           ;doprnt.c: 1266: }
 16739  011904  D012               	goto	l1495
 16740  011906                     l1493:
 16741                           
 16742                           ; BSR set to: 1
 16743                           ;doprnt.c: 1268: else
 16744                           ;doprnt.c: 1273: {
 16745                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16746                           
 16747                           ; BSR set to: 1
 16748  011906  C19B  FFD9         	movff	printf@ap,fsr2l
 16749  01190A  C19C  FFDA         	movff	printf@ap+1,fsr2h
 16750  01190E  CFDE F18C          	movff	postinc2,??_printf
 16751  011912  CFDD F18D          	movff	postdec2,??_printf+1
 16752  011916  C18C  F1A7         	movff	??_printf,printf@val
 16753  01191A  C18D  F1A8         	movff	??_printf+1,printf@val+1
 16754  01191E  6BA9               	clrf	(printf@val+2)& (0+255),b
 16755  011920  6BAA               	clrf	(printf@val+3)& (0+255),b
 16756                           
 16757                           ; BSR set to: 1
 16758  011922  0E02               	movlw	2
 16759  011924  279B               	addwf	printf@ap& (0+255),f,b
 16760  011926  0E00               	movlw	0
 16761  011928  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 16762  01192A                     l1495:
 16763                           
 16764                           ; BSR set to: 1
 16765                           ;doprnt.c: 1287: }
 16766                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 16767                           
 16768                           ; BSR set to: 1
 16769  01192A  51AF               	movf	printf@prec& (0+255),w,b
 16770  01192C  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 16771  01192E  A4D8               	btfss	status,2,c
 16772  011930  D04B               	goto	l1497
 16773                           
 16774                           ; BSR set to: 1
 16775  011932  51A7               	movf	printf@val& (0+255),w,b
 16776  011934  11A8               	iorwf	(printf@val+1)& (0+255),w,b
 16777  011936  11A9               	iorwf	(printf@val+2)& (0+255),w,b
 16778  011938  11AA               	iorwf	(printf@val+3)& (0+255),w,b
 16779  01193A  A4D8               	btfss	status,2,c
 16780  01193C  D045               	goto	l1497
 16781                           
 16782                           ; BSR set to: 1
 16783                           ;doprnt.c: 1291: prec++;
 16784  01193E  4BAF               	infsnz	printf@prec& (0+255),f,b
 16785  011940  2BB0               	incf	(printf@prec+1)& (0+255),f,b
 16786                           
 16787                           ; BSR set to: 1
 16788                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 16789  011942  D042               	goto	l1497
 16790  011944                     
 16791                           ; BSR set to: 1
 16792                           ;doprnt.c: 1302: case 0xC0:
 16793                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16794                           
 16795                           ; BSR set to: 1
 16796                           
 16797                           ; BSR set to: 1
 16798  011944  0E01               	movlw	1
 16799  011946  6FB1               	movwf	printf@c& (0+255),b
 16800  011948                     l18446:
 16801                           
 16802                           ; BSR set to: 1
 16803  011948  0E0A               	movlw	10
 16804  01194A  19B1               	xorwf	printf@c& (0+255),w,b
 16805  01194C  B4D8               	btfsc	status,2,c
 16806  01194E  D047               	goto	l1503
 16807                           
 16808                           ; BSR set to: 1
 16809                           ;doprnt.c: 1306: if(val < dpowers[c])
 16810                           
 16811                           ; BSR set to: 1
 16812                           
 16813                           ; BSR set to: 1
 16814  011950  51B1               	movf	printf@c& (0+255),w,b
 16815  011952  0D04               	mullw	4
 16816  011954  0E2B               	movlw	low _dpowers
 16817  011956  24F3               	addwf	prodl,w,c
 16818  011958  6EF6               	movwf	tblptrl,c
 16819  01195A  0EE9               	movlw	high _dpowers
 16820  01195C  20F4               	addwfc	prodh,w,c
 16821  01195E  6EF7               	movwf	tblptrh,c
 16822  011960                     	if	1	;There are 3 active tblptr bytes
 16823  011960  6AF8               	clrf	tblptru,c
 16824  011962  0E00               	movlw	low (__mediumconst shr (0+16))
 16825  011964  22F8               	addwfc	tblptru,f,c
 16826  011966                     	endif
 16827  011966  0009               	tblrd		*+
 16828  011968  50F5               	movf	tablat,w,c
 16829  01196A  5DA7               	subwf	printf@val& (0+255),w,b
 16830  01196C  0009               	tblrd		*+
 16831  01196E  50F5               	movf	tablat,w,c
 16832  011970  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 16833  011972  0009               	tblrd		*+
 16834  011974  50F5               	movf	tablat,w,c
 16835  011976  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 16836  011978  0009               	tblrd		*+
 16837  01197A  50F5               	movf	tablat,w,c
 16838  01197C  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 16839  01197E  A0D8               	btfss	status,0,c
 16840  011980  D02E               	goto	l1503
 16841                           
 16842                           ; BSR set to: 1
 16843                           
 16844                           ; BSR set to: 1
 16845                           
 16846                           ; BSR set to: 1
 16847                           ;doprnt.c: 1307: break;
 16848  011982  2BB1               	incf	printf@c& (0+255),f,b
 16849  011984  D7E1               	goto	l18446
 16850  011986                     
 16851                           ; BSR set to: 1
 16852                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16853                           
 16854                           ; BSR set to: 1
 16855  011986  0E01               	movlw	1
 16856  011988  6FB1               	movwf	printf@c& (0+255),b
 16857  01198A                     l18460:
 16858                           
 16859                           ; BSR set to: 1
 16860  01198A  0E08               	movlw	8
 16861  01198C  19B1               	xorwf	printf@c& (0+255),w,b
 16862  01198E  B4D8               	btfsc	status,2,c
 16863  011990  D026               	goto	l1503
 16864                           
 16865                           ; BSR set to: 1
 16866                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16867                           
 16868                           ; BSR set to: 1
 16869                           
 16870                           ; BSR set to: 1
 16871  011992  51B1               	movf	printf@c& (0+255),w,b
 16872  011994  0D04               	mullw	4
 16873  011996  0E53               	movlw	low _hexpowers
 16874  011998  24F3               	addwf	prodl,w,c
 16875  01199A  6EF6               	movwf	tblptrl,c
 16876  01199C  0EE9               	movlw	high _hexpowers
 16877  01199E  20F4               	addwfc	prodh,w,c
 16878  0119A0  6EF7               	movwf	tblptrh,c
 16879  0119A2                     	if	1	;There are 3 active tblptr bytes
 16880  0119A2  6AF8               	clrf	tblptru,c
 16881  0119A4  0E00               	movlw	low (__mediumconst shr (0+16))
 16882  0119A6  22F8               	addwfc	tblptru,f,c
 16883  0119A8                     	endif
 16884  0119A8  0009               	tblrd		*+
 16885  0119AA  50F5               	movf	tablat,w,c
 16886  0119AC  5DA7               	subwf	printf@val& (0+255),w,b
 16887  0119AE  0009               	tblrd		*+
 16888  0119B0  50F5               	movf	tablat,w,c
 16889  0119B2  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 16890  0119B4  0009               	tblrd		*+
 16891  0119B6  50F5               	movf	tablat,w,c
 16892  0119B8  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 16893  0119BA  0009               	tblrd		*+
 16894  0119BC  50F5               	movf	tablat,w,c
 16895  0119BE  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 16896  0119C0  A0D8               	btfss	status,0,c
 16897  0119C2  D00D               	goto	l1503
 16898                           
 16899                           ; BSR set to: 1
 16900                           
 16901                           ; BSR set to: 1
 16902                           
 16903                           ; BSR set to: 1
 16904                           ;doprnt.c: 1318: break;
 16905  0119C4  2BB1               	incf	printf@c& (0+255),f,b
 16906  0119C6  D7E1               	goto	l18460
 16907  0119C8                     l1497:
 16908                           
 16909                           ; BSR set to: 1
 16910                           
 16911                           ; BSR set to: 1
 16912  0119C8  51AB               	movf	printf@flag& (0+255),w,b
 16913  0119CA  0BC0               	andlw	192
 16914                           
 16915                           ; Switch size 1, requested type "space"
 16916                           ; Number of cases is 3, Range of values is 0 to 192
 16917                           ; switch strategies available:
 16918                           ; Name         Instructions Cycles
 16919                           ; simple_byte           10     6 (average)
 16920                           ;	Chosen strategy is simple_byte
 16921  0119CC  0A00               	xorlw	0	; case 0
 16922  0119CE  B4D8               	btfsc	status,2,c
 16923  0119D0  D7B9               	goto	l1498
 16924  0119D2  0A80               	xorlw	128	; case 128
 16925  0119D4  B4D8               	btfsc	status,2,c
 16926  0119D6  D7D7               	goto	l1504
 16927  0119D8  0A40               	xorlw	64	; case 192
 16928  0119DA  B4D8               	btfsc	status,2,c
 16929  0119DC  D7B3               	goto	l1498
 16930  0119DE                     l1503:
 16931                           
 16932                           ; BSR set to: 1
 16933                           ;doprnt.c: 1339: if(c < prec)
 16934                           
 16935                           ; BSR set to: 1
 16936  0119DE  0E80               	movlw	128
 16937  0119E0  BFB1               	btfsc	printf@c& (0+255),7,b
 16938  0119E2  0E7F               	movlw	127
 16939  0119E4  6F8C               	movwf	??_printf& (0+255),b
 16940  0119E6  51AF               	movf	printf@prec& (0+255),w,b
 16941  0119E8  5DB1               	subwf	printf@c& (0+255),w,b
 16942  0119EA  51B0               	movf	(printf@prec+1)& (0+255),w,b
 16943  0119EC  0A80               	xorlw	128
 16944  0119EE  598C               	subwfb	??_printf& (0+255),w,b
 16945  0119F0  B0D8               	btfsc	status,0,c
 16946  0119F2  D003               	goto	l1508
 16947                           
 16948                           ; BSR set to: 1
 16949                           ;doprnt.c: 1340: c = prec;
 16950  0119F4  C1AF  F1B1         	movff	printf@prec,printf@c
 16951  0119F8  D010               	goto	l1510
 16952  0119FA                     l1508:
 16953                           
 16954                           ; BSR set to: 1
 16955                           ;doprnt.c: 1341: else if(prec < c)
 16956                           
 16957                           ; BSR set to: 1
 16958  0119FA  51B0               	movf	(printf@prec+1)& (0+255),w,b
 16959  0119FC  0A80               	xorlw	128
 16960  0119FE  6F8C               	movwf	??_printf& (0+255),b
 16961  011A00  51B1               	movf	printf@c& (0+255),w,b
 16962  011A02  5DAF               	subwf	printf@prec& (0+255),w,b
 16963  011A04  0E80               	movlw	128
 16964  011A06  BFB1               	btfsc	printf@c& (0+255),7,b
 16965  011A08  0E7F               	movlw	127
 16966  011A0A  598C               	subwfb	??_printf& (0+255),w,b
 16967  011A0C  B0D8               	btfsc	status,0,c
 16968  011A0E  D005               	goto	l1510
 16969                           
 16970                           ; BSR set to: 1
 16971                           ;doprnt.c: 1342: prec = c;
 16972  011A10  51B1               	movf	printf@c& (0+255),w,b
 16973  011A12  6FAF               	movwf	printf@prec& (0+255),b
 16974  011A14  6BB0               	clrf	(printf@prec+1)& (0+255),b
 16975  011A16  BFAF               	btfsc	printf@prec& (0+255),7,b
 16976  011A18  07B0               	decf	(printf@prec+1)& (0+255),f,b
 16977  011A1A                     l1510:
 16978                           
 16979                           ; BSR set to: 1
 16980                           ;doprnt.c: 1345: if(width && flag & 0x03)
 16981                           
 16982                           ; BSR set to: 1
 16983                           
 16984                           ; BSR set to: 1
 16985  011A1A  51AD               	movf	printf@width& (0+255),w,b
 16986  011A1C  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 16987  011A1E  B4D8               	btfsc	status,2,c
 16988  011A20  D00D               	goto	l1511
 16989                           
 16990                           ; BSR set to: 1
 16991  011A22  0E03               	movlw	3
 16992  011A24  15AB               	andwf	printf@flag& (0+255),w,b
 16993  011A26  6F8C               	movwf	??_printf& (0+255),b
 16994  011A28  0E00               	movlw	0
 16995  011A2A  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 16996  011A2C  6F8D               	movwf	(??_printf+1)& (0+255),b
 16997  011A2E  518C               	movf	??_printf& (0+255),w,b
 16998  011A30  118D               	iorwf	(??_printf+1)& (0+255),w,b
 16999  011A32  B4D8               	btfsc	status,2,c
 17000  011A34  D003               	goto	l1511
 17001                           
 17002                           ; BSR set to: 1
 17003                           ;doprnt.c: 1346: width--;
 17004  011A36  07AD               	decf	printf@width& (0+255),f,b
 17005  011A38  A0D8               	btfss	status,0,c
 17006  011A3A  07AE               	decf	(printf@width+1)& (0+255),f,b
 17007  011A3C                     l1511:
 17008                           
 17009                           ; BSR set to: 1
 17010                           ;doprnt.c: 1348: if(flag & 0x4000) {
 17011                           
 17012                           ; BSR set to: 1
 17013  011A3C  ADAC               	btfss	(printf@flag+1)& (0+255),6,b
 17014  011A3E  D013               	goto	l1514
 17015                           
 17016                           ; BSR set to: 1
 17017                           ;doprnt.c: 1349: if(width > prec)
 17018  011A40  51AD               	movf	printf@width& (0+255),w,b
 17019  011A42  5DAF               	subwf	printf@prec& (0+255),w,b
 17020  011A44  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17021  011A46  0A80               	xorlw	128
 17022  011A48  6F8C               	movwf	??_printf& (0+255),b
 17023  011A4A  51AE               	movf	(printf@width+1)& (0+255),w,b
 17024  011A4C  0A80               	xorlw	128
 17025  011A4E  598C               	subwfb	??_printf& (0+255),w,b
 17026  011A50  B0D8               	btfsc	status,0,c
 17027  011A52  D005               	goto	l1513
 17028                           
 17029                           ; BSR set to: 1
 17030                           ;doprnt.c: 1350: width -= prec;
 17031  011A54  51AF               	movf	printf@prec& (0+255),w,b
 17032  011A56  5FAD               	subwf	printf@width& (0+255),f,b
 17033  011A58  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17034  011A5A  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 17035  011A5C  D004               	goto	l1514
 17036  011A5E                     l1513:
 17037                           
 17038                           ; BSR set to: 1
 17039                           ;doprnt.c: 1351: else
 17040                           ;doprnt.c: 1352: width = 0;
 17041                           
 17042                           ; BSR set to: 1
 17043  011A5E  0E00               	movlw	0
 17044  011A60  6FAE               	movwf	(printf@width+1)& (0+255),b
 17045  011A62  0E00               	movlw	0
 17046  011A64  6FAD               	movwf	printf@width& (0+255),b
 17047  011A66                     l1514:
 17048                           
 17049                           ; BSR set to: 1
 17050                           ;doprnt.c: 1353: }
 17051                           ;doprnt.c: 1381: if(width > c)
 17052                           
 17053                           ; BSR set to: 1
 17054                           
 17055                           ; BSR set to: 1
 17056  011A66  0E80               	movlw	128
 17057  011A68  BFB1               	btfsc	printf@c& (0+255),7,b
 17058  011A6A  0E7F               	movlw	127
 17059  011A6C  6F8C               	movwf	??_printf& (0+255),b
 17060  011A6E  51AD               	movf	printf@width& (0+255),w,b
 17061  011A70  5DB1               	subwf	printf@c& (0+255),w,b
 17062  011A72  51AE               	movf	(printf@width+1)& (0+255),w,b
 17063  011A74  0A80               	xorlw	128
 17064  011A76  598C               	subwfb	??_printf& (0+255),w,b
 17065  011A78  B0D8               	btfsc	status,0,c
 17066  011A7A  D007               	goto	l1515
 17067                           
 17068                           ; BSR set to: 1
 17069                           ;doprnt.c: 1382: width -= c;
 17070  011A7C  51B1               	movf	printf@c& (0+255),w,b
 17071  011A7E  5FAD               	subwf	printf@width& (0+255),f,b
 17072  011A80  0E00               	movlw	0
 17073  011A82  BFB1               	btfsc	printf@c& (0+255),7,b
 17074  011A84  0EFF               	movlw	255
 17075  011A86  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 17076  011A88  D004               	goto	l1516
 17077  011A8A                     l1515:
 17078                           
 17079                           ; BSR set to: 1
 17080                           ;doprnt.c: 1383: else
 17081                           ;doprnt.c: 1384: width = 0;
 17082                           
 17083                           ; BSR set to: 1
 17084  011A8A  0E00               	movlw	0
 17085  011A8C  6FAE               	movwf	(printf@width+1)& (0+255),b
 17086  011A8E  0E00               	movlw	0
 17087  011A90  6FAD               	movwf	printf@width& (0+255),b
 17088  011A92                     l1516:
 17089                           
 17090                           ; BSR set to: 1
 17091                           ;doprnt.c: 1387: if(flag & 0x04) {
 17092                           
 17093                           ; BSR set to: 1
 17094  011A92  A5AB               	btfss	printf@flag& (0+255),2,b
 17095  011A94  D01A               	goto	l1517
 17096                           
 17097                           ; BSR set to: 1
 17098                           ;doprnt.c: 1392: if(flag & 0x03)
 17099  011A96  0E03               	movlw	3
 17100  011A98  15AB               	andwf	printf@flag& (0+255),w,b
 17101  011A9A  6F8C               	movwf	??_printf& (0+255),b
 17102  011A9C  0E00               	movlw	0
 17103  011A9E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17104  011AA0  6F8D               	movwf	(??_printf+1)& (0+255),b
 17105  011AA2  518C               	movf	??_printf& (0+255),w,b
 17106  011AA4  118D               	iorwf	(??_printf+1)& (0+255),w,b
 17107  011AA6  B4D8               	btfsc	status,2,c
 17108  011AA8  D003               	goto	l1518
 17109                           
 17110                           ; BSR set to: 1
 17111                           ;doprnt.c: 1393: (putch('-') );
 17112  011AAA  0E2D               	movlw	45
 17113  011AAC  ECCC  F0C5         	call	_putch
 17114  011AB0                     l1518:
 17115                           
 17116                           ;doprnt.c: 1415: if(width)
 17117  011AB0  0101               	movlb	1	; () banked
 17118  011AB2  51AD               	movf	printf@width& (0+255),w,b
 17119  011AB4  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 17120  011AB6  B4D8               	btfsc	status,2,c
 17121  011AB8  D0B2               	goto	l1527
 17122                           
 17123                           ; BSR set to: 1
 17124                           ;doprnt.c: 1417: (putch('0') );
 17125                           
 17126                           ; BSR set to: 1
 17127                           
 17128                           ;doprnt.c: 1416: do
 17129  011ABA  0E30               	movlw	48
 17130  011ABC  ECCC  F0C5         	call	_putch
 17131                           
 17132                           ;doprnt.c: 1418: while(--width);
 17133  011AC0  0101               	movlb	1	; () banked
 17134  011AC2  07AD               	decf	printf@width& (0+255),f,b
 17135  011AC4  A0D8               	btfss	status,0,c
 17136  011AC6  07AE               	decf	(printf@width+1)& (0+255),f,b
 17137  011AC8  D7F4               	goto	L25
 17138  011ACA                     l1517:
 17139                           
 17140                           ; BSR set to: 1
 17141                           ;doprnt.c: 1422: {
 17142                           ;doprnt.c: 1424: if(width
 17143                           ;doprnt.c: 1428: )
 17144                           
 17145                           ; BSR set to: 1
 17146  011ACA  51AD               	movf	printf@width& (0+255),w,b
 17147  011ACC  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 17148  011ACE  B4D8               	btfsc	status,2,c
 17149  011AD0  D00B               	goto	u24900
 17150  011AD2                     u24890:
 17151                           
 17152                           ; BSR set to: 1
 17153                           ;doprnt.c: 1430: (putch(' ') );
 17154                           
 17155                           ; BSR set to: 1
 17156                           
 17157                           ;doprnt.c: 1429: do
 17158  011AD2  0E20               	movlw	32
 17159  011AD4  ECCC  F0C5         	call	_putch
 17160                           
 17161                           ;doprnt.c: 1431: while(--width);
 17162  011AD8  0101               	movlb	1	; () banked
 17163  011ADA  07AD               	decf	printf@width& (0+255),f,b
 17164  011ADC  A0D8               	btfss	status,0,c
 17165  011ADE  07AE               	decf	(printf@width+1)& (0+255),f,b
 17166  011AE0  51AD               	movf	printf@width& (0+255),w,b
 17167  011AE2  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 17168  011AE4  A4D8               	btfss	status,2,c
 17169  011AE6  D7F5               	goto	u24890
 17170  011AE8                     u24900:
 17171                           
 17172                           ; BSR set to: 1
 17173                           ;doprnt.c: 1438: if(flag & 0x03)
 17174                           
 17175                           ; BSR set to: 1
 17176                           
 17177                           ; BSR set to: 1
 17178  011AE8  0E03               	movlw	3
 17179  011AEA  15AB               	andwf	printf@flag& (0+255),w,b
 17180  011AEC  6F8C               	movwf	??_printf& (0+255),b
 17181  011AEE  0E00               	movlw	0
 17182  011AF0  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17183  011AF2  6F8D               	movwf	(??_printf+1)& (0+255),b
 17184  011AF4  518C               	movf	??_printf& (0+255),w,b
 17185  011AF6  118D               	iorwf	(??_printf+1)& (0+255),w,b
 17186  011AF8  B4D8               	btfsc	status,2,c
 17187  011AFA  D091               	goto	l1527
 17188                           
 17189                           ; BSR set to: 1
 17190                           ;doprnt.c: 1439: (putch('-') );
 17191  011AFC  0E2D               	movlw	45
 17192  011AFE  ECCC  F0C5         	call	_putch
 17193                           
 17194                           ;doprnt.c: 1469: }
 17195                           ;doprnt.c: 1474: while(prec--) {
 17196  011B02  D08D               	goto	l1527
 17197  011B04                     
 17198                           ;doprnt.c: 1486: case 0xC0:
 17199                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 17200  011B04  C1AF  F18C         	movff	printf@prec,??_printf
 17201  011B08  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 17202  011B0C  0101               	movlb	1	; () banked
 17203  011B0E  90D8               	bcf	status,0,c
 17204  011B10  378C               	rlcf	??_printf& (0+255),f,b
 17205  011B12  378D               	rlcf	(??_printf+1)& (0+255),f,b
 17206  011B14  90D8               	bcf	status,0,c
 17207  011B16  378C               	rlcf	??_printf& (0+255),f,b
 17208  011B18  378D               	rlcf	(??_printf+1)& (0+255),f,b
 17209  011B1A  0E2B               	movlw	low _dpowers
 17210  011B1C  258C               	addwf	??_printf& (0+255),w,b
 17211  011B1E  6EF6               	movwf	tblptrl,c
 17212  011B20  0EE9               	movlw	high _dpowers
 17213  011B22  218D               	addwfc	(??_printf+1)& (0+255),w,b
 17214  011B24  6EF7               	movwf	tblptrh,c
 17215  011B26                     	if	1	;There are 3 active tblptr bytes
 17216  011B26  6AF8               	clrf	tblptru,c
 17217  011B28  0E00               	movlw	low (__mediumconst shr (0+16))
 17218  011B2A  22F8               	addwfc	tblptru,f,c
 17219  011B2C                     	endif
 17220  011B2C  0009               	tblrd		*+
 17221  011B2E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 17222  011B32  0009               	tblrd		*+
 17223  011B34  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 17224  011B38  0009               	tblrd		*+
 17225  011B3A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 17226  011B3E  000A               	tblrd		*-
 17227  011B40  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 17228  011B44  C1A7  F117         	movff	printf@val,___lldiv@dividend
 17229  011B48  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 17230  011B4C  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 17231  011B50  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 17232  011B54  ECA2  F0BD         	call	___lldiv	;wreg free
 17233  011B58  C117  F124         	movff	?___lldiv,___llmod@dividend
 17234  011B5C  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 17235  011B60  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 17236  011B64  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 17237  011B68  0E0A               	movlw	10
 17238  011B6A  0101               	movlb	1	; () banked
 17239  011B6C  6F28               	movwf	___llmod@divisor& (0+255),b
 17240  011B6E  0E00               	movlw	0
 17241  011B70  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 17242  011B72  0E00               	movlw	0
 17243  011B74  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 17244  011B76  0E00               	movlw	0
 17245  011B78  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 17246  011B7A  ECF3  F0BF         	call	___llmod	;wreg free
 17247  011B7E  0101               	movlb	1	; () banked
 17248  011B80  5124               	movf	?___llmod& (0+255),w,b
 17249  011B82  0F30               	addlw	48
 17250  011B84  6FB1               	movwf	printf@c& (0+255),b
 17251                           
 17252                           ;doprnt.c: 1491: break;
 17253  011B86  D048               	goto	l1532
 17254  011B88                     
 17255                           ; BSR set to: 1
 17256                           ;doprnt.c: 1499: {
 17257                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 17258                           
 17259                           ; BSR set to: 1
 17260  011B88  C1A7  F117         	movff	printf@val,___lldiv@dividend
 17261  011B8C  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 17262  011B90  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 17263  011B94  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 17264  011B98  C1AF  F18C         	movff	printf@prec,??_printf
 17265  011B9C  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 17266  011BA0  90D8               	bcf	status,0,c
 17267  011BA2  378C               	rlcf	??_printf& (0+255),f,b
 17268  011BA4  378D               	rlcf	(??_printf+1)& (0+255),f,b
 17269  011BA6  90D8               	bcf	status,0,c
 17270  011BA8  378C               	rlcf	??_printf& (0+255),f,b
 17271  011BAA  378D               	rlcf	(??_printf+1)& (0+255),f,b
 17272  011BAC  0E53               	movlw	low _hexpowers
 17273  011BAE  258C               	addwf	??_printf& (0+255),w,b
 17274  011BB0  6EF6               	movwf	tblptrl,c
 17275  011BB2  0EE9               	movlw	high _hexpowers
 17276  011BB4  218D               	addwfc	(??_printf+1)& (0+255),w,b
 17277  011BB6  6EF7               	movwf	tblptrh,c
 17278  011BB8                     	if	1	;There are 3 active tblptr bytes
 17279  011BB8  6AF8               	clrf	tblptru,c
 17280  011BBA  0E00               	movlw	low (__mediumconst shr (0+16))
 17281  011BBC  22F8               	addwfc	tblptru,f,c
 17282  011BBE                     	endif
 17283  011BBE  0009               	tblrd		*+
 17284  011BC0  CFF5 F11B          	movff	tablat,___lldiv@divisor
 17285  011BC4  0009               	tblrd		*+
 17286  011BC6  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 17287  011BCA  0009               	tblrd		*+
 17288  011BCC  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 17289  011BD0  000A               	tblrd		*-
 17290  011BD2  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 17291  011BD6  ECA2  F0BD         	call	___lldiv	;wreg free
 17292  011BDA  0101               	movlb	1	; () banked
 17293  011BDC  5117               	movf	?___lldiv& (0+255),w,b
 17294  011BDE  0B0F               	andlw	15
 17295  011BE0  6F96               	movwf	printf@idx& (0+255),b
 17296                           
 17297                           ; BSR set to: 1
 17298                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 17299  011BE2  5196               	movf	printf@idx& (0+255),w,b
 17300  011BE4  0D01               	mullw	1
 17301  011BE6  0EAF               	movlw	low STR_145
 17302  011BE8  24F3               	addwf	prodl,w,c
 17303  011BEA  6EF6               	movwf	tblptrl,c
 17304  011BEC  0EFD               	movlw	high STR_145
 17305  011BEE  20F4               	addwfc	prodh,w,c
 17306  011BF0  6EF7               	movwf	tblptrh,c
 17307  011BF2                     	if	1	;There are 3 active tblptr bytes
 17308  011BF2  6AF8               	clrf	tblptru,c
 17309  011BF4  0E00               	movlw	low (__mediumconst shr (0+16))
 17310  011BF6  22F8               	addwfc	tblptru,f,c
 17311  011BF8                     	endif
 17312  011BF8  0008               	tblrd		*
 17313  011BFA  CFF5 F1B1          	movff	tablat,printf@c
 17314                           
 17315                           ; BSR set to: 1
 17316                           ;doprnt.c: 1523: }
 17317                           
 17318                           ;doprnt.c: 1508: }
 17319                           ;doprnt.c: 1510: break;
 17320  011BFE  D00C               	goto	l1532
 17321  011C00                     l18534:
 17322  011C00  0101               	movlb	1	; () banked
 17323  011C02  51AB               	movf	printf@flag& (0+255),w,b
 17324  011C04  0BC0               	andlw	192
 17325                           
 17326                           ; Switch size 1, requested type "space"
 17327                           ; Number of cases is 3, Range of values is 0 to 192
 17328                           ; switch strategies available:
 17329                           ; Name         Instructions Cycles
 17330                           ; simple_byte           10     6 (average)
 17331                           ;	Chosen strategy is simple_byte
 17332  011C06  0A00               	xorlw	0	; case 0
 17333  011C08  B4D8               	btfsc	status,2,c
 17334  011C0A  D77C               	goto	l1530
 17335  011C0C  0A80               	xorlw	128	; case 128
 17336  011C0E  B4D8               	btfsc	status,2,c
 17337  011C10  D7BB               	goto	l1533
 17338  011C12  0A40               	xorlw	64	; case 192
 17339  011C14  B4D8               	btfsc	status,2,c
 17340  011C16  D776               	goto	l1530
 17341  011C18                     l1532:
 17342                           
 17343                           ; BSR set to: 1
 17344                           ;doprnt.c: 1524: (putch(c) );
 17345                           
 17346                           ; BSR set to: 1
 17347  011C18  51B1               	movf	printf@c& (0+255),w,b
 17348  011C1A  ECCC  F0C5         	call	_putch
 17349  011C1E                     l1527:
 17350  011C1E  0101               	movlb	1	; () banked
 17351  011C20  07AF               	decf	printf@prec& (0+255),f,b
 17352  011C22  A0D8               	btfss	status,0,c
 17353  011C24  07B0               	decf	(printf@prec+1)& (0+255),f,b
 17354  011C26  29AF               	incf	printf@prec& (0+255),w,b
 17355  011C28  E1EB               	bnz	l18534
 17356  011C2A  29B0               	incf	(printf@prec+1)& (0+255),w,b
 17357  011C2C  A4D8               	btfss	status,2,c
 17358  011C2E  D7E8               	goto	l1529
 17359  011C30                     u24920:
 17360                           
 17361                           ; BSR set to: 1
 17362                           
 17363                           ; BSR set to: 1
 17364  011C30  0101               	movlb	1	; () banked
 17365  011C32  5182               	movf	printf@f& (0+255),w,b
 17366  011C34  6F8C               	movwf	??_printf& (0+255),b
 17367  011C36  5183               	movf	(printf@f+1)& (0+255),w,b
 17368  011C38  6F8D               	movwf	(??_printf+1)& (0+255),b
 17369  011C3A  4B82               	infsnz	printf@f& (0+255),f,b
 17370  011C3C  2B83               	incf	(printf@f+1)& (0+255),f,b
 17371  011C3E  C18C  FFF6         	movff	??_printf,tblptrl
 17372  011C42  C18D  FFF7         	movff	??_printf+1,tblptrh
 17373  011C46  0E00               	movlw	low (__mediumconst shr (0+16))
 17374  011C48  6EF8               	movwf	tblptru,c
 17375  011C4A  0E0D               	movlw	(high __ramtop+-1)
 17376  011C4C  64F7               	cpfsgt	tblptrh,c
 17377  011C4E  D003               	bra	u24937
 17378  011C50  0008               	tblrd		*
 17379  011C52  50F5               	movf	tablat,w,c
 17380  011C54  D005               	bra	u24930
 17381  011C56                     u24937:
 17382  011C56  CFF6 FFE9          	movff	tblptrl,fsr0l
 17383  011C5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17384  011C5E  50EF               	movf	indf0,w,c
 17385  011C60                     u24930:
 17386  011C60  0101               	movlb	1	; () banked
 17387  011C62  6FB1               	movwf	printf@c& (0+255),b
 17388  011C64  51B1               	movf	printf@c& (0+255),w,b
 17389  011C66  B4D8               	btfsc	status,2,c
 17390  011C68  0012               	return	
 17391  011C6A  EF57  F087         	goto	l1401
 17392  011C6E                     __end_of_printf:
 17393                           	opt stack 0
 17394                           tblptru	equ	0xFF8
 17395                           tblptrh	equ	0xFF7
 17396                           tblptrl	equ	0xFF6
 17397                           tablat	equ	0xFF5
 17398                           prodh	equ	0xFF4
 17399                           prodl	equ	0xFF3
 17400                           intcon	equ	0xFF2
 17401                           indf0	equ	0xFEF
 17402                           postinc0	equ	0xFEE
 17403                           fsr0h	equ	0xFEA
 17404                           fsr0l	equ	0xFE9
 17405                           wreg	equ	0xFE8
 17406                           indf1	equ	0xFE7
 17407                           postdec1	equ	0xFE5
 17408                           plusw1	equ	0xFE3
 17409                           fsr1h	equ	0xFE2
 17410                           fsr1l	equ	0xFE1
 17411                           indf2	equ	0xFDF
 17412                           postinc2	equ	0xFDE
 17413                           postdec2	equ	0xFDD
 17414                           plusw2	equ	0xFDB
 17415                           fsr2h	equ	0xFDA
 17416                           fsr2l	equ	0xFD9
 17417                           status	equ	0xFD8
 17418                           
 17419 ;; *************** function _scale *****************
 17420 ;; Defined at:
 17421 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 17422 ;; Parameters:    Size  Location     Type
 17423 ;;  scl             1    wreg     char 
 17424 ;; Auto vars:     Size  Location     Type
 17425 ;;  scl             1  119[BANK1 ] char 
 17426 ;; Return value:  Size  Location     Type
 17427 ;;                  4  111[BANK1 ] char 
 17428 ;; Registers used:
 17429 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17430 ;; Tracked objects:
 17431 ;;		On entry : 0/0
 17432 ;;		On exit  : 0/0
 17433 ;;		Unchanged: 0/0
 17434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17435 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17436 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17438 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17439 ;;Total ram usage:        9 bytes
 17440 ;; Hardware stack levels used:    1
 17441 ;; Hardware stack levels required when called:   14
 17442 ;; This function calls:
 17443 ;;		___awdiv
 17444 ;;		___awmod
 17445 ;;		___flmul
 17446 ;; This function is called by:
 17447 ;;		_printf
 17448 ;; This function uses a non-reentrant model
 17449 ;;
 17450                           
 17451                           	psect	text33
 17452  013412                     __ptext33:
 17453                           	opt stack 0
 17454  013412                     _scale:
 17455                           	opt stack 13
 17456                           
 17457                           ; BSR set to: 1
 17458                           ;incstack = 0
 17459                           ;scale@scl stored from wreg
 17460  013412  0101               	movlb	1	; () banked
 17461  013414  6F77               	movwf	scale@scl& (0+255),b
 17462                           
 17463                           ;doprnt.c: 428: if(scl < 0) {
 17464  013416  0101               	movlb	1	; () banked
 17465  013418  AF77               	btfss	scale@scl& (0+255),7,b
 17466  01341A  D127               	goto	l1390
 17467                           
 17468                           ; BSR set to: 1
 17469                           ;doprnt.c: 429: scl = -scl;
 17470  01341C  6D77               	negf	scale@scl& (0+255),b
 17471                           
 17472                           ;doprnt.c: 430: if(scl>=110)
 17473  01341E  5177               	movf	scale@scl& (0+255),w,b
 17474  013420  0A80               	xorlw	128
 17475  013422  0F12               	addlw	-238
 17476  013424  A0D8               	btfss	status,0,c
 17477  013426  D0A5               	goto	l1391
 17478                           
 17479                           ; BSR set to: 1
 17480                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17481  013428  0E00               	movlw	0
 17482  01342A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17483  01342C  0E0A               	movlw	10
 17484  01342E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17485  013430  0E00               	movlw	0
 17486  013432  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17487  013434  0E64               	movlw	100
 17488  013436  6F19               	movwf	___awmod@divisor& (0+255),b
 17489  013438  5177               	movf	scale@scl& (0+255),w,b
 17490  01343A  6F17               	movwf	___awmod@dividend& (0+255),b
 17491  01343C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17492  01343E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17493  013440  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17494  013442  ECE2  F0BE         	call	___awmod	;wreg free
 17495  013446  C117  F11D         	movff	?___awmod,___awdiv@dividend
 17496  01344A  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 17497  01344E  EC5F  F0BD         	call	___awdiv	;wreg free
 17498  013452  0101               	movlb	1	; () banked
 17499  013454  90D8               	bcf	status,0,c
 17500  013456  371D               	rlcf	?___awdiv& (0+255),f,b
 17501  013458  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17502  01345A  90D8               	bcf	status,0,c
 17503  01345C  371D               	rlcf	?___awdiv& (0+255),f,b
 17504  01345E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17505  013460  0E24               	movlw	36
 17506  013462  271D               	addwf	?___awdiv& (0+255),f,b
 17507  013464  0E00               	movlw	0
 17508  013466  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17509  013468  0EF7               	movlw	low __npowers_
 17510  01346A  251D               	addwf	?___awdiv& (0+255),w,b
 17511  01346C  6EF6               	movwf	tblptrl,c
 17512  01346E  0EE8               	movlw	high __npowers_
 17513  013470  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17514  013472  6EF7               	movwf	tblptrh,c
 17515  013474                     	if	1	;There are 3 active tblptr bytes
 17516  013474  6AF8               	clrf	tblptru,c
 17517  013476  0E00               	movlw	low (__mediumconst shr (0+16))
 17518  013478  22F8               	addwfc	tblptru,f,c
 17519  01347A                     	endif
 17520  01347A  0009               	tblrd		*+
 17521  01347C  CFF5 F15A          	movff	tablat,___flmul@a
 17522  013480  0009               	tblrd		*+
 17523  013482  CFF5 F15B          	movff	tablat,___flmul@a+1
 17524  013486  0009               	tblrd		*+
 17525  013488  CFF5 F15C          	movff	tablat,___flmul@a+2
 17526  01348C  000A               	tblrd		*-
 17527  01348E  CFF5 F15D          	movff	tablat,___flmul@a+3
 17528  013492  0E00               	movlw	0
 17529  013494  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17530  013496  0E64               	movlw	100
 17531  013498  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17532  01349A  5177               	movf	scale@scl& (0+255),w,b
 17533  01349C  6F1D               	movwf	___awdiv@dividend& (0+255),b
 17534  01349E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17535  0134A0  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 17536  0134A2  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 17537  0134A4  EC5F  F0BD         	call	___awdiv	;wreg free
 17538  0134A8  0101               	movlb	1	; () banked
 17539  0134AA  90D8               	bcf	status,0,c
 17540  0134AC  371D               	rlcf	?___awdiv& (0+255),f,b
 17541  0134AE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17542  0134B0  90D8               	bcf	status,0,c
 17543  0134B2  371D               	rlcf	?___awdiv& (0+255),f,b
 17544  0134B4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17545  0134B6  0E48               	movlw	72
 17546  0134B8  271D               	addwf	?___awdiv& (0+255),f,b
 17547  0134BA  0E00               	movlw	0
 17548  0134BC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17549  0134BE  0EF7               	movlw	low __npowers_
 17550  0134C0  251D               	addwf	?___awdiv& (0+255),w,b
 17551  0134C2  6EF6               	movwf	tblptrl,c
 17552  0134C4  0EE8               	movlw	high __npowers_
 17553  0134C6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17554  0134C8  6EF7               	movwf	tblptrh,c
 17555  0134CA                     	if	1	;There are 3 active tblptr bytes
 17556  0134CA  6AF8               	clrf	tblptru,c
 17557  0134CC  0E00               	movlw	low (__mediumconst shr (0+16))
 17558  0134CE  22F8               	addwfc	tblptru,f,c
 17559  0134D0                     	endif
 17560  0134D0  0009               	tblrd		*+
 17561  0134D2  CFF5 F156          	movff	tablat,___flmul@b
 17562  0134D6  0009               	tblrd		*+
 17563  0134D8  CFF5 F157          	movff	tablat,___flmul@b+1
 17564  0134DC  0009               	tblrd		*+
 17565  0134DE  CFF5 F158          	movff	tablat,___flmul@b+2
 17566  0134E2  000A               	tblrd		*-
 17567  0134E4  CFF5 F159          	movff	tablat,___flmul@b+3
 17568  0134E8  EC4F  F0A0         	call	___flmul	;wreg free
 17569  0134EC  C156  F173         	movff	?___flmul,_scale$3939
 17570  0134F0  C157  F174         	movff	?___flmul+1,_scale$3939+1
 17571  0134F4  C158  F175         	movff	?___flmul+2,_scale$3939+2
 17572  0134F8  C159  F176         	movff	?___flmul+3,_scale$3939+3
 17573                           
 17574                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17575  0134FC  C173  F156         	movff	_scale$3939,___flmul@b
 17576  013500  C174  F157         	movff	_scale$3939+1,___flmul@b+1
 17577  013504  C175  F158         	movff	_scale$3939+2,___flmul@b+2
 17578  013508  C176  F159         	movff	_scale$3939+3,___flmul@b+3
 17579  01350C  0E00               	movlw	0
 17580  01350E  0101               	movlb	1	; () banked
 17581  013510  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17582  013512  0E0A               	movlw	10
 17583  013514  6F19               	movwf	___awmod@divisor& (0+255),b
 17584  013516  5177               	movf	scale@scl& (0+255),w,b
 17585  013518  6F17               	movwf	___awmod@dividend& (0+255),b
 17586  01351A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17587  01351C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17588  01351E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17589  013520  ECE2  F0BE         	call	___awmod	;wreg free
 17590  013524  0101               	movlb	1	; () banked
 17591  013526  90D8               	bcf	status,0,c
 17592  013528  3717               	rlcf	?___awmod& (0+255),f,b
 17593  01352A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17594  01352C  90D8               	bcf	status,0,c
 17595  01352E  3717               	rlcf	?___awmod& (0+255),f,b
 17596  013530  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17597  013532  0EF7               	movlw	low __npowers_
 17598  013534  2517               	addwf	?___awmod& (0+255),w,b
 17599  013536  6EF6               	movwf	tblptrl,c
 17600  013538  0EE8               	movlw	high __npowers_
 17601  01353A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 17602  01353C  6EF7               	movwf	tblptrh,c
 17603  01353E                     	if	1	;There are 3 active tblptr bytes
 17604  01353E  6AF8               	clrf	tblptru,c
 17605  013540  0E00               	movlw	low (__mediumconst shr (0+16))
 17606  013542  22F8               	addwfc	tblptru,f,c
 17607  013544                     	endif
 17608  013544  0009               	tblrd		*+
 17609  013546  CFF5 F15A          	movff	tablat,___flmul@a
 17610  01354A  0009               	tblrd		*+
 17611  01354C  CFF5 F15B          	movff	tablat,___flmul@a+1
 17612  013550  0009               	tblrd		*+
 17613  013552  CFF5 F15C          	movff	tablat,___flmul@a+2
 17614  013556  000A               	tblrd		*-
 17615  013558  CFF5 F15D          	movff	tablat,___flmul@a+3
 17616  01355C  EC4F  F0A0         	call	___flmul	;wreg free
 17617  013560  C156  F16F         	movff	?___flmul,?_scale
 17618  013564  C157  F170         	movff	?___flmul+1,?_scale+1
 17619  013568  C158  F171         	movff	?___flmul+2,?_scale+2
 17620  01356C  C159  F172         	movff	?___flmul+3,?_scale+3
 17621  013570  0012               	return	
 17622  013572                     l1391:
 17623                           
 17624                           ;doprnt.c: 432: else if(scl > 10)
 17625  013572  0101               	movlb	1	; () banked
 17626  013574  5177               	movf	scale@scl& (0+255),w,b
 17627  013576  0A80               	xorlw	128
 17628  013578  0F75               	addlw	-139
 17629  01357A  A0D8               	btfss	status,0,c
 17630  01357C  D05D               	goto	l1394
 17631                           
 17632                           ; BSR set to: 1
 17633                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 17634  01357E  0E00               	movlw	0
 17635  013580  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17636  013582  0E0A               	movlw	10
 17637  013584  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17638  013586  5177               	movf	scale@scl& (0+255),w,b
 17639  013588  6F1D               	movwf	___awdiv@dividend& (0+255),b
 17640  01358A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17641  01358C  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 17642  01358E  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 17643  013590  EC5F  F0BD         	call	___awdiv	;wreg free
 17644  013594  0101               	movlb	1	; () banked
 17645  013596  90D8               	bcf	status,0,c
 17646  013598  371D               	rlcf	?___awdiv& (0+255),f,b
 17647  01359A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17648  01359C  90D8               	bcf	status,0,c
 17649  01359E  371D               	rlcf	?___awdiv& (0+255),f,b
 17650  0135A0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17651  0135A2  0E24               	movlw	36
 17652  0135A4  271D               	addwf	?___awdiv& (0+255),f,b
 17653  0135A6  0E00               	movlw	0
 17654  0135A8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17655  0135AA  0EF7               	movlw	low __npowers_
 17656  0135AC  251D               	addwf	?___awdiv& (0+255),w,b
 17657  0135AE  6EF6               	movwf	tblptrl,c
 17658  0135B0  0EE8               	movlw	high __npowers_
 17659  0135B2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17660  0135B4  6EF7               	movwf	tblptrh,c
 17661  0135B6                     	if	1	;There are 3 active tblptr bytes
 17662  0135B6  6AF8               	clrf	tblptru,c
 17663  0135B8  0E00               	movlw	low (__mediumconst shr (0+16))
 17664  0135BA  22F8               	addwfc	tblptru,f,c
 17665  0135BC                     	endif
 17666  0135BC  0009               	tblrd		*+
 17667  0135BE  CFF5 F156          	movff	tablat,___flmul@b
 17668  0135C2  0009               	tblrd		*+
 17669  0135C4  CFF5 F157          	movff	tablat,___flmul@b+1
 17670  0135C8  0009               	tblrd		*+
 17671  0135CA  CFF5 F158          	movff	tablat,___flmul@b+2
 17672  0135CE  000A               	tblrd		*-
 17673  0135D0  CFF5 F159          	movff	tablat,___flmul@b+3
 17674  0135D4  0E00               	movlw	0
 17675  0135D6  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17676  0135D8  0E0A               	movlw	10
 17677  0135DA  6F19               	movwf	___awmod@divisor& (0+255),b
 17678  0135DC  5177               	movf	scale@scl& (0+255),w,b
 17679  0135DE  6F17               	movwf	___awmod@dividend& (0+255),b
 17680  0135E0  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17681  0135E2  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17682  0135E4  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17683  0135E6  ECE2  F0BE         	call	___awmod	;wreg free
 17684  0135EA  0101               	movlb	1	; () banked
 17685  0135EC  90D8               	bcf	status,0,c
 17686  0135EE  3717               	rlcf	?___awmod& (0+255),f,b
 17687  0135F0  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17688  0135F2  90D8               	bcf	status,0,c
 17689  0135F4  3717               	rlcf	?___awmod& (0+255),f,b
 17690  0135F6  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17691  0135F8  0EF7               	movlw	low __npowers_
 17692  0135FA  2517               	addwf	?___awmod& (0+255),w,b
 17693  0135FC  6EF6               	movwf	tblptrl,c
 17694  0135FE  0EE8               	movlw	high __npowers_
 17695  013600  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 17696  013602  6EF7               	movwf	tblptrh,c
 17697  013604                     	if	1	;There are 3 active tblptr bytes
 17698  013604  6AF8               	clrf	tblptru,c
 17699  013606  0E00               	movlw	low (__mediumconst shr (0+16))
 17700  013608  22F8               	addwfc	tblptru,f,c
 17701  01360A                     	endif
 17702  01360A  0009               	tblrd		*+
 17703  01360C  CFF5 F15A          	movff	tablat,___flmul@a
 17704  013610  0009               	tblrd		*+
 17705  013612  CFF5 F15B          	movff	tablat,___flmul@a+1
 17706  013616  0009               	tblrd		*+
 17707  013618  CFF5 F15C          	movff	tablat,___flmul@a+2
 17708  01361C  000A               	tblrd		*-
 17709  01361E  CFF5 F15D          	movff	tablat,___flmul@a+3
 17710  013622  EC4F  F0A0         	call	___flmul	;wreg free
 17711  013626  C156  F16F         	movff	?___flmul,?_scale
 17712  01362A  C157  F170         	movff	?___flmul+1,?_scale+1
 17713  01362E  C158  F171         	movff	?___flmul+2,?_scale+2
 17714  013632  C159  F172         	movff	?___flmul+3,?_scale+3
 17715  013636  0012               	return	
 17716  013638                     l1394:
 17717                           
 17718                           ;doprnt.c: 434: return _npowers_[scl];
 17719  013638  0101               	movlb	1	; () banked
 17720  01363A  5177               	movf	scale@scl& (0+255),w,b
 17721  01363C  0D04               	mullw	4
 17722  01363E  0EF7               	movlw	low __npowers_
 17723  013640  24F3               	addwf	prodl,w,c
 17724  013642  6EF6               	movwf	tblptrl,c
 17725  013644  0EE8               	movlw	high __npowers_
 17726  013646  20F4               	addwfc	prodh,w,c
 17727  013648  6EF7               	movwf	tblptrh,c
 17728  01364A                     	if	1	;There are 3 active tblptr bytes
 17729  01364A  6AF8               	clrf	tblptru,c
 17730  01364C  0E00               	movlw	low (__mediumconst shr (0+16))
 17731  01364E  22F8               	addwfc	tblptru,f,c
 17732  013650                     	endif
 17733  013650  0009               	tblrd		*+
 17734  013652  CFF5 F16F          	movff	tablat,?_scale
 17735  013656  0009               	tblrd		*+
 17736  013658  CFF5 F170          	movff	tablat,?_scale+1
 17737  01365C  0009               	tblrd		*+
 17738  01365E  CFF5 F171          	movff	tablat,?_scale+2
 17739  013662  000A               	tblrd		*-
 17740  013664  CFF5 F172          	movff	tablat,?_scale+3
 17741                           
 17742                           ; BSR set to: 1
 17743  013668  0012               	return	
 17744  01366A                     l1390:
 17745                           
 17746                           ; BSR set to: 1
 17747                           ;doprnt.c: 435: }
 17748                           ;doprnt.c: 436: if(scl>=110)
 17749                           
 17750                           ; BSR set to: 1
 17751  01366A  5177               	movf	scale@scl& (0+255),w,b
 17752  01366C  0A80               	xorlw	128
 17753  01366E  0F12               	addlw	-238
 17754  013670  A0D8               	btfss	status,0,c
 17755  013672  D0A5               	goto	l1395
 17756                           
 17757                           ; BSR set to: 1
 17758                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 17759  013674  0E00               	movlw	0
 17760  013676  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17761  013678  0E0A               	movlw	10
 17762  01367A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17763  01367C  0E00               	movlw	0
 17764  01367E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17765  013680  0E64               	movlw	100
 17766  013682  6F19               	movwf	___awmod@divisor& (0+255),b
 17767  013684  5177               	movf	scale@scl& (0+255),w,b
 17768  013686  6F17               	movwf	___awmod@dividend& (0+255),b
 17769  013688  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17770  01368A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17771  01368C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17772  01368E  ECE2  F0BE         	call	___awmod	;wreg free
 17773  013692  C117  F11D         	movff	?___awmod,___awdiv@dividend
 17774  013696  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 17775  01369A  EC5F  F0BD         	call	___awdiv	;wreg free
 17776  01369E  0101               	movlb	1	; () banked
 17777  0136A0  90D8               	bcf	status,0,c
 17778  0136A2  371D               	rlcf	?___awdiv& (0+255),f,b
 17779  0136A4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17780  0136A6  90D8               	bcf	status,0,c
 17781  0136A8  371D               	rlcf	?___awdiv& (0+255),f,b
 17782  0136AA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17783  0136AC  0E24               	movlw	36
 17784  0136AE  271D               	addwf	?___awdiv& (0+255),f,b
 17785  0136B0  0E00               	movlw	0
 17786  0136B2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17787  0136B4  0EC3               	movlw	low __powers_
 17788  0136B6  251D               	addwf	?___awdiv& (0+255),w,b
 17789  0136B8  6EF6               	movwf	tblptrl,c
 17790  0136BA  0EE8               	movlw	high __powers_
 17791  0136BC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17792  0136BE  6EF7               	movwf	tblptrh,c
 17793  0136C0                     	if	1	;There are 3 active tblptr bytes
 17794  0136C0  6AF8               	clrf	tblptru,c
 17795  0136C2  0E00               	movlw	low (__mediumconst shr (0+16))
 17796  0136C4  22F8               	addwfc	tblptru,f,c
 17797  0136C6                     	endif
 17798  0136C6  0009               	tblrd		*+
 17799  0136C8  CFF5 F15A          	movff	tablat,___flmul@a
 17800  0136CC  0009               	tblrd		*+
 17801  0136CE  CFF5 F15B          	movff	tablat,___flmul@a+1
 17802  0136D2  0009               	tblrd		*+
 17803  0136D4  CFF5 F15C          	movff	tablat,___flmul@a+2
 17804  0136D8  000A               	tblrd		*-
 17805  0136DA  CFF5 F15D          	movff	tablat,___flmul@a+3
 17806  0136DE  0E00               	movlw	0
 17807  0136E0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17808  0136E2  0E64               	movlw	100
 17809  0136E4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17810  0136E6  5177               	movf	scale@scl& (0+255),w,b
 17811  0136E8  6F1D               	movwf	___awdiv@dividend& (0+255),b
 17812  0136EA  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17813  0136EC  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 17814  0136EE  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 17815  0136F0  EC5F  F0BD         	call	___awdiv	;wreg free
 17816  0136F4  0101               	movlb	1	; () banked
 17817  0136F6  90D8               	bcf	status,0,c
 17818  0136F8  371D               	rlcf	?___awdiv& (0+255),f,b
 17819  0136FA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17820  0136FC  90D8               	bcf	status,0,c
 17821  0136FE  371D               	rlcf	?___awdiv& (0+255),f,b
 17822  013700  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17823  013702  0E48               	movlw	72
 17824  013704  271D               	addwf	?___awdiv& (0+255),f,b
 17825  013706  0E00               	movlw	0
 17826  013708  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17827  01370A  0EC3               	movlw	low __powers_
 17828  01370C  251D               	addwf	?___awdiv& (0+255),w,b
 17829  01370E  6EF6               	movwf	tblptrl,c
 17830  013710  0EE8               	movlw	high __powers_
 17831  013712  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17832  013714  6EF7               	movwf	tblptrh,c
 17833  013716                     	if	1	;There are 3 active tblptr bytes
 17834  013716  6AF8               	clrf	tblptru,c
 17835  013718  0E00               	movlw	low (__mediumconst shr (0+16))
 17836  01371A  22F8               	addwfc	tblptru,f,c
 17837  01371C                     	endif
 17838  01371C  0009               	tblrd		*+
 17839  01371E  CFF5 F156          	movff	tablat,___flmul@b
 17840  013722  0009               	tblrd		*+
 17841  013724  CFF5 F157          	movff	tablat,___flmul@b+1
 17842  013728  0009               	tblrd		*+
 17843  01372A  CFF5 F158          	movff	tablat,___flmul@b+2
 17844  01372E  000A               	tblrd		*-
 17845  013730  CFF5 F159          	movff	tablat,___flmul@b+3
 17846  013734  EC4F  F0A0         	call	___flmul	;wreg free
 17847  013738  C156  F173         	movff	?___flmul,_scale$3939
 17848  01373C  C157  F174         	movff	?___flmul+1,_scale$3939+1
 17849  013740  C158  F175         	movff	?___flmul+2,_scale$3939+2
 17850  013744  C159  F176         	movff	?___flmul+3,_scale$3939+3
 17851                           
 17852                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 17853  013748  C173  F156         	movff	_scale$3939,___flmul@b
 17854  01374C  C174  F157         	movff	_scale$3939+1,___flmul@b+1
 17855  013750  C175  F158         	movff	_scale$3939+2,___flmul@b+2
 17856  013754  C176  F159         	movff	_scale$3939+3,___flmul@b+3
 17857  013758  0E00               	movlw	0
 17858  01375A  0101               	movlb	1	; () banked
 17859  01375C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17860  01375E  0E0A               	movlw	10
 17861  013760  6F19               	movwf	___awmod@divisor& (0+255),b
 17862  013762  5177               	movf	scale@scl& (0+255),w,b
 17863  013764  6F17               	movwf	___awmod@dividend& (0+255),b
 17864  013766  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17865  013768  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17866  01376A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17867  01376C  ECE2  F0BE         	call	___awmod	;wreg free
 17868  013770  0101               	movlb	1	; () banked
 17869  013772  90D8               	bcf	status,0,c
 17870  013774  3717               	rlcf	?___awmod& (0+255),f,b
 17871  013776  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17872  013778  90D8               	bcf	status,0,c
 17873  01377A  3717               	rlcf	?___awmod& (0+255),f,b
 17874  01377C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17875  01377E  0EC3               	movlw	low __powers_
 17876  013780  2517               	addwf	?___awmod& (0+255),w,b
 17877  013782  6EF6               	movwf	tblptrl,c
 17878  013784  0EE8               	movlw	high __powers_
 17879  013786  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 17880  013788  6EF7               	movwf	tblptrh,c
 17881  01378A                     	if	1	;There are 3 active tblptr bytes
 17882  01378A  6AF8               	clrf	tblptru,c
 17883  01378C  0E00               	movlw	low (__mediumconst shr (0+16))
 17884  01378E  22F8               	addwfc	tblptru,f,c
 17885  013790                     	endif
 17886  013790  0009               	tblrd		*+
 17887  013792  CFF5 F15A          	movff	tablat,___flmul@a
 17888  013796  0009               	tblrd		*+
 17889  013798  CFF5 F15B          	movff	tablat,___flmul@a+1
 17890  01379C  0009               	tblrd		*+
 17891  01379E  CFF5 F15C          	movff	tablat,___flmul@a+2
 17892  0137A2  000A               	tblrd		*-
 17893  0137A4  CFF5 F15D          	movff	tablat,___flmul@a+3
 17894  0137A8  EC4F  F0A0         	call	___flmul	;wreg free
 17895  0137AC  C156  F16F         	movff	?___flmul,?_scale
 17896  0137B0  C157  F170         	movff	?___flmul+1,?_scale+1
 17897  0137B4  C158  F171         	movff	?___flmul+2,?_scale+2
 17898  0137B8  C159  F172         	movff	?___flmul+3,?_scale+3
 17899  0137BC  0012               	return	
 17900  0137BE                     l1395:
 17901                           
 17902                           ;doprnt.c: 438: else if(scl > 10)
 17903  0137BE  0101               	movlb	1	; () banked
 17904  0137C0  5177               	movf	scale@scl& (0+255),w,b
 17905  0137C2  0A80               	xorlw	128
 17906  0137C4  0F75               	addlw	-139
 17907  0137C6  A0D8               	btfss	status,0,c
 17908  0137C8  D05D               	goto	l1397
 17909                           
 17910                           ; BSR set to: 1
 17911                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 17912  0137CA  0E00               	movlw	0
 17913  0137CC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17914  0137CE  0E0A               	movlw	10
 17915  0137D0  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17916  0137D2  5177               	movf	scale@scl& (0+255),w,b
 17917  0137D4  6F1D               	movwf	___awdiv@dividend& (0+255),b
 17918  0137D6  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17919  0137D8  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 17920  0137DA  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 17921  0137DC  EC5F  F0BD         	call	___awdiv	;wreg free
 17922  0137E0  0101               	movlb	1	; () banked
 17923  0137E2  90D8               	bcf	status,0,c
 17924  0137E4  371D               	rlcf	?___awdiv& (0+255),f,b
 17925  0137E6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17926  0137E8  90D8               	bcf	status,0,c
 17927  0137EA  371D               	rlcf	?___awdiv& (0+255),f,b
 17928  0137EC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 17929  0137EE  0E24               	movlw	36
 17930  0137F0  271D               	addwf	?___awdiv& (0+255),f,b
 17931  0137F2  0E00               	movlw	0
 17932  0137F4  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 17933  0137F6  0EC3               	movlw	low __powers_
 17934  0137F8  251D               	addwf	?___awdiv& (0+255),w,b
 17935  0137FA  6EF6               	movwf	tblptrl,c
 17936  0137FC  0EE8               	movlw	high __powers_
 17937  0137FE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17938  013800  6EF7               	movwf	tblptrh,c
 17939  013802                     	if	1	;There are 3 active tblptr bytes
 17940  013802  6AF8               	clrf	tblptru,c
 17941  013804  0E00               	movlw	low (__mediumconst shr (0+16))
 17942  013806  22F8               	addwfc	tblptru,f,c
 17943  013808                     	endif
 17944  013808  0009               	tblrd		*+
 17945  01380A  CFF5 F156          	movff	tablat,___flmul@b
 17946  01380E  0009               	tblrd		*+
 17947  013810  CFF5 F157          	movff	tablat,___flmul@b+1
 17948  013814  0009               	tblrd		*+
 17949  013816  CFF5 F158          	movff	tablat,___flmul@b+2
 17950  01381A  000A               	tblrd		*-
 17951  01381C  CFF5 F159          	movff	tablat,___flmul@b+3
 17952  013820  0E00               	movlw	0
 17953  013822  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17954  013824  0E0A               	movlw	10
 17955  013826  6F19               	movwf	___awmod@divisor& (0+255),b
 17956  013828  5177               	movf	scale@scl& (0+255),w,b
 17957  01382A  6F17               	movwf	___awmod@dividend& (0+255),b
 17958  01382C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17959  01382E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 17960  013830  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 17961  013832  ECE2  F0BE         	call	___awmod	;wreg free
 17962  013836  0101               	movlb	1	; () banked
 17963  013838  90D8               	bcf	status,0,c
 17964  01383A  3717               	rlcf	?___awmod& (0+255),f,b
 17965  01383C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17966  01383E  90D8               	bcf	status,0,c
 17967  013840  3717               	rlcf	?___awmod& (0+255),f,b
 17968  013842  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 17969  013844  0EC3               	movlw	low __powers_
 17970  013846  2517               	addwf	?___awmod& (0+255),w,b
 17971  013848  6EF6               	movwf	tblptrl,c
 17972  01384A  0EE8               	movlw	high __powers_
 17973  01384C  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 17974  01384E  6EF7               	movwf	tblptrh,c
 17975  013850                     	if	1	;There are 3 active tblptr bytes
 17976  013850  6AF8               	clrf	tblptru,c
 17977  013852  0E00               	movlw	low (__mediumconst shr (0+16))
 17978  013854  22F8               	addwfc	tblptru,f,c
 17979  013856                     	endif
 17980  013856  0009               	tblrd		*+
 17981  013858  CFF5 F15A          	movff	tablat,___flmul@a
 17982  01385C  0009               	tblrd		*+
 17983  01385E  CFF5 F15B          	movff	tablat,___flmul@a+1
 17984  013862  0009               	tblrd		*+
 17985  013864  CFF5 F15C          	movff	tablat,___flmul@a+2
 17986  013868  000A               	tblrd		*-
 17987  01386A  CFF5 F15D          	movff	tablat,___flmul@a+3
 17988  01386E  EC4F  F0A0         	call	___flmul	;wreg free
 17989  013872  C156  F16F         	movff	?___flmul,?_scale
 17990  013876  C157  F170         	movff	?___flmul+1,?_scale+1
 17991  01387A  C158  F171         	movff	?___flmul+2,?_scale+2
 17992  01387E  C159  F172         	movff	?___flmul+3,?_scale+3
 17993  013882  0012               	return	
 17994  013884                     l1397:
 17995                           
 17996                           ;doprnt.c: 440: return _powers_[scl];
 17997  013884  0101               	movlb	1	; () banked
 17998  013886  5177               	movf	scale@scl& (0+255),w,b
 17999  013888  0D04               	mullw	4
 18000  01388A  0EC3               	movlw	low __powers_
 18001  01388C  24F3               	addwf	prodl,w,c
 18002  01388E  6EF6               	movwf	tblptrl,c
 18003  013890  0EE8               	movlw	high __powers_
 18004  013892  20F4               	addwfc	prodh,w,c
 18005  013894  6EF7               	movwf	tblptrh,c
 18006  013896                     	if	1	;There are 3 active tblptr bytes
 18007  013896  6AF8               	clrf	tblptru,c
 18008  013898  0E00               	movlw	low (__mediumconst shr (0+16))
 18009  01389A  22F8               	addwfc	tblptru,f,c
 18010  01389C                     	endif
 18011  01389C  0009               	tblrd		*+
 18012  01389E  CFF5 F16F          	movff	tablat,?_scale
 18013  0138A2  0009               	tblrd		*+
 18014  0138A4  CFF5 F170          	movff	tablat,?_scale+1
 18015  0138A8  0009               	tblrd		*+
 18016  0138AA  CFF5 F171          	movff	tablat,?_scale+2
 18017  0138AE  000A               	tblrd		*-
 18018  0138B0  CFF5 F172          	movff	tablat,?_scale+3
 18019  0138B4  0012               	return	
 18020  0138B6                     __end_of_scale:
 18021                           	opt stack 0
 18022                           tblptru	equ	0xFF8
 18023                           tblptrh	equ	0xFF7
 18024                           tblptrl	equ	0xFF6
 18025                           tablat	equ	0xFF5
 18026                           prodh	equ	0xFF4
 18027                           prodl	equ	0xFF3
 18028                           intcon	equ	0xFF2
 18029                           indf0	equ	0xFEF
 18030                           postinc0	equ	0xFEE
 18031                           fsr0h	equ	0xFEA
 18032                           fsr0l	equ	0xFE9
 18033                           wreg	equ	0xFE8
 18034                           indf1	equ	0xFE7
 18035                           postdec1	equ	0xFE5
 18036                           plusw1	equ	0xFE3
 18037                           fsr1h	equ	0xFE2
 18038                           fsr1l	equ	0xFE1
 18039                           indf2	equ	0xFDF
 18040                           postinc2	equ	0xFDE
 18041                           postdec2	equ	0xFDD
 18042                           plusw2	equ	0xFDB
 18043                           fsr2h	equ	0xFDA
 18044                           fsr2l	equ	0xFD9
 18045                           status	equ	0xFD8
 18046                           
 18047 ;; *************** function _putch *****************
 18048 ;; Defined at:
 18049 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 18050 ;; Parameters:    Size  Location     Type
 18051 ;;  txData          1    wreg     unsigned char 
 18052 ;; Auto vars:     Size  Location     Type
 18053 ;;  txData          1   24[BANK1 ] unsigned char 
 18054 ;; Return value:  Size  Location     Type
 18055 ;;                  1    wreg      void 
 18056 ;; Registers used:
 18057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18058 ;; Tracked objects:
 18059 ;;		On entry : 0/0
 18060 ;;		On exit  : 0/0
 18061 ;;		Unchanged: 0/0
 18062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18064 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18066 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18067 ;;Total ram usage:        1 bytes
 18068 ;; Hardware stack levels used:    1
 18069 ;; Hardware stack levels required when called:   14
 18070 ;; This function calls:
 18071 ;;		_EUSART2_Write
 18072 ;; This function is called by:
 18073 ;;		_printf
 18074 ;; This function uses a non-reentrant model
 18075 ;;
 18076                           
 18077                           	psect	text34
 18078  018B98                     __ptext34:
 18079                           	opt stack 0
 18080  018B98                     _putch:
 18081                           	opt stack 13
 18082                           
 18083                           ;incstack = 0
 18084                           ;putch@txData stored from wreg
 18085  018B98  0101               	movlb	1	; () banked
 18086  018B9A  6F18               	movwf	putch@txData& (0+255),b
 18087                           
 18088                           ;eusart2.c: 195: EUSART2_Write(txData);
 18089  018B9C  0101               	movlb	1	; () banked
 18090  018B9E  5118               	movf	putch@txData& (0+255),w,b
 18091  018BA0  ECD5  F0C1         	call	_EUSART2_Write
 18092  018BA4  0012               	return		;funcret
 18093  018BA6                     __end_of_putch:
 18094                           	opt stack 0
 18095                           tblptru	equ	0xFF8
 18096                           tblptrh	equ	0xFF7
 18097                           tblptrl	equ	0xFF6
 18098                           tablat	equ	0xFF5
 18099                           prodh	equ	0xFF4
 18100                           prodl	equ	0xFF3
 18101                           intcon	equ	0xFF2
 18102                           indf0	equ	0xFEF
 18103                           postinc0	equ	0xFEE
 18104                           fsr0h	equ	0xFEA
 18105                           fsr0l	equ	0xFE9
 18106                           wreg	equ	0xFE8
 18107                           indf1	equ	0xFE7
 18108                           postdec1	equ	0xFE5
 18109                           plusw1	equ	0xFE3
 18110                           fsr1h	equ	0xFE2
 18111                           fsr1l	equ	0xFE1
 18112                           indf2	equ	0xFDF
 18113                           postinc2	equ	0xFDE
 18114                           postdec2	equ	0xFDD
 18115                           plusw2	equ	0xFDB
 18116                           fsr2h	equ	0xFDA
 18117                           fsr2l	equ	0xFD9
 18118                           status	equ	0xFD8
 18119                           
 18120 ;; *************** function _EUSART2_Write *****************
 18121 ;; Defined at:
 18122 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;  txData          1    wreg     unsigned char 
 18125 ;; Auto vars:     Size  Location     Type
 18126 ;;  txData          1   23[BANK1 ] unsigned char 
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  1    wreg      void 
 18129 ;; Registers used:
 18130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/0
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18137 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18139 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18140 ;;Total ram usage:        1 bytes
 18141 ;; Hardware stack levels used:    1
 18142 ;; Hardware stack levels required when called:   13
 18143 ;; This function calls:
 18144 ;;		Nothing
 18145 ;; This function is called by:
 18146 ;;		_putch
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           	psect	text35
 18151  0183AA                     __ptext35:
 18152                           	opt stack 0
 18153  0183AA                     _EUSART2_Write:
 18154                           	opt stack 13
 18155                           
 18156                           ;incstack = 0
 18157                           ;EUSART2_Write@txData stored from wreg
 18158  0183AA  0101               	movlb	1	; () banked
 18159  0183AC  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 18160                           
 18161                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 18162  0183AE  D002               	goto	l388
 18163  0183B0                     l389:
 18164                           
 18165                           ; BSR set to: 1
 18166  0183B0  0004               	clrwdt		;# 
 18167                           
 18168                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 18169  0183B2  827E               	bsf	3966,1,c	;volatile
 18170  0183B4                     l388:
 18171  0183B4  0101               	movlb	1	; () banked
 18172  0183B6  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 18173  0183B8  B4D8               	btfsc	status,2,c
 18174  0183BA  D7FA               	goto	l389
 18175                           
 18176                           ; BSR set to: 1
 18177                           ;eusart2.c: 167: }
 18178                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 18179  0183BC  927E               	bcf	3966,1,c	;volatile
 18180                           
 18181                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 18182  0183BE  010E               	movlb	14	; () banked
 18183  0183C0  BD2C               	btfsc	44,6,b	;volatile
 18184  0183C2  D003               	goto	l391
 18185                           
 18186                           ; BSR set to: 14
 18187                           ;eusart2.c: 172: {
 18188                           ;eusart2.c: 173: TX2REG = txData;
 18189  0183C4  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 18190                           
 18191                           ;eusart2.c: 174: }
 18192  0183C8  D013               	goto	l392
 18193  0183CA                     l391:
 18194                           
 18195                           ; BSR set to: 14
 18196                           ;eusart2.c: 175: else
 18197                           ;eusart2.c: 176: {
 18198                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 18199  0183CA  9D2C               	bcf	44,6,b	;volatile
 18200                           
 18201                           ; BSR set to: 14
 18202                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 18203  0183CC  0101               	movlb	1	; () banked
 18204  0183CE  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 18205  0183D0  0D01               	mullw	1
 18206  0183D2  0E00               	movlw	low _eusart2TxBuffer
 18207  0183D4  24F3               	addwf	prodl,w,c
 18208  0183D6  6ED9               	movwf	fsr2l,c
 18209  0183D8  0E03               	movlw	high _eusart2TxBuffer
 18210  0183DA  20F4               	addwfc	prodh,w,c
 18211  0183DC  6EDA               	movwf	fsr2h,c
 18212  0183DE  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 18213                           
 18214                           ; BSR set to: 1
 18215  0183E2  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 18216                           
 18217                           ; BSR set to: 1
 18218                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 18219  0183E4  0E7F               	movlw	127
 18220  0183E6  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 18221  0183E8  D002               	goto	l393
 18222                           
 18223                           ; BSR set to: 1
 18224                           ;eusart2.c: 180: {
 18225                           ;eusart2.c: 181: eusart2TxHead = 0;
 18226  0183EA  0E00               	movlw	0
 18227  0183EC  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 18228  0183EE                     l393:
 18229                           
 18230                           ; BSR set to: 1
 18231                           ;eusart2.c: 182: }
 18232                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 18233                           
 18234                           ; BSR set to: 1
 18235  0183EE  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 18236  0183F0                     l392:
 18237                           
 18238                           ;eusart2.c: 184: }
 18239                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 18240                           
 18241                           ; BSR set to: 1
 18242  0183F0  010E               	movlb	14	; () banked
 18243  0183F2  8D2C               	bsf	44,6,b	;volatile
 18244                           
 18245                           ; BSR set to: 14
 18246  0183F4  0012               	return		;funcret
 18247  0183F6                     __end_of_EUSART2_Write:
 18248                           	opt stack 0
 18249                           tblptru	equ	0xFF8
 18250                           tblptrh	equ	0xFF7
 18251                           tblptrl	equ	0xFF6
 18252                           tablat	equ	0xFF5
 18253                           prodh	equ	0xFF4
 18254                           prodl	equ	0xFF3
 18255                           intcon	equ	0xFF2
 18256                           indf0	equ	0xFEF
 18257                           postinc0	equ	0xFEE
 18258                           fsr0h	equ	0xFEA
 18259                           fsr0l	equ	0xFE9
 18260                           wreg	equ	0xFE8
 18261                           indf1	equ	0xFE7
 18262                           postdec1	equ	0xFE5
 18263                           plusw1	equ	0xFE3
 18264                           fsr1h	equ	0xFE2
 18265                           fsr1l	equ	0xFE1
 18266                           indf2	equ	0xFDF
 18267                           postinc2	equ	0xFDE
 18268                           postdec2	equ	0xFDD
 18269                           plusw2	equ	0xFDB
 18270                           fsr2h	equ	0xFDA
 18271                           fsr2l	equ	0xFD9
 18272                           status	equ	0xFD8
 18273                           
 18274 ;; *************** function _isdigit *****************
 18275 ;; Defined at:
 18276 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 18277 ;; Parameters:    Size  Location     Type
 18278 ;;  c               1    wreg     unsigned char 
 18279 ;; Auto vars:     Size  Location     Type
 18280 ;;  c               1   25[BANK1 ] unsigned char 
 18281 ;; Return value:  Size  Location     Type
 18282 ;;		None               void
 18283 ;; Registers used:
 18284 ;;		wreg, status,2, status,0
 18285 ;; Tracked objects:
 18286 ;;		On entry : 0/0
 18287 ;;		On exit  : 0/0
 18288 ;;		Unchanged: 0/0
 18289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18291 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18292 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18293 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18294 ;;Total ram usage:        3 bytes
 18295 ;; Hardware stack levels used:    1
 18296 ;; Hardware stack levels required when called:   13
 18297 ;; This function calls:
 18298 ;;		Nothing
 18299 ;; This function is called by:
 18300 ;;		_printf
 18301 ;;		_atoi
 18302 ;; This function uses a non-reentrant model
 18303 ;;
 18304                           
 18305                           	psect	text36
 18306  018A10                     __ptext36:
 18307                           	opt stack 0
 18308  018A10                     _isdigit:
 18309                           	opt stack 14
 18310                           
 18311                           ; BSR set to: 14
 18312                           ;incstack = 0
 18313                           ;isdigit@c stored from wreg
 18314  018A10  0101               	movlb	1	; () banked
 18315  018A12  6F19               	movwf	isdigit@c& (0+255),b
 18316  018A14  0E00               	movlw	0
 18317  018A16  0101               	movlb	1	; () banked
 18318  018A18  6F18               	movwf	_isdigit$3225& (0+255),b
 18319                           
 18320                           ; BSR set to: 1
 18321  018A1A  0E3A               	movlw	58
 18322  018A1C  6119               	cpfslt	isdigit@c& (0+255),b
 18323  018A1E  D005               	goto	l1968
 18324                           
 18325                           ; BSR set to: 1
 18326  018A20  0E2F               	movlw	47
 18327  018A22  6519               	cpfsgt	isdigit@c& (0+255),b
 18328  018A24  D002               	goto	l1968
 18329                           
 18330                           ; BSR set to: 1
 18331  018A26  0E01               	movlw	1
 18332  018A28  6F18               	movwf	_isdigit$3225& (0+255),b
 18333  018A2A                     l1968:
 18334                           
 18335                           ; BSR set to: 1
 18336                           
 18337                           ; BSR set to: 1
 18338  018A2A  C118  F117         	movff	_isdigit$3225,??_isdigit
 18339  018A2E  3117               	rrcf	??_isdigit& (0+255),w,b
 18340  018A30  0012               	return	
 18341  018A32                     __end_of_isdigit:
 18342                           	opt stack 0
 18343                           tblptru	equ	0xFF8
 18344                           tblptrh	equ	0xFF7
 18345                           tblptrl	equ	0xFF6
 18346                           tablat	equ	0xFF5
 18347                           prodh	equ	0xFF4
 18348                           prodl	equ	0xFF3
 18349                           intcon	equ	0xFF2
 18350                           indf0	equ	0xFEF
 18351                           postinc0	equ	0xFEE
 18352                           fsr0h	equ	0xFEA
 18353                           fsr0l	equ	0xFE9
 18354                           wreg	equ	0xFE8
 18355                           indf1	equ	0xFE7
 18356                           postdec1	equ	0xFE5
 18357                           plusw1	equ	0xFE3
 18358                           fsr1h	equ	0xFE2
 18359                           fsr1l	equ	0xFE1
 18360                           indf2	equ	0xFDF
 18361                           postinc2	equ	0xFDE
 18362                           postdec2	equ	0xFDD
 18363                           plusw2	equ	0xFDB
 18364                           fsr2h	equ	0xFDA
 18365                           fsr2l	equ	0xFD9
 18366                           status	equ	0xFD8
 18367                           
 18368 ;; *************** function _fround *****************
 18369 ;; Defined at:
 18370 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18371 ;; Parameters:    Size  Location     Type
 18372 ;;  prec            1    wreg     unsigned char 
 18373 ;; Auto vars:     Size  Location     Type
 18374 ;;  prec            1  123[BANK1 ] unsigned char 
 18375 ;; Return value:  Size  Location     Type
 18376 ;;                  4  111[BANK1 ] unsigned char 
 18377 ;; Registers used:
 18378 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18379 ;; Tracked objects:
 18380 ;;		On entry : 0/0
 18381 ;;		On exit  : 0/0
 18382 ;;		Unchanged: 0/0
 18383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18384 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18385 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18387 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18388 ;;Total ram usage:       13 bytes
 18389 ;; Hardware stack levels used:    1
 18390 ;; Hardware stack levels required when called:   14
 18391 ;; This function calls:
 18392 ;;		___awdiv
 18393 ;;		___awmod
 18394 ;;		___flmul
 18395 ;; This function is called by:
 18396 ;;		_printf
 18397 ;; This function uses a non-reentrant model
 18398 ;;
 18399                           
 18400                           	psect	text37
 18401  015682                     __ptext37:
 18402                           	opt stack 0
 18403  015682                     _fround:
 18404                           	opt stack 13
 18405                           
 18406                           ; BSR set to: 1
 18407                           ;incstack = 0
 18408                           ;fround@prec stored from wreg
 18409  015682  0101               	movlb	1	; () banked
 18410  015684  6F7B               	movwf	fround@prec& (0+255),b
 18411                           
 18412                           ;doprnt.c: 413: if(prec>=110)
 18413  015686  0E6D               	movlw	109
 18414  015688  0101               	movlb	1	; () banked
 18415  01568A  657B               	cpfsgt	fround@prec& (0+255),b
 18416  01568C  D0BA               	goto	l1384
 18417                           
 18418                           ; BSR set to: 1
 18419                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18420  01568E  0E00               	movlw	0
 18421  015690  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18422  015692  0E0A               	movlw	10
 18423  015694  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18424  015696  0E00               	movlw	0
 18425  015698  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18426  01569A  0E64               	movlw	100
 18427  01569C  6F19               	movwf	___awmod@divisor& (0+255),b
 18428  01569E  C17B  F117         	movff	fround@prec,___awmod@dividend
 18429  0156A2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18430  0156A4  ECE2  F0BE         	call	___awmod	;wreg free
 18431  0156A8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 18432  0156AC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 18433  0156B0  EC5F  F0BD         	call	___awdiv	;wreg free
 18434  0156B4  0101               	movlb	1	; () banked
 18435  0156B6  90D8               	bcf	status,0,c
 18436  0156B8  371D               	rlcf	?___awdiv& (0+255),f,b
 18437  0156BA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18438  0156BC  90D8               	bcf	status,0,c
 18439  0156BE  371D               	rlcf	?___awdiv& (0+255),f,b
 18440  0156C0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18441  0156C2  0E24               	movlw	36
 18442  0156C4  271D               	addwf	?___awdiv& (0+255),f,b
 18443  0156C6  0E00               	movlw	0
 18444  0156C8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18445  0156CA  0EF7               	movlw	low __npowers_
 18446  0156CC  251D               	addwf	?___awdiv& (0+255),w,b
 18447  0156CE  6EF6               	movwf	tblptrl,c
 18448  0156D0  0EE8               	movlw	high __npowers_
 18449  0156D2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18450  0156D4  6EF7               	movwf	tblptrh,c
 18451  0156D6                     	if	1	;There are 3 active tblptr bytes
 18452  0156D6  6AF8               	clrf	tblptru,c
 18453  0156D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18454  0156DA  22F8               	addwfc	tblptru,f,c
 18455  0156DC                     	endif
 18456  0156DC  0009               	tblrd		*+
 18457  0156DE  CFF5 F15A          	movff	tablat,___flmul@a
 18458  0156E2  0009               	tblrd		*+
 18459  0156E4  CFF5 F15B          	movff	tablat,___flmul@a+1
 18460  0156E8  0009               	tblrd		*+
 18461  0156EA  CFF5 F15C          	movff	tablat,___flmul@a+2
 18462  0156EE  000A               	tblrd		*-
 18463  0156F0  CFF5 F15D          	movff	tablat,___flmul@a+3
 18464  0156F4  0E00               	movlw	0
 18465  0156F6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18466  0156F8  0E64               	movlw	100
 18467  0156FA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18468  0156FC  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 18469  015700  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18470  015702  EC5F  F0BD         	call	___awdiv	;wreg free
 18471  015706  0101               	movlb	1	; () banked
 18472  015708  90D8               	bcf	status,0,c
 18473  01570A  371D               	rlcf	?___awdiv& (0+255),f,b
 18474  01570C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18475  01570E  90D8               	bcf	status,0,c
 18476  015710  371D               	rlcf	?___awdiv& (0+255),f,b
 18477  015712  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18478  015714  0E48               	movlw	72
 18479  015716  271D               	addwf	?___awdiv& (0+255),f,b
 18480  015718  0E00               	movlw	0
 18481  01571A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18482  01571C  0EF7               	movlw	low __npowers_
 18483  01571E  251D               	addwf	?___awdiv& (0+255),w,b
 18484  015720  6EF6               	movwf	tblptrl,c
 18485  015722  0EE8               	movlw	high __npowers_
 18486  015724  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18487  015726  6EF7               	movwf	tblptrh,c
 18488  015728                     	if	1	;There are 3 active tblptr bytes
 18489  015728  6AF8               	clrf	tblptru,c
 18490  01572A  0E00               	movlw	low (__mediumconst shr (0+16))
 18491  01572C  22F8               	addwfc	tblptru,f,c
 18492  01572E                     	endif
 18493  01572E  0009               	tblrd		*+
 18494  015730  CFF5 F156          	movff	tablat,___flmul@b
 18495  015734  0009               	tblrd		*+
 18496  015736  CFF5 F157          	movff	tablat,___flmul@b+1
 18497  01573A  0009               	tblrd		*+
 18498  01573C  CFF5 F158          	movff	tablat,___flmul@b+2
 18499  015740  000A               	tblrd		*-
 18500  015742  CFF5 F159          	movff	tablat,___flmul@b+3
 18501  015746  EC4F  F0A0         	call	___flmul	;wreg free
 18502  01574A  C156  F177         	movff	?___flmul,_fround$3937
 18503  01574E  C157  F178         	movff	?___flmul+1,_fround$3937+1
 18504  015752  C158  F179         	movff	?___flmul+2,_fround$3937+2
 18505  015756  C159  F17A         	movff	?___flmul+3,_fround$3937+3
 18506                           
 18507                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18508  01575A  0E00               	movlw	0
 18509  01575C  0101               	movlb	1	; () banked
 18510  01575E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18511  015760  0E0A               	movlw	10
 18512  015762  6F19               	movwf	___awmod@divisor& (0+255),b
 18513  015764  C17B  F117         	movff	fround@prec,___awmod@dividend
 18514  015768  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18515  01576A  ECE2  F0BE         	call	___awmod	;wreg free
 18516  01576E  0101               	movlb	1	; () banked
 18517  015770  90D8               	bcf	status,0,c
 18518  015772  3717               	rlcf	?___awmod& (0+255),f,b
 18519  015774  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18520  015776  90D8               	bcf	status,0,c
 18521  015778  3717               	rlcf	?___awmod& (0+255),f,b
 18522  01577A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18523  01577C  0EF7               	movlw	low __npowers_
 18524  01577E  2517               	addwf	?___awmod& (0+255),w,b
 18525  015780  6EF6               	movwf	tblptrl,c
 18526  015782  0EE8               	movlw	high __npowers_
 18527  015784  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 18528  015786  6EF7               	movwf	tblptrh,c
 18529  015788                     	if	1	;There are 3 active tblptr bytes
 18530  015788  6AF8               	clrf	tblptru,c
 18531  01578A  0E00               	movlw	low (__mediumconst shr (0+16))
 18532  01578C  22F8               	addwfc	tblptru,f,c
 18533  01578E                     	endif
 18534  01578E  0009               	tblrd		*+
 18535  015790  CFF5 F15A          	movff	tablat,___flmul@a
 18536  015794  0009               	tblrd		*+
 18537  015796  CFF5 F15B          	movff	tablat,___flmul@a+1
 18538  01579A  0009               	tblrd		*+
 18539  01579C  CFF5 F15C          	movff	tablat,___flmul@a+2
 18540  0157A0  000A               	tblrd		*-
 18541  0157A2  CFF5 F15D          	movff	tablat,___flmul@a+3
 18542  0157A6  C177  F156         	movff	_fround$3937,___flmul@b
 18543  0157AA  C178  F157         	movff	_fround$3937+1,___flmul@b+1
 18544  0157AE  C179  F158         	movff	_fround$3937+2,___flmul@b+2
 18545  0157B2  C17A  F159         	movff	_fround$3937+3,___flmul@b+3
 18546  0157B6  EC4F  F0A0         	call	___flmul	;wreg free
 18547  0157BA  C156  F173         	movff	?___flmul,_fround$3938
 18548  0157BE  C157  F174         	movff	?___flmul+1,_fround$3938+1
 18549  0157C2  C158  F175         	movff	?___flmul+2,_fround$3938+2
 18550  0157C6  C159  F176         	movff	?___flmul+3,_fround$3938+3
 18551                           
 18552                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18553  0157CA  C173  F156         	movff	_fround$3938,___flmul@b
 18554  0157CE  C174  F157         	movff	_fround$3938+1,___flmul@b+1
 18555  0157D2  C175  F158         	movff	_fround$3938+2,___flmul@b+2
 18556  0157D6  C176  F159         	movff	_fround$3938+3,___flmul@b+3
 18557  0157DA  0E00               	movlw	0
 18558  0157DC  0101               	movlb	1	; () banked
 18559  0157DE  6F5A               	movwf	___flmul@a& (0+255),b
 18560  0157E0  0E00               	movlw	0
 18561  0157E2  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18562  0157E4  0E00               	movlw	0
 18563  0157E6  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18564  0157E8  0E3F               	movlw	63
 18565  0157EA  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18566  0157EC  EC4F  F0A0         	call	___flmul	;wreg free
 18567  0157F0  C156  F16F         	movff	?___flmul,?_fround
 18568  0157F4  C157  F170         	movff	?___flmul+1,?_fround+1
 18569  0157F8  C158  F171         	movff	?___flmul+2,?_fround+2
 18570  0157FC  C159  F172         	movff	?___flmul+3,?_fround+3
 18571  015800  0012               	return	
 18572  015802                     l1384:
 18573                           
 18574                           ;doprnt.c: 415: else if(prec > 10)
 18575  015802  0E0A               	movlw	10
 18576  015804  0101               	movlb	1	; () banked
 18577  015806  657B               	cpfsgt	fround@prec& (0+255),b
 18578  015808  D074               	goto	l1387
 18579                           
 18580                           ; BSR set to: 1
 18581                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18582  01580A  0E00               	movlw	0
 18583  01580C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18584  01580E  0E0A               	movlw	10
 18585  015810  6F19               	movwf	___awmod@divisor& (0+255),b
 18586  015812  C17B  F117         	movff	fround@prec,___awmod@dividend
 18587  015816  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18588  015818  ECE2  F0BE         	call	___awmod	;wreg free
 18589  01581C  0101               	movlb	1	; () banked
 18590  01581E  90D8               	bcf	status,0,c
 18591  015820  3717               	rlcf	?___awmod& (0+255),f,b
 18592  015822  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18593  015824  90D8               	bcf	status,0,c
 18594  015826  3717               	rlcf	?___awmod& (0+255),f,b
 18595  015828  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18596  01582A  0EF7               	movlw	low __npowers_
 18597  01582C  2517               	addwf	?___awmod& (0+255),w,b
 18598  01582E  6EF6               	movwf	tblptrl,c
 18599  015830  0EE8               	movlw	high __npowers_
 18600  015832  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 18601  015834  6EF7               	movwf	tblptrh,c
 18602  015836                     	if	1	;There are 3 active tblptr bytes
 18603  015836  6AF8               	clrf	tblptru,c
 18604  015838  0E00               	movlw	low (__mediumconst shr (0+16))
 18605  01583A  22F8               	addwfc	tblptru,f,c
 18606  01583C                     	endif
 18607  01583C  0009               	tblrd		*+
 18608  01583E  CFF5 F15A          	movff	tablat,___flmul@a
 18609  015842  0009               	tblrd		*+
 18610  015844  CFF5 F15B          	movff	tablat,___flmul@a+1
 18611  015848  0009               	tblrd		*+
 18612  01584A  CFF5 F15C          	movff	tablat,___flmul@a+2
 18613  01584E  000A               	tblrd		*-
 18614  015850  CFF5 F15D          	movff	tablat,___flmul@a+3
 18615  015854  0E00               	movlw	0
 18616  015856  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18617  015858  0E0A               	movlw	10
 18618  01585A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18619  01585C  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 18620  015860  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18621  015862  EC5F  F0BD         	call	___awdiv	;wreg free
 18622  015866  0101               	movlb	1	; () banked
 18623  015868  90D8               	bcf	status,0,c
 18624  01586A  371D               	rlcf	?___awdiv& (0+255),f,b
 18625  01586C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18626  01586E  90D8               	bcf	status,0,c
 18627  015870  371D               	rlcf	?___awdiv& (0+255),f,b
 18628  015872  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18629  015874  0E24               	movlw	36
 18630  015876  271D               	addwf	?___awdiv& (0+255),f,b
 18631  015878  0E00               	movlw	0
 18632  01587A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18633  01587C  0EF7               	movlw	low __npowers_
 18634  01587E  251D               	addwf	?___awdiv& (0+255),w,b
 18635  015880  6EF6               	movwf	tblptrl,c
 18636  015882  0EE8               	movlw	high __npowers_
 18637  015884  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18638  015886  6EF7               	movwf	tblptrh,c
 18639  015888                     	if	1	;There are 3 active tblptr bytes
 18640  015888  6AF8               	clrf	tblptru,c
 18641  01588A  0E00               	movlw	low (__mediumconst shr (0+16))
 18642  01588C  22F8               	addwfc	tblptru,f,c
 18643  01588E                     	endif
 18644  01588E  0009               	tblrd		*+
 18645  015890  CFF5 F156          	movff	tablat,___flmul@b
 18646  015894  0009               	tblrd		*+
 18647  015896  CFF5 F157          	movff	tablat,___flmul@b+1
 18648  01589A  0009               	tblrd		*+
 18649  01589C  CFF5 F158          	movff	tablat,___flmul@b+2
 18650  0158A0  000A               	tblrd		*-
 18651  0158A2  CFF5 F159          	movff	tablat,___flmul@b+3
 18652  0158A6  EC4F  F0A0         	call	___flmul	;wreg free
 18653  0158AA  C156  F177         	movff	?___flmul,_fround$3937
 18654  0158AE  C157  F178         	movff	?___flmul+1,_fround$3937+1
 18655  0158B2  C158  F179         	movff	?___flmul+2,_fround$3937+2
 18656  0158B6  C159  F17A         	movff	?___flmul+3,_fround$3937+3
 18657                           
 18658                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18659  0158BA  C177  F156         	movff	_fround$3937,___flmul@b
 18660  0158BE  C178  F157         	movff	_fround$3937+1,___flmul@b+1
 18661  0158C2  C179  F158         	movff	_fround$3937+2,___flmul@b+2
 18662  0158C6  C17A  F159         	movff	_fround$3937+3,___flmul@b+3
 18663  0158CA  0E00               	movlw	0
 18664  0158CC  0101               	movlb	1	; () banked
 18665  0158CE  6F5A               	movwf	___flmul@a& (0+255),b
 18666  0158D0  0E00               	movlw	0
 18667  0158D2  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18668  0158D4  0E00               	movlw	0
 18669  0158D6  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18670  0158D8  0E3F               	movlw	63
 18671  0158DA  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18672  0158DC  EC4F  F0A0         	call	___flmul	;wreg free
 18673  0158E0  C156  F16F         	movff	?___flmul,?_fround
 18674  0158E4  C157  F170         	movff	?___flmul+1,?_fround+1
 18675  0158E8  C158  F171         	movff	?___flmul+2,?_fround+2
 18676  0158EC  C159  F172         	movff	?___flmul+3,?_fround+3
 18677  0158F0  0012               	return	
 18678  0158F2                     l1387:
 18679                           
 18680                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 18681  0158F2  0101               	movlb	1	; () banked
 18682  0158F4  517B               	movf	fround@prec& (0+255),w,b
 18683  0158F6  0D04               	mullw	4
 18684  0158F8  0EF7               	movlw	low __npowers_
 18685  0158FA  24F3               	addwf	prodl,w,c
 18686  0158FC  6EF6               	movwf	tblptrl,c
 18687  0158FE  0EE8               	movlw	high __npowers_
 18688  015900  20F4               	addwfc	prodh,w,c
 18689  015902  6EF7               	movwf	tblptrh,c
 18690  015904                     	if	1	;There are 3 active tblptr bytes
 18691  015904  6AF8               	clrf	tblptru,c
 18692  015906  0E00               	movlw	low (__mediumconst shr (0+16))
 18693  015908  22F8               	addwfc	tblptru,f,c
 18694  01590A                     	endif
 18695  01590A  0009               	tblrd		*+
 18696  01590C  CFF5 F156          	movff	tablat,___flmul@b
 18697  015910  0009               	tblrd		*+
 18698  015912  CFF5 F157          	movff	tablat,___flmul@b+1
 18699  015916  0009               	tblrd		*+
 18700  015918  CFF5 F158          	movff	tablat,___flmul@b+2
 18701  01591C  000A               	tblrd		*-
 18702  01591E  CFF5 F159          	movff	tablat,___flmul@b+3
 18703  015922  0E00               	movlw	0
 18704  015924  6F5A               	movwf	___flmul@a& (0+255),b
 18705  015926  0E00               	movlw	0
 18706  015928  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18707  01592A  0E00               	movlw	0
 18708  01592C  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18709  01592E  0E3F               	movlw	63
 18710  015930  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18711  015932  EC4F  F0A0         	call	___flmul	;wreg free
 18712  015936  C156  F16F         	movff	?___flmul,?_fround
 18713  01593A  C157  F170         	movff	?___flmul+1,?_fround+1
 18714  01593E  C158  F171         	movff	?___flmul+2,?_fround+2
 18715  015942  C159  F172         	movff	?___flmul+3,?_fround+3
 18716  015946  0012               	return	
 18717  015948                     __end_of_fround:
 18718                           	opt stack 0
 18719                           tblptru	equ	0xFF8
 18720                           tblptrh	equ	0xFF7
 18721                           tblptrl	equ	0xFF6
 18722                           tablat	equ	0xFF5
 18723                           prodh	equ	0xFF4
 18724                           prodl	equ	0xFF3
 18725                           intcon	equ	0xFF2
 18726                           indf0	equ	0xFEF
 18727                           postinc0	equ	0xFEE
 18728                           fsr0h	equ	0xFEA
 18729                           fsr0l	equ	0xFE9
 18730                           wreg	equ	0xFE8
 18731                           indf1	equ	0xFE7
 18732                           postdec1	equ	0xFE5
 18733                           plusw1	equ	0xFE3
 18734                           fsr1h	equ	0xFE2
 18735                           fsr1l	equ	0xFE1
 18736                           indf2	equ	0xFDF
 18737                           postinc2	equ	0xFDE
 18738                           postdec2	equ	0xFDD
 18739                           plusw2	equ	0xFDB
 18740                           fsr2h	equ	0xFDA
 18741                           fsr2l	equ	0xFD9
 18742                           status	equ	0xFD8
 18743                           
 18744 ;; *************** function ___flmul *****************
 18745 ;; Defined at:
 18746 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 18747 ;; Parameters:    Size  Location     Type
 18748 ;;  b               4   86[BANK1 ] unsigned char 
 18749 ;;  a               4   90[BANK1 ] unsigned char 
 18750 ;; Auto vars:     Size  Location     Type
 18751 ;;  prod            4  105[BANK1 ] struct .
 18752 ;;  grs             4  101[BANK1 ] unsigned long 
 18753 ;;  temp            2  109[BANK1 ] struct .
 18754 ;;  bexp            1  100[BANK1 ] unsigned char 
 18755 ;;  aexp            1   99[BANK1 ] unsigned char 
 18756 ;;  sign            1   98[BANK1 ] unsigned char 
 18757 ;; Return value:  Size  Location     Type
 18758 ;;                  4   86[BANK1 ] unsigned char 
 18759 ;; Registers used:
 18760 ;;		wreg, status,2, status,0, prodl, prodh
 18761 ;; Tracked objects:
 18762 ;;		On entry : 0/0
 18763 ;;		On exit  : 0/0
 18764 ;;		Unchanged: 0/0
 18765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18766 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18767 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18768 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18769 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18770 ;;Total ram usage:       25 bytes
 18771 ;; Hardware stack levels used:    1
 18772 ;; Hardware stack levels required when called:   13
 18773 ;; This function calls:
 18774 ;;		Nothing
 18775 ;; This function is called by:
 18776 ;;		_ringBufferLUT
 18777 ;;		_fround
 18778 ;;		_scale
 18779 ;;		_printf
 18780 ;; This function uses a non-reentrant model
 18781 ;;
 18782                           
 18783                           	psect	text38
 18784  01409E                     __ptext38:
 18785                           	opt stack 0
 18786  01409E                     ___flmul:
 18787                           	opt stack 13
 18788                           
 18789                           ;incstack = 0
 18790  01409E  0101               	movlb	1	; () banked
 18791  0140A0  5159               	movf	(___flmul@b+3)& (0+255),w,b
 18792  0140A2  0B80               	andlw	128
 18793  0140A4  6F62               	movwf	___flmul@sign& (0+255),b
 18794  0140A6  5159               	movf	(___flmul@b+3)& (0+255),w,b
 18795  0140A8  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 18796  0140AA  6F64               	movwf	___flmul@bexp& (0+255),b
 18797                           
 18798                           ; BSR set to: 1
 18799  0140AC  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 18800                           
 18801                           ; BSR set to: 1
 18802  0140AE  8164               	bsf	___flmul@bexp& (0+255),0,b
 18803                           
 18804                           ; BSR set to: 1
 18805                           
 18806                           ; BSR set to: 1
 18807  0140B0  5164               	movf	___flmul@bexp& (0+255),w,b
 18808  0140B2  B4D8               	btfsc	status,2,c
 18809  0140B4  D00D               	goto	l2182
 18810                           
 18811                           ; BSR set to: 1
 18812  0140B6  2964               	incf	___flmul@bexp& (0+255),w,b
 18813  0140B8  A4D8               	btfss	status,2,c
 18814  0140BA  D008               	goto	l2183
 18815                           
 18816                           ; BSR set to: 1
 18817  0140BC  0E00               	movlw	0
 18818  0140BE  6F56               	movwf	___flmul@b& (0+255),b
 18819  0140C0  0E00               	movlw	0
 18820  0140C2  6F57               	movwf	(___flmul@b+1)& (0+255),b
 18821  0140C4  0E00               	movlw	0
 18822  0140C6  6F58               	movwf	(___flmul@b+2)& (0+255),b
 18823  0140C8  0E00               	movlw	0
 18824  0140CA  6F59               	movwf	(___flmul@b+3)& (0+255),b
 18825  0140CC                     l2183:
 18826                           
 18827                           ; BSR set to: 1
 18828                           
 18829                           ; BSR set to: 1
 18830  0140CC  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 18831  0140CE  D008               	goto	l2184
 18832  0140D0                     l2182:
 18833                           
 18834                           ; BSR set to: 1
 18835                           
 18836                           ; BSR set to: 1
 18837  0140D0  0E00               	movlw	0
 18838  0140D2  6F56               	movwf	___flmul@b& (0+255),b
 18839  0140D4  0E00               	movlw	0
 18840  0140D6  6F57               	movwf	(___flmul@b+1)& (0+255),b
 18841  0140D8  0E00               	movlw	0
 18842  0140DA  6F58               	movwf	(___flmul@b+2)& (0+255),b
 18843  0140DC  0E00               	movlw	0
 18844  0140DE  6F59               	movwf	(___flmul@b+3)& (0+255),b
 18845  0140E0                     l2184:
 18846                           
 18847                           ; BSR set to: 1
 18848                           
 18849                           ; BSR set to: 1
 18850  0140E0  515D               	movf	(___flmul@a+3)& (0+255),w,b
 18851  0140E2  0B80               	andlw	128
 18852  0140E4  1B62               	xorwf	___flmul@sign& (0+255),f,b
 18853                           
 18854                           ; BSR set to: 1
 18855  0140E6  515D               	movf	(___flmul@a+3)& (0+255),w,b
 18856  0140E8  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 18857  0140EA  6F63               	movwf	___flmul@aexp& (0+255),b
 18858                           
 18859                           ; BSR set to: 1
 18860  0140EC  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 18861                           
 18862                           ; BSR set to: 1
 18863  0140EE  8163               	bsf	___flmul@aexp& (0+255),0,b
 18864                           
 18865                           ; BSR set to: 1
 18866                           
 18867                           ; BSR set to: 1
 18868  0140F0  5163               	movf	___flmul@aexp& (0+255),w,b
 18869  0140F2  B4D8               	btfsc	status,2,c
 18870  0140F4  D00D               	goto	l2186
 18871                           
 18872                           ; BSR set to: 1
 18873  0140F6  2963               	incf	___flmul@aexp& (0+255),w,b
 18874  0140F8  A4D8               	btfss	status,2,c
 18875  0140FA  D008               	goto	l2187
 18876                           
 18877                           ; BSR set to: 1
 18878  0140FC  0E00               	movlw	0
 18879  0140FE  6F5A               	movwf	___flmul@a& (0+255),b
 18880  014100  0E00               	movlw	0
 18881  014102  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18882  014104  0E00               	movlw	0
 18883  014106  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18884  014108  0E00               	movlw	0
 18885  01410A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18886  01410C                     l2187:
 18887                           
 18888                           ; BSR set to: 1
 18889                           
 18890                           ; BSR set to: 1
 18891  01410C  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 18892  01410E  D008               	goto	l2188
 18893  014110                     l2186:
 18894                           
 18895                           ; BSR set to: 1
 18896                           
 18897                           ; BSR set to: 1
 18898  014110  0E00               	movlw	0
 18899  014112  6F5A               	movwf	___flmul@a& (0+255),b
 18900  014114  0E00               	movlw	0
 18901  014116  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 18902  014118  0E00               	movlw	0
 18903  01411A  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 18904  01411C  0E00               	movlw	0
 18905  01411E  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 18906  014120                     l2188:
 18907                           
 18908                           ; BSR set to: 1
 18909  014120  5163               	movf	___flmul@aexp& (0+255),w,b
 18910  014122  B4D8               	btfsc	status,2,c
 18911  014124  D003               	goto	u23390
 18912                           
 18913                           ; BSR set to: 1
 18914  014126  5164               	movf	___flmul@bexp& (0+255),w,b
 18915  014128  A4D8               	btfss	status,2,c
 18916  01412A  D009               	goto	l2189
 18917  01412C                     u23390:
 18918                           
 18919                           ; BSR set to: 1
 18920                           
 18921                           ; BSR set to: 1
 18922  01412C  0E00               	movlw	0
 18923  01412E  6F56               	movwf	?___flmul& (0+255),b
 18924  014130  0E00               	movlw	0
 18925  014132  6F57               	movwf	(?___flmul+1)& (0+255),b
 18926  014134  0E00               	movlw	0
 18927  014136  6F58               	movwf	(?___flmul+2)& (0+255),b
 18928  014138  0E00               	movlw	0
 18929  01413A  6F59               	movwf	(?___flmul+3)& (0+255),b
 18930                           
 18931                           ; BSR set to: 1
 18932  01413C  0012               	return	
 18933  01413E                     l2189:
 18934                           
 18935                           ; BSR set to: 1
 18936                           
 18937                           ; BSR set to: 1
 18938  01413E  515C               	movf	(___flmul@a+2)& (0+255),w,b
 18939  014140  0356               	mulwf	___flmul@b& (0+255),b
 18940  014142  CFF3 F16D          	movff	prodl,___flmul@temp
 18941  014146  CFF4 F16E          	movff	prodh,___flmul@temp+1
 18942                           
 18943                           ; BSR set to: 1
 18944  01414A  516D               	movf	___flmul@temp& (0+255),w,b
 18945  01414C  6F65               	movwf	___flmul@grs& (0+255),b
 18946  01414E  6B66               	clrf	(___flmul@grs+1)& (0+255),b
 18947  014150  6B67               	clrf	(___flmul@grs+2)& (0+255),b
 18948  014152  6B68               	clrf	(___flmul@grs+3)& (0+255),b
 18949                           
 18950                           ; BSR set to: 1
 18951  014154  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 18952  014156  6F69               	movwf	___flmul@prod& (0+255),b
 18953  014158  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 18954  01415A  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 18955  01415C  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 18956  01415E  515B               	movf	(___flmul@a+1)& (0+255),w,b
 18957  014160  0357               	mulwf	(___flmul@b+1)& (0+255),b
 18958  014162  CFF3 F16D          	movff	prodl,___flmul@temp
 18959  014166  CFF4 F16E          	movff	prodh,___flmul@temp+1
 18960                           
 18961                           ; BSR set to: 1
 18962  01416A  516D               	movf	___flmul@temp& (0+255),w,b
 18963  01416C  2765               	addwf	___flmul@grs& (0+255),f,b
 18964  01416E  0E00               	movlw	0
 18965  014170  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 18966  014172  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 18967  014174  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 18968                           
 18969                           ; BSR set to: 1
 18970  014176  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 18971  014178  2769               	addwf	___flmul@prod& (0+255),f,b
 18972  01417A  0E00               	movlw	0
 18973  01417C  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18974  01417E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18975  014180  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18976  014182  515A               	movf	___flmul@a& (0+255),w,b
 18977  014184  0358               	mulwf	(___flmul@b+2)& (0+255),b
 18978  014186  CFF3 F16D          	movff	prodl,___flmul@temp
 18979  01418A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 18980                           
 18981                           ; BSR set to: 1
 18982  01418E  516D               	movf	___flmul@temp& (0+255),w,b
 18983  014190  2765               	addwf	___flmul@grs& (0+255),f,b
 18984  014192  0E00               	movlw	0
 18985  014194  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 18986  014196  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 18987  014198  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 18988                           
 18989                           ; BSR set to: 1
 18990  01419A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 18991  01419C  2769               	addwf	___flmul@prod& (0+255),f,b
 18992  01419E  0E00               	movlw	0
 18993  0141A0  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18994  0141A2  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18995  0141A4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18996                           
 18997                           ; BSR set to: 1
 18998  0141A6  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 18999  0141AA  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 19000  0141AE  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 19001  0141B2  6B65               	clrf	___flmul@grs& (0+255),b
 19002                           
 19003                           ; BSR set to: 1
 19004  0141B4  515A               	movf	___flmul@a& (0+255),w,b
 19005  0141B6  0357               	mulwf	(___flmul@b+1)& (0+255),b
 19006  0141B8  CFF3 F16D          	movff	prodl,___flmul@temp
 19007  0141BC  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19008                           
 19009                           ; BSR set to: 1
 19010  0141C0  516D               	movf	___flmul@temp& (0+255),w,b
 19011  0141C2  2765               	addwf	___flmul@grs& (0+255),f,b
 19012  0141C4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19013  0141C6  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 19014  0141C8  0E00               	movlw	0
 19015  0141CA  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 19016  0141CC  0E00               	movlw	0
 19017  0141CE  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 19018                           
 19019                           ; BSR set to: 1
 19020  0141D0  515B               	movf	(___flmul@a+1)& (0+255),w,b
 19021  0141D2  0356               	mulwf	___flmul@b& (0+255),b
 19022  0141D4  CFF3 F16D          	movff	prodl,___flmul@temp
 19023  0141D8  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19024                           
 19025                           ; BSR set to: 1
 19026  0141DC  516D               	movf	___flmul@temp& (0+255),w,b
 19027  0141DE  2765               	addwf	___flmul@grs& (0+255),f,b
 19028  0141E0  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19029  0141E2  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 19030  0141E4  0E00               	movlw	0
 19031  0141E6  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 19032  0141E8  0E00               	movlw	0
 19033  0141EA  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 19034                           
 19035                           ; BSR set to: 1
 19036  0141EC  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 19037  0141F0  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 19038  0141F4  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 19039  0141F8  6B65               	clrf	___flmul@grs& (0+255),b
 19040  0141FA  515A               	movf	___flmul@a& (0+255),w,b
 19041  0141FC  0356               	mulwf	___flmul@b& (0+255),b
 19042  0141FE  CFF3 F16D          	movff	prodl,___flmul@temp
 19043  014202  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19044                           
 19045                           ; BSR set to: 1
 19046  014206  516D               	movf	___flmul@temp& (0+255),w,b
 19047  014208  2765               	addwf	___flmul@grs& (0+255),f,b
 19048  01420A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19049  01420C  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 19050  01420E  0E00               	movlw	0
 19051  014210  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 19052  014212  0E00               	movlw	0
 19053  014214  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 19054                           
 19055                           ; BSR set to: 1
 19056  014216  515C               	movf	(___flmul@a+2)& (0+255),w,b
 19057  014218  0357               	mulwf	(___flmul@b+1)& (0+255),b
 19058  01421A  CFF3 F16D          	movff	prodl,___flmul@temp
 19059  01421E  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19060  014222  516D               	movf	___flmul@temp& (0+255),w,b
 19061  014224  2769               	addwf	___flmul@prod& (0+255),f,b
 19062  014226  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19063  014228  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19064  01422A  0E00               	movlw	0
 19065  01422C  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19066  01422E  0E00               	movlw	0
 19067  014230  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19068                           
 19069                           ; BSR set to: 1
 19070  014232  515B               	movf	(___flmul@a+1)& (0+255),w,b
 19071  014234  0358               	mulwf	(___flmul@b+2)& (0+255),b
 19072  014236  CFF3 F16D          	movff	prodl,___flmul@temp
 19073  01423A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19074                           
 19075                           ; BSR set to: 1
 19076  01423E  516D               	movf	___flmul@temp& (0+255),w,b
 19077  014240  2769               	addwf	___flmul@prod& (0+255),f,b
 19078  014242  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19079  014244  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19080  014246  0E00               	movlw	0
 19081  014248  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19082  01424A  0E00               	movlw	0
 19083  01424C  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19084  01424E  515C               	movf	(___flmul@a+2)& (0+255),w,b
 19085  014250  0358               	mulwf	(___flmul@b+2)& (0+255),b
 19086  014252  CFF3 F16D          	movff	prodl,___flmul@temp
 19087  014256  CFF4 F16E          	movff	prodh,___flmul@temp+1
 19088                           
 19089                           ; BSR set to: 1
 19090  01425A  516D               	movf	___flmul@temp& (0+255),w,b
 19091  01425C  6F5E               	movwf	??___flmul& (0+255),b
 19092  01425E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19093  014260  6F5F               	movwf	(??___flmul+1)& (0+255),b
 19094  014262  6B60               	clrf	(??___flmul+2)& (0+255),b
 19095  014264  6B61               	clrf	(??___flmul+3)& (0+255),b
 19096  014266  C160  F161         	movff	??___flmul+2,??___flmul+3
 19097  01426A  C15F  F160         	movff	??___flmul+1,??___flmul+2
 19098  01426E  C15E  F15F         	movff	??___flmul,??___flmul+1
 19099  014272  6B5E               	clrf	??___flmul& (0+255),b
 19100  014274  515E               	movf	??___flmul& (0+255),w,b
 19101  014276  2769               	addwf	___flmul@prod& (0+255),f,b
 19102  014278  515F               	movf	(??___flmul+1)& (0+255),w,b
 19103  01427A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19104  01427C  5160               	movf	(??___flmul+2)& (0+255),w,b
 19105  01427E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19106  014280  5161               	movf	(??___flmul+3)& (0+255),w,b
 19107  014282  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19108                           
 19109                           ; BSR set to: 1
 19110  014284  C165  F15E         	movff	___flmul@grs,??___flmul
 19111  014288  C166  F15F         	movff	___flmul@grs+1,??___flmul+1
 19112  01428C  C167  F160         	movff	___flmul@grs+2,??___flmul+2
 19113  014290  C168  F161         	movff	___flmul@grs+3,??___flmul+3
 19114  014294  0E19               	movlw	25
 19115  014296  D005               	goto	u23400
 19116  014298                     u23405:
 19117  014298  90D8               	bcf	status,0,c
 19118  01429A  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 19119  01429C  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 19120  01429E  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 19121  0142A0  335E               	rrcf	??___flmul& (0+255),f,b
 19122  0142A2                     u23400:
 19123  0142A2  2EE8               	decfsz	wreg,f,c
 19124  0142A4  D7F9               	goto	u23405
 19125  0142A6  515E               	movf	??___flmul& (0+255),w,b
 19126  0142A8  2769               	addwf	___flmul@prod& (0+255),f,b
 19127  0142AA  515F               	movf	(??___flmul+1)& (0+255),w,b
 19128  0142AC  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19129  0142AE  5160               	movf	(??___flmul+2)& (0+255),w,b
 19130  0142B0  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19131  0142B2  5161               	movf	(??___flmul+3)& (0+255),w,b
 19132  0142B4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19133                           
 19134                           ; BSR set to: 1
 19135  0142B6  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 19136  0142BA  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 19137  0142BE  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 19138  0142C2  6B65               	clrf	___flmul@grs& (0+255),b
 19139                           
 19140                           ; BSR set to: 1
 19141  0142C4  5163               	movf	___flmul@aexp& (0+255),w,b
 19142  0142C6  C164  F15E         	movff	___flmul@bexp,??___flmul
 19143  0142CA  6B5F               	clrf	(??___flmul+1)& (0+255),b
 19144  0142CC  275E               	addwf	??___flmul& (0+255),f,b
 19145  0142CE  0E00               	movlw	0
 19146  0142D0  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 19147  0142D2  0E82               	movlw	130
 19148  0142D4  255E               	addwf	??___flmul& (0+255),w,b
 19149  0142D6  6F6D               	movwf	___flmul@temp& (0+255),b
 19150  0142D8  0EFF               	movlw	255
 19151  0142DA  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 19152  0142DC  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 19153  0142DE  D00F               	goto	l2193
 19154  0142E0                     
 19155                           ; BSR set to: 1
 19156                           
 19157                           ; BSR set to: 1
 19158  0142E0  90D8               	bcf	status,0,c
 19159  0142E2  3769               	rlcf	___flmul@prod& (0+255),f,b
 19160  0142E4  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 19161  0142E6  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 19162  0142E8  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 19163                           
 19164                           ; BSR set to: 1
 19165  0142EA  BF68               	btfsc	(___flmul@grs+3)& (0+255),7,b
 19166                           
 19167                           ; BSR set to: 1
 19168  0142EC  8169               	bsf	___flmul@prod& (0+255),0,b
 19169                           
 19170                           ; BSR set to: 1
 19171  0142EE  90D8               	bcf	status,0,c
 19172  0142F0  3765               	rlcf	___flmul@grs& (0+255),f,b
 19173  0142F2  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
 19174  0142F4  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
 19175  0142F6  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
 19176  0142F8  076D               	decf	___flmul@temp& (0+255),f,b
 19177  0142FA  A0D8               	btfss	status,0,c
 19178  0142FC  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 19179  0142FE                     l2193:
 19180                           
 19181                           ; BSR set to: 1
 19182                           
 19183                           ; BSR set to: 1
 19184  0142FE  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 19185  014300  D7EF               	goto	l2194
 19186                           
 19187                           ; BSR set to: 1
 19188                           
 19189                           ; BSR set to: 1
 19190  014302  0E00               	movlw	0
 19191  014304  6F63               	movwf	___flmul@aexp& (0+255),b
 19192                           
 19193                           ; BSR set to: 1
 19194  014306  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
 19195  014308  D016               	goto	l2200
 19196                           
 19197                           ; BSR set to: 1
 19198  01430A  0EFF               	movlw	255
 19199  01430C  1565               	andwf	___flmul@grs& (0+255),w,b
 19200  01430E  6F5E               	movwf	??___flmul& (0+255),b
 19201  014310  0EFF               	movlw	255
 19202  014312  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
 19203  014314  6F5F               	movwf	(??___flmul+1)& (0+255),b
 19204  014316  0EFF               	movlw	255
 19205  014318  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
 19206  01431A  6F60               	movwf	(??___flmul+2)& (0+255),b
 19207  01431C  0E7F               	movlw	127
 19208  01431E  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
 19209  014320  6F61               	movwf	(??___flmul+3)& (0+255),b
 19210  014322  515E               	movf	??___flmul& (0+255),w,b
 19211  014324  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 19212  014326  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 19213  014328  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 19214  01432A  A4D8               	btfss	status,2,c
 19215  01432C  D002               	goto	u23450
 19216                           
 19217                           ; BSR set to: 1
 19218                           
 19219                           ; BSR set to: 1
 19220  01432E  A169               	btfss	___flmul@prod& (0+255),0,b
 19221  014330  D002               	goto	l2200
 19222  014332                     u23450:
 19223                           
 19224                           ; BSR set to: 1
 19225  014332  0E01               	movlw	1
 19226  014334  6F63               	movwf	___flmul@aexp& (0+255),b
 19227  014336                     l2200:
 19228                           
 19229                           ; BSR set to: 1
 19230                           
 19231                           ; BSR set to: 1
 19232                           
 19233                           ; BSR set to: 1
 19234  014336  5163               	movf	___flmul@aexp& (0+255),w,b
 19235  014338  B4D8               	btfsc	status,2,c
 19236  01433A  D01F               	goto	l2202
 19237                           
 19238                           ; BSR set to: 1
 19239  01433C  0E01               	movlw	1
 19240  01433E  2769               	addwf	___flmul@prod& (0+255),f,b
 19241  014340  0E00               	movlw	0
 19242  014342  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19243  014344  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19244  014346  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19245                           
 19246                           ; BSR set to: 1
 19247  014348  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 19248  01434A  D017               	goto	l2202
 19249                           
 19250                           ; BSR set to: 1
 19251  01434C  C169  F15E         	movff	___flmul@prod,??___flmul
 19252  014350  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 19253  014354  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 19254  014358  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 19255  01435C  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 19256  01435E  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 19257  014360  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 19258  014362  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 19259  014364  335E               	rrcf	??___flmul& (0+255),f,b
 19260  014366  C15E  F169         	movff	??___flmul,___flmul@prod
 19261  01436A  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 19262  01436E  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 19263  014372  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 19264                           
 19265                           ; BSR set to: 1
 19266  014376  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 19267  014378  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 19268  01437A                     l2202:
 19269                           
 19270                           ; BSR set to: 1
 19271                           
 19272                           ; BSR set to: 1
 19273                           
 19274                           ; BSR set to: 1
 19275  01437A  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 19276  01437C  D00D               	goto	l2203
 19277  01437E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19278  014380  E103               	bnz	u23480
 19279  014382  296D               	incf	___flmul@temp& (0+255),w,b
 19280  014384  A0D8               	btfss	status,0,c
 19281  014386  D008               	goto	l2203
 19282  014388                     u23480:
 19283                           
 19284                           ; BSR set to: 1
 19285  014388  0E00               	movlw	0
 19286  01438A  6F69               	movwf	___flmul@prod& (0+255),b
 19287  01438C  0E00               	movlw	0
 19288  01438E  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 19289  014390  0E80               	movlw	128
 19290  014392  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 19291  014394  0E7F               	movlw	127
 19292  014396  D020               	goto	L5
 19293  014398                     l2203:
 19294                           
 19295                           ; BSR set to: 1
 19296                           
 19297                           ; BSR set to: 1
 19298  014398  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 19299  01439A  D005               	goto	u23490
 19300  01439C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 19301  01439E  E10E               	bnz	l2205
 19302  0143A0  056D               	decf	___flmul@temp& (0+255),w,b
 19303  0143A2  B0D8               	btfsc	status,0,c
 19304  0143A4  D00B               	goto	l2205
 19305  0143A6                     u23490:
 19306                           
 19307                           ; BSR set to: 1
 19308  0143A6  0E00               	movlw	0
 19309  0143A8  6F69               	movwf	___flmul@prod& (0+255),b
 19310  0143AA  0E00               	movlw	0
 19311  0143AC  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 19312  0143AE  0E00               	movlw	0
 19313  0143B0  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 19314  0143B2  0E00               	movlw	0
 19315  0143B4  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 19316  0143B6  0E00               	movlw	0
 19317  0143B8  6F62               	movwf	___flmul@sign& (0+255),b
 19318  0143BA  D00F               	goto	l2206
 19319  0143BC                     l2205:
 19320                           
 19321                           ; BSR set to: 1
 19322  0143BC  C16D  F164         	movff	___flmul@temp,___flmul@bexp
 19323                           
 19324                           ; BSR set to: 1
 19325  0143C0  0EFF               	movlw	255
 19326  0143C2  1769               	andwf	___flmul@prod& (0+255),f,b
 19327  0143C4  0EFF               	movlw	255
 19328  0143C6  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 19329  0143C8  0E7F               	movlw	127
 19330  0143CA  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 19331  0143CC  0E00               	movlw	0
 19332  0143CE  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 19333                           
 19334                           ; BSR set to: 1
 19335  0143D0  B164               	btfsc	___flmul@bexp& (0+255),0,b
 19336                           
 19337                           ; BSR set to: 1
 19338  0143D2  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 19339                           
 19340                           ; BSR set to: 1
 19341                           
 19342                           ; BSR set to: 1
 19343  0143D4  90D8               	bcf	status,0,c
 19344  0143D6  3164               	rrcf	___flmul@bexp& (0+255),w,b
 19345  0143D8                     L5:
 19346  0143D8  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 19347  0143DA                     l2206:
 19348                           
 19349                           ; BSR set to: 1
 19350                           
 19351                           ; BSR set to: 1
 19352                           
 19353                           ; BSR set to: 1
 19354  0143DA  5162               	movf	___flmul@sign& (0+255),w,b
 19355  0143DC  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 19356                           
 19357                           ; BSR set to: 1
 19358  0143DE  C169  F156         	movff	___flmul@prod,?___flmul
 19359  0143E2  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 19360  0143E6  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 19361  0143EA  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 19362  0143EE  0012               	return	
 19363  0143F0                     __end_of___flmul:
 19364                           	opt stack 0
 19365                           tblptru	equ	0xFF8
 19366                           tblptrh	equ	0xFF7
 19367                           tblptrl	equ	0xFF6
 19368                           tablat	equ	0xFF5
 19369                           prodh	equ	0xFF4
 19370                           prodl	equ	0xFF3
 19371                           intcon	equ	0xFF2
 19372                           indf0	equ	0xFEF
 19373                           postinc0	equ	0xFEE
 19374                           fsr0h	equ	0xFEA
 19375                           fsr0l	equ	0xFE9
 19376                           wreg	equ	0xFE8
 19377                           indf1	equ	0xFE7
 19378                           postdec1	equ	0xFE5
 19379                           plusw1	equ	0xFE3
 19380                           fsr1h	equ	0xFE2
 19381                           fsr1l	equ	0xFE1
 19382                           indf2	equ	0xFDF
 19383                           postinc2	equ	0xFDE
 19384                           postdec2	equ	0xFDD
 19385                           plusw2	equ	0xFDB
 19386                           fsr2h	equ	0xFDA
 19387                           fsr2l	equ	0xFD9
 19388                           status	equ	0xFD8
 19389                           
 19390 ;; *************** function ___awmod *****************
 19391 ;; Defined at:
 19392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 19393 ;; Parameters:    Size  Location     Type
 19394 ;;  dividend        2   23[BANK1 ] int 
 19395 ;;  divisor         2   25[BANK1 ] int 
 19396 ;; Auto vars:     Size  Location     Type
 19397 ;;  sign            1   28[BANK1 ] unsigned char 
 19398 ;;  counter         1   27[BANK1 ] unsigned char 
 19399 ;; Return value:  Size  Location     Type
 19400 ;;                  2   23[BANK1 ] int 
 19401 ;; Registers used:
 19402 ;;		wreg, status,2, status,0
 19403 ;; Tracked objects:
 19404 ;;		On entry : 0/0
 19405 ;;		On exit  : 0/0
 19406 ;;		Unchanged: 0/0
 19407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19408 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19409 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19411 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19412 ;;Total ram usage:        6 bytes
 19413 ;; Hardware stack levels used:    1
 19414 ;; Hardware stack levels required when called:   13
 19415 ;; This function calls:
 19416 ;;		Nothing
 19417 ;; This function is called by:
 19418 ;;		_fround
 19419 ;;		_scale
 19420 ;; This function uses a non-reentrant model
 19421 ;;
 19422                           
 19423                           	psect	text39
 19424  017DC4                     __ptext39:
 19425                           	opt stack 0
 19426  017DC4                     ___awmod:
 19427                           	opt stack 13
 19428                           
 19429                           ; BSR set to: 1
 19430                           ;incstack = 0
 19431  017DC4  0E00               	movlw	0
 19432  017DC6  0101               	movlb	1	; () banked
 19433  017DC8  6F1C               	movwf	___awmod@sign& (0+255),b
 19434                           
 19435                           ; BSR set to: 1
 19436  017DCA  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19437  017DCC  D006               	goto	l1773
 19438                           
 19439                           ; BSR set to: 1
 19440  017DCE  6D17               	negf	___awmod@dividend& (0+255),b
 19441  017DD0  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 19442  017DD2  B0D8               	btfsc	status,0,c
 19443  017DD4  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 19444                           
 19445                           ; BSR set to: 1
 19446  017DD6  0E01               	movlw	1
 19447  017DD8  6F1C               	movwf	___awmod@sign& (0+255),b
 19448  017DDA                     l1773:
 19449                           
 19450                           ; BSR set to: 1
 19451                           
 19452                           ; BSR set to: 1
 19453  017DDA  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19454  017DDC  D004               	goto	l1774
 19455                           
 19456                           ; BSR set to: 1
 19457  017DDE  6D19               	negf	___awmod@divisor& (0+255),b
 19458  017DE0  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 19459  017DE2  B0D8               	btfsc	status,0,c
 19460  017DE4  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 19461  017DE6                     l1774:
 19462                           
 19463                           ; BSR set to: 1
 19464                           
 19465                           ; BSR set to: 1
 19466  017DE6  5119               	movf	___awmod@divisor& (0+255),w,b
 19467  017DE8  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19468  017DEA  B4D8               	btfsc	status,2,c
 19469  017DEC  D018               	goto	l1781
 19470                           
 19471                           ; BSR set to: 1
 19472  017DEE  0E01               	movlw	1
 19473  017DF0  6F1B               	movwf	___awmod@counter& (0+255),b
 19474  017DF2  D004               	goto	l1776
 19475  017DF4                     
 19476                           ; BSR set to: 1
 19477                           
 19478                           ; BSR set to: 1
 19479  017DF4  90D8               	bcf	status,0,c
 19480  017DF6  3719               	rlcf	___awmod@divisor& (0+255),f,b
 19481  017DF8  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19482  017DFA  2B1B               	incf	___awmod@counter& (0+255),f,b
 19483  017DFC                     l1776:
 19484                           
 19485                           ; BSR set to: 1
 19486                           
 19487                           ; BSR set to: 1
 19488  017DFC  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19489  017DFE  D7FA               	goto	l1777
 19490  017E00                     u23600:
 19491                           
 19492                           ; BSR set to: 1
 19493                           
 19494                           ; BSR set to: 1
 19495                           
 19496                           ; BSR set to: 1
 19497  017E00  5119               	movf	___awmod@divisor& (0+255),w,b
 19498  017E02  5D17               	subwf	___awmod@dividend& (0+255),w,b
 19499  017E04  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 19500  017E06  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19501  017E08  A0D8               	btfss	status,0,c
 19502  017E0A  D004               	goto	l1780
 19503                           
 19504                           ; BSR set to: 1
 19505  017E0C  5119               	movf	___awmod@divisor& (0+255),w,b
 19506  017E0E  5F17               	subwf	___awmod@dividend& (0+255),f,b
 19507  017E10  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 19508  017E12  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19509  017E14                     l1780:
 19510                           
 19511                           ; BSR set to: 1
 19512                           
 19513                           ; BSR set to: 1
 19514  017E14  90D8               	bcf	status,0,c
 19515  017E16  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19516  017E18  3319               	rrcf	___awmod@divisor& (0+255),f,b
 19517                           
 19518                           ; BSR set to: 1
 19519  017E1A  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 19520  017E1C  D7F1               	goto	u23600
 19521  017E1E                     l1781:
 19522                           
 19523                           ; BSR set to: 1
 19524                           
 19525                           ; BSR set to: 1
 19526                           
 19527                           ; BSR set to: 1
 19528  017E1E  511C               	movf	___awmod@sign& (0+255),w,b
 19529  017E20  B4D8               	btfsc	status,2,c
 19530  017E22  D004               	goto	l1782
 19531                           
 19532                           ; BSR set to: 1
 19533  017E24  6D17               	negf	___awmod@dividend& (0+255),b
 19534  017E26  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 19535  017E28  B0D8               	btfsc	status,0,c
 19536  017E2A  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 19537  017E2C                     l1782:
 19538                           
 19539                           ; BSR set to: 1
 19540                           
 19541                           ; BSR set to: 1
 19542  017E2C  C117  F117         	movff	___awmod@dividend,?___awmod
 19543  017E30  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 19544  017E34  0012               	return	
 19545  017E36                     __end_of___awmod:
 19546                           	opt stack 0
 19547                           tblptru	equ	0xFF8
 19548                           tblptrh	equ	0xFF7
 19549                           tblptrl	equ	0xFF6
 19550                           tablat	equ	0xFF5
 19551                           prodh	equ	0xFF4
 19552                           prodl	equ	0xFF3
 19553                           intcon	equ	0xFF2
 19554                           indf0	equ	0xFEF
 19555                           postinc0	equ	0xFEE
 19556                           fsr0h	equ	0xFEA
 19557                           fsr0l	equ	0xFE9
 19558                           wreg	equ	0xFE8
 19559                           indf1	equ	0xFE7
 19560                           postdec1	equ	0xFE5
 19561                           plusw1	equ	0xFE3
 19562                           fsr1h	equ	0xFE2
 19563                           fsr1l	equ	0xFE1
 19564                           indf2	equ	0xFDF
 19565                           postinc2	equ	0xFDE
 19566                           postdec2	equ	0xFDD
 19567                           plusw2	equ	0xFDB
 19568                           fsr2h	equ	0xFDA
 19569                           fsr2l	equ	0xFD9
 19570                           status	equ	0xFD8
 19571                           
 19572 ;; *************** function ___awdiv *****************
 19573 ;; Defined at:
 19574 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 19575 ;; Parameters:    Size  Location     Type
 19576 ;;  dividend        2   29[BANK1 ] int 
 19577 ;;  divisor         2   31[BANK1 ] int 
 19578 ;; Auto vars:     Size  Location     Type
 19579 ;;  quotient        2   35[BANK1 ] int 
 19580 ;;  sign            1   34[BANK1 ] unsigned char 
 19581 ;;  counter         1   33[BANK1 ] unsigned char 
 19582 ;; Return value:  Size  Location     Type
 19583 ;;                  2   29[BANK1 ] int 
 19584 ;; Registers used:
 19585 ;;		wreg, status,2, status,0
 19586 ;; Tracked objects:
 19587 ;;		On entry : 0/0
 19588 ;;		On exit  : 0/0
 19589 ;;		Unchanged: 0/0
 19590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19591 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19592 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19594 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19595 ;;Total ram usage:        8 bytes
 19596 ;; Hardware stack levels used:    1
 19597 ;; Hardware stack levels required when called:   13
 19598 ;; This function calls:
 19599 ;;		Nothing
 19600 ;; This function is called by:
 19601 ;;		_fround
 19602 ;;		_scale
 19603 ;;		_printf
 19604 ;; This function uses a non-reentrant model
 19605 ;;
 19606                           
 19607                           	psect	text40
 19608  017ABE                     __ptext40:
 19609                           	opt stack 0
 19610  017ABE                     ___awdiv:
 19611                           	opt stack 13
 19612                           
 19613                           ; BSR set to: 1
 19614                           ;incstack = 0
 19615  017ABE  0E00               	movlw	0
 19616  017AC0  0101               	movlb	1	; () banked
 19617  017AC2  6F22               	movwf	___awdiv@sign& (0+255),b
 19618                           
 19619                           ; BSR set to: 1
 19620  017AC4  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19621  017AC6  D006               	goto	l1760
 19622                           
 19623                           ; BSR set to: 1
 19624  017AC8  6D1F               	negf	___awdiv@divisor& (0+255),b
 19625  017ACA  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19626  017ACC  B0D8               	btfsc	status,0,c
 19627  017ACE  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19628                           
 19629                           ; BSR set to: 1
 19630  017AD0  0E01               	movlw	1
 19631  017AD2  6F22               	movwf	___awdiv@sign& (0+255),b
 19632  017AD4                     l1760:
 19633                           
 19634                           ; BSR set to: 1
 19635                           
 19636                           ; BSR set to: 1
 19637  017AD4  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19638  017AD6  D006               	goto	l1761
 19639                           
 19640                           ; BSR set to: 1
 19641  017AD8  6D1D               	negf	___awdiv@dividend& (0+255),b
 19642  017ADA  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19643  017ADC  B0D8               	btfsc	status,0,c
 19644  017ADE  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19645                           
 19646                           ; BSR set to: 1
 19647  017AE0  0E01               	movlw	1
 19648  017AE2  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 19649  017AE4                     l1761:
 19650                           
 19651                           ; BSR set to: 1
 19652                           
 19653                           ; BSR set to: 1
 19654  017AE4  0E00               	movlw	0
 19655  017AE6  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 19656  017AE8  0E00               	movlw	0
 19657  017AEA  6F23               	movwf	___awdiv@quotient& (0+255),b
 19658                           
 19659                           ; BSR set to: 1
 19660  017AEC  511F               	movf	___awdiv@divisor& (0+255),w,b
 19661  017AEE  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19662  017AF0  B4D8               	btfsc	status,2,c
 19663  017AF2  D01C               	goto	l1768
 19664                           
 19665                           ; BSR set to: 1
 19666  017AF4  0E01               	movlw	1
 19667  017AF6  6F21               	movwf	___awdiv@counter& (0+255),b
 19668  017AF8  D004               	goto	l1763
 19669  017AFA                     
 19670                           ; BSR set to: 1
 19671                           
 19672                           ; BSR set to: 1
 19673  017AFA  90D8               	bcf	status,0,c
 19674  017AFC  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 19675  017AFE  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19676  017B00  2B21               	incf	___awdiv@counter& (0+255),f,b
 19677  017B02                     l1763:
 19678                           
 19679                           ; BSR set to: 1
 19680                           
 19681                           ; BSR set to: 1
 19682  017B02  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19683  017B04  D7FA               	goto	l1764
 19684  017B06                     u23540:
 19685                           
 19686                           ; BSR set to: 1
 19687                           
 19688                           ; BSR set to: 1
 19689                           
 19690                           ; BSR set to: 1
 19691  017B06  90D8               	bcf	status,0,c
 19692  017B08  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 19693  017B0A  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19694                           
 19695                           ; BSR set to: 1
 19696  017B0C  511F               	movf	___awdiv@divisor& (0+255),w,b
 19697  017B0E  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 19698  017B10  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19699  017B12  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19700  017B14  A0D8               	btfss	status,0,c
 19701  017B16  D005               	goto	l1767
 19702                           
 19703                           ; BSR set to: 1
 19704  017B18  511F               	movf	___awdiv@divisor& (0+255),w,b
 19705  017B1A  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 19706  017B1C  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19707  017B1E  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19708                           
 19709                           ; BSR set to: 1
 19710  017B20  8123               	bsf	___awdiv@quotient& (0+255),0,b
 19711  017B22                     l1767:
 19712                           
 19713                           ; BSR set to: 1
 19714                           
 19715                           ; BSR set to: 1
 19716  017B22  90D8               	bcf	status,0,c
 19717  017B24  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19718  017B26  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 19719                           
 19720                           ; BSR set to: 1
 19721  017B28  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 19722  017B2A  D7ED               	goto	u23540
 19723  017B2C                     l1768:
 19724                           
 19725                           ; BSR set to: 1
 19726                           
 19727                           ; BSR set to: 1
 19728                           
 19729                           ; BSR set to: 1
 19730  017B2C  5122               	movf	___awdiv@sign& (0+255),w,b
 19731  017B2E  B4D8               	btfsc	status,2,c
 19732  017B30  D004               	goto	l1769
 19733                           
 19734                           ; BSR set to: 1
 19735  017B32  6D23               	negf	___awdiv@quotient& (0+255),b
 19736  017B34  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19737  017B36  B0D8               	btfsc	status,0,c
 19738  017B38  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19739  017B3A                     l1769:
 19740                           
 19741                           ; BSR set to: 1
 19742                           
 19743                           ; BSR set to: 1
 19744  017B3A  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 19745  017B3E  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 19746  017B42  0012               	return	
 19747  017B44                     __end_of___awdiv:
 19748                           	opt stack 0
 19749                           tblptru	equ	0xFF8
 19750                           tblptrh	equ	0xFF7
 19751                           tblptrl	equ	0xFF6
 19752                           tablat	equ	0xFF5
 19753                           prodh	equ	0xFF4
 19754                           prodl	equ	0xFF3
 19755                           intcon	equ	0xFF2
 19756                           indf0	equ	0xFEF
 19757                           postinc0	equ	0xFEE
 19758                           fsr0h	equ	0xFEA
 19759                           fsr0l	equ	0xFE9
 19760                           wreg	equ	0xFE8
 19761                           indf1	equ	0xFE7
 19762                           postdec1	equ	0xFE5
 19763                           plusw1	equ	0xFE3
 19764                           fsr1h	equ	0xFE2
 19765                           fsr1l	equ	0xFE1
 19766                           indf2	equ	0xFDF
 19767                           postinc2	equ	0xFDE
 19768                           postdec2	equ	0xFDD
 19769                           plusw2	equ	0xFDB
 19770                           fsr2h	equ	0xFDA
 19771                           fsr2l	equ	0xFD9
 19772                           status	equ	0xFD8
 19773                           
 19774 ;; *************** function __tdiv_to_l_ *****************
 19775 ;; Defined at:
 19776 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 19777 ;; Parameters:    Size  Location     Type
 19778 ;;  f1              3   23[BANK1 ] float 
 19779 ;;  f2              3   26[BANK1 ] float 
 19780 ;; Auto vars:     Size  Location     Type
 19781 ;;  quot            4   32[BANK1 ] unsigned long 
 19782 ;;  exp1            1   37[BANK1 ] unsigned char 
 19783 ;;  cntr            1   36[BANK1 ] unsigned char 
 19784 ;; Return value:  Size  Location     Type
 19785 ;;                  4   23[BANK1 ] unsigned long 
 19786 ;; Registers used:
 19787 ;;		wreg, status,2, status,0
 19788 ;; Tracked objects:
 19789 ;;		On entry : 0/0
 19790 ;;		On exit  : 0/0
 19791 ;;		Unchanged: 0/0
 19792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19793 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19794 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19795 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19796 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19797 ;;Total ram usage:       15 bytes
 19798 ;; Hardware stack levels used:    1
 19799 ;; Hardware stack levels required when called:   13
 19800 ;; This function calls:
 19801 ;;		Nothing
 19802 ;; This function is called by:
 19803 ;;		_printf
 19804 ;; This function uses a non-reentrant model
 19805 ;;
 19806                           
 19807                           	psect	text41
 19808  016A30                     __ptext41:
 19809                           	opt stack 0
 19810  016A30                     __tdiv_to_l_:
 19811                           	opt stack 14
 19812                           
 19813                           ; BSR set to: 1
 19814                           ;incstack = 0
 19815  016A30  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 19816  016A34  0101               	movlb	1	; () banked
 19817  016A36  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 19818  016A38  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 19819  016A3A  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 19820  016A3C  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 19821  016A3E  E301               	bnc	u23721
 19822  016A40  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 19823  016A42                     u23721:
 19824  016A42  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 19825  016A44  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 19826  016A46  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 19827  016A48  A4D8               	btfss	status,2,c
 19828  016A4A  D009               	goto	l1908
 19829                           
 19830                           ; BSR set to: 1
 19831  016A4C  0E00               	movlw	0
 19832  016A4E  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 19833  016A50  0E00               	movlw	0
 19834  016A52  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 19835  016A54  0E00               	movlw	0
 19836  016A56  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 19837  016A58  0E00               	movlw	0
 19838  016A5A  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 19839                           
 19840                           ; BSR set to: 1
 19841  016A5C  0012               	return	
 19842  016A5E                     l1908:
 19843                           
 19844                           ; BSR set to: 1
 19845                           
 19846                           ; BSR set to: 1
 19847  016A5E  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 19848  016A62  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 19849  016A64  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 19850  016A66  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 19851  016A68  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 19852  016A6A  E301               	bnc	u23741
 19853  016A6C  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 19854  016A6E                     u23741:
 19855  016A6E  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 19856  016A70  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 19857  016A72  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 19858  016A74  A4D8               	btfss	status,2,c
 19859  016A76  D009               	goto	l1910
 19860                           
 19861                           ; BSR set to: 1
 19862  016A78  0E00               	movlw	0
 19863  016A7A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 19864  016A7C  0E00               	movlw	0
 19865  016A7E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 19866  016A80  0E00               	movlw	0
 19867  016A82  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 19868  016A84  0E00               	movlw	0
 19869  016A86  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 19870                           
 19871                           ; BSR set to: 1
 19872  016A88  0012               	return	
 19873  016A8A                     l1910:
 19874                           
 19875                           ; BSR set to: 1
 19876                           
 19877                           ; BSR set to: 1
 19878  016A8A  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 19879                           
 19880                           ; BSR set to: 1
 19881  016A8C  0EFF               	movlw	255
 19882  016A8E  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 19883  016A90  0EFF               	movlw	255
 19884  016A92  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 19885  016A94  0E00               	movlw	0
 19886  016A96  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 19887  016A98  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 19888                           
 19889                           ; BSR set to: 1
 19890  016A9A  0EFF               	movlw	255
 19891  016A9C  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 19892  016A9E  0EFF               	movlw	255
 19893  016AA0  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 19894  016AA2  0E00               	movlw	0
 19895  016AA4  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 19896                           
 19897                           ; BSR set to: 1
 19898  016AA6  0E00               	movlw	0
 19899  016AA8  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 19900  016AAA  0E00               	movlw	0
 19901  016AAC  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 19902  016AAE  0E00               	movlw	0
 19903  016AB0  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 19904  016AB2  0E00               	movlw	0
 19905  016AB4  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 19906                           
 19907                           ; BSR set to: 1
 19908  016AB6  0E7F               	movlw	127
 19909  016AB8  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 19910                           
 19911                           ; BSR set to: 1
 19912  016ABA  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 19913  016ABC  0F98               	addlw	152
 19914  016ABE  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 19915                           
 19916                           ; BSR set to: 1
 19917  016AC0  0E18               	movlw	24
 19918  016AC2  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 19919  016AC4                     l1911:
 19920                           
 19921                           ; BSR set to: 1
 19922  016AC4  90D8               	bcf	status,0,c
 19923  016AC6  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 19924  016AC8  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 19925  016ACA  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 19926  016ACC  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 19927                           
 19928                           ; BSR set to: 1
 19929  016ACE  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 19930  016AD0  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 19931  016AD2  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 19932  016AD4  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 19933  016AD6  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 19934  016AD8  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 19935  016ADA  A0D8               	btfss	status,0,c
 19936  016ADC  D007               	goto	l1912
 19937                           
 19938                           ; BSR set to: 1
 19939  016ADE  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 19940  016AE0  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 19941  016AE2  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 19942  016AE4  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 19943  016AE6  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 19944  016AE8  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 19945                           
 19946                           ; BSR set to: 1
 19947  016AEA  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 19948  016AEC                     l1912:
 19949                           
 19950                           ; BSR set to: 1
 19951  016AEC  90D8               	bcf	status,0,c
 19952  016AEE  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 19953  016AF0  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 19954  016AF2  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 19955                           
 19956                           ; BSR set to: 1
 19957  016AF4  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 19958  016AF6  D7E6               	goto	l1911
 19959                           
 19960                           ; BSR set to: 1
 19961                           
 19962                           ; BSR set to: 1
 19963  016AF8  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 19964  016AFA  D016               	goto	l1914
 19965                           
 19966                           ; BSR set to: 1
 19967  016AFC  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 19968  016AFE  0A80               	xorlw	128
 19969  016B00  0F97               	addlw	151
 19970  016B02  B0D8               	btfsc	status,0,c
 19971  016B04  D009               	goto	l1915
 19972                           
 19973                           ; BSR set to: 1
 19974  016B06  0E00               	movlw	0
 19975  016B08  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 19976  016B0A  0E00               	movlw	0
 19977  016B0C  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 19978  016B0E  0E00               	movlw	0
 19979  016B10  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 19980  016B12  0E00               	movlw	0
 19981  016B14  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 19982                           
 19983                           ; BSR set to: 1
 19984  016B16  0012               	return	
 19985  016B18                     l1915:
 19986                           
 19987                           ; BSR set to: 1
 19988                           
 19989                           ; BSR set to: 1
 19990                           
 19991                           ; BSR set to: 1
 19992  016B18  90D8               	bcf	status,0,c
 19993  016B1A  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 19994  016B1C  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 19995  016B1E  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 19996  016B20  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 19997                           
 19998                           ; BSR set to: 1
 19999  016B22  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 20000  016B24  D7F9               	goto	l1915
 20001                           
 20002                           ; BSR set to: 1
 20003  016B26  D015               	goto	u23800
 20004  016B28                     l1914:
 20005                           
 20006                           ; BSR set to: 1
 20007                           
 20008                           ; BSR set to: 1
 20009  016B28  0E17               	movlw	23
 20010  016B2A  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 20011  016B2C  D00F               	goto	l1920
 20012                           
 20013                           ; BSR set to: 1
 20014  016B2E  0E00               	movlw	0
 20015  016B30  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 20016  016B32  0E00               	movlw	0
 20017  016B34  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 20018  016B36  0E00               	movlw	0
 20019  016B38  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 20020  016B3A  0E00               	movlw	0
 20021  016B3C  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 20022                           
 20023                           ; BSR set to: 1
 20024  016B3E  0012               	return	
 20025  016B40                     
 20026                           ; BSR set to: 1
 20027                           
 20028                           ; BSR set to: 1
 20029  016B40  90D8               	bcf	status,0,c
 20030  016B42  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 20031  016B44  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 20032  016B46  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 20033  016B48  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 20034  016B4A  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 20035  016B4C                     l1920:
 20036                           
 20037                           ; BSR set to: 1
 20038                           
 20039                           ; BSR set to: 1
 20040  016B4C  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 20041  016B4E  A4D8               	btfss	status,2,c
 20042  016B50  D7F7               	goto	l1921
 20043  016B52                     u23800:
 20044                           
 20045                           ; BSR set to: 1
 20046                           
 20047                           ; BSR set to: 1
 20048  016B52  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 20049  016B56  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 20050  016B5A  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 20051  016B5E  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 20052                           
 20053                           ; BSR set to: 1
 20054  016B62  0012               	return		;funcret
 20055  016B64                     __end_of__tdiv_to_l_:
 20056                           	opt stack 0
 20057                           tblptru	equ	0xFF8
 20058                           tblptrh	equ	0xFF7
 20059                           tblptrl	equ	0xFF6
 20060                           tablat	equ	0xFF5
 20061                           prodh	equ	0xFF4
 20062                           prodl	equ	0xFF3
 20063                           intcon	equ	0xFF2
 20064                           indf0	equ	0xFEF
 20065                           postinc0	equ	0xFEE
 20066                           fsr0h	equ	0xFEA
 20067                           fsr0l	equ	0xFE9
 20068                           wreg	equ	0xFE8
 20069                           indf1	equ	0xFE7
 20070                           postdec1	equ	0xFE5
 20071                           plusw1	equ	0xFE3
 20072                           fsr1h	equ	0xFE2
 20073                           fsr1l	equ	0xFE1
 20074                           indf2	equ	0xFDF
 20075                           postinc2	equ	0xFDE
 20076                           postdec2	equ	0xFDD
 20077                           plusw2	equ	0xFDB
 20078                           fsr2h	equ	0xFDA
 20079                           fsr2l	equ	0xFD9
 20080                           status	equ	0xFD8
 20081                           
 20082 ;; *************** function __div_to_l_ *****************
 20083 ;; Defined at:
 20084 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 20085 ;; Parameters:    Size  Location     Type
 20086 ;;  f1              4   23[BANK1 ] unsigned long 
 20087 ;;  f2              4   27[BANK1 ] unsigned long 
 20088 ;; Auto vars:     Size  Location     Type
 20089 ;;  quot            4   31[BANK1 ] unsigned long 
 20090 ;;  exp1            1   36[BANK1 ] unsigned char 
 20091 ;;  cntr            1   35[BANK1 ] unsigned char 
 20092 ;; Return value:  Size  Location     Type
 20093 ;;                  4   23[BANK1 ] unsigned long 
 20094 ;; Registers used:
 20095 ;;		wreg, status,2, status,0
 20096 ;; Tracked objects:
 20097 ;;		On entry : 0/0
 20098 ;;		On exit  : 0/0
 20099 ;;		Unchanged: 0/0
 20100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20101 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20102 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20104 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20105 ;;Total ram usage:       14 bytes
 20106 ;; Hardware stack levels used:    1
 20107 ;; Hardware stack levels required when called:   13
 20108 ;; This function calls:
 20109 ;;		Nothing
 20110 ;; This function is called by:
 20111 ;;		_printf
 20112 ;; This function uses a non-reentrant model
 20113 ;;
 20114                           
 20115                           	psect	text42
 20116  016C96                     __ptext42:
 20117                           	opt stack 0
 20118  016C96                     __div_to_l_:
 20119                           	opt stack 14
 20120                           
 20121                           ; BSR set to: 1
 20122                           ;incstack = 0
 20123  016C96  0101               	movlb	1	; () banked
 20124  016C98  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 20125  016C9A  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 20126  016C9C  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 20127  016C9E  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 20128  016CA0  A4D8               	btfss	status,2,c
 20129  016CA2  D009               	goto	l1804
 20130                           
 20131                           ; BSR set to: 1
 20132  016CA4  0E00               	movlw	0
 20133  016CA6  6F17               	movwf	?__div_to_l_& (0+255),b
 20134  016CA8  0E00               	movlw	0
 20135  016CAA  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 20136  016CAC  0E00               	movlw	0
 20137  016CAE  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 20138  016CB0  0E00               	movlw	0
 20139  016CB2  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 20140                           
 20141                           ; BSR set to: 1
 20142  016CB4  0012               	return	
 20143  016CB6                     l1804:
 20144                           
 20145                           ; BSR set to: 1
 20146                           
 20147                           ; BSR set to: 1
 20148  016CB6  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 20149  016CB8  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 20150  016CBA  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 20151  016CBC  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 20152  016CBE  A4D8               	btfss	status,2,c
 20153  016CC0  D009               	goto	l1806
 20154                           
 20155                           ; BSR set to: 1
 20156  016CC2  0E00               	movlw	0
 20157  016CC4  6F17               	movwf	?__div_to_l_& (0+255),b
 20158  016CC6  0E00               	movlw	0
 20159  016CC8  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 20160  016CCA  0E00               	movlw	0
 20161  016CCC  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 20162  016CCE  0E00               	movlw	0
 20163  016CD0  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 20164                           
 20165                           ; BSR set to: 1
 20166  016CD2  0012               	return	
 20167  016CD4                     l1806:
 20168                           
 20169                           ; BSR set to: 1
 20170                           
 20171                           ; BSR set to: 1
 20172  016CD4  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 20173                           
 20174                           ; BSR set to: 1
 20175  016CD6  0EFF               	movlw	255
 20176  016CD8  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 20177  016CDA  0EFF               	movlw	255
 20178  016CDC  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 20179  016CDE  0EFF               	movlw	255
 20180  016CE0  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 20181  016CE2  0E00               	movlw	0
 20182  016CE4  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 20183                           
 20184                           ; BSR set to: 1
 20185  016CE6  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 20186  016CE8  0EFF               	movlw	255
 20187  016CEA  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 20188  016CEC  0EFF               	movlw	255
 20189  016CEE  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 20190  016CF0  0EFF               	movlw	255
 20191  016CF2  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 20192  016CF4  0E00               	movlw	0
 20193  016CF6  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 20194                           
 20195                           ; BSR set to: 1
 20196  016CF8  0E00               	movlw	0
 20197  016CFA  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 20198  016CFC  0E00               	movlw	0
 20199  016CFE  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 20200  016D00  0E00               	movlw	0
 20201  016D02  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 20202  016D04  0E00               	movlw	0
 20203  016D06  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 20204                           
 20205                           ; BSR set to: 1
 20206  016D08  0E7F               	movlw	127
 20207  016D0A  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 20208                           
 20209                           ; BSR set to: 1
 20210  016D0C  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 20211  016D0E  0FA0               	addlw	160
 20212  016D10  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 20213                           
 20214                           ; BSR set to: 1
 20215  016D12  0E20               	movlw	32
 20216  016D14  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 20217  016D16                     
 20218                           ; BSR set to: 1
 20219                           
 20220                           ; BSR set to: 1
 20221  016D16  90D8               	bcf	status,0,c
 20222  016D18  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 20223  016D1A  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 20224  016D1C  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 20225  016D1E  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 20226                           
 20227                           ; BSR set to: 1
 20228  016D20  511B               	movf	__div_to_l_@f2& (0+255),w,b
 20229  016D22  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 20230  016D24  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 20231  016D26  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 20232  016D28  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 20233  016D2A  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 20234  016D2C  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 20235  016D2E  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 20236  016D30  A0D8               	btfss	status,0,c
 20237  016D32  D009               	goto	l1808
 20238                           
 20239                           ; BSR set to: 1
 20240  016D34  511B               	movf	__div_to_l_@f2& (0+255),w,b
 20241  016D36  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 20242  016D38  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 20243  016D3A  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 20244  016D3C  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 20245  016D3E  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 20246  016D40  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 20247  016D42  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 20248                           
 20249                           ; BSR set to: 1
 20250  016D44  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 20251  016D46                     l1808:
 20252                           
 20253                           ; BSR set to: 1
 20254                           
 20255                           ; BSR set to: 1
 20256  016D46  90D8               	bcf	status,0,c
 20257  016D48  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 20258  016D4A  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 20259  016D4C  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 20260  016D4E  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 20261                           
 20262                           ; BSR set to: 1
 20263  016D50  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 20264  016D52  D7E1               	goto	l1807
 20265                           
 20266                           ; BSR set to: 1
 20267                           
 20268                           ; BSR set to: 1
 20269  016D54  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 20270  016D56  D016               	goto	l1810
 20271                           
 20272                           ; BSR set to: 1
 20273  016D58  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 20274  016D5A  0A80               	xorlw	128
 20275  016D5C  0F9F               	addlw	159
 20276  016D5E  B0D8               	btfsc	status,0,c
 20277  016D60  D009               	goto	l1811
 20278                           
 20279                           ; BSR set to: 1
 20280  016D62  0E00               	movlw	0
 20281  016D64  6F17               	movwf	?__div_to_l_& (0+255),b
 20282  016D66  0E00               	movlw	0
 20283  016D68  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 20284  016D6A  0E00               	movlw	0
 20285  016D6C  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 20286  016D6E  0E00               	movlw	0
 20287  016D70  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 20288                           
 20289                           ; BSR set to: 1
 20290  016D72  0012               	return	
 20291  016D74                     l1811:
 20292                           
 20293                           ; BSR set to: 1
 20294                           
 20295                           ; BSR set to: 1
 20296                           
 20297                           ; BSR set to: 1
 20298  016D74  90D8               	bcf	status,0,c
 20299  016D76  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 20300  016D78  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 20301  016D7A  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 20302  016D7C  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 20303                           
 20304                           ; BSR set to: 1
 20305  016D7E  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 20306  016D80  D7F9               	goto	l1811
 20307                           
 20308                           ; BSR set to: 1
 20309  016D82  D015               	goto	u23870
 20310  016D84                     l1810:
 20311                           
 20312                           ; BSR set to: 1
 20313                           
 20314                           ; BSR set to: 1
 20315  016D84  0E1F               	movlw	31
 20316  016D86  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 20317  016D88  D00F               	goto	l1816
 20318                           
 20319                           ; BSR set to: 1
 20320  016D8A  0E00               	movlw	0
 20321  016D8C  6F17               	movwf	?__div_to_l_& (0+255),b
 20322  016D8E  0E00               	movlw	0
 20323  016D90  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 20324  016D92  0E00               	movlw	0
 20325  016D94  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 20326  016D96  0E00               	movlw	0
 20327  016D98  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 20328                           
 20329                           ; BSR set to: 1
 20330  016D9A  0012               	return	
 20331  016D9C                     
 20332                           ; BSR set to: 1
 20333                           
 20334                           ; BSR set to: 1
 20335  016D9C  90D8               	bcf	status,0,c
 20336  016D9E  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 20337  016DA0  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 20338  016DA2  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 20339  016DA4  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 20340  016DA6  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 20341  016DA8                     l1816:
 20342                           
 20343                           ; BSR set to: 1
 20344                           
 20345                           ; BSR set to: 1
 20346  016DA8  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 20347  016DAA  A4D8               	btfss	status,2,c
 20348  016DAC  D7F7               	goto	l1817
 20349  016DAE                     u23870:
 20350                           
 20351                           ; BSR set to: 1
 20352                           
 20353                           ; BSR set to: 1
 20354  016DAE  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 20355  016DB2  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 20356  016DB6  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 20357  016DBA  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 20358                           
 20359                           ; BSR set to: 1
 20360  016DBE  0012               	return		;funcret
 20361  016DC0                     __end_of__div_to_l_:
 20362                           	opt stack 0
 20363                           tblptru	equ	0xFF8
 20364                           tblptrh	equ	0xFF7
 20365                           tblptrl	equ	0xFF6
 20366                           tablat	equ	0xFF5
 20367                           prodh	equ	0xFF4
 20368                           prodl	equ	0xFF3
 20369                           intcon	equ	0xFF2
 20370                           indf0	equ	0xFEF
 20371                           postinc0	equ	0xFEE
 20372                           fsr0h	equ	0xFEA
 20373                           fsr0l	equ	0xFE9
 20374                           wreg	equ	0xFE8
 20375                           indf1	equ	0xFE7
 20376                           postdec1	equ	0xFE5
 20377                           plusw1	equ	0xFE3
 20378                           fsr1h	equ	0xFE2
 20379                           fsr1l	equ	0xFE1
 20380                           indf2	equ	0xFDF
 20381                           postinc2	equ	0xFDE
 20382                           postdec2	equ	0xFDD
 20383                           plusw2	equ	0xFDB
 20384                           fsr2h	equ	0xFDA
 20385                           fsr2l	equ	0xFD9
 20386                           status	equ	0xFD8
 20387                           
 20388 ;; *************** function ___xxtofl *****************
 20389 ;; Defined at:
 20390 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 20391 ;; Parameters:    Size  Location     Type
 20392 ;;  sign            1    wreg     unsigned char 
 20393 ;;  val             4   23[BANK1 ] long 
 20394 ;; Auto vars:     Size  Location     Type
 20395 ;;  sign            1   31[BANK1 ] unsigned char 
 20396 ;;  arg             4   33[BANK1 ] unsigned long 
 20397 ;;  exp             1   32[BANK1 ] unsigned char 
 20398 ;; Return value:  Size  Location     Type
 20399 ;;                  4   23[BANK1 ] unsigned char 
 20400 ;; Registers used:
 20401 ;;		wreg, status,2, status,0
 20402 ;; Tracked objects:
 20403 ;;		On entry : 0/0
 20404 ;;		On exit  : 0/0
 20405 ;;		Unchanged: 0/0
 20406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20407 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20408 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20409 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20410 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20411 ;;Total ram usage:       14 bytes
 20412 ;; Hardware stack levels used:    1
 20413 ;; Hardware stack levels required when called:   13
 20414 ;; This function calls:
 20415 ;;		Nothing
 20416 ;; This function is called by:
 20417 ;;		_ringBufferLUT
 20418 ;;		_printf
 20419 ;; This function uses a non-reentrant model
 20420 ;;
 20421                           
 20422                           	psect	text43
 20423  01678C                     __ptext43:
 20424                           	opt stack 0
 20425  01678C                     ___xxtofl:
 20426                           	opt stack 14
 20427                           
 20428                           ; BSR set to: 1
 20429                           ;incstack = 0
 20430                           ;___xxtofl@sign stored from wreg
 20431  01678C  0101               	movlb	1	; () banked
 20432  01678E  6F1F               	movwf	___xxtofl@sign& (0+255),b
 20433  016790  0101               	movlb	1	; () banked
 20434  016792  511F               	movf	___xxtofl@sign& (0+255),w,b
 20435  016794  A4D8               	btfss	status,2,c
 20436                           
 20437                           ; BSR set to: 1
 20438  016796  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 20439  016798  D01A               	goto	l2284
 20440                           
 20441                           ; BSR set to: 1
 20442  01679A  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 20443  01679E  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 20444  0167A2  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 20445  0167A6  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 20446  0167AA  1F1B               	comf	??___xxtofl& (0+255),f,b
 20447  0167AC  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 20448  0167AE  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 20449  0167B0  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 20450  0167B2  2B1B               	incf	??___xxtofl& (0+255),f,b
 20451  0167B4  0E00               	movlw	0
 20452  0167B6  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 20453  0167B8  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 20454  0167BA  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 20455  0167BC  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 20456  0167C0  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 20457  0167C4  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 20458  0167C8  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 20459  0167CC  D008               	goto	l2285
 20460  0167CE                     l2284:
 20461                           
 20462                           ; BSR set to: 1
 20463  0167CE  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 20464  0167D2  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 20465  0167D6  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 20466  0167DA  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 20467  0167DE                     l2285:
 20468                           
 20469                           ; BSR set to: 1
 20470                           
 20471                           ; BSR set to: 1
 20472  0167DE  5117               	movf	___xxtofl@val& (0+255),w,b
 20473  0167E0  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 20474  0167E2  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 20475  0167E4  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 20476  0167E6  A4D8               	btfss	status,2,c
 20477  0167E8  D009               	goto	l2286
 20478                           
 20479                           ; BSR set to: 1
 20480  0167EA  0E00               	movlw	0
 20481  0167EC  6F17               	movwf	?___xxtofl& (0+255),b
 20482  0167EE  0E00               	movlw	0
 20483  0167F0  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 20484  0167F2  0E00               	movlw	0
 20485  0167F4  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 20486  0167F6  0E00               	movlw	0
 20487  0167F8  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 20488                           
 20489                           ; BSR set to: 1
 20490  0167FA  0012               	return	
 20491  0167FC                     l2286:
 20492                           
 20493                           ; BSR set to: 1
 20494                           
 20495                           ; BSR set to: 1
 20496  0167FC  0E96               	movlw	150
 20497  0167FE  6F20               	movwf	___xxtofl@exp& (0+255),b
 20498  016800  D006               	goto	l2288
 20499  016802                     
 20500                           ; BSR set to: 1
 20501                           
 20502                           ; BSR set to: 1
 20503  016802  2B20               	incf	___xxtofl@exp& (0+255),f,b
 20504  016804  90D8               	bcf	status,0,c
 20505  016806  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 20506  016808  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 20507  01680A  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 20508  01680C  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 20509  01680E                     l2288:
 20510                           
 20511                           ; BSR set to: 1
 20512                           
 20513                           ; BSR set to: 1
 20514  01680E  0E00               	movlw	0
 20515  016810  1521               	andwf	___xxtofl@arg& (0+255),w,b
 20516  016812  6F1B               	movwf	??___xxtofl& (0+255),b
 20517  016814  0E00               	movlw	0
 20518  016816  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 20519  016818  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 20520  01681A  0E00               	movlw	0
 20521  01681C  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 20522  01681E  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 20523  016820  0EFE               	movlw	254
 20524  016822  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 20525  016824  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 20526  016826  511B               	movf	??___xxtofl& (0+255),w,b
 20527  016828  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 20528  01682A  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 20529  01682C  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 20530  01682E  B4D8               	btfsc	status,2,c
 20531  016830  D00D               	goto	l2291
 20532  016832  D7E7               	goto	l2289
 20533  016834                     
 20534                           ; BSR set to: 1
 20535                           
 20536                           ; BSR set to: 1
 20537  016834  2B20               	incf	___xxtofl@exp& (0+255),f,b
 20538                           
 20539                           ; BSR set to: 1
 20540  016836  0E01               	movlw	1
 20541  016838  2721               	addwf	___xxtofl@arg& (0+255),f,b
 20542  01683A  0E00               	movlw	0
 20543  01683C  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 20544  01683E  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 20545  016840  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 20546                           
 20547                           ; BSR set to: 1
 20548  016842  90D8               	bcf	status,0,c
 20549  016844  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 20550  016846  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 20551  016848  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 20552  01684A  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 20553  01684C                     l2291:
 20554                           
 20555                           ; BSR set to: 1
 20556  01684C  0E00               	movlw	0
 20557  01684E  1521               	andwf	___xxtofl@arg& (0+255),w,b
 20558  016850  6F1B               	movwf	??___xxtofl& (0+255),b
 20559  016852  0E00               	movlw	0
 20560  016854  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 20561  016856  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 20562  016858  0E00               	movlw	0
 20563  01685A  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 20564  01685C  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 20565  01685E  0EFF               	movlw	255
 20566  016860  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 20567  016862  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 20568  016864  511B               	movf	??___xxtofl& (0+255),w,b
 20569  016866  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 20570  016868  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 20571  01686A  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 20572  01686C  B4D8               	btfsc	status,2,c
 20573  01686E  D007               	goto	l2294
 20574  016870  D7E1               	goto	l2292
 20575  016872                     
 20576                           ; BSR set to: 1
 20577                           
 20578                           ; BSR set to: 1
 20579  016872  0720               	decf	___xxtofl@exp& (0+255),f,b
 20580  016874  90D8               	bcf	status,0,c
 20581  016876  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 20582  016878  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 20583  01687A  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 20584  01687C  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 20585  01687E                     l2294:
 20586                           
 20587                           ; BSR set to: 1
 20588                           
 20589                           ; BSR set to: 1
 20590  01687E  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 20591  016880  D003               	goto	u24130
 20592                           
 20593                           ; BSR set to: 1
 20594  016882  0E02               	movlw	2
 20595  016884  6120               	cpfslt	___xxtofl@exp& (0+255),b
 20596  016886  D7F5               	goto	l2295
 20597  016888                     u24130:
 20598                           
 20599                           ; BSR set to: 1
 20600                           
 20601                           ; BSR set to: 1
 20602  016888  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 20603  01688A  D008               	goto	l2299
 20604                           
 20605                           ; BSR set to: 1
 20606  01688C  0EFF               	movlw	255
 20607  01688E  1721               	andwf	___xxtofl@arg& (0+255),f,b
 20608  016890  0EFF               	movlw	255
 20609  016892  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 20610  016894  0E7F               	movlw	127
 20611  016896  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 20612  016898  0EFF               	movlw	255
 20613  01689A  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 20614  01689C                     l2299:
 20615                           
 20616                           ; BSR set to: 1
 20617  01689C  90D8               	bcf	status,0,c
 20618  01689E  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 20619  0168A0  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 20620  0168A4  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 20621  0168A6  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 20622  0168A8  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 20623  0168AA  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 20624  0168AE  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 20625  0168B0  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 20626  0168B2  6B1B               	clrf	??___xxtofl& (0+255),b
 20627  0168B4  511B               	movf	??___xxtofl& (0+255),w,b
 20628  0168B6  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 20629  0168B8  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 20630  0168BA  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 20631  0168BC  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 20632  0168BE  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 20633  0168C0  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 20634  0168C2  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 20635                           
 20636                           ; BSR set to: 1
 20637  0168C4  511F               	movf	___xxtofl@sign& (0+255),w,b
 20638  0168C6  A4D8               	btfss	status,2,c
 20639                           
 20640                           ; BSR set to: 1
 20641  0168C8  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 20642  0168CA  D001               	goto	l2300
 20643                           
 20644                           ; BSR set to: 1
 20645  0168CC  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 20646  0168CE                     l2300:
 20647                           
 20648                           ; BSR set to: 1
 20649                           
 20650                           ; BSR set to: 1
 20651  0168CE  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 20652  0168D2  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 20653  0168D6  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 20654  0168DA  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 20655  0168DE  0012               	return	
 20656  0168E0                     __end_of___xxtofl:
 20657                           	opt stack 0
 20658                           tblptru	equ	0xFF8
 20659                           tblptrh	equ	0xFF7
 20660                           tblptrl	equ	0xFF6
 20661                           tablat	equ	0xFF5
 20662                           prodh	equ	0xFF4
 20663                           prodl	equ	0xFF3
 20664                           intcon	equ	0xFF2
 20665                           indf0	equ	0xFEF
 20666                           postinc0	equ	0xFEE
 20667                           fsr0h	equ	0xFEA
 20668                           fsr0l	equ	0xFE9
 20669                           wreg	equ	0xFE8
 20670                           indf1	equ	0xFE7
 20671                           postdec1	equ	0xFE5
 20672                           plusw1	equ	0xFE3
 20673                           fsr1h	equ	0xFE2
 20674                           fsr1l	equ	0xFE1
 20675                           indf2	equ	0xFDF
 20676                           postinc2	equ	0xFDE
 20677                           postdec2	equ	0xFDD
 20678                           plusw2	equ	0xFDB
 20679                           fsr2h	equ	0xFDA
 20680                           fsr2l	equ	0xFD9
 20681                           status	equ	0xFD8
 20682                           
 20683 ;; *************** function ___wmul *****************
 20684 ;; Defined at:
 20685 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 20686 ;; Parameters:    Size  Location     Type
 20687 ;;  multiplier      2   23[BANK1 ] unsigned int 
 20688 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 20689 ;; Auto vars:     Size  Location     Type
 20690 ;;  product         2   27[BANK1 ] unsigned int 
 20691 ;; Return value:  Size  Location     Type
 20692 ;;                  2   23[BANK1 ] unsigned int 
 20693 ;; Registers used:
 20694 ;;		wreg, status,2, status,0, prodl, prodh
 20695 ;; Tracked objects:
 20696 ;;		On entry : 0/0
 20697 ;;		On exit  : 0/0
 20698 ;;		Unchanged: 0/0
 20699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20700 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20701 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20703 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20704 ;;Total ram usage:        6 bytes
 20705 ;; Hardware stack levels used:    1
 20706 ;; Hardware stack levels required when called:   13
 20707 ;; This function calls:
 20708 ;;		Nothing
 20709 ;; This function is called by:
 20710 ;;		_ringBufferLUT
 20711 ;;		_printf
 20712 ;;		_atoi
 20713 ;; This function uses a non-reentrant model
 20714 ;;
 20715                           
 20716                           	psect	text44
 20717  018902                     __ptext44:
 20718                           	opt stack 0
 20719  018902                     ___wmul:
 20720                           	opt stack 14
 20721                           
 20722                           ; BSR set to: 1
 20723                           ;incstack = 0
 20724  018902  0101               	movlb	1	; () banked
 20725  018904  5117               	movf	___wmul@multiplier& (0+255),w,b
 20726  018906  0319               	mulwf	___wmul@multiplicand& (0+255),b
 20727  018908  CFF3 F11B          	movff	prodl,___wmul@product
 20728  01890C  CFF4 F11C          	movff	prodh,___wmul@product+1
 20729  018910  5117               	movf	___wmul@multiplier& (0+255),w,b
 20730  018912  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20731  018914  50F3               	movf	prodl,w,c
 20732  018916  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 20733  018918  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20734  01891A  0319               	mulwf	___wmul@multiplicand& (0+255),b
 20735  01891C  50F3               	movf	prodl,w,c
 20736  01891E  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 20737                           
 20738                           ; BSR set to: 1
 20739  018920  C11B  F117         	movff	___wmul@product,?___wmul
 20740  018924  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 20741  018928  0012               	return	
 20742  01892A                     __end_of___wmul:
 20743                           	opt stack 0
 20744                           tblptru	equ	0xFF8
 20745                           tblptrh	equ	0xFF7
 20746                           tblptrl	equ	0xFF6
 20747                           tablat	equ	0xFF5
 20748                           prodh	equ	0xFF4
 20749                           prodl	equ	0xFF3
 20750                           intcon	equ	0xFF2
 20751                           indf0	equ	0xFEF
 20752                           postinc0	equ	0xFEE
 20753                           fsr0h	equ	0xFEA
 20754                           fsr0l	equ	0xFE9
 20755                           wreg	equ	0xFE8
 20756                           indf1	equ	0xFE7
 20757                           postdec1	equ	0xFE5
 20758                           plusw1	equ	0xFE3
 20759                           fsr1h	equ	0xFE2
 20760                           fsr1l	equ	0xFE1
 20761                           indf2	equ	0xFDF
 20762                           postinc2	equ	0xFDE
 20763                           postdec2	equ	0xFDD
 20764                           plusw2	equ	0xFDB
 20765                           fsr2h	equ	0xFDA
 20766                           fsr2l	equ	0xFD9
 20767                           status	equ	0xFD8
 20768                           
 20769 ;; *************** function ___llmod *****************
 20770 ;; Defined at:
 20771 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 20772 ;; Parameters:    Size  Location     Type
 20773 ;;  dividend        4   36[BANK1 ] unsigned long 
 20774 ;;  divisor         4   40[BANK1 ] unsigned long 
 20775 ;; Auto vars:     Size  Location     Type
 20776 ;;  counter         1   44[BANK1 ] unsigned char 
 20777 ;; Return value:  Size  Location     Type
 20778 ;;                  4   36[BANK1 ] unsigned long 
 20779 ;; Registers used:
 20780 ;;		wreg, status,2, status,0
 20781 ;; Tracked objects:
 20782 ;;		On entry : 0/0
 20783 ;;		On exit  : 0/0
 20784 ;;		Unchanged: 0/0
 20785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20786 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20787 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20789 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20790 ;;Total ram usage:        9 bytes
 20791 ;; Hardware stack levels used:    1
 20792 ;; Hardware stack levels required when called:   13
 20793 ;; This function calls:
 20794 ;;		Nothing
 20795 ;; This function is called by:
 20796 ;;		_printf
 20797 ;; This function uses a non-reentrant model
 20798 ;;
 20799                           
 20800                           	psect	text45
 20801  017FE6                     __ptext45:
 20802                           	opt stack 0
 20803  017FE6                     ___llmod:
 20804                           	opt stack 14
 20805                           
 20806                           ; BSR set to: 1
 20807                           ;incstack = 0
 20808  017FE6  0101               	movlb	1	; () banked
 20809  017FE8  5128               	movf	___llmod@divisor& (0+255),w,b
 20810  017FEA  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 20811  017FEC  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 20812  017FEE  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 20813  017FF0  B4D8               	btfsc	status,2,c
 20814  017FF2  D024               	goto	l2009
 20815                           
 20816                           ; BSR set to: 1
 20817  017FF4  0E01               	movlw	1
 20818  017FF6  6F2C               	movwf	___llmod@counter& (0+255),b
 20819  017FF8  D006               	goto	l2004
 20820  017FFA                     
 20821                           ; BSR set to: 1
 20822                           
 20823                           ; BSR set to: 1
 20824  017FFA  90D8               	bcf	status,0,c
 20825  017FFC  3728               	rlcf	___llmod@divisor& (0+255),f,b
 20826  017FFE  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 20827  018000  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 20828  018002  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 20829  018004  2B2C               	incf	___llmod@counter& (0+255),f,b
 20830  018006                     l2004:
 20831                           
 20832                           ; BSR set to: 1
 20833                           
 20834                           ; BSR set to: 1
 20835  018006  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 20836  018008  D7F8               	goto	l2005
 20837  01800A                     u24050:
 20838                           
 20839                           ; BSR set to: 1
 20840                           
 20841                           ; BSR set to: 1
 20842                           
 20843                           ; BSR set to: 1
 20844  01800A  5128               	movf	___llmod@divisor& (0+255),w,b
 20845  01800C  5D24               	subwf	___llmod@dividend& (0+255),w,b
 20846  01800E  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 20847  018010  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 20848  018012  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 20849  018014  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 20850  018016  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 20851  018018  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 20852  01801A  A0D8               	btfss	status,0,c
 20853  01801C  D008               	goto	l2008
 20854                           
 20855                           ; BSR set to: 1
 20856  01801E  5128               	movf	___llmod@divisor& (0+255),w,b
 20857  018020  5F24               	subwf	___llmod@dividend& (0+255),f,b
 20858  018022  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 20859  018024  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 20860  018026  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 20861  018028  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 20862  01802A  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 20863  01802C  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 20864  01802E                     l2008:
 20865                           
 20866                           ; BSR set to: 1
 20867                           
 20868                           ; BSR set to: 1
 20869  01802E  90D8               	bcf	status,0,c
 20870  018030  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 20871  018032  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 20872  018034  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 20873  018036  3328               	rrcf	___llmod@divisor& (0+255),f,b
 20874                           
 20875                           ; BSR set to: 1
 20876  018038  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 20877  01803A  D7E7               	goto	u24050
 20878  01803C                     l2009:
 20879                           
 20880                           ; BSR set to: 1
 20881                           
 20882                           ; BSR set to: 1
 20883  01803C  C124  F124         	movff	___llmod@dividend,?___llmod
 20884  018040  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 20885  018044  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 20886  018048  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 20887                           
 20888                           ; BSR set to: 1
 20889  01804C  0012               	return		;funcret
 20890  01804E                     __end_of___llmod:
 20891                           	opt stack 0
 20892                           tblptru	equ	0xFF8
 20893                           tblptrh	equ	0xFF7
 20894                           tblptrl	equ	0xFF6
 20895                           tablat	equ	0xFF5
 20896                           prodh	equ	0xFF4
 20897                           prodl	equ	0xFF3
 20898                           intcon	equ	0xFF2
 20899                           indf0	equ	0xFEF
 20900                           postinc0	equ	0xFEE
 20901                           fsr0h	equ	0xFEA
 20902                           fsr0l	equ	0xFE9
 20903                           wreg	equ	0xFE8
 20904                           indf1	equ	0xFE7
 20905                           postdec1	equ	0xFE5
 20906                           plusw1	equ	0xFE3
 20907                           fsr1h	equ	0xFE2
 20908                           fsr1l	equ	0xFE1
 20909                           indf2	equ	0xFDF
 20910                           postinc2	equ	0xFDE
 20911                           postdec2	equ	0xFDD
 20912                           plusw2	equ	0xFDB
 20913                           fsr2h	equ	0xFDA
 20914                           fsr2l	equ	0xFD9
 20915                           status	equ	0xFD8
 20916                           
 20917 ;; *************** function ___lldiv *****************
 20918 ;; Defined at:
 20919 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 20920 ;; Parameters:    Size  Location     Type
 20921 ;;  dividend        4   23[BANK1 ] unsigned long 
 20922 ;;  divisor         4   27[BANK1 ] unsigned long 
 20923 ;; Auto vars:     Size  Location     Type
 20924 ;;  quotient        4   32[BANK1 ] unsigned long 
 20925 ;;  counter         1   31[BANK1 ] unsigned char 
 20926 ;; Return value:  Size  Location     Type
 20927 ;;                  4   23[BANK1 ] unsigned long 
 20928 ;; Registers used:
 20929 ;;		wreg, status,2, status,0
 20930 ;; Tracked objects:
 20931 ;;		On entry : 0/0
 20932 ;;		On exit  : 0/0
 20933 ;;		Unchanged: 0/0
 20934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20935 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20936 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20938 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20939 ;;Total ram usage:       13 bytes
 20940 ;; Hardware stack levels used:    1
 20941 ;; Hardware stack levels required when called:   13
 20942 ;; This function calls:
 20943 ;;		Nothing
 20944 ;; This function is called by:
 20945 ;;		_printf
 20946 ;; This function uses a non-reentrant model
 20947 ;;
 20948                           
 20949                           	psect	text46
 20950  017B44                     __ptext46:
 20951                           	opt stack 0
 20952  017B44                     ___lldiv:
 20953                           	opt stack 14
 20954                           
 20955                           ; BSR set to: 1
 20956                           ;incstack = 0
 20957  017B44  0E00               	movlw	0
 20958  017B46  0101               	movlb	1	; () banked
 20959  017B48  6F20               	movwf	___lldiv@quotient& (0+255),b
 20960  017B4A  0E00               	movlw	0
 20961  017B4C  6F21               	movwf	(___lldiv@quotient+1)& (0+255),b
 20962  017B4E  0E00               	movlw	0
 20963  017B50  6F22               	movwf	(___lldiv@quotient+2)& (0+255),b
 20964  017B52  0E00               	movlw	0
 20965  017B54  6F23               	movwf	(___lldiv@quotient+3)& (0+255),b
 20966                           
 20967                           ; BSR set to: 1
 20968  017B56  511B               	movf	___lldiv@divisor& (0+255),w,b
 20969  017B58  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20970  017B5A  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20971  017B5C  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20972  017B5E  B4D8               	btfsc	status,2,c
 20973  017B60  D02A               	goto	l1999
 20974                           
 20975                           ; BSR set to: 1
 20976  017B62  0E01               	movlw	1
 20977  017B64  6F1F               	movwf	___lldiv@counter& (0+255),b
 20978  017B66  D006               	goto	l1994
 20979  017B68                     
 20980                           ; BSR set to: 1
 20981                           
 20982                           ; BSR set to: 1
 20983  017B68  90D8               	bcf	status,0,c
 20984  017B6A  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 20985  017B6C  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20986  017B6E  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20987  017B70  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20988  017B72  2B1F               	incf	___lldiv@counter& (0+255),f,b
 20989  017B74                     l1994:
 20990                           
 20991                           ; BSR set to: 1
 20992                           
 20993                           ; BSR set to: 1
 20994  017B74  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20995  017B76  D7F8               	goto	l1995
 20996  017B78                     u24020:
 20997                           
 20998                           ; BSR set to: 1
 20999                           
 21000                           ; BSR set to: 1
 21001                           
 21002                           ; BSR set to: 1
 21003  017B78  90D8               	bcf	status,0,c
 21004  017B7A  3720               	rlcf	___lldiv@quotient& (0+255),f,b
 21005  017B7C  3721               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 21006  017B7E  3722               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 21007  017B80  3723               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 21008                           
 21009                           ; BSR set to: 1
 21010  017B82  511B               	movf	___lldiv@divisor& (0+255),w,b
 21011  017B84  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 21012  017B86  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21013  017B88  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 21014  017B8A  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21015  017B8C  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 21016  017B8E  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21017  017B90  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 21018  017B92  A0D8               	btfss	status,0,c
 21019  017B94  D009               	goto	l1998
 21020                           
 21021                           ; BSR set to: 1
 21022  017B96  511B               	movf	___lldiv@divisor& (0+255),w,b
 21023  017B98  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 21024  017B9A  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21025  017B9C  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 21026  017B9E  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21027  017BA0  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 21028  017BA2  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21029  017BA4  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 21030                           
 21031                           ; BSR set to: 1
 21032  017BA6  8120               	bsf	___lldiv@quotient& (0+255),0,b
 21033  017BA8                     l1998:
 21034                           
 21035                           ; BSR set to: 1
 21036                           
 21037                           ; BSR set to: 1
 21038  017BA8  90D8               	bcf	status,0,c
 21039  017BAA  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 21040  017BAC  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 21041  017BAE  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 21042  017BB0  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 21043                           
 21044                           ; BSR set to: 1
 21045  017BB2  2F1F               	decfsz	___lldiv@counter& (0+255),f,b
 21046  017BB4  D7E1               	goto	u24020
 21047  017BB6                     l1999:
 21048                           
 21049                           ; BSR set to: 1
 21050                           
 21051                           ; BSR set to: 1
 21052  017BB6  C120  F117         	movff	___lldiv@quotient,?___lldiv
 21053  017BBA  C121  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 21054  017BBE  C122  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 21055  017BC2  C123  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 21056                           
 21057                           ; BSR set to: 1
 21058  017BC6  0012               	return		;funcret
 21059  017BC8                     __end_of___lldiv:
 21060                           	opt stack 0
 21061                           tblptru	equ	0xFF8
 21062                           tblptrh	equ	0xFF7
 21063                           tblptrl	equ	0xFF6
 21064                           tablat	equ	0xFF5
 21065                           prodh	equ	0xFF4
 21066                           prodl	equ	0xFF3
 21067                           intcon	equ	0xFF2
 21068                           indf0	equ	0xFEF
 21069                           postinc0	equ	0xFEE
 21070                           fsr0h	equ	0xFEA
 21071                           fsr0l	equ	0xFE9
 21072                           wreg	equ	0xFE8
 21073                           indf1	equ	0xFE7
 21074                           postdec1	equ	0xFE5
 21075                           plusw1	equ	0xFE3
 21076                           fsr1h	equ	0xFE2
 21077                           fsr1l	equ	0xFE1
 21078                           indf2	equ	0xFDF
 21079                           postinc2	equ	0xFDE
 21080                           postdec2	equ	0xFDD
 21081                           plusw2	equ	0xFDB
 21082                           fsr2h	equ	0xFDA
 21083                           fsr2l	equ	0xFD9
 21084                           status	equ	0xFD8
 21085                           
 21086 ;; *************** function ___fltol *****************
 21087 ;; Defined at:
 21088 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 21089 ;; Parameters:    Size  Location     Type
 21090 ;;  f1              4  120[BANK1 ] unsigned long 
 21091 ;; Auto vars:     Size  Location     Type
 21092 ;;  exp1            1  129[BANK1 ] unsigned char 
 21093 ;;  sign1           1  128[BANK1 ] unsigned char 
 21094 ;; Return value:  Size  Location     Type
 21095 ;;                  4  120[BANK1 ] long 
 21096 ;; Registers used:
 21097 ;;		wreg, status,2, status,0
 21098 ;; Tracked objects:
 21099 ;;		On entry : 0/0
 21100 ;;		On exit  : 0/0
 21101 ;;		Unchanged: 0/0
 21102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21103 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21104 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21105 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21106 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21107 ;;Total ram usage:       10 bytes
 21108 ;; Hardware stack levels used:    1
 21109 ;; Hardware stack levels required when called:   13
 21110 ;; This function calls:
 21111 ;;		Nothing
 21112 ;; This function is called by:
 21113 ;;		_printf
 21114 ;; This function uses a non-reentrant model
 21115 ;;
 21116                           
 21117                           	psect	text47
 21118  017460                     __ptext47:
 21119                           	opt stack 0
 21120  017460                     ___fltol:
 21121                           	opt stack 14
 21122                           
 21123                           ; BSR set to: 1
 21124                           ;incstack = 0
 21125  017460  0101               	movlb	1	; () banked
 21126  017462  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 21127  017464  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 21128  017466  6F81               	movwf	___fltol@exp1& (0+255),b
 21129  017468  5181               	movf	___fltol@exp1& (0+255),w,b
 21130  01746A  A4D8               	btfss	status,2,c
 21131  01746C  D009               	goto	l1851
 21132                           
 21133                           ; BSR set to: 1
 21134  01746E  0E00               	movlw	0
 21135  017470  6F78               	movwf	?___fltol& (0+255),b
 21136  017472  0E00               	movlw	0
 21137  017474  6F79               	movwf	(?___fltol+1)& (0+255),b
 21138  017476  0E00               	movlw	0
 21139  017478  6F7A               	movwf	(?___fltol+2)& (0+255),b
 21140  01747A  0E00               	movlw	0
 21141  01747C  6F7B               	movwf	(?___fltol+3)& (0+255),b
 21142                           
 21143                           ; BSR set to: 1
 21144  01747E  0012               	return	
 21145  017480                     l1851:
 21146                           
 21147                           ; BSR set to: 1
 21148                           
 21149                           ; BSR set to: 1
 21150  017480  C178  F17C         	movff	___fltol@f1,??___fltol
 21151  017484  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 21152  017488  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 21153  01748C  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 21154  017490  0E20               	movlw	32
 21155  017492  D005               	goto	u23950
 21156  017494                     u23955:
 21157  017494  90D8               	bcf	status,0,c
 21158  017496  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 21159  017498  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 21160  01749A  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 21161  01749C  337C               	rrcf	??___fltol& (0+255),f,b
 21162  01749E                     u23950:
 21163  01749E  2EE8               	decfsz	wreg,f,c
 21164  0174A0  D7F9               	goto	u23955
 21165  0174A2  517C               	movf	??___fltol& (0+255),w,b
 21166  0174A4  6F80               	movwf	___fltol@sign1& (0+255),b
 21167                           
 21168                           ; BSR set to: 1
 21169  0174A6  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 21170                           
 21171                           ; BSR set to: 1
 21172  0174A8  0EFF               	movlw	255
 21173  0174AA  1778               	andwf	___fltol@f1& (0+255),f,b
 21174  0174AC  0EFF               	movlw	255
 21175  0174AE  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 21176  0174B0  0EFF               	movlw	255
 21177  0174B2  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 21178  0174B4  0E00               	movlw	0
 21179  0174B6  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 21180                           
 21181                           ; BSR set to: 1
 21182  0174B8  0E96               	movlw	150
 21183  0174BA  5F81               	subwf	___fltol@exp1& (0+255),f,b
 21184                           
 21185                           ; BSR set to: 1
 21186  0174BC  AF81               	btfss	___fltol@exp1& (0+255),7,b
 21187  0174BE  D016               	goto	l1853
 21188                           
 21189                           ; BSR set to: 1
 21190  0174C0  5181               	movf	___fltol@exp1& (0+255),w,b
 21191  0174C2  0A80               	xorlw	128
 21192  0174C4  0F97               	addlw	151
 21193  0174C6  B0D8               	btfsc	status,0,c
 21194  0174C8  D009               	goto	l1854
 21195                           
 21196                           ; BSR set to: 1
 21197  0174CA  0E00               	movlw	0
 21198  0174CC  6F78               	movwf	?___fltol& (0+255),b
 21199  0174CE  0E00               	movlw	0
 21200  0174D0  6F79               	movwf	(?___fltol+1)& (0+255),b
 21201  0174D2  0E00               	movlw	0
 21202  0174D4  6F7A               	movwf	(?___fltol+2)& (0+255),b
 21203  0174D6  0E00               	movlw	0
 21204  0174D8  6F7B               	movwf	(?___fltol+3)& (0+255),b
 21205                           
 21206                           ; BSR set to: 1
 21207  0174DA  0012               	return	
 21208  0174DC                     l1854:
 21209                           
 21210                           ; BSR set to: 1
 21211                           
 21212                           ; BSR set to: 1
 21213                           
 21214                           ; BSR set to: 1
 21215  0174DC  90D8               	bcf	status,0,c
 21216  0174DE  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 21217  0174E0  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 21218  0174E2  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 21219  0174E4  3378               	rrcf	___fltol@f1& (0+255),f,b
 21220                           
 21221                           ; BSR set to: 1
 21222  0174E6  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 21223  0174E8  D7F9               	goto	l1854
 21224                           
 21225                           ; BSR set to: 1
 21226  0174EA  D015               	goto	u23990
 21227  0174EC                     l1853:
 21228                           
 21229                           ; BSR set to: 1
 21230                           
 21231                           ; BSR set to: 1
 21232  0174EC  0E1F               	movlw	31
 21233  0174EE  6581               	cpfsgt	___fltol@exp1& (0+255),b
 21234  0174F0  D00F               	goto	l1859
 21235                           
 21236                           ; BSR set to: 1
 21237  0174F2  0E00               	movlw	0
 21238  0174F4  6F78               	movwf	?___fltol& (0+255),b
 21239  0174F6  0E00               	movlw	0
 21240  0174F8  6F79               	movwf	(?___fltol+1)& (0+255),b
 21241  0174FA  0E00               	movlw	0
 21242  0174FC  6F7A               	movwf	(?___fltol+2)& (0+255),b
 21243  0174FE  0E00               	movlw	0
 21244  017500  6F7B               	movwf	(?___fltol+3)& (0+255),b
 21245                           
 21246                           ; BSR set to: 1
 21247  017502  0012               	return	
 21248  017504                     
 21249                           ; BSR set to: 1
 21250                           
 21251                           ; BSR set to: 1
 21252  017504  90D8               	bcf	status,0,c
 21253  017506  3778               	rlcf	___fltol@f1& (0+255),f,b
 21254  017508  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 21255  01750A  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 21256  01750C  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 21257  01750E  0781               	decf	___fltol@exp1& (0+255),f,b
 21258  017510                     l1859:
 21259                           
 21260                           ; BSR set to: 1
 21261                           
 21262                           ; BSR set to: 1
 21263  017510  5181               	movf	___fltol@exp1& (0+255),w,b
 21264  017512  A4D8               	btfss	status,2,c
 21265  017514  D7F7               	goto	l1860
 21266  017516                     u23990:
 21267                           
 21268                           ; BSR set to: 1
 21269                           
 21270                           ; BSR set to: 1
 21271                           
 21272                           ; BSR set to: 1
 21273  017516  5180               	movf	___fltol@sign1& (0+255),w,b
 21274  017518  B4D8               	btfsc	status,2,c
 21275  01751A  D008               	goto	l1862
 21276                           
 21277                           ; BSR set to: 1
 21278  01751C  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 21279  01751E  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 21280  017520  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 21281  017522  6D78               	negf	___fltol@f1& (0+255),b
 21282  017524  0E00               	movlw	0
 21283  017526  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 21284  017528  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 21285  01752A  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 21286  01752C                     l1862:
 21287                           
 21288                           ; BSR set to: 1
 21289                           
 21290                           ; BSR set to: 1
 21291  01752C  C178  F178         	movff	___fltol@f1,?___fltol
 21292  017530  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 21293  017534  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 21294  017538  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 21295  01753C  0012               	return	
 21296  01753E                     __end_of___fltol:
 21297                           	opt stack 0
 21298                           tblptru	equ	0xFF8
 21299                           tblptrh	equ	0xFF7
 21300                           tblptrl	equ	0xFF6
 21301                           tablat	equ	0xFF5
 21302                           prodh	equ	0xFF4
 21303                           prodl	equ	0xFF3
 21304                           intcon	equ	0xFF2
 21305                           indf0	equ	0xFEF
 21306                           postinc0	equ	0xFEE
 21307                           fsr0h	equ	0xFEA
 21308                           fsr0l	equ	0xFE9
 21309                           wreg	equ	0xFE8
 21310                           indf1	equ	0xFE7
 21311                           postdec1	equ	0xFE5
 21312                           plusw1	equ	0xFE3
 21313                           fsr1h	equ	0xFE2
 21314                           fsr1l	equ	0xFE1
 21315                           indf2	equ	0xFDF
 21316                           postinc2	equ	0xFDE
 21317                           postdec2	equ	0xFDD
 21318                           plusw2	equ	0xFDB
 21319                           fsr2h	equ	0xFDA
 21320                           fsr2l	equ	0xFD9
 21321                           status	equ	0xFD8
 21322                           
 21323 ;; *************** function ___flsub *****************
 21324 ;; Defined at:
 21325 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 21326 ;; Parameters:    Size  Location     Type
 21327 ;;  b               4   61[BANK1 ] long 
 21328 ;;  a               4   65[BANK1 ] long 
 21329 ;; Auto vars:     Size  Location     Type
 21330 ;;		None
 21331 ;; Return value:  Size  Location     Type
 21332 ;;                  4   61[BANK1 ] long 
 21333 ;; Registers used:
 21334 ;;		wreg, status,2, status,0, cstack
 21335 ;; Tracked objects:
 21336 ;;		On entry : 0/0
 21337 ;;		On exit  : 0/0
 21338 ;;		Unchanged: 0/0
 21339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21340 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21343 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21344 ;;Total ram usage:        8 bytes
 21345 ;; Hardware stack levels used:    1
 21346 ;; Hardware stack levels required when called:   14
 21347 ;; This function calls:
 21348 ;;		___fladd
 21349 ;; This function is called by:
 21350 ;;		_printf
 21351 ;; This function uses a non-reentrant model
 21352 ;;
 21353                           
 21354                           	psect	text48
 21355  0184D2                     __ptext48:
 21356                           	opt stack 0
 21357  0184D2                     ___flsub:
 21358                           	opt stack 13
 21359                           
 21360                           ; BSR set to: 1
 21361                           ;incstack = 0
 21362  0184D2  0E00               	movlw	0
 21363  0184D4  0101               	movlb	1	; () banked
 21364  0184D6  1B41               	xorwf	___flsub@a& (0+255),f,b
 21365  0184D8  0E00               	movlw	0
 21366  0184DA  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 21367  0184DC  0E00               	movlw	0
 21368  0184DE  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 21369  0184E0  0E80               	movlw	128
 21370  0184E2  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 21371                           
 21372                           ; BSR set to: 1
 21373  0184E4  C13D  F129         	movff	___flsub@b,___fladd@b
 21374  0184E8  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 21375  0184EC  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 21376  0184F0  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 21377  0184F4  C141  F12D         	movff	___flsub@a,___fladd@a
 21378  0184F8  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 21379  0184FC  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 21380  018500  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 21381  018504  ECA0  F0A3         	call	___fladd	;wreg free
 21382  018508  C129  F13D         	movff	?___fladd,?___flsub
 21383  01850C  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 21384  018510  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 21385  018514  C12C  F140         	movff	?___fladd+3,?___flsub+3
 21386  018518  0012               	return	
 21387  01851A                     __end_of___flsub:
 21388                           	opt stack 0
 21389                           tblptru	equ	0xFF8
 21390                           tblptrh	equ	0xFF7
 21391                           tblptrl	equ	0xFF6
 21392                           tablat	equ	0xFF5
 21393                           prodh	equ	0xFF4
 21394                           prodl	equ	0xFF3
 21395                           intcon	equ	0xFF2
 21396                           indf0	equ	0xFEF
 21397                           postinc0	equ	0xFEE
 21398                           fsr0h	equ	0xFEA
 21399                           fsr0l	equ	0xFE9
 21400                           wreg	equ	0xFE8
 21401                           indf1	equ	0xFE7
 21402                           postdec1	equ	0xFE5
 21403                           plusw1	equ	0xFE3
 21404                           fsr1h	equ	0xFE2
 21405                           fsr1l	equ	0xFE1
 21406                           indf2	equ	0xFDF
 21407                           postinc2	equ	0xFDE
 21408                           postdec2	equ	0xFDD
 21409                           plusw2	equ	0xFDB
 21410                           fsr2h	equ	0xFDA
 21411                           fsr2l	equ	0xFD9
 21412                           status	equ	0xFD8
 21413                           
 21414 ;; *************** function ___fladd *****************
 21415 ;; Defined at:
 21416 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 21417 ;; Parameters:    Size  Location     Type
 21418 ;;  b               4   41[BANK1 ] long 
 21419 ;;  a               4   45[BANK1 ] long 
 21420 ;; Auto vars:     Size  Location     Type
 21421 ;;  grs             1   60[BANK1 ] unsigned char 
 21422 ;;  bexp            1   59[BANK1 ] unsigned char 
 21423 ;;  aexp            1   58[BANK1 ] unsigned char 
 21424 ;;  signs           1   57[BANK1 ] unsigned char 
 21425 ;; Return value:  Size  Location     Type
 21426 ;;                  4   41[BANK1 ] unsigned char 
 21427 ;; Registers used:
 21428 ;;		wreg, status,2, status,0
 21429 ;; Tracked objects:
 21430 ;;		On entry : 0/0
 21431 ;;		On exit  : 0/0
 21432 ;;		Unchanged: 0/0
 21433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21434 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21435 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21436 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21437 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21438 ;;Total ram usage:       20 bytes
 21439 ;; Hardware stack levels used:    1
 21440 ;; Hardware stack levels required when called:   13
 21441 ;; This function calls:
 21442 ;;		Nothing
 21443 ;; This function is called by:
 21444 ;;		_ringBufferLUT
 21445 ;;		_printf
 21446 ;;		___flsub
 21447 ;; This function uses a non-reentrant model
 21448 ;;
 21449                           
 21450                           	psect	text49
 21451  014740                     __ptext49:
 21452                           	opt stack 0
 21453  014740                     ___fladd:
 21454                           	opt stack 13
 21455                           
 21456                           ;incstack = 0
 21457  014740  0101               	movlb	1	; () banked
 21458  014742  512C               	movf	(___fladd@b+3)& (0+255),w,b
 21459  014744  0B80               	andlw	128
 21460  014746  6F39               	movwf	___fladd@signs& (0+255),b
 21461  014748  512C               	movf	(___fladd@b+3)& (0+255),w,b
 21462  01474A  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 21463  01474C  6F3B               	movwf	___fladd@bexp& (0+255),b
 21464                           
 21465                           ; BSR set to: 1
 21466  01474E  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 21467                           
 21468                           ; BSR set to: 1
 21469  014750  813B               	bsf	___fladd@bexp& (0+255),0,b
 21470                           
 21471                           ; BSR set to: 1
 21472                           
 21473                           ; BSR set to: 1
 21474  014752  513B               	movf	___fladd@bexp& (0+255),w,b
 21475  014754  B4D8               	btfsc	status,2,c
 21476  014756  D00D               	goto	l2091
 21477                           
 21478                           ; BSR set to: 1
 21479  014758  293B               	incf	___fladd@bexp& (0+255),w,b
 21480  01475A  A4D8               	btfss	status,2,c
 21481  01475C  D008               	goto	l2092
 21482                           
 21483                           ; BSR set to: 1
 21484  01475E  0E00               	movlw	0
 21485  014760  6F29               	movwf	___fladd@b& (0+255),b
 21486  014762  0E00               	movlw	0
 21487  014764  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 21488  014766  0E00               	movlw	0
 21489  014768  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 21490  01476A  0E00               	movlw	0
 21491  01476C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21492  01476E                     l2092:
 21493                           
 21494                           ; BSR set to: 1
 21495                           
 21496                           ; BSR set to: 1
 21497  01476E  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 21498  014770  D006               	goto	L6
 21499  014772                     l2091:
 21500                           
 21501                           ; BSR set to: 1
 21502                           
 21503                           ; BSR set to: 1
 21504  014772  0E00               	movlw	0
 21505  014774  6F29               	movwf	___fladd@b& (0+255),b
 21506  014776  0E00               	movlw	0
 21507  014778  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 21508  01477A  0E00               	movlw	0
 21509  01477C  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 21510  01477E                     L6:
 21511  01477E  0E00               	movlw	0
 21512  014780  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21513                           
 21514                           ; BSR set to: 1
 21515                           
 21516                           ; BSR set to: 1
 21517  014782  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21518  014784  0B80               	andlw	128
 21519  014786  6F3A               	movwf	___fladd@aexp& (0+255),b
 21520                           
 21521                           ; BSR set to: 1
 21522  014788  5139               	movf	___fladd@signs& (0+255),w,b
 21523  01478A  193A               	xorwf	___fladd@aexp& (0+255),w,b
 21524  01478C  A4D8               	btfss	status,2,c
 21525                           
 21526                           ; BSR set to: 1
 21527  01478E  8D39               	bsf	___fladd@signs& (0+255),6,b
 21528                           
 21529                           ; BSR set to: 1
 21530                           
 21531                           ; BSR set to: 1
 21532  014790  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21533  014792  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 21534  014794  6F3A               	movwf	___fladd@aexp& (0+255),b
 21535                           
 21536                           ; BSR set to: 1
 21537  014796  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 21538                           
 21539                           ; BSR set to: 1
 21540  014798  813A               	bsf	___fladd@aexp& (0+255),0,b
 21541                           
 21542                           ; BSR set to: 1
 21543                           
 21544                           ; BSR set to: 1
 21545  01479A  513A               	movf	___fladd@aexp& (0+255),w,b
 21546  01479C  B4D8               	btfsc	status,2,c
 21547  01479E  D00D               	goto	l2096
 21548                           
 21549                           ; BSR set to: 1
 21550  0147A0  293A               	incf	___fladd@aexp& (0+255),w,b
 21551  0147A2  A4D8               	btfss	status,2,c
 21552  0147A4  D008               	goto	l2097
 21553                           
 21554                           ; BSR set to: 1
 21555  0147A6  0E00               	movlw	0
 21556  0147A8  6F2D               	movwf	___fladd@a& (0+255),b
 21557  0147AA  0E00               	movlw	0
 21558  0147AC  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 21559  0147AE  0E00               	movlw	0
 21560  0147B0  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 21561  0147B2  0E00               	movlw	0
 21562  0147B4  6F30               	movwf	(___fladd@a+3)& (0+255),b
 21563  0147B6                     l2097:
 21564                           
 21565                           ; BSR set to: 1
 21566                           
 21567                           ; BSR set to: 1
 21568  0147B6  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 21569  0147B8  D006               	goto	L7
 21570  0147BA                     l2096:
 21571                           
 21572                           ; BSR set to: 1
 21573                           
 21574                           ; BSR set to: 1
 21575  0147BA  0E00               	movlw	0
 21576  0147BC  6F2D               	movwf	___fladd@a& (0+255),b
 21577  0147BE  0E00               	movlw	0
 21578  0147C0  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 21579  0147C2  0E00               	movlw	0
 21580  0147C4  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 21581  0147C6                     L7:
 21582  0147C6  0E00               	movlw	0
 21583  0147C8  6F30               	movwf	(___fladd@a+3)& (0+255),b
 21584                           
 21585                           ; BSR set to: 1
 21586                           
 21587                           ; BSR set to: 1
 21588  0147CA  513B               	movf	___fladd@bexp& (0+255),w,b
 21589  0147CC  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 21590  0147CE  B0D8               	btfsc	status,0,c
 21591  0147D0  D022               	goto	l2099
 21592                           
 21593                           ; BSR set to: 1
 21594  0147D2  AD39               	btfss	___fladd@signs& (0+255),6,b
 21595  0147D4  D002               	goto	l2100
 21596                           
 21597                           ; BSR set to: 1
 21598  0147D6  0E80               	movlw	128
 21599  0147D8  1B39               	xorwf	___fladd@signs& (0+255),f,b
 21600  0147DA                     l2100:
 21601                           
 21602                           ; BSR set to: 1
 21603                           
 21604                           ; BSR set to: 1
 21605  0147DA  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 21606                           
 21607                           ; BSR set to: 1
 21608  0147DE  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 21609                           
 21610                           ; BSR set to: 1
 21611  0147E2  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 21612                           
 21613                           ; BSR set to: 1
 21614  0147E6  C129  F13C         	movff	___fladd@b,___fladd@grs
 21615                           
 21616                           ; BSR set to: 1
 21617  0147EA  C12D  F129         	movff	___fladd@a,___fladd@b
 21618                           
 21619                           ; BSR set to: 1
 21620  0147EE  C13C  F12D         	movff	___fladd@grs,___fladd@a
 21621                           
 21622                           ; BSR set to: 1
 21623  0147F2  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 21624                           
 21625                           ; BSR set to: 1
 21626  0147F6  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 21627                           
 21628                           ; BSR set to: 1
 21629  0147FA  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 21630                           
 21631                           ; BSR set to: 1
 21632  0147FE  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 21633                           
 21634                           ; BSR set to: 1
 21635  014802  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 21636                           
 21637                           ; BSR set to: 1
 21638  014806  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 21639                           
 21640                           ; BSR set to: 1
 21641  01480A  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 21642                           
 21643                           ; BSR set to: 1
 21644  01480E  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 21645                           
 21646                           ; BSR set to: 1
 21647  014812  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 21648  014816                     l2099:
 21649                           
 21650                           ; BSR set to: 1
 21651                           
 21652                           ; BSR set to: 1
 21653  014816  0E00               	movlw	0
 21654  014818  6F3C               	movwf	___fladd@grs& (0+255),b
 21655                           
 21656                           ; BSR set to: 1
 21657  01481A  513B               	movf	___fladd@bexp& (0+255),w,b
 21658  01481C  6F31               	movwf	??___fladd& (0+255),b
 21659  01481E  6B32               	clrf	(??___fladd+1)& (0+255),b
 21660  014820  1F31               	comf	??___fladd& (0+255),f,b
 21661  014822  1F32               	comf	(??___fladd+1)& (0+255),f,b
 21662  014824  4B31               	infsnz	??___fladd& (0+255),f,b
 21663  014826  2B32               	incf	(??___fladd+1)& (0+255),f,b
 21664  014828  513A               	movf	___fladd@aexp& (0+255),w,b
 21665  01482A  6F33               	movwf	(??___fladd+2)& (0+255),b
 21666  01482C  6B34               	clrf	(??___fladd+3)& (0+255),b
 21667  01482E  5131               	movf	??___fladd& (0+255),w,b
 21668  014830  2733               	addwf	(??___fladd+2)& (0+255),f,b
 21669  014832  5132               	movf	(??___fladd+1)& (0+255),w,b
 21670  014834  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 21671  014836  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 21672  014838  D02C               	goto	l2103
 21673  01483A  5134               	movf	(??___fladd+3)& (0+255),w,b
 21674  01483C  E104               	bnz	u23020
 21675  01483E  0E1A               	movlw	26
 21676  014840  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 21677  014842  A0D8               	btfss	status,0,c
 21678  014844  D026               	goto	l2103
 21679  014846                     u23020:
 21680                           
 21681                           ; BSR set to: 1
 21682  014846  5129               	movf	___fladd@b& (0+255),w,b
 21683  014848  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 21684  01484A  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 21685  01484C  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 21686  01484E  B4D8               	btfsc	status,2,c
 21687  014850  D002               	goto	u23030
 21688  014852  0E01               	movlw	1
 21689  014854  D001               	goto	u23040
 21690  014856                     u23030:
 21691  014856  0E00               	movlw	0
 21692  014858                     u23040:
 21693  014858  6F3C               	movwf	___fladd@grs& (0+255),b
 21694                           
 21695                           ; BSR set to: 1
 21696  01485A  0E00               	movlw	0
 21697  01485C  6F29               	movwf	___fladd@b& (0+255),b
 21698  01485E  0E00               	movlw	0
 21699  014860  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 21700  014862  0E00               	movlw	0
 21701  014864  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 21702  014866  0E00               	movlw	0
 21703  014868  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21704                           
 21705                           ; BSR set to: 1
 21706  01486A  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 21707  01486E  D015               	goto	u23070
 21708  014870                     l2104:
 21709                           
 21710                           ; BSR set to: 1
 21711  014870  A13C               	btfss	___fladd@grs& (0+255),0,b
 21712  014872  D005               	goto	l2105
 21713                           
 21714                           ; BSR set to: 1
 21715  014874  90D8               	bcf	status,0,c
 21716  014876  313C               	rrcf	___fladd@grs& (0+255),w,b
 21717  014878  0901               	iorlw	1
 21718  01487A  6F3C               	movwf	___fladd@grs& (0+255),b
 21719  01487C  D002               	goto	l2106
 21720  01487E                     l2105:
 21721                           
 21722                           ; BSR set to: 1
 21723                           
 21724                           ; BSR set to: 1
 21725  01487E  90D8               	bcf	status,0,c
 21726  014880  333C               	rrcf	___fladd@grs& (0+255),f,b
 21727  014882                     l2106:
 21728                           
 21729                           ; BSR set to: 1
 21730                           
 21731                           ; BSR set to: 1
 21732  014882  B129               	btfsc	___fladd@b& (0+255),0,b
 21733                           
 21734                           ; BSR set to: 1
 21735  014884  8F3C               	bsf	___fladd@grs& (0+255),7,b
 21736                           
 21737                           ; BSR set to: 1
 21738                           
 21739                           ; BSR set to: 1
 21740  014886  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 21741  014888  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 21742  01488A  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 21743  01488C  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 21744  01488E  3329               	rrcf	___fladd@b& (0+255),f,b
 21745                           
 21746                           ; BSR set to: 1
 21747  014890  2B3B               	incf	___fladd@bexp& (0+255),f,b
 21748  014892                     l2103:
 21749                           
 21750                           ; BSR set to: 1
 21751  014892  513A               	movf	___fladd@aexp& (0+255),w,b
 21752  014894  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 21753  014896  A0D8               	btfss	status,0,c
 21754  014898  D7EB               	goto	l2104
 21755  01489A                     u23070:
 21756                           
 21757                           ; BSR set to: 1
 21758                           
 21759                           ; BSR set to: 1
 21760  01489A  BD39               	btfsc	___fladd@signs& (0+255),6,b
 21761  01489C  D029               	goto	l2109
 21762                           
 21763                           ; BSR set to: 1
 21764  01489E  513B               	movf	___fladd@bexp& (0+255),w,b
 21765  0148A0  A4D8               	btfss	status,2,c
 21766  0148A2  D009               	goto	l2110
 21767                           
 21768                           ; BSR set to: 1
 21769  0148A4  0E00               	movlw	0
 21770  0148A6  6F29               	movwf	?___fladd& (0+255),b
 21771  0148A8  0E00               	movlw	0
 21772  0148AA  6F2A               	movwf	(?___fladd+1)& (0+255),b
 21773  0148AC  0E00               	movlw	0
 21774  0148AE  6F2B               	movwf	(?___fladd+2)& (0+255),b
 21775  0148B0  0E00               	movlw	0
 21776  0148B2  6F2C               	movwf	(?___fladd+3)& (0+255),b
 21777                           
 21778                           ; BSR set to: 1
 21779  0148B4  0012               	return	
 21780  0148B6                     l2110:
 21781                           
 21782                           ; BSR set to: 1
 21783                           
 21784                           ; BSR set to: 1
 21785  0148B6  512D               	movf	___fladd@a& (0+255),w,b
 21786  0148B8  2729               	addwf	___fladd@b& (0+255),f,b
 21787  0148BA  512E               	movf	(___fladd@a+1)& (0+255),w,b
 21788  0148BC  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 21789  0148BE  512F               	movf	(___fladd@a+2)& (0+255),w,b
 21790  0148C0  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 21791  0148C2  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21792  0148C4  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 21793                           
 21794                           ; BSR set to: 1
 21795  0148C6  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 21796  0148C8  D083               	goto	u23200
 21797                           
 21798                           ; BSR set to: 1
 21799  0148CA  A13C               	btfss	___fladd@grs& (0+255),0,b
 21800  0148CC  D006               	goto	l2113
 21801                           
 21802                           ; BSR set to: 1
 21803  0148CE  90D8               	bcf	status,0,c
 21804  0148D0  333C               	rrcf	___fladd@grs& (0+255),f,b
 21805  0148D2  513C               	movf	___fladd@grs& (0+255),w,b
 21806  0148D4  0901               	iorlw	1
 21807  0148D6  6F3C               	movwf	___fladd@grs& (0+255),b
 21808  0148D8  D002               	goto	l2114
 21809  0148DA                     l2113:
 21810                           
 21811                           ; BSR set to: 1
 21812                           
 21813                           ; BSR set to: 1
 21814  0148DA  90D8               	bcf	status,0,c
 21815  0148DC  333C               	rrcf	___fladd@grs& (0+255),f,b
 21816  0148DE                     l2114:
 21817                           
 21818                           ; BSR set to: 1
 21819                           
 21820                           ; BSR set to: 1
 21821  0148DE  B129               	btfsc	___fladd@b& (0+255),0,b
 21822                           
 21823                           ; BSR set to: 1
 21824  0148E0  8F3C               	bsf	___fladd@grs& (0+255),7,b
 21825                           
 21826                           ; BSR set to: 1
 21827                           
 21828                           ; BSR set to: 1
 21829  0148E2  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 21830  0148E4  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 21831  0148E6  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 21832  0148E8  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 21833  0148EA  3329               	rrcf	___fladd@b& (0+255),f,b
 21834                           
 21835                           ; BSR set to: 1
 21836  0148EC  2B3B               	incf	___fladd@bexp& (0+255),f,b
 21837                           
 21838                           ; BSR set to: 1
 21839  0148EE  D070               	goto	u23200
 21840  0148F0                     l2109:
 21841                           
 21842                           ; BSR set to: 1
 21843                           
 21844                           ; BSR set to: 1
 21845  0148F0  512D               	movf	___fladd@a& (0+255),w,b
 21846  0148F2  5D29               	subwf	___fladd@b& (0+255),w,b
 21847  0148F4  512E               	movf	(___fladd@a+1)& (0+255),w,b
 21848  0148F6  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 21849  0148F8  512F               	movf	(___fladd@a+2)& (0+255),w,b
 21850  0148FA  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 21851  0148FC  512C               	movf	(___fladd@b+3)& (0+255),w,b
 21852  0148FE  0A80               	xorlw	128
 21853  014900  6F31               	movwf	??___fladd& (0+255),b
 21854  014902  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21855  014904  0A80               	xorlw	128
 21856  014906  5931               	subwfb	??___fladd& (0+255),w,b
 21857  014908  B0D8               	btfsc	status,0,c
 21858  01490A  D036               	goto	l2117
 21859                           
 21860                           ; BSR set to: 1
 21861  01490C  C129  F131         	movff	___fladd@b,??___fladd
 21862  014910  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 21863  014914  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 21864  014918  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 21865  01491C  1F31               	comf	??___fladd& (0+255),f,b
 21866  01491E  1F32               	comf	(??___fladd+1)& (0+255),f,b
 21867  014920  1F33               	comf	(??___fladd+2)& (0+255),f,b
 21868  014922  1F34               	comf	(??___fladd+3)& (0+255),f,b
 21869  014924  2B31               	incf	??___fladd& (0+255),f,b
 21870  014926  0E00               	movlw	0
 21871  014928  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 21872  01492A  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 21873  01492C  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 21874  01492E  512D               	movf	___fladd@a& (0+255),w,b
 21875  014930  2531               	addwf	??___fladd& (0+255),w,b
 21876  014932  6F35               	movwf	(??___fladd+4)& (0+255),b
 21877  014934  512E               	movf	(___fladd@a+1)& (0+255),w,b
 21878  014936  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 21879  014938  6F36               	movwf	(??___fladd+5)& (0+255),b
 21880  01493A  512F               	movf	(___fladd@a+2)& (0+255),w,b
 21881  01493C  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 21882  01493E  6F37               	movwf	(??___fladd+6)& (0+255),b
 21883  014940  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21884  014942  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 21885  014944  6F38               	movwf	(??___fladd+7)& (0+255),b
 21886  014946  0EFF               	movlw	255
 21887  014948  2535               	addwf	(??___fladd+4)& (0+255),w,b
 21888  01494A  6F29               	movwf	___fladd@b& (0+255),b
 21889  01494C  0EFF               	movlw	255
 21890  01494E  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 21891  014950  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 21892  014952  0EFF               	movlw	255
 21893  014954  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 21894  014956  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 21895  014958  0EFF               	movlw	255
 21896  01495A  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 21897  01495C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 21898  01495E  0E80               	movlw	128
 21899  014960  1B39               	xorwf	___fladd@signs& (0+255),f,b
 21900                           
 21901                           ; BSR set to: 1
 21902  014962  6D3C               	negf	___fladd@grs& (0+255),b
 21903                           
 21904                           ; BSR set to: 1
 21905  014964  513C               	movf	___fladd@grs& (0+255),w,b
 21906  014966  A4D8               	btfss	status,2,c
 21907  014968  D00F               	goto	l2119
 21908                           
 21909                           ; BSR set to: 1
 21910  01496A  0E01               	movlw	1
 21911  01496C  2729               	addwf	___fladd@b& (0+255),f,b
 21912  01496E  0E00               	movlw	0
 21913  014970  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 21914  014972  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 21915  014974  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 21916                           
 21917                           ; BSR set to: 1
 21918  014976  D008               	goto	l2119
 21919  014978                     l2117:
 21920                           
 21921                           ; BSR set to: 1
 21922                           
 21923                           ; BSR set to: 1
 21924  014978  512D               	movf	___fladd@a& (0+255),w,b
 21925  01497A  5F29               	subwf	___fladd@b& (0+255),f,b
 21926  01497C  512E               	movf	(___fladd@a+1)& (0+255),w,b
 21927  01497E  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 21928  014980  512F               	movf	(___fladd@a+2)& (0+255),w,b
 21929  014982  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 21930  014984  5130               	movf	(___fladd@a+3)& (0+255),w,b
 21931  014986  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 21932  014988                     l2119:
 21933                           
 21934                           ; BSR set to: 1
 21935  014988  5129               	movf	___fladd@b& (0+255),w,b
 21936  01498A  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 21937  01498C  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 21938  01498E  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 21939  014990  A4D8               	btfss	status,2,c
 21940  014992  D01C               	goto	l2126
 21941                           
 21942                           ; BSR set to: 1
 21943  014994  513C               	movf	___fladd@grs& (0+255),w,b
 21944  014996  A4D8               	btfss	status,2,c
 21945  014998  D019               	goto	l2126
 21946                           
 21947                           ; BSR set to: 1
 21948  01499A  0E00               	movlw	0
 21949  01499C  6F29               	movwf	?___fladd& (0+255),b
 21950  01499E  0E00               	movlw	0
 21951  0149A0  6F2A               	movwf	(?___fladd+1)& (0+255),b
 21952  0149A2  0E00               	movlw	0
 21953  0149A4  6F2B               	movwf	(?___fladd+2)& (0+255),b
 21954  0149A6  0E00               	movlw	0
 21955  0149A8  6F2C               	movwf	(?___fladd+3)& (0+255),b
 21956                           
 21957                           ; BSR set to: 1
 21958  0149AA  0012               	return	
 21959  0149AC                     
 21960                           ; BSR set to: 1
 21961                           
 21962                           ; BSR set to: 1
 21963  0149AC  90D8               	bcf	status,0,c
 21964  0149AE  3729               	rlcf	___fladd@b& (0+255),f,b
 21965  0149B0  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 21966  0149B2  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 21967  0149B4  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 21968                           
 21969                           ; BSR set to: 1
 21970  0149B6  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 21971                           
 21972                           ; BSR set to: 1
 21973  0149B8  8129               	bsf	___fladd@b& (0+255),0,b
 21974                           
 21975                           ; BSR set to: 1
 21976                           
 21977                           ; BSR set to: 1
 21978  0149BA  A13C               	btfss	___fladd@grs& (0+255),0,b
 21979  0149BC  D002               	goto	l2124
 21980                           
 21981                           ; BSR set to: 1
 21982  0149BE  80D8               	bsf	status,0,c
 21983  0149C0  D001               	goto	L8
 21984  0149C2                     l2124:
 21985                           
 21986                           ; BSR set to: 1
 21987                           
 21988                           ; BSR set to: 1
 21989  0149C2  90D8               	bcf	status,0,c
 21990  0149C4                     L8:
 21991  0149C4  373C               	rlcf	___fladd@grs& (0+255),f,b
 21992                           
 21993                           ; BSR set to: 1
 21994                           
 21995                           ; BSR set to: 1
 21996  0149C6  513B               	movf	___fladd@bexp& (0+255),w,b
 21997  0149C8  A4D8               	btfss	status,2,c
 21998                           
 21999                           ; BSR set to: 1
 22000  0149CA  073B               	decf	___fladd@bexp& (0+255),f,b
 22001  0149CC                     l2126:
 22002                           
 22003                           ; BSR set to: 1
 22004                           
 22005                           ; BSR set to: 1
 22006                           
 22007                           ; BSR set to: 1
 22008  0149CC  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 22009  0149CE  D7EE               	goto	l2122
 22010  0149D0                     u23200:
 22011                           
 22012                           ; BSR set to: 1
 22013                           
 22014                           ; BSR set to: 1
 22015                           
 22016                           ; BSR set to: 1
 22017  0149D0  0E00               	movlw	0
 22018  0149D2  6F3A               	movwf	___fladd@aexp& (0+255),b
 22019                           
 22020                           ; BSR set to: 1
 22021  0149D4  AF3C               	btfss	___fladd@grs& (0+255),7,b
 22022  0149D6  D00A               	goto	l2131
 22023                           
 22024                           ; BSR set to: 1
 22025  0149D8  C13C  F131         	movff	___fladd@grs,??___fladd
 22026  0149DC  0E7F               	movlw	127
 22027  0149DE  1731               	andwf	??___fladd& (0+255),f,b
 22028  0149E0  A4D8               	btfss	status,2,c
 22029  0149E2  D002               	goto	u23230
 22030                           
 22031                           ; BSR set to: 1
 22032                           
 22033                           ; BSR set to: 1
 22034  0149E4  A129               	btfss	___fladd@b& (0+255),0,b
 22035  0149E6  D002               	goto	l2131
 22036  0149E8                     u23230:
 22037                           
 22038                           ; BSR set to: 1
 22039  0149E8  0E01               	movlw	1
 22040  0149EA  6F3A               	movwf	___fladd@aexp& (0+255),b
 22041  0149EC                     l2131:
 22042                           
 22043                           ; BSR set to: 1
 22044                           
 22045                           ; BSR set to: 1
 22046                           
 22047                           ; BSR set to: 1
 22048  0149EC  513A               	movf	___fladd@aexp& (0+255),w,b
 22049  0149EE  B4D8               	btfsc	status,2,c
 22050  0149F0  D020               	goto	l2134
 22051                           
 22052                           ; BSR set to: 1
 22053  0149F2  0E01               	movlw	1
 22054  0149F4  2729               	addwf	___fladd@b& (0+255),f,b
 22055  0149F6  0E00               	movlw	0
 22056  0149F8  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 22057  0149FA  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 22058  0149FC  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 22059                           
 22060                           ; BSR set to: 1
 22061  0149FE  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 22062  014A00  D018               	goto	l2134
 22063                           
 22064                           ; BSR set to: 1
 22065  014A02  C129  F131         	movff	___fladd@b,??___fladd
 22066  014A06  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 22067  014A0A  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 22068  014A0E  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 22069  014A12  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 22070  014A14  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 22071  014A16  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 22072  014A18  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 22073  014A1A  3331               	rrcf	??___fladd& (0+255),f,b
 22074  014A1C  C131  F129         	movff	??___fladd,___fladd@b
 22075  014A20  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 22076  014A24  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 22077  014A28  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 22078  014A2C  293B               	incf	___fladd@bexp& (0+255),w,b
 22079  014A2E  A4D8               	btfss	status,2,c
 22080                           
 22081                           ; BSR set to: 1
 22082  014A30  2B3B               	incf	___fladd@bexp& (0+255),f,b
 22083  014A32                     l2134:
 22084                           
 22085                           ; BSR set to: 1
 22086                           
 22087                           ; BSR set to: 1
 22088                           
 22089                           ; BSR set to: 1
 22090                           
 22091                           ; BSR set to: 1
 22092  014A32  293B               	incf	___fladd@bexp& (0+255),w,b
 22093  014A34  B4D8               	btfsc	status,2,c
 22094  014A36  D003               	goto	u23280
 22095                           
 22096                           ; BSR set to: 1
 22097  014A38  513B               	movf	___fladd@bexp& (0+255),w,b
 22098  014A3A  A4D8               	btfss	status,2,c
 22099  014A3C  D00D               	goto	l2138
 22100  014A3E                     u23280:
 22101                           
 22102                           ; BSR set to: 1
 22103                           
 22104                           ; BSR set to: 1
 22105  014A3E  0E00               	movlw	0
 22106  014A40  6F29               	movwf	___fladd@b& (0+255),b
 22107  014A42  0E00               	movlw	0
 22108  014A44  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 22109  014A46  0E00               	movlw	0
 22110  014A48  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 22111  014A4A  0E00               	movlw	0
 22112  014A4C  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 22113  014A4E  513B               	movf	___fladd@bexp& (0+255),w,b
 22114  014A50  A4D8               	btfss	status,2,c
 22115  014A52  D002               	goto	l2138
 22116                           
 22117                           ; BSR set to: 1
 22118  014A54  0E00               	movlw	0
 22119  014A56  6F39               	movwf	___fladd@signs& (0+255),b
 22120  014A58                     l2138:
 22121                           
 22122                           ; BSR set to: 1
 22123                           
 22124                           ; BSR set to: 1
 22125                           
 22126                           ; BSR set to: 1
 22127  014A58  A13B               	btfss	___fladd@bexp& (0+255),0,b
 22128  014A5A  D002               	goto	l2139
 22129                           
 22130                           ; BSR set to: 1
 22131  014A5C  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 22132  014A5E  D001               	goto	l2140
 22133  014A60                     l2139:
 22134                           
 22135                           ; BSR set to: 1
 22136                           
 22137                           ; BSR set to: 1
 22138  014A60  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 22139  014A62                     l2140:
 22140                           
 22141                           ; BSR set to: 1
 22142                           
 22143                           ; BSR set to: 1
 22144  014A62  90D8               	bcf	status,0,c
 22145  014A64  313B               	rrcf	___fladd@bexp& (0+255),w,b
 22146  014A66  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 22147                           
 22148                           ; BSR set to: 1
 22149  014A68  BF39               	btfsc	___fladd@signs& (0+255),7,b
 22150                           
 22151                           ; BSR set to: 1
 22152  014A6A  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 22153                           
 22154                           ; BSR set to: 1
 22155                           
 22156                           ; BSR set to: 1
 22157  014A6C  C129  F129         	movff	___fladd@b,?___fladd
 22158  014A70  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 22159  014A74  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 22160  014A78  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 22161  014A7C  0012               	return	
 22162  014A7E                     __end_of___fladd:
 22163                           	opt stack 0
 22164                           tblptru	equ	0xFF8
 22165                           tblptrh	equ	0xFF7
 22166                           tblptrl	equ	0xFF6
 22167                           tablat	equ	0xFF5
 22168                           prodh	equ	0xFF4
 22169                           prodl	equ	0xFF3
 22170                           intcon	equ	0xFF2
 22171                           indf0	equ	0xFEF
 22172                           postinc0	equ	0xFEE
 22173                           fsr0h	equ	0xFEA
 22174                           fsr0l	equ	0xFE9
 22175                           wreg	equ	0xFE8
 22176                           indf1	equ	0xFE7
 22177                           postdec1	equ	0xFE5
 22178                           plusw1	equ	0xFE3
 22179                           fsr1h	equ	0xFE2
 22180                           fsr1l	equ	0xFE1
 22181                           indf2	equ	0xFDF
 22182                           postinc2	equ	0xFDE
 22183                           postdec2	equ	0xFDD
 22184                           plusw2	equ	0xFDB
 22185                           fsr2h	equ	0xFDA
 22186                           fsr2l	equ	0xFD9
 22187                           status	equ	0xFD8
 22188                           
 22189 ;; *************** function ___flneg *****************
 22190 ;; Defined at:
 22191 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 22192 ;; Parameters:    Size  Location     Type
 22193 ;;  f1              4   37[BANK1 ] unsigned char 
 22194 ;; Auto vars:     Size  Location     Type
 22195 ;;		None
 22196 ;; Return value:  Size  Location     Type
 22197 ;;                  4   37[BANK1 ] unsigned char 
 22198 ;; Registers used:
 22199 ;;		wreg, status,2, status,0
 22200 ;; Tracked objects:
 22201 ;;		On entry : 0/0
 22202 ;;		On exit  : 0/0
 22203 ;;		Unchanged: 0/0
 22204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22205 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22208 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22209 ;;Total ram usage:        4 bytes
 22210 ;; Hardware stack levels used:    1
 22211 ;; Hardware stack levels required when called:   13
 22212 ;; This function calls:
 22213 ;;		Nothing
 22214 ;; This function is called by:
 22215 ;;		_ringBufferLUT
 22216 ;;		_printf
 22217 ;; This function uses a non-reentrant model
 22218 ;;
 22219                           
 22220                           	psect	text50
 22221  01884C                     __ptext50:
 22222                           	opt stack 0
 22223  01884C                     ___flneg:
 22224                           	opt stack 14
 22225                           
 22226                           ; BSR set to: 1
 22227                           ;incstack = 0
 22228  01884C  0101               	movlb	1	; () banked
 22229  01884E  5125               	movf	___flneg@f1& (0+255),w,b
 22230  018850  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 22231  018852  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 22232  018854  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 22233  018856  B4D8               	btfsc	status,2,c
 22234  018858  D008               	goto	l1828
 22235                           
 22236                           ; BSR set to: 1
 22237  01885A  0E00               	movlw	0
 22238  01885C  1B25               	xorwf	___flneg@f1& (0+255),f,b
 22239  01885E  0E00               	movlw	0
 22240  018860  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 22241  018862  0E00               	movlw	0
 22242  018864  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 22243  018866  0E80               	movlw	128
 22244  018868  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 22245  01886A                     l1828:
 22246                           
 22247                           ; BSR set to: 1
 22248                           
 22249                           ; BSR set to: 1
 22250  01886A  C125  F125         	movff	___flneg@f1,?___flneg
 22251  01886E  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 22252  018872  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 22253  018876  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 22254  01887A  0012               	return	
 22255  01887C                     __end_of___flneg:
 22256                           	opt stack 0
 22257                           tblptru	equ	0xFF8
 22258                           tblptrh	equ	0xFF7
 22259                           tblptrl	equ	0xFF6
 22260                           tablat	equ	0xFF5
 22261                           prodh	equ	0xFF4
 22262                           prodl	equ	0xFF3
 22263                           intcon	equ	0xFF2
 22264                           indf0	equ	0xFEF
 22265                           postinc0	equ	0xFEE
 22266                           fsr0h	equ	0xFEA
 22267                           fsr0l	equ	0xFE9
 22268                           wreg	equ	0xFE8
 22269                           indf1	equ	0xFE7
 22270                           postdec1	equ	0xFE5
 22271                           plusw1	equ	0xFE3
 22272                           fsr1h	equ	0xFE2
 22273                           fsr1l	equ	0xFE1
 22274                           indf2	equ	0xFDF
 22275                           postinc2	equ	0xFDE
 22276                           postdec2	equ	0xFDD
 22277                           plusw2	equ	0xFDB
 22278                           fsr2h	equ	0xFDA
 22279                           fsr2l	equ	0xFD9
 22280                           status	equ	0xFD8
 22281                           
 22282 ;; *************** function ___flge *****************
 22283 ;; Defined at:
 22284 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 22285 ;; Parameters:    Size  Location     Type
 22286 ;;  ff1             4   23[BANK1 ] unsigned char 
 22287 ;;  ff2             4   27[BANK1 ] unsigned char 
 22288 ;; Auto vars:     Size  Location     Type
 22289 ;;		None
 22290 ;; Return value:  Size  Location     Type
 22291 ;;		None               void
 22292 ;; Registers used:
 22293 ;;		wreg, status,2, status,0
 22294 ;; Tracked objects:
 22295 ;;		On entry : 0/0
 22296 ;;		On exit  : 0/0
 22297 ;;		Unchanged: 0/0
 22298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22299 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22301 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22302 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22303 ;;Total ram usage:       12 bytes
 22304 ;; Hardware stack levels used:    1
 22305 ;; Hardware stack levels required when called:   13
 22306 ;; This function calls:
 22307 ;;		Nothing
 22308 ;; This function is called by:
 22309 ;;		_main
 22310 ;;		_printf
 22311 ;; This function uses a non-reentrant model
 22312 ;;
 22313                           
 22314                           	psect	text51
 22315  01700C                     __ptext51:
 22316                           	opt stack 0
 22317  01700C                     ___flge:
 22318                           	opt stack 14
 22319                           
 22320                           ; BSR set to: 1
 22321                           ;incstack = 0
 22322  01700C  0E00               	movlw	0
 22323  01700E  0101               	movlb	1	; () banked
 22324  017010  1517               	andwf	___flge@ff1& (0+255),w,b
 22325  017012  6F1F               	movwf	??___flge& (0+255),b
 22326  017014  0E00               	movlw	0
 22327  017016  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 22328  017018  6F20               	movwf	(??___flge+1)& (0+255),b
 22329  01701A  0E80               	movlw	128
 22330  01701C  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 22331  01701E  6F21               	movwf	(??___flge+2)& (0+255),b
 22332  017020  0E7F               	movlw	127
 22333  017022  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 22334  017024  6F22               	movwf	(??___flge+3)& (0+255),b
 22335  017026  511F               	movf	??___flge& (0+255),w,b
 22336  017028  1120               	iorwf	(??___flge+1)& (0+255),w,b
 22337  01702A  1121               	iorwf	(??___flge+2)& (0+255),w,b
 22338  01702C  1122               	iorwf	(??___flge+3)& (0+255),w,b
 22339  01702E  A4D8               	btfss	status,2,c
 22340  017030  D008               	goto	l1821
 22341                           
 22342                           ; BSR set to: 1
 22343  017032  0E00               	movlw	0
 22344  017034  6F17               	movwf	___flge@ff1& (0+255),b
 22345  017036  0E00               	movlw	0
 22346  017038  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 22347  01703A  0E00               	movlw	0
 22348  01703C  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 22349  01703E  0E00               	movlw	0
 22350  017040  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 22351  017042                     l1821:
 22352                           
 22353                           ; BSR set to: 1
 22354                           
 22355                           ; BSR set to: 1
 22356  017042  0E00               	movlw	0
 22357  017044  151B               	andwf	___flge@ff2& (0+255),w,b
 22358  017046  6F1F               	movwf	??___flge& (0+255),b
 22359  017048  0E00               	movlw	0
 22360  01704A  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 22361  01704C  6F20               	movwf	(??___flge+1)& (0+255),b
 22362  01704E  0E80               	movlw	128
 22363  017050  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 22364  017052  6F21               	movwf	(??___flge+2)& (0+255),b
 22365  017054  0E7F               	movlw	127
 22366  017056  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 22367  017058  6F22               	movwf	(??___flge+3)& (0+255),b
 22368  01705A  511F               	movf	??___flge& (0+255),w,b
 22369  01705C  1120               	iorwf	(??___flge+1)& (0+255),w,b
 22370  01705E  1121               	iorwf	(??___flge+2)& (0+255),w,b
 22371  017060  1122               	iorwf	(??___flge+3)& (0+255),w,b
 22372  017062  A4D8               	btfss	status,2,c
 22373  017064  D008               	goto	l1822
 22374                           
 22375                           ; BSR set to: 1
 22376  017066  0E00               	movlw	0
 22377  017068  6F1B               	movwf	___flge@ff2& (0+255),b
 22378  01706A  0E00               	movlw	0
 22379  01706C  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 22380  01706E  0E00               	movlw	0
 22381  017070  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 22382  017072  0E00               	movlw	0
 22383  017074  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 22384  017076                     l1822:
 22385                           
 22386                           ; BSR set to: 1
 22387                           
 22388                           ; BSR set to: 1
 22389  017076  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 22390  017078  D01D               	goto	l1823
 22391                           
 22392                           ; BSR set to: 1
 22393  01707A  C117  F11F         	movff	___flge@ff1,??___flge
 22394  01707E  C118  F120         	movff	___flge@ff1+1,??___flge+1
 22395  017082  C119  F121         	movff	___flge@ff1+2,??___flge+2
 22396  017086  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 22397  01708A  1F1F               	comf	??___flge& (0+255),f,b
 22398  01708C  1F20               	comf	(??___flge+1)& (0+255),f,b
 22399  01708E  1F21               	comf	(??___flge+2)& (0+255),f,b
 22400  017090  1F22               	comf	(??___flge+3)& (0+255),f,b
 22401  017092  2B1F               	incf	??___flge& (0+255),f,b
 22402  017094  0E00               	movlw	0
 22403  017096  2320               	addwfc	(??___flge+1)& (0+255),f,b
 22404  017098  2321               	addwfc	(??___flge+2)& (0+255),f,b
 22405  01709A  2322               	addwfc	(??___flge+3)& (0+255),f,b
 22406  01709C  0E00               	movlw	0
 22407  01709E  251F               	addwf	??___flge& (0+255),w,b
 22408  0170A0  6F17               	movwf	___flge@ff1& (0+255),b
 22409  0170A2  0E00               	movlw	0
 22410  0170A4  2120               	addwfc	(??___flge+1)& (0+255),w,b
 22411  0170A6  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 22412  0170A8  0E00               	movlw	0
 22413  0170AA  2121               	addwfc	(??___flge+2)& (0+255),w,b
 22414  0170AC  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 22415  0170AE  0E80               	movlw	128
 22416  0170B0  2122               	addwfc	(??___flge+3)& (0+255),w,b
 22417  0170B2  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 22418  0170B4                     l1823:
 22419                           
 22420                           ; BSR set to: 1
 22421                           
 22422                           ; BSR set to: 1
 22423  0170B4  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 22424  0170B6  D01D               	goto	l1824
 22425                           
 22426                           ; BSR set to: 1
 22427  0170B8  C11B  F11F         	movff	___flge@ff2,??___flge
 22428  0170BC  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 22429  0170C0  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 22430  0170C4  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 22431  0170C8  1F1F               	comf	??___flge& (0+255),f,b
 22432  0170CA  1F20               	comf	(??___flge+1)& (0+255),f,b
 22433  0170CC  1F21               	comf	(??___flge+2)& (0+255),f,b
 22434  0170CE  1F22               	comf	(??___flge+3)& (0+255),f,b
 22435  0170D0  2B1F               	incf	??___flge& (0+255),f,b
 22436  0170D2  0E00               	movlw	0
 22437  0170D4  2320               	addwfc	(??___flge+1)& (0+255),f,b
 22438  0170D6  2321               	addwfc	(??___flge+2)& (0+255),f,b
 22439  0170D8  2322               	addwfc	(??___flge+3)& (0+255),f,b
 22440  0170DA  0E00               	movlw	0
 22441  0170DC  251F               	addwf	??___flge& (0+255),w,b
 22442  0170DE  6F1B               	movwf	___flge@ff2& (0+255),b
 22443  0170E0  0E00               	movlw	0
 22444  0170E2  2120               	addwfc	(??___flge+1)& (0+255),w,b
 22445  0170E4  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 22446  0170E6  0E00               	movlw	0
 22447  0170E8  2121               	addwfc	(??___flge+2)& (0+255),w,b
 22448  0170EA  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 22449  0170EC  0E80               	movlw	128
 22450  0170EE  2122               	addwfc	(??___flge+3)& (0+255),w,b
 22451  0170F0  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 22452  0170F2                     l1824:
 22453                           
 22454                           ; BSR set to: 1
 22455  0170F2  0E00               	movlw	0
 22456  0170F4  1B17               	xorwf	___flge@ff1& (0+255),f,b
 22457  0170F6  0E00               	movlw	0
 22458  0170F8  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 22459  0170FA  0E00               	movlw	0
 22460  0170FC  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 22461  0170FE  0E80               	movlw	128
 22462  017100  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 22463  017102  0E00               	movlw	0
 22464  017104  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 22465  017106  0E00               	movlw	0
 22466  017108  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 22467  01710A  0E00               	movlw	0
 22468  01710C  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 22469  01710E  0E80               	movlw	128
 22470  017110  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 22471  017112  511B               	movf	___flge@ff2& (0+255),w,b
 22472  017114  5D17               	subwf	___flge@ff1& (0+255),w,b
 22473  017116  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 22474  017118  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 22475  01711A  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 22476  01711C  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 22477  01711E  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 22478  017120  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 22479  017122  B0D8               	btfsc	status,0,c
 22480  017124  D002               	goto	l17374
 22481                           
 22482                           ; BSR set to: 1
 22483  017126  90D8               	bcf	status,0,c
 22484  017128  0012               	return	
 22485  01712A                     l17374:
 22486                           
 22487                           ; BSR set to: 1
 22488                           
 22489                           ; BSR set to: 1
 22490  01712A  80D8               	bsf	status,0,c
 22491                           
 22492                           ; BSR set to: 1
 22493  01712C  0012               	return	
 22494  01712E                     __end_of___flge:
 22495                           	opt stack 0
 22496                           tblptru	equ	0xFF8
 22497                           tblptrh	equ	0xFF7
 22498                           tblptrl	equ	0xFF6
 22499                           tablat	equ	0xFF5
 22500                           prodh	equ	0xFF4
 22501                           prodl	equ	0xFF3
 22502                           intcon	equ	0xFF2
 22503                           indf0	equ	0xFEF
 22504                           postinc0	equ	0xFEE
 22505                           fsr0h	equ	0xFEA
 22506                           fsr0l	equ	0xFE9
 22507                           wreg	equ	0xFE8
 22508                           indf1	equ	0xFE7
 22509                           postdec1	equ	0xFE5
 22510                           plusw1	equ	0xFE3
 22511                           fsr1h	equ	0xFE2
 22512                           fsr1l	equ	0xFE1
 22513                           indf2	equ	0xFDF
 22514                           postinc2	equ	0xFDE
 22515                           postdec2	equ	0xFDD
 22516                           plusw2	equ	0xFDB
 22517                           fsr2h	equ	0xFDA
 22518                           fsr2l	equ	0xFD9
 22519                           status	equ	0xFD8
 22520                           
 22521 ;; *************** function _getCauseOfReset *****************
 22522 ;; Defined at:
 22523 ;;		line 11 in file "cause_of_reset.c"
 22524 ;; Parameters:    Size  Location     Type
 22525 ;;		None
 22526 ;; Auto vars:     Size  Location     Type
 22527 ;;  return_reset    1   23[BANK1 ] enum E17455
 22528 ;; Return value:  Size  Location     Type
 22529 ;;                  1    wreg      enum E17948
 22530 ;; Registers used:
 22531 ;;		wreg, status,2
 22532 ;; Tracked objects:
 22533 ;;		On entry : 0/0
 22534 ;;		On exit  : 0/0
 22535 ;;		Unchanged: 0/0
 22536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22538 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22540 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22541 ;;Total ram usage:        1 bytes
 22542 ;; Hardware stack levels used:    1
 22543 ;; Hardware stack levels required when called:   13
 22544 ;; This function calls:
 22545 ;;		Nothing
 22546 ;; This function is called by:
 22547 ;;		_main
 22548 ;; This function uses a non-reentrant model
 22549 ;;
 22550                           
 22551                           	psect	text52
 22552  01821E                     __ptext52:
 22553                           	opt stack 0
 22554  01821E                     _getCauseOfReset:
 22555                           	opt stack 17
 22556                           
 22557                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 22558                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 22559                           
 22560                           ; BSR set to: 1
 22561                           ;incstack = 0
 22562  01821E  AED7               	btfss	4055,7,c	;volatile
 22563  018220  D002               	goto	l1326
 22564                           
 22565                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 22566  018222  0E07               	movlw	7
 22567  018224  D019               	goto	L15
 22568  018226                     l1326:
 22569                           
 22570                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 22571  018226  ACD7               	btfss	4055,6,c	;volatile
 22572  018228  D002               	goto	l1328
 22573                           
 22574                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 22575  01822A  0E08               	movlw	8
 22576  01822C  D015               	goto	L15
 22577  01822E                     l1328:
 22578                           
 22579                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 22580  01822E  BAD7               	btfsc	4055,5,c	;volatile
 22581  018230  D002               	goto	l1330
 22582                           
 22583                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 22584  018232  0E05               	movlw	5
 22585  018234  D011               	goto	L15
 22586  018236                     l1330:
 22587                           
 22588                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 22589  018236  B6D7               	btfsc	4055,3,c	;volatile
 22590  018238  D002               	goto	l1332
 22591                           
 22592                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 22593  01823A  0E03               	movlw	3
 22594  01823C  D00D               	goto	L15
 22595  01823E                     l1332:
 22596                           
 22597                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 22598  01823E  B4D7               	btfsc	4055,2,c	;volatile
 22599  018240  D002               	goto	l1334
 22600                           
 22601                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 22602  018242  0E06               	movlw	6
 22603  018244  D009               	goto	L15
 22604  018246                     l1334:
 22605                           
 22606                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 22607  018246  B2D7               	btfsc	4055,1,c	;volatile
 22608  018248  D002               	goto	l1336
 22609                           
 22610                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 22611  01824A  0E01               	movlw	1
 22612  01824C  D005               	goto	L15
 22613  01824E                     l1336:
 22614                           
 22615                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 22616  01824E  B0D7               	btfsc	4055,0,c	;volatile
 22617  018250  D002               	goto	l1338
 22618                           
 22619                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 22620  018252  0E02               	movlw	2
 22621  018254  D001               	goto	L15
 22622  018256                     l1338:
 22623                           
 22624                           ;cause_of_reset.c: 60: else {
 22625                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 22626                           
 22627                           ; BSR set to: 1
 22628  018256  0E00               	movlw	0
 22629  018258                     L15:
 22630  018258  0101               	movlb	1	; () banked
 22631  01825A  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 22632                           
 22633                           ; BSR set to: 1
 22634                           ;cause_of_reset.c: 64: }
 22635                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 22636                           
 22637                           ; BSR set to: 1
 22638                           
 22639                           ; BSR set to: 1
 22640                           
 22641                           ; BSR set to: 1
 22642                           
 22643                           ; BSR set to: 1
 22644                           
 22645                           ; BSR set to: 1
 22646                           
 22647                           ; BSR set to: 1
 22648                           
 22649                           ; BSR set to: 1
 22650  01825C  9ED7               	bcf	4055,7,c	;volatile
 22651                           
 22652                           ; BSR set to: 1
 22653                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 22654  01825E  9CD7               	bcf	4055,6,c	;volatile
 22655                           
 22656                           ; BSR set to: 1
 22657                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 22658  018260  8AD7               	bsf	4055,5,c	;volatile
 22659                           
 22660                           ; BSR set to: 1
 22661                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 22662  018262  88D7               	bsf	4055,4,c	;volatile
 22663                           
 22664                           ; BSR set to: 1
 22665                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 22666  018264  86D7               	bsf	4055,3,c	;volatile
 22667                           
 22668                           ; BSR set to: 1
 22669                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 22670  018266  84D7               	bsf	4055,2,c	;volatile
 22671                           
 22672                           ; BSR set to: 1
 22673                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 22674  018268  82D7               	bsf	4055,1,c	;volatile
 22675                           
 22676                           ; BSR set to: 1
 22677                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 22678  01826A  80D7               	bsf	4055,0,c	;volatile
 22679                           
 22680                           ;cause_of_reset.c: 76: return return_reset_cause;
 22681  01826C  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 22682  01826E  0012               	return	
 22683  018270                     __end_of_getCauseOfReset:
 22684                           	opt stack 0
 22685                           tblptru	equ	0xFF8
 22686                           tblptrh	equ	0xFF7
 22687                           tblptrl	equ	0xFF6
 22688                           tablat	equ	0xFF5
 22689                           prodh	equ	0xFF4
 22690                           prodl	equ	0xFF3
 22691                           intcon	equ	0xFF2
 22692                           indf0	equ	0xFEF
 22693                           postinc0	equ	0xFEE
 22694                           fsr0h	equ	0xFEA
 22695                           fsr0l	equ	0xFE9
 22696                           wreg	equ	0xFE8
 22697                           indf1	equ	0xFE7
 22698                           postdec1	equ	0xFE5
 22699                           plusw1	equ	0xFE3
 22700                           fsr1h	equ	0xFE2
 22701                           fsr1l	equ	0xFE1
 22702                           indf2	equ	0xFDF
 22703                           postinc2	equ	0xFDE
 22704                           postdec2	equ	0xFDD
 22705                           plusw2	equ	0xFDB
 22706                           fsr2h	equ	0xFDA
 22707                           fsr2l	equ	0xFD9
 22708                           status	equ	0xFD8
 22709                           
 22710 ;; *************** function _SYSTEM_Initialize *****************
 22711 ;; Defined at:
 22712 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22713 ;; Parameters:    Size  Location     Type
 22714 ;;		None
 22715 ;; Auto vars:     Size  Location     Type
 22716 ;;		None
 22717 ;; Return value:  Size  Location     Type
 22718 ;;                  1    wreg      void 
 22719 ;; Registers used:
 22720 ;;		wreg, status,2, status,0, cstack
 22721 ;; Tracked objects:
 22722 ;;		On entry : 0/0
 22723 ;;		On exit  : 0/0
 22724 ;;		Unchanged: 0/0
 22725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22730 ;;Total ram usage:        0 bytes
 22731 ;; Hardware stack levels used:    1
 22732 ;; Hardware stack levels required when called:   15
 22733 ;; This function calls:
 22734 ;;		_ADCC_Initialize
 22735 ;;		_EUSART2_Initialize
 22736 ;;		_FVR_Initialize
 22737 ;;		_HLVD_Initialize
 22738 ;;		_INTERRUPT_Initialize
 22739 ;;		_OSCILLATOR_Initialize
 22740 ;;		_PIN_MANAGER_Initialize
 22741 ;;		_PMD_Initialize
 22742 ;;		_TMR5_Initialize
 22743 ;;		_TMR6_Initialize
 22744 ;;		_TMR7_Initialize
 22745 ;; This function is called by:
 22746 ;;		_main
 22747 ;; This function uses a non-reentrant model
 22748 ;;
 22749                           
 22750                           	psect	text53
 22751  01887C                     __ptext53:
 22752                           	opt stack 0
 22753  01887C                     _SYSTEM_Initialize:
 22754                           	opt stack 15
 22755                           
 22756                           ;mcc.c: 52: INTERRUPT_Initialize();
 22757                           
 22758                           ; BSR set to: 1
 22759                           ;incstack = 0
 22760  01887C  EC7C  F0C5         	call	_INTERRUPT_Initialize	;wreg free
 22761                           
 22762                           ;mcc.c: 53: PMD_Initialize();
 22763  018880  EC38  F0C5         	call	_PMD_Initialize	;wreg free
 22764                           
 22765                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 22766  018884  EC37  F0BC         	call	_PIN_MANAGER_Initialize	;wreg free
 22767                           
 22768                           ;mcc.c: 55: OSCILLATOR_Initialize();
 22769  018888  EC46  F0C5         	call	_OSCILLATOR_Initialize	;wreg free
 22770                           
 22771                           ;mcc.c: 56: HLVD_Initialize();
 22772  01888C  ECC4  F0C5         	call	_HLVD_Initialize	;wreg free
 22773                           
 22774                           ;mcc.c: 57: FVR_Initialize();
 22775  018890  EC0F  F0C6         	call	_FVR_Initialize	;wreg free
 22776                           
 22777                           ;mcc.c: 58: TMR7_Initialize();
 22778  018894  EC88  F0C1         	call	_TMR7_Initialize	;wreg free
 22779                           
 22780                           ;mcc.c: 59: TMR6_Initialize();
 22781  018898  ECF5  F0C3         	call	_TMR6_Initialize	;wreg free
 22782                           
 22783                           ;mcc.c: 60: ADCC_Initialize();
 22784  01889C  EC8A  F0C0         	call	_ADCC_Initialize	;wreg free
 22785                           
 22786                           ;mcc.c: 61: TMR5_Initialize();
 22787  0188A0  ECFB  F0C1         	call	_TMR5_Initialize	;wreg free
 22788                           
 22789                           ;mcc.c: 62: EUSART2_Initialize();
 22790  0188A4  EC8A  F0BF         	call	_EUSART2_Initialize	;wreg free
 22791  0188A8  0012               	return		;funcret
 22792  0188AA                     __end_of_SYSTEM_Initialize:
 22793                           	opt stack 0
 22794                           tblptru	equ	0xFF8
 22795                           tblptrh	equ	0xFF7
 22796                           tblptrl	equ	0xFF6
 22797                           tablat	equ	0xFF5
 22798                           prodh	equ	0xFF4
 22799                           prodl	equ	0xFF3
 22800                           intcon	equ	0xFF2
 22801                           indf0	equ	0xFEF
 22802                           postinc0	equ	0xFEE
 22803                           fsr0h	equ	0xFEA
 22804                           fsr0l	equ	0xFE9
 22805                           wreg	equ	0xFE8
 22806                           indf1	equ	0xFE7
 22807                           postdec1	equ	0xFE5
 22808                           plusw1	equ	0xFE3
 22809                           fsr1h	equ	0xFE2
 22810                           fsr1l	equ	0xFE1
 22811                           indf2	equ	0xFDF
 22812                           postinc2	equ	0xFDE
 22813                           postdec2	equ	0xFDD
 22814                           plusw2	equ	0xFDB
 22815                           fsr2h	equ	0xFDA
 22816                           fsr2l	equ	0xFD9
 22817                           status	equ	0xFD8
 22818                           
 22819 ;; *************** function _TMR7_Initialize *****************
 22820 ;; Defined at:
 22821 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 22822 ;; Parameters:    Size  Location     Type
 22823 ;;		None
 22824 ;; Auto vars:     Size  Location     Type
 22825 ;;		None
 22826 ;; Return value:  Size  Location     Type
 22827 ;;                  1    wreg      void 
 22828 ;; Registers used:
 22829 ;;		wreg, status,2, status,0, cstack
 22830 ;; Tracked objects:
 22831 ;;		On entry : 0/0
 22832 ;;		On exit  : 0/0
 22833 ;;		Unchanged: 0/0
 22834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22837 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22838 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22839 ;;Total ram usage:        2 bytes
 22840 ;; Hardware stack levels used:    1
 22841 ;; Hardware stack levels required when called:   14
 22842 ;; This function calls:
 22843 ;;		_TMR7_SetInterruptHandler
 22844 ;; This function is called by:
 22845 ;;		_SYSTEM_Initialize
 22846 ;; This function uses a non-reentrant model
 22847 ;;
 22848                           
 22849                           	psect	text54
 22850  018310                     __ptext54:
 22851                           	opt stack 0
 22852  018310                     _TMR7_Initialize:
 22853                           	opt stack 15
 22854                           
 22855                           ;tmr7.c: 69: T7GCON = 0x00;
 22856                           
 22857                           ;incstack = 0
 22858  018310  0E00               	movlw	0
 22859  018312  010F               	movlb	15	; () banked
 22860  018314  6F31               	movwf	49,b	;volatile
 22861                           
 22862                           ;tmr7.c: 72: T7GATE = 0x00;
 22863  018316  0E00               	movlw	0
 22864  018318  6F32               	movwf	50,b	;volatile
 22865                           
 22866                           ;tmr7.c: 75: T7CLK = 0x03;
 22867  01831A  0E03               	movlw	3
 22868  01831C  6F33               	movwf	51,b	;volatile
 22869                           
 22870                           ;tmr7.c: 78: TMR7H = 0xEC;
 22871  01831E  0EEC               	movlw	236
 22872  018320  6F2F               	movwf	47,b	;volatile
 22873                           
 22874                           ;tmr7.c: 81: TMR7L = 0x78;
 22875  018322  0E78               	movlw	120
 22876  018324  6F2E               	movwf	46,b	;volatile
 22877                           
 22878                           ; BSR set to: 15
 22879                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 22880  018326  512E               	movf	46,w,b	;volatile
 22881  018328  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 22882  01832C  0101               	movlb	1	; () banked
 22883  01832E  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 22884  018330  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 22885  018334  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 22886  018336  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 22887  018338  6FD9               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 22888  01833A  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 22889  01833C  6FDA               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 22890                           
 22891                           ; BSR set to: 1
 22892                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 22893  01833E  010E               	movlb	14	; () banked
 22894  018340  9D38               	bcf	56,6,b	;volatile
 22895                           
 22896                           ; BSR set to: 14
 22897                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 22898  018342  8D2E               	bsf	46,6,b	;volatile
 22899                           
 22900                           ; BSR set to: 14
 22901                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 22902  018344  0E52               	movlw	low _TMR7_DefaultInterruptHandler
 22903  018346  0101               	movlb	1	; () banked
 22904  018348  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 22905  01834A  0E8C               	movlw	high _TMR7_DefaultInterruptHandler
 22906  01834C  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 22907  01834E  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 22908  018350  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 22909  018352  ECD3  F0C5         	call	_TMR7_SetInterruptHandler	;wreg free
 22910                           
 22911                           ;tmr7.c: 96: T7CON = 0x31;
 22912  018356  0E31               	movlw	49
 22913  018358  010F               	movlb	15	; () banked
 22914  01835A  6F30               	movwf	48,b	;volatile
 22915                           
 22916                           ; BSR set to: 15
 22917  01835C  0012               	return		;funcret
 22918  01835E                     __end_of_TMR7_Initialize:
 22919                           	opt stack 0
 22920                           tblptru	equ	0xFF8
 22921                           tblptrh	equ	0xFF7
 22922                           tblptrl	equ	0xFF6
 22923                           tablat	equ	0xFF5
 22924                           prodh	equ	0xFF4
 22925                           prodl	equ	0xFF3
 22926                           intcon	equ	0xFF2
 22927                           indf0	equ	0xFEF
 22928                           postinc0	equ	0xFEE
 22929                           fsr0h	equ	0xFEA
 22930                           fsr0l	equ	0xFE9
 22931                           wreg	equ	0xFE8
 22932                           indf1	equ	0xFE7
 22933                           postdec1	equ	0xFE5
 22934                           plusw1	equ	0xFE3
 22935                           fsr1h	equ	0xFE2
 22936                           fsr1l	equ	0xFE1
 22937                           indf2	equ	0xFDF
 22938                           postinc2	equ	0xFDE
 22939                           postdec2	equ	0xFDD
 22940                           plusw2	equ	0xFDB
 22941                           fsr2h	equ	0xFDA
 22942                           fsr2l	equ	0xFD9
 22943                           status	equ	0xFD8
 22944                           
 22945 ;; *************** function _TMR7_SetInterruptHandler *****************
 22946 ;; Defined at:
 22947 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 22948 ;; Parameters:    Size  Location     Type
 22949 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 22950 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 22951 ;; Auto vars:     Size  Location     Type
 22952 ;;		None
 22953 ;; Return value:  Size  Location     Type
 22954 ;;                  1    wreg      void 
 22955 ;; Registers used:
 22956 ;;		wreg, status,2, status,0
 22957 ;; Tracked objects:
 22958 ;;		On entry : 0/0
 22959 ;;		On exit  : 0/0
 22960 ;;		Unchanged: 0/0
 22961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22962 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22965 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22966 ;;Total ram usage:        3 bytes
 22967 ;; Hardware stack levels used:    1
 22968 ;; Hardware stack levels required when called:   13
 22969 ;; This function calls:
 22970 ;;		Nothing
 22971 ;; This function is called by:
 22972 ;;		_TMR7_Initialize
 22973 ;;		_main
 22974 ;; This function uses a non-reentrant model
 22975 ;;
 22976                           
 22977                           	psect	text55
 22978  018BA6                     __ptext55:
 22979                           	opt stack 0
 22980  018BA6                     _TMR7_SetInterruptHandler:
 22981                           	opt stack 17
 22982                           
 22983                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 22984                           
 22985                           ; BSR set to: 15
 22986                           ;incstack = 0
 22987  018BA6  C117  F25F         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 22988  018BAA  C118  F260         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 22989  018BAE  C119  F261         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 22990  018BB2  0012               	return		;funcret
 22991  018BB4                     __end_of_TMR7_SetInterruptHandler:
 22992                           	opt stack 0
 22993                           tblptru	equ	0xFF8
 22994                           tblptrh	equ	0xFF7
 22995                           tblptrl	equ	0xFF6
 22996                           tablat	equ	0xFF5
 22997                           prodh	equ	0xFF4
 22998                           prodl	equ	0xFF3
 22999                           intcon	equ	0xFF2
 23000                           indf0	equ	0xFEF
 23001                           postinc0	equ	0xFEE
 23002                           fsr0h	equ	0xFEA
 23003                           fsr0l	equ	0xFE9
 23004                           wreg	equ	0xFE8
 23005                           indf1	equ	0xFE7
 23006                           postdec1	equ	0xFE5
 23007                           plusw1	equ	0xFE3
 23008                           fsr1h	equ	0xFE2
 23009                           fsr1l	equ	0xFE1
 23010                           indf2	equ	0xFDF
 23011                           postinc2	equ	0xFDE
 23012                           postdec2	equ	0xFDD
 23013                           plusw2	equ	0xFDB
 23014                           fsr2h	equ	0xFDA
 23015                           fsr2l	equ	0xFD9
 23016                           status	equ	0xFD8
 23017                           
 23018 ;; *************** function _TMR6_Initialize *****************
 23019 ;; Defined at:
 23020 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 23021 ;; Parameters:    Size  Location     Type
 23022 ;;		None
 23023 ;; Auto vars:     Size  Location     Type
 23024 ;;		None
 23025 ;; Return value:  Size  Location     Type
 23026 ;;                  1    wreg      void 
 23027 ;; Registers used:
 23028 ;;		wreg, status,2, status,0, cstack
 23029 ;; Tracked objects:
 23030 ;;		On entry : 0/0
 23031 ;;		On exit  : 0/0
 23032 ;;		Unchanged: 0/0
 23033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23038 ;;Total ram usage:        0 bytes
 23039 ;; Hardware stack levels used:    1
 23040 ;; Hardware stack levels required when called:   14
 23041 ;; This function calls:
 23042 ;;		_TMR6_SetInterruptHandler
 23043 ;; This function is called by:
 23044 ;;		_SYSTEM_Initialize
 23045 ;; This function uses a non-reentrant model
 23046 ;;
 23047                           
 23048                           	psect	text56
 23049  0187EA                     __ptext56:
 23050                           	opt stack 0
 23051  0187EA                     _TMR6_Initialize:
 23052                           	opt stack 15
 23053                           
 23054                           ;tmr6.c: 69: T6CLKCON = 0x04;
 23055                           
 23056                           ;incstack = 0
 23057  0187EA  0E04               	movlw	4
 23058  0187EC  6EB3               	movwf	4019,c	;volatile
 23059                           
 23060                           ;tmr6.c: 72: T6HLT = 0x20;
 23061  0187EE  0E20               	movlw	32
 23062  0187F0  6EB2               	movwf	4018,c	;volatile
 23063                           
 23064                           ;tmr6.c: 75: T6RST = 0x00;
 23065  0187F2  0E00               	movlw	0
 23066  0187F4  6EB4               	movwf	4020,c	;volatile
 23067                           
 23068                           ;tmr6.c: 78: T6PR = 0xF1;
 23069  0187F6  0EF1               	movlw	241
 23070  0187F8  6EB0               	movwf	4016,c	;volatile
 23071                           
 23072                           ;tmr6.c: 81: T6TMR = 0x00;
 23073  0187FA  0E00               	movlw	0
 23074  0187FC  6EAF               	movwf	4015,c	;volatile
 23075                           
 23076                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 23077  0187FE  010E               	movlb	14	; () banked
 23078  018800  9B38               	bcf	56,5,b	;volatile
 23079                           
 23080                           ; BSR set to: 14
 23081                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 23082  018802  8B2E               	bsf	46,5,b	;volatile
 23083                           
 23084                           ; BSR set to: 14
 23085                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 23086  018804  0E54               	movlw	low _TMR6_DefaultInterruptHandler
 23087  018806  0101               	movlb	1	; () banked
 23088  018808  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 23089  01880A  0E8C               	movlw	high _TMR6_DefaultInterruptHandler
 23090  01880C  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 23091  01880E  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23092  018810  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 23093  018812  ECDA  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
 23094                           
 23095                           ;tmr6.c: 93: T6CON = 0xBF;
 23096  018816  0EBF               	movlw	191
 23097  018818  6EB1               	movwf	4017,c	;volatile
 23098  01881A  0012               	return		;funcret
 23099  01881C                     __end_of_TMR6_Initialize:
 23100                           	opt stack 0
 23101                           tblptru	equ	0xFF8
 23102                           tblptrh	equ	0xFF7
 23103                           tblptrl	equ	0xFF6
 23104                           tablat	equ	0xFF5
 23105                           prodh	equ	0xFF4
 23106                           prodl	equ	0xFF3
 23107                           intcon	equ	0xFF2
 23108                           indf0	equ	0xFEF
 23109                           postinc0	equ	0xFEE
 23110                           fsr0h	equ	0xFEA
 23111                           fsr0l	equ	0xFE9
 23112                           wreg	equ	0xFE8
 23113                           indf1	equ	0xFE7
 23114                           postdec1	equ	0xFE5
 23115                           plusw1	equ	0xFE3
 23116                           fsr1h	equ	0xFE2
 23117                           fsr1l	equ	0xFE1
 23118                           indf2	equ	0xFDF
 23119                           postinc2	equ	0xFDE
 23120                           postdec2	equ	0xFDD
 23121                           plusw2	equ	0xFDB
 23122                           fsr2h	equ	0xFDA
 23123                           fsr2l	equ	0xFD9
 23124                           status	equ	0xFD8
 23125                           
 23126 ;; *************** function _TMR6_SetInterruptHandler *****************
 23127 ;; Defined at:
 23128 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 23129 ;; Parameters:    Size  Location     Type
 23130 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 23131 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 23132 ;; Auto vars:     Size  Location     Type
 23133 ;;		None
 23134 ;; Return value:  Size  Location     Type
 23135 ;;                  1    wreg      void 
 23136 ;; Registers used:
 23137 ;;		wreg, status,2, status,0
 23138 ;; Tracked objects:
 23139 ;;		On entry : 0/0
 23140 ;;		On exit  : 0/0
 23141 ;;		Unchanged: 0/0
 23142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23143 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23146 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23147 ;;Total ram usage:        3 bytes
 23148 ;; Hardware stack levels used:    1
 23149 ;; Hardware stack levels required when called:   13
 23150 ;; This function calls:
 23151 ;;		Nothing
 23152 ;; This function is called by:
 23153 ;;		_TMR6_Initialize
 23154 ;;		_main
 23155 ;; This function uses a non-reentrant model
 23156 ;;
 23157                           
 23158                           	psect	text57
 23159  018BB4                     __ptext57:
 23160                           	opt stack 0
 23161  018BB4                     _TMR6_SetInterruptHandler:
 23162                           	opt stack 17
 23163                           
 23164                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 23165                           
 23166                           ;incstack = 0
 23167  018BB4  C117  F265         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 23168  018BB8  C118  F266         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 23169  018BBC  C119  F267         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 23170  018BC0  0012               	return		;funcret
 23171  018BC2                     __end_of_TMR6_SetInterruptHandler:
 23172                           	opt stack 0
 23173                           tblptru	equ	0xFF8
 23174                           tblptrh	equ	0xFF7
 23175                           tblptrl	equ	0xFF6
 23176                           tablat	equ	0xFF5
 23177                           prodh	equ	0xFF4
 23178                           prodl	equ	0xFF3
 23179                           intcon	equ	0xFF2
 23180                           indf0	equ	0xFEF
 23181                           postinc0	equ	0xFEE
 23182                           fsr0h	equ	0xFEA
 23183                           fsr0l	equ	0xFE9
 23184                           wreg	equ	0xFE8
 23185                           indf1	equ	0xFE7
 23186                           postdec1	equ	0xFE5
 23187                           plusw1	equ	0xFE3
 23188                           fsr1h	equ	0xFE2
 23189                           fsr1l	equ	0xFE1
 23190                           indf2	equ	0xFDF
 23191                           postinc2	equ	0xFDE
 23192                           postdec2	equ	0xFDD
 23193                           plusw2	equ	0xFDB
 23194                           fsr2h	equ	0xFDA
 23195                           fsr2l	equ	0xFD9
 23196                           status	equ	0xFD8
 23197                           
 23198 ;; *************** function _TMR5_Initialize *****************
 23199 ;; Defined at:
 23200 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 23201 ;; Parameters:    Size  Location     Type
 23202 ;;		None
 23203 ;; Auto vars:     Size  Location     Type
 23204 ;;		None
 23205 ;; Return value:  Size  Location     Type
 23206 ;;                  1    wreg      void 
 23207 ;; Registers used:
 23208 ;;		wreg, status,2, status,0, cstack
 23209 ;; Tracked objects:
 23210 ;;		On entry : 0/0
 23211 ;;		On exit  : 0/0
 23212 ;;		Unchanged: 0/0
 23213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23216 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23217 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23218 ;;Total ram usage:        2 bytes
 23219 ;; Hardware stack levels used:    1
 23220 ;; Hardware stack levels required when called:   14
 23221 ;; This function calls:
 23222 ;;		_TMR5_SetInterruptHandler
 23223 ;; This function is called by:
 23224 ;;		_SYSTEM_Initialize
 23225 ;; This function uses a non-reentrant model
 23226 ;;
 23227                           
 23228                           	psect	text58
 23229  0183F6                     __ptext58:
 23230                           	opt stack 0
 23231  0183F6                     _TMR5_Initialize:
 23232                           	opt stack 15
 23233                           
 23234                           ;tmr5.c: 69: T5GCON = 0x00;
 23235                           
 23236                           ;incstack = 0
 23237  0183F6  0E00               	movlw	0
 23238  0183F8  6EC4               	movwf	4036,c	;volatile
 23239                           
 23240                           ;tmr5.c: 72: T5GATE = 0x00;
 23241  0183FA  0E00               	movlw	0
 23242  0183FC  6EC5               	movwf	4037,c	;volatile
 23243                           
 23244                           ;tmr5.c: 75: T5CLK = 0x01;
 23245  0183FE  0E01               	movlw	1
 23246  018400  6EC6               	movwf	4038,c	;volatile
 23247                           
 23248                           ;tmr5.c: 78: TMR5H = 0x00;
 23249  018402  0E00               	movlw	0
 23250  018404  6EC2               	movwf	4034,c	;volatile
 23251                           
 23252                           ;tmr5.c: 81: TMR5L = 0x00;
 23253  018406  0E00               	movlw	0
 23254  018408  6EC1               	movwf	4033,c	;volatile
 23255                           
 23256                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 23257  01840A  50C1               	movf	4033,w,c	;volatile
 23258  01840C  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 23259  018410  0101               	movlb	1	; () banked
 23260  018412  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 23261  018414  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 23262  018418  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 23263  01841A  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 23264  01841C  6FD7               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 23265  01841E  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 23266  018420  6FD8               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 23267                           
 23268                           ; BSR set to: 1
 23269                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 23270  018422  010E               	movlb	14	; () banked
 23271  018424  9938               	bcf	56,4,b	;volatile
 23272                           
 23273                           ; BSR set to: 14
 23274                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 23275  018426  892E               	bsf	46,4,b	;volatile
 23276                           
 23277                           ; BSR set to: 14
 23278                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 23279  018428  0E56               	movlw	low _TMR5_DefaultInterruptHandler
 23280  01842A  0101               	movlb	1	; () banked
 23281  01842C  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 23282  01842E  0E8C               	movlw	high _TMR5_DefaultInterruptHandler
 23283  018430  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 23284  018432  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23285  018434  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 23286  018436  ECE1  F0C5         	call	_TMR5_SetInterruptHandler	;wreg free
 23287                           
 23288                           ;tmr5.c: 96: T5CON = 0x13;
 23289  01843A  0E13               	movlw	19
 23290  01843C  6EC3               	movwf	4035,c	;volatile
 23291  01843E  0012               	return		;funcret
 23292  018440                     __end_of_TMR5_Initialize:
 23293                           	opt stack 0
 23294                           tblptru	equ	0xFF8
 23295                           tblptrh	equ	0xFF7
 23296                           tblptrl	equ	0xFF6
 23297                           tablat	equ	0xFF5
 23298                           prodh	equ	0xFF4
 23299                           prodl	equ	0xFF3
 23300                           intcon	equ	0xFF2
 23301                           indf0	equ	0xFEF
 23302                           postinc0	equ	0xFEE
 23303                           fsr0h	equ	0xFEA
 23304                           fsr0l	equ	0xFE9
 23305                           wreg	equ	0xFE8
 23306                           indf1	equ	0xFE7
 23307                           postdec1	equ	0xFE5
 23308                           plusw1	equ	0xFE3
 23309                           fsr1h	equ	0xFE2
 23310                           fsr1l	equ	0xFE1
 23311                           indf2	equ	0xFDF
 23312                           postinc2	equ	0xFDE
 23313                           postdec2	equ	0xFDD
 23314                           plusw2	equ	0xFDB
 23315                           fsr2h	equ	0xFDA
 23316                           fsr2l	equ	0xFD9
 23317                           status	equ	0xFD8
 23318                           
 23319 ;; *************** function _TMR5_SetInterruptHandler *****************
 23320 ;; Defined at:
 23321 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 23322 ;; Parameters:    Size  Location     Type
 23323 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 23324 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23325 ;; Auto vars:     Size  Location     Type
 23326 ;;		None
 23327 ;; Return value:  Size  Location     Type
 23328 ;;                  1    wreg      void 
 23329 ;; Registers used:
 23330 ;;		wreg, status,2, status,0
 23331 ;; Tracked objects:
 23332 ;;		On entry : 0/0
 23333 ;;		On exit  : 0/0
 23334 ;;		Unchanged: 0/0
 23335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23336 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23339 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23340 ;;Total ram usage:        3 bytes
 23341 ;; Hardware stack levels used:    1
 23342 ;; Hardware stack levels required when called:   13
 23343 ;; This function calls:
 23344 ;;		Nothing
 23345 ;; This function is called by:
 23346 ;;		_TMR5_Initialize
 23347 ;; This function uses a non-reentrant model
 23348 ;;
 23349                           
 23350                           	psect	text59
 23351  018BC2                     __ptext59:
 23352                           	opt stack 0
 23353  018BC2                     _TMR5_SetInterruptHandler:
 23354                           	opt stack 15
 23355                           
 23356                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 23357                           
 23358                           ;incstack = 0
 23359  018BC2  C117  F25C         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 23360  018BC6  C118  F25D         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 23361  018BCA  C119  F25E         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 23362  018BCE  0012               	return		;funcret
 23363  018BD0                     __end_of_TMR5_SetInterruptHandler:
 23364                           	opt stack 0
 23365                           tblptru	equ	0xFF8
 23366                           tblptrh	equ	0xFF7
 23367                           tblptrl	equ	0xFF6
 23368                           tablat	equ	0xFF5
 23369                           prodh	equ	0xFF4
 23370                           prodl	equ	0xFF3
 23371                           intcon	equ	0xFF2
 23372                           indf0	equ	0xFEF
 23373                           postinc0	equ	0xFEE
 23374                           fsr0h	equ	0xFEA
 23375                           fsr0l	equ	0xFE9
 23376                           wreg	equ	0xFE8
 23377                           indf1	equ	0xFE7
 23378                           postdec1	equ	0xFE5
 23379                           plusw1	equ	0xFE3
 23380                           fsr1h	equ	0xFE2
 23381                           fsr1l	equ	0xFE1
 23382                           indf2	equ	0xFDF
 23383                           postinc2	equ	0xFDE
 23384                           postdec2	equ	0xFDD
 23385                           plusw2	equ	0xFDB
 23386                           fsr2h	equ	0xFDA
 23387                           fsr2l	equ	0xFD9
 23388                           status	equ	0xFD8
 23389                           
 23390 ;; *************** function _PMD_Initialize *****************
 23391 ;; Defined at:
 23392 ;;		line 83 in file "mcc_generated_files/mcc.c"
 23393 ;; Parameters:    Size  Location     Type
 23394 ;;		None
 23395 ;; Auto vars:     Size  Location     Type
 23396 ;;		None
 23397 ;; Return value:  Size  Location     Type
 23398 ;;                  1    wreg      void 
 23399 ;; Registers used:
 23400 ;;		wreg, status,2
 23401 ;; Tracked objects:
 23402 ;;		On entry : 0/0
 23403 ;;		On exit  : 0/0
 23404 ;;		Unchanged: 0/0
 23405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23410 ;;Total ram usage:        0 bytes
 23411 ;; Hardware stack levels used:    1
 23412 ;; Hardware stack levels required when called:   13
 23413 ;; This function calls:
 23414 ;;		Nothing
 23415 ;; This function is called by:
 23416 ;;		_SYSTEM_Initialize
 23417 ;; This function uses a non-reentrant model
 23418 ;;
 23419                           
 23420                           	psect	text60
 23421  018A70                     __ptext60:
 23422                           	opt stack 0
 23423  018A70                     _PMD_Initialize:
 23424                           	opt stack 16
 23425                           
 23426                           ;mcc.c: 86: PMD0 = 0x00;
 23427                           
 23428                           ;incstack = 0
 23429  018A70  0E00               	movlw	0
 23430  018A72  010E               	movlb	14	; () banked
 23431  018A74  6F4C               	movwf	76,b	;volatile
 23432                           
 23433                           ;mcc.c: 88: PMD1 = 0x00;
 23434  018A76  0E00               	movlw	0
 23435  018A78  6F4D               	movwf	77,b	;volatile
 23436                           
 23437                           ;mcc.c: 90: PMD2 = 0x00;
 23438  018A7A  0E00               	movlw	0
 23439  018A7C  6F4E               	movwf	78,b	;volatile
 23440                           
 23441                           ;mcc.c: 92: PMD3 = 0x00;
 23442  018A7E  0E00               	movlw	0
 23443  018A80  6F4F               	movwf	79,b	;volatile
 23444                           
 23445                           ;mcc.c: 94: PMD4 = 0x00;
 23446  018A82  0E00               	movlw	0
 23447  018A84  6F50               	movwf	80,b	;volatile
 23448                           
 23449                           ;mcc.c: 96: PMD5 = 0x00;
 23450  018A86  0E00               	movlw	0
 23451  018A88  6F51               	movwf	81,b	;volatile
 23452                           
 23453                           ; BSR set to: 14
 23454  018A8A  0012               	return		;funcret
 23455  018A8C                     __end_of_PMD_Initialize:
 23456                           	opt stack 0
 23457                           tblptru	equ	0xFF8
 23458                           tblptrh	equ	0xFF7
 23459                           tblptrl	equ	0xFF6
 23460                           tablat	equ	0xFF5
 23461                           prodh	equ	0xFF4
 23462                           prodl	equ	0xFF3
 23463                           intcon	equ	0xFF2
 23464                           indf0	equ	0xFEF
 23465                           postinc0	equ	0xFEE
 23466                           fsr0h	equ	0xFEA
 23467                           fsr0l	equ	0xFE9
 23468                           wreg	equ	0xFE8
 23469                           indf1	equ	0xFE7
 23470                           postdec1	equ	0xFE5
 23471                           plusw1	equ	0xFE3
 23472                           fsr1h	equ	0xFE2
 23473                           fsr1l	equ	0xFE1
 23474                           indf2	equ	0xFDF
 23475                           postinc2	equ	0xFDE
 23476                           postdec2	equ	0xFDD
 23477                           plusw2	equ	0xFDB
 23478                           fsr2h	equ	0xFDA
 23479                           fsr2l	equ	0xFD9
 23480                           status	equ	0xFD8
 23481                           
 23482 ;; *************** function _PIN_MANAGER_Initialize *****************
 23483 ;; Defined at:
 23484 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23485 ;; Parameters:    Size  Location     Type
 23486 ;;		None
 23487 ;; Auto vars:     Size  Location     Type
 23488 ;;		None
 23489 ;; Return value:  Size  Location     Type
 23490 ;;                  1    wreg      void 
 23491 ;; Registers used:
 23492 ;;		wreg, status,2
 23493 ;; Tracked objects:
 23494 ;;		On entry : 0/0
 23495 ;;		On exit  : 0/0
 23496 ;;		Unchanged: 0/0
 23497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23502 ;;Total ram usage:        0 bytes
 23503 ;; Hardware stack levels used:    1
 23504 ;; Hardware stack levels required when called:   13
 23505 ;; This function calls:
 23506 ;;		Nothing
 23507 ;; This function is called by:
 23508 ;;		_SYSTEM_Initialize
 23509 ;; This function uses a non-reentrant model
 23510 ;;
 23511                           
 23512                           	psect	text61
 23513  01786E                     __ptext61:
 23514                           	opt stack 0
 23515  01786E                     _PIN_MANAGER_Initialize:
 23516                           	opt stack 16
 23517                           
 23518                           ;pin_manager.c: 62: LATE = 0x00;
 23519                           
 23520                           ; BSR set to: 14
 23521                           ;incstack = 0
 23522  01786E  0E00               	movlw	0
 23523  017870  6E7D               	movwf	3965,c	;volatile
 23524                           
 23525                           ;pin_manager.c: 63: LATD = 0x00;
 23526  017872  0E00               	movlw	0
 23527  017874  6E7C               	movwf	3964,c	;volatile
 23528                           
 23529                           ;pin_manager.c: 64: LATA = 0x00;
 23530  017876  0E00               	movlw	0
 23531  017878  6E79               	movwf	3961,c	;volatile
 23532                           
 23533                           ;pin_manager.c: 65: LATF = 0x00;
 23534  01787A  0E00               	movlw	0
 23535  01787C  6E7E               	movwf	3966,c	;volatile
 23536                           
 23537                           ;pin_manager.c: 66: LATB = 0x00;
 23538  01787E  0E00               	movlw	0
 23539  017880  6E7A               	movwf	3962,c	;volatile
 23540                           
 23541                           ;pin_manager.c: 67: LATG = 0x00;
 23542  017882  0E00               	movlw	0
 23543  017884  6E7F               	movwf	3967,c	;volatile
 23544                           
 23545                           ;pin_manager.c: 68: LATC = 0x00;
 23546  017886  0E00               	movlw	0
 23547  017888  6E7B               	movwf	3963,c	;volatile
 23548                           
 23549                           ;pin_manager.c: 69: LATH = 0x00;
 23550  01788A  0E00               	movlw	0
 23551  01788C  6E80               	movwf	3968,c	;volatile
 23552                           
 23553                           ;pin_manager.c: 74: TRISE = 0xFF;
 23554  01788E  6885               	setf	3973,c	;volatile
 23555                           
 23556                           ;pin_manager.c: 75: TRISF = 0xF0;
 23557  017890  0EF0               	movlw	240
 23558  017892  6E86               	movwf	3974,c	;volatile
 23559                           
 23560                           ;pin_manager.c: 76: TRISA = 0xFF;
 23561  017894  6881               	setf	3969,c	;volatile
 23562                           
 23563                           ;pin_manager.c: 77: TRISG = 0x5C;
 23564  017896  0E5C               	movlw	92
 23565  017898  6E87               	movwf	3975,c	;volatile
 23566                           
 23567                           ;pin_manager.c: 78: TRISB = 0xFF;
 23568  01789A  6882               	setf	3970,c	;volatile
 23569                           
 23570                           ;pin_manager.c: 79: TRISH = 0x0F;
 23571  01789C  0E0F               	movlw	15
 23572  01789E  6E88               	movwf	3976,c	;volatile
 23573                           
 23574                           ;pin_manager.c: 80: TRISC = 0xFF;
 23575  0178A0  6883               	setf	3971,c	;volatile
 23576                           
 23577                           ;pin_manager.c: 81: TRISD = 0xFF;
 23578  0178A2  6884               	setf	3972,c	;volatile
 23579                           
 23580                           ;pin_manager.c: 86: ANSELD = 0xFF;
 23581  0178A4  010E               	movlb	14	; () banked
 23582  0178A6  69A7               	setf	167,b	;volatile
 23583                           
 23584                           ; BSR set to: 14
 23585                           ;pin_manager.c: 87: ANSELB = 0xFF;
 23586  0178A8  699A               	setf	154,b	;volatile
 23587                           
 23588                           ; BSR set to: 14
 23589                           ;pin_manager.c: 88: ANSELE = 0xFF;
 23590  0178AA  69AF               	setf	175,b	;volatile
 23591                           
 23592                           ;pin_manager.c: 89: ANSELG = 0x3C;
 23593  0178AC  0E3C               	movlw	60
 23594  0178AE  6FBC               	movwf	188,b	;volatile
 23595                           
 23596                           ;pin_manager.c: 90: ANSELF = 0xF0;
 23597  0178B0  0EF0               	movlw	240
 23598  0178B2  6FB4               	movwf	180,b	;volatile
 23599                           
 23600                           ; BSR set to: 14
 23601                           ;pin_manager.c: 91: ANSELA = 0xFF;
 23602  0178B4  6992               	setf	146,b	;volatile
 23603                           
 23604                           ;pin_manager.c: 96: WPUD = 0x00;
 23605  0178B6  0E00               	movlw	0
 23606  0178B8  6FA6               	movwf	166,b	;volatile
 23607                           
 23608                           ;pin_manager.c: 97: WPUF = 0x00;
 23609  0178BA  0E00               	movlw	0
 23610  0178BC  6FB3               	movwf	179,b	;volatile
 23611                           
 23612                           ;pin_manager.c: 98: WPUE = 0x00;
 23613  0178BE  0E00               	movlw	0
 23614  0178C0  6FAE               	movwf	174,b	;volatile
 23615                           
 23616                           ;pin_manager.c: 99: WPUB = 0x00;
 23617  0178C2  0E00               	movlw	0
 23618  0178C4  6F99               	movwf	153,b	;volatile
 23619                           
 23620                           ;pin_manager.c: 100: WPUG = 0x00;
 23621  0178C6  0E00               	movlw	0
 23622  0178C8  6FBB               	movwf	187,b	;volatile
 23623                           
 23624                           ;pin_manager.c: 101: WPUA = 0x00;
 23625  0178CA  0E00               	movlw	0
 23626  0178CC  6F91               	movwf	145,b	;volatile
 23627                           
 23628                           ;pin_manager.c: 102: WPUC = 0x00;
 23629  0178CE  0E00               	movlw	0
 23630  0178D0  6FA1               	movwf	161,b	;volatile
 23631                           
 23632                           ;pin_manager.c: 103: WPUH = 0x00;
 23633  0178D2  0E00               	movlw	0
 23634  0178D4  6FC0               	movwf	192,b	;volatile
 23635                           
 23636                           ;pin_manager.c: 108: ODCONE = 0x00;
 23637  0178D6  0E00               	movlw	0
 23638  0178D8  6FAD               	movwf	173,b	;volatile
 23639                           
 23640                           ;pin_manager.c: 109: ODCONF = 0x01;
 23641  0178DA  0E01               	movlw	1
 23642  0178DC  6FB2               	movwf	178,b	;volatile
 23643                           
 23644                           ;pin_manager.c: 110: ODCONA = 0x00;
 23645  0178DE  0E00               	movlw	0
 23646  0178E0  6F90               	movwf	144,b	;volatile
 23647                           
 23648                           ;pin_manager.c: 111: ODCONG = 0x00;
 23649  0178E2  0E00               	movlw	0
 23650  0178E4  6FBA               	movwf	186,b	;volatile
 23651                           
 23652                           ;pin_manager.c: 112: ODCONB = 0x00;
 23653  0178E6  0E00               	movlw	0
 23654  0178E8  6F98               	movwf	152,b	;volatile
 23655                           
 23656                           ;pin_manager.c: 113: ODCONH = 0x00;
 23657  0178EA  0E00               	movlw	0
 23658  0178EC  6FBF               	movwf	191,b	;volatile
 23659                           
 23660                           ;pin_manager.c: 114: ODCONC = 0x00;
 23661  0178EE  0E00               	movlw	0
 23662  0178F0  6FA0               	movwf	160,b	;volatile
 23663                           
 23664                           ;pin_manager.c: 115: ODCOND = 0x00;
 23665  0178F2  0E00               	movlw	0
 23666  0178F4  6FA5               	movwf	165,b	;volatile
 23667                           
 23668                           ; BSR set to: 14
 23669                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 23670  0178F6  698F               	setf	143,b	;volatile
 23671                           
 23672                           ; BSR set to: 14
 23673                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 23674  0178F8  6997               	setf	151,b	;volatile
 23675                           
 23676                           ; BSR set to: 14
 23677                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 23678  0178FA  699F               	setf	159,b	;volatile
 23679                           
 23680                           ; BSR set to: 14
 23681                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 23682  0178FC  69A4               	setf	164,b	;volatile
 23683                           
 23684                           ; BSR set to: 14
 23685                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 23686  0178FE  69AC               	setf	172,b	;volatile
 23687                           
 23688                           ; BSR set to: 14
 23689                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 23690  017900  69B1               	setf	177,b	;volatile
 23691                           
 23692                           ; BSR set to: 14
 23693                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 23694  017902  69B9               	setf	185,b	;volatile
 23695                           
 23696                           ; BSR set to: 14
 23697                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 23698  017904  69BE               	setf	190,b	;volatile
 23699                           
 23700                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 23701  017906  0E0E               	movlw	14
 23702  017908  6F89               	movwf	137,b	;volatile
 23703                           
 23704                           ;pin_manager.c: 137: RX2PPS = 0x36;
 23705  01790A  0E36               	movlw	54
 23706  01790C  6F11               	movwf	17,b	;volatile
 23707                           
 23708                           ; BSR set to: 14
 23709  01790E  0012               	return		;funcret
 23710  017910                     __end_of_PIN_MANAGER_Initialize:
 23711                           	opt stack 0
 23712                           tblptru	equ	0xFF8
 23713                           tblptrh	equ	0xFF7
 23714                           tblptrl	equ	0xFF6
 23715                           tablat	equ	0xFF5
 23716                           prodh	equ	0xFF4
 23717                           prodl	equ	0xFF3
 23718                           intcon	equ	0xFF2
 23719                           indf0	equ	0xFEF
 23720                           postinc0	equ	0xFEE
 23721                           fsr0h	equ	0xFEA
 23722                           fsr0l	equ	0xFE9
 23723                           wreg	equ	0xFE8
 23724                           indf1	equ	0xFE7
 23725                           postdec1	equ	0xFE5
 23726                           plusw1	equ	0xFE3
 23727                           fsr1h	equ	0xFE2
 23728                           fsr1l	equ	0xFE1
 23729                           indf2	equ	0xFDF
 23730                           postinc2	equ	0xFDE
 23731                           postdec2	equ	0xFDD
 23732                           plusw2	equ	0xFDB
 23733                           fsr2h	equ	0xFDA
 23734                           fsr2l	equ	0xFD9
 23735                           status	equ	0xFD8
 23736                           
 23737 ;; *************** function _OSCILLATOR_Initialize *****************
 23738 ;; Defined at:
 23739 ;;		line 65 in file "mcc_generated_files/mcc.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;		None
 23742 ;; Auto vars:     Size  Location     Type
 23743 ;;		None
 23744 ;; Return value:  Size  Location     Type
 23745 ;;                  1    wreg      void 
 23746 ;; Registers used:
 23747 ;;		wreg, status,2
 23748 ;; Tracked objects:
 23749 ;;		On entry : 0/0
 23750 ;;		On exit  : 0/0
 23751 ;;		Unchanged: 0/0
 23752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23757 ;;Total ram usage:        0 bytes
 23758 ;; Hardware stack levels used:    1
 23759 ;; Hardware stack levels required when called:   13
 23760 ;; This function calls:
 23761 ;;		Nothing
 23762 ;; This function is called by:
 23763 ;;		_SYSTEM_Initialize
 23764 ;; This function uses a non-reentrant model
 23765 ;;
 23766                           
 23767                           	psect	text62
 23768  018A8C                     __ptext62:
 23769                           	opt stack 0
 23770  018A8C                     _OSCILLATOR_Initialize:
 23771                           	opt stack 16
 23772                           
 23773                           ;mcc.c: 68: OSCCON1 = 0x20;
 23774                           
 23775                           ; BSR set to: 14
 23776                           ;incstack = 0
 23777  018A8C  0E20               	movlw	32
 23778  018A8E  010E               	movlb	14	; () banked
 23779  018A90  6F43               	movwf	67,b	;volatile
 23780                           
 23781                           ;mcc.c: 70: OSCCON3 = 0x00;
 23782  018A92  0E00               	movlw	0
 23783  018A94  6F45               	movwf	69,b	;volatile
 23784                           
 23785                           ;mcc.c: 72: OSCEN = 0x00;
 23786  018A96  0E00               	movlw	0
 23787  018A98  6F47               	movwf	71,b	;volatile
 23788                           
 23789                           ;mcc.c: 74: OSCFRQ = 0x02;
 23790  018A9A  0E02               	movlw	2
 23791  018A9C  6F49               	movwf	73,b	;volatile
 23792                           
 23793                           ;mcc.c: 76: OSCTUNE = 0x00;
 23794  018A9E  0E00               	movlw	0
 23795  018AA0  6F48               	movwf	72,b	;volatile
 23796  018AA2                     
 23797                           ; BSR set to: 14
 23798                           
 23799                           ; BSR set to: 14
 23800                           ;mcc.c: 79: {
 23801  018AA2  B146               	btfsc	70,0,b	;volatile
 23802  018AA4  0012               	return	
 23803  018AA6  D7FD               	goto	l57
 23804  018AA8                     __end_of_OSCILLATOR_Initialize:
 23805                           	opt stack 0
 23806                           tblptru	equ	0xFF8
 23807                           tblptrh	equ	0xFF7
 23808                           tblptrl	equ	0xFF6
 23809                           tablat	equ	0xFF5
 23810                           prodh	equ	0xFF4
 23811                           prodl	equ	0xFF3
 23812                           intcon	equ	0xFF2
 23813                           indf0	equ	0xFEF
 23814                           postinc0	equ	0xFEE
 23815                           fsr0h	equ	0xFEA
 23816                           fsr0l	equ	0xFE9
 23817                           wreg	equ	0xFE8
 23818                           indf1	equ	0xFE7
 23819                           postdec1	equ	0xFE5
 23820                           plusw1	equ	0xFE3
 23821                           fsr1h	equ	0xFE2
 23822                           fsr1l	equ	0xFE1
 23823                           indf2	equ	0xFDF
 23824                           postinc2	equ	0xFDE
 23825                           postdec2	equ	0xFDD
 23826                           plusw2	equ	0xFDB
 23827                           fsr2h	equ	0xFDA
 23828                           fsr2l	equ	0xFD9
 23829                           status	equ	0xFD8
 23830                           
 23831 ;; *************** function _INTERRUPT_Initialize *****************
 23832 ;; Defined at:
 23833 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23834 ;; Parameters:    Size  Location     Type
 23835 ;;		None
 23836 ;; Auto vars:     Size  Location     Type
 23837 ;;		None
 23838 ;; Return value:  Size  Location     Type
 23839 ;;                  1    wreg      void 
 23840 ;; Registers used:
 23841 ;;		None
 23842 ;; Tracked objects:
 23843 ;;		On entry : 0/0
 23844 ;;		On exit  : 0/0
 23845 ;;		Unchanged: 0/0
 23846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23851 ;;Total ram usage:        0 bytes
 23852 ;; Hardware stack levels used:    1
 23853 ;; Hardware stack levels required when called:   13
 23854 ;; This function calls:
 23855 ;;		Nothing
 23856 ;; This function is called by:
 23857 ;;		_SYSTEM_Initialize
 23858 ;; This function uses a non-reentrant model
 23859 ;;
 23860                           
 23861                           	psect	text63
 23862  018AF8                     __ptext63:
 23863                           	opt stack 0
 23864  018AF8                     _INTERRUPT_Initialize:
 23865                           	opt stack 16
 23866                           
 23867                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 23868                           
 23869                           ; BSR set to: 14
 23870                           ;incstack = 0
 23871  018AF8  8AF2               	bsf	intcon,5,c	;volatile
 23872                           
 23873                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 23874  018AFA  010E               	movlb	14	; () banked
 23875  018AFC  8F22               	bsf	34,7,b	;volatile
 23876                           
 23877                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 23878  018AFE  8924               	bsf	36,4,b	;volatile
 23879                           
 23880                           ;interrupt_manager.c: 66: IPR1bits.ADTIP = 1;
 23881  018B00  8320               	bsf	32,1,b	;volatile
 23882                           
 23883                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 23884  018B02  9B24               	bcf	36,5,b	;volatile
 23885                           
 23886                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 23887  018B04  9D22               	bcf	34,6,b	;volatile
 23888                           
 23889                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 23890  018B06  9D24               	bcf	36,6,b	;volatile
 23891                           
 23892                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 23893  018B08  9F21               	bcf	33,7,b	;volatile
 23894                           
 23895                           ; BSR set to: 14
 23896  018B0A  0012               	return		;funcret
 23897  018B0C                     __end_of_INTERRUPT_Initialize:
 23898                           	opt stack 0
 23899                           tblptru	equ	0xFF8
 23900                           tblptrh	equ	0xFF7
 23901                           tblptrl	equ	0xFF6
 23902                           tablat	equ	0xFF5
 23903                           prodh	equ	0xFF4
 23904                           prodl	equ	0xFF3
 23905                           intcon	equ	0xFF2
 23906                           indf0	equ	0xFEF
 23907                           postinc0	equ	0xFEE
 23908                           fsr0h	equ	0xFEA
 23909                           fsr0l	equ	0xFE9
 23910                           wreg	equ	0xFE8
 23911                           indf1	equ	0xFE7
 23912                           postdec1	equ	0xFE5
 23913                           plusw1	equ	0xFE3
 23914                           fsr1h	equ	0xFE2
 23915                           fsr1l	equ	0xFE1
 23916                           indf2	equ	0xFDF
 23917                           postinc2	equ	0xFDE
 23918                           postdec2	equ	0xFDD
 23919                           plusw2	equ	0xFDB
 23920                           fsr2h	equ	0xFDA
 23921                           fsr2l	equ	0xFD9
 23922                           status	equ	0xFD8
 23923                           
 23924 ;; *************** function _HLVD_Initialize *****************
 23925 ;; Defined at:
 23926 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 23927 ;; Parameters:    Size  Location     Type
 23928 ;;		None
 23929 ;; Auto vars:     Size  Location     Type
 23930 ;;		None
 23931 ;; Return value:  Size  Location     Type
 23932 ;;                  1    wreg      void 
 23933 ;; Registers used:
 23934 ;;		wreg, status,2
 23935 ;; Tracked objects:
 23936 ;;		On entry : 0/0
 23937 ;;		On exit  : 0/0
 23938 ;;		Unchanged: 0/0
 23939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23944 ;;Total ram usage:        0 bytes
 23945 ;; Hardware stack levels used:    1
 23946 ;; Hardware stack levels required when called:   13
 23947 ;; This function calls:
 23948 ;;		Nothing
 23949 ;; This function is called by:
 23950 ;;		_SYSTEM_Initialize
 23951 ;; This function uses a non-reentrant model
 23952 ;;
 23953                           
 23954                           	psect	text64
 23955  018B88                     __ptext64:
 23956                           	opt stack 0
 23957  018B88                     _HLVD_Initialize:
 23958                           	opt stack 16
 23959                           
 23960                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 23961                           
 23962                           ; BSR set to: 14
 23963                           ;incstack = 0
 23964  018B88  0E09               	movlw	9
 23965  018B8A  010E               	movlb	14	; () banked
 23966  018B8C  6FC3               	movwf	195,b	;volatile
 23967                           
 23968                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 23969  018B8E  0E82               	movlw	130
 23970  018B90  6FC2               	movwf	194,b	;volatile
 23971                           
 23972                           ; BSR set to: 14
 23973                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 23974  018B92  9F35               	bcf	53,7,b	;volatile
 23975                           
 23976                           ; BSR set to: 14
 23977                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 23978  018B94  8F2B               	bsf	43,7,b	;volatile
 23979                           
 23980                           ; BSR set to: 14
 23981  018B96  0012               	return		;funcret
 23982  018B98                     __end_of_HLVD_Initialize:
 23983                           	opt stack 0
 23984                           tblptru	equ	0xFF8
 23985                           tblptrh	equ	0xFF7
 23986                           tblptrl	equ	0xFF6
 23987                           tablat	equ	0xFF5
 23988                           prodh	equ	0xFF4
 23989                           prodl	equ	0xFF3
 23990                           intcon	equ	0xFF2
 23991                           indf0	equ	0xFEF
 23992                           postinc0	equ	0xFEE
 23993                           fsr0h	equ	0xFEA
 23994                           fsr0l	equ	0xFE9
 23995                           wreg	equ	0xFE8
 23996                           indf1	equ	0xFE7
 23997                           postdec1	equ	0xFE5
 23998                           plusw1	equ	0xFE3
 23999                           fsr1h	equ	0xFE2
 24000                           fsr1l	equ	0xFE1
 24001                           indf2	equ	0xFDF
 24002                           postinc2	equ	0xFDE
 24003                           postdec2	equ	0xFDD
 24004                           plusw2	equ	0xFDB
 24005                           fsr2h	equ	0xFDA
 24006                           fsr2l	equ	0xFD9
 24007                           status	equ	0xFD8
 24008                           
 24009 ;; *************** function _FVR_Initialize *****************
 24010 ;; Defined at:
 24011 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24012 ;; Parameters:    Size  Location     Type
 24013 ;;		None
 24014 ;; Auto vars:     Size  Location     Type
 24015 ;;		None
 24016 ;; Return value:  Size  Location     Type
 24017 ;;                  1    wreg      void 
 24018 ;; Registers used:
 24019 ;;		wreg, status,2
 24020 ;; Tracked objects:
 24021 ;;		On entry : 0/0
 24022 ;;		On exit  : 0/0
 24023 ;;		Unchanged: 0/0
 24024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24029 ;;Total ram usage:        0 bytes
 24030 ;; Hardware stack levels used:    1
 24031 ;; Hardware stack levels required when called:   13
 24032 ;; This function calls:
 24033 ;;		Nothing
 24034 ;; This function is called by:
 24035 ;;		_SYSTEM_Initialize
 24036 ;; This function uses a non-reentrant model
 24037 ;;
 24038                           
 24039                           	psect	text65
 24040  018C1E                     __ptext65:
 24041                           	opt stack 0
 24042  018C1E                     _FVR_Initialize:
 24043                           	opt stack 16
 24044                           
 24045                           ;fvr.c: 61: FVRCON = 0xA6;
 24046                           
 24047                           ; BSR set to: 14
 24048                           ;incstack = 0
 24049  018C1E  0EA6               	movlw	166
 24050  018C20  010E               	movlb	14	; () banked
 24051  018C22  6FC4               	movwf	196,b	;volatile
 24052                           
 24053                           ; BSR set to: 14
 24054  018C24  0012               	return		;funcret
 24055  018C26                     __end_of_FVR_Initialize:
 24056                           	opt stack 0
 24057                           tblptru	equ	0xFF8
 24058                           tblptrh	equ	0xFF7
 24059                           tblptrl	equ	0xFF6
 24060                           tablat	equ	0xFF5
 24061                           prodh	equ	0xFF4
 24062                           prodl	equ	0xFF3
 24063                           intcon	equ	0xFF2
 24064                           indf0	equ	0xFEF
 24065                           postinc0	equ	0xFEE
 24066                           fsr0h	equ	0xFEA
 24067                           fsr0l	equ	0xFE9
 24068                           wreg	equ	0xFE8
 24069                           indf1	equ	0xFE7
 24070                           postdec1	equ	0xFE5
 24071                           plusw1	equ	0xFE3
 24072                           fsr1h	equ	0xFE2
 24073                           fsr1l	equ	0xFE1
 24074                           indf2	equ	0xFDF
 24075                           postinc2	equ	0xFDE
 24076                           postdec2	equ	0xFDD
 24077                           plusw2	equ	0xFDB
 24078                           fsr2h	equ	0xFDA
 24079                           fsr2l	equ	0xFD9
 24080                           status	equ	0xFD8
 24081                           
 24082 ;; *************** function _EUSART2_Initialize *****************
 24083 ;; Defined at:
 24084 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;		None
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;		None
 24089 ;; Return value:  Size  Location     Type
 24090 ;;                  1    wreg      void 
 24091 ;; Registers used:
 24092 ;;		wreg, status,2, status,0, cstack
 24093 ;; Tracked objects:
 24094 ;;		On entry : 0/0
 24095 ;;		On exit  : 0/0
 24096 ;;		Unchanged: 0/0
 24097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24102 ;;Total ram usage:        0 bytes
 24103 ;; Hardware stack levels used:    1
 24104 ;; Hardware stack levels required when called:   14
 24105 ;; This function calls:
 24106 ;;		_EUSART2_SetRxInterruptHandler
 24107 ;;		_EUSART2_SetTxInterruptHandler
 24108 ;; This function is called by:
 24109 ;;		_SYSTEM_Initialize
 24110 ;; This function uses a non-reentrant model
 24111 ;;
 24112                           
 24113                           	psect	text66
 24114  017F14                     __ptext66:
 24115                           	opt stack 0
 24116  017F14                     _EUSART2_Initialize:
 24117                           	opt stack 15
 24118                           
 24119                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 24120                           
 24121                           ; BSR set to: 14
 24122                           ;incstack = 0
 24123  017F14  827E               	bsf	3966,1,c	;volatile
 24124                           
 24125                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 24126  017F16  010E               	movlb	14	; () banked
 24127  017F18  9F2C               	bcf	44,7,b	;volatile
 24128                           
 24129                           ; BSR set to: 14
 24130                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 24131  017F1A  0EC0               	movlw	low _EUSART2_Receive_ISR
 24132  017F1C  0101               	movlb	1	; () banked
 24133  017F1E  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 24134  017F20  0E77               	movlw	high _EUSART2_Receive_ISR
 24135  017F22  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 24136  017F24  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 24137  017F26  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 24138  017F28  ECEF  F0C5         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 24139                           
 24140                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 24141  017F2C  010E               	movlb	14	; () banked
 24142  017F2E  9D2C               	bcf	44,6,b	;volatile
 24143                           
 24144                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 24145  017F30  0E4C               	movlw	low _EUSART2_Transmit_ISR
 24146  017F32  0101               	movlb	1	; () banked
 24147  017F34  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 24148  017F36  0E87               	movlw	high _EUSART2_Transmit_ISR
 24149  017F38  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 24150  017F3A  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 24151  017F3C  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 24152  017F3E  ECE8  F0C5         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 24153                           
 24154                           ;eusart2.c: 91: BAUD2CON = 0x08;
 24155  017F42  0E08               	movlw	8
 24156  017F44  010E               	movlb	14	; () banked
 24157  017F46  6FF7               	movwf	247,b	;volatile
 24158                           
 24159                           ; BSR set to: 14
 24160                           ;eusart2.c: 94: RC2STA = 0x90;
 24161  017F48  0E90               	movlw	144
 24162  017F4A  6FF5               	movwf	245,b	;volatile
 24163                           
 24164                           ; BSR set to: 14
 24165                           ;eusart2.c: 97: TX2STA = 0x24;
 24166  017F4C  0E24               	movlw	36
 24167  017F4E  6FF6               	movwf	246,b	;volatile
 24168                           
 24169                           ; BSR set to: 14
 24170                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 24171  017F50  0E8A               	movlw	138
 24172  017F52  6FF3               	movwf	243,b	;volatile
 24173                           
 24174                           ; BSR set to: 14
 24175                           ;eusart2.c: 103: SP2BRGH = 0x00;
 24176  017F54  0E00               	movlw	0
 24177  017F56  6FF4               	movwf	244,b	;volatile
 24178                           
 24179                           ; BSR set to: 14
 24180                           ;eusart2.c: 107: eusart2TxHead = 0;
 24181  017F58  0E00               	movlw	0
 24182  017F5A  0101               	movlb	1	; () banked
 24183  017F5C  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 24184                           
 24185                           ; BSR set to: 1
 24186                           ;eusart2.c: 108: eusart2TxTail = 0;
 24187  017F5E  0E00               	movlw	0
 24188  017F60  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 24189                           
 24190                           ; BSR set to: 1
 24191                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 24192  017F62  0E80               	movlw	128
 24193  017F64  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 24194                           
 24195                           ; BSR set to: 1
 24196                           ;eusart2.c: 111: eusart2RxHead = 0;
 24197  017F66  0E00               	movlw	0
 24198  017F68  0100               	movlb	0	; () banked
 24199  017F6A  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 24200                           
 24201                           ; BSR set to: 0
 24202                           ;eusart2.c: 112: eusart2RxTail = 0;
 24203  017F6C  0E00               	movlw	0
 24204  017F6E  0101               	movlb	1	; () banked
 24205  017F70  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 24206                           
 24207                           ; BSR set to: 1
 24208                           ;eusart2.c: 113: eusart2RxCount = 0;
 24209  017F72  0E00               	movlw	0
 24210  017F74  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
 24211                           
 24212                           ; BSR set to: 1
 24213                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 24214  017F76  010E               	movlb	14	; () banked
 24215  017F78  8F2C               	bsf	44,7,b	;volatile
 24216                           
 24217                           ; BSR set to: 14
 24218                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 24219  017F7A  927E               	bcf	3966,1,c	;volatile
 24220                           
 24221                           ; BSR set to: 14
 24222  017F7C  0012               	return		;funcret
 24223  017F7E                     __end_of_EUSART2_Initialize:
 24224                           	opt stack 0
 24225                           tblptru	equ	0xFF8
 24226                           tblptrh	equ	0xFF7
 24227                           tblptrl	equ	0xFF6
 24228                           tablat	equ	0xFF5
 24229                           prodh	equ	0xFF4
 24230                           prodl	equ	0xFF3
 24231                           intcon	equ	0xFF2
 24232                           indf0	equ	0xFEF
 24233                           postinc0	equ	0xFEE
 24234                           fsr0h	equ	0xFEA
 24235                           fsr0l	equ	0xFE9
 24236                           wreg	equ	0xFE8
 24237                           indf1	equ	0xFE7
 24238                           postdec1	equ	0xFE5
 24239                           plusw1	equ	0xFE3
 24240                           fsr1h	equ	0xFE2
 24241                           fsr1l	equ	0xFE1
 24242                           indf2	equ	0xFDF
 24243                           postinc2	equ	0xFDE
 24244                           postdec2	equ	0xFDD
 24245                           plusw2	equ	0xFDB
 24246                           fsr2h	equ	0xFDA
 24247                           fsr2l	equ	0xFD9
 24248                           status	equ	0xFD8
 24249                           
 24250 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 24251 ;; Defined at:
 24252 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 24253 ;; Parameters:    Size  Location     Type
 24254 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 24255 ;;		 -> EUSART2_Transmit_ISR(1), 
 24256 ;; Auto vars:     Size  Location     Type
 24257 ;;		None
 24258 ;; Return value:  Size  Location     Type
 24259 ;;                  1    wreg      void 
 24260 ;; Registers used:
 24261 ;;		wreg, status,2, status,0
 24262 ;; Tracked objects:
 24263 ;;		On entry : 0/0
 24264 ;;		On exit  : 0/0
 24265 ;;		Unchanged: 0/0
 24266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24267 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24270 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24271 ;;Total ram usage:        3 bytes
 24272 ;; Hardware stack levels used:    1
 24273 ;; Hardware stack levels required when called:   13
 24274 ;; This function calls:
 24275 ;;		Nothing
 24276 ;; This function is called by:
 24277 ;;		_EUSART2_Initialize
 24278 ;; This function uses a non-reentrant model
 24279 ;;
 24280                           
 24281                           	psect	text67
 24282  018BD0                     __ptext67:
 24283                           	opt stack 0
 24284  018BD0                     _EUSART2_SetTxInterruptHandler:
 24285                           	opt stack 15
 24286                           
 24287                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 24288                           
 24289                           ; BSR set to: 14
 24290                           ;incstack = 0
 24291  018BD0  C117  F26B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 24292  018BD4  C118  F26C         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 24293  018BD8  C119  F26D         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 24294  018BDC  0012               	return		;funcret
 24295  018BDE                     __end_of_EUSART2_SetTxInterruptHandler:
 24296                           	opt stack 0
 24297                           tblptru	equ	0xFF8
 24298                           tblptrh	equ	0xFF7
 24299                           tblptrl	equ	0xFF6
 24300                           tablat	equ	0xFF5
 24301                           prodh	equ	0xFF4
 24302                           prodl	equ	0xFF3
 24303                           intcon	equ	0xFF2
 24304                           indf0	equ	0xFEF
 24305                           postinc0	equ	0xFEE
 24306                           fsr0h	equ	0xFEA
 24307                           fsr0l	equ	0xFE9
 24308                           wreg	equ	0xFE8
 24309                           indf1	equ	0xFE7
 24310                           postdec1	equ	0xFE5
 24311                           plusw1	equ	0xFE3
 24312                           fsr1h	equ	0xFE2
 24313                           fsr1l	equ	0xFE1
 24314                           indf2	equ	0xFDF
 24315                           postinc2	equ	0xFDE
 24316                           postdec2	equ	0xFDD
 24317                           plusw2	equ	0xFDB
 24318                           fsr2h	equ	0xFDA
 24319                           fsr2l	equ	0xFD9
 24320                           status	equ	0xFD8
 24321                           
 24322 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 24323 ;; Defined at:
 24324 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 24325 ;; Parameters:    Size  Location     Type
 24326 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 24327 ;;		 -> EUSART2_Receive_ISR(1), 
 24328 ;; Auto vars:     Size  Location     Type
 24329 ;;		None
 24330 ;; Return value:  Size  Location     Type
 24331 ;;                  1    wreg      void 
 24332 ;; Registers used:
 24333 ;;		wreg, status,2, status,0
 24334 ;; Tracked objects:
 24335 ;;		On entry : 0/0
 24336 ;;		On exit  : 0/0
 24337 ;;		Unchanged: 0/0
 24338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24339 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24342 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24343 ;;Total ram usage:        3 bytes
 24344 ;; Hardware stack levels used:    1
 24345 ;; Hardware stack levels required when called:   13
 24346 ;; This function calls:
 24347 ;;		Nothing
 24348 ;; This function is called by:
 24349 ;;		_EUSART2_Initialize
 24350 ;; This function uses a non-reentrant model
 24351 ;;
 24352                           
 24353                           	psect	text68
 24354  018BDE                     __ptext68:
 24355                           	opt stack 0
 24356  018BDE                     _EUSART2_SetRxInterruptHandler:
 24357                           	opt stack 15
 24358                           
 24359                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 24360                           
 24361                           ;incstack = 0
 24362  018BDE  C117  F268         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 24363  018BE2  C118  F269         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 24364  018BE6  C119  F26A         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 24365  018BEA  0012               	return		;funcret
 24366  018BEC                     __end_of_EUSART2_SetRxInterruptHandler:
 24367                           	opt stack 0
 24368                           tblptru	equ	0xFF8
 24369                           tblptrh	equ	0xFF7
 24370                           tblptrl	equ	0xFF6
 24371                           tablat	equ	0xFF5
 24372                           prodh	equ	0xFF4
 24373                           prodl	equ	0xFF3
 24374                           intcon	equ	0xFF2
 24375                           indf0	equ	0xFEF
 24376                           postinc0	equ	0xFEE
 24377                           fsr0h	equ	0xFEA
 24378                           fsr0l	equ	0xFE9
 24379                           wreg	equ	0xFE8
 24380                           indf1	equ	0xFE7
 24381                           postdec1	equ	0xFE5
 24382                           plusw1	equ	0xFE3
 24383                           fsr1h	equ	0xFE2
 24384                           fsr1l	equ	0xFE1
 24385                           indf2	equ	0xFDF
 24386                           postinc2	equ	0xFDE
 24387                           postdec2	equ	0xFDD
 24388                           plusw2	equ	0xFDB
 24389                           fsr2h	equ	0xFDA
 24390                           fsr2l	equ	0xFD9
 24391                           status	equ	0xFD8
 24392                           
 24393 ;; *************** function _ADCC_Initialize *****************
 24394 ;; Defined at:
 24395 ;;		line 63 in file "mcc_generated_files/adcc.c"
 24396 ;; Parameters:    Size  Location     Type
 24397 ;;		None
 24398 ;; Auto vars:     Size  Location     Type
 24399 ;;		None
 24400 ;; Return value:  Size  Location     Type
 24401 ;;                  1    wreg      void 
 24402 ;; Registers used:
 24403 ;;		wreg, status,2, status,0, cstack
 24404 ;; Tracked objects:
 24405 ;;		On entry : 0/0
 24406 ;;		On exit  : 0/0
 24407 ;;		Unchanged: 0/0
 24408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24413 ;;Total ram usage:        0 bytes
 24414 ;; Hardware stack levels used:    1
 24415 ;; Hardware stack levels required when called:   14
 24416 ;; This function calls:
 24417 ;;		_ADCC_SetADTIInterruptHandler
 24418 ;; This function is called by:
 24419 ;;		_SYSTEM_Initialize
 24420 ;; This function uses a non-reentrant model
 24421 ;;
 24422                           
 24423                           	psect	text69
 24424  018114                     __ptext69:
 24425                           	opt stack 0
 24426  018114                     _ADCC_Initialize:
 24427                           	opt stack 15
 24428                           
 24429                           ;adcc.c: 67: ADLTHL = 0x00;
 24430                           
 24431                           ;incstack = 0
 24432  018114  0E00               	movlw	0
 24433  018116  6E6A               	movwf	3946,c	;volatile
 24434                           
 24435                           ;adcc.c: 69: ADLTHH = 0x00;
 24436  018118  0E00               	movlw	0
 24437  01811A  6E6B               	movwf	3947,c	;volatile
 24438                           
 24439                           ;adcc.c: 71: ADUTHL = 0x00;
 24440  01811C  0E00               	movlw	0
 24441  01811E  6E6C               	movwf	3948,c	;volatile
 24442                           
 24443                           ;adcc.c: 73: ADUTHH = 0x00;
 24444  018120  0E00               	movlw	0
 24445  018122  6E6D               	movwf	3949,c	;volatile
 24446                           
 24447                           ;adcc.c: 75: ADSTPTL = 0x00;
 24448  018124  0E00               	movlw	0
 24449  018126  6E68               	movwf	3944,c	;volatile
 24450                           
 24451                           ;adcc.c: 77: ADSTPTH = 0x00;
 24452  018128  0E00               	movlw	0
 24453  01812A  6E69               	movwf	3945,c	;volatile
 24454                           
 24455                           ;adcc.c: 79: ADRPT = 0xFF;
 24456  01812C  6866               	setf	3942,c	;volatile
 24457                           
 24458                           ;adcc.c: 81: ADPCH = 0x00;
 24459  01812E  0E00               	movlw	0
 24460  018130  010F               	movlb	15	; () banked
 24461  018132  6F5F               	movwf	95,b	;volatile
 24462                           
 24463                           ;adcc.c: 83: ADCAP = 0x00;
 24464  018134  0E00               	movlw	0
 24465  018136  6F5D               	movwf	93,b	;volatile
 24466                           
 24467                           ;adcc.c: 85: ADCON1 = 0x00;
 24468  018138  0E00               	movlw	0
 24469  01813A  6F59               	movwf	89,b	;volatile
 24470                           
 24471                           ;adcc.c: 87: ADCON2 = 0x04;
 24472  01813C  0E04               	movlw	4
 24473  01813E  6F5A               	movwf	90,b	;volatile
 24474                           
 24475                           ;adcc.c: 89: ADCON3 = 0x5F;
 24476  018140  0E5F               	movlw	95
 24477  018142  6F5B               	movwf	91,b	;volatile
 24478                           
 24479                           ;adcc.c: 91: ADSTAT = 0x00;
 24480  018144  0E00               	movlw	0
 24481  018146  6E65               	movwf	3941,c	;volatile
 24482                           
 24483                           ;adcc.c: 93: ADREF = 0x12;
 24484  018148  0E12               	movlw	18
 24485  01814A  6F58               	movwf	88,b	;volatile
 24486                           
 24487                           ;adcc.c: 95: ADACT = 0x00;
 24488  01814C  0E00               	movlw	0
 24489  01814E  6F56               	movwf	86,b	;volatile
 24490                           
 24491                           ;adcc.c: 97: ADCLK = 0x1F;
 24492  018150  0E1F               	movlw	31
 24493  018152  6F57               	movwf	87,b	;volatile
 24494                           
 24495                           ;adcc.c: 99: ADCON0 = 0xC4;
 24496  018154  0EC4               	movlw	196
 24497  018156  6E60               	movwf	3936,c	;volatile
 24498                           
 24499                           ; BSR set to: 15
 24500                           ;adcc.c: 101: ADACQ = 0xFF;
 24501  018158  695C               	setf	92,b	;volatile
 24502                           
 24503                           ; BSR set to: 15
 24504                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 24505  01815A  010E               	movlb	14	; () banked
 24506  01815C  9334               	bcf	52,1,b	;volatile
 24507                           
 24508                           ; BSR set to: 14
 24509                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 24510  01815E  832A               	bsf	42,1,b	;volatile
 24511                           
 24512                           ; BSR set to: 14
 24513                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 24514  018160  0E58               	movlw	low _ADCC_DefaultInterruptHandler
 24515  018162  0101               	movlb	1	; () banked
 24516  018164  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 24517  018166  0E8C               	movlw	high _ADCC_DefaultInterruptHandler
 24518  018168  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 24519  01816A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24520  01816C  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 24521  01816E  ECF6  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24522  018172  0012               	return		;funcret
 24523  018174                     __end_of_ADCC_Initialize:
 24524                           	opt stack 0
 24525                           tblptru	equ	0xFF8
 24526                           tblptrh	equ	0xFF7
 24527                           tblptrl	equ	0xFF6
 24528                           tablat	equ	0xFF5
 24529                           prodh	equ	0xFF4
 24530                           prodl	equ	0xFF3
 24531                           intcon	equ	0xFF2
 24532                           indf0	equ	0xFEF
 24533                           postinc0	equ	0xFEE
 24534                           fsr0h	equ	0xFEA
 24535                           fsr0l	equ	0xFE9
 24536                           wreg	equ	0xFE8
 24537                           indf1	equ	0xFE7
 24538                           postdec1	equ	0xFE5
 24539                           plusw1	equ	0xFE3
 24540                           fsr1h	equ	0xFE2
 24541                           fsr1l	equ	0xFE1
 24542                           indf2	equ	0xFDF
 24543                           postinc2	equ	0xFDE
 24544                           postdec2	equ	0xFDD
 24545                           plusw2	equ	0xFDB
 24546                           fsr2h	equ	0xFDA
 24547                           fsr2l	equ	0xFD9
 24548                           status	equ	0xFD8
 24549                           
 24550 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24551 ;; Defined at:
 24552 ;;		line 307 in file "mcc_generated_files/adcc.c"
 24553 ;; Parameters:    Size  Location     Type
 24554 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 24555 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 24556 ;; Auto vars:     Size  Location     Type
 24557 ;;		None
 24558 ;; Return value:  Size  Location     Type
 24559 ;;                  1    wreg      void 
 24560 ;; Registers used:
 24561 ;;		wreg, status,2, status,0
 24562 ;; Tracked objects:
 24563 ;;		On entry : 0/0
 24564 ;;		On exit  : 0/0
 24565 ;;		Unchanged: 0/0
 24566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24567 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24570 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24571 ;;Total ram usage:        3 bytes
 24572 ;; Hardware stack levels used:    1
 24573 ;; Hardware stack levels required when called:   13
 24574 ;; This function calls:
 24575 ;;		Nothing
 24576 ;; This function is called by:
 24577 ;;		_ADCC_Initialize
 24578 ;;		_main
 24579 ;; This function uses a non-reentrant model
 24580 ;;
 24581                           
 24582                           	psect	text70
 24583  018BEC                     __ptext70:
 24584                           	opt stack 0
 24585  018BEC                     _ADCC_SetADTIInterruptHandler:
 24586                           	opt stack 15
 24587                           
 24588                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 24589                           
 24590                           ;incstack = 0
 24591  018BEC  C117  F262         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 24592  018BF0  C118  F263         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 24593  018BF4  C119  F264         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 24594  018BF8  0012               	return		;funcret
 24595  018BFA                     __end_of_ADCC_SetADTIInterruptHandler:
 24596                           	opt stack 0
 24597                           tblptru	equ	0xFF8
 24598                           tblptrh	equ	0xFF7
 24599                           tblptrl	equ	0xFF6
 24600                           tablat	equ	0xFF5
 24601                           prodh	equ	0xFF4
 24602                           prodl	equ	0xFF3
 24603                           intcon	equ	0xFF2
 24604                           indf0	equ	0xFEF
 24605                           postinc0	equ	0xFEE
 24606                           fsr0h	equ	0xFEA
 24607                           fsr0l	equ	0xFE9
 24608                           wreg	equ	0xFE8
 24609                           indf1	equ	0xFE7
 24610                           postdec1	equ	0xFE5
 24611                           plusw1	equ	0xFE3
 24612                           fsr1h	equ	0xFE2
 24613                           fsr1l	equ	0xFE1
 24614                           indf2	equ	0xFDF
 24615                           postinc2	equ	0xFDE
 24616                           postdec2	equ	0xFDD
 24617                           plusw2	equ	0xFDB
 24618                           fsr2h	equ	0xFDA
 24619                           fsr2l	equ	0xFD9
 24620                           status	equ	0xFD8
 24621                           
 24622 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 24623 ;; Defined at:
 24624 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 24625 ;; Parameters:    Size  Location     Type
 24626 ;;		None
 24627 ;; Auto vars:     Size  Location     Type
 24628 ;;		None
 24629 ;; Return value:  Size  Location     Type
 24630 ;;                  1    wreg      void 
 24631 ;; Registers used:
 24632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24633 ;; Tracked objects:
 24634 ;;		On entry : 0/0
 24635 ;;		On exit  : 0/0
 24636 ;;		Unchanged: 0/0
 24637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24640 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24641 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24642 ;;Total ram usage:       21 bytes
 24643 ;; Hardware stack levels used:    1
 24644 ;; Hardware stack levels required when called:   12
 24645 ;; This function calls:
 24646 ;;		Absolute function
 24647 ;;		_EUSART2_Transmit_ISR
 24648 ;;		_HLVD_ISR
 24649 ;;		_TMR6_ISR
 24650 ;;		_TMR7_ISR
 24651 ;; This function is called by:
 24652 ;;		Interrupt level 1
 24653 ;; This function uses a non-reentrant model
 24654 ;;
 24655                           
 24656                           	psect	intcodelo
 24657  000018                     __pintcodelo:
 24658                           	opt stack 0
 24659  000018                     _INTERRUPT_InterruptManagerLow:
 24660                           	opt stack 11
 24661                           
 24662                           ;incstack = 0
 24663  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24664  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 24665  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 24666  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 24667  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 24668  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 24669  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 24670  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 24671  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 24672  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 24673  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 24674  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 24675  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 24676  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 24677  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 24678  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 24679  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 24680  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 24681  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 24682  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 24683  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 24684  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 24685                           
 24686                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 24687  00006E  010E               	movlb	14	; () banked
 24688  000070  BB2E               	btfsc	46,5,b	;volatile
 24689                           
 24690                           ; BSR set to: 14
 24691  000072  AB38               	btfss	56,5,b	;volatile
 24692  000074  D003               	goto	i1l223
 24693                           
 24694                           ; BSR set to: 14
 24695                           ;interrupt_manager.c: 108: {
 24696                           ;interrupt_manager.c: 109: TMR6_ISR();
 24697  000076  EC95  F0C4         	call	_TMR6_ISR	;wreg free
 24698                           
 24699                           ;interrupt_manager.c: 110: }
 24700  00007A  D01B               	goto	i1l229
 24701  00007C                     i1l223:
 24702                           
 24703                           ; BSR set to: 14
 24704                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 24705  00007C  BD2C               	btfsc	44,6,b	;volatile
 24706                           
 24707                           ; BSR set to: 14
 24708  00007E  AD36               	btfss	54,6,b	;volatile
 24709  000080  D00D               	goto	i1l225
 24710                           
 24711                           ; BSR set to: 14
 24712                           ;interrupt_manager.c: 112: {
 24713                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 24714  000082  D801               	call	i1u2617_28
 24715  000084  D016               	goto	i1l229
 24716  000086                     i1u2617_28:
 24717  000086  0005               	push	
 24718  000088  6EFA               	movwf	pclath,c
 24719  00008A  0102               	movlb	2	; () banked
 24720  00008C  516B               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 24721  00008E  6EFD               	movwf	tosl,c
 24722  000090  516C               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 24723  000092  6EFE               	movwf	tosh,c
 24724  000094  516D               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 24725  000096  6EFF               	movwf	tosu,c
 24726  000098  50FA               	movf	pclath,w,c
 24727  00009A  0012               	return		;indir
 24728  00009C                     i1l225:
 24729                           
 24730                           ; BSR set to: 14
 24731                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 24732  00009C  BD2E               	btfsc	46,6,b	;volatile
 24733                           
 24734                           ; BSR set to: 14
 24735  00009E  AD38               	btfss	56,6,b	;volatile
 24736  0000A0  D003               	goto	i1l227
 24737                           
 24738                           ; BSR set to: 14
 24739                           ;interrupt_manager.c: 116: {
 24740                           ;interrupt_manager.c: 117: TMR7_ISR();
 24741  0000A2  ECC1  F0C3         	call	_TMR7_ISR	;wreg free
 24742                           
 24743                           ;interrupt_manager.c: 118: }
 24744  0000A6  D005               	goto	i1l229
 24745  0000A8                     i1l227:
 24746                           
 24747                           ; BSR set to: 14
 24748                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 24749  0000A8  BF2B               	btfsc	43,7,b	;volatile
 24750                           
 24751                           ; BSR set to: 14
 24752  0000AA  AF35               	btfss	53,7,b	;volatile
 24753  0000AC  D002               	goto	i1l229
 24754                           
 24755                           ; BSR set to: 14
 24756                           ;interrupt_manager.c: 120: {
 24757                           ;interrupt_manager.c: 121: HLVD_ISR();
 24758  0000AE  EC17  F0C6         	call	_HLVD_ISR	;wreg free
 24759  0000B2                     i1l229:
 24760                           
 24761                           ;interrupt_manager.c: 123: else
 24762                           ;interrupt_manager.c: 124: {
 24763  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 24764  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 24765  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 24766  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 24767  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 24768  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 24769  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 24770  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 24771  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 24772  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 24773  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 24774  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 24775  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 24776  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 24777  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 24778  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 24779  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 24780  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 24781  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 24782  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 24783  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 24784  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 24785  000108  0010               	retfie	
 24786  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 24787                           	opt stack 0
 24788                           tosu	equ	0xFFF
 24789                           tosh	equ	0xFFE
 24790                           tosl	equ	0xFFD
 24791                           pclatu	equ	0xFFB
 24792                           pclath	equ	0xFFA
 24793                           tblptru	equ	0xFF8
 24794                           tblptrh	equ	0xFF7
 24795                           tblptrl	equ	0xFF6
 24796                           tablat	equ	0xFF5
 24797                           prodh	equ	0xFF4
 24798                           prodl	equ	0xFF3
 24799                           intcon	equ	0xFF2
 24800                           indf0	equ	0xFEF
 24801                           postinc0	equ	0xFEE
 24802                           fsr0h	equ	0xFEA
 24803                           fsr0l	equ	0xFE9
 24804                           wreg	equ	0xFE8
 24805                           indf1	equ	0xFE7
 24806                           postdec1	equ	0xFE5
 24807                           plusw1	equ	0xFE3
 24808                           fsr1h	equ	0xFE2
 24809                           fsr1l	equ	0xFE1
 24810                           bsr	equ	0xFE0
 24811                           indf2	equ	0xFDF
 24812                           postinc2	equ	0xFDE
 24813                           postdec2	equ	0xFDD
 24814                           plusw2	equ	0xFDB
 24815                           fsr2h	equ	0xFDA
 24816                           fsr2l	equ	0xFD9
 24817                           status	equ	0xFD8
 24818                           
 24819 ;; *************** function _TMR7_ISR *****************
 24820 ;; Defined at:
 24821 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 24822 ;; Parameters:    Size  Location     Type
 24823 ;;		None
 24824 ;; Auto vars:     Size  Location     Type
 24825 ;;		None
 24826 ;; Return value:  Size  Location     Type
 24827 ;;                  1    wreg      void 
 24828 ;; Registers used:
 24829 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 24830 ;; Tracked objects:
 24831 ;;		On entry : 0/0
 24832 ;;		On exit  : 0/0
 24833 ;;		Unchanged: 0/0
 24834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24839 ;;Total ram usage:        0 bytes
 24840 ;; Hardware stack levels used:    1
 24841 ;; Hardware stack levels required when called:   11
 24842 ;; This function calls:
 24843 ;;		Absolute function
 24844 ;;		_TMR7_DefaultInterruptHandler
 24845 ;;		_TMR7_WriteTimer
 24846 ;;		_acquisitionTimerCallback
 24847 ;; This function is called by:
 24848 ;;		_INTERRUPT_InterruptManagerLow
 24849 ;; This function uses a non-reentrant model
 24850 ;;
 24851                           
 24852                           	psect	text72
 24853  018782                     __ptext72:
 24854                           	opt stack 0
 24855  018782                     _TMR7_ISR:
 24856                           	opt stack 11
 24857                           
 24858                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 24859                           
 24860                           ;incstack = 0
 24861  018782  010E               	movlb	14	; () banked
 24862  018784  9D38               	bcf	56,6,b	;volatile
 24863                           
 24864                           ; BSR set to: 14
 24865                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 24866  018786  C1D9  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 24867  01878A  C1DA  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 24868  01878E  ECD0  F0C4         	call	_TMR7_WriteTimer	;wreg free
 24869                           
 24870                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 24871  018792  0102               	movlb	2	; () banked
 24872  018794  515F               	movf	_TMR7_InterruptHandler& (0+255),w,b
 24873  018796  1160               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 24874  018798  1161               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 24875  01879A  B4D8               	btfsc	status,2,c
 24876  01879C  0012               	return	
 24877                           
 24878                           ; BSR set to: 2
 24879                           ;tmr7.c: 172: {
 24880                           ;tmr7.c: 173: TMR7_InterruptHandler();
 24881  01879E  D801               	call	i1u2600_28
 24882  0187A0  0012               	return	
 24883  0187A2                     i1u2600_28:
 24884  0187A2  0005               	push	
 24885  0187A4  6EFA               	movwf	pclath,c
 24886  0187A6  515F               	movf	_TMR7_InterruptHandler& (0+255),w,b
 24887  0187A8  6EFD               	movwf	tosl,c
 24888  0187AA  5160               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 24889  0187AC  6EFE               	movwf	tosh,c
 24890  0187AE  5161               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 24891  0187B0  6EFF               	movwf	tosu,c
 24892  0187B2  50FA               	movf	pclath,w,c
 24893  0187B4  0012               	return		;indir
 24894  0187B6                     __end_of_TMR7_ISR:
 24895                           	opt stack 0
 24896                           tosu	equ	0xFFF
 24897                           tosh	equ	0xFFE
 24898                           tosl	equ	0xFFD
 24899                           pclatu	equ	0xFFB
 24900                           pclath	equ	0xFFA
 24901                           tblptru	equ	0xFF8
 24902                           tblptrh	equ	0xFF7
 24903                           tblptrl	equ	0xFF6
 24904                           tablat	equ	0xFF5
 24905                           prodh	equ	0xFF4
 24906                           prodl	equ	0xFF3
 24907                           intcon	equ	0xFF2
 24908                           indf0	equ	0xFEF
 24909                           postinc0	equ	0xFEE
 24910                           fsr0h	equ	0xFEA
 24911                           fsr0l	equ	0xFE9
 24912                           wreg	equ	0xFE8
 24913                           indf1	equ	0xFE7
 24914                           postdec1	equ	0xFE5
 24915                           plusw1	equ	0xFE3
 24916                           fsr1h	equ	0xFE2
 24917                           fsr1l	equ	0xFE1
 24918                           bsr	equ	0xFE0
 24919                           indf2	equ	0xFDF
 24920                           postinc2	equ	0xFDE
 24921                           postdec2	equ	0xFDD
 24922                           plusw2	equ	0xFDB
 24923                           fsr2h	equ	0xFDA
 24924                           fsr2l	equ	0xFD9
 24925                           status	equ	0xFD8
 24926                           
 24927 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 24928 ;; Defined at:
 24929 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 24930 ;; Parameters:    Size  Location     Type
 24931 ;;		None
 24932 ;; Auto vars:     Size  Location     Type
 24933 ;;		None
 24934 ;; Return value:  Size  Location     Type
 24935 ;;                  1    wreg      void 
 24936 ;; Registers used:
 24937 ;;		None
 24938 ;; Tracked objects:
 24939 ;;		On entry : 0/0
 24940 ;;		On exit  : 0/0
 24941 ;;		Unchanged: 0/0
 24942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24947 ;;Total ram usage:        0 bytes
 24948 ;; Hardware stack levels used:    1
 24949 ;; Hardware stack levels required when called:    9
 24950 ;; This function calls:
 24951 ;;		Nothing
 24952 ;; This function is called by:
 24953 ;;		_TMR7_Initialize
 24954 ;;		_TMR7_ISR
 24955 ;; This function uses a non-reentrant model
 24956 ;;
 24957                           
 24958                           	psect	text73
 24959  018C52                     __ptext73:
 24960                           	opt stack 0
 24961  018C52                     _TMR7_DefaultInterruptHandler:
 24962                           	opt stack 12
 24963                           
 24964                           ;incstack = 0
 24965  018C52  0012               	return		;funcret
 24966  018C54                     __end_of_TMR7_DefaultInterruptHandler:
 24967                           	opt stack 0
 24968                           tosu	equ	0xFFF
 24969                           tosh	equ	0xFFE
 24970                           tosl	equ	0xFFD
 24971                           pclatu	equ	0xFFB
 24972                           pclath	equ	0xFFA
 24973                           tblptru	equ	0xFF8
 24974                           tblptrh	equ	0xFF7
 24975                           tblptrl	equ	0xFF6
 24976                           tablat	equ	0xFF5
 24977                           prodh	equ	0xFF4
 24978                           prodl	equ	0xFF3
 24979                           intcon	equ	0xFF2
 24980                           indf0	equ	0xFEF
 24981                           postinc0	equ	0xFEE
 24982                           fsr0h	equ	0xFEA
 24983                           fsr0l	equ	0xFE9
 24984                           wreg	equ	0xFE8
 24985                           indf1	equ	0xFE7
 24986                           postdec1	equ	0xFE5
 24987                           plusw1	equ	0xFE3
 24988                           fsr1h	equ	0xFE2
 24989                           fsr1l	equ	0xFE1
 24990                           bsr	equ	0xFE0
 24991                           indf2	equ	0xFDF
 24992                           postinc2	equ	0xFDE
 24993                           postdec2	equ	0xFDD
 24994                           plusw2	equ	0xFDB
 24995                           fsr2h	equ	0xFDA
 24996                           fsr2l	equ	0xFD9
 24997                           status	equ	0xFD8
 24998                           
 24999 ;; *************** function _acquisitionTimerCallback *****************
 25000 ;; Defined at:
 25001 ;;		line 368 in file "main.c"
 25002 ;; Parameters:    Size  Location     Type
 25003 ;;		None
 25004 ;; Auto vars:     Size  Location     Type
 25005 ;;		None
 25006 ;; Return value:  Size  Location     Type
 25007 ;;                  1    wreg      void 
 25008 ;; Registers used:
 25009 ;;		wreg, status,2, cstack
 25010 ;; Tracked objects:
 25011 ;;		On entry : 0/0
 25012 ;;		On exit  : 0/0
 25013 ;;		Unchanged: 0/0
 25014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25019 ;;Total ram usage:        0 bytes
 25020 ;; Hardware stack levels used:    1
 25021 ;; Hardware stack levels required when called:   10
 25022 ;; This function calls:
 25023 ;;		_ADCC_ClearAccumulator
 25024 ;;		_ADCC_DischargeSampleCapacitor
 25025 ;;		_ADCC_StartConversion
 25026 ;; This function is called by:
 25027 ;;		_main
 25028 ;;		_TMR7_ISR
 25029 ;; This function uses a non-reentrant model
 25030 ;;
 25031                           
 25032                           	psect	text74
 25033  018B46                     __ptext74:
 25034                           	opt stack 0
 25035  018B46                     _acquisitionTimerCallback:
 25036                           	opt stack 11
 25037                           
 25038                           ;main.c: 371: ADCC_DischargeSampleCapacitor();
 25039                           
 25040                           ;incstack = 0
 25041  018B46  EC13  F0C6         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25042                           
 25043                           ;main.c: 374: ADCC_ClearAccumulator();
 25044  018B4A  EC21  F0C6         	call	_ADCC_ClearAccumulator	;wreg free
 25045                           
 25046                           ;main.c: 377: ADCC_StartConversion(next_channel);
 25047  018B4E  0101               	movlb	1	; () banked
 25048  018B50  51E8               	movf	_next_channel& (0+255),w,b
 25049  018B52  ECFD  F0C5         	call	_ADCC_StartConversion
 25050  018B56  0012               	return		;funcret
 25051  018B58                     __end_of_acquisitionTimerCallback:
 25052                           	opt stack 0
 25053                           tosu	equ	0xFFF
 25054                           tosh	equ	0xFFE
 25055                           tosl	equ	0xFFD
 25056                           pclatu	equ	0xFFB
 25057                           pclath	equ	0xFFA
 25058                           tblptru	equ	0xFF8
 25059                           tblptrh	equ	0xFF7
 25060                           tblptrl	equ	0xFF6
 25061                           tablat	equ	0xFF5
 25062                           prodh	equ	0xFF4
 25063                           prodl	equ	0xFF3
 25064                           intcon	equ	0xFF2
 25065                           indf0	equ	0xFEF
 25066                           postinc0	equ	0xFEE
 25067                           fsr0h	equ	0xFEA
 25068                           fsr0l	equ	0xFE9
 25069                           wreg	equ	0xFE8
 25070                           indf1	equ	0xFE7
 25071                           postdec1	equ	0xFE5
 25072                           plusw1	equ	0xFE3
 25073                           fsr1h	equ	0xFE2
 25074                           fsr1l	equ	0xFE1
 25075                           bsr	equ	0xFE0
 25076                           indf2	equ	0xFDF
 25077                           postinc2	equ	0xFDE
 25078                           postdec2	equ	0xFDD
 25079                           plusw2	equ	0xFDB
 25080                           fsr2h	equ	0xFDA
 25081                           fsr2l	equ	0xFD9
 25082                           status	equ	0xFD8
 25083                           
 25084 ;; *************** function _ADCC_StartConversion *****************
 25085 ;; Defined at:
 25086 ;;		line 112 in file "mcc_generated_files/adcc.c"
 25087 ;; Parameters:    Size  Location     Type
 25088 ;;  channel         1    wreg     enum E17310
 25089 ;; Auto vars:     Size  Location     Type
 25090 ;;  channel         1    0[BANK1 ] enum E17310
 25091 ;; Return value:  Size  Location     Type
 25092 ;;                  1    wreg      void 
 25093 ;; Registers used:
 25094 ;;		wreg
 25095 ;; Tracked objects:
 25096 ;;		On entry : 0/0
 25097 ;;		On exit  : 0/0
 25098 ;;		Unchanged: 0/0
 25099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25101 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25103 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25104 ;;Total ram usage:        1 bytes
 25105 ;; Hardware stack levels used:    1
 25106 ;; Hardware stack levels required when called:    9
 25107 ;; This function calls:
 25108 ;;		Nothing
 25109 ;; This function is called by:
 25110 ;;		_acquisitionTimerCallback
 25111 ;; This function uses a non-reentrant model
 25112 ;;
 25113                           
 25114                           	psect	text75
 25115  018BFA                     __ptext75:
 25116                           	opt stack 0
 25117  018BFA                     _ADCC_StartConversion:
 25118                           	opt stack 11
 25119                           
 25120                           ;incstack = 0
 25121                           ;ADCC_StartConversion@channel stored from wreg
 25122  018BFA  0101               	movlb	1	; () banked
 25123  018BFC  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 25124                           
 25125                           ;adcc.c: 115: ADPCH = channel;
 25126  018BFE  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 25127                           
 25128                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 25129  018C02  8E60               	bsf	3936,7,c	;volatile
 25130                           
 25131                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 25132  018C04  8060               	bsf	3936,0,c	;volatile
 25133  018C06  0012               	return		;funcret
 25134  018C08                     __end_of_ADCC_StartConversion:
 25135                           	opt stack 0
 25136                           tosu	equ	0xFFF
 25137                           tosh	equ	0xFFE
 25138                           tosl	equ	0xFFD
 25139                           pclatu	equ	0xFFB
 25140                           pclath	equ	0xFFA
 25141                           tblptru	equ	0xFF8
 25142                           tblptrh	equ	0xFF7
 25143                           tblptrl	equ	0xFF6
 25144                           tablat	equ	0xFF5
 25145                           prodh	equ	0xFF4
 25146                           prodl	equ	0xFF3
 25147                           intcon	equ	0xFF2
 25148                           indf0	equ	0xFEF
 25149                           postinc0	equ	0xFEE
 25150                           fsr0h	equ	0xFEA
 25151                           fsr0l	equ	0xFE9
 25152                           wreg	equ	0xFE8
 25153                           indf1	equ	0xFE7
 25154                           postdec1	equ	0xFE5
 25155                           plusw1	equ	0xFE3
 25156                           fsr1h	equ	0xFE2
 25157                           fsr1l	equ	0xFE1
 25158                           bsr	equ	0xFE0
 25159                           indf2	equ	0xFDF
 25160                           postinc2	equ	0xFDE
 25161                           postdec2	equ	0xFDD
 25162                           plusw2	equ	0xFDB
 25163                           fsr2h	equ	0xFDA
 25164                           fsr2l	equ	0xFD9
 25165                           status	equ	0xFD8
 25166                           
 25167 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 25168 ;; Defined at:
 25169 ;;		line 174 in file "mcc_generated_files/adcc.c"
 25170 ;; Parameters:    Size  Location     Type
 25171 ;;		None
 25172 ;; Auto vars:     Size  Location     Type
 25173 ;;		None
 25174 ;; Return value:  Size  Location     Type
 25175 ;;                  1    wreg      void 
 25176 ;; Registers used:
 25177 ;;		wreg, status,2
 25178 ;; Tracked objects:
 25179 ;;		On entry : 0/0
 25180 ;;		On exit  : 0/0
 25181 ;;		Unchanged: 0/0
 25182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25187 ;;Total ram usage:        0 bytes
 25188 ;; Hardware stack levels used:    1
 25189 ;; Hardware stack levels required when called:    9
 25190 ;; This function calls:
 25191 ;;		Nothing
 25192 ;; This function is called by:
 25193 ;;		_acquisitionTimerCallback
 25194 ;; This function uses a non-reentrant model
 25195 ;;
 25196                           
 25197                           	psect	text76
 25198  018C26                     __ptext76:
 25199                           	opt stack 0
 25200  018C26                     _ADCC_DischargeSampleCapacitor:
 25201                           	opt stack 11
 25202                           
 25203                           ;adcc.c: 177: ADPCH = 0x3c;
 25204                           
 25205                           ;incstack = 0
 25206  018C26  0E3C               	movlw	60
 25207  018C28  010F               	movlb	15	; () banked
 25208  018C2A  6F5F               	movwf	95,b	;volatile
 25209                           
 25210                           ; BSR set to: 15
 25211  018C2C  0012               	return		;funcret
 25212  018C2E                     __end_of_ADCC_DischargeSampleCapacitor:
 25213                           	opt stack 0
 25214                           tosu	equ	0xFFF
 25215                           tosh	equ	0xFFE
 25216                           tosl	equ	0xFFD
 25217                           pclatu	equ	0xFFB
 25218                           pclath	equ	0xFFA
 25219                           tblptru	equ	0xFF8
 25220                           tblptrh	equ	0xFF7
 25221                           tblptrl	equ	0xFF6
 25222                           tablat	equ	0xFF5
 25223                           prodh	equ	0xFF4
 25224                           prodl	equ	0xFF3
 25225                           intcon	equ	0xFF2
 25226                           indf0	equ	0xFEF
 25227                           postinc0	equ	0xFEE
 25228                           fsr0h	equ	0xFEA
 25229                           fsr0l	equ	0xFE9
 25230                           wreg	equ	0xFE8
 25231                           indf1	equ	0xFE7
 25232                           postdec1	equ	0xFE5
 25233                           plusw1	equ	0xFE3
 25234                           fsr1h	equ	0xFE2
 25235                           fsr1l	equ	0xFE1
 25236                           bsr	equ	0xFE0
 25237                           indf2	equ	0xFDF
 25238                           postinc2	equ	0xFDE
 25239                           postdec2	equ	0xFDD
 25240                           plusw2	equ	0xFDB
 25241                           fsr2h	equ	0xFDA
 25242                           fsr2l	equ	0xFD9
 25243                           status	equ	0xFD8
 25244                           
 25245 ;; *************** function _ADCC_ClearAccumulator *****************
 25246 ;; Defined at:
 25247 ;;		line 204 in file "mcc_generated_files/adcc.c"
 25248 ;; Parameters:    Size  Location     Type
 25249 ;;		None
 25250 ;; Auto vars:     Size  Location     Type
 25251 ;;		None
 25252 ;; Return value:  Size  Location     Type
 25253 ;;                  1    wreg      void 
 25254 ;; Registers used:
 25255 ;;		None
 25256 ;; Tracked objects:
 25257 ;;		On entry : 0/0
 25258 ;;		On exit  : 0/0
 25259 ;;		Unchanged: 0/0
 25260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25265 ;;Total ram usage:        0 bytes
 25266 ;; Hardware stack levels used:    1
 25267 ;; Hardware stack levels required when called:    9
 25268 ;; This function calls:
 25269 ;;		Nothing
 25270 ;; This function is called by:
 25271 ;;		_acquisitionTimerCallback
 25272 ;; This function uses a non-reentrant model
 25273 ;;
 25274                           
 25275                           	psect	text77
 25276  018C42                     __ptext77:
 25277                           	opt stack 0
 25278  018C42                     _ADCC_ClearAccumulator:
 25279                           	opt stack 11
 25280                           
 25281                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 25282                           
 25283                           ; BSR set to: 15
 25284                           ;incstack = 0
 25285  018C42  010F               	movlb	15	; () banked
 25286  018C44  875A               	bsf	90,3,b	;volatile
 25287                           
 25288                           ; BSR set to: 15
 25289  018C46  0012               	return		;funcret
 25290  018C48                     __end_of_ADCC_ClearAccumulator:
 25291                           	opt stack 0
 25292                           tosu	equ	0xFFF
 25293                           tosh	equ	0xFFE
 25294                           tosl	equ	0xFFD
 25295                           pclatu	equ	0xFFB
 25296                           pclath	equ	0xFFA
 25297                           tblptru	equ	0xFF8
 25298                           tblptrh	equ	0xFF7
 25299                           tblptrl	equ	0xFF6
 25300                           tablat	equ	0xFF5
 25301                           prodh	equ	0xFF4
 25302                           prodl	equ	0xFF3
 25303                           intcon	equ	0xFF2
 25304                           indf0	equ	0xFEF
 25305                           postinc0	equ	0xFEE
 25306                           fsr0h	equ	0xFEA
 25307                           fsr0l	equ	0xFE9
 25308                           wreg	equ	0xFE8
 25309                           indf1	equ	0xFE7
 25310                           postdec1	equ	0xFE5
 25311                           plusw1	equ	0xFE3
 25312                           fsr1h	equ	0xFE2
 25313                           fsr1l	equ	0xFE1
 25314                           bsr	equ	0xFE0
 25315                           indf2	equ	0xFDF
 25316                           postinc2	equ	0xFDE
 25317                           postdec2	equ	0xFDD
 25318                           plusw2	equ	0xFDB
 25319                           fsr2h	equ	0xFDA
 25320                           fsr2l	equ	0xFD9
 25321                           status	equ	0xFD8
 25322                           
 25323 ;; *************** function _TMR7_WriteTimer *****************
 25324 ;; Defined at:
 25325 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 25326 ;; Parameters:    Size  Location     Type
 25327 ;;  timerVal        2    0[BANK1 ] unsigned int 
 25328 ;; Auto vars:     Size  Location     Type
 25329 ;;		None
 25330 ;; Return value:  Size  Location     Type
 25331 ;;                  1    wreg      void 
 25332 ;; Registers used:
 25333 ;;		wreg, status,2
 25334 ;; Tracked objects:
 25335 ;;		On entry : 0/0
 25336 ;;		On exit  : 0/0
 25337 ;;		Unchanged: 0/0
 25338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25339 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25342 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25343 ;;Total ram usage:        2 bytes
 25344 ;; Hardware stack levels used:    1
 25345 ;; Hardware stack levels required when called:    9
 25346 ;; This function calls:
 25347 ;;		Nothing
 25348 ;; This function is called by:
 25349 ;;		_TMR7_ISR
 25350 ;;		_TMR7_Reload
 25351 ;; This function uses a non-reentrant model
 25352 ;;
 25353                           
 25354                           	psect	text78
 25355  0189A0                     __ptext78:
 25356                           	opt stack 0
 25357  0189A0                     _TMR7_WriteTimer:
 25358                           	opt stack 12
 25359                           
 25360                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 25361                           
 25362                           ; BSR set to: 15
 25363                           ;incstack = 0
 25364  0189A0  010F               	movlb	15	; () banked
 25365  0189A2  A530               	btfss	48,2,b	;volatile
 25366  0189A4  D009               	goto	i1l640
 25367                           
 25368                           ; BSR set to: 15
 25369                           ;tmr7.c: 130: {
 25370                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 25371  0189A6  9130               	bcf	48,0,b	;volatile
 25372                           
 25373                           ; BSR set to: 15
 25374                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 25375  0189A8  0101               	movlb	1	; () banked
 25376  0189AA  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 25377  0189AC  010F               	movlb	15	; () banked
 25378  0189AE  6F2F               	movwf	47,b	;volatile
 25379                           
 25380                           ; BSR set to: 15
 25381                           ;tmr7.c: 136: TMR7L = timerVal;
 25382  0189B0  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 25383                           
 25384                           ; BSR set to: 15
 25385                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 25386  0189B4  8130               	bsf	48,0,b	;volatile
 25387                           
 25388                           ;tmr7.c: 140: }
 25389  0189B6  0012               	return	
 25390  0189B8                     i1l640:
 25391                           
 25392                           ; BSR set to: 15
 25393                           ;tmr7.c: 141: else
 25394                           ;tmr7.c: 142: {
 25395                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 25396                           
 25397                           ; BSR set to: 15
 25398  0189B8  0101               	movlb	1	; () banked
 25399  0189BA  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 25400  0189BC  010F               	movlb	15	; () banked
 25401  0189BE  6F2F               	movwf	47,b	;volatile
 25402                           
 25403                           ; BSR set to: 15
 25404                           ;tmr7.c: 145: TMR7L = timerVal;
 25405  0189C0  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 25406  0189C4  0012               	return	
 25407  0189C6                     __end_of_TMR7_WriteTimer:
 25408                           	opt stack 0
 25409                           tosu	equ	0xFFF
 25410                           tosh	equ	0xFFE
 25411                           tosl	equ	0xFFD
 25412                           pclatu	equ	0xFFB
 25413                           pclath	equ	0xFFA
 25414                           tblptru	equ	0xFF8
 25415                           tblptrh	equ	0xFF7
 25416                           tblptrl	equ	0xFF6
 25417                           tablat	equ	0xFF5
 25418                           prodh	equ	0xFF4
 25419                           prodl	equ	0xFF3
 25420                           intcon	equ	0xFF2
 25421                           indf0	equ	0xFEF
 25422                           postinc0	equ	0xFEE
 25423                           fsr0h	equ	0xFEA
 25424                           fsr0l	equ	0xFE9
 25425                           wreg	equ	0xFE8
 25426                           indf1	equ	0xFE7
 25427                           postdec1	equ	0xFE5
 25428                           plusw1	equ	0xFE3
 25429                           fsr1h	equ	0xFE2
 25430                           fsr1l	equ	0xFE1
 25431                           bsr	equ	0xFE0
 25432                           indf2	equ	0xFDF
 25433                           postinc2	equ	0xFDE
 25434                           postdec2	equ	0xFDD
 25435                           plusw2	equ	0xFDB
 25436                           fsr2h	equ	0xFDA
 25437                           fsr2l	equ	0xFD9
 25438                           status	equ	0xFD8
 25439                           
 25440 ;; *************** function _TMR6_ISR *****************
 25441 ;; Defined at:
 25442 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 25443 ;; Parameters:    Size  Location     Type
 25444 ;;		None
 25445 ;; Auto vars:     Size  Location     Type
 25446 ;;		None
 25447 ;; Return value:  Size  Location     Type
 25448 ;;                  1    wreg      void 
 25449 ;; Registers used:
 25450 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 25451 ;; Tracked objects:
 25452 ;;		On entry : 0/0
 25453 ;;		On exit  : 0/0
 25454 ;;		Unchanged: 0/0
 25455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25460 ;;Total ram usage:        0 bytes
 25461 ;; Hardware stack levels used:    1
 25462 ;; Hardware stack levels required when called:   10
 25463 ;; This function calls:
 25464 ;;		Absolute function
 25465 ;;		_TMR6_DefaultInterruptHandler
 25466 ;;		_heartbeatTimerCallback
 25467 ;; This function is called by:
 25468 ;;		_INTERRUPT_InterruptManagerLow
 25469 ;; This function uses a non-reentrant model
 25470 ;;
 25471                           
 25472                           	psect	text79
 25473  01892A                     __ptext79:
 25474                           	opt stack 0
 25475  01892A                     _TMR6_ISR:
 25476                           	opt stack 12
 25477                           
 25478                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 25479                           
 25480                           ; BSR set to: 15
 25481                           ;incstack = 0
 25482  01892A  010E               	movlb	14	; () banked
 25483  01892C  9B38               	bcf	56,5,b	;volatile
 25484                           
 25485                           ; BSR set to: 14
 25486                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 25487  01892E  0102               	movlb	2	; () banked
 25488  018930  5165               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25489  018932  1166               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25490  018934  1167               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25491  018936  B4D8               	btfsc	status,2,c
 25492  018938  0012               	return	
 25493                           
 25494                           ; BSR set to: 2
 25495                           ;tmr6.c: 172: {
 25496                           ;tmr6.c: 173: TMR6_InterruptHandler();
 25497  01893A  D801               	call	i1u2598_28
 25498  01893C  0012               	return	
 25499  01893E                     i1u2598_28:
 25500  01893E  0005               	push	
 25501  018940  6EFA               	movwf	pclath,c
 25502  018942  5165               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25503  018944  6EFD               	movwf	tosl,c
 25504  018946  5166               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25505  018948  6EFE               	movwf	tosh,c
 25506  01894A  5167               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25507  01894C  6EFF               	movwf	tosu,c
 25508  01894E  50FA               	movf	pclath,w,c
 25509  018950  0012               	return		;indir
 25510  018952                     __end_of_TMR6_ISR:
 25511                           	opt stack 0
 25512                           tosu	equ	0xFFF
 25513                           tosh	equ	0xFFE
 25514                           tosl	equ	0xFFD
 25515                           pclatu	equ	0xFFB
 25516                           pclath	equ	0xFFA
 25517                           tblptru	equ	0xFF8
 25518                           tblptrh	equ	0xFF7
 25519                           tblptrl	equ	0xFF6
 25520                           tablat	equ	0xFF5
 25521                           prodh	equ	0xFF4
 25522                           prodl	equ	0xFF3
 25523                           intcon	equ	0xFF2
 25524                           indf0	equ	0xFEF
 25525                           postinc0	equ	0xFEE
 25526                           fsr0h	equ	0xFEA
 25527                           fsr0l	equ	0xFE9
 25528                           wreg	equ	0xFE8
 25529                           indf1	equ	0xFE7
 25530                           postdec1	equ	0xFE5
 25531                           plusw1	equ	0xFE3
 25532                           fsr1h	equ	0xFE2
 25533                           fsr1l	equ	0xFE1
 25534                           bsr	equ	0xFE0
 25535                           indf2	equ	0xFDF
 25536                           postinc2	equ	0xFDE
 25537                           postdec2	equ	0xFDD
 25538                           plusw2	equ	0xFDB
 25539                           fsr2h	equ	0xFDA
 25540                           fsr2l	equ	0xFD9
 25541                           status	equ	0xFD8
 25542                           
 25543 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25544 ;; Defined at:
 25545 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25546 ;; Parameters:    Size  Location     Type
 25547 ;;		None
 25548 ;; Auto vars:     Size  Location     Type
 25549 ;;		None
 25550 ;; Return value:  Size  Location     Type
 25551 ;;                  1    wreg      void 
 25552 ;; Registers used:
 25553 ;;		None
 25554 ;; Tracked objects:
 25555 ;;		On entry : 0/0
 25556 ;;		On exit  : 0/0
 25557 ;;		Unchanged: 0/0
 25558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25563 ;;Total ram usage:        0 bytes
 25564 ;; Hardware stack levels used:    1
 25565 ;; Hardware stack levels required when called:    9
 25566 ;; This function calls:
 25567 ;;		Nothing
 25568 ;; This function is called by:
 25569 ;;		_TMR6_Initialize
 25570 ;;		_TMR6_ISR
 25571 ;; This function uses a non-reentrant model
 25572 ;;
 25573                           
 25574                           	psect	text80
 25575  018C54                     __ptext80:
 25576                           	opt stack 0
 25577  018C54                     _TMR6_DefaultInterruptHandler:
 25578                           	opt stack 12
 25579                           
 25580                           ;incstack = 0
 25581  018C54  0012               	return		;funcret
 25582  018C56                     __end_of_TMR6_DefaultInterruptHandler:
 25583                           	opt stack 0
 25584                           tosu	equ	0xFFF
 25585                           tosh	equ	0xFFE
 25586                           tosl	equ	0xFFD
 25587                           pclatu	equ	0xFFB
 25588                           pclath	equ	0xFFA
 25589                           tblptru	equ	0xFF8
 25590                           tblptrh	equ	0xFF7
 25591                           tblptrl	equ	0xFF6
 25592                           tablat	equ	0xFF5
 25593                           prodh	equ	0xFF4
 25594                           prodl	equ	0xFF3
 25595                           intcon	equ	0xFF2
 25596                           indf0	equ	0xFEF
 25597                           postinc0	equ	0xFEE
 25598                           fsr0h	equ	0xFEA
 25599                           fsr0l	equ	0xFE9
 25600                           wreg	equ	0xFE8
 25601                           indf1	equ	0xFE7
 25602                           postdec1	equ	0xFE5
 25603                           plusw1	equ	0xFE3
 25604                           fsr1h	equ	0xFE2
 25605                           fsr1l	equ	0xFE1
 25606                           bsr	equ	0xFE0
 25607                           indf2	equ	0xFDF
 25608                           postinc2	equ	0xFDE
 25609                           postdec2	equ	0xFDD
 25610                           plusw2	equ	0xFDB
 25611                           fsr2h	equ	0xFDA
 25612                           fsr2l	equ	0xFD9
 25613                           status	equ	0xFD8
 25614                           
 25615 ;; *************** function _heartbeatTimerCallback *****************
 25616 ;; Defined at:
 25617 ;;		line 149 in file "main.c"
 25618 ;; Parameters:    Size  Location     Type
 25619 ;;		None
 25620 ;; Auto vars:     Size  Location     Type
 25621 ;;		None
 25622 ;; Return value:  Size  Location     Type
 25623 ;;                  1    wreg      void 
 25624 ;; Registers used:
 25625 ;;		wreg, status,2, status,0
 25626 ;; Tracked objects:
 25627 ;;		On entry : 0/0
 25628 ;;		On exit  : 0/0
 25629 ;;		Unchanged: 0/0
 25630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25633 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25634 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25635 ;;Total ram usage:        1 bytes
 25636 ;; Hardware stack levels used:    1
 25637 ;; Hardware stack levels required when called:    9
 25638 ;; This function calls:
 25639 ;;		Nothing
 25640 ;; This function is called by:
 25641 ;;		_main
 25642 ;;		_TMR6_ISR
 25643 ;; This function uses a non-reentrant model
 25644 ;;
 25645                           
 25646                           	psect	text81
 25647  0185E8                     __ptext81:
 25648                           	opt stack 0
 25649  0185E8                     _heartbeatTimerCallback:
 25650                           	opt stack 12
 25651                           
 25652                           ;main.c: 152: LATFbits.LATF2 = !LATFbits.LATF2;
 25653                           
 25654                           ;incstack = 0
 25655  0185E8  B47E               	btfsc	3966,2,c	;volatile
 25656  0185EA  D004               	goto	i1u1102_20
 25657  0185EC  0101               	movlb	1	; () banked
 25658  0185EE  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 25659  0185F0  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 25660  0185F2  D002               	goto	i1u1103_28
 25661  0185F4                     i1u1102_20:
 25662  0185F4  0101               	movlb	1	; () banked
 25663  0185F6  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 25664  0185F8                     i1u1103_28:
 25665  0185F8  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 25666  0185FA  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 25667  0185FC  507E               	movf	3966,w,c	;volatile
 25668  0185FE  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 25669  018600  0BFB               	andlw	-5
 25670  018602  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 25671  018604  6E7E               	movwf	3966,c	;volatile
 25672                           
 25673                           ;main.c: 155: dev_on_time++;
 25674  018606  0E01               	movlw	1
 25675  018608  0102               	movlb	2	; () banked
 25676  01860A  274C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 25677  01860C  0E00               	movlw	0
 25678  01860E  234D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 25679  018610  234E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 25680  018612  234F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 25681                           
 25682                           ; BSR set to: 2
 25683                           ;main.c: 158: if (load_enable) {
 25684  018614  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 25685  018616  D006               	goto	i1l965
 25686                           
 25687                           ; BSR set to: 2
 25688                           ;main.c: 160: load_on_time++;
 25689  018618  0E01               	movlw	1
 25690  01861A  2748               	addwf	_load_on_time& (0+255),f,b	;volatile
 25691  01861C  0E00               	movlw	0
 25692  01861E  2349               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 25693  018620  234A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 25694  018622  234B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 25695  018624                     i1l965:
 25696                           
 25697                           ; BSR set to: 2
 25698  018624  0004               	clrwdt		;# 
 25699  018626  0012               	return		;funcret
 25700  018628                     __end_of_heartbeatTimerCallback:
 25701                           	opt stack 0
 25702                           tosu	equ	0xFFF
 25703                           tosh	equ	0xFFE
 25704                           tosl	equ	0xFFD
 25705                           pclatu	equ	0xFFB
 25706                           pclath	equ	0xFFA
 25707                           tblptru	equ	0xFF8
 25708                           tblptrh	equ	0xFF7
 25709                           tblptrl	equ	0xFF6
 25710                           tablat	equ	0xFF5
 25711                           prodh	equ	0xFF4
 25712                           prodl	equ	0xFF3
 25713                           intcon	equ	0xFF2
 25714                           indf0	equ	0xFEF
 25715                           postinc0	equ	0xFEE
 25716                           fsr0h	equ	0xFEA
 25717                           fsr0l	equ	0xFE9
 25718                           wreg	equ	0xFE8
 25719                           indf1	equ	0xFE7
 25720                           postdec1	equ	0xFE5
 25721                           plusw1	equ	0xFE3
 25722                           fsr1h	equ	0xFE2
 25723                           fsr1l	equ	0xFE1
 25724                           bsr	equ	0xFE0
 25725                           indf2	equ	0xFDF
 25726                           postinc2	equ	0xFDE
 25727                           postdec2	equ	0xFDD
 25728                           plusw2	equ	0xFDB
 25729                           fsr2h	equ	0xFDA
 25730                           fsr2l	equ	0xFD9
 25731                           status	equ	0xFD8
 25732                           
 25733 ;; *************** function _HLVD_ISR *****************
 25734 ;; Defined at:
 25735 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 25736 ;; Parameters:    Size  Location     Type
 25737 ;;		None
 25738 ;; Auto vars:     Size  Location     Type
 25739 ;;		None
 25740 ;; Return value:  Size  Location     Type
 25741 ;;                  1    wreg      void 
 25742 ;; Registers used:
 25743 ;;		None
 25744 ;; Tracked objects:
 25745 ;;		On entry : 0/0
 25746 ;;		On exit  : 0/0
 25747 ;;		Unchanged: 0/0
 25748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25753 ;;Total ram usage:        0 bytes
 25754 ;; Hardware stack levels used:    1
 25755 ;; Hardware stack levels required when called:    9
 25756 ;; This function calls:
 25757 ;;		Nothing
 25758 ;; This function is called by:
 25759 ;;		_INTERRUPT_InterruptManagerLow
 25760 ;; This function uses a non-reentrant model
 25761 ;;
 25762                           
 25763                           	psect	text82
 25764  018C2E                     __ptext82:
 25765                           	opt stack 0
 25766  018C2E                     _HLVD_ISR:
 25767                           	opt stack 13
 25768                           
 25769                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 25770                           
 25771                           ;incstack = 0
 25772  018C2E  010E               	movlb	14	; () banked
 25773  018C30  9F35               	bcf	53,7,b	;volatile
 25774                           
 25775                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 25776  018C32  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 25777                           
 25778                           ; BSR set to: 14
 25779  018C34  0012               	return		;funcret
 25780  018C36                     __end_of_HLVD_ISR:
 25781                           	opt stack 0
 25782                           tosu	equ	0xFFF
 25783                           tosh	equ	0xFFE
 25784                           tosl	equ	0xFFD
 25785                           pclatu	equ	0xFFB
 25786                           pclath	equ	0xFFA
 25787                           tblptru	equ	0xFF8
 25788                           tblptrh	equ	0xFF7
 25789                           tblptrl	equ	0xFF6
 25790                           tablat	equ	0xFF5
 25791                           prodh	equ	0xFF4
 25792                           prodl	equ	0xFF3
 25793                           intcon	equ	0xFF2
 25794                           indf0	equ	0xFEF
 25795                           postinc0	equ	0xFEE
 25796                           fsr0h	equ	0xFEA
 25797                           fsr0l	equ	0xFE9
 25798                           wreg	equ	0xFE8
 25799                           indf1	equ	0xFE7
 25800                           postdec1	equ	0xFE5
 25801                           plusw1	equ	0xFE3
 25802                           fsr1h	equ	0xFE2
 25803                           fsr1l	equ	0xFE1
 25804                           bsr	equ	0xFE0
 25805                           indf2	equ	0xFDF
 25806                           postinc2	equ	0xFDE
 25807                           postdec2	equ	0xFDD
 25808                           plusw2	equ	0xFDB
 25809                           fsr2h	equ	0xFDA
 25810                           fsr2l	equ	0xFD9
 25811                           status	equ	0xFD8
 25812                           
 25813 ;; *************** function _EUSART2_Transmit_ISR *****************
 25814 ;; Defined at:
 25815 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 25816 ;; Parameters:    Size  Location     Type
 25817 ;;		None
 25818 ;; Auto vars:     Size  Location     Type
 25819 ;;		None
 25820 ;; Return value:  Size  Location     Type
 25821 ;;                  1    wreg      void 
 25822 ;; Registers used:
 25823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25824 ;; Tracked objects:
 25825 ;;		On entry : 0/0
 25826 ;;		On exit  : 0/0
 25827 ;;		Unchanged: 0/0
 25828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25833 ;;Total ram usage:        0 bytes
 25834 ;; Hardware stack levels used:    1
 25835 ;; Hardware stack levels required when called:    9
 25836 ;; This function calls:
 25837 ;;		Nothing
 25838 ;; This function is called by:
 25839 ;;		_EUSART2_Initialize
 25840 ;;		_INTERRUPT_InterruptManagerLow
 25841 ;; This function uses a non-reentrant model
 25842 ;;
 25843                           
 25844                           	psect	text83
 25845  01874C                     __ptext83:
 25846                           	opt stack 0
 25847  01874C                     _EUSART2_Transmit_ISR:
 25848                           	opt stack 13
 25849                           
 25850                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 25851                           
 25852                           ; BSR set to: 14
 25853                           ;incstack = 0
 25854  01874C  0E80               	movlw	128
 25855  01874E  0101               	movlb	1	; () banked
 25856  018750  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 25857  018752  D014               	goto	i1l403
 25858                           
 25859                           ; BSR set to: 1
 25860                           ;eusart2.c: 203: {
 25861                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 25862  018754  51E2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 25863  018756  0D01               	mullw	1
 25864  018758  0E00               	movlw	low _eusart2TxBuffer
 25865  01875A  24F3               	addwf	prodl,w,c
 25866  01875C  6ED9               	movwf	fsr2l,c
 25867  01875E  0E03               	movlw	high _eusart2TxBuffer
 25868  018760  20F4               	addwfc	prodh,w,c
 25869  018762  6EDA               	movwf	fsr2h,c
 25870  018764  50DF               	movf	indf2,w,c
 25871  018766  010E               	movlb	14	; () banked
 25872  018768  6FF2               	movwf	242,b	;volatile
 25873                           
 25874                           ; BSR set to: 14
 25875  01876A  0101               	movlb	1	; () banked
 25876  01876C  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 25877                           
 25878                           ; BSR set to: 1
 25879                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 25880  01876E  0E7F               	movlw	127
 25881  018770  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 25882  018772  D002               	goto	i1l404
 25883                           
 25884                           ; BSR set to: 1
 25885                           ;eusart2.c: 206: {
 25886                           ;eusart2.c: 207: eusart2TxTail = 0;
 25887  018774  0E00               	movlw	0
 25888  018776  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 25889  018778                     i1l404:
 25890                           
 25891                           ; BSR set to: 1
 25892                           ;eusart2.c: 208: }
 25893                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 25894                           
 25895                           ; BSR set to: 1
 25896  018778  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 25897                           
 25898                           ;eusart2.c: 210: }
 25899  01877A  0012               	return	
 25900  01877C                     i1l403:
 25901                           
 25902                           ; BSR set to: 1
 25903                           ;eusart2.c: 211: else
 25904                           ;eusart2.c: 212: {
 25905                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 25906  01877C  010E               	movlb	14	; () banked
 25907  01877E  9D2C               	bcf	44,6,b	;volatile
 25908  018780  0012               	return	
 25909  018782                     __end_of_EUSART2_Transmit_ISR:
 25910                           	opt stack 0
 25911                           tosu	equ	0xFFF
 25912                           tosh	equ	0xFFE
 25913                           tosl	equ	0xFFD
 25914                           pclatu	equ	0xFFB
 25915                           pclath	equ	0xFFA
 25916                           tblptru	equ	0xFF8
 25917                           tblptrh	equ	0xFF7
 25918                           tblptrl	equ	0xFF6
 25919                           tablat	equ	0xFF5
 25920                           prodh	equ	0xFF4
 25921                           prodl	equ	0xFF3
 25922                           intcon	equ	0xFF2
 25923                           indf0	equ	0xFEF
 25924                           postinc0	equ	0xFEE
 25925                           fsr0h	equ	0xFEA
 25926                           fsr0l	equ	0xFE9
 25927                           wreg	equ	0xFE8
 25928                           indf1	equ	0xFE7
 25929                           postdec1	equ	0xFE5
 25930                           plusw1	equ	0xFE3
 25931                           fsr1h	equ	0xFE2
 25932                           fsr1l	equ	0xFE1
 25933                           bsr	equ	0xFE0
 25934                           indf2	equ	0xFDF
 25935                           postinc2	equ	0xFDE
 25936                           postdec2	equ	0xFDD
 25937                           plusw2	equ	0xFDB
 25938                           fsr2h	equ	0xFDA
 25939                           fsr2l	equ	0xFD9
 25940                           status	equ	0xFD8
 25941                           
 25942 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 25943 ;; Defined at:
 25944 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 25945 ;; Parameters:    Size  Location     Type
 25946 ;;		None
 25947 ;; Auto vars:     Size  Location     Type
 25948 ;;		None
 25949 ;; Return value:  Size  Location     Type
 25950 ;;                  1    wreg      void 
 25951 ;; Registers used:
 25952 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25953 ;; Tracked objects:
 25954 ;;		On entry : 0/0
 25955 ;;		On exit  : 0/0
 25956 ;;		Unchanged: 0/0
 25957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25960 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25961 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25962 ;;Total ram usage:       18 bytes
 25963 ;; Hardware stack levels used:    1
 25964 ;; Hardware stack levels required when called:    8
 25965 ;; This function calls:
 25966 ;;		Absolute function
 25967 ;;		_ADCC_ThresholdISR
 25968 ;;		_EUSART2_Receive_ISR
 25969 ;;		_TMR5_ISR
 25970 ;; This function is called by:
 25971 ;;		Interrupt level 2
 25972 ;; This function uses a non-reentrant model
 25973 ;;
 25974                           
 25975                           	psect	intcode
 25976  000008                     __pintcode:
 25977                           	opt stack 0
 25978  000008                     _INTERRUPT_InterruptManagerHigh:
 25979                           	opt stack 11
 25980                           
 25981                           ;incstack = 0
 25982  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25983  00000A  EF7A  F0BB         	goto	int_func
 25984                           tosu	equ	0xFFF
 25985                           tosh	equ	0xFFE
 25986                           tosl	equ	0xFFD
 25987                           pclatu	equ	0xFFB
 25988                           pclath	equ	0xFFA
 25989                           tblptru	equ	0xFF8
 25990                           tblptrh	equ	0xFF7
 25991                           tblptrl	equ	0xFF6
 25992                           tablat	equ	0xFF5
 25993                           prodh	equ	0xFF4
 25994                           prodl	equ	0xFF3
 25995                           intcon	equ	0xFF2
 25996                           indf0	equ	0xFEF
 25997                           postinc0	equ	0xFEE
 25998                           fsr0h	equ	0xFEA
 25999                           fsr0l	equ	0xFE9
 26000                           wreg	equ	0xFE8
 26001                           indf1	equ	0xFE7
 26002                           postdec1	equ	0xFE5
 26003                           plusw1	equ	0xFE3
 26004                           fsr1h	equ	0xFE2
 26005                           fsr1l	equ	0xFE1
 26006                           bsr	equ	0xFE0
 26007                           indf2	equ	0xFDF
 26008                           postinc2	equ	0xFDE
 26009                           postdec2	equ	0xFDD
 26010                           plusw2	equ	0xFDB
 26011                           fsr2h	equ	0xFDA
 26012                           fsr2l	equ	0xFD9
 26013                           status	equ	0xFD8
 26014                           
 26015                           	psect	intcode_body
 26016  0176F4                     __pintcode_body:
 26017                           	opt stack 11
 26018  0176F4                     int_func:
 26019                           	opt stack 11
 26020  0176F4  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 26021  0176F8  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 26022  0176FC  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 26023  017700  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 26024  017704  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 26025  017708  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 26026  01770C  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 26027  017710  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 26028  017714  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 26029  017718  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 26030  01771C  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 26031  017720  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 26032  017724  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 26033  017728  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 26034  01772C  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 26035  017730  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 26036  017734  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 26037  017738  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 26038                           
 26039                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 26040  01773C  010E               	movlb	14	; () banked
 26041  01773E  BF2C               	btfsc	44,7,b	;volatile
 26042                           
 26043                           ; BSR set to: 14
 26044  017740  AF36               	btfss	54,7,b	;volatile
 26045  017742  D00D               	goto	i2l212
 26046                           
 26047                           ; BSR set to: 14
 26048                           ;interrupt_manager.c: 87: {
 26049                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 26050  017744  D801               	call	i2u2608_48
 26051  017746  D016               	goto	i2l216
 26052  017748                     i2u2608_48:
 26053  017748  0005               	push	
 26054  01774A  6EFA               	movwf	pclath,c
 26055  01774C  0102               	movlb	2	; () banked
 26056  01774E  5168               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 26057  017750  6EFD               	movwf	tosl,c
 26058  017752  5169               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 26059  017754  6EFE               	movwf	tosh,c
 26060  017756  516A               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 26061  017758  6EFF               	movwf	tosu,c
 26062  01775A  50FA               	movf	pclath,w,c
 26063  01775C  0012               	return		;indir
 26064  01775E                     i2l212:
 26065                           
 26066                           ; BSR set to: 14
 26067                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 26068  01775E  B92E               	btfsc	46,4,b	;volatile
 26069                           
 26070                           ; BSR set to: 14
 26071  017760  A938               	btfss	56,4,b	;volatile
 26072  017762  D003               	goto	i2l214
 26073                           
 26074                           ; BSR set to: 14
 26075                           ;interrupt_manager.c: 91: {
 26076                           ;interrupt_manager.c: 92: TMR5_ISR();
 26077  017764  ECDB  F0C3         	call	_TMR5_ISR	;wreg free
 26078                           
 26079                           ;interrupt_manager.c: 93: }
 26080  017768  D005               	goto	i2l216
 26081  01776A                     i2l214:
 26082                           
 26083                           ; BSR set to: 14
 26084                           ;interrupt_manager.c: 94: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 26085  01776A  B32A               	btfsc	42,1,b	;volatile
 26086                           
 26087                           ; BSR set to: 14
 26088  01776C  A334               	btfss	52,1,b	;volatile
 26089  01776E  D002               	goto	i2l216
 26090                           
 26091                           ; BSR set to: 14
 26092                           ;interrupt_manager.c: 95: {
 26093                           ;interrupt_manager.c: 96: ADCC_ThresholdISR();
 26094  017770  ECA9  F0C4         	call	_ADCC_ThresholdISR	;wreg free
 26095  017774                     i2l216:
 26096                           
 26097                           ;interrupt_manager.c: 98: else
 26098                           ;interrupt_manager.c: 99: {
 26099  017774  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 26100  017778  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 26101  01777C  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 26102  017780  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 26103  017784  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 26104  017788  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 26105  01778C  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 26106  017790  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 26107  017794  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 26108  017798  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 26109  01779C  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 26110  0177A0  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 26111  0177A4  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 26112  0177A8  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 26113  0177AC  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 26114  0177B0  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 26115  0177B4  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 26116  0177B8  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 26117  0177BC  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 26118  0177BE  0011               	retfie		f
 26119  0177C0                     __end_of_INTERRUPT_InterruptManagerHigh:
 26120                           	opt stack 0
 26121                           tosu	equ	0xFFF
 26122                           tosh	equ	0xFFE
 26123                           tosl	equ	0xFFD
 26124                           pclatu	equ	0xFFB
 26125                           pclath	equ	0xFFA
 26126                           tblptru	equ	0xFF8
 26127                           tblptrh	equ	0xFF7
 26128                           tblptrl	equ	0xFF6
 26129                           tablat	equ	0xFF5
 26130                           prodh	equ	0xFF4
 26131                           prodl	equ	0xFF3
 26132                           intcon	equ	0xFF2
 26133                           indf0	equ	0xFEF
 26134                           postinc0	equ	0xFEE
 26135                           fsr0h	equ	0xFEA
 26136                           fsr0l	equ	0xFE9
 26137                           wreg	equ	0xFE8
 26138                           indf1	equ	0xFE7
 26139                           postdec1	equ	0xFE5
 26140                           plusw1	equ	0xFE3
 26141                           fsr1h	equ	0xFE2
 26142                           fsr1l	equ	0xFE1
 26143                           bsr	equ	0xFE0
 26144                           indf2	equ	0xFDF
 26145                           postinc2	equ	0xFDE
 26146                           postdec2	equ	0xFDD
 26147                           plusw2	equ	0xFDB
 26148                           fsr2h	equ	0xFDA
 26149                           fsr2l	equ	0xFD9
 26150                           status	equ	0xFD8
 26151                           
 26152 ;; *************** function _TMR5_ISR *****************
 26153 ;; Defined at:
 26154 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26155 ;; Parameters:    Size  Location     Type
 26156 ;;		None
 26157 ;; Auto vars:     Size  Location     Type
 26158 ;;		None
 26159 ;; Return value:  Size  Location     Type
 26160 ;;                  1    wreg      void 
 26161 ;; Registers used:
 26162 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 26163 ;; Tracked objects:
 26164 ;;		On entry : 0/0
 26165 ;;		On exit  : 0/0
 26166 ;;		Unchanged: 0/0
 26167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26172 ;;Total ram usage:        0 bytes
 26173 ;; Hardware stack levels used:    1
 26174 ;; Hardware stack levels required when called:    1
 26175 ;; This function calls:
 26176 ;;		Absolute function
 26177 ;;		_TMR5_DefaultInterruptHandler
 26178 ;;		_TMR5_WriteTimer
 26179 ;; This function is called by:
 26180 ;;		_INTERRUPT_InterruptManagerHigh
 26181 ;; This function uses a non-reentrant model
 26182 ;;
 26183                           
 26184                           	psect	text85
 26185  0187B6                     __ptext85:
 26186                           	opt stack 0
 26187  0187B6                     _TMR5_ISR:
 26188                           	opt stack 17
 26189                           
 26190                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 26191                           
 26192                           ;incstack = 0
 26193  0187B6  010E               	movlb	14	; () banked
 26194  0187B8  9938               	bcf	56,4,b	;volatile
 26195                           
 26196                           ; BSR set to: 14
 26197                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 26198  0187BA  C1D7  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 26199  0187BE  C1D8  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 26200  0187C2  EC54  F0C5         	call	_TMR5_WriteTimer	;wreg free
 26201                           
 26202                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 26203  0187C6  0102               	movlb	2	; () banked
 26204  0187C8  515C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26205  0187CA  115D               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26206  0187CC  115E               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26207  0187CE  B4D8               	btfsc	status,2,c
 26208  0187D0  0012               	return	
 26209                           
 26210                           ; BSR set to: 2
 26211                           ;tmr5.c: 172: {
 26212                           ;tmr5.c: 173: TMR5_InterruptHandler();
 26213  0187D2  D801               	call	i2u2594_48
 26214  0187D4  0012               	return	
 26215  0187D6                     i2u2594_48:
 26216  0187D6  0005               	push	
 26217  0187D8  6EFA               	movwf	pclath,c
 26218  0187DA  515C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26219  0187DC  6EFD               	movwf	tosl,c
 26220  0187DE  515D               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26221  0187E0  6EFE               	movwf	tosh,c
 26222  0187E2  515E               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26223  0187E4  6EFF               	movwf	tosu,c
 26224  0187E6  50FA               	movf	pclath,w,c
 26225  0187E8  0012               	return		;indir
 26226  0187EA                     __end_of_TMR5_ISR:
 26227                           	opt stack 0
 26228                           tosu	equ	0xFFF
 26229                           tosh	equ	0xFFE
 26230                           tosl	equ	0xFFD
 26231                           pclatu	equ	0xFFB
 26232                           pclath	equ	0xFFA
 26233                           tblptru	equ	0xFF8
 26234                           tblptrh	equ	0xFF7
 26235                           tblptrl	equ	0xFF6
 26236                           tablat	equ	0xFF5
 26237                           prodh	equ	0xFF4
 26238                           prodl	equ	0xFF3
 26239                           intcon	equ	0xFF2
 26240                           indf0	equ	0xFEF
 26241                           postinc0	equ	0xFEE
 26242                           fsr0h	equ	0xFEA
 26243                           fsr0l	equ	0xFE9
 26244                           wreg	equ	0xFE8
 26245                           indf1	equ	0xFE7
 26246                           postdec1	equ	0xFE5
 26247                           plusw1	equ	0xFE3
 26248                           fsr1h	equ	0xFE2
 26249                           fsr1l	equ	0xFE1
 26250                           bsr	equ	0xFE0
 26251                           indf2	equ	0xFDF
 26252                           postinc2	equ	0xFDE
 26253                           postdec2	equ	0xFDD
 26254                           plusw2	equ	0xFDB
 26255                           fsr2h	equ	0xFDA
 26256                           fsr2l	equ	0xFD9
 26257                           status	equ	0xFD8
 26258                           
 26259 ;; *************** function _TMR5_WriteTimer *****************
 26260 ;; Defined at:
 26261 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 26262 ;; Parameters:    Size  Location     Type
 26263 ;;  timerVal        2    0[COMRAM] unsigned int 
 26264 ;; Auto vars:     Size  Location     Type
 26265 ;;		None
 26266 ;; Return value:  Size  Location     Type
 26267 ;;                  1    wreg      void 
 26268 ;; Registers used:
 26269 ;;		wreg, status,2
 26270 ;; Tracked objects:
 26271 ;;		On entry : 0/0
 26272 ;;		On exit  : 0/0
 26273 ;;		Unchanged: 0/0
 26274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26279 ;;Total ram usage:        2 bytes
 26280 ;; Hardware stack levels used:    1
 26281 ;; This function calls:
 26282 ;;		Nothing
 26283 ;; This function is called by:
 26284 ;;		_TMR5_ISR
 26285 ;;		_TMR5_Reload
 26286 ;; This function uses a non-reentrant model
 26287 ;;
 26288                           
 26289                           	psect	text86
 26290  018AA8                     __ptext86:
 26291                           	opt stack 0
 26292  018AA8                     _TMR5_WriteTimer:
 26293                           	opt stack 17
 26294                           
 26295                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 26296                           
 26297                           ;incstack = 0
 26298  018AA8  A4C3               	btfss	4035,2,c	;volatile
 26299  018AAA  D007               	goto	i2l714
 26300                           
 26301                           ;tmr5.c: 130: {
 26302                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 26303  018AAC  90C3               	bcf	4035,0,c	;volatile
 26304                           
 26305                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 26306  018AAE  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 26307  018AB0  6EC2               	movwf	4034,c	;volatile
 26308                           
 26309                           ;tmr5.c: 136: TMR5L = timerVal;
 26310  018AB2  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 26311                           
 26312                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 26313  018AB6  80C3               	bsf	4035,0,c	;volatile
 26314                           
 26315                           ;tmr5.c: 140: }
 26316  018AB8  0012               	return	
 26317  018ABA                     i2l714:
 26318                           
 26319                           ;tmr5.c: 141: else
 26320                           ;tmr5.c: 142: {
 26321                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 26322  018ABA  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 26323  018ABC  6EC2               	movwf	4034,c	;volatile
 26324                           
 26325                           ;tmr5.c: 145: TMR5L = timerVal;
 26326  018ABE  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 26327  018AC2  0012               	return	
 26328  018AC4                     __end_of_TMR5_WriteTimer:
 26329                           	opt stack 0
 26330                           tosu	equ	0xFFF
 26331                           tosh	equ	0xFFE
 26332                           tosl	equ	0xFFD
 26333                           pclatu	equ	0xFFB
 26334                           pclath	equ	0xFFA
 26335                           tblptru	equ	0xFF8
 26336                           tblptrh	equ	0xFF7
 26337                           tblptrl	equ	0xFF6
 26338                           tablat	equ	0xFF5
 26339                           prodh	equ	0xFF4
 26340                           prodl	equ	0xFF3
 26341                           intcon	equ	0xFF2
 26342                           indf0	equ	0xFEF
 26343                           postinc0	equ	0xFEE
 26344                           fsr0h	equ	0xFEA
 26345                           fsr0l	equ	0xFE9
 26346                           wreg	equ	0xFE8
 26347                           indf1	equ	0xFE7
 26348                           postdec1	equ	0xFE5
 26349                           plusw1	equ	0xFE3
 26350                           fsr1h	equ	0xFE2
 26351                           fsr1l	equ	0xFE1
 26352                           bsr	equ	0xFE0
 26353                           indf2	equ	0xFDF
 26354                           postinc2	equ	0xFDE
 26355                           postdec2	equ	0xFDD
 26356                           plusw2	equ	0xFDB
 26357                           fsr2h	equ	0xFDA
 26358                           fsr2l	equ	0xFD9
 26359                           status	equ	0xFD8
 26360                           
 26361 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26362 ;; Defined at:
 26363 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26364 ;; Parameters:    Size  Location     Type
 26365 ;;		None
 26366 ;; Auto vars:     Size  Location     Type
 26367 ;;		None
 26368 ;; Return value:  Size  Location     Type
 26369 ;;                  1    wreg      void 
 26370 ;; Registers used:
 26371 ;;		None
 26372 ;; Tracked objects:
 26373 ;;		On entry : 0/0
 26374 ;;		On exit  : 0/0
 26375 ;;		Unchanged: 0/0
 26376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26381 ;;Total ram usage:        0 bytes
 26382 ;; Hardware stack levels used:    1
 26383 ;; This function calls:
 26384 ;;		Nothing
 26385 ;; This function is called by:
 26386 ;;		_TMR5_Initialize
 26387 ;;		_TMR5_ISR
 26388 ;; This function uses a non-reentrant model
 26389 ;;
 26390                           
 26391                           	psect	text87
 26392  018C56                     __ptext87:
 26393                           	opt stack 0
 26394  018C56                     _TMR5_DefaultInterruptHandler:
 26395                           	opt stack 17
 26396                           
 26397                           ;incstack = 0
 26398  018C56  0012               	return		;funcret
 26399  018C58                     __end_of_TMR5_DefaultInterruptHandler:
 26400                           	opt stack 0
 26401                           tosu	equ	0xFFF
 26402                           tosh	equ	0xFFE
 26403                           tosl	equ	0xFFD
 26404                           pclatu	equ	0xFFB
 26405                           pclath	equ	0xFFA
 26406                           tblptru	equ	0xFF8
 26407                           tblptrh	equ	0xFF7
 26408                           tblptrl	equ	0xFF6
 26409                           tablat	equ	0xFF5
 26410                           prodh	equ	0xFF4
 26411                           prodl	equ	0xFF3
 26412                           intcon	equ	0xFF2
 26413                           indf0	equ	0xFEF
 26414                           postinc0	equ	0xFEE
 26415                           fsr0h	equ	0xFEA
 26416                           fsr0l	equ	0xFE9
 26417                           wreg	equ	0xFE8
 26418                           indf1	equ	0xFE7
 26419                           postdec1	equ	0xFE5
 26420                           plusw1	equ	0xFE3
 26421                           fsr1h	equ	0xFE2
 26422                           fsr1l	equ	0xFE1
 26423                           bsr	equ	0xFE0
 26424                           indf2	equ	0xFDF
 26425                           postinc2	equ	0xFDE
 26426                           postdec2	equ	0xFDD
 26427                           plusw2	equ	0xFDB
 26428                           fsr2h	equ	0xFDA
 26429                           fsr2l	equ	0xFD9
 26430                           status	equ	0xFD8
 26431                           
 26432 ;; *************** function _EUSART2_Receive_ISR *****************
 26433 ;; Defined at:
 26434 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 26435 ;; Parameters:    Size  Location     Type
 26436 ;;		None
 26437 ;; Auto vars:     Size  Location     Type
 26438 ;;		None
 26439 ;; Return value:  Size  Location     Type
 26440 ;;                  1    wreg      void 
 26441 ;; Registers used:
 26442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26443 ;; Tracked objects:
 26444 ;;		On entry : 0/0
 26445 ;;		On exit  : 0/0
 26446 ;;		Unchanged: 0/0
 26447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26452 ;;Total ram usage:        0 bytes
 26453 ;; Hardware stack levels used:    1
 26454 ;; Hardware stack levels required when called:    3
 26455 ;; This function calls:
 26456 ;;		i2_printf
 26457 ;; This function is called by:
 26458 ;;		_EUSART2_Initialize
 26459 ;;		_INTERRUPT_InterruptManagerHigh
 26460 ;; This function uses a non-reentrant model
 26461 ;;
 26462                           
 26463                           	psect	text88
 26464  0177C0                     __ptext88:
 26465                           	opt stack 0
 26466  0177C0                     _EUSART2_Receive_ISR:
 26467                           	opt stack 15
 26468                           
 26469                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 26470                           
 26471                           ;incstack = 0
 26472  0177C0  010E               	movlb	14	; () banked
 26473  0177C2  A3F5               	btfss	245,1,b	;volatile
 26474  0177C4  D003               	goto	i2l409
 26475                           
 26476                           ; BSR set to: 14
 26477                           ;eusart2.c: 221: {
 26478                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 26479  0177C6  99F5               	bcf	245,4,b	;volatile
 26480                           
 26481                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 26482  0177C8  89F5               	bsf	245,4,b	;volatile
 26483                           
 26484                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 26485  0177CA  827E               	bsf	3966,1,c	;volatile
 26486  0177CC                     i2l409:
 26487                           
 26488                           ; BSR set to: 14
 26489                           ;eusart2.c: 227: }
 26490                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 26491  0177CC  927E               	bcf	3966,1,c	;volatile
 26492                           
 26493                           ; BSR set to: 14
 26494                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 26495  0177CE  0100               	movlb	0	; () banked
 26496  0177D0  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 26497  0177D2  0D01               	mullw	1
 26498  0177D4  0E00               	movlw	low _eusart2RxBuffer
 26499  0177D6  24F3               	addwf	prodl,w,c
 26500  0177D8  6ED9               	movwf	fsr2l,c
 26501  0177DA  0E02               	movlw	high _eusart2RxBuffer
 26502  0177DC  20F4               	addwfc	prodh,w,c
 26503  0177DE  6EDA               	movwf	fsr2h,c
 26504  0177E0  CEF1 FFDF          	movff	3825,indf2	;volatile
 26505                           
 26506                           ; BSR set to: 0
 26507  0177E4  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 26508                           
 26509                           ; BSR set to: 0
 26510                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 26511  0177E6  0E3F               	movlw	63
 26512  0177E8  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 26513  0177EA  D002               	goto	i2l410
 26514                           
 26515                           ; BSR set to: 0
 26516                           ;eusart2.c: 234: {
 26517                           ;eusart2.c: 235: eusart2RxHead = 0;
 26518  0177EC  0E00               	movlw	0
 26519  0177EE  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 26520  0177F0                     i2l410:
 26521                           
 26522                           ; BSR set to: 0
 26523                           ;eusart2.c: 236: }
 26524                           ;eusart2.c: 237: eusart2RxCount++;
 26525                           
 26526                           ; BSR set to: 0
 26527  0177F0  0101               	movlb	1	; () banked
 26528  0177F2  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 26529                           
 26530                           ; BSR set to: 1
 26531                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 26532  0177F4  0E0A               	movlw	10
 26533  0177F6  010E               	movlb	14	; () banked
 26534  0177F8  19F1               	xorwf	241,w,b	;volatile
 26535  0177FA  B4D8               	btfsc	status,2,c
 26536  0177FC  D004               	goto	i2u1891_40
 26537                           
 26538                           ; BSR set to: 14
 26539  0177FE  0E0D               	movlw	13
 26540  017800  19F1               	xorwf	241,w,b	;volatile
 26541  017802  A4D8               	btfss	status,2,c
 26542  017804  D006               	goto	i2l411
 26543  017806                     i2u1891_40:
 26544                           
 26545                           ; BSR set to: 14
 26546                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 26547  017806  0100               	movlb	0	; () banked
 26548  017808  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 26549                           
 26550                           ; BSR set to: 0
 26551                           ;eusart2.c: 248: RC2REG = 0;
 26552  01780A  0E00               	movlw	0
 26553  01780C  010E               	movlb	14	; () banked
 26554  01780E  6FF1               	movwf	241,b	;volatile
 26555                           
 26556                           ;eusart2.c: 250: }
 26557  017810  D002               	goto	i2l414
 26558  017812                     i2l411:
 26559                           
 26560                           ; BSR set to: 14
 26561                           ;eusart2.c: 252: else {
 26562                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 26563  017812  0100               	movlb	0	; () banked
 26564  017814  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 26565  017816                     i2l414:
 26566                           
 26567                           ;eusart2.c: 256: }
 26568                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 26569                           
 26570                           ; BSR set to: 0
 26571  017816  0E08               	movlw	8
 26572  017818  010E               	movlb	14	; () banked
 26573  01781A  19F1               	xorwf	241,w,b	;volatile
 26574  01781C  A4D8               	btfss	status,2,c
 26575  01781E  0012               	return	
 26576                           
 26577                           ; BSR set to: 14
 26578                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 26579  017820  0100               	movlb	0	; () banked
 26580  017822  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 26581  017824  0D01               	mullw	1
 26582  017826  0E00               	movlw	low _eusart2RxBuffer
 26583  017828  24F3               	addwf	prodl,w,c
 26584  01782A  6ED9               	movwf	fsr2l,c
 26585  01782C  0E02               	movlw	high _eusart2RxBuffer
 26586  01782E  20F4               	addwfc	prodh,w,c
 26587  017830  6EDA               	movwf	fsr2h,c
 26588  017832  0E00               	movlw	0
 26589  017834  6EDF               	movwf	indf2,c
 26590                           
 26591                           ; BSR set to: 0
 26592                           ;eusart2.c: 262: eusart2RxHead--;
 26593  017836  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 26594                           
 26595                           ; BSR set to: 0
 26596                           ;eusart2.c: 265: printf("\033[K");
 26597  017838  0EC4               	movlw	low STR_1
 26598  01783A  6F88               	movwf	i2printf@f& (0+255),b
 26599  01783C  0EFF               	movlw	high STR_1
 26600  01783E  6F89               	movwf	(i2printf@f+1)& (0+255),b
 26601  017840  EC37  F08E         	call	i2_printf	;wreg free
 26602                           
 26603                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 26604  017844  0101               	movlb	1	; () banked
 26605  017846  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 26606  017848  0100               	movlb	0	; () banked
 26607  01784A  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 26608  01784C  B4D8               	btfsc	status,2,c
 26609  01784E  D00B               	goto	i2l416
 26610                           
 26611                           ; BSR set to: 0
 26612                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 26613  017850  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 26614  017852  0D01               	mullw	1
 26615  017854  0E00               	movlw	low _eusart2RxBuffer
 26616  017856  24F3               	addwf	prodl,w,c
 26617  017858  6ED9               	movwf	fsr2l,c
 26618  01785A  0E02               	movlw	high _eusart2RxBuffer
 26619  01785C  20F4               	addwfc	prodh,w,c
 26620  01785E  6EDA               	movwf	fsr2h,c
 26621  017860  0E00               	movlw	0
 26622  017862  6EDF               	movwf	indf2,c
 26623                           
 26624                           ; BSR set to: 0
 26625                           ;eusart2.c: 270: eusart2RxHead--;
 26626  017864  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 26627  017866                     i2l416:
 26628                           
 26629                           ; BSR set to: 0
 26630                           ;eusart2.c: 272: }
 26631                           ;eusart2.c: 274: RC2REG = 0;
 26632                           
 26633                           ; BSR set to: 0
 26634  017866  0E00               	movlw	0
 26635  017868  010E               	movlb	14	; () banked
 26636  01786A  6FF1               	movwf	241,b	;volatile
 26637  01786C  0012               	return	
 26638  01786E                     __end_of_EUSART2_Receive_ISR:
 26639                           	opt stack 0
 26640                           tosu	equ	0xFFF
 26641                           tosh	equ	0xFFE
 26642                           tosl	equ	0xFFD
 26643                           pclatu	equ	0xFFB
 26644                           pclath	equ	0xFFA
 26645                           tblptru	equ	0xFF8
 26646                           tblptrh	equ	0xFF7
 26647                           tblptrl	equ	0xFF6
 26648                           tablat	equ	0xFF5
 26649                           prodh	equ	0xFF4
 26650                           prodl	equ	0xFF3
 26651                           intcon	equ	0xFF2
 26652                           indf0	equ	0xFEF
 26653                           postinc0	equ	0xFEE
 26654                           fsr0h	equ	0xFEA
 26655                           fsr0l	equ	0xFE9
 26656                           wreg	equ	0xFE8
 26657                           indf1	equ	0xFE7
 26658                           postdec1	equ	0xFE5
 26659                           plusw1	equ	0xFE3
 26660                           fsr1h	equ	0xFE2
 26661                           fsr1l	equ	0xFE1
 26662                           bsr	equ	0xFE0
 26663                           indf2	equ	0xFDF
 26664                           postinc2	equ	0xFDE
 26665                           postdec2	equ	0xFDD
 26666                           plusw2	equ	0xFDB
 26667                           fsr2h	equ	0xFDA
 26668                           fsr2l	equ	0xFD9
 26669                           status	equ	0xFD8
 26670                           
 26671 ;; *************** function i2_printf *****************
 26672 ;; Defined at:
 26673 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26674 ;; Parameters:    Size  Location     Type
 26675 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 26676 ;;		 -> STR_130(30), STR_129(46), STR_128(39), STR_127(62), 
 26677 ;;		 -> STR_126(55), STR_125(2360), STR_123(46), STR_121(51), 
 26678 ;;		 -> STR_119(53), STR_117(58), STR_115(71), STR_114(63), 
 26679 ;;		 -> STR_113(37), STR_112(46), STR_111(102), STR_110(86), 
 26680 ;;		 -> STR_108(25), STR_106(42), STR_105(53), STR_104(31), 
 26681 ;;		 -> STR_102(29), STR_101(28), STR_99(42), STR_97(41), 
 26682 ;;		 -> STR_95(40), STR_93(56), STR_91(34), STR_89(34), 
 26683 ;;		 -> STR_87(32), STR_85(37), STR_83(58), STR_81(36), 
 26684 ;;		 -> STR_79(36), STR_77(37), STR_75(45), STR_74(66), 
 26685 ;;		 -> STR_72(21), STR_70(24), STR_69(48), STR_59(54), 
 26686 ;;		 -> STR_58(64), STR_56(59), STR_54(85), STR_52(47), 
 26687 ;;		 -> STR_51(17), STR_48(52), STR_46(4), STR_45(5), 
 26688 ;;		 -> STR_43(4), STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), 
 26689 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 26690 ;;		 -> STR_6(5), STR_5(3), STR_4(372), STR_3(4), 
 26691 ;;		 -> STR_2(5), STR_1(4), 
 26692 ;; Auto vars:     Size  Location     Type
 26693 ;;  printf          4   69[BANK0 ] PTR const unsigned char 
 26694 ;;  printf          4   65[BANK0 ] unsigned long 
 26695 ;;  printf          4   59[BANK0 ] struct .
 26696 ;;  printf          2   77[BANK0 ] int 
 26697 ;;  printf          2   75[BANK0 ] int 
 26698 ;;  printf          2   73[BANK0 ] unsigned short 
 26699 ;;  printf          2   63[BANK0 ] int 
 26700 ;;  printf          2   57[BANK0 ] PTR void [1]
 26701 ;;		 -> ?i2_printf(2), ?_printf(2), 
 26702 ;;  printf          2   55[BANK0 ] unsigned int 
 26703 ;;  printf          2   53[BANK0 ] PTR const unsigned char 
 26704 ;;		 -> STR_144(7), printf@c(1), STR_143(16), STR_142(22), 
 26705 ;;		 -> STR_141(21), STR_140(27), STR_139(41), STR_138(32), 
 26706 ;;		 -> STR_137(19), STR_136(16), STR_135(15), STR_134(16), 
 26707 ;;		 -> STR_133(10), STR_132(13), STR_131(12), ringBufferLUT@channel_name(22), 
 26708 ;;		 -> TRIAC_Firing_Angle(4), 
 26709 ;;  printf          1   79[BANK0 ] char 
 26710 ;;  printf          1   52[BANK0 ] unsigned char 
 26711 ;;  printf          1    0        unsigned char 
 26712 ;; Return value:  Size  Location     Type
 26713 ;;                  2   40[BANK0 ] int 
 26714 ;; Registers used:
 26715 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26716 ;; Tracked objects:
 26717 ;;		On entry : 0/0
 26718 ;;		On exit  : 0/0
 26719 ;;		Unchanged: 0/0
 26720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26722 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26723 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26724 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26725 ;;Total ram usage:       40 bytes
 26726 ;; Hardware stack levels used:    1
 26727 ;; Hardware stack levels required when called:    2
 26728 ;; This function calls:
 26729 ;;		i2___awdiv
 26730 ;;		i2___fladd
 26731 ;;		i2___flge
 26732 ;;		i2___flmul
 26733 ;;		i2___flneg
 26734 ;;		i2___flsub
 26735 ;;		i2___fltol
 26736 ;;		i2___lldiv
 26737 ;;		i2___llmod
 26738 ;;		i2___wmul
 26739 ;;		i2___xxtofl
 26740 ;;		i2__div_to_l_
 26741 ;;		i2__tdiv_to_l_
 26742 ;;		i2_fround
 26743 ;;		i2_isdigit
 26744 ;;		i2_putch
 26745 ;;		i2_scale
 26746 ;; This function is called by:
 26747 ;;		_EUSART2_Receive_ISR
 26748 ;; This function uses a non-reentrant model
 26749 ;;
 26750                           
 26751                           	psect	text89
 26752  011C6E                     __ptext89:
 26753                           	opt stack 0
 26754  011C6E                     i2_printf:
 26755                           	opt stack 15
 26756                           
 26757                           ;doprnt.c: 466: va_list ap;
 26758                           ;doprnt.c: 499: signed char c;
 26759                           ;doprnt.c: 501: int width;
 26760                           ;doprnt.c: 504: int prec;
 26761                           ;doprnt.c: 508: unsigned short flag;
 26762                           ;doprnt.c: 515: char d;
 26763                           ;doprnt.c: 516: double fval;
 26764                           ;doprnt.c: 517: int exp;
 26765                           ;doprnt.c: 523: union {
 26766                           ;doprnt.c: 524: unsigned long vd;
 26767                           ;doprnt.c: 525: double integ;
 26768                           ;doprnt.c: 526: } tmpval;
 26769                           ;doprnt.c: 528: unsigned long val;
 26770                           ;doprnt.c: 529: unsigned len;
 26771                           ;doprnt.c: 530: const char * cp;
 26772                           ;doprnt.c: 533: *ap = __va_start();
 26773                           
 26774                           ; BSR set to: 14
 26775                           ;incstack = 0
 26776  011C6E  0E8A               	movlw	low (?i2_printf+2)
 26777  011C70  0100               	movlb	0	; () banked
 26778  011C72  6F99               	movwf	i2printf@ap& (0+255),b
 26779  011C74  0E00               	movlw	high (?i2_printf+2)
 26780  011C76  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 26781                           
 26782                           ;doprnt.c: 536: while(c = *f++) {
 26783  011C78  EFFA  F094         	goto	i2u1877_40
 26784  011C7C                     
 26785                           ; BSR set to: 0
 26786                           ;doprnt.c: 538: if(c != '%')
 26787                           
 26788                           ; BSR set to: 0
 26789  011C7C  0E25               	movlw	37
 26790  011C7E  19AF               	xorwf	i2printf@c& (0+255),w,b
 26791  011C80  B4D8               	btfsc	status,2,c
 26792  011C82  D005               	goto	i2l1402
 26793                           
 26794                           ; BSR set to: 0
 26795                           ;doprnt.c: 540: {
 26796                           ;doprnt.c: 541: (putch(c) );
 26797  011C84  51AF               	movf	i2printf@c& (0+255),w,b
 26798  011C86  EC0A  F0C6         	call	i2_putch
 26799                           
 26800                           ;doprnt.c: 542: continue;
 26801  011C8A  EFFA  F094         	goto	i2u1877_40
 26802  011C8E                     i2l1402:
 26803                           
 26804                           ;doprnt.c: 543: }
 26805                           ;doprnt.c: 546: width = 0;
 26806  011C8E  0E00               	movlw	0
 26807  011C90  0100               	movlb	0	; () banked
 26808  011C92  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 26809  011C94  0E00               	movlw	0
 26810  011C96  6FAB               	movwf	i2printf@width& (0+255),b
 26811                           
 26812                           ;doprnt.c: 548: flag = 0;
 26813  011C98  0E00               	movlw	0
 26814  011C9A  6FAA               	movwf	(i2printf@flag+1)& (0+255),b
 26815  011C9C  0E00               	movlw	0
 26816  011C9E  6FA9               	movwf	i2printf@flag& (0+255),b
 26817                           
 26818                           ; BSR set to: 0
 26819                           ;doprnt.c: 551: switch(*f) {
 26820                           
 26821                           ;doprnt.c: 550: for(;;) {
 26822  011CA0  D004               	goto	i2l1404
 26823  011CA2                     
 26824                           ;doprnt.c: 580: flag |= 0x04;
 26825                           
 26826                           ; BSR set to: 0
 26827  011CA2  0100               	movlb	0	; () banked
 26828  011CA4  85A9               	bsf	i2printf@flag& (0+255),2,b
 26829                           
 26830                           ;doprnt.c: 581: f++;
 26831  011CA6  4B88               	infsnz	i2printf@f& (0+255),f,b
 26832  011CA8  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 26833  011CAA                     i2l1404:
 26834                           
 26835                           ; BSR set to: 0
 26836  011CAA  C088  FFF6         	movff	i2printf@f,tblptrl
 26837  011CAE  C089  FFF7         	movff	i2printf@f+1,tblptrh
 26838  011CB2  0E00               	movlw	low (__mediumconst shr (0+16))
 26839  011CB4  6EF8               	movwf	tblptru,c
 26840  011CB6  0E0D               	movlw	(high __ramtop+-1)
 26841  011CB8  64F7               	cpfsgt	tblptrh,c
 26842  011CBA  D003               	bra	i2u1803_47
 26843  011CBC  0008               	tblrd		*
 26844  011CBE  50F5               	movf	tablat,w,c
 26845  011CC0  D005               	bra	i2u1803_40
 26846  011CC2                     i2u1803_47:
 26847  011CC2  CFF6 FFE9          	movff	tblptrl,fsr0l
 26848  011CC6  CFF7 FFEA          	movff	tblptrh,fsr0h
 26849  011CCA  50EF               	movf	indf0,w,c
 26850  011CCC                     i2u1803_40:
 26851                           
 26852                           ; Switch size 1, requested type "space"
 26853                           ; Number of cases is 1, Range of values is 48 to 48
 26854                           ; switch strategies available:
 26855                           ; Name         Instructions Cycles
 26856                           ; simple_byte            4     3 (average)
 26857                           ;	Chosen strategy is simple_byte
 26858  011CCC  0A30               	xorlw	48	; case 48
 26859  011CCE  B4D8               	btfsc	status,2,c
 26860  011CD0  D7E8               	goto	i2l1405
 26861                           
 26862                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 26863                           
 26864                           ;doprnt.c: 586: }
 26865                           
 26866                           ;doprnt.c: 585: break;
 26867  011CD2  C088  FFF6         	movff	i2printf@f,tblptrl
 26868  011CD6  C089  FFF7         	movff	i2printf@f+1,tblptrh
 26869  011CDA  0E00               	movlw	low (__mediumconst shr (0+16))
 26870  011CDC  6EF8               	movwf	tblptru,c
 26871  011CDE  0E0D               	movlw	(high __ramtop+-1)
 26872  011CE0  64F7               	cpfsgt	tblptrh,c
 26873  011CE2  D003               	bra	i2u1804_47
 26874  011CE4  0008               	tblrd		*
 26875  011CE6  50F5               	movf	tablat,w,c
 26876  011CE8  D005               	bra	i2u1804_40
 26877  011CEA                     i2u1804_47:
 26878  011CEA  CFF6 FFE9          	movff	tblptrl,fsr0l
 26879  011CEE  CFF7 FFEA          	movff	tblptrh,fsr0h
 26880  011CF2  50EF               	movf	indf0,w,c
 26881  011CF4                     i2u1804_40:
 26882  011CF4  EC29  F0C5         	call	i2_isdigit
 26883  011CF8  A0D8               	btfss	status,0,c
 26884  011CFA  D04B               	goto	i2u1808_40
 26885                           
 26886                           ;doprnt.c: 598: width = 0;
 26887  011CFC  0E00               	movlw	0
 26888  011CFE  0100               	movlb	0	; () banked
 26889  011D00  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 26890  011D02  0E00               	movlw	0
 26891  011D04  6FAB               	movwf	i2printf@width& (0+255),b
 26892  011D06                     
 26893                           ;doprnt.c: 600: width *= 10;
 26894                           
 26895                           ; BSR set to: 0
 26896  011D06  C0AB  F001         	movff	i2printf@width,i2___wmul@multiplier
 26897  011D0A  C0AC  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 26898  011D0E  0E00               	movlw	0
 26899  011D10  6E04               	movwf	i2___wmul@multiplicand+1,c
 26900  011D12  0E0A               	movlw	10
 26901  011D14  6E03               	movwf	i2___wmul@multiplicand,c
 26902  011D16  ECE3  F0C4         	call	i2___wmul	;wreg free
 26903  011D1A  C001  F0AB         	movff	?i2___wmul,i2printf@width
 26904  011D1E  C002  F0AC         	movff	?i2___wmul+1,i2printf@width+1
 26905                           
 26906                           ;doprnt.c: 601: width += *f++ - '0';
 26907  011D22  0ED0               	movlw	208
 26908  011D24  0100               	movlb	0	; () banked
 26909  011D26  6F8A               	movwf	??i2_printf& (0+255),b
 26910  011D28  0EFF               	movlw	255
 26911  011D2A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26912  011D2C  C088  FFF6         	movff	i2printf@f,tblptrl
 26913  011D30  C089  FFF7         	movff	i2printf@f+1,tblptrh
 26914  011D34  0E00               	movlw	low (__mediumconst shr (0+16))
 26915  011D36  6EF8               	movwf	tblptru,c
 26916  011D38  0E0D               	movlw	(high __ramtop+-1)
 26917  011D3A  64F7               	cpfsgt	tblptrh,c
 26918  011D3C  D003               	bra	i2u1806_47
 26919  011D3E  0008               	tblrd		*
 26920  011D40  50F5               	movf	tablat,w,c
 26921  011D42  D005               	bra	i2u1806_40
 26922  011D44                     i2u1806_47:
 26923  011D44  CFF6 FFE9          	movff	tblptrl,fsr0l
 26924  011D48  CFF7 FFEA          	movff	tblptrh,fsr0h
 26925  011D4C  50EF               	movf	indf0,w,c
 26926  011D4E                     i2u1806_40:
 26927  011D4E  0100               	movlb	0	; () banked
 26928  011D50  6F8C               	movwf	(??i2_printf+2)& (0+255),b
 26929  011D52  6B8D               	clrf	(??i2_printf+3)& (0+255),b
 26930  011D54  518A               	movf	??i2_printf& (0+255),w,b
 26931  011D56  278C               	addwf	(??i2_printf+2)& (0+255),f,b
 26932  011D58  518B               	movf	(??i2_printf+1)& (0+255),w,b
 26933  011D5A  238D               	addwfc	(??i2_printf+3)& (0+255),f,b
 26934  011D5C  518C               	movf	(??i2_printf+2)& (0+255),w,b
 26935  011D5E  27AB               	addwf	i2printf@width& (0+255),f,b
 26936  011D60  518D               	movf	(??i2_printf+3)& (0+255),w,b
 26937  011D62  23AC               	addwfc	(i2printf@width+1)& (0+255),f,b
 26938                           
 26939                           ; BSR set to: 0
 26940  011D64  4B88               	infsnz	i2printf@f& (0+255),f,b
 26941  011D66  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 26942                           
 26943                           ; BSR set to: 0
 26944                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 26945  011D68  C088  FFF6         	movff	i2printf@f,tblptrl
 26946  011D6C  C089  FFF7         	movff	i2printf@f+1,tblptrh
 26947  011D70  0E00               	movlw	low (__mediumconst shr (0+16))
 26948  011D72  6EF8               	movwf	tblptru,c
 26949  011D74  0E0D               	movlw	(high __ramtop+-1)
 26950  011D76  64F7               	cpfsgt	tblptrh,c
 26951  011D78  D003               	bra	i2u1807_47
 26952  011D7A  0008               	tblrd		*
 26953  011D7C  50F5               	movf	tablat,w,c
 26954  011D7E  D005               	bra	i2u1807_40
 26955  011D80                     i2u1807_47:
 26956  011D80  CFF6 FFE9          	movff	tblptrl,fsr0l
 26957  011D84  CFF7 FFEA          	movff	tblptrh,fsr0h
 26958  011D88  50EF               	movf	indf0,w,c
 26959  011D8A                     i2u1807_40:
 26960  011D8A  EC29  F0C5         	call	i2_isdigit
 26961  011D8E  B0D8               	btfsc	status,0,c
 26962  011D90  D7BA               	goto	i2l1410
 26963  011D92                     i2u1808_40:
 26964                           
 26965                           ;doprnt.c: 608: }
 26966                           ;doprnt.c: 611: if(*f == '.') {
 26967  011D92  C088  FFF6         	movff	i2printf@f,tblptrl
 26968  011D96  C089  FFF7         	movff	i2printf@f+1,tblptrh
 26969  011D9A  0E00               	movlw	low (__mediumconst shr (0+16))
 26970  011D9C  6EF8               	movwf	tblptru,c
 26971  011D9E  0E0D               	movlw	(high __ramtop+-1)
 26972  011DA0  64F7               	cpfsgt	tblptrh,c
 26973  011DA2  D003               	bra	i2u1809_47
 26974  011DA4  0008               	tblrd		*
 26975  011DA6  50F5               	movf	tablat,w,c
 26976  011DA8  D005               	bra	i2u1809_40
 26977  011DAA                     i2u1809_47:
 26978  011DAA  CFF6 FFE9          	movff	tblptrl,fsr0l
 26979  011DAE  CFF7 FFEA          	movff	tblptrh,fsr0h
 26980  011DB2  50EF               	movf	indf0,w,c
 26981  011DB4                     i2u1809_40:
 26982  011DB4  0A2E               	xorlw	46
 26983  011DB6  A4D8               	btfss	status,2,c
 26984  011DB8  D048               	goto	i2l1412
 26985                           
 26986                           ;doprnt.c: 612: flag |= 0x4000;
 26987  011DBA  0100               	movlb	0	; () banked
 26988  011DBC  8DAA               	bsf	(i2printf@flag+1)& (0+255),6,b
 26989                           
 26990                           ;doprnt.c: 613: f++;
 26991  011DBE  4B88               	infsnz	i2printf@f& (0+255),f,b
 26992  011DC0  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 26993                           
 26994                           ; BSR set to: 0
 26995                           ;doprnt.c: 620: {
 26996                           ;doprnt.c: 621: prec = 0;
 26997  011DC2  0E00               	movlw	0
 26998  011DC4  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 26999  011DC6  0E00               	movlw	0
 27000  011DC8  6FAD               	movwf	i2printf@prec& (0+255),b
 27001                           
 27002                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 27003  011DCA  D029               	goto	i2l1413
 27004  011DCC                     
 27005                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 27006                           
 27007                           ; BSR set to: 0
 27008  011DCC  C0AD  F001         	movff	i2printf@prec,i2___wmul@multiplier
 27009  011DD0  C0AE  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 27010  011DD4  0E00               	movlw	0
 27011  011DD6  6E04               	movwf	i2___wmul@multiplicand+1,c
 27012  011DD8  0E0A               	movlw	10
 27013  011DDA  6E03               	movwf	i2___wmul@multiplicand,c
 27014  011DDC  ECE3  F0C4         	call	i2___wmul	;wreg free
 27015  011DE0  C088  FFF6         	movff	i2printf@f,tblptrl
 27016  011DE4  C089  FFF7         	movff	i2printf@f+1,tblptrh
 27017  011DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 27018  011DEA  6EF8               	movwf	tblptru,c
 27019  011DEC  0E0D               	movlw	(high __ramtop+-1)
 27020  011DEE  64F7               	cpfsgt	tblptrh,c
 27021  011DF0  D003               	bra	i2u1811_47
 27022  011DF2  0008               	tblrd		*
 27023  011DF4  50F5               	movf	tablat,w,c
 27024  011DF6  D005               	bra	i2u1811_40
 27025  011DF8                     i2u1811_47:
 27026  011DF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 27027  011DFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 27028  011E00  50EF               	movf	indf0,w,c
 27029  011E02                     i2u1811_40:
 27030  011E02  0100               	movlb	0	; () banked
 27031  011E04  6F8A               	movwf	??i2_printf& (0+255),b
 27032  011E06  518A               	movf	??i2_printf& (0+255),w,b
 27033  011E08  2601               	addwf	?i2___wmul,f,c
 27034  011E0A  0E00               	movlw	0
 27035  011E0C  2202               	addwfc	?i2___wmul+1,f,c
 27036  011E0E  0ED0               	movlw	208
 27037  011E10  2401               	addwf	?i2___wmul,w,c
 27038  011E12  6FAD               	movwf	i2printf@prec& (0+255),b
 27039  011E14  0EFF               	movlw	255
 27040  011E16  2002               	addwfc	?i2___wmul+1,w,c
 27041  011E18  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 27042                           
 27043                           ; BSR set to: 0
 27044  011E1A  4B88               	infsnz	i2printf@f& (0+255),f,b
 27045  011E1C  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 27046  011E1E                     i2l1413:
 27047                           
 27048                           ; BSR set to: 0
 27049                           
 27050                           ; BSR set to: 0
 27051  011E1E  C088  FFF6         	movff	i2printf@f,tblptrl
 27052  011E22  C089  FFF7         	movff	i2printf@f+1,tblptrh
 27053  011E26  0E00               	movlw	low (__mediumconst shr (0+16))
 27054  011E28  6EF8               	movwf	tblptru,c
 27055  011E2A  0E0D               	movlw	(high __ramtop+-1)
 27056  011E2C  64F7               	cpfsgt	tblptrh,c
 27057  011E2E  D003               	bra	i2u1812_47
 27058  011E30  0008               	tblrd		*
 27059  011E32  50F5               	movf	tablat,w,c
 27060  011E34  D005               	bra	i2u1812_40
 27061  011E36                     i2u1812_47:
 27062  011E36  CFF6 FFE9          	movff	tblptrl,fsr0l
 27063  011E3A  CFF7 FFEA          	movff	tblptrh,fsr0h
 27064  011E3E  50EF               	movf	indf0,w,c
 27065  011E40                     i2u1812_40:
 27066  011E40  EC29  F0C5         	call	i2_isdigit
 27067  011E44  A0D8               	btfss	status,0,c
 27068  011E46  D0A4               	goto	i2l1417
 27069  011E48  D7C1               	goto	i2l1414
 27070  011E4A                     i2l1412:
 27071                           
 27072                           ;doprnt.c: 626: prec = 0;
 27073  011E4A  0E00               	movlw	0
 27074  011E4C  0100               	movlb	0	; () banked
 27075  011E4E  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 27076  011E50  0E00               	movlw	0
 27077  011E52  6FAD               	movwf	i2printf@prec& (0+255),b
 27078                           
 27079                           ; BSR set to: 0
 27080                           ;doprnt.c: 628: flag |= 0x1000;
 27081  011E54  89AA               	bsf	(i2printf@flag+1)& (0+255),4,b
 27082                           
 27083                           ; BSR set to: 0
 27084                           ;doprnt.c: 630: }
 27085                           ;doprnt.c: 635: switch(c = *f++) {
 27086  011E56  D09C               	goto	i2l1417
 27087  011E58                     
 27088                           ; BSR set to: 0
 27089                           ;doprnt.c: 663: flag |= 0x400;
 27090                           
 27091                           ; BSR set to: 0
 27092  011E58  85AA               	bsf	(i2printf@flag+1)& (0+255),2,b
 27093                           
 27094                           ; BSR set to: 0
 27095                           ;doprnt.c: 698: case 'i':
 27096                           ;doprnt.c: 699: break;
 27097                           
 27098                           ; BSR set to: 0
 27099                           
 27100                           ;doprnt.c: 697: case 'd':
 27101                           
 27102                           ;doprnt.c: 664: break;
 27103  011E5A  D0D1               	goto	i2l1421
 27104  011E5C                     
 27105                           ; BSR set to: 0
 27106                           ;doprnt.c: 718: case 'x':
 27107                           ;doprnt.c: 721: flag |= 0x80;
 27108                           
 27109                           ; BSR set to: 0
 27110                           
 27111                           ; BSR set to: 0
 27112  011E5C  8FA9               	bsf	i2printf@flag& (0+255),7,b
 27113                           
 27114                           ;doprnt.c: 723: break;
 27115  011E5E  D0CF               	goto	i2l1421
 27116  011E60                     
 27117                           ; BSR set to: 0
 27118                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 27119                           
 27120                           ; BSR set to: 0
 27121  011E60  C099  FFD9         	movff	i2printf@ap,fsr2l
 27122  011E64  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 27123  011E68  CFDE F095          	movff	postinc2,i2printf@cp
 27124  011E6C  CFDD F096          	movff	postdec2,i2printf@cp+1
 27125                           
 27126                           ; BSR set to: 0
 27127  011E70  0E02               	movlw	2
 27128  011E72  2799               	addwf	i2printf@ap& (0+255),f,b
 27129  011E74  0E00               	movlw	0
 27130  011E76  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 27131                           
 27132                           ; BSR set to: 0
 27133                           ;doprnt.c: 740: if(!cp)
 27134  011E78  5195               	movf	i2printf@cp& (0+255),w,b
 27135  011E7A  1196               	iorwf	(i2printf@cp+1)& (0+255),w,b
 27136  011E7C  A4D8               	btfss	status,2,c
 27137  011E7E  D004               	goto	i2l1427
 27138                           
 27139                           ; BSR set to: 0
 27140                           ;doprnt.c: 741: cp = "(null)";
 27141  011E80  0E85               	movlw	low STR_144
 27142  011E82  6F95               	movwf	i2printf@cp& (0+255),b
 27143  011E84  0EFF               	movlw	high STR_144
 27144  011E86  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 27145  011E88                     i2l1427:
 27146                           
 27147                           ; BSR set to: 0
 27148                           ;doprnt.c: 745: len = 0;
 27149                           
 27150                           ; BSR set to: 0
 27151  011E88  0E00               	movlw	0
 27152  011E8A  6F98               	movwf	(i2printf@len+1)& (0+255),b
 27153  011E8C  0E00               	movlw	0
 27154  011E8E  6F97               	movwf	i2printf@len& (0+255),b
 27155                           
 27156                           ;doprnt.c: 746: while(cp[len])
 27157  011E90  D003               	goto	i2l1428
 27158  011E92                     
 27159                           ;doprnt.c: 747: len++;
 27160                           
 27161                           ; BSR set to: 0
 27162  011E92  0100               	movlb	0	; () banked
 27163  011E94  4B97               	infsnz	i2printf@len& (0+255),f,b
 27164  011E96  2B98               	incf	(i2printf@len+1)& (0+255),f,b
 27165  011E98                     i2l1428:
 27166                           
 27167                           ; BSR set to: 0
 27168                           
 27169                           ; BSR set to: 0
 27170  011E98  5197               	movf	i2printf@len& (0+255),w,b
 27171  011E9A  2595               	addwf	i2printf@cp& (0+255),w,b
 27172  011E9C  6F8A               	movwf	??i2_printf& (0+255),b
 27173  011E9E  5198               	movf	(i2printf@len+1)& (0+255),w,b
 27174  011EA0  2196               	addwfc	(i2printf@cp+1)& (0+255),w,b
 27175  011EA2  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27176  011EA4  C08A  FFF6         	movff	??i2_printf,tblptrl
 27177  011EA8  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 27178  011EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 27179  011EAE  6EF8               	movwf	tblptru,c
 27180  011EB0  0E0D               	movlw	(high __ramtop+-1)
 27181  011EB2  64F7               	cpfsgt	tblptrh,c
 27182  011EB4  D003               	bra	i2u1815_47
 27183  011EB6  0008               	tblrd		*
 27184  011EB8  50F5               	movf	tablat,w,c
 27185  011EBA  D005               	bra	i2u1815_40
 27186  011EBC                     i2u1815_47:
 27187  011EBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 27188  011EC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 27189  011EC4  50EF               	movf	indf0,w,c
 27190  011EC6                     i2u1815_40:
 27191  011EC6  0900               	iorlw	0
 27192  011EC8  A4D8               	btfss	status,2,c
 27193  011ECA  D7E3               	goto	i2l1429
 27194  011ECC                     i2u1816_40:
 27195                           
 27196                           ;doprnt.c: 753: if(prec && prec < len)
 27197                           
 27198                           ;doprnt.c: 750: dostring:
 27199  011ECC  0100               	movlb	0	; () banked
 27200  011ECE  51AD               	movf	i2printf@prec& (0+255),w,b
 27201  011ED0  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 27202  011ED2  B4D8               	btfsc	status,2,c
 27203  011ED4  D00A               	goto	i2l1432
 27204                           
 27205                           ; BSR set to: 0
 27206  011ED6  5197               	movf	i2printf@len& (0+255),w,b
 27207  011ED8  5DAD               	subwf	i2printf@prec& (0+255),w,b
 27208  011EDA  5198               	movf	(i2printf@len+1)& (0+255),w,b
 27209  011EDC  59AE               	subwfb	(i2printf@prec+1)& (0+255),w,b
 27210  011EDE  B0D8               	btfsc	status,0,c
 27211  011EE0  D004               	goto	i2l1432
 27212                           
 27213                           ; BSR set to: 0
 27214                           ;doprnt.c: 754: len = prec;
 27215  011EE2  C0AD  F097         	movff	i2printf@prec,i2printf@len
 27216  011EE6  C0AE  F098         	movff	i2printf@prec+1,i2printf@len+1
 27217  011EEA                     i2l1432:
 27218                           
 27219                           ; BSR set to: 0
 27220                           ;doprnt.c: 757: if(width > len)
 27221                           
 27222                           ; BSR set to: 0
 27223  011EEA  51AB               	movf	i2printf@width& (0+255),w,b
 27224  011EEC  5D97               	subwf	i2printf@len& (0+255),w,b
 27225  011EEE  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 27226  011EF0  5998               	subwfb	(i2printf@len+1)& (0+255),w,b
 27227  011EF2  B0D8               	btfsc	status,0,c
 27228  011EF4  D005               	goto	i2l1433
 27229                           
 27230                           ; BSR set to: 0
 27231                           ;doprnt.c: 758: width -= len;
 27232  011EF6  5197               	movf	i2printf@len& (0+255),w,b
 27233  011EF8  5FAB               	subwf	i2printf@width& (0+255),f,b
 27234  011EFA  5198               	movf	(i2printf@len+1)& (0+255),w,b
 27235  011EFC  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 27236  011EFE  D008               	goto	i2l1435
 27237  011F00                     i2l1433:
 27238                           
 27239                           ; BSR set to: 0
 27240                           ;doprnt.c: 759: else
 27241                           ;doprnt.c: 760: width = 0;
 27242                           
 27243                           ; BSR set to: 0
 27244  011F00  0E00               	movlw	0
 27245  011F02  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 27246  011F04  0E00               	movlw	0
 27247  011F06  6FAB               	movwf	i2printf@width& (0+255),b
 27248                           
 27249                           ; BSR set to: 0
 27250                           ;doprnt.c: 764: while(width--)
 27251  011F08  D003               	goto	i2l1435
 27252  011F0A                     i2l14544:
 27253                           
 27254                           ; BSR set to: 0
 27255                           ;doprnt.c: 765: (putch(' ') );
 27256  011F0A  0E20               	movlw	32
 27257  011F0C  EC0A  F0C6         	call	i2_putch
 27258  011F10                     i2l1435:
 27259  011F10  0100               	movlb	0	; () banked
 27260  011F12  07AB               	decf	i2printf@width& (0+255),f,b
 27261  011F14  A0D8               	btfss	status,0,c
 27262  011F16  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 27263  011F18  29AB               	incf	i2printf@width& (0+255),w,b
 27264  011F1A  E1F7               	bnz	i2l14544
 27265  011F1C  29AC               	incf	(i2printf@width+1)& (0+255),w,b
 27266  011F1E  B4D8               	btfsc	status,2,c
 27267  011F20  D017               	goto	i2l1438
 27268  011F22  D7F3               	goto	i2l1436
 27269  011F24                     i2l14548:
 27270                           
 27271                           ; BSR set to: 0
 27272                           ;doprnt.c: 768: (putch(*cp++) );
 27273  011F24  C095  FFF6         	movff	i2printf@cp,tblptrl
 27274  011F28  C096  FFF7         	movff	i2printf@cp+1,tblptrh
 27275  011F2C  0E00               	movlw	low (__mediumconst shr (0+16))
 27276  011F2E  6EF8               	movwf	tblptru,c
 27277  011F30  0E0D               	movlw	(high __ramtop+-1)
 27278  011F32  64F7               	cpfsgt	tblptrh,c
 27279  011F34  D003               	bra	i2u1821_47
 27280  011F36  0008               	tblrd		*
 27281  011F38  50F5               	movf	tablat,w,c
 27282  011F3A  D005               	bra	i2u1821_40
 27283  011F3C                     i2u1821_47:
 27284  011F3C  CFF6 FFE9          	movff	tblptrl,fsr0l
 27285  011F40  CFF7 FFEA          	movff	tblptrh,fsr0h
 27286  011F44  50EF               	movf	indf0,w,c
 27287  011F46                     i2u1821_40:
 27288  011F46  EC0A  F0C6         	call	i2_putch
 27289  011F4A  0100               	movlb	0	; () banked
 27290  011F4C  4B95               	infsnz	i2printf@cp& (0+255),f,b
 27291  011F4E  2B96               	incf	(i2printf@cp+1)& (0+255),f,b
 27292  011F50                     i2l1438:
 27293                           
 27294                           ; BSR set to: 0
 27295                           
 27296                           ; BSR set to: 0
 27297  011F50  0797               	decf	i2printf@len& (0+255),f,b
 27298  011F52  A0D8               	btfss	status,0,c
 27299  011F54  0798               	decf	(i2printf@len+1)& (0+255),f,b
 27300  011F56  2997               	incf	i2printf@len& (0+255),w,b
 27301  011F58  E1E5               	bnz	i2l14548
 27302  011F5A  2998               	incf	(i2printf@len+1)& (0+255),w,b
 27303  011F5C  B4D8               	btfsc	status,2,c
 27304  011F5E  EFFA  F094         	goto	i2u1877_40
 27305  011F62  D7E0               	goto	i2l1439
 27306  011F64                     
 27307                           ; BSR set to: 0
 27308                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 27309                           
 27310                           ; BSR set to: 0
 27311  011F64  C099  FFD9         	movff	i2printf@ap,fsr2l
 27312  011F68  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 27313  011F6C  50DF               	movf	indf2,w,c
 27314  011F6E  6FAF               	movwf	i2printf@c& (0+255),b
 27315                           
 27316                           ; BSR set to: 0
 27317  011F70  0E02               	movlw	2
 27318  011F72  2799               	addwf	i2printf@ap& (0+255),f,b
 27319  011F74  0E00               	movlw	0
 27320  011F76  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 27321  011F78                     
 27322                           ; BSR set to: 0
 27323                           ;doprnt.c: 805: cp = (char *)&c;
 27324                           
 27325                           ; BSR set to: 0
 27326  011F78  0EAF               	movlw	low i2printf@c
 27327  011F7A  6F95               	movwf	i2printf@cp& (0+255),b
 27328  011F7C  0E00               	movlw	high i2printf@c
 27329  011F7E  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 27330                           
 27331                           ; BSR set to: 0
 27332                           ;doprnt.c: 806: len = 1;
 27333  011F80  0E00               	movlw	0
 27334  011F82  6F98               	movwf	(i2printf@len+1)& (0+255),b
 27335  011F84  0E01               	movlw	1
 27336  011F86  6F97               	movwf	i2printf@len& (0+255),b
 27337                           
 27338                           ;doprnt.c: 807: goto dostring;
 27339  011F88  D7A1               	goto	i2u1816_40
 27340  011F8A                     
 27341                           ; BSR set to: 0
 27342                           ;doprnt.c: 818: flag |= 0xC0;
 27343                           
 27344                           ; BSR set to: 0
 27345  011F8A  0EC0               	movlw	192
 27346  011F8C  13A9               	iorwf	i2printf@flag& (0+255),f,b
 27347                           
 27348                           ; BSR set to: 0
 27349                           ;doprnt.c: 822: }
 27350                           
 27351                           ;doprnt.c: 819: break;
 27352  011F8E  D037               	goto	i2l1421
 27353  011F90                     i2l1417:
 27354                           
 27355                           ; BSR set to: 0
 27356  011F90  0100               	movlb	0	; () banked
 27357  011F92  5188               	movf	i2printf@f& (0+255),w,b
 27358  011F94  6F8A               	movwf	??i2_printf& (0+255),b
 27359  011F96  5189               	movf	(i2printf@f+1)& (0+255),w,b
 27360  011F98  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27361  011F9A  4B88               	infsnz	i2printf@f& (0+255),f,b
 27362  011F9C  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 27363  011F9E  C08A  FFF6         	movff	??i2_printf,tblptrl
 27364  011FA2  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 27365  011FA6  0E00               	movlw	low (__mediumconst shr (0+16))
 27366  011FA8  6EF8               	movwf	tblptru,c
 27367  011FAA  0E0D               	movlw	(high __ramtop+-1)
 27368  011FAC  64F7               	cpfsgt	tblptrh,c
 27369  011FAE  D003               	bra	i2u1823_47
 27370  011FB0  0008               	tblrd		*
 27371  011FB2  50F5               	movf	tablat,w,c
 27372  011FB4  D005               	bra	i2u1823_40
 27373  011FB6                     i2u1823_47:
 27374  011FB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 27375  011FBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 27376  011FBE  50EF               	movf	indf0,w,c
 27377  011FC0                     i2u1823_40:
 27378  011FC0  0100               	movlb	0	; () banked
 27379  011FC2  6FAF               	movwf	i2printf@c& (0+255),b
 27380  011FC4  51AF               	movf	i2printf@c& (0+255),w,b
 27381                           
 27382                           ; Switch size 1, requested type "space"
 27383                           ; Number of cases is 9, Range of values is 0 to 120
 27384                           ; switch strategies available:
 27385                           ; Name         Instructions Cycles
 27386                           ; simple_byte           28    15 (average)
 27387                           ;	Chosen strategy is simple_byte
 27388  011FC6  0A00               	xorlw	0	; case 0
 27389  011FC8  B4D8               	btfsc	status,2,c
 27390  011FCA  0012               	return	
 27391  011FCC  0A58               	xorlw	88	; case 88
 27392  011FCE  B4D8               	btfsc	status,2,c
 27393  011FD0  D745               	goto	i2l1424
 27394  011FD2  0A3B               	xorlw	59	; case 99
 27395  011FD4  B4D8               	btfsc	status,2,c
 27396  011FD6  D7C6               	goto	i2l1441
 27397  011FD8  0A07               	xorlw	7	; case 100
 27398  011FDA  B4D8               	btfsc	status,2,c
 27399  011FDC  D010               	goto	i2l1421
 27400  011FDE  0A02               	xorlw	2	; case 102
 27401  011FE0  B4D8               	btfsc	status,2,c
 27402  011FE2  D73A               	goto	i2l1420
 27403  011FE4  0A0F               	xorlw	15	; case 105
 27404  011FE6  B4D8               	btfsc	status,2,c
 27405  011FE8  D00A               	goto	i2l1421
 27406  011FEA  0A1A               	xorlw	26	; case 115
 27407  011FEC  B4D8               	btfsc	status,2,c
 27408  011FEE  D738               	goto	i2l1426
 27409  011FF0  0A06               	xorlw	6	; case 117
 27410  011FF2  B4D8               	btfsc	status,2,c
 27411  011FF4  D7CA               	goto	i2l1443
 27412  011FF6  0A0D               	xorlw	13	; case 120
 27413  011FF8  B4D8               	btfsc	status,2,c
 27414  011FFA  D730               	goto	i2l1424
 27415  011FFC  D7BD               	goto	i2l1442
 27416  011FFE                     i2l1421:
 27417                           
 27418                           ; BSR set to: 0
 27419                           ;doprnt.c: 825: if(flag & (0x700)) {
 27420                           
 27421                           ; BSR set to: 0
 27422  011FFE  0E07               	movlw	7
 27423  012000  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 27424  012002  B4D8               	btfsc	status,2,c
 27425  012004  D33B               	goto	i2l1444
 27426                           
 27427                           ; BSR set to: 0
 27428                           ;doprnt.c: 827: if(flag & 0x1000)
 27429  012006  A9AA               	btfss	(i2printf@flag+1)& (0+255),4,b
 27430  012008  D004               	goto	i2l1445
 27431                           
 27432                           ; BSR set to: 0
 27433                           ;doprnt.c: 829: prec = 6;
 27434  01200A  0E00               	movlw	0
 27435  01200C  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 27436  01200E  0E06               	movlw	6
 27437  012010  6FAD               	movwf	i2printf@prec& (0+255),b
 27438  012012                     i2l1445:
 27439                           
 27440                           ; BSR set to: 0
 27441                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 27442                           
 27443                           ; BSR set to: 0
 27444  012012  C099  FFD9         	movff	i2printf@ap,fsr2l
 27445  012016  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 27446  01201A  CFDE F0A5          	movff	postinc2,i2printf@fval
 27447  01201E  CFDE F0A6          	movff	postinc2,i2printf@fval+1
 27448  012022  CFDE F0A7          	movff	postinc2,i2printf@fval+2
 27449  012026  CFDE F0A8          	movff	postinc2,i2printf@fval+3
 27450                           
 27451                           ; BSR set to: 0
 27452  01202A  0E04               	movlw	4
 27453  01202C  2799               	addwf	i2printf@ap& (0+255),f,b
 27454  01202E  0E00               	movlw	0
 27455  012030  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 27456                           
 27457                           ; BSR set to: 0
 27458                           ;doprnt.c: 831: if(fval < 0.0) {
 27459  012032  AFA8               	btfss	(i2printf@fval+3)& (0+255),7,b
 27460  012034  D015               	goto	i2l1446
 27461                           
 27462                           ; BSR set to: 0
 27463                           ;doprnt.c: 832: fval = -fval;
 27464  012036  C0A5  F02C         	movff	i2printf@fval,i2___flneg@f1
 27465  01203A  C0A6  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 27466  01203E  C0A7  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 27467  012042  C0A8  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 27468  012046  EC55  F0C4         	call	i2___flneg	;wreg free
 27469  01204A  C02C  F0A5         	movff	?i2___flneg,i2printf@fval
 27470  01204E  C02D  F0A6         	movff	?i2___flneg+1,i2printf@fval+1
 27471  012052  C02E  F0A7         	movff	?i2___flneg+2,i2printf@fval+2
 27472  012056  C02F  F0A8         	movff	?i2___flneg+3,i2printf@fval+3
 27473                           
 27474                           ;doprnt.c: 833: flag |= 0x03;
 27475  01205A  0E03               	movlw	3
 27476  01205C  0100               	movlb	0	; () banked
 27477  01205E  13A9               	iorwf	i2printf@flag& (0+255),f,b
 27478  012060                     i2l1446:
 27479                           
 27480                           ; BSR set to: 0
 27481                           ;doprnt.c: 834: }
 27482                           ;doprnt.c: 835: exp = 0;
 27483                           
 27484                           ; BSR set to: 0
 27485  012060  0E00               	movlw	0
 27486  012062  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 27487  012064  0E00               	movlw	0
 27488  012066  6F9F               	movwf	i2printf@exp& (0+255),b
 27489                           
 27490                           ; BSR set to: 0
 27491                           ;doprnt.c: 836: if( fval!=0) {
 27492  012068  51A5               	movf	i2printf@fval& (0+255),w,b
 27493  01206A  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 27494  01206C  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 27495  01206E  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 27496  012070  B4D8               	btfsc	status,2,c
 27497  012072  D082               	goto	i2l1451
 27498                           
 27499                           ; BSR set to: 0
 27500                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 27501  012074  35A7               	rlcf	(i2printf@fval+2)& (0+255),w,b
 27502  012076  35A8               	rlcf	(i2printf@fval+3)& (0+255),w,b
 27503  012078  0F82               	addlw	130
 27504  01207A  6F9F               	movwf	i2printf@exp& (0+255),b
 27505  01207C  6BA0               	clrf	(i2printf@exp+1)& (0+255),b
 27506  01207E  0EFF               	movlw	255
 27507  012080  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 27508                           
 27509                           ; BSR set to: 0
 27510                           ;doprnt.c: 838: exp--;
 27511  012082  079F               	decf	i2printf@exp& (0+255),f,b
 27512  012084  A0D8               	btfss	status,0,c
 27513  012086  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 27514                           
 27515                           ; BSR set to: 0
 27516                           ;doprnt.c: 839: exp *= 3;
 27517  012088  C09F  F001         	movff	i2printf@exp,i2___wmul@multiplier
 27518  01208C  C0A0  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 27519  012090  0E00               	movlw	0
 27520  012092  6E04               	movwf	i2___wmul@multiplicand+1,c
 27521  012094  0E03               	movlw	3
 27522  012096  6E03               	movwf	i2___wmul@multiplicand,c
 27523  012098  ECE3  F0C4         	call	i2___wmul	;wreg free
 27524  01209C  C001  F09F         	movff	?i2___wmul,i2printf@exp
 27525  0120A0  C002  F0A0         	movff	?i2___wmul+1,i2printf@exp+1
 27526                           
 27527                           ;doprnt.c: 840: exp /= 10;
 27528  0120A4  C09F  F007         	movff	i2printf@exp,i2___awdiv@dividend
 27529  0120A8  C0A0  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 27530  0120AC  0E00               	movlw	0
 27531  0120AE  6E0A               	movwf	i2___awdiv@divisor+1,c
 27532  0120B0  0E0A               	movlw	10
 27533  0120B2  6E09               	movwf	i2___awdiv@divisor,c
 27534  0120B4  ECE4  F0BD         	call	i2___awdiv	;wreg free
 27535  0120B8  C007  F09F         	movff	?i2___awdiv,i2printf@exp
 27536  0120BC  C008  F0A0         	movff	?i2___awdiv+1,i2printf@exp+1
 27537                           
 27538                           ;doprnt.c: 841: if(exp < 0)
 27539  0120C0  0100               	movlb	0	; () banked
 27540  0120C2  AFA0               	btfss	(i2printf@exp+1)& (0+255),7,b
 27541  0120C4  D003               	goto	i2l1448
 27542                           
 27543                           ; BSR set to: 0
 27544                           ;doprnt.c: 842: exp--;
 27545  0120C6  079F               	decf	i2printf@exp& (0+255),f,b
 27546  0120C8  A0D8               	btfss	status,0,c
 27547  0120CA  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 27548  0120CC                     i2l1448:
 27549                           
 27550                           ; BSR set to: 0
 27551                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 27552                           
 27553                           ; BSR set to: 0
 27554  0120CC  519F               	movf	i2printf@exp& (0+255),w,b
 27555  0120CE  0800               	sublw	0
 27556  0120D0  EC5B  F09C         	call	i2_scale
 27557  0120D4  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 27558  0120D8  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 27559  0120DC  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 27560  0120E0  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 27561                           
 27562                           ;doprnt.c: 847: tmpval.integ *= fval;
 27563  0120E4  C09B  F030         	movff	i2printf@tmpval,i2___flmul@b
 27564  0120E8  C09C  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 27565  0120EC  C09D  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 27566  0120F0  C09E  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 27567  0120F4  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 27568  0120F8  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 27569  0120FC  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 27570  012100  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 27571  012104  ECF8  F0A1         	call	i2___flmul	;wreg free
 27572  012108  C030  F09B         	movff	?i2___flmul,i2printf@tmpval
 27573  01210C  C031  F09C         	movff	?i2___flmul+1,i2printf@tmpval+1
 27574  012110  C032  F09D         	movff	?i2___flmul+2,i2printf@tmpval+2
 27575  012114  C033  F09E         	movff	?i2___flmul+3,i2printf@tmpval+3
 27576                           
 27577                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 27578  012118  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 27579  01211C  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 27580  012120  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 27581  012124  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 27582  012128  0E00               	movlw	0
 27583  01212A  6E38               	movwf	i2___flge@ff2,c
 27584  01212C  0E00               	movlw	0
 27585  01212E  6E39               	movwf	i2___flge@ff2+1,c
 27586  012130  0E80               	movlw	128
 27587  012132  6E3A               	movwf	i2___flge@ff2+2,c
 27588  012134  0E3F               	movlw	63
 27589  012136  6E3B               	movwf	i2___flge@ff2+3,c
 27590  012138  EC97  F0B8         	call	i2___flge	;wreg free
 27591  01213C  B0D8               	btfsc	status,0,c
 27592  01213E  D005               	goto	i2l1449
 27593                           
 27594                           ;doprnt.c: 849: exp--;
 27595  012140  0100               	movlb	0	; () banked
 27596  012142  079F               	decf	i2printf@exp& (0+255),f,b
 27597  012144  A0D8               	btfss	status,0,c
 27598  012146  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 27599  012148  D017               	goto	i2l1451
 27600  01214A                     i2l1449:
 27601                           
 27602                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 27603                           
 27604                           ; BSR set to: 0
 27605  01214A  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 27606  01214E  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 27607  012152  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 27608  012156  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 27609  01215A  0E00               	movlw	0
 27610  01215C  6E38               	movwf	i2___flge@ff2,c
 27611  01215E  0E00               	movlw	0
 27612  012160  6E39               	movwf	i2___flge@ff2+1,c
 27613  012162  0E20               	movlw	32
 27614  012164  6E3A               	movwf	i2___flge@ff2+2,c
 27615  012166  0E41               	movlw	65
 27616  012168  6E3B               	movwf	i2___flge@ff2+3,c
 27617  01216A  EC97  F0B8         	call	i2___flge	;wreg free
 27618  01216E  A0D8               	btfss	status,0,c
 27619  012170  D003               	goto	i2l1451
 27620                           
 27621                           ;doprnt.c: 851: exp++;
 27622  012172  0100               	movlb	0	; () banked
 27623  012174  4B9F               	infsnz	i2printf@exp& (0+255),f,b
 27624  012176  2BA0               	incf	(i2printf@exp+1)& (0+255),f,b
 27625  012178                     i2l1451:
 27626                           
 27627                           ;doprnt.c: 852: }
 27628                           ;doprnt.c: 1112: if(prec <= 12)
 27629                           
 27630                           ; BSR set to: 0
 27631                           
 27632                           ; BSR set to: 0
 27633                           
 27634                           ; BSR set to: 0
 27635  012178  0100               	movlb	0	; () banked
 27636  01217A  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 27637  01217C  D006               	goto	i2u1831_40
 27638  01217E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 27639  012180  E121               	bnz	i2l14616
 27640  012182  0E0D               	movlw	13
 27641  012184  5DAD               	subwf	i2printf@prec& (0+255),w,b
 27642  012186  B0D8               	btfsc	status,0,c
 27643  012188  D01D               	goto	i2l1452
 27644  01218A                     i2u1831_40:
 27645                           
 27646                           ; BSR set to: 0
 27647                           ;doprnt.c: 1113: fval += fround(prec);
 27648  01218A  C0A5  F056         	movff	i2printf@fval,i2___fladd@b
 27649  01218E  C0A6  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 27650  012192  C0A7  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 27651  012196  C0A8  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 27652  01219A  51AD               	movf	i2printf@prec& (0+255),w,b
 27653  01219C  EC59  F0AF         	call	i2_fround
 27654  0121A0  C049  F05A         	movff	?i2_fround,i2___fladd@a
 27655  0121A4  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 27656  0121A8  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 27657  0121AC  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 27658  0121B0  EC3F  F0A5         	call	i2___fladd	;wreg free
 27659  0121B4  C056  F0A5         	movff	?i2___fladd,i2printf@fval
 27660  0121B8  C057  F0A6         	movff	?i2___fladd+1,i2printf@fval+1
 27661  0121BC  C058  F0A7         	movff	?i2___fladd+2,i2printf@fval+2
 27662  0121C0  C059  F0A8         	movff	?i2___fladd+3,i2printf@fval+3
 27663  0121C4                     i2l1452:
 27664  0121C4                     i2l14616:
 27665                           
 27666                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 27667  0121C4  0100               	movlb	0	; () banked
 27668  0121C6  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 27669  0121C8  D006               	goto	i2u1832_40
 27670  0121CA  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 27671  0121CC  E122               	bnz	i2l14624
 27672  0121CE  0E0A               	movlw	10
 27673  0121D0  5D9F               	subwf	i2printf@exp& (0+255),w,b
 27674  0121D2  B0D8               	btfsc	status,0,c
 27675  0121D4  D01E               	goto	i2u1835_40
 27676  0121D6                     i2u1832_40:
 27677                           
 27678                           ; BSR set to: 0
 27679  0121D6  51A5               	movf	i2printf@fval& (0+255),w,b
 27680  0121D8  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 27681  0121DA  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 27682  0121DC  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 27683  0121DE  B4D8               	btfsc	status,2,c
 27684  0121E0  D063               	goto	i2l1453
 27685                           
 27686                           ; BSR set to: 0
 27687  0121E2  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 27688  0121E6  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 27689  0121EA  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 27690  0121EE  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 27691  0121F2  EC9F  F0BA         	call	i2___fltol	;wreg free
 27692  0121F6  0100               	movlb	0	; () banked
 27693  0121F8  516C               	movf	?i2___fltol& (0+255),w,b
 27694  0121FA  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 27695  0121FC  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 27696  0121FE  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 27697  012200  B4D8               	btfsc	status,2,c
 27698                           
 27699                           ; BSR set to: 0
 27700  012202  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 27701  012204  D051               	goto	i2l1453
 27702  012206  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 27703  012208  E104               	bnz	i2l14624
 27704  01220A  0E02               	movlw	2
 27705  01220C  5D9F               	subwf	i2printf@exp& (0+255),w,b
 27706  01220E  A0D8               	btfss	status,0,c
 27707  012210  D04B               	goto	i2l1453
 27708  012212                     i2u1835_40:
 27709  012212                     i2l14624:
 27710                           
 27711                           ; BSR set to: 0
 27712                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 27713  012212  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 27714  012216  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 27715  01221A  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 27716  01221E  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 27717  012222  0E5F               	movlw	95
 27718  012224  6E38               	movwf	i2___flge@ff2,c
 27719  012226  0E70               	movlw	112
 27720  012228  6E39               	movwf	i2___flge@ff2+1,c
 27721  01222A  0E89               	movlw	137
 27722  01222C  6E3A               	movwf	i2___flge@ff2+2,c
 27723  01222E  0E40               	movlw	64
 27724  012230  6E3B               	movwf	i2___flge@ff2+3,c
 27725  012232  EC97  F0B8         	call	i2___flge	;wreg free
 27726  012236  B0D8               	btfsc	status,0,c
 27727  012238  D003               	goto	i2l1456
 27728                           
 27729                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 27730  01223A  0100               	movlb	0	; () banked
 27731  01223C  0EF7               	movlw	247
 27732  01223E  D002               	goto	L16
 27733  012240                     i2l1456:
 27734                           
 27735                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 27736                           
 27737                           ; BSR set to: 0
 27738  012240  0100               	movlb	0	; () banked
 27739  012242  0EF8               	movlw	248
 27740  012244                     L16:
 27741  012244  279F               	addwf	i2printf@exp& (0+255),f,b
 27742  012246  0EFF               	movlw	255
 27743  012248  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 27744                           
 27745                           ; BSR set to: 0
 27746                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 27747                           
 27748                           ; BSR set to: 0
 27749  01224A  519F               	movf	i2printf@exp& (0+255),w,b
 27750  01224C  EC5B  F09C         	call	i2_scale
 27751  012250  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 27752  012254  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 27753  012258  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 27754  01225C  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 27755  012260  C0A5  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 27756  012264  C0A6  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 27757  012268  C0A7  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 27758  01226C  C0A8  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 27759  012270  C09B  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 27760  012274  C09C  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 27761  012278  C09D  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 27762  01227C  C09E  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 27763  012280  ECE0  F0B6         	call	i2__div_to_l_	;wreg free
 27764  012284  C001  F0A1         	movff	?i2__div_to_l_,i2printf@val
 27765  012288  C002  F0A2         	movff	?i2__div_to_l_+1,i2printf@val+1
 27766  01228C  C003  F0A3         	movff	?i2__div_to_l_+2,i2printf@val+2
 27767  012290  C004  F0A4         	movff	?i2__div_to_l_+3,i2printf@val+3
 27768                           
 27769                           ;doprnt.c: 1129: fval = 0.0;
 27770  012294  0E00               	movlw	0
 27771  012296  0100               	movlb	0	; () banked
 27772  012298  6FA5               	movwf	i2printf@fval& (0+255),b
 27773  01229A  0E00               	movlw	0
 27774  01229C  6FA6               	movwf	(i2printf@fval+1)& (0+255),b
 27775  01229E  0E00               	movlw	0
 27776  0122A0  6FA7               	movwf	(i2printf@fval+2)& (0+255),b
 27777  0122A2  0E00               	movlw	0
 27778  0122A4  6FA8               	movwf	(i2printf@fval+3)& (0+255),b
 27779                           
 27780                           ;doprnt.c: 1130: } else {
 27781  0122A6  D03C               	goto	i2l1462
 27782  0122A8                     i2l1453:
 27783                           
 27784                           ; BSR set to: 0
 27785                           ;doprnt.c: 1131: val = (unsigned long)fval;
 27786                           
 27787                           ; BSR set to: 0
 27788  0122A8  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 27789  0122AC  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 27790  0122B0  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 27791  0122B4  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 27792  0122B8  EC9F  F0BA         	call	i2___fltol	;wreg free
 27793  0122BC  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 27794  0122C0  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 27795  0122C4  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 27796  0122C8  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 27797                           
 27798                           ;doprnt.c: 1132: fval -= (double)val;
 27799  0122CC  C0A5  F080         	movff	i2printf@fval,i2___flsub@b
 27800  0122D0  C0A6  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 27801  0122D4  C0A7  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 27802  0122D8  C0A8  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 27803  0122DC  C0A1  F005         	movff	i2printf@val,i2___xxtofl@val
 27804  0122E0  C0A2  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 27805  0122E4  C0A3  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 27806  0122E8  C0A4  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 27807  0122EC  0E00               	movlw	0
 27808  0122EE  EC70  F0B4         	call	i2___xxtofl
 27809  0122F2  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 27810  0122F6  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 27811  0122FA  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 27812  0122FE  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 27813  012302  EC8D  F0C2         	call	i2___flsub	;wreg free
 27814  012306  C080  F0A5         	movff	?i2___flsub,i2printf@fval
 27815  01230A  C081  F0A6         	movff	?i2___flsub+1,i2printf@fval+1
 27816  01230E  C082  F0A7         	movff	?i2___flsub+2,i2printf@fval+2
 27817  012312  C083  F0A8         	movff	?i2___flsub+3,i2printf@fval+3
 27818                           
 27819                           ;doprnt.c: 1133: exp = 0;
 27820  012316  0E00               	movlw	0
 27821  012318  0100               	movlb	0	; () banked
 27822  01231A  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 27823  01231C  0E00               	movlw	0
 27824  01231E  6F9F               	movwf	i2printf@exp& (0+255),b
 27825  012320                     i2l1462:
 27826                           
 27827                           ; BSR set to: 0
 27828                           ;doprnt.c: 1134: }
 27829                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 27830                           
 27831                           ; BSR set to: 0
 27832  012320  0E01               	movlw	1
 27833  012322  6FAF               	movwf	i2printf@c& (0+255),b
 27834  012324                     i2l14644:
 27835                           
 27836                           ; BSR set to: 0
 27837  012324  0E0A               	movlw	10
 27838  012326  19AF               	xorwf	i2printf@c& (0+255),w,b
 27839  012328  B4D8               	btfsc	status,2,c
 27840  01232A  D01B               	goto	i2u1839_40
 27841                           
 27842                           ; BSR set to: 0
 27843                           ;doprnt.c: 1137: if(val < dpowers[c])
 27844                           
 27845                           ; BSR set to: 0
 27846                           
 27847                           ; BSR set to: 0
 27848  01232C  51AF               	movf	i2printf@c& (0+255),w,b
 27849  01232E  0D04               	mullw	4
 27850  012330  0E2B               	movlw	low _dpowers
 27851  012332  24F3               	addwf	prodl,w,c
 27852  012334  6EF6               	movwf	tblptrl,c
 27853  012336  0EE9               	movlw	high _dpowers
 27854  012338  20F4               	addwfc	prodh,w,c
 27855  01233A  6EF7               	movwf	tblptrh,c
 27856  01233C                     	if	1	;There are 3 active tblptr bytes
 27857  01233C  6AF8               	clrf	tblptru,c
 27858  01233E  0E00               	movlw	low (__mediumconst shr (0+16))
 27859  012340  22F8               	addwfc	tblptru,f,c
 27860  012342                     	endif
 27861  012342  0009               	tblrd		*+
 27862  012344  50F5               	movf	tablat,w,c
 27863  012346  5DA1               	subwf	i2printf@val& (0+255),w,b
 27864  012348  0009               	tblrd		*+
 27865  01234A  50F5               	movf	tablat,w,c
 27866  01234C  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 27867  01234E  0009               	tblrd		*+
 27868  012350  50F5               	movf	tablat,w,c
 27869  012352  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 27870  012354  0009               	tblrd		*+
 27871  012356  50F5               	movf	tablat,w,c
 27872  012358  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 27873  01235A  A0D8               	btfss	status,0,c
 27874  01235C  D002               	goto	i2u1839_40
 27875                           
 27876                           ; BSR set to: 0
 27877                           
 27878                           ; BSR set to: 0
 27879                           
 27880                           ; BSR set to: 0
 27881                           ;doprnt.c: 1138: break;
 27882  01235E  2BAF               	incf	i2printf@c& (0+255),f,b
 27883  012360  D7E1               	goto	i2l14644
 27884  012362                     i2u1839_40:
 27885                           
 27886                           ; BSR set to: 0
 27887                           ;doprnt.c: 1142: width -= prec + c + exp;
 27888                           
 27889                           ; BSR set to: 0
 27890  012362  C0AF  F08A         	movff	i2printf@c,??i2_printf
 27891  012366  6B8B               	clrf	(??i2_printf+1)& (0+255),b
 27892  012368  BF8A               	btfsc	??i2_printf& (0+255),7,b
 27893  01236A  078B               	decf	(??i2_printf+1)& (0+255),f,b
 27894  01236C  51AD               	movf	i2printf@prec& (0+255),w,b
 27895  01236E  278A               	addwf	??i2_printf& (0+255),f,b
 27896  012370  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 27897  012372  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 27898  012374  519F               	movf	i2printf@exp& (0+255),w,b
 27899  012376  278A               	addwf	??i2_printf& (0+255),f,b
 27900  012378  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 27901  01237A  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 27902  01237C  518A               	movf	??i2_printf& (0+255),w,b
 27903  01237E  5FAB               	subwf	i2printf@width& (0+255),f,b
 27904  012380  518B               	movf	(??i2_printf+1)& (0+255),w,b
 27905  012382  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 27906                           
 27907                           ;doprnt.c: 1143: if(
 27908                           ;doprnt.c: 1147: prec)
 27909  012384  51AD               	movf	i2printf@prec& (0+255),w,b
 27910  012386  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 27911  012388  B4D8               	btfsc	status,2,c
 27912  01238A  D003               	goto	i2l1466
 27913                           
 27914                           ; BSR set to: 0
 27915                           ;doprnt.c: 1148: width--;
 27916  01238C  07AB               	decf	i2printf@width& (0+255),f,b
 27917  01238E  A0D8               	btfss	status,0,c
 27918  012390  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 27919  012392                     i2l1466:
 27920                           
 27921                           ; BSR set to: 0
 27922                           ;doprnt.c: 1149: if(flag & 0x03)
 27923                           
 27924                           ; BSR set to: 0
 27925  012392  0E03               	movlw	3
 27926  012394  15A9               	andwf	i2printf@flag& (0+255),w,b
 27927  012396  6F8A               	movwf	??i2_printf& (0+255),b
 27928  012398  0E00               	movlw	0
 27929  01239A  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 27930  01239C  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27931  01239E  518A               	movf	??i2_printf& (0+255),w,b
 27932  0123A0  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 27933  0123A2  B4D8               	btfsc	status,2,c
 27934  0123A4  D003               	goto	i2l1467
 27935                           
 27936                           ; BSR set to: 0
 27937                           ;doprnt.c: 1150: width--;
 27938  0123A6  07AB               	decf	i2printf@width& (0+255),f,b
 27939  0123A8  A0D8               	btfss	status,0,c
 27940  0123AA  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 27941  0123AC                     i2l1467:
 27942                           
 27943                           ; BSR set to: 0
 27944                           ;doprnt.c: 1153: if(flag & 0x04) {
 27945                           
 27946                           ; BSR set to: 0
 27947  0123AC  A5A9               	btfss	i2printf@flag& (0+255),2,b
 27948  0123AE  D025               	goto	i2l1474
 27949                           
 27950                           ; BSR set to: 0
 27951                           ;doprnt.c: 1157: if(flag & 0x03)
 27952  0123B0  0E03               	movlw	3
 27953  0123B2  15A9               	andwf	i2printf@flag& (0+255),w,b
 27954  0123B4  6F8A               	movwf	??i2_printf& (0+255),b
 27955  0123B6  0E00               	movlw	0
 27956  0123B8  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 27957  0123BA  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 27958  0123BC  518A               	movf	??i2_printf& (0+255),w,b
 27959  0123BE  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 27960  0123C0  B4D8               	btfsc	status,2,c
 27961  0123C2  D00B               	goto	i2l1470
 27962                           
 27963                           ; BSR set to: 0
 27964                           ;doprnt.c: 1159: (putch('-') );
 27965  0123C4  0E2D               	movlw	45
 27966  0123C6  EC0A  F0C6         	call	i2_putch
 27967                           
 27968                           ;doprnt.c: 1168: while(width > 0) {
 27969  0123CA  D007               	goto	i2l1470
 27970  0123CC                     i2l14670:
 27971                           
 27972                           ;doprnt.c: 1169: (putch('0') );
 27973  0123CC  0E30               	movlw	48
 27974  0123CE  EC0A  F0C6         	call	i2_putch
 27975                           
 27976                           ;doprnt.c: 1170: width--;
 27977  0123D2  0100               	movlb	0	; () banked
 27978  0123D4  07AB               	decf	i2printf@width& (0+255),f,b
 27979  0123D6  A0D8               	btfss	status,0,c
 27980  0123D8  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 27981  0123DA                     i2l1470:
 27982                           
 27983                           ; BSR set to: 0
 27984  0123DA  0100               	movlb	0	; () banked
 27985  0123DC  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 27986  0123DE  D06B               	goto	i2l1478
 27987  0123E0  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 27988  0123E2  E1F4               	bnz	i2l14670
 27989  0123E4  05AB               	decf	i2printf@width& (0+255),w,b
 27990  0123E6  A0D8               	btfss	status,0,c
 27991  0123E8  D066               	goto	i2l1478
 27992  0123EA  D7F0               	goto	i2l1471
 27993  0123EC                     i2l14676:
 27994                           
 27995                           ; BSR set to: 0
 27996                           ;doprnt.c: 1181: (putch(' ') );
 27997  0123EC  0E20               	movlw	32
 27998  0123EE  EC0A  F0C6         	call	i2_putch
 27999                           
 28000                           ;doprnt.c: 1182: width--;
 28001  0123F2  0100               	movlb	0	; () banked
 28002  0123F4  07AB               	decf	i2printf@width& (0+255),f,b
 28003  0123F6  A0D8               	btfss	status,0,c
 28004  0123F8  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28005  0123FA                     i2l1474:
 28006                           
 28007                           ; BSR set to: 0
 28008                           
 28009                           ; BSR set to: 0
 28010  0123FA  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 28011  0123FC  D005               	goto	i2u1845_40
 28012  0123FE  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 28013  012400  E1F5               	bnz	i2l14676
 28014  012402  05AB               	decf	i2printf@width& (0+255),w,b
 28015  012404  B0D8               	btfsc	status,0,c
 28016  012406  D7F2               	goto	i2l1475
 28017  012408                     i2u1845_40:
 28018                           
 28019                           ; BSR set to: 0
 28020                           ;doprnt.c: 1183: }
 28021                           ;doprnt.c: 1188: if(flag & 0x03)
 28022                           
 28023                           ; BSR set to: 0
 28024  012408  0E03               	movlw	3
 28025  01240A  15A9               	andwf	i2printf@flag& (0+255),w,b
 28026  01240C  6F8A               	movwf	??i2_printf& (0+255),b
 28027  01240E  0E00               	movlw	0
 28028  012410  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28029  012412  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28030  012414  518A               	movf	??i2_printf& (0+255),w,b
 28031  012416  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28032  012418  B4D8               	btfsc	status,2,c
 28033  01241A  D04D               	goto	i2l1478
 28034                           
 28035                           ; BSR set to: 0
 28036                           ;doprnt.c: 1190: (putch('-') );
 28037  01241C  0E2D               	movlw	45
 28038  01241E  EC0A  F0C6         	call	i2_putch
 28039                           
 28040                           ;doprnt.c: 1195: }
 28041                           ;doprnt.c: 1196: while(c--) {
 28042  012422  D049               	goto	i2l1478
 28043  012424                     
 28044                           ;doprnt.c: 1200: {
 28045                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 28046  012424  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 28047  012428  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28048  01242C  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28049  012430  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28050  012434  0100               	movlb	0	; () banked
 28051  012436  51AF               	movf	i2printf@c& (0+255),w,b
 28052  012438  0D04               	mullw	4
 28053  01243A  0E2B               	movlw	low _dpowers
 28054  01243C  24F3               	addwf	prodl,w,c
 28055  01243E  6EF6               	movwf	tblptrl,c
 28056  012440  0EE9               	movlw	high _dpowers
 28057  012442  20F4               	addwfc	prodh,w,c
 28058  012444  6EF7               	movwf	tblptrh,c
 28059  012446                     	if	1	;There are 3 active tblptr bytes
 28060  012446  6AF8               	clrf	tblptru,c
 28061  012448  0E00               	movlw	low (__mediumconst shr (0+16))
 28062  01244A  22F8               	addwfc	tblptru,f,c
 28063  01244C                     	endif
 28064  01244C  0009               	tblrd		*+
 28065  01244E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 28066  012452  0009               	tblrd		*+
 28067  012454  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 28068  012458  0009               	tblrd		*+
 28069  01245A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 28070  01245E  000A               	tblrd		*-
 28071  012460  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 28072  012464  EC26  F0BE         	call	i2___lldiv	;wreg free
 28073  012468  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 28074  01246C  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 28075  012470  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 28076  012474  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 28077                           
 28078                           ;doprnt.c: 1202: tmpval.vd %= 10;
 28079  012478  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 28080  01247C  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 28081  012480  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 28082  012484  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 28083  012488  0E0A               	movlw	10
 28084  01248A  6E12               	movwf	i2___llmod@divisor,c
 28085  01248C  0E00               	movlw	0
 28086  01248E  6E13               	movwf	i2___llmod@divisor+1,c
 28087  012490  0E00               	movlw	0
 28088  012492  6E14               	movwf	i2___llmod@divisor+2,c
 28089  012494  0E00               	movlw	0
 28090  012496  6E15               	movwf	i2___llmod@divisor+3,c
 28091  012498  EC27  F0C0         	call	i2___llmod	;wreg free
 28092  01249C  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 28093  0124A0  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 28094  0124A4  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 28095  0124A8  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 28096                           
 28097                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 28098  0124AC  0100               	movlb	0	; () banked
 28099  0124AE  519B               	movf	i2printf@tmpval& (0+255),w,b
 28100  0124B0  0F30               	addlw	48
 28101  0124B2  EC0A  F0C6         	call	i2_putch
 28102  0124B6                     i2l1478:
 28103  0124B6  0100               	movlb	0	; () banked
 28104  0124B8  07AF               	decf	i2printf@c& (0+255),f,b
 28105  0124BA  29AF               	incf	i2printf@c& (0+255),w,b
 28106  0124BC  B4D8               	btfsc	status,2,c
 28107  0124BE  D008               	goto	i2l1481
 28108  0124C0  D7B1               	goto	i2l1479
 28109  0124C2                     i2l14694:
 28110                           
 28111                           ; BSR set to: 0
 28112                           ;doprnt.c: 1208: (putch('0') );
 28113  0124C2  0E30               	movlw	48
 28114  0124C4  EC0A  F0C6         	call	i2_putch
 28115                           
 28116                           ;doprnt.c: 1209: exp--;
 28117  0124C8  0100               	movlb	0	; () banked
 28118  0124CA  079F               	decf	i2printf@exp& (0+255),f,b
 28119  0124CC  A0D8               	btfss	status,0,c
 28120  0124CE  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 28121  0124D0                     i2l1481:
 28122                           
 28123                           ; BSR set to: 0
 28124                           
 28125                           ; BSR set to: 0
 28126  0124D0  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 28127  0124D2  D005               	goto	i2u1848_40
 28128  0124D4  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 28129  0124D6  E1F5               	bnz	i2l14694
 28130  0124D8  059F               	decf	i2printf@exp& (0+255),w,b
 28131  0124DA  B0D8               	btfsc	status,0,c
 28132  0124DC  D7F2               	goto	i2l1482
 28133  0124DE                     i2u1848_40:
 28134                           
 28135                           ; BSR set to: 0
 28136                           ;doprnt.c: 1210: }
 28137                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 28138                           
 28139                           ; BSR set to: 0
 28140  0124DE  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 28141  0124E0  D009               	goto	i2l1484
 28142  0124E2  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28143  0124E4  E104               	bnz	i2u1849_40
 28144  0124E6  0E09               	movlw	9
 28145  0124E8  5DAD               	subwf	i2printf@prec& (0+255),w,b
 28146  0124EA  A0D8               	btfss	status,0,c
 28147  0124EC  D003               	goto	i2l1484
 28148  0124EE                     i2u1849_40:
 28149                           
 28150                           ; BSR set to: 0
 28151                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 28152  0124EE  0E08               	movlw	8
 28153  0124F0  6FAF               	movwf	i2printf@c& (0+255),b
 28154  0124F2  D002               	goto	i2l1485
 28155  0124F4                     i2l1484:
 28156                           
 28157                           ; BSR set to: 0
 28158                           ;doprnt.c: 1213: else
 28159                           ;doprnt.c: 1214: c = prec;
 28160  0124F4  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 28161  0124F8                     i2l1485:
 28162                           
 28163                           ; BSR set to: 0
 28164                           ;doprnt.c: 1215: prec -= c;
 28165                           
 28166                           ; BSR set to: 0
 28167  0124F8  51AF               	movf	i2printf@c& (0+255),w,b
 28168  0124FA  5FAD               	subwf	i2printf@prec& (0+255),f,b
 28169  0124FC  0E00               	movlw	0
 28170  0124FE  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28171  012500  0EFF               	movlw	255
 28172  012502  5BAE               	subwfb	(i2printf@prec+1)& (0+255),f,b
 28173                           
 28174                           ; BSR set to: 0
 28175                           ;doprnt.c: 1219: if(c)
 28176  012504  51AF               	movf	i2printf@c& (0+255),w,b
 28177  012506  B4D8               	btfsc	status,2,c
 28178  012508  D003               	goto	i2l1486
 28179                           
 28180                           ; BSR set to: 0
 28181                           ;doprnt.c: 1221: (putch('.') );
 28182  01250A  0E2E               	movlw	46
 28183  01250C  EC0A  F0C6         	call	i2_putch
 28184  012510                     i2l1486:
 28185                           
 28186                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 28187  012510  0100               	movlb	0	; () banked
 28188  012512  51AF               	movf	i2printf@c& (0+255),w,b
 28189  012514  EC5B  F09C         	call	i2_scale
 28190  012518  C049  F090         	movff	?i2_scale,i2_printf$4143
 28191  01251C  C04A  F091         	movff	?i2_scale+1,i2_printf$4143+1
 28192  012520  C04B  F092         	movff	?i2_scale+2,i2_printf$4143+2
 28193  012524  C04C  F093         	movff	?i2_scale+3,i2_printf$4143+3
 28194                           
 28195                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 28196  012528  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 28197  01252C  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 28198  012530  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 28199  012534  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 28200  012538  C090  F030         	movff	i2_printf$4143,i2___flmul@b
 28201  01253C  C091  F031         	movff	i2_printf$4143+1,i2___flmul@b+1
 28202  012540  C092  F032         	movff	i2_printf$4143+2,i2___flmul@b+2
 28203  012544  C093  F033         	movff	i2_printf$4143+3,i2___flmul@b+3
 28204  012548  ECF8  F0A1         	call	i2___flmul	;wreg free
 28205  01254C  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 28206  012550  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 28207  012554  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 28208  012558  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 28209  01255C  EC9F  F0BA         	call	i2___fltol	;wreg free
 28210  012560  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 28211  012564  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 28212  012568  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 28213  01256C  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 28214                           
 28215                           ;doprnt.c: 1228: while(c--) {
 28216  012570  D073               	goto	i2l1487
 28217  012572                     
 28218                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 28219  012572  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 28220  012576  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28221  01257A  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28222  01257E  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28223  012582  0100               	movlb	0	; () banked
 28224  012584  51AF               	movf	i2printf@c& (0+255),w,b
 28225  012586  0D04               	mullw	4
 28226  012588  0E2B               	movlw	low _dpowers
 28227  01258A  24F3               	addwf	prodl,w,c
 28228  01258C  6EF6               	movwf	tblptrl,c
 28229  01258E  0EE9               	movlw	high _dpowers
 28230  012590  20F4               	addwfc	prodh,w,c
 28231  012592  6EF7               	movwf	tblptrh,c
 28232  012594                     	if	1	;There are 3 active tblptr bytes
 28233  012594  6AF8               	clrf	tblptru,c
 28234  012596  0E00               	movlw	low (__mediumconst shr (0+16))
 28235  012598  22F8               	addwfc	tblptru,f,c
 28236  01259A                     	endif
 28237  01259A  0009               	tblrd		*+
 28238  01259C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 28239  0125A0  0009               	tblrd		*+
 28240  0125A2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 28241  0125A6  0009               	tblrd		*+
 28242  0125A8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 28243  0125AC  000A               	tblrd		*-
 28244  0125AE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 28245  0125B2  EC26  F0BE         	call	i2___lldiv	;wreg free
 28246  0125B6  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 28247  0125BA  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 28248  0125BE  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 28249  0125C2  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 28250                           
 28251                           ;doprnt.c: 1230: tmpval.vd %= 10;
 28252  0125C6  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 28253  0125CA  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 28254  0125CE  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 28255  0125D2  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 28256  0125D6  0E0A               	movlw	10
 28257  0125D8  6E12               	movwf	i2___llmod@divisor,c
 28258  0125DA  0E00               	movlw	0
 28259  0125DC  6E13               	movwf	i2___llmod@divisor+1,c
 28260  0125DE  0E00               	movlw	0
 28261  0125E0  6E14               	movwf	i2___llmod@divisor+2,c
 28262  0125E2  0E00               	movlw	0
 28263  0125E4  6E15               	movwf	i2___llmod@divisor+3,c
 28264  0125E6  EC27  F0C0         	call	i2___llmod	;wreg free
 28265  0125EA  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 28266  0125EE  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 28267  0125F2  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 28268  0125F6  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 28269                           
 28270                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 28271  0125FA  0100               	movlb	0	; () banked
 28272  0125FC  519B               	movf	i2printf@tmpval& (0+255),w,b
 28273  0125FE  0F30               	addlw	48
 28274  012600  EC0A  F0C6         	call	i2_putch
 28275                           
 28276                           ;doprnt.c: 1232: val %= dpowers[c];
 28277  012604  C0A1  F00E         	movff	i2printf@val,i2___llmod@dividend
 28278  012608  C0A2  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 28279  01260C  C0A3  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 28280  012610  C0A4  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 28281  012614  0100               	movlb	0	; () banked
 28282  012616  51AF               	movf	i2printf@c& (0+255),w,b
 28283  012618  0D04               	mullw	4
 28284  01261A  0E2B               	movlw	low _dpowers
 28285  01261C  24F3               	addwf	prodl,w,c
 28286  01261E  6EF6               	movwf	tblptrl,c
 28287  012620  0EE9               	movlw	high _dpowers
 28288  012622  20F4               	addwfc	prodh,w,c
 28289  012624  6EF7               	movwf	tblptrh,c
 28290  012626                     	if	1	;There are 3 active tblptr bytes
 28291  012626  6AF8               	clrf	tblptru,c
 28292  012628  0E00               	movlw	low (__mediumconst shr (0+16))
 28293  01262A  22F8               	addwfc	tblptru,f,c
 28294  01262C                     	endif
 28295  01262C  0009               	tblrd		*+
 28296  01262E  CFF5 F012          	movff	tablat,i2___llmod@divisor
 28297  012632  0009               	tblrd		*+
 28298  012634  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 28299  012638  0009               	tblrd		*+
 28300  01263A  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 28301  01263E  000A               	tblrd		*-
 28302  012640  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 28303  012644  EC27  F0C0         	call	i2___llmod	;wreg free
 28304  012648  C00E  F0A1         	movff	?i2___llmod,i2printf@val
 28305  01264C  C00F  F0A2         	movff	?i2___llmod+1,i2printf@val+1
 28306  012650  C010  F0A3         	movff	?i2___llmod+2,i2printf@val+2
 28307  012654  C011  F0A4         	movff	?i2___llmod+3,i2printf@val+3
 28308  012658                     i2l1487:
 28309  012658  0100               	movlb	0	; () banked
 28310  01265A  07AF               	decf	i2printf@c& (0+255),f,b
 28311  01265C  29AF               	incf	i2printf@c& (0+255),w,b
 28312  01265E  B4D8               	btfsc	status,2,c
 28313  012660  D008               	goto	i2l1490
 28314  012662  D787               	goto	i2l1488
 28315  012664                     
 28316                           ; BSR set to: 0
 28317                           ;doprnt.c: 1236: (putch('0') );
 28318                           
 28319                           ; BSR set to: 0
 28320  012664  0E30               	movlw	48
 28321  012666  EC0A  F0C6         	call	i2_putch
 28322                           
 28323                           ;doprnt.c: 1237: prec--;
 28324  01266A  0100               	movlb	0	; () banked
 28325  01266C  07AD               	decf	i2printf@prec& (0+255),f,b
 28326  01266E  A0D8               	btfss	status,0,c
 28327  012670  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 28328  012672                     i2l1490:
 28329                           
 28330                           ; BSR set to: 0
 28331                           
 28332                           ; BSR set to: 0
 28333  012672  51AD               	movf	i2printf@prec& (0+255),w,b
 28334  012674  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 28335  012676  B4D8               	btfsc	status,2,c
 28336  012678  D1BD               	goto	i2u1877_40
 28337  01267A  D7F4               	goto	i2l1491
 28338  01267C                     i2l1444:
 28339                           
 28340                           ; BSR set to: 0
 28341                           ;doprnt.c: 1246: }
 28342                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 28343                           
 28344                           ; BSR set to: 0
 28345  01267C  0EC0               	movlw	192
 28346  01267E  15A9               	andwf	i2printf@flag& (0+255),w,b
 28347  012680  6F8A               	movwf	??i2_printf& (0+255),b
 28348  012682  0E00               	movlw	0
 28349  012684  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28350  012686  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28351  012688  518A               	movf	??i2_printf& (0+255),w,b
 28352  01268A  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28353  01268C  A4D8               	btfss	status,2,c
 28354  01268E  D01E               	goto	i2l1493
 28355                           
 28356                           ; BSR set to: 0
 28357                           ;doprnt.c: 1253: {
 28358                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 28359  012690  C099  FFD9         	movff	i2printf@ap,fsr2l
 28360  012694  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 28361  012698  CFDE F0A1          	movff	postinc2,i2printf@val
 28362  01269C  CFDD F0A2          	movff	postdec2,i2printf@val+1
 28363  0126A0  0E00               	movlw	0
 28364  0126A2  BFA2               	btfsc	(i2printf@val+1)& (0+255),7,b
 28365  0126A4  0EFF               	movlw	-1
 28366  0126A6  6FA3               	movwf	(i2printf@val+2)& (0+255),b
 28367  0126A8  6FA4               	movwf	(i2printf@val+3)& (0+255),b
 28368                           
 28369                           ; BSR set to: 0
 28370  0126AA  0E02               	movlw	2
 28371  0126AC  2799               	addwf	i2printf@ap& (0+255),f,b
 28372  0126AE  0E00               	movlw	0
 28373  0126B0  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 28374                           
 28375                           ; BSR set to: 0
 28376                           ;doprnt.c: 1261: if((long)val < 0) {
 28377  0126B2  AFA4               	btfss	(i2printf@val+3)& (0+255),7,b
 28378  0126B4  D01D               	goto	i2l1495
 28379                           
 28380                           ; BSR set to: 0
 28381                           ;doprnt.c: 1262: flag |= 0x03;
 28382  0126B6  0E03               	movlw	3
 28383  0126B8  13A9               	iorwf	i2printf@flag& (0+255),f,b
 28384                           
 28385                           ; BSR set to: 0
 28386                           ;doprnt.c: 1263: val = -val;
 28387  0126BA  1FA4               	comf	(i2printf@val+3)& (0+255),f,b
 28388  0126BC  1FA3               	comf	(i2printf@val+2)& (0+255),f,b
 28389  0126BE  1FA2               	comf	(i2printf@val+1)& (0+255),f,b
 28390  0126C0  6DA1               	negf	i2printf@val& (0+255),b
 28391  0126C2  0E00               	movlw	0
 28392  0126C4  23A2               	addwfc	(i2printf@val+1)& (0+255),f,b
 28393  0126C6  23A3               	addwfc	(i2printf@val+2)& (0+255),f,b
 28394  0126C8  23A4               	addwfc	(i2printf@val+3)& (0+255),f,b
 28395                           
 28396                           ; BSR set to: 0
 28397                           ;doprnt.c: 1264: }
 28398                           ;doprnt.c: 1266: }
 28399  0126CA  D012               	goto	i2l1495
 28400  0126CC                     i2l1493:
 28401                           
 28402                           ; BSR set to: 0
 28403                           ;doprnt.c: 1268: else
 28404                           ;doprnt.c: 1273: {
 28405                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 28406                           
 28407                           ; BSR set to: 0
 28408  0126CC  C099  FFD9         	movff	i2printf@ap,fsr2l
 28409  0126D0  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 28410  0126D4  CFDE F08A          	movff	postinc2,??i2_printf
 28411  0126D8  CFDD F08B          	movff	postdec2,??i2_printf+1
 28412  0126DC  C08A  F0A1         	movff	??i2_printf,i2printf@val
 28413  0126E0  C08B  F0A2         	movff	??i2_printf+1,i2printf@val+1
 28414  0126E4  6BA3               	clrf	(i2printf@val+2)& (0+255),b
 28415  0126E6  6BA4               	clrf	(i2printf@val+3)& (0+255),b
 28416                           
 28417                           ; BSR set to: 0
 28418  0126E8  0E02               	movlw	2
 28419  0126EA  2799               	addwf	i2printf@ap& (0+255),f,b
 28420  0126EC  0E00               	movlw	0
 28421  0126EE  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 28422  0126F0                     i2l1495:
 28423                           
 28424                           ; BSR set to: 0
 28425                           ;doprnt.c: 1287: }
 28426                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 28427                           
 28428                           ; BSR set to: 0
 28429  0126F0  51AD               	movf	i2printf@prec& (0+255),w,b
 28430  0126F2  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 28431  0126F4  A4D8               	btfss	status,2,c
 28432  0126F6  D04B               	goto	i2l1497
 28433                           
 28434                           ; BSR set to: 0
 28435  0126F8  51A1               	movf	i2printf@val& (0+255),w,b
 28436  0126FA  11A2               	iorwf	(i2printf@val+1)& (0+255),w,b
 28437  0126FC  11A3               	iorwf	(i2printf@val+2)& (0+255),w,b
 28438  0126FE  11A4               	iorwf	(i2printf@val+3)& (0+255),w,b
 28439  012700  A4D8               	btfss	status,2,c
 28440  012702  D045               	goto	i2l1497
 28441                           
 28442                           ; BSR set to: 0
 28443                           ;doprnt.c: 1291: prec++;
 28444  012704  4BAD               	infsnz	i2printf@prec& (0+255),f,b
 28445  012706  2BAE               	incf	(i2printf@prec+1)& (0+255),f,b
 28446                           
 28447                           ; BSR set to: 0
 28448                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 28449  012708  D042               	goto	i2l1497
 28450  01270A                     
 28451                           ; BSR set to: 0
 28452                           ;doprnt.c: 1302: case 0xC0:
 28453                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 28454                           
 28455                           ; BSR set to: 0
 28456                           
 28457                           ; BSR set to: 0
 28458  01270A  0E01               	movlw	1
 28459  01270C  6FAF               	movwf	i2printf@c& (0+255),b
 28460  01270E                     i2l14754:
 28461                           
 28462                           ; BSR set to: 0
 28463  01270E  0E0A               	movlw	10
 28464  012710  19AF               	xorwf	i2printf@c& (0+255),w,b
 28465  012712  B4D8               	btfsc	status,2,c
 28466  012714  D047               	goto	i2l1503
 28467                           
 28468                           ; BSR set to: 0
 28469                           ;doprnt.c: 1306: if(val < dpowers[c])
 28470                           
 28471                           ; BSR set to: 0
 28472                           
 28473                           ; BSR set to: 0
 28474  012716  51AF               	movf	i2printf@c& (0+255),w,b
 28475  012718  0D04               	mullw	4
 28476  01271A  0E2B               	movlw	low _dpowers
 28477  01271C  24F3               	addwf	prodl,w,c
 28478  01271E  6EF6               	movwf	tblptrl,c
 28479  012720  0EE9               	movlw	high _dpowers
 28480  012722  20F4               	addwfc	prodh,w,c
 28481  012724  6EF7               	movwf	tblptrh,c
 28482  012726                     	if	1	;There are 3 active tblptr bytes
 28483  012726  6AF8               	clrf	tblptru,c
 28484  012728  0E00               	movlw	low (__mediumconst shr (0+16))
 28485  01272A  22F8               	addwfc	tblptru,f,c
 28486  01272C                     	endif
 28487  01272C  0009               	tblrd		*+
 28488  01272E  50F5               	movf	tablat,w,c
 28489  012730  5DA1               	subwf	i2printf@val& (0+255),w,b
 28490  012732  0009               	tblrd		*+
 28491  012734  50F5               	movf	tablat,w,c
 28492  012736  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 28493  012738  0009               	tblrd		*+
 28494  01273A  50F5               	movf	tablat,w,c
 28495  01273C  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 28496  01273E  0009               	tblrd		*+
 28497  012740  50F5               	movf	tablat,w,c
 28498  012742  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 28499  012744  A0D8               	btfss	status,0,c
 28500  012746  D02E               	goto	i2l1503
 28501                           
 28502                           ; BSR set to: 0
 28503                           
 28504                           ; BSR set to: 0
 28505                           
 28506                           ; BSR set to: 0
 28507                           ;doprnt.c: 1307: break;
 28508  012748  2BAF               	incf	i2printf@c& (0+255),f,b
 28509  01274A  D7E1               	goto	i2l14754
 28510  01274C                     
 28511                           ; BSR set to: 0
 28512                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 28513                           
 28514                           ; BSR set to: 0
 28515  01274C  0E01               	movlw	1
 28516  01274E  6FAF               	movwf	i2printf@c& (0+255),b
 28517  012750                     i2l14768:
 28518                           
 28519                           ; BSR set to: 0
 28520  012750  0E08               	movlw	8
 28521  012752  19AF               	xorwf	i2printf@c& (0+255),w,b
 28522  012754  B4D8               	btfsc	status,2,c
 28523  012756  D026               	goto	i2l1503
 28524                           
 28525                           ; BSR set to: 0
 28526                           ;doprnt.c: 1317: if(val < hexpowers[c])
 28527                           
 28528                           ; BSR set to: 0
 28529                           
 28530                           ; BSR set to: 0
 28531  012758  51AF               	movf	i2printf@c& (0+255),w,b
 28532  01275A  0D04               	mullw	4
 28533  01275C  0E53               	movlw	low _hexpowers
 28534  01275E  24F3               	addwf	prodl,w,c
 28535  012760  6EF6               	movwf	tblptrl,c
 28536  012762  0EE9               	movlw	high _hexpowers
 28537  012764  20F4               	addwfc	prodh,w,c
 28538  012766  6EF7               	movwf	tblptrh,c
 28539  012768                     	if	1	;There are 3 active tblptr bytes
 28540  012768  6AF8               	clrf	tblptru,c
 28541  01276A  0E00               	movlw	low (__mediumconst shr (0+16))
 28542  01276C  22F8               	addwfc	tblptru,f,c
 28543  01276E                     	endif
 28544  01276E  0009               	tblrd		*+
 28545  012770  50F5               	movf	tablat,w,c
 28546  012772  5DA1               	subwf	i2printf@val& (0+255),w,b
 28547  012774  0009               	tblrd		*+
 28548  012776  50F5               	movf	tablat,w,c
 28549  012778  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 28550  01277A  0009               	tblrd		*+
 28551  01277C  50F5               	movf	tablat,w,c
 28552  01277E  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 28553  012780  0009               	tblrd		*+
 28554  012782  50F5               	movf	tablat,w,c
 28555  012784  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 28556  012786  A0D8               	btfss	status,0,c
 28557  012788  D00D               	goto	i2l1503
 28558                           
 28559                           ; BSR set to: 0
 28560                           
 28561                           ; BSR set to: 0
 28562                           
 28563                           ; BSR set to: 0
 28564                           ;doprnt.c: 1318: break;
 28565  01278A  2BAF               	incf	i2printf@c& (0+255),f,b
 28566  01278C  D7E1               	goto	i2l14768
 28567  01278E                     i2l1497:
 28568                           
 28569                           ; BSR set to: 0
 28570                           
 28571                           ; BSR set to: 0
 28572  01278E  51A9               	movf	i2printf@flag& (0+255),w,b
 28573  012790  0BC0               	andlw	192
 28574                           
 28575                           ; Switch size 1, requested type "space"
 28576                           ; Number of cases is 3, Range of values is 0 to 192
 28577                           ; switch strategies available:
 28578                           ; Name         Instructions Cycles
 28579                           ; simple_byte           10     6 (average)
 28580                           ;	Chosen strategy is simple_byte
 28581  012792  0A00               	xorlw	0	; case 0
 28582  012794  B4D8               	btfsc	status,2,c
 28583  012796  D7B9               	goto	i2l1498
 28584  012798  0A80               	xorlw	128	; case 128
 28585  01279A  B4D8               	btfsc	status,2,c
 28586  01279C  D7D7               	goto	i2l1504
 28587  01279E  0A40               	xorlw	64	; case 192
 28588  0127A0  B4D8               	btfsc	status,2,c
 28589  0127A2  D7B3               	goto	i2l1498
 28590  0127A4                     i2l1503:
 28591                           
 28592                           ; BSR set to: 0
 28593                           ;doprnt.c: 1339: if(c < prec)
 28594                           
 28595                           ; BSR set to: 0
 28596  0127A4  0E80               	movlw	128
 28597  0127A6  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28598  0127A8  0E7F               	movlw	127
 28599  0127AA  6F8A               	movwf	??i2_printf& (0+255),b
 28600  0127AC  51AD               	movf	i2printf@prec& (0+255),w,b
 28601  0127AE  5DAF               	subwf	i2printf@c& (0+255),w,b
 28602  0127B0  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28603  0127B2  0A80               	xorlw	128
 28604  0127B4  598A               	subwfb	??i2_printf& (0+255),w,b
 28605  0127B6  B0D8               	btfsc	status,0,c
 28606  0127B8  D003               	goto	i2l1508
 28607                           
 28608                           ; BSR set to: 0
 28609                           ;doprnt.c: 1340: c = prec;
 28610  0127BA  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 28611  0127BE  D010               	goto	i2l1510
 28612  0127C0                     i2l1508:
 28613                           
 28614                           ; BSR set to: 0
 28615                           ;doprnt.c: 1341: else if(prec < c)
 28616                           
 28617                           ; BSR set to: 0
 28618  0127C0  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28619  0127C2  0A80               	xorlw	128
 28620  0127C4  6F8A               	movwf	??i2_printf& (0+255),b
 28621  0127C6  51AF               	movf	i2printf@c& (0+255),w,b
 28622  0127C8  5DAD               	subwf	i2printf@prec& (0+255),w,b
 28623  0127CA  0E80               	movlw	128
 28624  0127CC  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28625  0127CE  0E7F               	movlw	127
 28626  0127D0  598A               	subwfb	??i2_printf& (0+255),w,b
 28627  0127D2  B0D8               	btfsc	status,0,c
 28628  0127D4  D005               	goto	i2l1510
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;doprnt.c: 1342: prec = c;
 28632  0127D6  51AF               	movf	i2printf@c& (0+255),w,b
 28633  0127D8  6FAD               	movwf	i2printf@prec& (0+255),b
 28634  0127DA  6BAE               	clrf	(i2printf@prec+1)& (0+255),b
 28635  0127DC  BFAD               	btfsc	i2printf@prec& (0+255),7,b
 28636  0127DE  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 28637  0127E0                     i2l1510:
 28638                           
 28639                           ; BSR set to: 0
 28640                           ;doprnt.c: 1345: if(width && flag & 0x03)
 28641                           
 28642                           ; BSR set to: 0
 28643                           
 28644                           ; BSR set to: 0
 28645  0127E0  51AB               	movf	i2printf@width& (0+255),w,b
 28646  0127E2  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 28647  0127E4  B4D8               	btfsc	status,2,c
 28648  0127E6  D00D               	goto	i2l1511
 28649                           
 28650                           ; BSR set to: 0
 28651  0127E8  0E03               	movlw	3
 28652  0127EA  15A9               	andwf	i2printf@flag& (0+255),w,b
 28653  0127EC  6F8A               	movwf	??i2_printf& (0+255),b
 28654  0127EE  0E00               	movlw	0
 28655  0127F0  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28656  0127F2  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28657  0127F4  518A               	movf	??i2_printf& (0+255),w,b
 28658  0127F6  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28659  0127F8  B4D8               	btfsc	status,2,c
 28660  0127FA  D003               	goto	i2l1511
 28661                           
 28662                           ; BSR set to: 0
 28663                           ;doprnt.c: 1346: width--;
 28664  0127FC  07AB               	decf	i2printf@width& (0+255),f,b
 28665  0127FE  A0D8               	btfss	status,0,c
 28666  012800  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28667  012802                     i2l1511:
 28668                           
 28669                           ; BSR set to: 0
 28670                           ;doprnt.c: 1348: if(flag & 0x4000) {
 28671                           
 28672                           ; BSR set to: 0
 28673  012802  ADAA               	btfss	(i2printf@flag+1)& (0+255),6,b
 28674  012804  D013               	goto	i2l1514
 28675                           
 28676                           ; BSR set to: 0
 28677                           ;doprnt.c: 1349: if(width > prec)
 28678  012806  51AB               	movf	i2printf@width& (0+255),w,b
 28679  012808  5DAD               	subwf	i2printf@prec& (0+255),w,b
 28680  01280A  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28681  01280C  0A80               	xorlw	128
 28682  01280E  6F8A               	movwf	??i2_printf& (0+255),b
 28683  012810  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 28684  012812  0A80               	xorlw	128
 28685  012814  598A               	subwfb	??i2_printf& (0+255),w,b
 28686  012816  B0D8               	btfsc	status,0,c
 28687  012818  D005               	goto	i2l1513
 28688                           
 28689                           ; BSR set to: 0
 28690                           ;doprnt.c: 1350: width -= prec;
 28691  01281A  51AD               	movf	i2printf@prec& (0+255),w,b
 28692  01281C  5FAB               	subwf	i2printf@width& (0+255),f,b
 28693  01281E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 28694  012820  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 28695  012822  D004               	goto	i2l1514
 28696  012824                     i2l1513:
 28697                           
 28698                           ; BSR set to: 0
 28699                           ;doprnt.c: 1351: else
 28700                           ;doprnt.c: 1352: width = 0;
 28701                           
 28702                           ; BSR set to: 0
 28703  012824  0E00               	movlw	0
 28704  012826  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 28705  012828  0E00               	movlw	0
 28706  01282A  6FAB               	movwf	i2printf@width& (0+255),b
 28707  01282C                     i2l1514:
 28708                           
 28709                           ; BSR set to: 0
 28710                           ;doprnt.c: 1353: }
 28711                           ;doprnt.c: 1381: if(width > c)
 28712                           
 28713                           ; BSR set to: 0
 28714                           
 28715                           ; BSR set to: 0
 28716  01282C  0E80               	movlw	128
 28717  01282E  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28718  012830  0E7F               	movlw	127
 28719  012832  6F8A               	movwf	??i2_printf& (0+255),b
 28720  012834  51AB               	movf	i2printf@width& (0+255),w,b
 28721  012836  5DAF               	subwf	i2printf@c& (0+255),w,b
 28722  012838  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 28723  01283A  0A80               	xorlw	128
 28724  01283C  598A               	subwfb	??i2_printf& (0+255),w,b
 28725  01283E  B0D8               	btfsc	status,0,c
 28726  012840  D007               	goto	i2l1515
 28727                           
 28728                           ; BSR set to: 0
 28729                           ;doprnt.c: 1382: width -= c;
 28730  012842  51AF               	movf	i2printf@c& (0+255),w,b
 28731  012844  5FAB               	subwf	i2printf@width& (0+255),f,b
 28732  012846  0E00               	movlw	0
 28733  012848  BFAF               	btfsc	i2printf@c& (0+255),7,b
 28734  01284A  0EFF               	movlw	255
 28735  01284C  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 28736  01284E  D004               	goto	i2l1516
 28737  012850                     i2l1515:
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;doprnt.c: 1383: else
 28741                           ;doprnt.c: 1384: width = 0;
 28742                           
 28743                           ; BSR set to: 0
 28744  012850  0E00               	movlw	0
 28745  012852  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 28746  012854  0E00               	movlw	0
 28747  012856  6FAB               	movwf	i2printf@width& (0+255),b
 28748  012858                     i2l1516:
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;doprnt.c: 1387: if(flag & 0x04) {
 28752                           
 28753                           ; BSR set to: 0
 28754  012858  A5A9               	btfss	i2printf@flag& (0+255),2,b
 28755  01285A  D01A               	goto	i2l1517
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;doprnt.c: 1392: if(flag & 0x03)
 28759  01285C  0E03               	movlw	3
 28760  01285E  15A9               	andwf	i2printf@flag& (0+255),w,b
 28761  012860  6F8A               	movwf	??i2_printf& (0+255),b
 28762  012862  0E00               	movlw	0
 28763  012864  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28764  012866  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28765  012868  518A               	movf	??i2_printf& (0+255),w,b
 28766  01286A  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28767  01286C  B4D8               	btfsc	status,2,c
 28768  01286E  D003               	goto	i2l1518
 28769                           
 28770                           ; BSR set to: 0
 28771                           ;doprnt.c: 1393: (putch('-') );
 28772  012870  0E2D               	movlw	45
 28773  012872  EC0A  F0C6         	call	i2_putch
 28774  012876                     i2l1518:
 28775                           
 28776                           ;doprnt.c: 1415: if(width)
 28777  012876  0100               	movlb	0	; () banked
 28778  012878  51AB               	movf	i2printf@width& (0+255),w,b
 28779  01287A  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 28780  01287C  B4D8               	btfsc	status,2,c
 28781  01287E  D0B1               	goto	i2l1527
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;doprnt.c: 1417: (putch('0') );
 28785                           
 28786                           ; BSR set to: 0
 28787                           
 28788                           ;doprnt.c: 1416: do
 28789  012880  0E30               	movlw	48
 28790  012882  EC0A  F0C6         	call	i2_putch
 28791                           
 28792                           ;doprnt.c: 1418: while(--width);
 28793  012886  0100               	movlb	0	; () banked
 28794  012888  07AB               	decf	i2printf@width& (0+255),f,b
 28795  01288A  A0D8               	btfss	status,0,c
 28796  01288C  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28797  01288E  D7F4               	goto	L26
 28798  012890                     i2l1517:
 28799                           
 28800                           ; BSR set to: 0
 28801                           ;doprnt.c: 1422: {
 28802                           ;doprnt.c: 1424: if(width
 28803                           ;doprnt.c: 1428: )
 28804                           
 28805                           ; BSR set to: 0
 28806  012890  51AB               	movf	i2printf@width& (0+255),w,b
 28807  012892  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 28808  012894  B4D8               	btfsc	status,2,c
 28809  012896  D00B               	goto	i2u1875_40
 28810  012898                     i2u1874_40:
 28811                           
 28812                           ; BSR set to: 0
 28813                           ;doprnt.c: 1430: (putch(' ') );
 28814                           
 28815                           ; BSR set to: 0
 28816                           
 28817                           ;doprnt.c: 1429: do
 28818  012898  0E20               	movlw	32
 28819  01289A  EC0A  F0C6         	call	i2_putch
 28820                           
 28821                           ;doprnt.c: 1431: while(--width);
 28822  01289E  0100               	movlb	0	; () banked
 28823  0128A0  07AB               	decf	i2printf@width& (0+255),f,b
 28824  0128A2  A0D8               	btfss	status,0,c
 28825  0128A4  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 28826  0128A6  51AB               	movf	i2printf@width& (0+255),w,b
 28827  0128A8  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 28828  0128AA  A4D8               	btfss	status,2,c
 28829  0128AC  D7F5               	goto	i2u1874_40
 28830  0128AE                     i2u1875_40:
 28831                           
 28832                           ; BSR set to: 0
 28833                           ;doprnt.c: 1438: if(flag & 0x03)
 28834                           
 28835                           ; BSR set to: 0
 28836                           
 28837                           ; BSR set to: 0
 28838  0128AE  0E03               	movlw	3
 28839  0128B0  15A9               	andwf	i2printf@flag& (0+255),w,b
 28840  0128B2  6F8A               	movwf	??i2_printf& (0+255),b
 28841  0128B4  0E00               	movlw	0
 28842  0128B6  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 28843  0128B8  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 28844  0128BA  518A               	movf	??i2_printf& (0+255),w,b
 28845  0128BC  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 28846  0128BE  B4D8               	btfsc	status,2,c
 28847  0128C0  D090               	goto	i2l1527
 28848                           
 28849                           ; BSR set to: 0
 28850                           ;doprnt.c: 1439: (putch('-') );
 28851  0128C2  0E2D               	movlw	45
 28852  0128C4  EC0A  F0C6         	call	i2_putch
 28853                           
 28854                           ;doprnt.c: 1469: }
 28855                           ;doprnt.c: 1474: while(prec--) {
 28856  0128C8  D08C               	goto	i2l1527
 28857  0128CA                     
 28858                           ;doprnt.c: 1486: case 0xC0:
 28859                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 28860  0128CA  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 28861  0128CE  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 28862  0128D2  0100               	movlb	0	; () banked
 28863  0128D4  90D8               	bcf	status,0,c
 28864  0128D6  378A               	rlcf	??i2_printf& (0+255),f,b
 28865  0128D8  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 28866  0128DA  90D8               	bcf	status,0,c
 28867  0128DC  378A               	rlcf	??i2_printf& (0+255),f,b
 28868  0128DE  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 28869  0128E0  0E2B               	movlw	low _dpowers
 28870  0128E2  258A               	addwf	??i2_printf& (0+255),w,b
 28871  0128E4  6EF6               	movwf	tblptrl,c
 28872  0128E6  0EE9               	movlw	high _dpowers
 28873  0128E8  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 28874  0128EA  6EF7               	movwf	tblptrh,c
 28875  0128EC                     	if	1	;There are 3 active tblptr bytes
 28876  0128EC  6AF8               	clrf	tblptru,c
 28877  0128EE  0E00               	movlw	low (__mediumconst shr (0+16))
 28878  0128F0  22F8               	addwfc	tblptru,f,c
 28879  0128F2                     	endif
 28880  0128F2  0009               	tblrd		*+
 28881  0128F4  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 28882  0128F8  0009               	tblrd		*+
 28883  0128FA  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 28884  0128FE  0009               	tblrd		*+
 28885  012900  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 28886  012904  000A               	tblrd		*-
 28887  012906  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 28888  01290A  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 28889  01290E  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28890  012912  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28891  012916  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28892  01291A  EC26  F0BE         	call	i2___lldiv	;wreg free
 28893  01291E  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 28894  012922  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 28895  012926  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 28896  01292A  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 28897  01292E  0E0A               	movlw	10
 28898  012930  6E12               	movwf	i2___llmod@divisor,c
 28899  012932  0E00               	movlw	0
 28900  012934  6E13               	movwf	i2___llmod@divisor+1,c
 28901  012936  0E00               	movlw	0
 28902  012938  6E14               	movwf	i2___llmod@divisor+2,c
 28903  01293A  0E00               	movlw	0
 28904  01293C  6E15               	movwf	i2___llmod@divisor+3,c
 28905  01293E  EC27  F0C0         	call	i2___llmod	;wreg free
 28906  012942  500E               	movf	?i2___llmod,w,c
 28907  012944  0F30               	addlw	48
 28908  012946  0100               	movlb	0	; () banked
 28909  012948  6FAF               	movwf	i2printf@c& (0+255),b
 28910                           
 28911                           ;doprnt.c: 1491: break;
 28912  01294A  D048               	goto	i2l1532
 28913  01294C                     
 28914                           ; BSR set to: 0
 28915                           ;doprnt.c: 1499: {
 28916                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 28917                           
 28918                           ; BSR set to: 0
 28919  01294C  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 28920  012950  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28921  012954  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28922  012958  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28923  01295C  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 28924  012960  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 28925  012964  90D8               	bcf	status,0,c
 28926  012966  378A               	rlcf	??i2_printf& (0+255),f,b
 28927  012968  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 28928  01296A  90D8               	bcf	status,0,c
 28929  01296C  378A               	rlcf	??i2_printf& (0+255),f,b
 28930  01296E  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 28931  012970  0E53               	movlw	low _hexpowers
 28932  012972  258A               	addwf	??i2_printf& (0+255),w,b
 28933  012974  6EF6               	movwf	tblptrl,c
 28934  012976  0EE9               	movlw	high _hexpowers
 28935  012978  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 28936  01297A  6EF7               	movwf	tblptrh,c
 28937  01297C                     	if	1	;There are 3 active tblptr bytes
 28938  01297C  6AF8               	clrf	tblptru,c
 28939  01297E  0E00               	movlw	low (__mediumconst shr (0+16))
 28940  012980  22F8               	addwfc	tblptru,f,c
 28941  012982                     	endif
 28942  012982  0009               	tblrd		*+
 28943  012984  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 28944  012988  0009               	tblrd		*+
 28945  01298A  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 28946  01298E  0009               	tblrd		*+
 28947  012990  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 28948  012994  000A               	tblrd		*-
 28949  012996  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 28950  01299A  EC26  F0BE         	call	i2___lldiv	;wreg free
 28951  01299E  5001               	movf	?i2___lldiv,w,c
 28952  0129A0  0B0F               	andlw	15
 28953  0129A2  0100               	movlb	0	; () banked
 28954  0129A4  6F94               	movwf	i2printf@idx& (0+255),b
 28955                           
 28956                           ; BSR set to: 0
 28957                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 28958  0129A6  5194               	movf	i2printf@idx& (0+255),w,b
 28959  0129A8  0D01               	mullw	1
 28960  0129AA  0EAF               	movlw	low STR_145
 28961  0129AC  24F3               	addwf	prodl,w,c
 28962  0129AE  6EF6               	movwf	tblptrl,c
 28963  0129B0  0EFD               	movlw	high STR_145
 28964  0129B2  20F4               	addwfc	prodh,w,c
 28965  0129B4  6EF7               	movwf	tblptrh,c
 28966  0129B6                     	if	1	;There are 3 active tblptr bytes
 28967  0129B6  6AF8               	clrf	tblptru,c
 28968  0129B8  0E00               	movlw	low (__mediumconst shr (0+16))
 28969  0129BA  22F8               	addwfc	tblptru,f,c
 28970  0129BC                     	endif
 28971  0129BC  0008               	tblrd		*
 28972  0129BE  CFF5 F0AF          	movff	tablat,i2printf@c
 28973                           
 28974                           ; BSR set to: 0
 28975                           ;doprnt.c: 1523: }
 28976                           
 28977                           ;doprnt.c: 1508: }
 28978                           ;doprnt.c: 1510: break;
 28979  0129C2  D00C               	goto	i2l1532
 28980  0129C4                     i2l14842:
 28981  0129C4  0100               	movlb	0	; () banked
 28982  0129C6  51A9               	movf	i2printf@flag& (0+255),w,b
 28983  0129C8  0BC0               	andlw	192
 28984                           
 28985                           ; Switch size 1, requested type "space"
 28986                           ; Number of cases is 3, Range of values is 0 to 192
 28987                           ; switch strategies available:
 28988                           ; Name         Instructions Cycles
 28989                           ; simple_byte           10     6 (average)
 28990                           ;	Chosen strategy is simple_byte
 28991  0129CA  0A00               	xorlw	0	; case 0
 28992  0129CC  B4D8               	btfsc	status,2,c
 28993  0129CE  D77D               	goto	i2l1530
 28994  0129D0  0A80               	xorlw	128	; case 128
 28995  0129D2  B4D8               	btfsc	status,2,c
 28996  0129D4  D7BB               	goto	i2l1533
 28997  0129D6  0A40               	xorlw	64	; case 192
 28998  0129D8  B4D8               	btfsc	status,2,c
 28999  0129DA  D777               	goto	i2l1530
 29000  0129DC                     i2l1532:
 29001                           
 29002                           ; BSR set to: 0
 29003                           ;doprnt.c: 1524: (putch(c) );
 29004                           
 29005                           ; BSR set to: 0
 29006  0129DC  51AF               	movf	i2printf@c& (0+255),w,b
 29007  0129DE  EC0A  F0C6         	call	i2_putch
 29008  0129E2                     i2l1527:
 29009  0129E2  0100               	movlb	0	; () banked
 29010  0129E4  07AD               	decf	i2printf@prec& (0+255),f,b
 29011  0129E6  A0D8               	btfss	status,0,c
 29012  0129E8  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 29013  0129EA  29AD               	incf	i2printf@prec& (0+255),w,b
 29014  0129EC  E1EB               	bnz	i2l14842
 29015  0129EE  29AE               	incf	(i2printf@prec+1)& (0+255),w,b
 29016  0129F0  A4D8               	btfss	status,2,c
 29017  0129F2  D7E8               	goto	i2l1529
 29018  0129F4                     i2u1877_40:
 29019                           
 29020                           ; BSR set to: 0
 29021                           
 29022                           ; BSR set to: 0
 29023  0129F4  0100               	movlb	0	; () banked
 29024  0129F6  5188               	movf	i2printf@f& (0+255),w,b
 29025  0129F8  6F8A               	movwf	??i2_printf& (0+255),b
 29026  0129FA  5189               	movf	(i2printf@f+1)& (0+255),w,b
 29027  0129FC  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 29028  0129FE  4B88               	infsnz	i2printf@f& (0+255),f,b
 29029  012A00  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 29030  012A02  C08A  FFF6         	movff	??i2_printf,tblptrl
 29031  012A06  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 29032  012A0A  0E00               	movlw	low (__mediumconst shr (0+16))
 29033  012A0C  6EF8               	movwf	tblptru,c
 29034  012A0E  0E0D               	movlw	(high __ramtop+-1)
 29035  012A10  64F7               	cpfsgt	tblptrh,c
 29036  012A12  D003               	bra	i2u1878_47
 29037  012A14  0008               	tblrd		*
 29038  012A16  50F5               	movf	tablat,w,c
 29039  012A18  D005               	bra	i2u1878_40
 29040  012A1A                     i2u1878_47:
 29041  012A1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 29042  012A1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 29043  012A22  50EF               	movf	indf0,w,c
 29044  012A24                     i2u1878_40:
 29045  012A24  0100               	movlb	0	; () banked
 29046  012A26  6FAF               	movwf	i2printf@c& (0+255),b
 29047  012A28  51AF               	movf	i2printf@c& (0+255),w,b
 29048  012A2A  B4D8               	btfsc	status,2,c
 29049  012A2C  0012               	return	
 29050  012A2E  EF3E  F08E         	goto	i2l1401
 29051  012A32                     __end_ofi2_printf:
 29052                           	opt stack 0
 29053                           tosu	equ	0xFFF
 29054                           tosh	equ	0xFFE
 29055                           tosl	equ	0xFFD
 29056                           pclatu	equ	0xFFB
 29057                           pclath	equ	0xFFA
 29058                           tblptru	equ	0xFF8
 29059                           tblptrh	equ	0xFF7
 29060                           tblptrl	equ	0xFF6
 29061                           tablat	equ	0xFF5
 29062                           prodh	equ	0xFF4
 29063                           prodl	equ	0xFF3
 29064                           intcon	equ	0xFF2
 29065                           indf0	equ	0xFEF
 29066                           postinc0	equ	0xFEE
 29067                           fsr0h	equ	0xFEA
 29068                           fsr0l	equ	0xFE9
 29069                           wreg	equ	0xFE8
 29070                           indf1	equ	0xFE7
 29071                           postdec1	equ	0xFE5
 29072                           plusw1	equ	0xFE3
 29073                           fsr1h	equ	0xFE2
 29074                           fsr1l	equ	0xFE1
 29075                           bsr	equ	0xFE0
 29076                           indf2	equ	0xFDF
 29077                           postinc2	equ	0xFDE
 29078                           postdec2	equ	0xFDD
 29079                           plusw2	equ	0xFDB
 29080                           fsr2h	equ	0xFDA
 29081                           fsr2l	equ	0xFD9
 29082                           status	equ	0xFD8
 29083                           
 29084 ;; *************** function i2_scale *****************
 29085 ;; Defined at:
 29086 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 29087 ;; Parameters:    Size  Location     Type
 29088 ;;  scl             1    wreg     char 
 29089 ;; Auto vars:     Size  Location     Type
 29090 ;;  scl             1   80[COMRAM] char 
 29091 ;; Return value:  Size  Location     Type
 29092 ;;                  4   72[COMRAM] char 
 29093 ;; Registers used:
 29094 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29095 ;; Tracked objects:
 29096 ;;		On entry : 0/0
 29097 ;;		On exit  : 0/0
 29098 ;;		Unchanged: 0/0
 29099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29101 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29103 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29104 ;;Total ram usage:        9 bytes
 29105 ;; Hardware stack levels used:    1
 29106 ;; Hardware stack levels required when called:    1
 29107 ;; This function calls:
 29108 ;;		i2___awdiv
 29109 ;;		i2___awmod
 29110 ;;		i2___flmul
 29111 ;; This function is called by:
 29112 ;;		i2_printf
 29113 ;; This function uses a non-reentrant model
 29114 ;;
 29115                           
 29116                           	psect	text90
 29117  0138B6                     __ptext90:
 29118                           	opt stack 0
 29119  0138B6                     i2_scale:
 29120                           	opt stack 15
 29121                           
 29122                           ; BSR set to: 0
 29123                           ;incstack = 0
 29124                           ;i2scale@scl stored from wreg
 29125  0138B6  6E51               	movwf	i2scale@scl,c
 29126                           
 29127                           ;doprnt.c: 428: if(scl < 0) {
 29128  0138B8  AE51               	btfss	i2scale@scl,7,c
 29129  0138BA  D11F               	goto	i2l1390
 29130                           
 29131                           ;doprnt.c: 429: scl = -scl;
 29132  0138BC  6C51               	negf	i2scale@scl,c
 29133                           
 29134                           ;doprnt.c: 430: if(scl>=110)
 29135  0138BE  5051               	movf	i2scale@scl,w,c
 29136  0138C0  0A80               	xorlw	128
 29137  0138C2  0F12               	addlw	-238
 29138  0138C4  A0D8               	btfss	status,0,c
 29139  0138C6  D0A1               	goto	i2l1391
 29140                           
 29141                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 29142  0138C8  0E00               	movlw	0
 29143  0138CA  6E0A               	movwf	i2___awdiv@divisor+1,c
 29144  0138CC  0E0A               	movlw	10
 29145  0138CE  6E09               	movwf	i2___awdiv@divisor,c
 29146  0138D0  0E00               	movlw	0
 29147  0138D2  6E04               	movwf	i2___awmod@divisor+1,c
 29148  0138D4  0E64               	movlw	100
 29149  0138D6  6E03               	movwf	i2___awmod@divisor,c
 29150  0138D8  5051               	movf	i2scale@scl,w,c
 29151  0138DA  6E01               	movwf	i2___awmod@dividend,c
 29152  0138DC  6A02               	clrf	i2___awmod@dividend+1,c
 29153  0138DE  BE01               	btfsc	i2___awmod@dividend,7,c
 29154  0138E0  0602               	decf	i2___awmod@dividend+1,f,c
 29155  0138E2  EC1B  F0BF         	call	i2___awmod	;wreg free
 29156  0138E6  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 29157  0138EA  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 29158  0138EE  ECE4  F0BD         	call	i2___awdiv	;wreg free
 29159  0138F2  90D8               	bcf	status,0,c
 29160  0138F4  3607               	rlcf	?i2___awdiv,f,c
 29161  0138F6  3608               	rlcf	?i2___awdiv+1,f,c
 29162  0138F8  90D8               	bcf	status,0,c
 29163  0138FA  3607               	rlcf	?i2___awdiv,f,c
 29164  0138FC  3608               	rlcf	?i2___awdiv+1,f,c
 29165  0138FE  0E24               	movlw	36
 29166  013900  2607               	addwf	?i2___awdiv,f,c
 29167  013902  0E00               	movlw	0
 29168  013904  2208               	addwfc	?i2___awdiv+1,f,c
 29169  013906  0EF7               	movlw	low __npowers_
 29170  013908  2407               	addwf	?i2___awdiv,w,c
 29171  01390A  6EF6               	movwf	tblptrl,c
 29172  01390C  0EE8               	movlw	high __npowers_
 29173  01390E  2008               	addwfc	?i2___awdiv+1,w,c
 29174  013910  6EF7               	movwf	tblptrh,c
 29175  013912                     	if	1	;There are 3 active tblptr bytes
 29176  013912  6AF8               	clrf	tblptru,c
 29177  013914  0E00               	movlw	low (__mediumconst shr (0+16))
 29178  013916  22F8               	addwfc	tblptru,f,c
 29179  013918                     	endif
 29180  013918  0009               	tblrd		*+
 29181  01391A  CFF5 F034          	movff	tablat,i2___flmul@a
 29182  01391E  0009               	tblrd		*+
 29183  013920  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29184  013924  0009               	tblrd		*+
 29185  013926  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29186  01392A  000A               	tblrd		*-
 29187  01392C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29188  013930  0E00               	movlw	0
 29189  013932  6E0A               	movwf	i2___awdiv@divisor+1,c
 29190  013934  0E64               	movlw	100
 29191  013936  6E09               	movwf	i2___awdiv@divisor,c
 29192  013938  5051               	movf	i2scale@scl,w,c
 29193  01393A  6E07               	movwf	i2___awdiv@dividend,c
 29194  01393C  6A08               	clrf	i2___awdiv@dividend+1,c
 29195  01393E  BE07               	btfsc	i2___awdiv@dividend,7,c
 29196  013940  0608               	decf	i2___awdiv@dividend+1,f,c
 29197  013942  ECE4  F0BD         	call	i2___awdiv	;wreg free
 29198  013946  90D8               	bcf	status,0,c
 29199  013948  3607               	rlcf	?i2___awdiv,f,c
 29200  01394A  3608               	rlcf	?i2___awdiv+1,f,c
 29201  01394C  90D8               	bcf	status,0,c
 29202  01394E  3607               	rlcf	?i2___awdiv,f,c
 29203  013950  3608               	rlcf	?i2___awdiv+1,f,c
 29204  013952  0E48               	movlw	72
 29205  013954  2607               	addwf	?i2___awdiv,f,c
 29206  013956  0E00               	movlw	0
 29207  013958  2208               	addwfc	?i2___awdiv+1,f,c
 29208  01395A  0EF7               	movlw	low __npowers_
 29209  01395C  2407               	addwf	?i2___awdiv,w,c
 29210  01395E  6EF6               	movwf	tblptrl,c
 29211  013960  0EE8               	movlw	high __npowers_
 29212  013962  2008               	addwfc	?i2___awdiv+1,w,c
 29213  013964  6EF7               	movwf	tblptrh,c
 29214  013966                     	if	1	;There are 3 active tblptr bytes
 29215  013966  6AF8               	clrf	tblptru,c
 29216  013968  0E00               	movlw	low (__mediumconst shr (0+16))
 29217  01396A  22F8               	addwfc	tblptru,f,c
 29218  01396C                     	endif
 29219  01396C  0009               	tblrd		*+
 29220  01396E  CFF5 F030          	movff	tablat,i2___flmul@b
 29221  013972  0009               	tblrd		*+
 29222  013974  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29223  013978  0009               	tblrd		*+
 29224  01397A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29225  01397E  000A               	tblrd		*-
 29226  013980  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29227  013984  ECF8  F0A1         	call	i2___flmul	;wreg free
 29228  013988  C030  F04D         	movff	?i2___flmul,i2_scale$4142
 29229  01398C  C031  F04E         	movff	?i2___flmul+1,i2_scale$4142+1
 29230  013990  C032  F04F         	movff	?i2___flmul+2,i2_scale$4142+2
 29231  013994  C033  F050         	movff	?i2___flmul+3,i2_scale$4142+3
 29232                           
 29233                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 29234  013998  C04D  F030         	movff	i2_scale$4142,i2___flmul@b
 29235  01399C  C04E  F031         	movff	i2_scale$4142+1,i2___flmul@b+1
 29236  0139A0  C04F  F032         	movff	i2_scale$4142+2,i2___flmul@b+2
 29237  0139A4  C050  F033         	movff	i2_scale$4142+3,i2___flmul@b+3
 29238  0139A8  0E00               	movlw	0
 29239  0139AA  6E04               	movwf	i2___awmod@divisor+1,c
 29240  0139AC  0E0A               	movlw	10
 29241  0139AE  6E03               	movwf	i2___awmod@divisor,c
 29242  0139B0  5051               	movf	i2scale@scl,w,c
 29243  0139B2  6E01               	movwf	i2___awmod@dividend,c
 29244  0139B4  6A02               	clrf	i2___awmod@dividend+1,c
 29245  0139B6  BE01               	btfsc	i2___awmod@dividend,7,c
 29246  0139B8  0602               	decf	i2___awmod@dividend+1,f,c
 29247  0139BA  EC1B  F0BF         	call	i2___awmod	;wreg free
 29248  0139BE  90D8               	bcf	status,0,c
 29249  0139C0  3601               	rlcf	?i2___awmod,f,c
 29250  0139C2  3602               	rlcf	?i2___awmod+1,f,c
 29251  0139C4  90D8               	bcf	status,0,c
 29252  0139C6  3601               	rlcf	?i2___awmod,f,c
 29253  0139C8  3602               	rlcf	?i2___awmod+1,f,c
 29254  0139CA  0EF7               	movlw	low __npowers_
 29255  0139CC  2401               	addwf	?i2___awmod,w,c
 29256  0139CE  6EF6               	movwf	tblptrl,c
 29257  0139D0  0EE8               	movlw	high __npowers_
 29258  0139D2  2002               	addwfc	?i2___awmod+1,w,c
 29259  0139D4  6EF7               	movwf	tblptrh,c
 29260  0139D6                     	if	1	;There are 3 active tblptr bytes
 29261  0139D6  6AF8               	clrf	tblptru,c
 29262  0139D8  0E00               	movlw	low (__mediumconst shr (0+16))
 29263  0139DA  22F8               	addwfc	tblptru,f,c
 29264  0139DC                     	endif
 29265  0139DC  0009               	tblrd		*+
 29266  0139DE  CFF5 F034          	movff	tablat,i2___flmul@a
 29267  0139E2  0009               	tblrd		*+
 29268  0139E4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29269  0139E8  0009               	tblrd		*+
 29270  0139EA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29271  0139EE  000A               	tblrd		*-
 29272  0139F0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29273  0139F4  ECF8  F0A1         	call	i2___flmul	;wreg free
 29274  0139F8  C030  F049         	movff	?i2___flmul,?i2_scale
 29275  0139FC  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 29276  013A00  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 29277  013A04  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 29278  013A08  0012               	return	
 29279  013A0A                     i2l1391:
 29280                           
 29281                           ;doprnt.c: 432: else if(scl > 10)
 29282  013A0A  5051               	movf	i2scale@scl,w,c
 29283  013A0C  0A80               	xorlw	128
 29284  013A0E  0F75               	addlw	-139
 29285  013A10  A0D8               	btfss	status,0,c
 29286  013A12  D05B               	goto	i2l1394
 29287                           
 29288                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 29289  013A14  0E00               	movlw	0
 29290  013A16  6E0A               	movwf	i2___awdiv@divisor+1,c
 29291  013A18  0E0A               	movlw	10
 29292  013A1A  6E09               	movwf	i2___awdiv@divisor,c
 29293  013A1C  5051               	movf	i2scale@scl,w,c
 29294  013A1E  6E07               	movwf	i2___awdiv@dividend,c
 29295  013A20  6A08               	clrf	i2___awdiv@dividend+1,c
 29296  013A22  BE07               	btfsc	i2___awdiv@dividend,7,c
 29297  013A24  0608               	decf	i2___awdiv@dividend+1,f,c
 29298  013A26  ECE4  F0BD         	call	i2___awdiv	;wreg free
 29299  013A2A  90D8               	bcf	status,0,c
 29300  013A2C  3607               	rlcf	?i2___awdiv,f,c
 29301  013A2E  3608               	rlcf	?i2___awdiv+1,f,c
 29302  013A30  90D8               	bcf	status,0,c
 29303  013A32  3607               	rlcf	?i2___awdiv,f,c
 29304  013A34  3608               	rlcf	?i2___awdiv+1,f,c
 29305  013A36  0E24               	movlw	36
 29306  013A38  2607               	addwf	?i2___awdiv,f,c
 29307  013A3A  0E00               	movlw	0
 29308  013A3C  2208               	addwfc	?i2___awdiv+1,f,c
 29309  013A3E  0EF7               	movlw	low __npowers_
 29310  013A40  2407               	addwf	?i2___awdiv,w,c
 29311  013A42  6EF6               	movwf	tblptrl,c
 29312  013A44  0EE8               	movlw	high __npowers_
 29313  013A46  2008               	addwfc	?i2___awdiv+1,w,c
 29314  013A48  6EF7               	movwf	tblptrh,c
 29315  013A4A                     	if	1	;There are 3 active tblptr bytes
 29316  013A4A  6AF8               	clrf	tblptru,c
 29317  013A4C  0E00               	movlw	low (__mediumconst shr (0+16))
 29318  013A4E  22F8               	addwfc	tblptru,f,c
 29319  013A50                     	endif
 29320  013A50  0009               	tblrd		*+
 29321  013A52  CFF5 F030          	movff	tablat,i2___flmul@b
 29322  013A56  0009               	tblrd		*+
 29323  013A58  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29324  013A5C  0009               	tblrd		*+
 29325  013A5E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29326  013A62  000A               	tblrd		*-
 29327  013A64  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29328  013A68  0E00               	movlw	0
 29329  013A6A  6E04               	movwf	i2___awmod@divisor+1,c
 29330  013A6C  0E0A               	movlw	10
 29331  013A6E  6E03               	movwf	i2___awmod@divisor,c
 29332  013A70  5051               	movf	i2scale@scl,w,c
 29333  013A72  6E01               	movwf	i2___awmod@dividend,c
 29334  013A74  6A02               	clrf	i2___awmod@dividend+1,c
 29335  013A76  BE01               	btfsc	i2___awmod@dividend,7,c
 29336  013A78  0602               	decf	i2___awmod@dividend+1,f,c
 29337  013A7A  EC1B  F0BF         	call	i2___awmod	;wreg free
 29338  013A7E  90D8               	bcf	status,0,c
 29339  013A80  3601               	rlcf	?i2___awmod,f,c
 29340  013A82  3602               	rlcf	?i2___awmod+1,f,c
 29341  013A84  90D8               	bcf	status,0,c
 29342  013A86  3601               	rlcf	?i2___awmod,f,c
 29343  013A88  3602               	rlcf	?i2___awmod+1,f,c
 29344  013A8A  0EF7               	movlw	low __npowers_
 29345  013A8C  2401               	addwf	?i2___awmod,w,c
 29346  013A8E  6EF6               	movwf	tblptrl,c
 29347  013A90  0EE8               	movlw	high __npowers_
 29348  013A92  2002               	addwfc	?i2___awmod+1,w,c
 29349  013A94  6EF7               	movwf	tblptrh,c
 29350  013A96                     	if	1	;There are 3 active tblptr bytes
 29351  013A96  6AF8               	clrf	tblptru,c
 29352  013A98  0E00               	movlw	low (__mediumconst shr (0+16))
 29353  013A9A  22F8               	addwfc	tblptru,f,c
 29354  013A9C                     	endif
 29355  013A9C  0009               	tblrd		*+
 29356  013A9E  CFF5 F034          	movff	tablat,i2___flmul@a
 29357  013AA2  0009               	tblrd		*+
 29358  013AA4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29359  013AA8  0009               	tblrd		*+
 29360  013AAA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29361  013AAE  000A               	tblrd		*-
 29362  013AB0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29363  013AB4  ECF8  F0A1         	call	i2___flmul	;wreg free
 29364  013AB8  C030  F049         	movff	?i2___flmul,?i2_scale
 29365  013ABC  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 29366  013AC0  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 29367  013AC4  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 29368  013AC8  0012               	return	
 29369  013ACA                     i2l1394:
 29370                           
 29371                           ;doprnt.c: 434: return _npowers_[scl];
 29372  013ACA  5051               	movf	i2scale@scl,w,c
 29373  013ACC  0D04               	mullw	4
 29374  013ACE  0EF7               	movlw	low __npowers_
 29375  013AD0  24F3               	addwf	prodl,w,c
 29376  013AD2  6EF6               	movwf	tblptrl,c
 29377  013AD4  0EE8               	movlw	high __npowers_
 29378  013AD6  20F4               	addwfc	prodh,w,c
 29379  013AD8  6EF7               	movwf	tblptrh,c
 29380  013ADA                     	if	1	;There are 3 active tblptr bytes
 29381  013ADA  6AF8               	clrf	tblptru,c
 29382  013ADC  0E00               	movlw	low (__mediumconst shr (0+16))
 29383  013ADE  22F8               	addwfc	tblptru,f,c
 29384  013AE0                     	endif
 29385  013AE0  0009               	tblrd		*+
 29386  013AE2  CFF5 F049          	movff	tablat,?i2_scale
 29387  013AE6  0009               	tblrd		*+
 29388  013AE8  CFF5 F04A          	movff	tablat,?i2_scale+1
 29389  013AEC  0009               	tblrd		*+
 29390  013AEE  CFF5 F04B          	movff	tablat,?i2_scale+2
 29391  013AF2  000A               	tblrd		*-
 29392  013AF4  CFF5 F04C          	movff	tablat,?i2_scale+3
 29393  013AF8  0012               	return	
 29394  013AFA                     i2l1390:
 29395                           
 29396                           ;doprnt.c: 435: }
 29397                           ;doprnt.c: 436: if(scl>=110)
 29398  013AFA  5051               	movf	i2scale@scl,w,c
 29399  013AFC  0A80               	xorlw	128
 29400  013AFE  0F12               	addlw	-238
 29401  013B00  A0D8               	btfss	status,0,c
 29402  013B02  D0A1               	goto	i2l1395
 29403                           
 29404                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 29405  013B04  0E00               	movlw	0
 29406  013B06  6E0A               	movwf	i2___awdiv@divisor+1,c
 29407  013B08  0E0A               	movlw	10
 29408  013B0A  6E09               	movwf	i2___awdiv@divisor,c
 29409  013B0C  0E00               	movlw	0
 29410  013B0E  6E04               	movwf	i2___awmod@divisor+1,c
 29411  013B10  0E64               	movlw	100
 29412  013B12  6E03               	movwf	i2___awmod@divisor,c
 29413  013B14  5051               	movf	i2scale@scl,w,c
 29414  013B16  6E01               	movwf	i2___awmod@dividend,c
 29415  013B18  6A02               	clrf	i2___awmod@dividend+1,c
 29416  013B1A  BE01               	btfsc	i2___awmod@dividend,7,c
 29417  013B1C  0602               	decf	i2___awmod@dividend+1,f,c
 29418  013B1E  EC1B  F0BF         	call	i2___awmod	;wreg free
 29419  013B22  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 29420  013B26  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 29421  013B2A  ECE4  F0BD         	call	i2___awdiv	;wreg free
 29422  013B2E  90D8               	bcf	status,0,c
 29423  013B30  3607               	rlcf	?i2___awdiv,f,c
 29424  013B32  3608               	rlcf	?i2___awdiv+1,f,c
 29425  013B34  90D8               	bcf	status,0,c
 29426  013B36  3607               	rlcf	?i2___awdiv,f,c
 29427  013B38  3608               	rlcf	?i2___awdiv+1,f,c
 29428  013B3A  0E24               	movlw	36
 29429  013B3C  2607               	addwf	?i2___awdiv,f,c
 29430  013B3E  0E00               	movlw	0
 29431  013B40  2208               	addwfc	?i2___awdiv+1,f,c
 29432  013B42  0EC3               	movlw	low __powers_
 29433  013B44  2407               	addwf	?i2___awdiv,w,c
 29434  013B46  6EF6               	movwf	tblptrl,c
 29435  013B48  0EE8               	movlw	high __powers_
 29436  013B4A  2008               	addwfc	?i2___awdiv+1,w,c
 29437  013B4C  6EF7               	movwf	tblptrh,c
 29438  013B4E                     	if	1	;There are 3 active tblptr bytes
 29439  013B4E  6AF8               	clrf	tblptru,c
 29440  013B50  0E00               	movlw	low (__mediumconst shr (0+16))
 29441  013B52  22F8               	addwfc	tblptru,f,c
 29442  013B54                     	endif
 29443  013B54  0009               	tblrd		*+
 29444  013B56  CFF5 F034          	movff	tablat,i2___flmul@a
 29445  013B5A  0009               	tblrd		*+
 29446  013B5C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29447  013B60  0009               	tblrd		*+
 29448  013B62  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29449  013B66  000A               	tblrd		*-
 29450  013B68  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29451  013B6C  0E00               	movlw	0
 29452  013B6E  6E0A               	movwf	i2___awdiv@divisor+1,c
 29453  013B70  0E64               	movlw	100
 29454  013B72  6E09               	movwf	i2___awdiv@divisor,c
 29455  013B74  5051               	movf	i2scale@scl,w,c
 29456  013B76  6E07               	movwf	i2___awdiv@dividend,c
 29457  013B78  6A08               	clrf	i2___awdiv@dividend+1,c
 29458  013B7A  BE07               	btfsc	i2___awdiv@dividend,7,c
 29459  013B7C  0608               	decf	i2___awdiv@dividend+1,f,c
 29460  013B7E  ECE4  F0BD         	call	i2___awdiv	;wreg free
 29461  013B82  90D8               	bcf	status,0,c
 29462  013B84  3607               	rlcf	?i2___awdiv,f,c
 29463  013B86  3608               	rlcf	?i2___awdiv+1,f,c
 29464  013B88  90D8               	bcf	status,0,c
 29465  013B8A  3607               	rlcf	?i2___awdiv,f,c
 29466  013B8C  3608               	rlcf	?i2___awdiv+1,f,c
 29467  013B8E  0E48               	movlw	72
 29468  013B90  2607               	addwf	?i2___awdiv,f,c
 29469  013B92  0E00               	movlw	0
 29470  013B94  2208               	addwfc	?i2___awdiv+1,f,c
 29471  013B96  0EC3               	movlw	low __powers_
 29472  013B98  2407               	addwf	?i2___awdiv,w,c
 29473  013B9A  6EF6               	movwf	tblptrl,c
 29474  013B9C  0EE8               	movlw	high __powers_
 29475  013B9E  2008               	addwfc	?i2___awdiv+1,w,c
 29476  013BA0  6EF7               	movwf	tblptrh,c
 29477  013BA2                     	if	1	;There are 3 active tblptr bytes
 29478  013BA2  6AF8               	clrf	tblptru,c
 29479  013BA4  0E00               	movlw	low (__mediumconst shr (0+16))
 29480  013BA6  22F8               	addwfc	tblptru,f,c
 29481  013BA8                     	endif
 29482  013BA8  0009               	tblrd		*+
 29483  013BAA  CFF5 F030          	movff	tablat,i2___flmul@b
 29484  013BAE  0009               	tblrd		*+
 29485  013BB0  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29486  013BB4  0009               	tblrd		*+
 29487  013BB6  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29488  013BBA  000A               	tblrd		*-
 29489  013BBC  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29490  013BC0  ECF8  F0A1         	call	i2___flmul	;wreg free
 29491  013BC4  C030  F04D         	movff	?i2___flmul,i2_scale$4142
 29492  013BC8  C031  F04E         	movff	?i2___flmul+1,i2_scale$4142+1
 29493  013BCC  C032  F04F         	movff	?i2___flmul+2,i2_scale$4142+2
 29494  013BD0  C033  F050         	movff	?i2___flmul+3,i2_scale$4142+3
 29495                           
 29496                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 29497  013BD4  C04D  F030         	movff	i2_scale$4142,i2___flmul@b
 29498  013BD8  C04E  F031         	movff	i2_scale$4142+1,i2___flmul@b+1
 29499  013BDC  C04F  F032         	movff	i2_scale$4142+2,i2___flmul@b+2
 29500  013BE0  C050  F033         	movff	i2_scale$4142+3,i2___flmul@b+3
 29501  013BE4  0E00               	movlw	0
 29502  013BE6  6E04               	movwf	i2___awmod@divisor+1,c
 29503  013BE8  0E0A               	movlw	10
 29504  013BEA  6E03               	movwf	i2___awmod@divisor,c
 29505  013BEC  5051               	movf	i2scale@scl,w,c
 29506  013BEE  6E01               	movwf	i2___awmod@dividend,c
 29507  013BF0  6A02               	clrf	i2___awmod@dividend+1,c
 29508  013BF2  BE01               	btfsc	i2___awmod@dividend,7,c
 29509  013BF4  0602               	decf	i2___awmod@dividend+1,f,c
 29510  013BF6  EC1B  F0BF         	call	i2___awmod	;wreg free
 29511  013BFA  90D8               	bcf	status,0,c
 29512  013BFC  3601               	rlcf	?i2___awmod,f,c
 29513  013BFE  3602               	rlcf	?i2___awmod+1,f,c
 29514  013C00  90D8               	bcf	status,0,c
 29515  013C02  3601               	rlcf	?i2___awmod,f,c
 29516  013C04  3602               	rlcf	?i2___awmod+1,f,c
 29517  013C06  0EC3               	movlw	low __powers_
 29518  013C08  2401               	addwf	?i2___awmod,w,c
 29519  013C0A  6EF6               	movwf	tblptrl,c
 29520  013C0C  0EE8               	movlw	high __powers_
 29521  013C0E  2002               	addwfc	?i2___awmod+1,w,c
 29522  013C10  6EF7               	movwf	tblptrh,c
 29523  013C12                     	if	1	;There are 3 active tblptr bytes
 29524  013C12  6AF8               	clrf	tblptru,c
 29525  013C14  0E00               	movlw	low (__mediumconst shr (0+16))
 29526  013C16  22F8               	addwfc	tblptru,f,c
 29527  013C18                     	endif
 29528  013C18  0009               	tblrd		*+
 29529  013C1A  CFF5 F034          	movff	tablat,i2___flmul@a
 29530  013C1E  0009               	tblrd		*+
 29531  013C20  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29532  013C24  0009               	tblrd		*+
 29533  013C26  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29534  013C2A  000A               	tblrd		*-
 29535  013C2C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29536  013C30  ECF8  F0A1         	call	i2___flmul	;wreg free
 29537  013C34  C030  F049         	movff	?i2___flmul,?i2_scale
 29538  013C38  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 29539  013C3C  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 29540  013C40  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 29541  013C44  0012               	return	
 29542  013C46                     i2l1395:
 29543                           
 29544                           ;doprnt.c: 438: else if(scl > 10)
 29545  013C46  5051               	movf	i2scale@scl,w,c
 29546  013C48  0A80               	xorlw	128
 29547  013C4A  0F75               	addlw	-139
 29548  013C4C  A0D8               	btfss	status,0,c
 29549  013C4E  D05B               	goto	i2l1397
 29550                           
 29551                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 29552  013C50  0E00               	movlw	0
 29553  013C52  6E0A               	movwf	i2___awdiv@divisor+1,c
 29554  013C54  0E0A               	movlw	10
 29555  013C56  6E09               	movwf	i2___awdiv@divisor,c
 29556  013C58  5051               	movf	i2scale@scl,w,c
 29557  013C5A  6E07               	movwf	i2___awdiv@dividend,c
 29558  013C5C  6A08               	clrf	i2___awdiv@dividend+1,c
 29559  013C5E  BE07               	btfsc	i2___awdiv@dividend,7,c
 29560  013C60  0608               	decf	i2___awdiv@dividend+1,f,c
 29561  013C62  ECE4  F0BD         	call	i2___awdiv	;wreg free
 29562  013C66  90D8               	bcf	status,0,c
 29563  013C68  3607               	rlcf	?i2___awdiv,f,c
 29564  013C6A  3608               	rlcf	?i2___awdiv+1,f,c
 29565  013C6C  90D8               	bcf	status,0,c
 29566  013C6E  3607               	rlcf	?i2___awdiv,f,c
 29567  013C70  3608               	rlcf	?i2___awdiv+1,f,c
 29568  013C72  0E24               	movlw	36
 29569  013C74  2607               	addwf	?i2___awdiv,f,c
 29570  013C76  0E00               	movlw	0
 29571  013C78  2208               	addwfc	?i2___awdiv+1,f,c
 29572  013C7A  0EC3               	movlw	low __powers_
 29573  013C7C  2407               	addwf	?i2___awdiv,w,c
 29574  013C7E  6EF6               	movwf	tblptrl,c
 29575  013C80  0EE8               	movlw	high __powers_
 29576  013C82  2008               	addwfc	?i2___awdiv+1,w,c
 29577  013C84  6EF7               	movwf	tblptrh,c
 29578  013C86                     	if	1	;There are 3 active tblptr bytes
 29579  013C86  6AF8               	clrf	tblptru,c
 29580  013C88  0E00               	movlw	low (__mediumconst shr (0+16))
 29581  013C8A  22F8               	addwfc	tblptru,f,c
 29582  013C8C                     	endif
 29583  013C8C  0009               	tblrd		*+
 29584  013C8E  CFF5 F030          	movff	tablat,i2___flmul@b
 29585  013C92  0009               	tblrd		*+
 29586  013C94  CFF5 F031          	movff	tablat,i2___flmul@b+1
 29587  013C98  0009               	tblrd		*+
 29588  013C9A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 29589  013C9E  000A               	tblrd		*-
 29590  013CA0  CFF5 F033          	movff	tablat,i2___flmul@b+3
 29591  013CA4  0E00               	movlw	0
 29592  013CA6  6E04               	movwf	i2___awmod@divisor+1,c
 29593  013CA8  0E0A               	movlw	10
 29594  013CAA  6E03               	movwf	i2___awmod@divisor,c
 29595  013CAC  5051               	movf	i2scale@scl,w,c
 29596  013CAE  6E01               	movwf	i2___awmod@dividend,c
 29597  013CB0  6A02               	clrf	i2___awmod@dividend+1,c
 29598  013CB2  BE01               	btfsc	i2___awmod@dividend,7,c
 29599  013CB4  0602               	decf	i2___awmod@dividend+1,f,c
 29600  013CB6  EC1B  F0BF         	call	i2___awmod	;wreg free
 29601  013CBA  90D8               	bcf	status,0,c
 29602  013CBC  3601               	rlcf	?i2___awmod,f,c
 29603  013CBE  3602               	rlcf	?i2___awmod+1,f,c
 29604  013CC0  90D8               	bcf	status,0,c
 29605  013CC2  3601               	rlcf	?i2___awmod,f,c
 29606  013CC4  3602               	rlcf	?i2___awmod+1,f,c
 29607  013CC6  0EC3               	movlw	low __powers_
 29608  013CC8  2401               	addwf	?i2___awmod,w,c
 29609  013CCA  6EF6               	movwf	tblptrl,c
 29610  013CCC  0EE8               	movlw	high __powers_
 29611  013CCE  2002               	addwfc	?i2___awmod+1,w,c
 29612  013CD0  6EF7               	movwf	tblptrh,c
 29613  013CD2                     	if	1	;There are 3 active tblptr bytes
 29614  013CD2  6AF8               	clrf	tblptru,c
 29615  013CD4  0E00               	movlw	low (__mediumconst shr (0+16))
 29616  013CD6  22F8               	addwfc	tblptru,f,c
 29617  013CD8                     	endif
 29618  013CD8  0009               	tblrd		*+
 29619  013CDA  CFF5 F034          	movff	tablat,i2___flmul@a
 29620  013CDE  0009               	tblrd		*+
 29621  013CE0  CFF5 F035          	movff	tablat,i2___flmul@a+1
 29622  013CE4  0009               	tblrd		*+
 29623  013CE6  CFF5 F036          	movff	tablat,i2___flmul@a+2
 29624  013CEA  000A               	tblrd		*-
 29625  013CEC  CFF5 F037          	movff	tablat,i2___flmul@a+3
 29626  013CF0  ECF8  F0A1         	call	i2___flmul	;wreg free
 29627  013CF4  C030  F049         	movff	?i2___flmul,?i2_scale
 29628  013CF8  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 29629  013CFC  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 29630  013D00  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 29631  013D04  0012               	return	
 29632  013D06                     i2l1397:
 29633                           
 29634                           ;doprnt.c: 440: return _powers_[scl];
 29635  013D06  5051               	movf	i2scale@scl,w,c
 29636  013D08  0D04               	mullw	4
 29637  013D0A  0EC3               	movlw	low __powers_
 29638  013D0C  24F3               	addwf	prodl,w,c
 29639  013D0E  6EF6               	movwf	tblptrl,c
 29640  013D10  0EE8               	movlw	high __powers_
 29641  013D12  20F4               	addwfc	prodh,w,c
 29642  013D14  6EF7               	movwf	tblptrh,c
 29643  013D16                     	if	1	;There are 3 active tblptr bytes
 29644  013D16  6AF8               	clrf	tblptru,c
 29645  013D18  0E00               	movlw	low (__mediumconst shr (0+16))
 29646  013D1A  22F8               	addwfc	tblptru,f,c
 29647  013D1C                     	endif
 29648  013D1C  0009               	tblrd		*+
 29649  013D1E  CFF5 F049          	movff	tablat,?i2_scale
 29650  013D22  0009               	tblrd		*+
 29651  013D24  CFF5 F04A          	movff	tablat,?i2_scale+1
 29652  013D28  0009               	tblrd		*+
 29653  013D2A  CFF5 F04B          	movff	tablat,?i2_scale+2
 29654  013D2E  000A               	tblrd		*-
 29655  013D30  CFF5 F04C          	movff	tablat,?i2_scale+3
 29656  013D34  0012               	return	
 29657  013D36                     __end_ofi2_scale:
 29658                           	opt stack 0
 29659                           tosu	equ	0xFFF
 29660                           tosh	equ	0xFFE
 29661                           tosl	equ	0xFFD
 29662                           pclatu	equ	0xFFB
 29663                           pclath	equ	0xFFA
 29664                           tblptru	equ	0xFF8
 29665                           tblptrh	equ	0xFF7
 29666                           tblptrl	equ	0xFF6
 29667                           tablat	equ	0xFF5
 29668                           prodh	equ	0xFF4
 29669                           prodl	equ	0xFF3
 29670                           intcon	equ	0xFF2
 29671                           indf0	equ	0xFEF
 29672                           postinc0	equ	0xFEE
 29673                           fsr0h	equ	0xFEA
 29674                           fsr0l	equ	0xFE9
 29675                           wreg	equ	0xFE8
 29676                           indf1	equ	0xFE7
 29677                           postdec1	equ	0xFE5
 29678                           plusw1	equ	0xFE3
 29679                           fsr1h	equ	0xFE2
 29680                           fsr1l	equ	0xFE1
 29681                           bsr	equ	0xFE0
 29682                           indf2	equ	0xFDF
 29683                           postinc2	equ	0xFDE
 29684                           postdec2	equ	0xFDD
 29685                           plusw2	equ	0xFDB
 29686                           fsr2h	equ	0xFDA
 29687                           fsr2l	equ	0xFD9
 29688                           status	equ	0xFD8
 29689                           
 29690 ;; *************** function i2_putch *****************
 29691 ;; Defined at:
 29692 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 29693 ;; Parameters:    Size  Location     Type
 29694 ;;  txData          1    wreg     unsigned char 
 29695 ;; Auto vars:     Size  Location     Type
 29696 ;;  txData          1    1[COMRAM] unsigned char 
 29697 ;; Return value:  Size  Location     Type
 29698 ;;                  1    wreg      void 
 29699 ;; Registers used:
 29700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29701 ;; Tracked objects:
 29702 ;;		On entry : 0/0
 29703 ;;		On exit  : 0/0
 29704 ;;		Unchanged: 0/0
 29705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29710 ;;Total ram usage:        1 bytes
 29711 ;; Hardware stack levels used:    1
 29712 ;; Hardware stack levels required when called:    1
 29713 ;; This function calls:
 29714 ;;		i2_EUSART2_Write
 29715 ;; This function is called by:
 29716 ;;		i2_printf
 29717 ;; This function uses a non-reentrant model
 29718 ;;
 29719                           
 29720                           	psect	text91
 29721  018C14                     __ptext91:
 29722                           	opt stack 0
 29723  018C14                     i2_putch:
 29724                           	opt stack 15
 29725                           
 29726                           ;incstack = 0
 29727                           ;i2putch@txData stored from wreg
 29728  018C14  6E02               	movwf	i2putch@txData,c
 29729                           
 29730                           ;eusart2.c: 195: EUSART2_Write(txData);
 29731  018C16  5002               	movf	i2putch@txData,w,c
 29732  018C18  EC20  F0C2         	call	i2_EUSART2_Write
 29733  018C1C  0012               	return		;funcret
 29734  018C1E                     __end_ofi2_putch:
 29735                           	opt stack 0
 29736                           tosu	equ	0xFFF
 29737                           tosh	equ	0xFFE
 29738                           tosl	equ	0xFFD
 29739                           pclatu	equ	0xFFB
 29740                           pclath	equ	0xFFA
 29741                           tblptru	equ	0xFF8
 29742                           tblptrh	equ	0xFF7
 29743                           tblptrl	equ	0xFF6
 29744                           tablat	equ	0xFF5
 29745                           prodh	equ	0xFF4
 29746                           prodl	equ	0xFF3
 29747                           intcon	equ	0xFF2
 29748                           indf0	equ	0xFEF
 29749                           postinc0	equ	0xFEE
 29750                           fsr0h	equ	0xFEA
 29751                           fsr0l	equ	0xFE9
 29752                           wreg	equ	0xFE8
 29753                           indf1	equ	0xFE7
 29754                           postdec1	equ	0xFE5
 29755                           plusw1	equ	0xFE3
 29756                           fsr1h	equ	0xFE2
 29757                           fsr1l	equ	0xFE1
 29758                           bsr	equ	0xFE0
 29759                           indf2	equ	0xFDF
 29760                           postinc2	equ	0xFDE
 29761                           postdec2	equ	0xFDD
 29762                           plusw2	equ	0xFDB
 29763                           fsr2h	equ	0xFDA
 29764                           fsr2l	equ	0xFD9
 29765                           status	equ	0xFD8
 29766                           
 29767 ;; *************** function i2_EUSART2_Write *****************
 29768 ;; Defined at:
 29769 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 29770 ;; Parameters:    Size  Location     Type
 29771 ;;  txData          1    wreg     unsigned char 
 29772 ;; Auto vars:     Size  Location     Type
 29773 ;;  txData          1    0[COMRAM] unsigned char 
 29774 ;; Return value:  Size  Location     Type
 29775 ;;                  1    wreg      void 
 29776 ;; Registers used:
 29777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29778 ;; Tracked objects:
 29779 ;;		On entry : 0/0
 29780 ;;		On exit  : 0/0
 29781 ;;		Unchanged: 0/0
 29782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29787 ;;Total ram usage:        1 bytes
 29788 ;; Hardware stack levels used:    1
 29789 ;; This function calls:
 29790 ;;		Nothing
 29791 ;; This function is called by:
 29792 ;;		i2_putch
 29793 ;; This function uses a non-reentrant model
 29794 ;;
 29795                           
 29796                           	psect	text92
 29797  018440                     __ptext92:
 29798                           	opt stack 0
 29799  018440                     i2_EUSART2_Write:
 29800                           	opt stack 15
 29801                           
 29802                           ;incstack = 0
 29803                           ;i2EUSART2_Write@txData stored from wreg
 29804  018440  6E01               	movwf	i2EUSART2_Write@txData,c
 29805                           
 29806                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 29807  018442  D002               	goto	i2l388
 29808  018444                     i2l389:
 29809                           
 29810                           ; BSR set to: 1
 29811  018444  0004               	clrwdt		;# 
 29812                           
 29813                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 29814  018446  827E               	bsf	3966,1,c	;volatile
 29815  018448                     i2l388:
 29816  018448  0101               	movlb	1	; () banked
 29817  01844A  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 29818  01844C  B4D8               	btfsc	status,2,c
 29819  01844E  D7FA               	goto	i2l389
 29820                           
 29821                           ; BSR set to: 1
 29822                           ;eusart2.c: 167: }
 29823                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 29824  018450  927E               	bcf	3966,1,c	;volatile
 29825                           
 29826                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 29827  018452  010E               	movlb	14	; () banked
 29828  018454  BD2C               	btfsc	44,6,b	;volatile
 29829  018456  D003               	goto	i2l391
 29830                           
 29831                           ; BSR set to: 14
 29832                           ;eusart2.c: 172: {
 29833                           ;eusart2.c: 173: TX2REG = txData;
 29834  018458  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 29835                           
 29836                           ;eusart2.c: 174: }
 29837  01845C  D013               	goto	i2l392
 29838  01845E                     i2l391:
 29839                           
 29840                           ; BSR set to: 14
 29841                           ;eusart2.c: 175: else
 29842                           ;eusart2.c: 176: {
 29843                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 29844  01845E  9D2C               	bcf	44,6,b	;volatile
 29845                           
 29846                           ; BSR set to: 14
 29847                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 29848  018460  0101               	movlb	1	; () banked
 29849  018462  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 29850  018464  0D01               	mullw	1
 29851  018466  0E00               	movlw	low _eusart2TxBuffer
 29852  018468  24F3               	addwf	prodl,w,c
 29853  01846A  6ED9               	movwf	fsr2l,c
 29854  01846C  0E03               	movlw	high _eusart2TxBuffer
 29855  01846E  20F4               	addwfc	prodh,w,c
 29856  018470  6EDA               	movwf	fsr2h,c
 29857  018472  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 29858                           
 29859                           ; BSR set to: 1
 29860  018476  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 29861                           
 29862                           ; BSR set to: 1
 29863                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 29864  018478  0E7F               	movlw	127
 29865  01847A  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 29866  01847C  D002               	goto	i2l393
 29867                           
 29868                           ; BSR set to: 1
 29869                           ;eusart2.c: 180: {
 29870                           ;eusart2.c: 181: eusart2TxHead = 0;
 29871  01847E  0E00               	movlw	0
 29872  018480  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 29873  018482                     i2l393:
 29874                           
 29875                           ; BSR set to: 1
 29876                           ;eusart2.c: 182: }
 29877                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 29878                           
 29879                           ; BSR set to: 1
 29880  018482  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 29881  018484                     i2l392:
 29882                           
 29883                           ;eusart2.c: 184: }
 29884                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 29885                           
 29886                           ; BSR set to: 1
 29887  018484  010E               	movlb	14	; () banked
 29888  018486  8D2C               	bsf	44,6,b	;volatile
 29889                           
 29890                           ; BSR set to: 14
 29891  018488  0012               	return		;funcret
 29892  01848A                     __end_ofi2_EUSART2_Write:
 29893                           	opt stack 0
 29894                           tosu	equ	0xFFF
 29895                           tosh	equ	0xFFE
 29896                           tosl	equ	0xFFD
 29897                           pclatu	equ	0xFFB
 29898                           pclath	equ	0xFFA
 29899                           tblptru	equ	0xFF8
 29900                           tblptrh	equ	0xFF7
 29901                           tblptrl	equ	0xFF6
 29902                           tablat	equ	0xFF5
 29903                           prodh	equ	0xFF4
 29904                           prodl	equ	0xFF3
 29905                           intcon	equ	0xFF2
 29906                           indf0	equ	0xFEF
 29907                           postinc0	equ	0xFEE
 29908                           fsr0h	equ	0xFEA
 29909                           fsr0l	equ	0xFE9
 29910                           wreg	equ	0xFE8
 29911                           indf1	equ	0xFE7
 29912                           postdec1	equ	0xFE5
 29913                           plusw1	equ	0xFE3
 29914                           fsr1h	equ	0xFE2
 29915                           fsr1l	equ	0xFE1
 29916                           bsr	equ	0xFE0
 29917                           indf2	equ	0xFDF
 29918                           postinc2	equ	0xFDE
 29919                           postdec2	equ	0xFDD
 29920                           plusw2	equ	0xFDB
 29921                           fsr2h	equ	0xFDA
 29922                           fsr2l	equ	0xFD9
 29923                           status	equ	0xFD8
 29924                           
 29925 ;; *************** function i2_isdigit *****************
 29926 ;; Defined at:
 29927 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 29928 ;; Parameters:    Size  Location     Type
 29929 ;;  c               1    wreg     unsigned char 
 29930 ;; Auto vars:     Size  Location     Type
 29931 ;;  c               1    2[COMRAM] unsigned char 
 29932 ;; Return value:  Size  Location     Type
 29933 ;;		None               void
 29934 ;; Registers used:
 29935 ;;		wreg, status,2, status,0
 29936 ;; Tracked objects:
 29937 ;;		On entry : 0/0
 29938 ;;		On exit  : 0/0
 29939 ;;		Unchanged: 0/0
 29940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29944 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29945 ;;Total ram usage:        3 bytes
 29946 ;; Hardware stack levels used:    1
 29947 ;; This function calls:
 29948 ;;		Nothing
 29949 ;; This function is called by:
 29950 ;;		i2_printf
 29951 ;; This function uses a non-reentrant model
 29952 ;;
 29953                           
 29954                           	psect	text93
 29955  018A52                     __ptext93:
 29956                           	opt stack 0
 29957  018A52                     i2_isdigit:
 29958                           	opt stack 16
 29959                           
 29960                           ; BSR set to: 14
 29961                           ;incstack = 0
 29962                           ;i2isdigit@c stored from wreg
 29963  018A52  6E03               	movwf	i2isdigit@c,c
 29964  018A54  0E00               	movlw	0
 29965  018A56  6E02               	movwf	i2_isdigit$3225,c
 29966  018A58  0E3A               	movlw	58
 29967  018A5A  6003               	cpfslt	i2isdigit@c,c
 29968  018A5C  D005               	goto	i2l1968
 29969  018A5E  0E2F               	movlw	47
 29970  018A60  6403               	cpfsgt	i2isdigit@c,c
 29971  018A62  D002               	goto	i2l1968
 29972  018A64  0E01               	movlw	1
 29973  018A66  6E02               	movwf	i2_isdigit$3225,c
 29974  018A68                     i2l1968:
 29975  018A68  C002  F001         	movff	i2_isdigit$3225,??i2_isdigit
 29976  018A6C  3001               	rrcf	??i2_isdigit,w,c
 29977  018A6E  0012               	return	
 29978  018A70                     __end_ofi2_isdigit:
 29979                           	opt stack 0
 29980                           tosu	equ	0xFFF
 29981                           tosh	equ	0xFFE
 29982                           tosl	equ	0xFFD
 29983                           pclatu	equ	0xFFB
 29984                           pclath	equ	0xFFA
 29985                           tblptru	equ	0xFF8
 29986                           tblptrh	equ	0xFF7
 29987                           tblptrl	equ	0xFF6
 29988                           tablat	equ	0xFF5
 29989                           prodh	equ	0xFF4
 29990                           prodl	equ	0xFF3
 29991                           intcon	equ	0xFF2
 29992                           indf0	equ	0xFEF
 29993                           postinc0	equ	0xFEE
 29994                           fsr0h	equ	0xFEA
 29995                           fsr0l	equ	0xFE9
 29996                           wreg	equ	0xFE8
 29997                           indf1	equ	0xFE7
 29998                           postdec1	equ	0xFE5
 29999                           plusw1	equ	0xFE3
 30000                           fsr1h	equ	0xFE2
 30001                           fsr1l	equ	0xFE1
 30002                           bsr	equ	0xFE0
 30003                           indf2	equ	0xFDF
 30004                           postinc2	equ	0xFDE
 30005                           postdec2	equ	0xFDD
 30006                           plusw2	equ	0xFDB
 30007                           fsr2h	equ	0xFDA
 30008                           fsr2l	equ	0xFD9
 30009                           status	equ	0xFD8
 30010                           
 30011 ;; *************** function i2_fround *****************
 30012 ;; Defined at:
 30013 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 30014 ;; Parameters:    Size  Location     Type
 30015 ;;  prec            1    wreg     unsigned char 
 30016 ;; Auto vars:     Size  Location     Type
 30017 ;;  prec            1   84[COMRAM] unsigned char 
 30018 ;; Return value:  Size  Location     Type
 30019 ;;                  4   72[COMRAM] unsigned char 
 30020 ;; Registers used:
 30021 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30022 ;; Tracked objects:
 30023 ;;		On entry : 0/0
 30024 ;;		On exit  : 0/0
 30025 ;;		Unchanged: 0/0
 30026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30028 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30030 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30031 ;;Total ram usage:       13 bytes
 30032 ;; Hardware stack levels used:    1
 30033 ;; Hardware stack levels required when called:    1
 30034 ;; This function calls:
 30035 ;;		i2___awdiv
 30036 ;;		i2___awmod
 30037 ;;		i2___flmul
 30038 ;; This function is called by:
 30039 ;;		i2_printf
 30040 ;; This function uses a non-reentrant model
 30041 ;;
 30042                           
 30043                           	psect	text94
 30044  015EB2                     __ptext94:
 30045                           	opt stack 0
 30046  015EB2                     i2_fround:
 30047                           	opt stack 15
 30048                           
 30049                           ;incstack = 0
 30050                           ;i2fround@prec stored from wreg
 30051  015EB2  6E55               	movwf	i2fround@prec,c
 30052                           
 30053                           ;doprnt.c: 413: if(prec>=110)
 30054  015EB4  0E6D               	movlw	109
 30055  015EB6  6455               	cpfsgt	i2fround@prec,c
 30056  015EB8  D0B5               	goto	i2l1384
 30057                           
 30058                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30059  015EBA  0E00               	movlw	0
 30060  015EBC  6E0A               	movwf	i2___awdiv@divisor+1,c
 30061  015EBE  0E0A               	movlw	10
 30062  015EC0  6E09               	movwf	i2___awdiv@divisor,c
 30063  015EC2  0E00               	movlw	0
 30064  015EC4  6E04               	movwf	i2___awmod@divisor+1,c
 30065  015EC6  0E64               	movlw	100
 30066  015EC8  6E03               	movwf	i2___awmod@divisor,c
 30067  015ECA  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 30068  015ECE  6A02               	clrf	i2___awmod@dividend+1,c
 30069  015ED0  EC1B  F0BF         	call	i2___awmod	;wreg free
 30070  015ED4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 30071  015ED8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 30072  015EDC  ECE4  F0BD         	call	i2___awdiv	;wreg free
 30073  015EE0  90D8               	bcf	status,0,c
 30074  015EE2  3607               	rlcf	?i2___awdiv,f,c
 30075  015EE4  3608               	rlcf	?i2___awdiv+1,f,c
 30076  015EE6  90D8               	bcf	status,0,c
 30077  015EE8  3607               	rlcf	?i2___awdiv,f,c
 30078  015EEA  3608               	rlcf	?i2___awdiv+1,f,c
 30079  015EEC  0E24               	movlw	36
 30080  015EEE  2607               	addwf	?i2___awdiv,f,c
 30081  015EF0  0E00               	movlw	0
 30082  015EF2  2208               	addwfc	?i2___awdiv+1,f,c
 30083  015EF4  0EF7               	movlw	low __npowers_
 30084  015EF6  2407               	addwf	?i2___awdiv,w,c
 30085  015EF8  6EF6               	movwf	tblptrl,c
 30086  015EFA  0EE8               	movlw	high __npowers_
 30087  015EFC  2008               	addwfc	?i2___awdiv+1,w,c
 30088  015EFE  6EF7               	movwf	tblptrh,c
 30089  015F00                     	if	1	;There are 3 active tblptr bytes
 30090  015F00  6AF8               	clrf	tblptru,c
 30091  015F02  0E00               	movlw	low (__mediumconst shr (0+16))
 30092  015F04  22F8               	addwfc	tblptru,f,c
 30093  015F06                     	endif
 30094  015F06  0009               	tblrd		*+
 30095  015F08  CFF5 F034          	movff	tablat,i2___flmul@a
 30096  015F0C  0009               	tblrd		*+
 30097  015F0E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 30098  015F12  0009               	tblrd		*+
 30099  015F14  CFF5 F036          	movff	tablat,i2___flmul@a+2
 30100  015F18  000A               	tblrd		*-
 30101  015F1A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 30102  015F1E  0E00               	movlw	0
 30103  015F20  6E0A               	movwf	i2___awdiv@divisor+1,c
 30104  015F22  0E64               	movlw	100
 30105  015F24  6E09               	movwf	i2___awdiv@divisor,c
 30106  015F26  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 30107  015F2A  6A08               	clrf	i2___awdiv@dividend+1,c
 30108  015F2C  ECE4  F0BD         	call	i2___awdiv	;wreg free
 30109  015F30  90D8               	bcf	status,0,c
 30110  015F32  3607               	rlcf	?i2___awdiv,f,c
 30111  015F34  3608               	rlcf	?i2___awdiv+1,f,c
 30112  015F36  90D8               	bcf	status,0,c
 30113  015F38  3607               	rlcf	?i2___awdiv,f,c
 30114  015F3A  3608               	rlcf	?i2___awdiv+1,f,c
 30115  015F3C  0E48               	movlw	72
 30116  015F3E  2607               	addwf	?i2___awdiv,f,c
 30117  015F40  0E00               	movlw	0
 30118  015F42  2208               	addwfc	?i2___awdiv+1,f,c
 30119  015F44  0EF7               	movlw	low __npowers_
 30120  015F46  2407               	addwf	?i2___awdiv,w,c
 30121  015F48  6EF6               	movwf	tblptrl,c
 30122  015F4A  0EE8               	movlw	high __npowers_
 30123  015F4C  2008               	addwfc	?i2___awdiv+1,w,c
 30124  015F4E  6EF7               	movwf	tblptrh,c
 30125  015F50                     	if	1	;There are 3 active tblptr bytes
 30126  015F50  6AF8               	clrf	tblptru,c
 30127  015F52  0E00               	movlw	low (__mediumconst shr (0+16))
 30128  015F54  22F8               	addwfc	tblptru,f,c
 30129  015F56                     	endif
 30130  015F56  0009               	tblrd		*+
 30131  015F58  CFF5 F030          	movff	tablat,i2___flmul@b
 30132  015F5C  0009               	tblrd		*+
 30133  015F5E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 30134  015F62  0009               	tblrd		*+
 30135  015F64  CFF5 F032          	movff	tablat,i2___flmul@b+2
 30136  015F68  000A               	tblrd		*-
 30137  015F6A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 30138  015F6E  ECF8  F0A1         	call	i2___flmul	;wreg free
 30139  015F72  C030  F051         	movff	?i2___flmul,i2_fround$4140
 30140  015F76  C031  F052         	movff	?i2___flmul+1,i2_fround$4140+1
 30141  015F7A  C032  F053         	movff	?i2___flmul+2,i2_fround$4140+2
 30142  015F7E  C033  F054         	movff	?i2___flmul+3,i2_fround$4140+3
 30143                           
 30144                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30145  015F82  0E00               	movlw	0
 30146  015F84  6E04               	movwf	i2___awmod@divisor+1,c
 30147  015F86  0E0A               	movlw	10
 30148  015F88  6E03               	movwf	i2___awmod@divisor,c
 30149  015F8A  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 30150  015F8E  6A02               	clrf	i2___awmod@dividend+1,c
 30151  015F90  EC1B  F0BF         	call	i2___awmod	;wreg free
 30152  015F94  90D8               	bcf	status,0,c
 30153  015F96  3601               	rlcf	?i2___awmod,f,c
 30154  015F98  3602               	rlcf	?i2___awmod+1,f,c
 30155  015F9A  90D8               	bcf	status,0,c
 30156  015F9C  3601               	rlcf	?i2___awmod,f,c
 30157  015F9E  3602               	rlcf	?i2___awmod+1,f,c
 30158  015FA0  0EF7               	movlw	low __npowers_
 30159  015FA2  2401               	addwf	?i2___awmod,w,c
 30160  015FA4  6EF6               	movwf	tblptrl,c
 30161  015FA6  0EE8               	movlw	high __npowers_
 30162  015FA8  2002               	addwfc	?i2___awmod+1,w,c
 30163  015FAA  6EF7               	movwf	tblptrh,c
 30164  015FAC                     	if	1	;There are 3 active tblptr bytes
 30165  015FAC  6AF8               	clrf	tblptru,c
 30166  015FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 30167  015FB0  22F8               	addwfc	tblptru,f,c
 30168  015FB2                     	endif
 30169  015FB2  0009               	tblrd		*+
 30170  015FB4  CFF5 F034          	movff	tablat,i2___flmul@a
 30171  015FB8  0009               	tblrd		*+
 30172  015FBA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 30173  015FBE  0009               	tblrd		*+
 30174  015FC0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 30175  015FC4  000A               	tblrd		*-
 30176  015FC6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 30177  015FCA  C051  F030         	movff	i2_fround$4140,i2___flmul@b
 30178  015FCE  C052  F031         	movff	i2_fround$4140+1,i2___flmul@b+1
 30179  015FD2  C053  F032         	movff	i2_fround$4140+2,i2___flmul@b+2
 30180  015FD6  C054  F033         	movff	i2_fround$4140+3,i2___flmul@b+3
 30181  015FDA  ECF8  F0A1         	call	i2___flmul	;wreg free
 30182  015FDE  C030  F04D         	movff	?i2___flmul,i2_fround$4141
 30183  015FE2  C031  F04E         	movff	?i2___flmul+1,i2_fround$4141+1
 30184  015FE6  C032  F04F         	movff	?i2___flmul+2,i2_fround$4141+2
 30185  015FEA  C033  F050         	movff	?i2___flmul+3,i2_fround$4141+3
 30186                           
 30187                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30188  015FEE  C04D  F030         	movff	i2_fround$4141,i2___flmul@b
 30189  015FF2  C04E  F031         	movff	i2_fround$4141+1,i2___flmul@b+1
 30190  015FF6  C04F  F032         	movff	i2_fround$4141+2,i2___flmul@b+2
 30191  015FFA  C050  F033         	movff	i2_fround$4141+3,i2___flmul@b+3
 30192  015FFE  0E00               	movlw	0
 30193  016000  6E34               	movwf	i2___flmul@a,c
 30194  016002  0E00               	movlw	0
 30195  016004  6E35               	movwf	i2___flmul@a+1,c
 30196  016006  0E00               	movlw	0
 30197  016008  6E36               	movwf	i2___flmul@a+2,c
 30198  01600A  0E3F               	movlw	63
 30199  01600C  6E37               	movwf	i2___flmul@a+3,c
 30200  01600E  ECF8  F0A1         	call	i2___flmul	;wreg free
 30201  016012  C030  F049         	movff	?i2___flmul,?i2_fround
 30202  016016  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 30203  01601A  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 30204  01601E  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 30205  016022  0012               	return	
 30206  016024                     i2l1384:
 30207                           
 30208                           ;doprnt.c: 415: else if(prec > 10)
 30209  016024  0E0A               	movlw	10
 30210  016026  6455               	cpfsgt	i2fround@prec,c
 30211  016028  D071               	goto	i2l1387
 30212                           
 30213                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 30214  01602A  0E00               	movlw	0
 30215  01602C  6E04               	movwf	i2___awmod@divisor+1,c
 30216  01602E  0E0A               	movlw	10
 30217  016030  6E03               	movwf	i2___awmod@divisor,c
 30218  016032  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 30219  016036  6A02               	clrf	i2___awmod@dividend+1,c
 30220  016038  EC1B  F0BF         	call	i2___awmod	;wreg free
 30221  01603C  90D8               	bcf	status,0,c
 30222  01603E  3601               	rlcf	?i2___awmod,f,c
 30223  016040  3602               	rlcf	?i2___awmod+1,f,c
 30224  016042  90D8               	bcf	status,0,c
 30225  016044  3601               	rlcf	?i2___awmod,f,c
 30226  016046  3602               	rlcf	?i2___awmod+1,f,c
 30227  016048  0EF7               	movlw	low __npowers_
 30228  01604A  2401               	addwf	?i2___awmod,w,c
 30229  01604C  6EF6               	movwf	tblptrl,c
 30230  01604E  0EE8               	movlw	high __npowers_
 30231  016050  2002               	addwfc	?i2___awmod+1,w,c
 30232  016052  6EF7               	movwf	tblptrh,c
 30233  016054                     	if	1	;There are 3 active tblptr bytes
 30234  016054  6AF8               	clrf	tblptru,c
 30235  016056  0E00               	movlw	low (__mediumconst shr (0+16))
 30236  016058  22F8               	addwfc	tblptru,f,c
 30237  01605A                     	endif
 30238  01605A  0009               	tblrd		*+
 30239  01605C  CFF5 F034          	movff	tablat,i2___flmul@a
 30240  016060  0009               	tblrd		*+
 30241  016062  CFF5 F035          	movff	tablat,i2___flmul@a+1
 30242  016066  0009               	tblrd		*+
 30243  016068  CFF5 F036          	movff	tablat,i2___flmul@a+2
 30244  01606C  000A               	tblrd		*-
 30245  01606E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 30246  016072  0E00               	movlw	0
 30247  016074  6E0A               	movwf	i2___awdiv@divisor+1,c
 30248  016076  0E0A               	movlw	10
 30249  016078  6E09               	movwf	i2___awdiv@divisor,c
 30250  01607A  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 30251  01607E  6A08               	clrf	i2___awdiv@dividend+1,c
 30252  016080  ECE4  F0BD         	call	i2___awdiv	;wreg free
 30253  016084  90D8               	bcf	status,0,c
 30254  016086  3607               	rlcf	?i2___awdiv,f,c
 30255  016088  3608               	rlcf	?i2___awdiv+1,f,c
 30256  01608A  90D8               	bcf	status,0,c
 30257  01608C  3607               	rlcf	?i2___awdiv,f,c
 30258  01608E  3608               	rlcf	?i2___awdiv+1,f,c
 30259  016090  0E24               	movlw	36
 30260  016092  2607               	addwf	?i2___awdiv,f,c
 30261  016094  0E00               	movlw	0
 30262  016096  2208               	addwfc	?i2___awdiv+1,f,c
 30263  016098  0EF7               	movlw	low __npowers_
 30264  01609A  2407               	addwf	?i2___awdiv,w,c
 30265  01609C  6EF6               	movwf	tblptrl,c
 30266  01609E  0EE8               	movlw	high __npowers_
 30267  0160A0  2008               	addwfc	?i2___awdiv+1,w,c
 30268  0160A2  6EF7               	movwf	tblptrh,c
 30269  0160A4                     	if	1	;There are 3 active tblptr bytes
 30270  0160A4  6AF8               	clrf	tblptru,c
 30271  0160A6  0E00               	movlw	low (__mediumconst shr (0+16))
 30272  0160A8  22F8               	addwfc	tblptru,f,c
 30273  0160AA                     	endif
 30274  0160AA  0009               	tblrd		*+
 30275  0160AC  CFF5 F030          	movff	tablat,i2___flmul@b
 30276  0160B0  0009               	tblrd		*+
 30277  0160B2  CFF5 F031          	movff	tablat,i2___flmul@b+1
 30278  0160B6  0009               	tblrd		*+
 30279  0160B8  CFF5 F032          	movff	tablat,i2___flmul@b+2
 30280  0160BC  000A               	tblrd		*-
 30281  0160BE  CFF5 F033          	movff	tablat,i2___flmul@b+3
 30282  0160C2  ECF8  F0A1         	call	i2___flmul	;wreg free
 30283  0160C6  C030  F051         	movff	?i2___flmul,i2_fround$4140
 30284  0160CA  C031  F052         	movff	?i2___flmul+1,i2_fround$4140+1
 30285  0160CE  C032  F053         	movff	?i2___flmul+2,i2_fround$4140+2
 30286  0160D2  C033  F054         	movff	?i2___flmul+3,i2_fround$4140+3
 30287                           
 30288                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 30289  0160D6  C051  F030         	movff	i2_fround$4140,i2___flmul@b
 30290  0160DA  C052  F031         	movff	i2_fround$4140+1,i2___flmul@b+1
 30291  0160DE  C053  F032         	movff	i2_fround$4140+2,i2___flmul@b+2
 30292  0160E2  C054  F033         	movff	i2_fround$4140+3,i2___flmul@b+3
 30293  0160E6  0E00               	movlw	0
 30294  0160E8  6E34               	movwf	i2___flmul@a,c
 30295  0160EA  0E00               	movlw	0
 30296  0160EC  6E35               	movwf	i2___flmul@a+1,c
 30297  0160EE  0E00               	movlw	0
 30298  0160F0  6E36               	movwf	i2___flmul@a+2,c
 30299  0160F2  0E3F               	movlw	63
 30300  0160F4  6E37               	movwf	i2___flmul@a+3,c
 30301  0160F6  ECF8  F0A1         	call	i2___flmul	;wreg free
 30302  0160FA  C030  F049         	movff	?i2___flmul,?i2_fround
 30303  0160FE  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 30304  016102  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 30305  016106  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 30306  01610A  0012               	return	
 30307  01610C                     i2l1387:
 30308                           
 30309                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 30310  01610C  5055               	movf	i2fround@prec,w,c
 30311  01610E  0D04               	mullw	4
 30312  016110  0EF7               	movlw	low __npowers_
 30313  016112  24F3               	addwf	prodl,w,c
 30314  016114  6EF6               	movwf	tblptrl,c
 30315  016116  0EE8               	movlw	high __npowers_
 30316  016118  20F4               	addwfc	prodh,w,c
 30317  01611A  6EF7               	movwf	tblptrh,c
 30318  01611C                     	if	1	;There are 3 active tblptr bytes
 30319  01611C  6AF8               	clrf	tblptru,c
 30320  01611E  0E00               	movlw	low (__mediumconst shr (0+16))
 30321  016120  22F8               	addwfc	tblptru,f,c
 30322  016122                     	endif
 30323  016122  0009               	tblrd		*+
 30324  016124  CFF5 F030          	movff	tablat,i2___flmul@b
 30325  016128  0009               	tblrd		*+
 30326  01612A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 30327  01612E  0009               	tblrd		*+
 30328  016130  CFF5 F032          	movff	tablat,i2___flmul@b+2
 30329  016134  000A               	tblrd		*-
 30330  016136  CFF5 F033          	movff	tablat,i2___flmul@b+3
 30331  01613A  0E00               	movlw	0
 30332  01613C  6E34               	movwf	i2___flmul@a,c
 30333  01613E  0E00               	movlw	0
 30334  016140  6E35               	movwf	i2___flmul@a+1,c
 30335  016142  0E00               	movlw	0
 30336  016144  6E36               	movwf	i2___flmul@a+2,c
 30337  016146  0E3F               	movlw	63
 30338  016148  6E37               	movwf	i2___flmul@a+3,c
 30339  01614A  ECF8  F0A1         	call	i2___flmul	;wreg free
 30340  01614E  C030  F049         	movff	?i2___flmul,?i2_fround
 30341  016152  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 30342  016156  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 30343  01615A  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 30344  01615E  0012               	return	
 30345  016160                     __end_ofi2_fround:
 30346                           	opt stack 0
 30347                           tosu	equ	0xFFF
 30348                           tosh	equ	0xFFE
 30349                           tosl	equ	0xFFD
 30350                           pclatu	equ	0xFFB
 30351                           pclath	equ	0xFFA
 30352                           tblptru	equ	0xFF8
 30353                           tblptrh	equ	0xFF7
 30354                           tblptrl	equ	0xFF6
 30355                           tablat	equ	0xFF5
 30356                           prodh	equ	0xFF4
 30357                           prodl	equ	0xFF3
 30358                           intcon	equ	0xFF2
 30359                           indf0	equ	0xFEF
 30360                           postinc0	equ	0xFEE
 30361                           fsr0h	equ	0xFEA
 30362                           fsr0l	equ	0xFE9
 30363                           wreg	equ	0xFE8
 30364                           indf1	equ	0xFE7
 30365                           postdec1	equ	0xFE5
 30366                           plusw1	equ	0xFE3
 30367                           fsr1h	equ	0xFE2
 30368                           fsr1l	equ	0xFE1
 30369                           bsr	equ	0xFE0
 30370                           indf2	equ	0xFDF
 30371                           postinc2	equ	0xFDE
 30372                           postdec2	equ	0xFDD
 30373                           plusw2	equ	0xFDB
 30374                           fsr2h	equ	0xFDA
 30375                           fsr2l	equ	0xFD9
 30376                           status	equ	0xFD8
 30377                           
 30378 ;; *************** function i2___awmod *****************
 30379 ;; Defined at:
 30380 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 30381 ;; Parameters:    Size  Location     Type
 30382 ;;  dividend        2    0[COMRAM] int 
 30383 ;;  divisor         2    2[COMRAM] int 
 30384 ;; Auto vars:     Size  Location     Type
 30385 ;;  __awmod         1    5[COMRAM] unsigned char 
 30386 ;;  __awmod         1    4[COMRAM] unsigned char 
 30387 ;; Return value:  Size  Location     Type
 30388 ;;                  2    0[COMRAM] int 
 30389 ;; Registers used:
 30390 ;;		wreg, status,2, status,0
 30391 ;; Tracked objects:
 30392 ;;		On entry : 0/0
 30393 ;;		On exit  : 0/0
 30394 ;;		Unchanged: 0/0
 30395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30397 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30399 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30400 ;;Total ram usage:        6 bytes
 30401 ;; Hardware stack levels used:    1
 30402 ;; This function calls:
 30403 ;;		Nothing
 30404 ;; This function is called by:
 30405 ;;		i2_fround
 30406 ;;		i2_scale
 30407 ;; This function uses a non-reentrant model
 30408 ;;
 30409                           
 30410                           	psect	text95
 30411  017E36                     __ptext95:
 30412                           	opt stack 0
 30413  017E36                     i2___awmod:
 30414                           	opt stack 15
 30415                           
 30416                           ;incstack = 0
 30417  017E36  0E00               	movlw	0
 30418  017E38  6E06               	movwf	i2___awmod@sign,c
 30419  017E3A  AE02               	btfss	i2___awmod@dividend+1,7,c
 30420  017E3C  D006               	goto	i2l1773
 30421  017E3E  6C01               	negf	i2___awmod@dividend,c
 30422  017E40  1E02               	comf	i2___awmod@dividend+1,f,c
 30423  017E42  B0D8               	btfsc	status,0,c
 30424  017E44  2A02               	incf	i2___awmod@dividend+1,f,c
 30425  017E46  0E01               	movlw	1
 30426  017E48  6E06               	movwf	i2___awmod@sign,c
 30427  017E4A                     i2l1773:
 30428  017E4A  AE04               	btfss	i2___awmod@divisor+1,7,c
 30429  017E4C  D004               	goto	i2l1774
 30430  017E4E  6C03               	negf	i2___awmod@divisor,c
 30431  017E50  1E04               	comf	i2___awmod@divisor+1,f,c
 30432  017E52  B0D8               	btfsc	status,0,c
 30433  017E54  2A04               	incf	i2___awmod@divisor+1,f,c
 30434  017E56                     i2l1774:
 30435  017E56  5003               	movf	i2___awmod@divisor,w,c
 30436  017E58  1004               	iorwf	i2___awmod@divisor+1,w,c
 30437  017E5A  B4D8               	btfsc	status,2,c
 30438  017E5C  D018               	goto	i2l1781
 30439  017E5E  0E01               	movlw	1
 30440  017E60  6E05               	movwf	i2___awmod@counter,c
 30441  017E62  D004               	goto	i2l1776
 30442  017E64  90D8               	bcf	status,0,c
 30443  017E66  3603               	rlcf	i2___awmod@divisor,f,c
 30444  017E68  3604               	rlcf	i2___awmod@divisor+1,f,c
 30445  017E6A  2A05               	incf	i2___awmod@counter,f,c
 30446  017E6C                     i2l1776:
 30447  017E6C  AE04               	btfss	i2___awmod@divisor+1,7,c
 30448  017E6E  D7FA               	goto	i2l1777
 30449  017E70                     i2u1661_40:
 30450  017E70  5003               	movf	i2___awmod@divisor,w,c
 30451  017E72  5C01               	subwf	i2___awmod@dividend,w,c
 30452  017E74  5004               	movf	i2___awmod@divisor+1,w,c
 30453  017E76  5802               	subwfb	i2___awmod@dividend+1,w,c
 30454  017E78  A0D8               	btfss	status,0,c
 30455  017E7A  D004               	goto	i2l1780
 30456  017E7C  5003               	movf	i2___awmod@divisor,w,c
 30457  017E7E  5E01               	subwf	i2___awmod@dividend,f,c
 30458  017E80  5004               	movf	i2___awmod@divisor+1,w,c
 30459  017E82  5A02               	subwfb	i2___awmod@dividend+1,f,c
 30460  017E84                     i2l1780:
 30461  017E84  90D8               	bcf	status,0,c
 30462  017E86  3204               	rrcf	i2___awmod@divisor+1,f,c
 30463  017E88  3203               	rrcf	i2___awmod@divisor,f,c
 30464  017E8A  2E05               	decfsz	i2___awmod@counter,f,c
 30465  017E8C  D7F1               	goto	i2u1661_40
 30466  017E8E                     i2l1781:
 30467  017E8E  5006               	movf	i2___awmod@sign,w,c
 30468  017E90  B4D8               	btfsc	status,2,c
 30469  017E92  D004               	goto	i2l1782
 30470  017E94  6C01               	negf	i2___awmod@dividend,c
 30471  017E96  1E02               	comf	i2___awmod@dividend+1,f,c
 30472  017E98  B0D8               	btfsc	status,0,c
 30473  017E9A  2A02               	incf	i2___awmod@dividend+1,f,c
 30474  017E9C                     i2l1782:
 30475  017E9C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 30476  017EA0  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 30477  017EA4  0012               	return	
 30478  017EA6                     __end_ofi2___awmod:
 30479                           	opt stack 0
 30480                           tosu	equ	0xFFF
 30481                           tosh	equ	0xFFE
 30482                           tosl	equ	0xFFD
 30483                           pclatu	equ	0xFFB
 30484                           pclath	equ	0xFFA
 30485                           tblptru	equ	0xFF8
 30486                           tblptrh	equ	0xFF7
 30487                           tblptrl	equ	0xFF6
 30488                           tablat	equ	0xFF5
 30489                           prodh	equ	0xFF4
 30490                           prodl	equ	0xFF3
 30491                           intcon	equ	0xFF2
 30492                           indf0	equ	0xFEF
 30493                           postinc0	equ	0xFEE
 30494                           fsr0h	equ	0xFEA
 30495                           fsr0l	equ	0xFE9
 30496                           wreg	equ	0xFE8
 30497                           indf1	equ	0xFE7
 30498                           postdec1	equ	0xFE5
 30499                           plusw1	equ	0xFE3
 30500                           fsr1h	equ	0xFE2
 30501                           fsr1l	equ	0xFE1
 30502                           bsr	equ	0xFE0
 30503                           indf2	equ	0xFDF
 30504                           postinc2	equ	0xFDE
 30505                           postdec2	equ	0xFDD
 30506                           plusw2	equ	0xFDB
 30507                           fsr2h	equ	0xFDA
 30508                           fsr2l	equ	0xFD9
 30509                           status	equ	0xFD8
 30510                           
 30511 ;; *************** function i2___awdiv *****************
 30512 ;; Defined at:
 30513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 30514 ;; Parameters:    Size  Location     Type
 30515 ;;  dividend        2    6[COMRAM] int 
 30516 ;;  divisor         2    8[COMRAM] int 
 30517 ;; Auto vars:     Size  Location     Type
 30518 ;;  __awdiv         2   12[COMRAM] int 
 30519 ;;  __awdiv         1   11[COMRAM] unsigned char 
 30520 ;;  __awdiv         1   10[COMRAM] unsigned char 
 30521 ;; Return value:  Size  Location     Type
 30522 ;;                  2    6[COMRAM] int 
 30523 ;; Registers used:
 30524 ;;		wreg, status,2, status,0
 30525 ;; Tracked objects:
 30526 ;;		On entry : 0/0
 30527 ;;		On exit  : 0/0
 30528 ;;		Unchanged: 0/0
 30529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30531 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30533 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30534 ;;Total ram usage:        8 bytes
 30535 ;; Hardware stack levels used:    1
 30536 ;; This function calls:
 30537 ;;		Nothing
 30538 ;; This function is called by:
 30539 ;;		i2_fround
 30540 ;;		i2_scale
 30541 ;;		i2_printf
 30542 ;; This function uses a non-reentrant model
 30543 ;;
 30544                           
 30545                           	psect	text96
 30546  017BC8                     __ptext96:
 30547                           	opt stack 0
 30548  017BC8                     i2___awdiv:
 30549                           	opt stack 15
 30550                           
 30551                           ;incstack = 0
 30552  017BC8  0E00               	movlw	0
 30553  017BCA  6E0C               	movwf	i2___awdiv@sign,c
 30554  017BCC  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 30555  017BCE  D006               	goto	i2l1760
 30556  017BD0  6C09               	negf	i2___awdiv@divisor,c
 30557  017BD2  1E0A               	comf	i2___awdiv@divisor+1,f,c
 30558  017BD4  B0D8               	btfsc	status,0,c
 30559  017BD6  2A0A               	incf	i2___awdiv@divisor+1,f,c
 30560  017BD8  0E01               	movlw	1
 30561  017BDA  6E0C               	movwf	i2___awdiv@sign,c
 30562  017BDC                     i2l1760:
 30563  017BDC  AE08               	btfss	i2___awdiv@dividend+1,7,c
 30564  017BDE  D006               	goto	i2l1761
 30565  017BE0  6C07               	negf	i2___awdiv@dividend,c
 30566  017BE2  1E08               	comf	i2___awdiv@dividend+1,f,c
 30567  017BE4  B0D8               	btfsc	status,0,c
 30568  017BE6  2A08               	incf	i2___awdiv@dividend+1,f,c
 30569  017BE8  0E01               	movlw	1
 30570  017BEA  1A0C               	xorwf	i2___awdiv@sign,f,c
 30571  017BEC                     i2l1761:
 30572  017BEC  0E00               	movlw	0
 30573  017BEE  6E0E               	movwf	i2___awdiv@quotient+1,c
 30574  017BF0  0E00               	movlw	0
 30575  017BF2  6E0D               	movwf	i2___awdiv@quotient,c
 30576  017BF4  5009               	movf	i2___awdiv@divisor,w,c
 30577  017BF6  100A               	iorwf	i2___awdiv@divisor+1,w,c
 30578  017BF8  B4D8               	btfsc	status,2,c
 30579  017BFA  D01C               	goto	i2l1768
 30580  017BFC  0E01               	movlw	1
 30581  017BFE  6E0B               	movwf	i2___awdiv@counter,c
 30582  017C00  D004               	goto	i2l1763
 30583  017C02  90D8               	bcf	status,0,c
 30584  017C04  3609               	rlcf	i2___awdiv@divisor,f,c
 30585  017C06  360A               	rlcf	i2___awdiv@divisor+1,f,c
 30586  017C08  2A0B               	incf	i2___awdiv@counter,f,c
 30587  017C0A                     i2l1763:
 30588  017C0A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 30589  017C0C  D7FA               	goto	i2l1764
 30590  017C0E                     i2u1655_40:
 30591  017C0E  90D8               	bcf	status,0,c
 30592  017C10  360D               	rlcf	i2___awdiv@quotient,f,c
 30593  017C12  360E               	rlcf	i2___awdiv@quotient+1,f,c
 30594  017C14  5009               	movf	i2___awdiv@divisor,w,c
 30595  017C16  5C07               	subwf	i2___awdiv@dividend,w,c
 30596  017C18  500A               	movf	i2___awdiv@divisor+1,w,c
 30597  017C1A  5808               	subwfb	i2___awdiv@dividend+1,w,c
 30598  017C1C  A0D8               	btfss	status,0,c
 30599  017C1E  D005               	goto	i2l1767
 30600  017C20  5009               	movf	i2___awdiv@divisor,w,c
 30601  017C22  5E07               	subwf	i2___awdiv@dividend,f,c
 30602  017C24  500A               	movf	i2___awdiv@divisor+1,w,c
 30603  017C26  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 30604  017C28  800D               	bsf	i2___awdiv@quotient,0,c
 30605  017C2A                     i2l1767:
 30606  017C2A  90D8               	bcf	status,0,c
 30607  017C2C  320A               	rrcf	i2___awdiv@divisor+1,f,c
 30608  017C2E  3209               	rrcf	i2___awdiv@divisor,f,c
 30609  017C30  2E0B               	decfsz	i2___awdiv@counter,f,c
 30610  017C32  D7ED               	goto	i2u1655_40
 30611  017C34                     i2l1768:
 30612  017C34  500C               	movf	i2___awdiv@sign,w,c
 30613  017C36  B4D8               	btfsc	status,2,c
 30614  017C38  D004               	goto	i2l1769
 30615  017C3A  6C0D               	negf	i2___awdiv@quotient,c
 30616  017C3C  1E0E               	comf	i2___awdiv@quotient+1,f,c
 30617  017C3E  B0D8               	btfsc	status,0,c
 30618  017C40  2A0E               	incf	i2___awdiv@quotient+1,f,c
 30619  017C42                     i2l1769:
 30620  017C42  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 30621  017C46  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 30622  017C4A  0012               	return	
 30623  017C4C                     __end_ofi2___awdiv:
 30624                           	opt stack 0
 30625                           tosu	equ	0xFFF
 30626                           tosh	equ	0xFFE
 30627                           tosl	equ	0xFFD
 30628                           pclatu	equ	0xFFB
 30629                           pclath	equ	0xFFA
 30630                           tblptru	equ	0xFF8
 30631                           tblptrh	equ	0xFF7
 30632                           tblptrl	equ	0xFF6
 30633                           tablat	equ	0xFF5
 30634                           prodh	equ	0xFF4
 30635                           prodl	equ	0xFF3
 30636                           intcon	equ	0xFF2
 30637                           indf0	equ	0xFEF
 30638                           postinc0	equ	0xFEE
 30639                           fsr0h	equ	0xFEA
 30640                           fsr0l	equ	0xFE9
 30641                           wreg	equ	0xFE8
 30642                           indf1	equ	0xFE7
 30643                           postdec1	equ	0xFE5
 30644                           plusw1	equ	0xFE3
 30645                           fsr1h	equ	0xFE2
 30646                           fsr1l	equ	0xFE1
 30647                           bsr	equ	0xFE0
 30648                           indf2	equ	0xFDF
 30649                           postinc2	equ	0xFDE
 30650                           postdec2	equ	0xFDD
 30651                           plusw2	equ	0xFDB
 30652                           fsr2h	equ	0xFDA
 30653                           fsr2l	equ	0xFD9
 30654                           status	equ	0xFD8
 30655                           
 30656 ;; *************** function i2__tdiv_to_l_ *****************
 30657 ;; Defined at:
 30658 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 30659 ;; Parameters:    Size  Location     Type
 30660 ;;  f1              3    0[COMRAM] float 
 30661 ;;  f2              3    3[COMRAM] float 
 30662 ;; Auto vars:     Size  Location     Type
 30663 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 30664 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 30665 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 30666 ;; Return value:  Size  Location     Type
 30667 ;;                  4    0[COMRAM] unsigned long 
 30668 ;; Registers used:
 30669 ;;		wreg, status,2, status,0
 30670 ;; Tracked objects:
 30671 ;;		On entry : 0/0
 30672 ;;		On exit  : 0/0
 30673 ;;		Unchanged: 0/0
 30674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30675 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30676 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30677 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30678 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30679 ;;Total ram usage:       15 bytes
 30680 ;; Hardware stack levels used:    1
 30681 ;; This function calls:
 30682 ;;		Nothing
 30683 ;; This function is called by:
 30684 ;;		i2_printf
 30685 ;; This function uses a non-reentrant model
 30686 ;;
 30687                           
 30688                           	psect	text97
 30689  016B64                     __ptext97:
 30690                           	opt stack 0
 30691  016B64                     i2__tdiv_to_l_:
 30692                           	opt stack 16
 30693                           
 30694                           ;incstack = 0
 30695  016B64  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 30696  016B68  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 30697  016B6A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 30698  016B6C  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 30699  016B6E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 30700  016B70  E301               	bnc	u1720_41
 30701  016B72  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 30702  016B74                     u1720_41:
 30703  016B74  5007               	movf	??i2__tdiv_to_l_,w,c
 30704  016B76  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 30705  016B78  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 30706  016B7A  A4D8               	btfss	status,2,c
 30707  016B7C  D009               	goto	i2l1908
 30708  016B7E  0E00               	movlw	0
 30709  016B80  6E01               	movwf	?i2__tdiv_to_l_,c
 30710  016B82  0E00               	movlw	0
 30711  016B84  6E02               	movwf	?i2__tdiv_to_l_+1,c
 30712  016B86  0E00               	movlw	0
 30713  016B88  6E03               	movwf	?i2__tdiv_to_l_+2,c
 30714  016B8A  0E00               	movlw	0
 30715  016B8C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 30716  016B8E  0012               	return	
 30717  016B90                     i2l1908:
 30718  016B90  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 30719  016B94  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 30720  016B96  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 30721  016B98  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 30722  016B9A  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 30723  016B9C  E301               	bnc	u1722_41
 30724  016B9E  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 30725  016BA0                     u1722_41:
 30726  016BA0  5007               	movf	??i2__tdiv_to_l_,w,c
 30727  016BA2  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 30728  016BA4  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 30729  016BA6  A4D8               	btfss	status,2,c
 30730  016BA8  D009               	goto	i2l1910
 30731  016BAA  0E00               	movlw	0
 30732  016BAC  6E01               	movwf	?i2__tdiv_to_l_,c
 30733  016BAE  0E00               	movlw	0
 30734  016BB0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 30735  016BB2  0E00               	movlw	0
 30736  016BB4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 30737  016BB6  0E00               	movlw	0
 30738  016BB8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 30739  016BBA  0012               	return	
 30740  016BBC                     i2l1910:
 30741  016BBC  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 30742  016BBE  0EFF               	movlw	255
 30743  016BC0  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 30744  016BC2  0EFF               	movlw	255
 30745  016BC4  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 30746  016BC6  0E00               	movlw	0
 30747  016BC8  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 30748  016BCA  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 30749  016BCC  0EFF               	movlw	255
 30750  016BCE  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 30751  016BD0  0EFF               	movlw	255
 30752  016BD2  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 30753  016BD4  0E00               	movlw	0
 30754  016BD6  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 30755  016BD8  0E00               	movlw	0
 30756  016BDA  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 30757  016BDC  0E00               	movlw	0
 30758  016BDE  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 30759  016BE0  0E00               	movlw	0
 30760  016BE2  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 30761  016BE4  0E00               	movlw	0
 30762  016BE6  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 30763  016BE8  0E7F               	movlw	127
 30764  016BEA  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 30765  016BEC  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 30766  016BEE  0F98               	addlw	152
 30767  016BF0  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 30768  016BF2  0E18               	movlw	24
 30769  016BF4  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 30770  016BF6                     i2l1911:
 30771  016BF6  90D8               	bcf	status,0,c
 30772  016BF8  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 30773  016BFA  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 30774  016BFC  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 30775  016BFE  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 30776  016C00  5004               	movf	i2__tdiv_to_l_@f2,w,c
 30777  016C02  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 30778  016C04  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 30779  016C06  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 30780  016C08  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 30781  016C0A  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 30782  016C0C  A0D8               	btfss	status,0,c
 30783  016C0E  D007               	goto	i2l1912
 30784  016C10  5004               	movf	i2__tdiv_to_l_@f2,w,c
 30785  016C12  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 30786  016C14  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 30787  016C16  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 30788  016C18  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 30789  016C1A  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 30790  016C1C  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 30791  016C1E                     i2l1912:
 30792  016C1E  90D8               	bcf	status,0,c
 30793  016C20  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 30794  016C22  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 30795  016C24  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 30796  016C26  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 30797  016C28  D7E6               	goto	i2l1911
 30798  016C2A  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 30799  016C2C  D016               	goto	i2l1914
 30800  016C2E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 30801  016C30  0A80               	xorlw	128
 30802  016C32  0F97               	addlw	151
 30803  016C34  B0D8               	btfsc	status,0,c
 30804  016C36  D009               	goto	i2l1915
 30805  016C38  0E00               	movlw	0
 30806  016C3A  6E01               	movwf	?i2__tdiv_to_l_,c
 30807  016C3C  0E00               	movlw	0
 30808  016C3E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 30809  016C40  0E00               	movlw	0
 30810  016C42  6E03               	movwf	?i2__tdiv_to_l_+2,c
 30811  016C44  0E00               	movlw	0
 30812  016C46  6E04               	movwf	?i2__tdiv_to_l_+3,c
 30813  016C48  0012               	return	
 30814  016C4A                     i2l1915:
 30815  016C4A  90D8               	bcf	status,0,c
 30816  016C4C  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 30817  016C4E  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 30818  016C50  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 30819  016C52  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 30820  016C54  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 30821  016C56  D7F9               	goto	i2l1915
 30822  016C58  D015               	goto	i2u1728_40
 30823  016C5A                     i2l1914:
 30824  016C5A  0E17               	movlw	23
 30825  016C5C  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 30826  016C5E  D00F               	goto	i2l1920
 30827  016C60  0E00               	movlw	0
 30828  016C62  6E01               	movwf	?i2__tdiv_to_l_,c
 30829  016C64  0E00               	movlw	0
 30830  016C66  6E02               	movwf	?i2__tdiv_to_l_+1,c
 30831  016C68  0E00               	movlw	0
 30832  016C6A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 30833  016C6C  0E00               	movlw	0
 30834  016C6E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 30835  016C70  0012               	return	
 30836  016C72  90D8               	bcf	status,0,c
 30837  016C74  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 30838  016C76  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 30839  016C78  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 30840  016C7A  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 30841  016C7C  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 30842  016C7E                     i2l1920:
 30843  016C7E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 30844  016C80  A4D8               	btfss	status,2,c
 30845  016C82  D7F7               	goto	i2l1921
 30846  016C84                     i2u1728_40:
 30847  016C84  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 30848  016C88  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 30849  016C8C  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 30850  016C90  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 30851  016C94  0012               	return		;funcret
 30852  016C96                     __end_ofi2__tdiv_to_l_:
 30853                           	opt stack 0
 30854                           tosu	equ	0xFFF
 30855                           tosh	equ	0xFFE
 30856                           tosl	equ	0xFFD
 30857                           pclatu	equ	0xFFB
 30858                           pclath	equ	0xFFA
 30859                           tblptru	equ	0xFF8
 30860                           tblptrh	equ	0xFF7
 30861                           tblptrl	equ	0xFF6
 30862                           tablat	equ	0xFF5
 30863                           prodh	equ	0xFF4
 30864                           prodl	equ	0xFF3
 30865                           intcon	equ	0xFF2
 30866                           indf0	equ	0xFEF
 30867                           postinc0	equ	0xFEE
 30868                           fsr0h	equ	0xFEA
 30869                           fsr0l	equ	0xFE9
 30870                           wreg	equ	0xFE8
 30871                           indf1	equ	0xFE7
 30872                           postdec1	equ	0xFE5
 30873                           plusw1	equ	0xFE3
 30874                           fsr1h	equ	0xFE2
 30875                           fsr1l	equ	0xFE1
 30876                           bsr	equ	0xFE0
 30877                           indf2	equ	0xFDF
 30878                           postinc2	equ	0xFDE
 30879                           postdec2	equ	0xFDD
 30880                           plusw2	equ	0xFDB
 30881                           fsr2h	equ	0xFDA
 30882                           fsr2l	equ	0xFD9
 30883                           status	equ	0xFD8
 30884                           
 30885 ;; *************** function i2__div_to_l_ *****************
 30886 ;; Defined at:
 30887 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 30888 ;; Parameters:    Size  Location     Type
 30889 ;;  f1              4    0[COMRAM] unsigned long 
 30890 ;;  f2              4    4[COMRAM] unsigned long 
 30891 ;; Auto vars:     Size  Location     Type
 30892 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 30893 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 30894 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 30895 ;; Return value:  Size  Location     Type
 30896 ;;                  4    0[COMRAM] unsigned long 
 30897 ;; Registers used:
 30898 ;;		wreg, status,2, status,0
 30899 ;; Tracked objects:
 30900 ;;		On entry : 0/0
 30901 ;;		On exit  : 0/0
 30902 ;;		Unchanged: 0/0
 30903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30904 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30905 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30907 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30908 ;;Total ram usage:       14 bytes
 30909 ;; Hardware stack levels used:    1
 30910 ;; This function calls:
 30911 ;;		Nothing
 30912 ;; This function is called by:
 30913 ;;		i2_printf
 30914 ;; This function uses a non-reentrant model
 30915 ;;
 30916                           
 30917                           	psect	text98
 30918  016DC0                     __ptext98:
 30919                           	opt stack 0
 30920  016DC0                     i2__div_to_l_:
 30921                           	opt stack 16
 30922                           
 30923                           ;incstack = 0
 30924  016DC0  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 30925  016DC2  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 30926  016DC4  6E0E               	movwf	i2__div_to_l_@exp1,c
 30927  016DC6  500E               	movf	i2__div_to_l_@exp1,w,c
 30928  016DC8  A4D8               	btfss	status,2,c
 30929  016DCA  D009               	goto	i2l1804
 30930  016DCC  0E00               	movlw	0
 30931  016DCE  6E01               	movwf	?i2__div_to_l_,c
 30932  016DD0  0E00               	movlw	0
 30933  016DD2  6E02               	movwf	?i2__div_to_l_+1,c
 30934  016DD4  0E00               	movlw	0
 30935  016DD6  6E03               	movwf	?i2__div_to_l_+2,c
 30936  016DD8  0E00               	movlw	0
 30937  016DDA  6E04               	movwf	?i2__div_to_l_+3,c
 30938  016DDC  0012               	return	
 30939  016DDE                     i2l1804:
 30940  016DDE  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 30941  016DE0  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 30942  016DE2  6E0D               	movwf	i2__div_to_l_@cntr,c
 30943  016DE4  500D               	movf	i2__div_to_l_@cntr,w,c
 30944  016DE6  A4D8               	btfss	status,2,c
 30945  016DE8  D009               	goto	i2l1806
 30946  016DEA  0E00               	movlw	0
 30947  016DEC  6E01               	movwf	?i2__div_to_l_,c
 30948  016DEE  0E00               	movlw	0
 30949  016DF0  6E02               	movwf	?i2__div_to_l_+1,c
 30950  016DF2  0E00               	movlw	0
 30951  016DF4  6E03               	movwf	?i2__div_to_l_+2,c
 30952  016DF6  0E00               	movlw	0
 30953  016DF8  6E04               	movwf	?i2__div_to_l_+3,c
 30954  016DFA  0012               	return	
 30955  016DFC                     i2l1806:
 30956  016DFC  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 30957  016DFE  0EFF               	movlw	255
 30958  016E00  1601               	andwf	i2__div_to_l_@f1,f,c
 30959  016E02  0EFF               	movlw	255
 30960  016E04  1602               	andwf	i2__div_to_l_@f1+1,f,c
 30961  016E06  0EFF               	movlw	255
 30962  016E08  1603               	andwf	i2__div_to_l_@f1+2,f,c
 30963  016E0A  0E00               	movlw	0
 30964  016E0C  1604               	andwf	i2__div_to_l_@f1+3,f,c
 30965  016E0E  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 30966  016E10  0EFF               	movlw	255
 30967  016E12  1605               	andwf	i2__div_to_l_@f2,f,c
 30968  016E14  0EFF               	movlw	255
 30969  016E16  1606               	andwf	i2__div_to_l_@f2+1,f,c
 30970  016E18  0EFF               	movlw	255
 30971  016E1A  1607               	andwf	i2__div_to_l_@f2+2,f,c
 30972  016E1C  0E00               	movlw	0
 30973  016E1E  1608               	andwf	i2__div_to_l_@f2+3,f,c
 30974  016E20  0E00               	movlw	0
 30975  016E22  6E09               	movwf	i2__div_to_l_@quot,c
 30976  016E24  0E00               	movlw	0
 30977  016E26  6E0A               	movwf	i2__div_to_l_@quot+1,c
 30978  016E28  0E00               	movlw	0
 30979  016E2A  6E0B               	movwf	i2__div_to_l_@quot+2,c
 30980  016E2C  0E00               	movlw	0
 30981  016E2E  6E0C               	movwf	i2__div_to_l_@quot+3,c
 30982  016E30  0E7F               	movlw	127
 30983  016E32  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 30984  016E34  500D               	movf	i2__div_to_l_@cntr,w,c
 30985  016E36  0FA0               	addlw	160
 30986  016E38  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 30987  016E3A  0E20               	movlw	32
 30988  016E3C  6E0D               	movwf	i2__div_to_l_@cntr,c
 30989  016E3E  90D8               	bcf	status,0,c
 30990  016E40  3609               	rlcf	i2__div_to_l_@quot,f,c
 30991  016E42  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 30992  016E44  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 30993  016E46  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 30994  016E48  5005               	movf	i2__div_to_l_@f2,w,c
 30995  016E4A  5C01               	subwf	i2__div_to_l_@f1,w,c
 30996  016E4C  5006               	movf	i2__div_to_l_@f2+1,w,c
 30997  016E4E  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 30998  016E50  5007               	movf	i2__div_to_l_@f2+2,w,c
 30999  016E52  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 31000  016E54  5008               	movf	i2__div_to_l_@f2+3,w,c
 31001  016E56  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 31002  016E58  A0D8               	btfss	status,0,c
 31003  016E5A  D009               	goto	i2l1808
 31004  016E5C  5005               	movf	i2__div_to_l_@f2,w,c
 31005  016E5E  5E01               	subwf	i2__div_to_l_@f1,f,c
 31006  016E60  5006               	movf	i2__div_to_l_@f2+1,w,c
 31007  016E62  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 31008  016E64  5007               	movf	i2__div_to_l_@f2+2,w,c
 31009  016E66  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 31010  016E68  5008               	movf	i2__div_to_l_@f2+3,w,c
 31011  016E6A  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 31012  016E6C  8009               	bsf	i2__div_to_l_@quot,0,c
 31013  016E6E                     i2l1808:
 31014  016E6E  90D8               	bcf	status,0,c
 31015  016E70  3601               	rlcf	i2__div_to_l_@f1,f,c
 31016  016E72  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 31017  016E74  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 31018  016E76  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 31019  016E78  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 31020  016E7A  D7E1               	goto	i2l1807
 31021  016E7C  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 31022  016E7E  D016               	goto	i2l1810
 31023  016E80  500E               	movf	i2__div_to_l_@exp1,w,c
 31024  016E82  0A80               	xorlw	128
 31025  016E84  0F9F               	addlw	159
 31026  016E86  B0D8               	btfsc	status,0,c
 31027  016E88  D009               	goto	i2l1811
 31028  016E8A  0E00               	movlw	0
 31029  016E8C  6E01               	movwf	?i2__div_to_l_,c
 31030  016E8E  0E00               	movlw	0
 31031  016E90  6E02               	movwf	?i2__div_to_l_+1,c
 31032  016E92  0E00               	movlw	0
 31033  016E94  6E03               	movwf	?i2__div_to_l_+2,c
 31034  016E96  0E00               	movlw	0
 31035  016E98  6E04               	movwf	?i2__div_to_l_+3,c
 31036  016E9A  0012               	return	
 31037  016E9C                     i2l1811:
 31038  016E9C  90D8               	bcf	status,0,c
 31039  016E9E  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 31040  016EA0  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 31041  016EA2  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 31042  016EA4  3209               	rrcf	i2__div_to_l_@quot,f,c
 31043  016EA6  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 31044  016EA8  D7F9               	goto	i2l1811
 31045  016EAA  D015               	goto	i2u1719_40
 31046  016EAC                     i2l1810:
 31047  016EAC  0E1F               	movlw	31
 31048  016EAE  640E               	cpfsgt	i2__div_to_l_@exp1,c
 31049  016EB0  D00F               	goto	i2l1816
 31050  016EB2  0E00               	movlw	0
 31051  016EB4  6E01               	movwf	?i2__div_to_l_,c
 31052  016EB6  0E00               	movlw	0
 31053  016EB8  6E02               	movwf	?i2__div_to_l_+1,c
 31054  016EBA  0E00               	movlw	0
 31055  016EBC  6E03               	movwf	?i2__div_to_l_+2,c
 31056  016EBE  0E00               	movlw	0
 31057  016EC0  6E04               	movwf	?i2__div_to_l_+3,c
 31058  016EC2  0012               	return	
 31059  016EC4  90D8               	bcf	status,0,c
 31060  016EC6  3609               	rlcf	i2__div_to_l_@quot,f,c
 31061  016EC8  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 31062  016ECA  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 31063  016ECC  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 31064  016ECE  060E               	decf	i2__div_to_l_@exp1,f,c
 31065  016ED0                     i2l1816:
 31066  016ED0  500E               	movf	i2__div_to_l_@exp1,w,c
 31067  016ED2  A4D8               	btfss	status,2,c
 31068  016ED4  D7F7               	goto	i2l1817
 31069  016ED6                     i2u1719_40:
 31070  016ED6  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 31071  016EDA  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 31072  016EDE  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 31073  016EE2  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 31074  016EE6  0012               	return		;funcret
 31075  016EE8                     __end_ofi2__div_to_l_:
 31076                           	opt stack 0
 31077                           tosu	equ	0xFFF
 31078                           tosh	equ	0xFFE
 31079                           tosl	equ	0xFFD
 31080                           pclatu	equ	0xFFB
 31081                           pclath	equ	0xFFA
 31082                           tblptru	equ	0xFF8
 31083                           tblptrh	equ	0xFF7
 31084                           tblptrl	equ	0xFF6
 31085                           tablat	equ	0xFF5
 31086                           prodh	equ	0xFF4
 31087                           prodl	equ	0xFF3
 31088                           intcon	equ	0xFF2
 31089                           indf0	equ	0xFEF
 31090                           postinc0	equ	0xFEE
 31091                           fsr0h	equ	0xFEA
 31092                           fsr0l	equ	0xFE9
 31093                           wreg	equ	0xFE8
 31094                           indf1	equ	0xFE7
 31095                           postdec1	equ	0xFE5
 31096                           plusw1	equ	0xFE3
 31097                           fsr1h	equ	0xFE2
 31098                           fsr1l	equ	0xFE1
 31099                           bsr	equ	0xFE0
 31100                           indf2	equ	0xFDF
 31101                           postinc2	equ	0xFDE
 31102                           postdec2	equ	0xFDD
 31103                           plusw2	equ	0xFDB
 31104                           fsr2h	equ	0xFDA
 31105                           fsr2l	equ	0xFD9
 31106                           status	equ	0xFD8
 31107                           
 31108 ;; *************** function i2___wmul *****************
 31109 ;; Defined at:
 31110 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 31111 ;; Parameters:    Size  Location     Type
 31112 ;;  multiplier      2    0[COMRAM] unsigned int 
 31113 ;;  multiplicand    2    2[COMRAM] unsigned int 
 31114 ;; Auto vars:     Size  Location     Type
 31115 ;;  __wmul          2    4[COMRAM] unsigned int 
 31116 ;; Return value:  Size  Location     Type
 31117 ;;                  2    0[COMRAM] unsigned int 
 31118 ;; Registers used:
 31119 ;;		wreg, status,2, status,0, prodl, prodh
 31120 ;; Tracked objects:
 31121 ;;		On entry : 0/0
 31122 ;;		On exit  : 0/0
 31123 ;;		Unchanged: 0/0
 31124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31128 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31129 ;;Total ram usage:        6 bytes
 31130 ;; Hardware stack levels used:    1
 31131 ;; This function calls:
 31132 ;;		Nothing
 31133 ;; This function is called by:
 31134 ;;		i2_printf
 31135 ;; This function uses a non-reentrant model
 31136 ;;
 31137                           
 31138                           	psect	text99
 31139  0189C6                     __ptext99:
 31140                           	opt stack 0
 31141  0189C6                     i2___wmul:
 31142                           	opt stack 16
 31143                           
 31144                           ;incstack = 0
 31145  0189C6  5001               	movf	i2___wmul@multiplier,w,c
 31146  0189C8  0203               	mulwf	i2___wmul@multiplicand,c
 31147  0189CA  CFF3 F005          	movff	prodl,i2___wmul@product
 31148  0189CE  CFF4 F006          	movff	prodh,i2___wmul@product+1
 31149  0189D2  5001               	movf	i2___wmul@multiplier,w,c
 31150  0189D4  0204               	mulwf	i2___wmul@multiplicand+1,c
 31151  0189D6  50F3               	movf	prodl,w,c
 31152  0189D8  2606               	addwf	i2___wmul@product+1,f,c
 31153  0189DA  5002               	movf	i2___wmul@multiplier+1,w,c
 31154  0189DC  0203               	mulwf	i2___wmul@multiplicand,c
 31155  0189DE  50F3               	movf	prodl,w,c
 31156  0189E0  2606               	addwf	i2___wmul@product+1,f,c
 31157  0189E2  C005  F001         	movff	i2___wmul@product,?i2___wmul
 31158  0189E6  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 31159  0189EA  0012               	return	
 31160  0189EC                     __end_ofi2___wmul:
 31161                           	opt stack 0
 31162                           tosu	equ	0xFFF
 31163                           tosh	equ	0xFFE
 31164                           tosl	equ	0xFFD
 31165                           pclatu	equ	0xFFB
 31166                           pclath	equ	0xFFA
 31167                           tblptru	equ	0xFF8
 31168                           tblptrh	equ	0xFF7
 31169                           tblptrl	equ	0xFF6
 31170                           tablat	equ	0xFF5
 31171                           prodh	equ	0xFF4
 31172                           prodl	equ	0xFF3
 31173                           intcon	equ	0xFF2
 31174                           indf0	equ	0xFEF
 31175                           postinc0	equ	0xFEE
 31176                           fsr0h	equ	0xFEA
 31177                           fsr0l	equ	0xFE9
 31178                           wreg	equ	0xFE8
 31179                           indf1	equ	0xFE7
 31180                           postdec1	equ	0xFE5
 31181                           plusw1	equ	0xFE3
 31182                           fsr1h	equ	0xFE2
 31183                           fsr1l	equ	0xFE1
 31184                           bsr	equ	0xFE0
 31185                           indf2	equ	0xFDF
 31186                           postinc2	equ	0xFDE
 31187                           postdec2	equ	0xFDD
 31188                           plusw2	equ	0xFDB
 31189                           fsr2h	equ	0xFDA
 31190                           fsr2l	equ	0xFD9
 31191                           status	equ	0xFD8
 31192                           
 31193 ;; *************** function i2___llmod *****************
 31194 ;; Defined at:
 31195 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 31196 ;; Parameters:    Size  Location     Type
 31197 ;;  dividend        4   13[COMRAM] unsigned long 
 31198 ;;  divisor         4   17[COMRAM] unsigned long 
 31199 ;; Auto vars:     Size  Location     Type
 31200 ;;  __llmod         1   21[COMRAM] unsigned char 
 31201 ;; Return value:  Size  Location     Type
 31202 ;;                  4   13[COMRAM] unsigned long 
 31203 ;; Registers used:
 31204 ;;		wreg, status,2, status,0
 31205 ;; Tracked objects:
 31206 ;;		On entry : 0/0
 31207 ;;		On exit  : 0/0
 31208 ;;		Unchanged: 0/0
 31209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31210 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31214 ;;Total ram usage:        9 bytes
 31215 ;; Hardware stack levels used:    1
 31216 ;; This function calls:
 31217 ;;		Nothing
 31218 ;; This function is called by:
 31219 ;;		i2_printf
 31220 ;; This function uses a non-reentrant model
 31221 ;;
 31222                           
 31223                           	psect	text100
 31224  01804E                     __ptext100:
 31225                           	opt stack 0
 31226  01804E                     i2___llmod:
 31227                           	opt stack 16
 31228                           
 31229                           ;incstack = 0
 31230  01804E  5012               	movf	i2___llmod@divisor,w,c
 31231  018050  1013               	iorwf	i2___llmod@divisor+1,w,c
 31232  018052  1014               	iorwf	i2___llmod@divisor+2,w,c
 31233  018054  1015               	iorwf	i2___llmod@divisor+3,w,c
 31234  018056  B4D8               	btfsc	status,2,c
 31235  018058  D024               	goto	i2l2009
 31236  01805A  0E01               	movlw	1
 31237  01805C  6E16               	movwf	i2___llmod@counter,c
 31238  01805E  D006               	goto	i2l2004
 31239  018060  90D8               	bcf	status,0,c
 31240  018062  3612               	rlcf	i2___llmod@divisor,f,c
 31241  018064  3613               	rlcf	i2___llmod@divisor+1,f,c
 31242  018066  3614               	rlcf	i2___llmod@divisor+2,f,c
 31243  018068  3615               	rlcf	i2___llmod@divisor+3,f,c
 31244  01806A  2A16               	incf	i2___llmod@counter,f,c
 31245  01806C                     i2l2004:
 31246  01806C  AE15               	btfss	i2___llmod@divisor+3,7,c
 31247  01806E  D7F8               	goto	i2l2005
 31248  018070                     i2u1735_40:
 31249  018070  5012               	movf	i2___llmod@divisor,w,c
 31250  018072  5C0E               	subwf	i2___llmod@dividend,w,c
 31251  018074  5013               	movf	i2___llmod@divisor+1,w,c
 31252  018076  580F               	subwfb	i2___llmod@dividend+1,w,c
 31253  018078  5014               	movf	i2___llmod@divisor+2,w,c
 31254  01807A  5810               	subwfb	i2___llmod@dividend+2,w,c
 31255  01807C  5015               	movf	i2___llmod@divisor+3,w,c
 31256  01807E  5811               	subwfb	i2___llmod@dividend+3,w,c
 31257  018080  A0D8               	btfss	status,0,c
 31258  018082  D008               	goto	i2l2008
 31259  018084  5012               	movf	i2___llmod@divisor,w,c
 31260  018086  5E0E               	subwf	i2___llmod@dividend,f,c
 31261  018088  5013               	movf	i2___llmod@divisor+1,w,c
 31262  01808A  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 31263  01808C  5014               	movf	i2___llmod@divisor+2,w,c
 31264  01808E  5A10               	subwfb	i2___llmod@dividend+2,f,c
 31265  018090  5015               	movf	i2___llmod@divisor+3,w,c
 31266  018092  5A11               	subwfb	i2___llmod@dividend+3,f,c
 31267  018094                     i2l2008:
 31268  018094  90D8               	bcf	status,0,c
 31269  018096  3215               	rrcf	i2___llmod@divisor+3,f,c
 31270  018098  3214               	rrcf	i2___llmod@divisor+2,f,c
 31271  01809A  3213               	rrcf	i2___llmod@divisor+1,f,c
 31272  01809C  3212               	rrcf	i2___llmod@divisor,f,c
 31273  01809E  2E16               	decfsz	i2___llmod@counter,f,c
 31274  0180A0  D7E7               	goto	i2u1735_40
 31275  0180A2                     i2l2009:
 31276  0180A2  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 31277  0180A6  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 31278  0180AA  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 31279  0180AE  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 31280  0180B2  0012               	return		;funcret
 31281  0180B4                     __end_ofi2___llmod:
 31282                           	opt stack 0
 31283                           tosu	equ	0xFFF
 31284                           tosh	equ	0xFFE
 31285                           tosl	equ	0xFFD
 31286                           pclatu	equ	0xFFB
 31287                           pclath	equ	0xFFA
 31288                           tblptru	equ	0xFF8
 31289                           tblptrh	equ	0xFF7
 31290                           tblptrl	equ	0xFF6
 31291                           tablat	equ	0xFF5
 31292                           prodh	equ	0xFF4
 31293                           prodl	equ	0xFF3
 31294                           intcon	equ	0xFF2
 31295                           indf0	equ	0xFEF
 31296                           postinc0	equ	0xFEE
 31297                           fsr0h	equ	0xFEA
 31298                           fsr0l	equ	0xFE9
 31299                           wreg	equ	0xFE8
 31300                           indf1	equ	0xFE7
 31301                           postdec1	equ	0xFE5
 31302                           plusw1	equ	0xFE3
 31303                           fsr1h	equ	0xFE2
 31304                           fsr1l	equ	0xFE1
 31305                           bsr	equ	0xFE0
 31306                           indf2	equ	0xFDF
 31307                           postinc2	equ	0xFDE
 31308                           postdec2	equ	0xFDD
 31309                           plusw2	equ	0xFDB
 31310                           fsr2h	equ	0xFDA
 31311                           fsr2l	equ	0xFD9
 31312                           status	equ	0xFD8
 31313                           
 31314 ;; *************** function i2___lldiv *****************
 31315 ;; Defined at:
 31316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 31317 ;; Parameters:    Size  Location     Type
 31318 ;;  dividend        4    0[COMRAM] unsigned long 
 31319 ;;  divisor         4    4[COMRAM] unsigned long 
 31320 ;; Auto vars:     Size  Location     Type
 31321 ;;  __lldiv         4    8[COMRAM] unsigned long 
 31322 ;;  __lldiv         1   12[COMRAM] unsigned char 
 31323 ;; Return value:  Size  Location     Type
 31324 ;;                  4    0[COMRAM] unsigned long 
 31325 ;; Registers used:
 31326 ;;		wreg, status,2, status,0
 31327 ;; Tracked objects:
 31328 ;;		On entry : 0/0
 31329 ;;		On exit  : 0/0
 31330 ;;		Unchanged: 0/0
 31331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31332 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31333 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31335 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31336 ;;Total ram usage:       13 bytes
 31337 ;; Hardware stack levels used:    1
 31338 ;; This function calls:
 31339 ;;		Nothing
 31340 ;; This function is called by:
 31341 ;;		i2_printf
 31342 ;; This function uses a non-reentrant model
 31343 ;;
 31344                           
 31345                           	psect	text101
 31346  017C4C                     __ptext101:
 31347                           	opt stack 0
 31348  017C4C                     i2___lldiv:
 31349                           	opt stack 16
 31350                           
 31351                           ;incstack = 0
 31352  017C4C  0E00               	movlw	0
 31353  017C4E  6E09               	movwf	i2___lldiv@quotient,c
 31354  017C50  0E00               	movlw	0
 31355  017C52  6E0A               	movwf	i2___lldiv@quotient+1,c
 31356  017C54  0E00               	movlw	0
 31357  017C56  6E0B               	movwf	i2___lldiv@quotient+2,c
 31358  017C58  0E00               	movlw	0
 31359  017C5A  6E0C               	movwf	i2___lldiv@quotient+3,c
 31360  017C5C  5005               	movf	i2___lldiv@divisor,w,c
 31361  017C5E  1006               	iorwf	i2___lldiv@divisor+1,w,c
 31362  017C60  1007               	iorwf	i2___lldiv@divisor+2,w,c
 31363  017C62  1008               	iorwf	i2___lldiv@divisor+3,w,c
 31364  017C64  B4D8               	btfsc	status,2,c
 31365  017C66  D02A               	goto	i2l1999
 31366  017C68  0E01               	movlw	1
 31367  017C6A  6E0D               	movwf	i2___lldiv@counter,c
 31368  017C6C  D006               	goto	i2l1994
 31369  017C6E  90D8               	bcf	status,0,c
 31370  017C70  3605               	rlcf	i2___lldiv@divisor,f,c
 31371  017C72  3606               	rlcf	i2___lldiv@divisor+1,f,c
 31372  017C74  3607               	rlcf	i2___lldiv@divisor+2,f,c
 31373  017C76  3608               	rlcf	i2___lldiv@divisor+3,f,c
 31374  017C78  2A0D               	incf	i2___lldiv@counter,f,c
 31375  017C7A                     i2l1994:
 31376  017C7A  AE08               	btfss	i2___lldiv@divisor+3,7,c
 31377  017C7C  D7F8               	goto	i2l1995
 31378  017C7E                     i2u1732_40:
 31379  017C7E  90D8               	bcf	status,0,c
 31380  017C80  3609               	rlcf	i2___lldiv@quotient,f,c
 31381  017C82  360A               	rlcf	i2___lldiv@quotient+1,f,c
 31382  017C84  360B               	rlcf	i2___lldiv@quotient+2,f,c
 31383  017C86  360C               	rlcf	i2___lldiv@quotient+3,f,c
 31384  017C88  5005               	movf	i2___lldiv@divisor,w,c
 31385  017C8A  5C01               	subwf	i2___lldiv@dividend,w,c
 31386  017C8C  5006               	movf	i2___lldiv@divisor+1,w,c
 31387  017C8E  5802               	subwfb	i2___lldiv@dividend+1,w,c
 31388  017C90  5007               	movf	i2___lldiv@divisor+2,w,c
 31389  017C92  5803               	subwfb	i2___lldiv@dividend+2,w,c
 31390  017C94  5008               	movf	i2___lldiv@divisor+3,w,c
 31391  017C96  5804               	subwfb	i2___lldiv@dividend+3,w,c
 31392  017C98  A0D8               	btfss	status,0,c
 31393  017C9A  D009               	goto	i2l1998
 31394  017C9C  5005               	movf	i2___lldiv@divisor,w,c
 31395  017C9E  5E01               	subwf	i2___lldiv@dividend,f,c
 31396  017CA0  5006               	movf	i2___lldiv@divisor+1,w,c
 31397  017CA2  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 31398  017CA4  5007               	movf	i2___lldiv@divisor+2,w,c
 31399  017CA6  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 31400  017CA8  5008               	movf	i2___lldiv@divisor+3,w,c
 31401  017CAA  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 31402  017CAC  8009               	bsf	i2___lldiv@quotient,0,c
 31403  017CAE                     i2l1998:
 31404  017CAE  90D8               	bcf	status,0,c
 31405  017CB0  3208               	rrcf	i2___lldiv@divisor+3,f,c
 31406  017CB2  3207               	rrcf	i2___lldiv@divisor+2,f,c
 31407  017CB4  3206               	rrcf	i2___lldiv@divisor+1,f,c
 31408  017CB6  3205               	rrcf	i2___lldiv@divisor,f,c
 31409  017CB8  2E0D               	decfsz	i2___lldiv@counter,f,c
 31410  017CBA  D7E1               	goto	i2u1732_40
 31411  017CBC                     i2l1999:
 31412  017CBC  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 31413  017CC0  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 31414  017CC4  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 31415  017CC8  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 31416  017CCC  0012               	return		;funcret
 31417  017CCE                     __end_ofi2___lldiv:
 31418                           	opt stack 0
 31419                           tosu	equ	0xFFF
 31420                           tosh	equ	0xFFE
 31421                           tosl	equ	0xFFD
 31422                           pclatu	equ	0xFFB
 31423                           pclath	equ	0xFFA
 31424                           tblptru	equ	0xFF8
 31425                           tblptrh	equ	0xFF7
 31426                           tblptrl	equ	0xFF6
 31427                           tablat	equ	0xFF5
 31428                           prodh	equ	0xFF4
 31429                           prodl	equ	0xFF3
 31430                           intcon	equ	0xFF2
 31431                           indf0	equ	0xFEF
 31432                           postinc0	equ	0xFEE
 31433                           fsr0h	equ	0xFEA
 31434                           fsr0l	equ	0xFE9
 31435                           wreg	equ	0xFE8
 31436                           indf1	equ	0xFE7
 31437                           postdec1	equ	0xFE5
 31438                           plusw1	equ	0xFE3
 31439                           fsr1h	equ	0xFE2
 31440                           fsr1l	equ	0xFE1
 31441                           bsr	equ	0xFE0
 31442                           indf2	equ	0xFDF
 31443                           postinc2	equ	0xFDE
 31444                           postdec2	equ	0xFDD
 31445                           plusw2	equ	0xFDB
 31446                           fsr2h	equ	0xFDA
 31447                           fsr2l	equ	0xFD9
 31448                           status	equ	0xFD8
 31449                           
 31450 ;; *************** function _ADCC_ThresholdISR *****************
 31451 ;; Defined at:
 31452 ;;		line 298 in file "mcc_generated_files/adcc.c"
 31453 ;; Parameters:    Size  Location     Type
 31454 ;;		None
 31455 ;; Auto vars:     Size  Location     Type
 31456 ;;		None
 31457 ;; Return value:  Size  Location     Type
 31458 ;;                  1    wreg      void 
 31459 ;; Registers used:
 31460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31461 ;; Tracked objects:
 31462 ;;		On entry : 0/0
 31463 ;;		On exit  : 0/0
 31464 ;;		Unchanged: 0/0
 31465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31470 ;;Total ram usage:        0 bytes
 31471 ;; Hardware stack levels used:    1
 31472 ;; Hardware stack levels required when called:    7
 31473 ;; This function calls:
 31474 ;;		Absolute function
 31475 ;;		_ADCC_DefaultInterruptHandler
 31476 ;;		_ADCPostProcessingCallback
 31477 ;; This function is called by:
 31478 ;;		_INTERRUPT_InterruptManagerHigh
 31479 ;; This function uses a non-reentrant model
 31480 ;;
 31481                           
 31482                           	psect	text102
 31483  018952                     __ptext102:
 31484                           	opt stack 0
 31485  018952                     _ADCC_ThresholdISR:
 31486                           	opt stack 11
 31487                           
 31488                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 31489                           
 31490                           ;incstack = 0
 31491  018952  010E               	movlb	14	; () banked
 31492  018954  9334               	bcf	52,1,b	;volatile
 31493                           
 31494                           ; BSR set to: 14
 31495                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 31496  018956  0102               	movlb	2	; () banked
 31497  018958  5162               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31498  01895A  1163               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31499  01895C  1164               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31500  01895E  B4D8               	btfsc	status,2,c
 31501  018960  0012               	return	
 31502                           
 31503                           ; BSR set to: 2
 31504                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 31505  018962  D801               	call	i2u2596_48
 31506  018964  0012               	return	
 31507  018966                     i2u2596_48:
 31508  018966  0005               	push	
 31509  018968  6EFA               	movwf	pclath,c
 31510  01896A  5162               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31511  01896C  6EFD               	movwf	tosl,c
 31512  01896E  5163               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31513  018970  6EFE               	movwf	tosh,c
 31514  018972  5164               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31515  018974  6EFF               	movwf	tosu,c
 31516  018976  50FA               	movf	pclath,w,c
 31517  018978  0012               	return		;indir
 31518  01897A                     __end_of_ADCC_ThresholdISR:
 31519                           	opt stack 0
 31520                           tosu	equ	0xFFF
 31521                           tosh	equ	0xFFE
 31522                           tosl	equ	0xFFD
 31523                           pclatu	equ	0xFFB
 31524                           pclath	equ	0xFFA
 31525                           tblptru	equ	0xFF8
 31526                           tblptrh	equ	0xFF7
 31527                           tblptrl	equ	0xFF6
 31528                           tablat	equ	0xFF5
 31529                           prodh	equ	0xFF4
 31530                           prodl	equ	0xFF3
 31531                           intcon	equ	0xFF2
 31532                           indf0	equ	0xFEF
 31533                           postinc0	equ	0xFEE
 31534                           fsr0h	equ	0xFEA
 31535                           fsr0l	equ	0xFE9
 31536                           wreg	equ	0xFE8
 31537                           indf1	equ	0xFE7
 31538                           postdec1	equ	0xFE5
 31539                           plusw1	equ	0xFE3
 31540                           fsr1h	equ	0xFE2
 31541                           fsr1l	equ	0xFE1
 31542                           bsr	equ	0xFE0
 31543                           indf2	equ	0xFDF
 31544                           postinc2	equ	0xFDE
 31545                           postdec2	equ	0xFDD
 31546                           plusw2	equ	0xFDB
 31547                           fsr2h	equ	0xFDA
 31548                           fsr2l	equ	0xFD9
 31549                           status	equ	0xFD8
 31550                           
 31551 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31552 ;; Defined at:
 31553 ;;		line 310 in file "mcc_generated_files/adcc.c"
 31554 ;; Parameters:    Size  Location     Type
 31555 ;;		None
 31556 ;; Auto vars:     Size  Location     Type
 31557 ;;		None
 31558 ;; Return value:  Size  Location     Type
 31559 ;;                  1    wreg      void 
 31560 ;; Registers used:
 31561 ;;		None
 31562 ;; Tracked objects:
 31563 ;;		On entry : 0/0
 31564 ;;		On exit  : 0/0
 31565 ;;		Unchanged: 0/0
 31566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31571 ;;Total ram usage:        0 bytes
 31572 ;; Hardware stack levels used:    1
 31573 ;; This function calls:
 31574 ;;		Nothing
 31575 ;; This function is called by:
 31576 ;;		_ADCC_Initialize
 31577 ;;		_ADCC_ThresholdISR
 31578 ;; This function uses a non-reentrant model
 31579 ;;
 31580                           
 31581                           	psect	text103
 31582  018C58                     __ptext103:
 31583                           	opt stack 0
 31584  018C58                     _ADCC_DefaultInterruptHandler:
 31585                           	opt stack 17
 31586                           
 31587                           ;incstack = 0
 31588  018C58  0012               	return		;funcret
 31589  018C5A                     __end_of_ADCC_DefaultInterruptHandler:
 31590                           	opt stack 0
 31591                           tosu	equ	0xFFF
 31592                           tosh	equ	0xFFE
 31593                           tosl	equ	0xFFD
 31594                           pclatu	equ	0xFFB
 31595                           pclath	equ	0xFFA
 31596                           tblptru	equ	0xFF8
 31597                           tblptrh	equ	0xFF7
 31598                           tblptrl	equ	0xFF6
 31599                           tablat	equ	0xFF5
 31600                           prodh	equ	0xFF4
 31601                           prodl	equ	0xFF3
 31602                           intcon	equ	0xFF2
 31603                           indf0	equ	0xFEF
 31604                           postinc0	equ	0xFEE
 31605                           fsr0h	equ	0xFEA
 31606                           fsr0l	equ	0xFE9
 31607                           wreg	equ	0xFE8
 31608                           indf1	equ	0xFE7
 31609                           postdec1	equ	0xFE5
 31610                           plusw1	equ	0xFE3
 31611                           fsr1h	equ	0xFE2
 31612                           fsr1l	equ	0xFE1
 31613                           bsr	equ	0xFE0
 31614                           indf2	equ	0xFDF
 31615                           postinc2	equ	0xFDE
 31616                           postdec2	equ	0xFDD
 31617                           plusw2	equ	0xFDB
 31618                           fsr2h	equ	0xFDA
 31619                           fsr2l	equ	0xFD9
 31620                           status	equ	0xFD8
 31621                           
 31622 ;; *************** function _ADCPostProcessingCallback *****************
 31623 ;; Defined at:
 31624 ;;		line 170 in file "main.c"
 31625 ;; Parameters:    Size  Location     Type
 31626 ;;		None
 31627 ;; Auto vars:     Size  Location     Type
 31628 ;;  current_adc_    1  117[BANK0 ] enum E17425
 31629 ;; Return value:  Size  Location     Type
 31630 ;;                  1    wreg      void 
 31631 ;; Registers used:
 31632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31633 ;; Tracked objects:
 31634 ;;		On entry : 0/0
 31635 ;;		On exit  : 0/0
 31636 ;;		Unchanged: 0/0
 31637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31639 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31641 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31642 ;;Total ram usage:       21 bytes
 31643 ;; Hardware stack levels used:    1
 31644 ;; Hardware stack levels required when called:    6
 31645 ;; This function calls:
 31646 ;;		_ADCC_GetConversionResult
 31647 ;;		_ADCC_GetFilterValue
 31648 ;;		_ADCC_HasAccumulatorOverflowed
 31649 ;;		_ADCC_StopConversion
 31650 ;;		_abs
 31651 ;;		_currentMeasuredToPeak
 31652 ;;		_peakToRMS
 31653 ;;		i2_TMR7_StopTimer
 31654 ;;		i2___fladd
 31655 ;;		i2___fldiv
 31656 ;;		i2___flge
 31657 ;;		i2___flmul
 31658 ;;		i2___flneg
 31659 ;;		i2___fltol
 31660 ;;		i2___xxtofl
 31661 ;; This function is called by:
 31662 ;;		_main
 31663 ;;		_ADCC_ThresholdISR
 31664 ;; This function uses a non-reentrant model
 31665 ;;
 31666                           
 31667                           	psect	text104
 31668  012A32                     __ptext104:
 31669                           	opt stack 0
 31670  012A32                     _ADCPostProcessingCallback:
 31671                           	opt stack 11
 31672                           
 31673                           ;main.c: 173: ADCC_StopConversion();
 31674                           
 31675                           ;incstack = 0
 31676  012A32  EC27  F0C6         	call	_ADCC_StopConversion	;wreg free
 31677                           
 31678                           ;main.c: 176: adcc_channel_t current_adc_channel = ADPCH;
 31679  012A36  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 31680                           
 31681                           ;main.c: 179: switch (current_adc_channel) {
 31682  012A3A  EFF1  F099         	goto	i2l969
 31683  012A3E                     
 31684                           ;main.c: 183: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 31685  012A3E  EC90  F0C5         	call	_ADCC_GetConversionResult	;wreg free
 31686  012A42  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 31687  012A46  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 31688  012A4A  6A07               	clrf	i2___xxtofl@val+2,c
 31689  012A4C  6A08               	clrf	i2___xxtofl@val+3,c
 31690  012A4E  0E00               	movlw	0
 31691  012A50  EC70  F0B4         	call	i2___xxtofl
 31692  012A54  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 31693  012A58  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 31694  012A5C  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 31695  012A60  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 31696  012A64  0E0D               	movlw	13
 31697  012A66  6E34               	movwf	i2___flmul@a,c
 31698  012A68  0E68               	movlw	104
 31699  012A6A  6E35               	movwf	i2___flmul@a+1,c
 31700  012A6C  0E53               	movlw	83
 31701  012A6E  6E36               	movwf	i2___flmul@a+2,c
 31702  012A70  0E3B               	movlw	59
 31703  012A72  6E37               	movwf	i2___flmul@a+3,c
 31704  012A74  ECF8  F0A1         	call	i2___flmul	;wreg free
 31705  012A78  C030  F1D3         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 31706  012A7C  C031  F1D4         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 31707  012A80  C032  F1D5         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 31708  012A84  C033  F1D6         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 31709                           
 31710                           ;main.c: 185: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 31711  012A88  0E0A               	movlw	10
 31712  012A8A  6E34               	movwf	i2___flge@ff1,c
 31713  012A8C  0ED7               	movlw	215
 31714  012A8E  6E35               	movwf	i2___flge@ff1+1,c
 31715  012A90  0E23               	movlw	35
 31716  012A92  6E36               	movwf	i2___flge@ff1+2,c
 31717  012A94  0E3C               	movlw	60
 31718  012A96  6E37               	movwf	i2___flge@ff1+3,c
 31719  012A98  C1D3  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 31720  012A9C  C1D4  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 31721  012AA0  C1D5  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 31722  012AA4  C1D6  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 31723  012AA8  EC97  F0B8         	call	i2___flge	;wreg free
 31724  012AAC  A0D8               	btfss	status,0,c
 31725  012AAE  D005               	goto	i2u1743_40
 31726  012AB0  EC04  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 31727  012AB4  0900               	iorlw	0
 31728  012AB6  B4D8               	btfsc	status,2,c
 31729  012AB8  D007               	goto	i2l971
 31730  012ABA                     i2u1743_40:
 31731                           
 31732                           ;main.c: 187: LATFbits.LATF3 = 1;
 31733  012ABA  867E               	bsf	3966,3,c	;volatile
 31734                           
 31735                           ;main.c: 188: adc_error_flag = 1;
 31736  012ABC  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 31737                           
 31738                           ;main.c: 190: PIE5bits.TMR7IE = 0;
 31739  012ABE  010E               	movlb	14	; () banked
 31740  012AC0  9D2E               	bcf	46,6,b	;volatile
 31741                           
 31742                           ; BSR set to: 14
 31743                           ;main.c: 191: TMR7_StopTimer();
 31744  012AC2  EC24  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 31745                           
 31746                           ;main.c: 192: return;
 31747  012AC6  0012               	return	
 31748  012AC8                     i2l971:
 31749                           
 31750                           ;main.c: 194: }
 31751                           ;main.c: 196: next_channel = channel_FVR_buf1;
 31752  012AC8  0E3F               	movlw	63
 31753  012ACA  0101               	movlb	1	; () banked
 31754  012ACC  6FE8               	movwf	_next_channel& (0+255),b
 31755                           
 31756                           ;main.c: 198: break;
 31757  012ACE  0012               	return	
 31758  012AD0                     
 31759                           ;main.c: 203: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 31760                           
 31761                           ; BSR set to: 1
 31762  012AD0  0E0D               	movlw	13
 31763  012AD2  6E34               	movwf	i2___flmul@a,c
 31764  012AD4  0E68               	movlw	104
 31765  012AD6  6E35               	movwf	i2___flmul@a+1,c
 31766  012AD8  0E53               	movlw	83
 31767  012ADA  6E36               	movwf	i2___flmul@a+2,c
 31768  012ADC  0E3B               	movlw	59
 31769  012ADE  6E37               	movwf	i2___flmul@a+3,c
 31770  012AE0  EC90  F0C5         	call	_ADCC_GetConversionResult	;wreg free
 31771  012AE4  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 31772  012AE8  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 31773  012AEC  6A07               	clrf	i2___xxtofl@val+2,c
 31774  012AEE  6A08               	clrf	i2___xxtofl@val+3,c
 31775  012AF0  0E00               	movlw	0
 31776  012AF2  EC70  F0B4         	call	i2___xxtofl
 31777  012AF6  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 31778  012AFA  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 31779  012AFE  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 31780  012B02  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 31781  012B06  ECF8  F0A1         	call	i2___flmul	;wreg free
 31782  012B0A  C030  F056         	movff	?i2___flmul,i2___fladd@b
 31783  012B0E  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 31784  012B12  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 31785  012B16  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 31786  012B1A  C1D3  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 31787  012B1E  C1D4  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 31788  012B22  C1D5  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 31789  012B26  C1D6  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 31790  012B2A  EC3F  F0A5         	call	i2___fladd	;wreg free
 31791  012B2E  C056  F1E4         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 31792  012B32  C057  F1E5         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 31793  012B36  C058  F1E6         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 31794  012B3A  C059  F1E7         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 31795                           
 31796                           ;main.c: 204: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 31797  012B3E  0E6F               	movlw	111
 31798  012B40  6E13               	movwf	i2___fldiv@b,c
 31799  012B42  0E12               	movlw	18
 31800  012B44  6E14               	movwf	i2___fldiv@b+1,c
 31801  012B46  0E03               	movlw	3
 31802  012B48  6E15               	movwf	i2___fldiv@b+2,c
 31803  012B4A  0E40               	movlw	64
 31804  012B4C  6E16               	movwf	i2___fldiv@b+3,c
 31805  012B4E  C1E4  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 31806  012B52  C1E5  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 31807  012B56  C1E6  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 31808  012B5A  C1E7  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 31809  012B5E  ECFF  F0AD         	call	i2___fldiv	;wreg free
 31810  012B62  C013  F258         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 31811  012B66  C014  F259         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 31812  012B6A  C015  F25A         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 31813  012B6E  C016  F25B         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 31814                           
 31815                           ;main.c: 206: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 31816  012B72  0E00               	movlw	0
 31817  012B74  6E34               	movwf	i2___flge@ff1,c
 31818  012B76  0E00               	movlw	0
 31819  012B78  6E35               	movwf	i2___flge@ff1+1,c
 31820  012B7A  0E20               	movlw	32
 31821  012B7C  6E36               	movwf	i2___flge@ff1+2,c
 31822  012B7E  0E40               	movlw	64
 31823  012B80  6E37               	movwf	i2___flge@ff1+3,c
 31824  012B82  C1E4  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 31825  012B86  C1E5  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 31826  012B8A  C1E6  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 31827  012B8E  C1E7  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 31828  012B92  EC97  F0B8         	call	i2___flge	;wreg free
 31829  012B96  A0D8               	btfss	status,0,c
 31830  012B98  D019               	goto	i2u1746_40
 31831  012B9A  C1E4  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 31832  012B9E  C1E5  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 31833  012BA2  C1E6  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 31834  012BA6  C1E7  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 31835  012BAA  0E00               	movlw	0
 31836  012BAC  6E38               	movwf	i2___flge@ff2,c
 31837  012BAE  0E00               	movlw	0
 31838  012BB0  6E39               	movwf	i2___flge@ff2+1,c
 31839  012BB2  0E00               	movlw	0
 31840  012BB4  6E3A               	movwf	i2___flge@ff2+2,c
 31841  012BB6  0E40               	movlw	64
 31842  012BB8  6E3B               	movwf	i2___flge@ff2+3,c
 31843  012BBA  EC97  F0B8         	call	i2___flge	;wreg free
 31844  012BBE  A0D8               	btfss	status,0,c
 31845  012BC0  D005               	goto	i2u1746_40
 31846  012BC2  EC04  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 31847  012BC6  0900               	iorlw	0
 31848  012BC8  B4D8               	btfsc	status,2,c
 31849  012BCA  D007               	goto	i2l977
 31850  012BCC                     i2u1746_40:
 31851                           
 31852                           ;main.c: 208: LATFbits.LATF3 = 1;
 31853  012BCC  867E               	bsf	3966,3,c	;volatile
 31854                           
 31855                           ;main.c: 209: adc_error_flag = 1;
 31856  012BCE  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 31857                           
 31858                           ;main.c: 211: PIE5bits.TMR7IE = 0;
 31859  012BD0  010E               	movlb	14	; () banked
 31860  012BD2  9D2E               	bcf	46,6,b	;volatile
 31861                           
 31862                           ; BSR set to: 14
 31863                           ;main.c: 212: TMR7_StopTimer();
 31864  012BD4  EC24  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 31865                           
 31866                           ;main.c: 213: return;
 31867  012BD8  0012               	return	
 31868  012BDA                     i2l977:
 31869                           
 31870                           ;main.c: 215: }
 31871                           ;main.c: 217: next_channel = POS3P3_ADC;
 31872  012BDA  0E22               	movlw	34
 31873  012BDC  0101               	movlb	1	; () banked
 31874  012BDE  6FE8               	movwf	_next_channel& (0+255),b
 31875                           
 31876                           ;main.c: 219: break;
 31877  012BE0  0012               	return	
 31878  012BE2                     
 31879                           ;main.c: 224: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 31880                           
 31881                           ; BSR set to: 1
 31882  012BE2  C258  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 31883  012BE6  C259  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 31884  012BEA  C25A  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 31885  012BEE  C25B  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 31886  012BF2  EC86  F0C5         	call	_ADCC_GetFilterValue	;wreg free
 31887  012BF6  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 31888  012BFA  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 31889  012BFE  6A07               	clrf	i2___xxtofl@val+2,c
 31890  012C00  6A08               	clrf	i2___xxtofl@val+3,c
 31891  012C02  0E00               	movlw	0
 31892  012C04  EC70  F0B4         	call	i2___xxtofl
 31893  012C08  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 31894  012C0C  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 31895  012C10  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 31896  012C14  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 31897  012C18  ECF8  F0A1         	call	i2___flmul	;wreg free
 31898  012C1C  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4130
 31899  012C20  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4130+1
 31900  012C24  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4130+2
 31901  012C28  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4130+3
 31902                           
 31903                           ;main.c: 224: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 31904  012C2C  C0D6  F030         	movff	_ADCPostProcessingCallback$4130,i2___flmul@b
 31905  012C30  C0D7  F031         	movff	_ADCPostProcessingCallback$4130+1,i2___flmul@b+1
 31906  012C34  C0D8  F032         	movff	_ADCPostProcessingCallback$4130+2,i2___flmul@b+2
 31907  012C38  C0D9  F033         	movff	_ADCPostProcessingCallback$4130+3,i2___flmul@b+3
 31908  012C3C  0E0D               	movlw	13
 31909  012C3E  6E34               	movwf	i2___flmul@a,c
 31910  012C40  0E68               	movlw	104
 31911  012C42  6E35               	movwf	i2___flmul@a+1,c
 31912  012C44  0ED3               	movlw	211
 31913  012C46  6E36               	movwf	i2___flmul@a+2,c
 31914  012C48  0E3B               	movlw	59
 31915  012C4A  6E37               	movwf	i2___flmul@a+3,c
 31916  012C4C  ECF8  F0A1         	call	i2___flmul	;wreg free
 31917  012C50  C030  F1CF         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 31918  012C54  C031  F1D0         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 31919  012C58  C032  F1D1         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 31920  012C5C  C033  F1D2         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 31921                           
 31922                           ;main.c: 226: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 31923  012C60  0E00               	movlw	0
 31924  012C62  6E34               	movwf	i2___flge@ff1,c
 31925  012C64  0E00               	movlw	0
 31926  012C66  6E35               	movwf	i2___flge@ff1+1,c
 31927  012C68  0E60               	movlw	96
 31928  012C6A  6E36               	movwf	i2___flge@ff1+2,c
 31929  012C6C  0E40               	movlw	64
 31930  012C6E  6E37               	movwf	i2___flge@ff1+3,c
 31931  012C70  C1CF  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 31932  012C74  C1D0  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 31933  012C78  C1D1  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 31934  012C7C  C1D2  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 31935  012C80  EC97  F0B8         	call	i2___flge	;wreg free
 31936  012C84  A0D8               	btfss	status,0,c
 31937  012C86  D005               	goto	i2u1748_40
 31938  012C88  EC04  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 31939  012C8C  0900               	iorlw	0
 31940  012C8E  B4D8               	btfsc	status,2,c
 31941  012C90  D007               	goto	i2l981
 31942  012C92                     i2u1748_40:
 31943                           
 31944                           ;main.c: 228: LATFbits.LATF3 = 1;
 31945  012C92  867E               	bsf	3966,3,c	;volatile
 31946                           
 31947                           ;main.c: 229: adc_error_flag = 1;
 31948  012C94  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 31949                           
 31950                           ;main.c: 231: PIE5bits.TMR7IE = 0;
 31951  012C96  010E               	movlb	14	; () banked
 31952  012C98  9D2E               	bcf	46,6,b	;volatile
 31953                           
 31954                           ; BSR set to: 14
 31955                           ;main.c: 232: TMR7_StopTimer();
 31956  012C9A  EC24  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 31957                           
 31958                           ;main.c: 233: return;
 31959  012C9E  0012               	return	
 31960  012CA0                     i2l981:
 31961                           
 31962                           ;main.c: 235: }
 31963                           ;main.c: 237: next_channel = ISNS_ADC;
 31964  012CA0  0E00               	movlw	0
 31965  012CA2  0101               	movlb	1	; () banked
 31966  012CA4  6FE8               	movwf	_next_channel& (0+255),b
 31967                           
 31968                           ;main.c: 239: break;
 31969  012CA6  0012               	return	
 31970  012CA8                     
 31971                           ;main.c: 244: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 31972                           
 31973                           ; BSR set to: 1
 31974  012CA8  0E00               	movlw	0
 31975  012CAA  6E17               	movwf	i2___fldiv@a,c
 31976  012CAC  0EC0               	movlw	192
 31977  012CAE  6E18               	movwf	i2___fldiv@a+1,c
 31978  012CB0  0E7F               	movlw	127
 31979  012CB2  6E19               	movwf	i2___fldiv@a+2,c
 31980  012CB4  0E44               	movlw	68
 31981  012CB6  6E1A               	movwf	i2___fldiv@a+3,c
 31982  012CB8  C1CF  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 31983  012CBC  C1D0  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 31984  012CC0  C1D1  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 31985  012CC4  C1D2  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 31986  012CC8  ECFF  F0AD         	call	i2___fldiv	;wreg free
 31987  012CCC  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 31988  012CD0  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 31989  012CD4  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 31990  012CD8  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 31991  012CDC  EC86  F0C5         	call	_ADCC_GetFilterValue	;wreg free
 31992  012CE0  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 31993  012CE4  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 31994  012CE8  6A07               	clrf	i2___xxtofl@val+2,c
 31995  012CEA  6A08               	clrf	i2___xxtofl@val+3,c
 31996  012CEC  0E00               	movlw	0
 31997  012CEE  EC70  F0B4         	call	i2___xxtofl
 31998  012CF2  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 31999  012CF6  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 32000  012CFA  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 32001  012CFE  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 32002  012D02  ECF8  F0A1         	call	i2___flmul	;wreg free
 32003  012D06  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4130
 32004  012D0A  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4130+1
 32005  012D0E  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4130+2
 32006  012D12  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4130+3
 32007                           
 32008                           ;main.c: 244: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 32009  012D16  C0D6  F030         	movff	_ADCPostProcessingCallback$4130,i2___flmul@b
 32010  012D1A  C0D7  F031         	movff	_ADCPostProcessingCallback$4130+1,i2___flmul@b+1
 32011  012D1E  C0D8  F032         	movff	_ADCPostProcessingCallback$4130+2,i2___flmul@b+2
 32012  012D22  C0D9  F033         	movff	_ADCPostProcessingCallback$4130+3,i2___flmul@b+3
 32013  012D26  0E35               	movlw	53
 32014  012D28  6E34               	movwf	i2___flmul@a,c
 32015  012D2A  0E5E               	movlw	94
 32016  012D2C  6E35               	movwf	i2___flmul@a+1,c
 32017  012D2E  0EF2               	movlw	242
 32018  012D30  6E36               	movwf	i2___flmul@a+2,c
 32019  012D32  0E3F               	movlw	63
 32020  012D34  6E37               	movwf	i2___flmul@a+3,c
 32021  012D36  ECF8  F0A1         	call	i2___flmul	;wreg free
 32022  012D3A  C030  F1C3         	movff	?i2___flmul,_Imeas	;volatile
 32023  012D3E  C031  F1C4         	movff	?i2___flmul+1,_Imeas+1	;volatile
 32024  012D42  C032  F1C5         	movff	?i2___flmul+2,_Imeas+2	;volatile
 32025  012D46  C033  F1C6         	movff	?i2___flmul+3,_Imeas+3	;volatile
 32026                           
 32027                           ;main.c: 248: if (LATGbits.LATG0 != 1) {
 32028  012D4A  B07F               	btfsc	3967,0,c	;volatile
 32029  012D4C  D128               	goto	i2l985
 32030                           
 32031                           ;main.c: 253: if (load_enable) {
 32032  012D4E  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 32033  012D50  D0CD               	goto	i2l986
 32034                           
 32035                           ;main.c: 256: if (dimming_period < 0x7FEE) {
 32036  012D52  0EEE               	movlw	238
 32037  012D54  0100               	movlb	0	; () banked
 32038  012D56  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 32039  012D58  0E7F               	movlw	127
 32040  012D5A  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 32041  012D5C  B0D8               	btfsc	status,0,c
 32042  012D5E  D052               	goto	i2l987
 32043                           
 32044                           ; BSR set to: 0
 32045                           ;main.c: 258: Ipk = Imeas;
 32046  012D60  C1C3  F1C7         	movff	_Imeas,_Ipk	;volatile
 32047  012D64  C1C4  F1C8         	movff	_Imeas+1,_Ipk+1	;volatile
 32048  012D68  C1C5  F1C9         	movff	_Imeas+2,_Ipk+2	;volatile
 32049  012D6C  C1C6  F1CA         	movff	_Imeas+3,_Ipk+3	;volatile
 32050                           
 32051                           ; BSR set to: 0
 32052                           ;main.c: 259: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 32053  012D70  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 32054  012D74  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 32055  012D78  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 32056  012D7C  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 32057  012D80  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 32058  012D84  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 32059  012D88  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 32060  012D8C  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 32061  012D90  ECB0  F0B0         	call	_peakToRMS	;wreg free
 32062  012D94  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4131
 32063  012D98  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4131+1
 32064  012D9C  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4131+2
 32065  012DA0  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4131+3
 32066                           
 32067                           ;main.c: 259: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 32068  012DA4  C2C8  F05A         	movff	_Irms_offset,i2___fladd@a
 32069  012DA8  C2C9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 32070  012DAC  C2CA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 32071  012DB0  C2CB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 32072  012DB4  C0DA  F056         	movff	_ADCPostProcessingCallback$4131,i2___fladd@b
 32073  012DB8  C0DB  F057         	movff	_ADCPostProcessingCallback$4131+1,i2___fladd@b+1
 32074  012DBC  C0DC  F058         	movff	_ADCPostProcessingCallback$4131+2,i2___fladd@b+2
 32075  012DC0  C0DD  F059         	movff	_ADCPostProcessingCallback$4131+3,i2___fladd@b+3
 32076  012DC4  EC3F  F0A5         	call	i2___fladd	;wreg free
 32077  012DC8  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 32078  012DCC  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 32079  012DD0  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 32080  012DD4  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 32081  012DD8  EC9F  F0BA         	call	i2___fltol	;wreg free
 32082  012DDC  C06C  F076         	movff	?i2___fltol,abs@a
 32083  012DE0  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 32084  012DE4  EC6C  F0C4         	call	_abs	;wreg free
 32085  012DE8  0100               	movlb	0	; () banked
 32086  012DEA  C076  F005         	movff	?_abs,i2___xxtofl@val
 32087  012DEE  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 32088  012DF2  0E00               	movlw	0
 32089  012DF4  BE06               	btfsc	i2___xxtofl@val+1,7,c
 32090  012DF6  0EFF               	movlw	-1
 32091  012DF8  6E07               	movwf	i2___xxtofl@val+2,c
 32092  012DFA  6E08               	movwf	i2___xxtofl@val+3,c
 32093  012DFC  0E01               	movlw	1
 32094  012DFE  EC70  F0B4         	call	i2___xxtofl
 32095  012E02  D063               	goto	L17
 32096  012E04                     i2l987:
 32097                           
 32098                           ;main.c: 264: else {
 32099                           ;main.c: 266: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 32100  012E04  C1C3  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 32101  012E08  C1C4  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 32102  012E0C  C1C5  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 32103  012E10  C1C6  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 32104  012E14  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 32105  012E18  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 32106  012E1C  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 32107  012E20  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 32108  012E24  EC67  F0BE         	call	_currentMeasuredToPeak	;wreg free
 32109  012E28  C099  F1C7         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 32110  012E2C  C09A  F1C8         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 32111  012E30  C09B  F1C9         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 32112  012E34  C09C  F1CA         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 32113                           
 32114                           ;main.c: 267: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 32115  012E38  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 32116  012E3C  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 32117  012E40  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 32118  012E44  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 32119  012E48  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 32120  012E4C  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 32121  012E50  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 32122  012E54  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 32123  012E58  ECB0  F0B0         	call	_peakToRMS	;wreg free
 32124  012E5C  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4131
 32125  012E60  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4131+1
 32126  012E64  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4131+2
 32127  012E68  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4131+3
 32128                           
 32129                           ;main.c: 267: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 32130  012E6C  C2C8  F05A         	movff	_Irms_offset,i2___fladd@a
 32131  012E70  C2C9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 32132  012E74  C2CA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 32133  012E78  C2CB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 32134  012E7C  C0DA  F056         	movff	_ADCPostProcessingCallback$4131,i2___fladd@b
 32135  012E80  C0DB  F057         	movff	_ADCPostProcessingCallback$4131+1,i2___fladd@b+1
 32136  012E84  C0DC  F058         	movff	_ADCPostProcessingCallback$4131+2,i2___fladd@b+2
 32137  012E88  C0DD  F059         	movff	_ADCPostProcessingCallback$4131+3,i2___fladd@b+3
 32138  012E8C  EC3F  F0A5         	call	i2___fladd	;wreg free
 32139  012E90  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 32140  012E94  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 32141  012E98  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 32142  012E9C  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 32143  012EA0  EC9F  F0BA         	call	i2___fltol	;wreg free
 32144  012EA4  C06C  F076         	movff	?i2___fltol,abs@a
 32145  012EA8  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 32146  012EAC  EC6C  F0C4         	call	_abs	;wreg free
 32147  012EB0  0100               	movlb	0	; () banked
 32148  012EB2  C076  F005         	movff	?_abs,i2___xxtofl@val
 32149  012EB6  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 32150  012EBA  0E00               	movlw	0
 32151  012EBC  BE06               	btfsc	i2___xxtofl@val+1,7,c
 32152  012EBE  0EFF               	movlw	-1
 32153  012EC0  6E07               	movwf	i2___xxtofl@val+2,c
 32154  012EC2  6E08               	movwf	i2___xxtofl@val+3,c
 32155  012EC4  0E01               	movlw	1
 32156  012EC6  EC70  F0B4         	call	i2___xxtofl
 32157  012ECA                     L17:
 32158  012ECA  C005  F0F6         	movff	?i2___xxtofl,_Irms	;volatile
 32159  012ECE  C006  F0F7         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 32160  012ED2  C007  F0F8         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 32161  012ED6  C008  F0F9         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 32162                           
 32163                           ;main.c: 269: }
 32164                           ;main.c: 271: Vpk = Vpk_const;
 32165  012EDA  C2CC  F250         	movff	_Vpk_const,_Vpk	;volatile
 32166  012EDE  C2CD  F251         	movff	_Vpk_const+1,_Vpk+1	;volatile
 32167  012EE2  C2CE  F252         	movff	_Vpk_const+2,_Vpk+2	;volatile
 32168  012EE6  C2CF  F253         	movff	_Vpk_const+3,_Vpk+3	;volatile
 32169                           
 32170                           ;main.c: 273: }
 32171  012EEA  D02C               	goto	i2l989
 32172  012EEC                     i2l986:
 32173                           
 32174                           ;main.c: 275: else {
 32175                           ;main.c: 277: Ipk = 0.0;
 32176  012EEC  0E00               	movlw	0
 32177  012EEE  0101               	movlb	1	; () banked
 32178  012EF0  6FC7               	movwf	_Ipk& (0+255),b	;volatile
 32179  012EF2  0E00               	movlw	0
 32180  012EF4  6FC8               	movwf	(_Ipk+1)& (0+255),b	;volatile
 32181  012EF6  0E00               	movlw	0
 32182  012EF8  6FC9               	movwf	(_Ipk+2)& (0+255),b	;volatile
 32183  012EFA  0E00               	movlw	0
 32184  012EFC  6FCA               	movwf	(_Ipk+3)& (0+255),b	;volatile
 32185                           
 32186                           ;main.c: 278: Vpk = 0.0;
 32187  012EFE  0E00               	movlw	0
 32188  012F00  0102               	movlb	2	; () banked
 32189  012F02  6F50               	movwf	_Vpk& (0+255),b	;volatile
 32190  012F04  0E00               	movlw	0
 32191  012F06  6F51               	movwf	(_Vpk+1)& (0+255),b	;volatile
 32192  012F08  0E00               	movlw	0
 32193  012F0A  6F52               	movwf	(_Vpk+2)& (0+255),b	;volatile
 32194  012F0C  0E00               	movlw	0
 32195  012F0E  6F53               	movwf	(_Vpk+3)& (0+255),b	;volatile
 32196                           
 32197                           ; BSR set to: 2
 32198                           ;main.c: 279: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 32199  012F10  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 32200  012F14  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 32201  012F18  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 32202  012F1C  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 32203  012F20  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 32204  012F24  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 32205  012F28  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 32206  012F2C  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 32207  012F30  ECB0  F0B0         	call	_peakToRMS	;wreg free
 32208  012F34  C0B1  F0F6         	movff	?_peakToRMS,_Irms	;volatile
 32209  012F38  C0B2  F0F7         	movff	?_peakToRMS+1,_Irms+1	;volatile
 32210  012F3C  C0B3  F0F8         	movff	?_peakToRMS+2,_Irms+2	;volatile
 32211  012F40  C0B4  F0F9         	movff	?_peakToRMS+3,_Irms+3	;volatile
 32212  012F44                     i2l989:
 32213                           
 32214                           ;main.c: 281: }
 32215                           ;main.c: 283: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 32216  012F44  C250  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 32217  012F48  C251  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 32218  012F4C  C252  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 32219  012F50  C253  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 32220  012F54  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 32221  012F58  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 32222  012F5C  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 32223  012F60  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 32224  012F64  ECB0  F0B0         	call	_peakToRMS	;wreg free
 32225  012F68  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 32226  012F6C  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 32227  012F70  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 32228  012F74  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 32229                           
 32230                           ;main.c: 284: Avg_Power = Vrms * Irms;
 32231  012F78  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 32232  012F7C  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 32233  012F80  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 32234  012F84  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 32235  012F88  C0F6  F034         	movff	_Irms,i2___flmul@a	;volatile
 32236  012F8C  C0F7  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 32237  012F90  C0F8  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 32238  012F94  C0F9  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 32239  012F98  ECF8  F0A1         	call	i2___flmul	;wreg free
 32240  012F9C  D087               	goto	L18
 32241  012F9E                     i2l985:
 32242                           
 32243                           ;main.c: 289: else {
 32244                           ;main.c: 291: Ipk = Imeas;
 32245  012F9E  C1C3  F1C7         	movff	_Imeas,_Ipk	;volatile
 32246  012FA2  C1C4  F1C8         	movff	_Imeas+1,_Ipk+1	;volatile
 32247  012FA6  C1C5  F1C9         	movff	_Imeas+2,_Ipk+2	;volatile
 32248  012FAA  C1C6  F1CA         	movff	_Imeas+3,_Ipk+3	;volatile
 32249                           
 32250                           ;main.c: 292: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 32251  012FAE  0E00               	movlw	0
 32252  012FB0  0100               	movlb	0	; () banked
 32253  012FB2  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 32254  012FB4  0E00               	movlw	0
 32255  012FB6  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 32256  012FB8  0E00               	movlw	0
 32257  012FBA  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 32258  012FBC  0E00               	movlw	0
 32259  012FBE  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 32260  012FC0  C1C7  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 32261  012FC4  C1C8  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 32262  012FC8  C1C9  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 32263  012FCC  C1CA  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 32264  012FD0  ECB0  F0B0         	call	_peakToRMS	;wreg free
 32265  012FD4  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4131
 32266  012FD8  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4131+1
 32267  012FDC  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4131+2
 32268  012FE0  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4131+3
 32269                           
 32270                           ;main.c: 292: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 32271  012FE4  C2C8  F05A         	movff	_Irms_offset,i2___fladd@a
 32272  012FE8  C2C9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 32273  012FEC  C2CA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 32274  012FF0  C2CB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 32275  012FF4  C0DA  F056         	movff	_ADCPostProcessingCallback$4131,i2___fladd@b
 32276  012FF8  C0DB  F057         	movff	_ADCPostProcessingCallback$4131+1,i2___fladd@b+1
 32277  012FFC  C0DC  F058         	movff	_ADCPostProcessingCallback$4131+2,i2___fladd@b+2
 32278  013000  C0DD  F059         	movff	_ADCPostProcessingCallback$4131+3,i2___fladd@b+3
 32279  013004  EC3F  F0A5         	call	i2___fladd	;wreg free
 32280  013008  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 32281  01300C  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 32282  013010  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 32283  013014  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 32284  013018  EC9F  F0BA         	call	i2___fltol	;wreg free
 32285  01301C  C06C  F076         	movff	?i2___fltol,abs@a
 32286  013020  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 32287  013024  EC6C  F0C4         	call	_abs	;wreg free
 32288  013028  0100               	movlb	0	; () banked
 32289  01302A  C076  F005         	movff	?_abs,i2___xxtofl@val
 32290  01302E  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 32291  013032  0E00               	movlw	0
 32292  013034  BE06               	btfsc	i2___xxtofl@val+1,7,c
 32293  013036  0EFF               	movlw	-1
 32294  013038  6E07               	movwf	i2___xxtofl@val+2,c
 32295  01303A  6E08               	movwf	i2___xxtofl@val+3,c
 32296  01303C  0E01               	movlw	1
 32297  01303E  EC70  F0B4         	call	i2___xxtofl
 32298  013042  C005  F0F6         	movff	?i2___xxtofl,_Irms	;volatile
 32299  013046  C006  F0F7         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 32300  01304A  C007  F0F8         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 32301  01304E  C008  F0F9         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 32302                           
 32303                           ;main.c: 293: Vrms = peakToRMS(Vpk_const, 0.0);
 32304  013052  C2CC  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 32305  013056  C2CD  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 32306  01305A  C2CE  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 32307  01305E  C2CF  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 32308  013062  0E00               	movlw	0
 32309  013064  0100               	movlb	0	; () banked
 32310  013066  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 32311  013068  0E00               	movlw	0
 32312  01306A  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 32313  01306C  0E00               	movlw	0
 32314  01306E  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 32315  013070  0E00               	movlw	0
 32316  013072  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 32317  013074  ECB0  F0B0         	call	_peakToRMS	;wreg free
 32318  013078  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 32319  01307C  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 32320  013080  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 32321  013084  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 32322                           
 32323                           ;main.c: 294: Avg_Power = Vrms * Irms;
 32324  013088  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 32325  01308C  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 32326  013090  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 32327  013094  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 32328  013098  C0F6  F034         	movff	_Irms,i2___flmul@a	;volatile
 32329  01309C  C0F7  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 32330  0130A0  C0F8  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 32331  0130A4  C0F9  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 32332  0130A8  ECF8  F0A1         	call	i2___flmul	;wreg free
 32333  0130AC                     L18:
 32334  0130AC  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 32335  0130B0  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 32336  0130B4  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 32337  0130B8  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 32338                           
 32339                           ;main.c: 296: }
 32340                           ;main.c: 298: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 32341  0130BC  0E00               	movlw	0
 32342  0130BE  6E34               	movwf	i2___flge@ff1,c
 32343  0130C0  0E00               	movlw	0
 32344  0130C2  6E35               	movwf	i2___flge@ff1+1,c
 32345  0130C4  0EA0               	movlw	160
 32346  0130C6  6E36               	movwf	i2___flge@ff1+2,c
 32347  0130C8  0E40               	movlw	64
 32348  0130CA  6E37               	movwf	i2___flge@ff1+3,c
 32349  0130CC  C0F6  F038         	movff	_Irms,i2___flge@ff2	;volatile
 32350  0130D0  C0F7  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 32351  0130D4  C0F8  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 32352  0130D8  C0F9  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 32353  0130DC  EC97  F0B8         	call	i2___flge	;wreg free
 32354  0130E0  A0D8               	btfss	status,0,c
 32355  0130E2  D005               	goto	i2u1753_40
 32356  0130E4  EC04  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 32357  0130E8  0900               	iorlw	0
 32358  0130EA  B4D8               	btfsc	status,2,c
 32359  0130EC  D007               	goto	i2l991
 32360  0130EE                     i2u1753_40:
 32361                           
 32362                           ;main.c: 300: LATFbits.LATF3 = 1;
 32363  0130EE  867E               	bsf	3966,3,c	;volatile
 32364                           
 32365                           ;main.c: 301: adc_error_flag = 1;
 32366  0130F0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32367                           
 32368                           ;main.c: 303: PIE5bits.TMR7IE = 0;
 32369  0130F2  010E               	movlb	14	; () banked
 32370  0130F4  9D2E               	bcf	46,6,b	;volatile
 32371                           
 32372                           ; BSR set to: 14
 32373                           ;main.c: 304: TMR7_StopTimer();
 32374  0130F6  EC24  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32375                           
 32376                           ;main.c: 305: return;
 32377  0130FA  0012               	return	
 32378  0130FC                     i2l991:
 32379                           
 32380                           ;main.c: 307: }
 32381                           ;main.c: 309: next_channel = POS12_ADC;
 32382  0130FC  0E04               	movlw	4
 32383  0130FE  0101               	movlb	1	; () banked
 32384  013100  6FE8               	movwf	_next_channel& (0+255),b
 32385                           
 32386                           ;main.c: 311: break;
 32387  013102  0012               	return	
 32388  013104                     
 32389                           ;main.c: 316: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 32390                           
 32391                           ; BSR set to: 1
 32392  013104  0E00               	movlw	0
 32393  013106  6E17               	movwf	i2___fldiv@a,c
 32394  013108  0EC0               	movlw	192
 32395  01310A  6E18               	movwf	i2___fldiv@a+1,c
 32396  01310C  0E7F               	movlw	127
 32397  01310E  6E19               	movwf	i2___fldiv@a+2,c
 32398  013110  0E44               	movlw	68
 32399  013112  6E1A               	movwf	i2___fldiv@a+3,c
 32400  013114  C1CF  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 32401  013118  C1D0  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 32402  01311C  C1D1  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 32403  013120  C1D2  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 32404  013124  ECFF  F0AD         	call	i2___fldiv	;wreg free
 32405  013128  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 32406  01312C  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 32407  013130  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 32408  013134  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 32409  013138  EC86  F0C5         	call	_ADCC_GetFilterValue	;wreg free
 32410  01313C  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 32411  013140  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 32412  013144  6A07               	clrf	i2___xxtofl@val+2,c
 32413  013146  6A08               	clrf	i2___xxtofl@val+3,c
 32414  013148  0E00               	movlw	0
 32415  01314A  EC70  F0B4         	call	i2___xxtofl
 32416  01314E  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 32417  013152  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 32418  013156  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 32419  01315A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 32420  01315E  ECF8  F0A1         	call	i2___flmul	;wreg free
 32421  013162  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4130
 32422  013166  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4130+1
 32423  01316A  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4130+2
 32424  01316E  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4130+3
 32425                           
 32426                           ;main.c: 316: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 32427  013172  C0D6  F030         	movff	_ADCPostProcessingCallback$4130,i2___flmul@b
 32428  013176  C0D7  F031         	movff	_ADCPostProcessingCallback$4130+1,i2___flmul@b+1
 32429  01317A  C0D8  F032         	movff	_ADCPostProcessingCallback$4130+2,i2___flmul@b+2
 32430  01317E  C0D9  F033         	movff	_ADCPostProcessingCallback$4130+3,i2___flmul@b+3
 32431  013182  0E3E               	movlw	62
 32432  013184  6E34               	movwf	i2___flmul@a,c
 32433  013186  0EF8               	movlw	248
 32434  013188  6E35               	movwf	i2___flmul@a+1,c
 32435  01318A  0E80               	movlw	128
 32436  01318C  6E36               	movwf	i2___flmul@a+2,c
 32437  01318E  0E40               	movlw	64
 32438  013190  6E37               	movwf	i2___flmul@a+3,c
 32439  013192  ECF8  F0A1         	call	i2___flmul	;wreg free
 32440  013196  C030  F1CB         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 32441  01319A  C031  F1CC         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 32442  01319E  C032  F1CD         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 32443  0131A2  C033  F1CE         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 32444                           
 32445                           ;main.c: 318: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 32446  0131A6  0E9A               	movlw	154
 32447  0131A8  6E34               	movwf	i2___flge@ff1,c
 32448  0131AA  0E99               	movlw	153
 32449  0131AC  6E35               	movwf	i2___flge@ff1+1,c
 32450  0131AE  0E59               	movlw	89
 32451  0131B0  6E36               	movwf	i2___flge@ff1+2,c
 32452  0131B2  0E41               	movlw	65
 32453  0131B4  6E37               	movwf	i2___flge@ff1+3,c
 32454  0131B6  C1CB  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 32455  0131BA  C1CC  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 32456  0131BE  C1CD  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 32457  0131C2  C1CE  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 32458  0131C6  EC97  F0B8         	call	i2___flge	;wreg free
 32459  0131CA  A0D8               	btfss	status,0,c
 32460  0131CC  D005               	goto	i2u1755_40
 32461  0131CE  EC04  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 32462  0131D2  0900               	iorlw	0
 32463  0131D4  B4D8               	btfsc	status,2,c
 32464  0131D6  D007               	goto	i2l995
 32465  0131D8                     i2u1755_40:
 32466                           
 32467                           ;main.c: 320: LATFbits.LATF3 = 1;
 32468  0131D8  867E               	bsf	3966,3,c	;volatile
 32469                           
 32470                           ;main.c: 321: adc_error_flag = 1;
 32471  0131DA  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32472                           
 32473                           ;main.c: 323: PIE5bits.TMR7IE = 0;
 32474  0131DC  010E               	movlb	14	; () banked
 32475  0131DE  9D2E               	bcf	46,6,b	;volatile
 32476                           
 32477                           ; BSR set to: 14
 32478                           ;main.c: 324: TMR7_StopTimer();
 32479  0131E0  EC24  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32480                           
 32481                           ;main.c: 325: return;
 32482  0131E4  0012               	return	
 32483  0131E6                     i2l995:
 32484                           
 32485                           ;main.c: 327: }
 32486                           ;main.c: 329: next_channel = channel_Temp;
 32487  0131E6  0E3D               	movlw	61
 32488  0131E8  0101               	movlb	1	; () banked
 32489  0131EA  6FE8               	movwf	_next_channel& (0+255),b
 32490                           
 32491                           ;main.c: 331: break;
 32492  0131EC  0012               	return	
 32493  0131EE                     
 32494                           ;main.c: 336: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 32495                           
 32496                           ; BSR set to: 1
 32497  0131EE  0E00               	movlw	0
 32498  0131F0  6E17               	movwf	i2___fldiv@a,c
 32499  0131F2  0E00               	movlw	0
 32500  0131F4  6E18               	movwf	i2___fldiv@a+1,c
 32501  0131F6  0E00               	movlw	0
 32502  0131F8  6E19               	movwf	i2___fldiv@a+2,c
 32503  0131FA  0E40               	movlw	64
 32504  0131FC  6E1A               	movwf	i2___fldiv@a+3,c
 32505  0131FE  C1CF  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 32506  013202  C1D0  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 32507  013206  C1D1  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 32508  01320A  C1D2  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 32509  01320E  ECFF  F0AD         	call	i2___fldiv	;wreg free
 32510  013212  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 32511  013216  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 32512  01321A  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 32513  01321E  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 32514  013222  0E00               	movlw	0
 32515  013224  6E5A               	movwf	i2___fladd@a,c
 32516  013226  0E00               	movlw	0
 32517  013228  6E5B               	movwf	i2___fladd@a+1,c
 32518  01322A  0E80               	movlw	128
 32519  01322C  6E5C               	movwf	i2___fladd@a+2,c
 32520  01322E  0E3F               	movlw	63
 32521  013230  6E5D               	movwf	i2___fladd@a+3,c
 32522  013232  0E00               	movlw	0
 32523  013234  6E17               	movwf	i2___fldiv@a,c
 32524  013236  0EC0               	movlw	192
 32525  013238  6E18               	movwf	i2___fldiv@a+1,c
 32526  01323A  0E7F               	movlw	127
 32527  01323C  6E19               	movwf	i2___fldiv@a+2,c
 32528  01323E  0E44               	movlw	68
 32529  013240  6E1A               	movwf	i2___fldiv@a+3,c
 32530  013242  EC86  F0C5         	call	_ADCC_GetFilterValue	;wreg free
 32531  013246  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 32532  01324A  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 32533  01324E  6A07               	clrf	i2___xxtofl@val+2,c
 32534  013250  6A08               	clrf	i2___xxtofl@val+3,c
 32535  013252  0E00               	movlw	0
 32536  013254  EC70  F0B4         	call	i2___xxtofl
 32537  013258  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 32538  01325C  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 32539  013260  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 32540  013264  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 32541  013268  ECFF  F0AD         	call	i2___fldiv	;wreg free
 32542  01326C  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 32543  013270  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 32544  013274  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 32545  013278  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 32546  01327C  EC55  F0C4         	call	i2___flneg	;wreg free
 32547  013280  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32548  013284  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32549  013288  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32550  01328C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32551  013290  EC3F  F0A5         	call	i2___fladd	;wreg free
 32552  013294  C056  F030         	movff	?i2___fladd,i2___flmul@b
 32553  013298  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 32554  01329C  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 32555  0132A0  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 32556  0132A4  ECF8  F0A1         	call	i2___flmul	;wreg free
 32557  0132A8  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4132
 32558  0132AC  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4132+1
 32559  0132B0  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4132+2
 32560  0132B4  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4132+3
 32561                           
 32562                           ;main.c: 336: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 32563  0132B8  0EDA               	movlw	218
 32564  0132BA  6E17               	movwf	i2___fldiv@a,c
 32565  0132BC  0E03               	movlw	3
 32566  0132BE  6E18               	movwf	i2___fldiv@a+1,c
 32567  0132C0  0EAD               	movlw	173
 32568  0132C2  6E19               	movwf	i2___fldiv@a+2,c
 32569  0132C4  0E3A               	movlw	58
 32570  0132C6  6E1A               	movwf	i2___fldiv@a+3,c
 32571  0132C8  0E39               	movlw	57
 32572  0132CA  6E5A               	movwf	i2___fladd@a,c
 32573  0132CC  0EB4               	movlw	180
 32574  0132CE  6E5B               	movwf	i2___fladd@a+1,c
 32575  0132D0  0E28               	movlw	40
 32576  0132D2  6E5C               	movwf	i2___fladd@a+2,c
 32577  0132D4  0E3F               	movlw	63
 32578  0132D6  6E5D               	movwf	i2___fladd@a+3,c
 32579  0132D8  C0C9  F02C         	movff	_ADCPostProcessingCallback$4132,i2___flneg@f1
 32580  0132DC  C0CA  F02D         	movff	_ADCPostProcessingCallback$4132+1,i2___flneg@f1+1
 32581  0132E0  C0CB  F02E         	movff	_ADCPostProcessingCallback$4132+2,i2___flneg@f1+2
 32582  0132E4  C0CC  F02F         	movff	_ADCPostProcessingCallback$4132+3,i2___flneg@f1+3
 32583  0132E8  EC55  F0C4         	call	i2___flneg	;wreg free
 32584  0132EC  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32585  0132F0  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32586  0132F4  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32587  0132F8  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32588  0132FC  EC3F  F0A5         	call	i2___fladd	;wreg free
 32589  013300  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 32590  013304  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 32591  013308  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 32592  01330C  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 32593  013310  ECFF  F0AD         	call	i2___fldiv	;wreg free
 32594  013314  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4133
 32595  013318  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4133+1
 32596  01331C  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4133+2
 32597  013320  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4133+3
 32598                           
 32599                           ;main.c: 336: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 32600  013324  C2D0  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 32601  013328  C2D1  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 32602  01332C  C2D2  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 32603  013330  C2D3  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 32604  013334  C0CD  F056         	movff	_ADCPostProcessingCallback$4133,i2___fladd@b
 32605  013338  C0CE  F057         	movff	_ADCPostProcessingCallback$4133+1,i2___fladd@b+1
 32606  01333C  C0CF  F058         	movff	_ADCPostProcessingCallback$4133+2,i2___fladd@b+2
 32607  013340  C0D0  F059         	movff	_ADCPostProcessingCallback$4133+3,i2___fladd@b+3
 32608  013344  EC3F  F0A5         	call	i2___fladd	;wreg free
 32609  013348  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4134
 32610  01334C  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4134+1
 32611  013350  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4134+2
 32612  013354  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4134+3
 32613                           
 32614                           ;main.c: 336: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 32615  013358  C0D1  F056         	movff	_ADCPostProcessingCallback$4134,i2___fladd@b
 32616  01335C  C0D2  F057         	movff	_ADCPostProcessingCallback$4134+1,i2___fladd@b+1
 32617  013360  C0D3  F058         	movff	_ADCPostProcessingCallback$4134+2,i2___fladd@b+2
 32618  013364  C0D4  F059         	movff	_ADCPostProcessingCallback$4134+3,i2___fladd@b+3
 32619  013368  0E00               	movlw	0
 32620  01336A  6E5A               	movwf	i2___fladd@a,c
 32621  01336C  0E00               	movlw	0
 32622  01336E  6E5B               	movwf	i2___fladd@a+1,c
 32623  013370  0E20               	movlw	32
 32624  013372  6E5C               	movwf	i2___fladd@a+2,c
 32625  013374  0EC2               	movlw	194
 32626  013376  6E5D               	movwf	i2___fladd@a+3,c
 32627  013378  EC3F  F0A5         	call	i2___fladd	;wreg free
 32628  01337C  C056  F254         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 32629  013380  C057  F255         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 32630  013384  C058  F256         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 32631  013388  C059  F257         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 32632                           
 32633                           ;main.c: 338: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 32634  01338C  0E00               	movlw	0
 32635  01338E  6E34               	movwf	i2___flge@ff1,c
 32636  013390  0E00               	movlw	0
 32637  013392  6E35               	movwf	i2___flge@ff1+1,c
 32638  013394  0E20               	movlw	32
 32639  013396  6E36               	movwf	i2___flge@ff1+2,c
 32640  013398  0E42               	movlw	66
 32641  01339A  6E37               	movwf	i2___flge@ff1+3,c
 32642  01339C  C254  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 32643  0133A0  C255  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 32644  0133A4  C256  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 32645  0133A8  C257  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 32646  0133AC  EC97  F0B8         	call	i2___flge	;wreg free
 32647  0133B0  A0D8               	btfss	status,0,c
 32648  0133B2  D005               	goto	i2u1757_40
 32649  0133B4  EC04  F0C6         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 32650  0133B8  0900               	iorlw	0
 32651  0133BA  B4D8               	btfsc	status,2,c
 32652  0133BC  D007               	goto	i2l999
 32653  0133BE                     i2u1757_40:
 32654                           
 32655                           ;main.c: 340: LATFbits.LATF3 = 1;
 32656  0133BE  867E               	bsf	3966,3,c	;volatile
 32657                           
 32658                           ;main.c: 341: adc_error_flag = 1;
 32659  0133C0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32660                           
 32661                           ;main.c: 343: PIE5bits.TMR7IE = 0;
 32662  0133C2  010E               	movlb	14	; () banked
 32663  0133C4  9D2E               	bcf	46,6,b	;volatile
 32664                           
 32665                           ; BSR set to: 14
 32666                           ;main.c: 344: TMR7_StopTimer();
 32667  0133C6  EC24  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32668                           
 32669                           ;main.c: 345: return;
 32670  0133CA  0012               	return	
 32671  0133CC                     i2l999:
 32672                           
 32673                           ;main.c: 347: }
 32674                           ;main.c: 349: next_channel = channel_VSS;
 32675  0133CC  0E3C               	movlw	60
 32676  0133CE  0101               	movlb	1	; () banked
 32677  0133D0  6FE8               	movwf	_next_channel& (0+255),b
 32678                           
 32679                           ;main.c: 351: break;
 32680  0133D2  0012               	return	
 32681  0133D4                     i2l1002:
 32682                           
 32683                           ; BSR set to: 0
 32684                           ;main.c: 356: LATFbits.LATF3 = 1;
 32685  0133D4  867E               	bsf	3966,3,c	;volatile
 32686                           
 32687                           ;main.c: 357: adc_error_flag = 1;
 32688  0133D6  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 32689                           
 32690                           ; BSR set to: 0
 32691                           ;main.c: 359: PIE5bits.TMR7IE == 0;
 32692  0133D8  010E               	movlb	14	; () banked
 32693  0133DA  512E               	movf	46,w,b	;volatile
 32694                           
 32695                           ; BSR set to: 14
 32696                           ;main.c: 360: TMR7_StopTimer();
 32697  0133DC  EC24  F0C6         	call	i2_TMR7_StopTimer	;wreg free
 32698                           
 32699                           ;main.c: 363: }
 32700                           
 32701                           ;main.c: 361: break;
 32702  0133E0  0012               	return	
 32703  0133E2                     i2l969:
 32704  0133E2  0100               	movlb	0	; () banked
 32705  0133E4  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 32706                           
 32707                           ; Switch size 1, requested type "space"
 32708                           ; Number of cases is 6, Range of values is 0 to 63
 32709                           ; switch strategies available:
 32710                           ; Name         Instructions Cycles
 32711                           ; simple_byte           19    10 (average)
 32712                           ;	Chosen strategy is simple_byte
 32713  0133E6  0A00               	xorlw	0	; case 0
 32714  0133E8  B4D8               	btfsc	status,2,c
 32715  0133EA  D45E               	goto	i2l984
 32716  0133EC  0A04               	xorlw	4	; case 4
 32717  0133EE  B4D8               	btfsc	status,2,c
 32718  0133F0  D689               	goto	i2l994
 32719  0133F2  0A26               	xorlw	38	; case 34
 32720  0133F4  B4D8               	btfsc	status,2,c
 32721  0133F6  EFF1  F095         	goto	i2l980
 32722  0133FA  0A1E               	xorlw	30	; case 60
 32723  0133FC  B4D8               	btfsc	status,2,c
 32724  0133FE  EF1F  F095         	goto	i2l970
 32725  013402  0A01               	xorlw	1	; case 61
 32726  013404  B4D8               	btfsc	status,2,c
 32727  013406  D6F3               	goto	i2l998
 32728  013408  0A02               	xorlw	2	; case 63
 32729  01340A  B4D8               	btfsc	status,2,c
 32730  01340C  EF68  F095         	goto	i2l976
 32731  013410  D7E1               	goto	i2l1002
 32732  013412                     __end_of_ADCPostProcessingCallback:
 32733                           	opt stack 0
 32734                           tosu	equ	0xFFF
 32735                           tosh	equ	0xFFE
 32736                           tosl	equ	0xFFD
 32737                           pclatu	equ	0xFFB
 32738                           pclath	equ	0xFFA
 32739                           tblptru	equ	0xFF8
 32740                           tblptrh	equ	0xFF7
 32741                           tblptrl	equ	0xFF6
 32742                           tablat	equ	0xFF5
 32743                           prodh	equ	0xFF4
 32744                           prodl	equ	0xFF3
 32745                           intcon	equ	0xFF2
 32746                           indf0	equ	0xFEF
 32747                           postinc0	equ	0xFEE
 32748                           fsr0h	equ	0xFEA
 32749                           fsr0l	equ	0xFE9
 32750                           wreg	equ	0xFE8
 32751                           indf1	equ	0xFE7
 32752                           postdec1	equ	0xFE5
 32753                           plusw1	equ	0xFE3
 32754                           fsr1h	equ	0xFE2
 32755                           fsr1l	equ	0xFE1
 32756                           bsr	equ	0xFE0
 32757                           indf2	equ	0xFDF
 32758                           postinc2	equ	0xFDE
 32759                           postdec2	equ	0xFDD
 32760                           plusw2	equ	0xFDB
 32761                           fsr2h	equ	0xFDA
 32762                           fsr2l	equ	0xFD9
 32763                           status	equ	0xFD8
 32764                           
 32765 ;; *************** function i2_TMR7_StopTimer *****************
 32766 ;; Defined at:
 32767 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 32768 ;; Parameters:    Size  Location     Type
 32769 ;;		None
 32770 ;; Auto vars:     Size  Location     Type
 32771 ;;		None
 32772 ;; Return value:  Size  Location     Type
 32773 ;;                  1    wreg      void 
 32774 ;; Registers used:
 32775 ;;		None
 32776 ;; Tracked objects:
 32777 ;;		On entry : 0/0
 32778 ;;		On exit  : 0/0
 32779 ;;		Unchanged: 0/0
 32780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32785 ;;Total ram usage:        0 bytes
 32786 ;; Hardware stack levels used:    1
 32787 ;; This function calls:
 32788 ;;		Nothing
 32789 ;; This function is called by:
 32790 ;;		_ADCPostProcessingCallback
 32791 ;; This function uses a non-reentrant model
 32792 ;;
 32793                           
 32794                           	psect	text105
 32795  018C48                     __ptext105:
 32796                           	opt stack 0
 32797  018C48                     i2_TMR7_StopTimer:
 32798                           	opt stack 16
 32799                           
 32800                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 32801                           
 32802                           ;incstack = 0
 32803  018C48  010F               	movlb	15	; () banked
 32804  018C4A  9130               	bcf	48,0,b	;volatile
 32805                           
 32806                           ; BSR set to: 15
 32807  018C4C  0012               	return		;funcret
 32808  018C4E                     __end_ofi2_TMR7_StopTimer:
 32809                           	opt stack 0
 32810                           tosu	equ	0xFFF
 32811                           tosh	equ	0xFFE
 32812                           tosl	equ	0xFFD
 32813                           pclatu	equ	0xFFB
 32814                           pclath	equ	0xFFA
 32815                           tblptru	equ	0xFF8
 32816                           tblptrh	equ	0xFF7
 32817                           tblptrl	equ	0xFF6
 32818                           tablat	equ	0xFF5
 32819                           prodh	equ	0xFF4
 32820                           prodl	equ	0xFF3
 32821                           intcon	equ	0xFF2
 32822                           indf0	equ	0xFEF
 32823                           postinc0	equ	0xFEE
 32824                           fsr0h	equ	0xFEA
 32825                           fsr0l	equ	0xFE9
 32826                           wreg	equ	0xFE8
 32827                           indf1	equ	0xFE7
 32828                           postdec1	equ	0xFE5
 32829                           plusw1	equ	0xFE3
 32830                           fsr1h	equ	0xFE2
 32831                           fsr1l	equ	0xFE1
 32832                           bsr	equ	0xFE0
 32833                           indf2	equ	0xFDF
 32834                           postinc2	equ	0xFDE
 32835                           postdec2	equ	0xFDD
 32836                           plusw2	equ	0xFDB
 32837                           fsr2h	equ	0xFDA
 32838                           fsr2l	equ	0xFD9
 32839                           status	equ	0xFD8
 32840                           
 32841 ;; *************** function _peakToRMS *****************
 32842 ;; Defined at:
 32843 ;;		line 113 in file "main.c"
 32844 ;; Parameters:    Size  Location     Type
 32845 ;;  Peak            4   81[BANK0 ] void 
 32846 ;;  Angle           4   85[BANK0 ] void 
 32847 ;; Auto vars:     Size  Location     Type
 32848 ;;  RMS             4  101[BANK0 ] void 
 32849 ;; Return value:  Size  Location     Type
 32850 ;;                  4   81[BANK0 ] void 
 32851 ;; Registers used:
 32852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32853 ;; Tracked objects:
 32854 ;;		On entry : 0/0
 32855 ;;		On exit  : 0/0
 32856 ;;		Unchanged: 0/0
 32857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32858 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32859 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32861 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32862 ;;Total ram usage:       24 bytes
 32863 ;; Hardware stack levels used:    1
 32864 ;; Hardware stack levels required when called:    5
 32865 ;; This function calls:
 32866 ;;		_acos
 32867 ;;		_sin
 32868 ;;		_sqrt
 32869 ;;		i2___fladd
 32870 ;;		i2___fldiv
 32871 ;;		i2___flmul
 32872 ;;		i2___flneg
 32873 ;; This function is called by:
 32874 ;;		_ADCPostProcessingCallback
 32875 ;; This function uses a non-reentrant model
 32876 ;;
 32877                           
 32878                           	psect	text106
 32879  016160                     __ptext106:
 32880                           	opt stack 0
 32881  016160                     _peakToRMS:
 32882                           	opt stack 11
 32883                           
 32884                           ;main.c: 116: double RMS = 0.0;
 32885                           
 32886                           ; BSR set to: 15
 32887                           ;incstack = 0
 32888  016160  0E00               	movlw	0
 32889  016162  0100               	movlb	0	; () banked
 32890  016164  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 32891  016166  0E00               	movlw	0
 32892  016168  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 32893  01616A  0E00               	movlw	0
 32894  01616C  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 32895  01616E  0E00               	movlw	0
 32896  016170  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 32897                           
 32898                           ; BSR set to: 0
 32899                           ;main.c: 119: RMS = 2.0 * acos(-1.0);
 32900  016172  0E00               	movlw	0
 32901  016174  6FA9               	movwf	acos@x& (0+255),b
 32902  016176  0E00               	movlw	0
 32903  016178  6FAA               	movwf	(acos@x+1)& (0+255),b
 32904  01617A  0E80               	movlw	128
 32905  01617C  6FAB               	movwf	(acos@x+2)& (0+255),b
 32906  01617E  0EBF               	movlw	191
 32907  016180  6FAC               	movwf	(acos@x+3)& (0+255),b
 32908  016182  EC53  F0BF         	call	_acos	;wreg free
 32909  016186  C0A9  F0C1         	movff	?_acos,_peakToRMS$4127
 32910  01618A  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4127+1
 32911  01618E  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4127+2
 32912  016192  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4127+3
 32913                           
 32914                           ;main.c: 119: RMS = 2.0 * acos(-1.0);
 32915  016196  C0C1  F030         	movff	_peakToRMS$4127,i2___flmul@b
 32916  01619A  C0C2  F031         	movff	_peakToRMS$4127+1,i2___flmul@b+1
 32917  01619E  C0C3  F032         	movff	_peakToRMS$4127+2,i2___flmul@b+2
 32918  0161A2  C0C4  F033         	movff	_peakToRMS$4127+3,i2___flmul@b+3
 32919  0161A6  0E00               	movlw	0
 32920  0161A8  6E34               	movwf	i2___flmul@a,c
 32921  0161AA  0E00               	movlw	0
 32922  0161AC  6E35               	movwf	i2___flmul@a+1,c
 32923  0161AE  0E00               	movlw	0
 32924  0161B0  6E36               	movwf	i2___flmul@a+2,c
 32925  0161B2  0E40               	movlw	64
 32926  0161B4  6E37               	movwf	i2___flmul@a+3,c
 32927  0161B6  ECF8  F0A1         	call	i2___flmul	;wreg free
 32928  0161BA  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 32929  0161BE  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 32930  0161C2  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 32931  0161C6  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 32932                           
 32933                           ;main.c: 120: RMS = RMS - (2.0 * Angle);
 32934  0161CA  0E00               	movlw	0
 32935  0161CC  6E34               	movwf	i2___flmul@a,c
 32936  0161CE  0E00               	movlw	0
 32937  0161D0  6E35               	movwf	i2___flmul@a+1,c
 32938  0161D2  0E00               	movlw	0
 32939  0161D4  6E36               	movwf	i2___flmul@a+2,c
 32940  0161D6  0E40               	movlw	64
 32941  0161D8  6E37               	movwf	i2___flmul@a+3,c
 32942  0161DA  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 32943  0161DE  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 32944  0161E2  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 32945  0161E6  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 32946  0161EA  ECF8  F0A1         	call	i2___flmul	;wreg free
 32947  0161EE  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 32948  0161F2  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 32949  0161F6  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 32950  0161FA  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 32951  0161FE  EC55  F0C4         	call	i2___flneg	;wreg free
 32952  016202  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32953  016206  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32954  01620A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32955  01620E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32956  016212  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 32957  016216  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 32958  01621A  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 32959  01621E  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 32960  016222  EC3F  F0A5         	call	i2___fladd	;wreg free
 32961  016226  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 32962  01622A  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 32963  01622E  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 32964  016232  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 32965                           
 32966                           ;main.c: 121: RMS = RMS + sin(2.0 * Angle);
 32967  016236  0E00               	movlw	0
 32968  016238  6E34               	movwf	i2___flmul@a,c
 32969  01623A  0E00               	movlw	0
 32970  01623C  6E35               	movwf	i2___flmul@a+1,c
 32971  01623E  0E00               	movlw	0
 32972  016240  6E36               	movwf	i2___flmul@a+2,c
 32973  016242  0E40               	movlw	64
 32974  016244  6E37               	movwf	i2___flmul@a+3,c
 32975  016246  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 32976  01624A  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 32977  01624E  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 32978  016252  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 32979  016256  ECF8  F0A1         	call	i2___flmul	;wreg free
 32980  01625A  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4128
 32981  01625E  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4128+1
 32982  016262  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4128+2
 32983  016266  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4128+3
 32984                           
 32985                           ;main.c: 121: RMS = RMS + sin(2.0 * Angle);
 32986  01626A  C0B9  F088         	movff	_peakToRMS$4128,sin@f
 32987  01626E  C0BA  F089         	movff	_peakToRMS$4128+1,sin@f+1
 32988  016272  C0BB  F08A         	movff	_peakToRMS$4128+2,sin@f+2
 32989  016276  C0BC  F08B         	movff	_peakToRMS$4128+3,sin@f+3
 32990  01627A  EC60  F0A8         	call	_sin	;wreg free
 32991  01627E  C088  F0BD         	movff	?_sin,_peakToRMS$4129
 32992  016282  C089  F0BE         	movff	?_sin+1,_peakToRMS$4129+1
 32993  016286  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4129+2
 32994  01628A  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4129+3
 32995                           
 32996                           ;main.c: 121: RMS = RMS + sin(2.0 * Angle);
 32997  01628E  C0BD  F056         	movff	_peakToRMS$4129,i2___fladd@b
 32998  016292  C0BE  F057         	movff	_peakToRMS$4129+1,i2___fladd@b+1
 32999  016296  C0BF  F058         	movff	_peakToRMS$4129+2,i2___fladd@b+2
 33000  01629A  C0C0  F059         	movff	_peakToRMS$4129+3,i2___fladd@b+3
 33001  01629E  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 33002  0162A2  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 33003  0162A6  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 33004  0162AA  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 33005  0162AE  EC3F  F0A5         	call	i2___fladd	;wreg free
 33006  0162B2  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 33007  0162B6  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 33008  0162BA  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 33009  0162BE  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 33010                           
 33011                           ;main.c: 122: RMS = RMS / (4.0 * acos(-1.0));
 33012  0162C2  0E00               	movlw	0
 33013  0162C4  0100               	movlb	0	; () banked
 33014  0162C6  6FA9               	movwf	acos@x& (0+255),b
 33015  0162C8  0E00               	movlw	0
 33016  0162CA  6FAA               	movwf	(acos@x+1)& (0+255),b
 33017  0162CC  0E80               	movlw	128
 33018  0162CE  6FAB               	movwf	(acos@x+2)& (0+255),b
 33019  0162D0  0EBF               	movlw	191
 33020  0162D2  6FAC               	movwf	(acos@x+3)& (0+255),b
 33021  0162D4  EC53  F0BF         	call	_acos	;wreg free
 33022  0162D8  C0A9  F0C1         	movff	?_acos,_peakToRMS$4127
 33023  0162DC  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4127+1
 33024  0162E0  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4127+2
 33025  0162E4  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4127+3
 33026                           
 33027                           ;main.c: 122: RMS = RMS / (4.0 * acos(-1.0));
 33028  0162E8  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 33029  0162EC  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 33030  0162F0  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 33031  0162F4  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 33032  0162F8  0E00               	movlw	0
 33033  0162FA  6E34               	movwf	i2___flmul@a,c
 33034  0162FC  0E00               	movlw	0
 33035  0162FE  6E35               	movwf	i2___flmul@a+1,c
 33036  016300  0E80               	movlw	128
 33037  016302  6E36               	movwf	i2___flmul@a+2,c
 33038  016304  0E40               	movlw	64
 33039  016306  6E37               	movwf	i2___flmul@a+3,c
 33040  016308  C0C1  F030         	movff	_peakToRMS$4127,i2___flmul@b
 33041  01630C  C0C2  F031         	movff	_peakToRMS$4127+1,i2___flmul@b+1
 33042  016310  C0C3  F032         	movff	_peakToRMS$4127+2,i2___flmul@b+2
 33043  016314  C0C4  F033         	movff	_peakToRMS$4127+3,i2___flmul@b+3
 33044  016318  ECF8  F0A1         	call	i2___flmul	;wreg free
 33045  01631C  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 33046  016320  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 33047  016324  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 33048  016328  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 33049  01632C  ECFF  F0AD         	call	i2___fldiv	;wreg free
 33050  016330  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 33051  016334  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 33052  016338  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 33053  01633C  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 33054                           
 33055                           ;main.c: 123: RMS = sqrt(RMS);
 33056  016340  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 33057  016344  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 33058  016348  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 33059  01634C  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 33060  016350  ECDD  F0A9         	call	_sqrt	;wreg free
 33061  016354  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 33062  016358  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 33063  01635C  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 33064  016360  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 33065                           
 33066                           ;main.c: 124: RMS = Peak * RMS;
 33067  016364  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 33068  016368  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 33069  01636C  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 33070  016370  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 33071  016374  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 33072  016378  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 33073  01637C  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 33074  016380  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 33075  016384  ECF8  F0A1         	call	i2___flmul	;wreg free
 33076  016388  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 33077  01638C  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 33078  016390  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 33079  016394  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 33080                           
 33081                           ;main.c: 125: return RMS;
 33082  016398  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 33083  01639C  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 33084  0163A0  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 33085  0163A4  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 33086  0163A8  0012               	return	
 33087  0163AA                     __end_of_peakToRMS:
 33088                           	opt stack 0
 33089                           tosu	equ	0xFFF
 33090                           tosh	equ	0xFFE
 33091                           tosl	equ	0xFFD
 33092                           pclatu	equ	0xFFB
 33093                           pclath	equ	0xFFA
 33094                           tblptru	equ	0xFF8
 33095                           tblptrh	equ	0xFF7
 33096                           tblptrl	equ	0xFF6
 33097                           tablat	equ	0xFF5
 33098                           prodh	equ	0xFF4
 33099                           prodl	equ	0xFF3
 33100                           intcon	equ	0xFF2
 33101                           indf0	equ	0xFEF
 33102                           postinc0	equ	0xFEE
 33103                           fsr0h	equ	0xFEA
 33104                           fsr0l	equ	0xFE9
 33105                           wreg	equ	0xFE8
 33106                           indf1	equ	0xFE7
 33107                           postdec1	equ	0xFE5
 33108                           plusw1	equ	0xFE3
 33109                           fsr1h	equ	0xFE2
 33110                           fsr1l	equ	0xFE1
 33111                           bsr	equ	0xFE0
 33112                           indf2	equ	0xFDF
 33113                           postinc2	equ	0xFDE
 33114                           postdec2	equ	0xFDD
 33115                           plusw2	equ	0xFDB
 33116                           fsr2h	equ	0xFDA
 33117                           fsr2l	equ	0xFD9
 33118                           status	equ	0xFD8
 33119                           
 33120 ;; *************** function _acos *****************
 33121 ;; Defined at:
 33122 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 33123 ;; Parameters:    Size  Location     Type
 33124 ;;  x               4   73[BANK0 ] void 
 33125 ;; Auto vars:     Size  Location     Type
 33126 ;;		None
 33127 ;; Return value:  Size  Location     Type
 33128 ;;                  4   73[BANK0 ] void 
 33129 ;; Registers used:
 33130 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33131 ;; Tracked objects:
 33132 ;;		On entry : 0/0
 33133 ;;		On exit  : 0/0
 33134 ;;		Unchanged: 0/0
 33135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33137 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33139 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33140 ;;Total ram usage:        8 bytes
 33141 ;; Hardware stack levels used:    1
 33142 ;; Hardware stack levels required when called:    4
 33143 ;; This function calls:
 33144 ;;		_asin
 33145 ;;		i2___fladd
 33146 ;;		i2___flneg
 33147 ;; This function is called by:
 33148 ;;		_peakToRMS
 33149 ;; This function uses a non-reentrant model
 33150 ;;
 33151                           
 33152                           	psect	text107
 33153  017EA6                     __ptext107:
 33154                           	opt stack 0
 33155  017EA6                     _acos:
 33156                           	opt stack 11
 33157                           
 33158                           ;incstack = 0
 33159  017EA6  C0A9  F091         	movff	acos@x,asin@x
 33160  017EAA  C0AA  F092         	movff	acos@x+1,asin@x+1
 33161  017EAE  C0AB  F093         	movff	acos@x+2,asin@x+2
 33162  017EB2  C0AC  F094         	movff	acos@x+3,asin@x+3
 33163  017EB6  ECDE  F0A6         	call	_asin	;wreg free
 33164  017EBA  C091  F0AD         	movff	?_asin,_acos$4135
 33165  017EBE  C092  F0AE         	movff	?_asin+1,_acos$4135+1
 33166  017EC2  C093  F0AF         	movff	?_asin+2,_acos$4135+2
 33167  017EC6  C094  F0B0         	movff	?_asin+3,_acos$4135+3
 33168  017ECA  C0AD  F02C         	movff	_acos$4135,i2___flneg@f1
 33169  017ECE  C0AE  F02D         	movff	_acos$4135+1,i2___flneg@f1+1
 33170  017ED2  C0AF  F02E         	movff	_acos$4135+2,i2___flneg@f1+2
 33171  017ED6  C0B0  F02F         	movff	_acos$4135+3,i2___flneg@f1+3
 33172  017EDA  EC55  F0C4         	call	i2___flneg	;wreg free
 33173  017EDE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33174  017EE2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33175  017EE6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33176  017EEA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33177  017EEE  0EDB               	movlw	219
 33178  017EF0  6E5A               	movwf	i2___fladd@a,c
 33179  017EF2  0E0F               	movlw	15
 33180  017EF4  6E5B               	movwf	i2___fladd@a+1,c
 33181  017EF6  0EC9               	movlw	201
 33182  017EF8  6E5C               	movwf	i2___fladd@a+2,c
 33183  017EFA  0E3F               	movlw	63
 33184  017EFC  6E5D               	movwf	i2___fladd@a+3,c
 33185  017EFE  EC3F  F0A5         	call	i2___fladd	;wreg free
 33186  017F02  C056  F0A9         	movff	?i2___fladd,?_acos
 33187  017F06  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 33188  017F0A  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 33189  017F0E  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 33190  017F12  0012               	return	
 33191  017F14                     __end_of_acos:
 33192                           	opt stack 0
 33193                           tosu	equ	0xFFF
 33194                           tosh	equ	0xFFE
 33195                           tosl	equ	0xFFD
 33196                           pclatu	equ	0xFFB
 33197                           pclath	equ	0xFFA
 33198                           tblptru	equ	0xFF8
 33199                           tblptrh	equ	0xFF7
 33200                           tblptrl	equ	0xFF6
 33201                           tablat	equ	0xFF5
 33202                           prodh	equ	0xFF4
 33203                           prodl	equ	0xFF3
 33204                           intcon	equ	0xFF2
 33205                           indf0	equ	0xFEF
 33206                           postinc0	equ	0xFEE
 33207                           fsr0h	equ	0xFEA
 33208                           fsr0l	equ	0xFE9
 33209                           wreg	equ	0xFE8
 33210                           indf1	equ	0xFE7
 33211                           postdec1	equ	0xFE5
 33212                           plusw1	equ	0xFE3
 33213                           fsr1h	equ	0xFE2
 33214                           fsr1l	equ	0xFE1
 33215                           bsr	equ	0xFE0
 33216                           indf2	equ	0xFDF
 33217                           postinc2	equ	0xFDE
 33218                           postdec2	equ	0xFDD
 33219                           plusw2	equ	0xFDB
 33220                           fsr2h	equ	0xFDA
 33221                           fsr2l	equ	0xFD9
 33222                           status	equ	0xFD8
 33223                           
 33224 ;; *************** function _asin *****************
 33225 ;; Defined at:
 33226 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 33227 ;; Parameters:    Size  Location     Type
 33228 ;;  x               4   49[BANK0 ] void 
 33229 ;; Auto vars:     Size  Location     Type
 33230 ;;  y               4   65[BANK0 ] void 
 33231 ;;  sgn             4   53[BANK0 ] void 
 33232 ;; Return value:  Size  Location     Type
 33233 ;;                  4   49[BANK0 ] void 
 33234 ;; Registers used:
 33235 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33236 ;; Tracked objects:
 33237 ;;		On entry : 0/0
 33238 ;;		On exit  : 0/0
 33239 ;;		Unchanged: 0/0
 33240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33241 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33242 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33244 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33245 ;;Total ram usage:       24 bytes
 33246 ;; Hardware stack levels used:    1
 33247 ;; Hardware stack levels required when called:    3
 33248 ;; This function calls:
 33249 ;;		_atan
 33250 ;;		_fabs
 33251 ;;		_sqrt
 33252 ;;		i2___fladd
 33253 ;;		i2___fldiv
 33254 ;;		i2___flge
 33255 ;;		i2___flmul
 33256 ;;		i2___flneg
 33257 ;; This function is called by:
 33258 ;;		_acos
 33259 ;; This function uses a non-reentrant model
 33260 ;;
 33261                           
 33262                           	psect	text108
 33263  014DBC                     __ptext108:
 33264                           	opt stack 0
 33265  014DBC                     _asin:
 33266                           	opt stack 11
 33267                           
 33268                           ;incstack = 0
 33269  014DBC  0E00               	movlw	0
 33270  014DBE  6E34               	movwf	i2___flge@ff1,c
 33271  014DC0  0E00               	movlw	0
 33272  014DC2  6E35               	movwf	i2___flge@ff1+1,c
 33273  014DC4  0E80               	movlw	128
 33274  014DC6  6E36               	movwf	i2___flge@ff1+2,c
 33275  014DC8  0E3F               	movlw	63
 33276  014DCA  6E37               	movwf	i2___flge@ff1+3,c
 33277  014DCC  C091  F030         	movff	asin@x,fabs@d
 33278  014DD0  C092  F031         	movff	asin@x+1,fabs@d+1
 33279  014DD4  C093  F032         	movff	asin@x+2,fabs@d+2
 33280  014DD8  C094  F033         	movff	asin@x+3,fabs@d+3
 33281  014DDC  EC51  F0C3         	call	_fabs	;wreg free
 33282  014DE0  C030  F038         	movff	?_fabs,i2___flge@ff2
 33283  014DE4  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 33284  014DE8  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 33285  014DEC  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 33286  014DF0  EC97  F0B8         	call	i2___flge	;wreg free
 33287  014DF4  B0D8               	btfsc	status,0,c
 33288  014DF6  D00F               	goto	i2l1684
 33289  014DF8  0E00               	movlw	0
 33290  014DFA  0102               	movlb	2	; () banked
 33291  014DFC  6F6F               	movwf	(_errno+1)& (0+255),b
 33292  014DFE  0E21               	movlw	33
 33293  014E00  6F6E               	movwf	_errno& (0+255),b
 33294  014E02  0E00               	movlw	0
 33295  014E04  0100               	movlb	0	; () banked
 33296  014E06  6F91               	movwf	?_asin& (0+255),b
 33297  014E08  0E00               	movlw	0
 33298  014E0A  6F92               	movwf	(?_asin+1)& (0+255),b
 33299  014E0C  0E00               	movlw	0
 33300  014E0E  6F93               	movwf	(?_asin+2)& (0+255),b
 33301  014E10  0E00               	movlw	0
 33302  014E12  6F94               	movwf	(?_asin+3)& (0+255),b
 33303                           
 33304                           ; BSR set to: 0
 33305  014E14  0012               	return	
 33306  014E16                     i2l1684:
 33307                           
 33308                           ; BSR set to: 0
 33309  014E16  0E00               	movlw	0
 33310  014E18  0100               	movlb	0	; () banked
 33311  014E1A  6F95               	movwf	asin@sgn& (0+255),b
 33312  014E1C  0E00               	movlw	0
 33313  014E1E  6F96               	movwf	(asin@sgn+1)& (0+255),b
 33314  014E20  0E80               	movlw	128
 33315  014E22  6F97               	movwf	(asin@sgn+2)& (0+255),b
 33316  014E24  0E3F               	movlw	63
 33317  014E26  6F98               	movwf	(asin@sgn+3)& (0+255),b
 33318                           
 33319                           ; BSR set to: 0
 33320  014E28  C091  F034         	movff	asin@x,i2___flmul@a
 33321  014E2C  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 33322  014E30  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 33323  014E34  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 33324  014E38  C091  F030         	movff	asin@x,i2___flmul@b
 33325  014E3C  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 33326  014E40  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 33327  014E44  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 33328  014E48  ECF8  F0A1         	call	i2___flmul	;wreg free
 33329  014E4C  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 33330  014E50  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 33331  014E54  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 33332  014E58  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 33333  014E5C  EC55  F0C4         	call	i2___flneg	;wreg free
 33334  014E60  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33335  014E64  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33336  014E68  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33337  014E6C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33338  014E70  0E00               	movlw	0
 33339  014E72  6E5A               	movwf	i2___fladd@a,c
 33340  014E74  0E00               	movlw	0
 33341  014E76  6E5B               	movwf	i2___fladd@a+1,c
 33342  014E78  0E80               	movlw	128
 33343  014E7A  6E5C               	movwf	i2___fladd@a+2,c
 33344  014E7C  0E3F               	movlw	63
 33345  014E7E  6E5D               	movwf	i2___fladd@a+3,c
 33346  014E80  EC3F  F0A5         	call	i2___fladd	;wreg free
 33347  014E84  C056  F06C         	movff	?i2___fladd,sqrt@a
 33348  014E88  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 33349  014E8C  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 33350  014E90  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 33351  014E94  ECDD  F0A9         	call	_sqrt	;wreg free
 33352  014E98  C06C  F0A1         	movff	?_sqrt,asin@y
 33353  014E9C  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 33354  014EA0  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 33355  014EA4  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 33356  014EA8  C091  F030         	movff	asin@x,fabs@d
 33357  014EAC  C092  F031         	movff	asin@x+1,fabs@d+1
 33358  014EB0  C093  F032         	movff	asin@x+2,fabs@d+2
 33359  014EB4  C094  F033         	movff	asin@x+3,fabs@d+3
 33360  014EB8  EC51  F0C3         	call	_fabs	;wreg free
 33361  014EBC  C030  F034         	movff	?_fabs,i2___flge@ff1
 33362  014EC0  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 33363  014EC4  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 33364  014EC8  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 33365  014ECC  0E8F               	movlw	143
 33366  014ECE  6E38               	movwf	i2___flge@ff2,c
 33367  014ED0  0EC2               	movlw	194
 33368  014ED2  6E39               	movwf	i2___flge@ff2+1,c
 33369  014ED4  0E35               	movlw	53
 33370  014ED6  6E3A               	movwf	i2___flge@ff2+2,c
 33371  014ED8  0E3F               	movlw	63
 33372  014EDA  6E3B               	movwf	i2___flge@ff2+3,c
 33373  014EDC  EC97  F0B8         	call	i2___flge	;wreg free
 33374  014EE0  B0D8               	btfsc	status,0,c
 33375  014EE2  D02D               	goto	i2l1686
 33376  014EE4  C091  F013         	movff	asin@x,i2___fldiv@b
 33377  014EE8  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 33378  014EEC  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 33379  014EF0  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 33380  014EF4  C0A1  F017         	movff	asin@y,i2___fldiv@a
 33381  014EF8  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 33382  014EFC  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 33383  014F00  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 33384  014F04  ECFF  F0AD         	call	i2___fldiv	;wreg free
 33385  014F08  C013  F0A5         	movff	?i2___fldiv,_asin$4136
 33386  014F0C  C014  F0A6         	movff	?i2___fldiv+1,_asin$4136+1
 33387  014F10  C015  F0A7         	movff	?i2___fldiv+2,_asin$4136+2
 33388  014F14  C016  F0A8         	movff	?i2___fldiv+3,_asin$4136+3
 33389  014F18  C0A5  F07C         	movff	_asin$4136,atan@f
 33390  014F1C  C0A6  F07D         	movff	_asin$4136+1,atan@f+1
 33391  014F20  C0A7  F07E         	movff	_asin$4136+2,atan@f+2
 33392  014F24  C0A8  F07F         	movff	_asin$4136+3,atan@f+3
 33393  014F28  ECD5  F0B1         	call	_atan	;wreg free
 33394  014F2C  C07C  F091         	movff	?_atan,?_asin
 33395  014F30  C07D  F092         	movff	?_atan+1,?_asin+1
 33396  014F34  C07E  F093         	movff	?_atan+2,?_asin+2
 33397  014F38  C07F  F094         	movff	?_atan+3,?_asin+3
 33398  014F3C  0012               	return	
 33399  014F3E                     i2l1686:
 33400  014F3E  0100               	movlb	0	; () banked
 33401  014F40  AF94               	btfss	(asin@x+3)& (0+255),7,b
 33402  014F42  D06D               	goto	i2l1687
 33403                           
 33404                           ; BSR set to: 0
 33405  014F44  C091  F017         	movff	asin@x,i2___fldiv@a
 33406  014F48  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 33407  014F4C  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 33408  014F50  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 33409  014F54  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 33410  014F58  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 33411  014F5C  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 33412  014F60  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 33413  014F64  EC55  F0C4         	call	i2___flneg	;wreg free
 33414  014F68  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 33415  014F6C  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 33416  014F70  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 33417  014F74  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 33418  014F78  ECFF  F0AD         	call	i2___fldiv	;wreg free
 33419  014F7C  C013  F0A5         	movff	?i2___fldiv,_asin$4136
 33420  014F80  C014  F0A6         	movff	?i2___fldiv+1,_asin$4136+1
 33421  014F84  C015  F0A7         	movff	?i2___fldiv+2,_asin$4136+2
 33422  014F88  C016  F0A8         	movff	?i2___fldiv+3,_asin$4136+3
 33423  014F8C  C0A5  F07C         	movff	_asin$4136,atan@f
 33424  014F90  C0A6  F07D         	movff	_asin$4136+1,atan@f+1
 33425  014F94  C0A7  F07E         	movff	_asin$4136+2,atan@f+2
 33426  014F98  C0A8  F07F         	movff	_asin$4136+3,atan@f+3
 33427  014F9C  ECD5  F0B1         	call	_atan	;wreg free
 33428  014FA0  C07C  F09D         	movff	?_atan,_asin$4137
 33429  014FA4  C07D  F09E         	movff	?_atan+1,_asin$4137+1
 33430  014FA8  C07E  F09F         	movff	?_atan+2,_asin$4137+2
 33431  014FAC  C07F  F0A0         	movff	?_atan+3,_asin$4137+3
 33432  014FB0  0EDB               	movlw	219
 33433  014FB2  6E5A               	movwf	i2___fladd@a,c
 33434  014FB4  0E0F               	movlw	15
 33435  014FB6  6E5B               	movwf	i2___fladd@a+1,c
 33436  014FB8  0EC9               	movlw	201
 33437  014FBA  6E5C               	movwf	i2___fladd@a+2,c
 33438  014FBC  0E3F               	movlw	63
 33439  014FBE  6E5D               	movwf	i2___fladd@a+3,c
 33440  014FC0  C09D  F02C         	movff	_asin$4137,i2___flneg@f1
 33441  014FC4  C09E  F02D         	movff	_asin$4137+1,i2___flneg@f1+1
 33442  014FC8  C09F  F02E         	movff	_asin$4137+2,i2___flneg@f1+2
 33443  014FCC  C0A0  F02F         	movff	_asin$4137+3,i2___flneg@f1+3
 33444  014FD0  EC55  F0C4         	call	i2___flneg	;wreg free
 33445  014FD4  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33446  014FD8  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33447  014FDC  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33448  014FE0  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33449  014FE4  EC3F  F0A5         	call	i2___fladd	;wreg free
 33450  014FE8  C056  F099         	movff	?i2___fladd,_asin$4138
 33451  014FEC  C057  F09A         	movff	?i2___fladd+1,_asin$4138+1
 33452  014FF0  C058  F09B         	movff	?i2___fladd+2,_asin$4138+2
 33453  014FF4  C059  F09C         	movff	?i2___fladd+3,_asin$4138+3
 33454  014FF8  C099  F02C         	movff	_asin$4138,i2___flneg@f1
 33455  014FFC  C09A  F02D         	movff	_asin$4138+1,i2___flneg@f1+1
 33456  015000  C09B  F02E         	movff	_asin$4138+2,i2___flneg@f1+2
 33457  015004  C09C  F02F         	movff	_asin$4138+3,i2___flneg@f1+3
 33458  015008  EC55  F0C4         	call	i2___flneg	;wreg free
 33459  01500C  C02C  F091         	movff	?i2___flneg,?_asin
 33460  015010  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 33461  015014  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 33462  015018  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 33463  01501C  0012               	return	
 33464  01501E                     i2l1687:
 33465  01501E  C091  F017         	movff	asin@x,i2___fldiv@a
 33466  015022  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 33467  015026  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 33468  01502A  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 33469  01502E  C0A1  F013         	movff	asin@y,i2___fldiv@b
 33470  015032  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 33471  015036  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 33472  01503A  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 33473  01503E  ECFF  F0AD         	call	i2___fldiv	;wreg free
 33474  015042  C013  F0A5         	movff	?i2___fldiv,_asin$4136
 33475  015046  C014  F0A6         	movff	?i2___fldiv+1,_asin$4136+1
 33476  01504A  C015  F0A7         	movff	?i2___fldiv+2,_asin$4136+2
 33477  01504E  C016  F0A8         	movff	?i2___fldiv+3,_asin$4136+3
 33478  015052  C0A5  F07C         	movff	_asin$4136,atan@f
 33479  015056  C0A6  F07D         	movff	_asin$4136+1,atan@f+1
 33480  01505A  C0A7  F07E         	movff	_asin$4136+2,atan@f+2
 33481  01505E  C0A8  F07F         	movff	_asin$4136+3,atan@f+3
 33482  015062  ECD5  F0B1         	call	_atan	;wreg free
 33483  015066  C07C  F09D         	movff	?_atan,_asin$4137
 33484  01506A  C07D  F09E         	movff	?_atan+1,_asin$4137+1
 33485  01506E  C07E  F09F         	movff	?_atan+2,_asin$4137+2
 33486  015072  C07F  F0A0         	movff	?_atan+3,_asin$4137+3
 33487  015076  C09D  F02C         	movff	_asin$4137,i2___flneg@f1
 33488  01507A  C09E  F02D         	movff	_asin$4137+1,i2___flneg@f1+1
 33489  01507E  C09F  F02E         	movff	_asin$4137+2,i2___flneg@f1+2
 33490  015082  C0A0  F02F         	movff	_asin$4137+3,i2___flneg@f1+3
 33491  015086  EC55  F0C4         	call	i2___flneg	;wreg free
 33492  01508A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 33493  01508E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 33494  015092  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 33495  015096  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 33496  01509A  0EDB               	movlw	219
 33497  01509C  6E5A               	movwf	i2___fladd@a,c
 33498  01509E  0E0F               	movlw	15
 33499  0150A0  6E5B               	movwf	i2___fladd@a+1,c
 33500  0150A2  0EC9               	movlw	201
 33501  0150A4  6E5C               	movwf	i2___fladd@a+2,c
 33502  0150A6  0E3F               	movlw	63
 33503  0150A8  6E5D               	movwf	i2___fladd@a+3,c
 33504  0150AA  EC3F  F0A5         	call	i2___fladd	;wreg free
 33505  0150AE  C056  F091         	movff	?i2___fladd,?_asin
 33506  0150B2  C057  F092         	movff	?i2___fladd+1,?_asin+1
 33507  0150B6  C058  F093         	movff	?i2___fladd+2,?_asin+2
 33508  0150BA  C059  F094         	movff	?i2___fladd+3,?_asin+3
 33509  0150BE  0012               	return	
 33510  0150C0                     __end_of_asin:
 33511                           	opt stack 0
 33512                           tosu	equ	0xFFF
 33513                           tosh	equ	0xFFE
 33514                           tosl	equ	0xFFD
 33515                           pclatu	equ	0xFFB
 33516                           pclath	equ	0xFFA
 33517                           tblptru	equ	0xFF8
 33518                           tblptrh	equ	0xFF7
 33519                           tblptrl	equ	0xFF6
 33520                           tablat	equ	0xFF5
 33521                           prodh	equ	0xFF4
 33522                           prodl	equ	0xFF3
 33523                           intcon	equ	0xFF2
 33524                           indf0	equ	0xFEF
 33525                           postinc0	equ	0xFEE
 33526                           fsr0h	equ	0xFEA
 33527                           fsr0l	equ	0xFE9
 33528                           wreg	equ	0xFE8
 33529                           indf1	equ	0xFE7
 33530                           postdec1	equ	0xFE5
 33531                           plusw1	equ	0xFE3
 33532                           fsr1h	equ	0xFE2
 33533                           fsr1l	equ	0xFE1
 33534                           bsr	equ	0xFE0
 33535                           indf2	equ	0xFDF
 33536                           postinc2	equ	0xFDE
 33537                           postdec2	equ	0xFDD
 33538                           plusw2	equ	0xFDB
 33539                           fsr2h	equ	0xFDA
 33540                           fsr2l	equ	0xFD9
 33541                           status	equ	0xFD8
 33542                           
 33543 ;; *************** function _sqrt *****************
 33544 ;; Defined at:
 33545 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 33546 ;; Parameters:    Size  Location     Type
 33547 ;;  a               4   12[BANK0 ] void 
 33548 ;; Auto vars:     Size  Location     Type
 33549 ;;  frac            4   37[BANK0 ] unsigned long 
 33550 ;;  root            4   33[BANK0 ] struct .
 33551 ;;  grs             4   27[BANK0 ] unsigned long 
 33552 ;;  tfrac           4   22[BANK0 ] unsigned long 
 33553 ;;  exp             2   31[BANK0 ] int 
 33554 ;;  p               1   26[BANK0 ] unsigned char 
 33555 ;;  i               1   21[BANK0 ] unsigned char 
 33556 ;;  sign            1   20[BANK0 ] unsigned char 
 33557 ;; Return value:  Size  Location     Type
 33558 ;;                  4   12[BANK0 ] unsigned char 
 33559 ;; Registers used:
 33560 ;;		wreg, status,2, status,0
 33561 ;; Tracked objects:
 33562 ;;		On entry : 0/0
 33563 ;;		On exit  : 0/0
 33564 ;;		Unchanged: 0/0
 33565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33567 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33568 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33569 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33570 ;;Total ram usage:       29 bytes
 33571 ;; Hardware stack levels used:    1
 33572 ;; This function calls:
 33573 ;;		Nothing
 33574 ;; This function is called by:
 33575 ;;		_peakToRMS
 33576 ;;		_asin
 33577 ;; This function uses a non-reentrant model
 33578 ;;
 33579                           
 33580                           	psect	text109
 33581  0153BA                     __ptext109:
 33582                           	opt stack 0
 33583  0153BA                     _sqrt:
 33584                           	opt stack 15
 33585                           
 33586                           ;incstack = 0
 33587  0153BA  0100               	movlb	0	; () banked
 33588  0153BC  516F               	movf	(sqrt@a+3)& (0+255),w,b
 33589  0153BE  0B80               	andlw	128
 33590  0153C0  6F74               	movwf	sqrt@sign& (0+255),b
 33591  0153C2  516F               	movf	(sqrt@a+3)& (0+255),w,b
 33592  0153C4  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 33593  0153C6  6F7A               	movwf	sqrt@p& (0+255),b
 33594                           
 33595                           ; BSR set to: 0
 33596  0153C8  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 33597                           
 33598                           ; BSR set to: 0
 33599  0153CA  817A               	bsf	sqrt@p& (0+255),0,b
 33600                           
 33601                           ; BSR set to: 0
 33602                           
 33603                           ; BSR set to: 0
 33604  0153CC  C07A  F07F         	movff	sqrt@p,sqrt@exp
 33605  0153D0  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 33606                           
 33607                           ; BSR set to: 0
 33608  0153D2  0EFF               	movlw	255
 33609  0153D4  156C               	andwf	sqrt@a& (0+255),w,b
 33610  0153D6  6F85               	movwf	sqrt@frac& (0+255),b
 33611  0153D8  0EFF               	movlw	255
 33612  0153DA  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 33613  0153DC  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 33614  0153DE  0E7F               	movlw	127
 33615  0153E0  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 33616  0153E2  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 33617  0153E4  0E00               	movlw	0
 33618  0153E6  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 33619  0153E8  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 33620                           
 33621                           ; BSR set to: 0
 33622  0153EA  517F               	movf	sqrt@exp& (0+255),w,b
 33623  0153EC  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 33624  0153EE  B4D8               	btfsc	status,2,c
 33625  0153F0  D005               	goto	i2l2213
 33626                           
 33627                           ; BSR set to: 0
 33628  0153F2  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 33629                           
 33630                           ; BSR set to: 0
 33631  0153F4  297F               	incf	sqrt@exp& (0+255),w,b
 33632  0153F6  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 33633  0153F8  A4D8               	btfss	status,2,c
 33634  0153FA  D008               	goto	i2l2215
 33635  0153FC                     i2l2213:
 33636                           
 33637                           ; BSR set to: 0
 33638                           
 33639                           ; BSR set to: 0
 33640  0153FC  0E00               	movlw	0
 33641  0153FE  6F85               	movwf	sqrt@frac& (0+255),b
 33642  015400  0E00               	movlw	0
 33643  015402  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 33644  015404  0E00               	movlw	0
 33645  015406  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 33646  015408  0E00               	movlw	0
 33647  01540A  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 33648  01540C                     i2l2215:
 33649                           
 33650                           ; BSR set to: 0
 33651                           
 33652                           ; BSR set to: 0
 33653  01540C  517F               	movf	sqrt@exp& (0+255),w,b
 33654  01540E  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 33655  015410  A4D8               	btfss	status,2,c
 33656  015412  D009               	goto	i2l2216
 33657                           
 33658                           ; BSR set to: 0
 33659  015414  0E00               	movlw	0
 33660  015416  6F6C               	movwf	?_sqrt& (0+255),b
 33661  015418  0E00               	movlw	0
 33662  01541A  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 33663  01541C  0E00               	movlw	0
 33664  01541E  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 33665  015420  0E00               	movlw	0
 33666  015422  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 33667                           
 33668                           ; BSR set to: 0
 33669  015424  0012               	return	
 33670  015426                     i2l2216:
 33671                           
 33672                           ; BSR set to: 0
 33673                           
 33674                           ; BSR set to: 0
 33675  015426  5174               	movf	sqrt@sign& (0+255),w,b
 33676  015428  B4D8               	btfsc	status,2,c
 33677  01542A  D01A               	goto	i2l2218
 33678                           
 33679                           ; BSR set to: 0
 33680  01542C  0E00               	movlw	0
 33681  01542E  6F81               	movwf	sqrt@root& (0+255),b
 33682  015430  0E00               	movlw	0
 33683  015432  6F82               	movwf	(sqrt@root+1)& (0+255),b
 33684  015434  0E40               	movlw	64
 33685  015436  6F83               	movwf	(sqrt@root+2)& (0+255),b
 33686  015438  0E00               	movlw	0
 33687  01543A  6F84               	movwf	(sqrt@root+3)& (0+255),b
 33688                           
 33689                           ; BSR set to: 0
 33690  01543C  0E80               	movlw	128
 33691  01543E  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 33692  015440  0EFF               	movlw	255
 33693  015442  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 33694                           
 33695                           ; BSR set to: 0
 33696  015444  0E00               	movlw	0
 33697  015446  0102               	movlb	2	; () banked
 33698  015448  6F6F               	movwf	(_errno+1)& (0+255),b
 33699  01544A  0E21               	movlw	33
 33700  01544C  6F6E               	movwf	_errno& (0+255),b
 33701                           
 33702                           ; BSR set to: 2
 33703  01544E  C081  F06C         	movff	sqrt@root,?_sqrt
 33704  015452  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 33705  015456  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 33706  01545A  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 33707                           
 33708                           ; BSR set to: 2
 33709  01545E  0012               	return	
 33710  015460                     i2l2218:
 33711                           
 33712                           ; BSR set to: 2
 33713  015460  0100               	movlb	0	; () banked
 33714  015462  297F               	incf	sqrt@exp& (0+255),w,b
 33715  015464  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 33716  015466  A4D8               	btfss	status,2,c
 33717  015468  D011               	goto	i2l2219
 33718                           
 33719                           ; BSR set to: 0
 33720  01546A  0E00               	movlw	0
 33721  01546C  6F81               	movwf	sqrt@root& (0+255),b
 33722  01546E  0E00               	movlw	0
 33723  015470  6F82               	movwf	(sqrt@root+1)& (0+255),b
 33724  015472  0E80               	movlw	128
 33725  015474  6F83               	movwf	(sqrt@root+2)& (0+255),b
 33726  015476  0E7F               	movlw	127
 33727  015478  6F84               	movwf	(sqrt@root+3)& (0+255),b
 33728                           
 33729                           ; BSR set to: 0
 33730  01547A  C081  F06C         	movff	sqrt@root,?_sqrt
 33731  01547E  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 33732  015482  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 33733  015486  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 33734                           
 33735                           ; BSR set to: 0
 33736  01548A  0012               	return	
 33737  01548C                     i2l2219:
 33738                           
 33739                           ; BSR set to: 0
 33740                           
 33741                           ; BSR set to: 0
 33742  01548C  0E81               	movlw	129
 33743  01548E  277F               	addwf	sqrt@exp& (0+255),f,b
 33744  015490  0EFF               	movlw	255
 33745  015492  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 33746  015494  517F               	movf	sqrt@exp& (0+255),w,b
 33747  015496  0B01               	andlw	1
 33748  015498  6F7A               	movwf	sqrt@p& (0+255),b
 33749  01549A  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 33750  01549C  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 33751  01549E  337F               	rrcf	sqrt@exp& (0+255),f,b
 33752  0154A0  0E7F               	movlw	127
 33753  0154A2  277F               	addwf	sqrt@exp& (0+255),f,b
 33754  0154A4  0E00               	movlw	0
 33755  0154A6  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 33756  0154A8  90D8               	bcf	status,0,c
 33757  0154AA  3585               	rlcf	sqrt@frac& (0+255),w,b
 33758  0154AC  6F76               	movwf	sqrt@tfrac& (0+255),b
 33759  0154AE  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 33760  0154B0  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 33761  0154B2  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 33762  0154B4  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 33763  0154B6  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 33764  0154B8  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 33765                           
 33766                           ; BSR set to: 0
 33767  0154BA  0E00               	movlw	0
 33768  0154BC  6F85               	movwf	sqrt@frac& (0+255),b
 33769  0154BE  0E00               	movlw	0
 33770  0154C0  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 33771  0154C2  0E00               	movlw	0
 33772  0154C4  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 33773  0154C6  0E00               	movlw	0
 33774  0154C8  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 33775                           
 33776                           ; BSR set to: 0
 33777  0154CA  0E00               	movlw	0
 33778  0154CC  6F7B               	movwf	sqrt@grs& (0+255),b
 33779  0154CE  0E00               	movlw	0
 33780  0154D0  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 33781  0154D2  0E00               	movlw	0
 33782  0154D4  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 33783  0154D6  0E01               	movlw	1
 33784  0154D8  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 33785                           
 33786                           ; BSR set to: 0
 33787  0154DA  517A               	movf	sqrt@p& (0+255),w,b
 33788  0154DC  B4D8               	btfsc	status,2,c
 33789  0154DE  D005               	goto	i2l2220
 33790                           
 33791                           ; BSR set to: 0
 33792  0154E0  90D8               	bcf	status,0,c
 33793  0154E2  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 33794  0154E4  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 33795  0154E6  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 33796  0154E8  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 33797  0154EA                     i2l2220:
 33798                           
 33799                           ; BSR set to: 0
 33800                           
 33801                           ; BSR set to: 0
 33802  0154EA  0E00               	movlw	0
 33803  0154EC  6F75               	movwf	sqrt@i& (0+255),b
 33804  0154EE  D052               	goto	i2l2221
 33805  0154F0                     
 33806                           ; BSR set to: 0
 33807                           
 33808                           ; BSR set to: 0
 33809  0154F0  517B               	movf	sqrt@grs& (0+255),w,b
 33810  0154F2  1385               	iorwf	sqrt@frac& (0+255),f,b
 33811  0154F4  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 33812  0154F6  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 33813  0154F8  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 33814  0154FA  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 33815  0154FC  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 33816  0154FE  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 33817  015500  5185               	movf	sqrt@frac& (0+255),w,b
 33818  015502  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 33819  015504  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 33820  015506  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 33821  015508  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 33822  01550A  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 33823  01550C  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 33824  01550E  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 33825  015510  A0D8               	btfss	status,0,c
 33826  015512  D011               	goto	i2l2223
 33827                           
 33828                           ; BSR set to: 0
 33829  015514  5185               	movf	sqrt@frac& (0+255),w,b
 33830  015516  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 33831  015518  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 33832  01551A  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 33833  01551C  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 33834  01551E  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 33835  015520  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 33836  015522  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 33837  015524  517B               	movf	sqrt@grs& (0+255),w,b
 33838  015526  2785               	addwf	sqrt@frac& (0+255),f,b
 33839  015528  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 33840  01552A  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 33841  01552C  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 33842  01552E  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 33843  015530  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 33844  015532  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 33845  015534  D014               	goto	i2l2224
 33846  015536                     i2l2223:
 33847                           
 33848                           ; BSR set to: 0
 33849                           
 33850                           ; BSR set to: 0
 33851  015536  C07B  F070         	movff	sqrt@grs,??_sqrt
 33852  01553A  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 33853  01553E  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 33854  015542  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 33855  015546  1F70               	comf	??_sqrt& (0+255),f,b
 33856  015548  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 33857  01554A  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 33858  01554C  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 33859  01554E  5170               	movf	??_sqrt& (0+255),w,b
 33860  015550  1785               	andwf	sqrt@frac& (0+255),f,b
 33861  015552  5171               	movf	(??_sqrt+1)& (0+255),w,b
 33862  015554  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 33863  015556  5172               	movf	(??_sqrt+2)& (0+255),w,b
 33864  015558  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 33865  01555A  5173               	movf	(??_sqrt+3)& (0+255),w,b
 33866  01555C  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 33867  01555E                     i2l2224:
 33868                           
 33869                           ; BSR set to: 0
 33870                           
 33871                           ; BSR set to: 0
 33872  01555E  C07B  F070         	movff	sqrt@grs,??_sqrt
 33873  015562  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 33874  015566  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 33875  01556A  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 33876  01556E  90D8               	bcf	status,0,c
 33877  015570  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 33878  015572  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 33879  015574  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 33880  015576  3370               	rrcf	??_sqrt& (0+255),f,b
 33881  015578  C070  F07B         	movff	??_sqrt,sqrt@grs
 33882  01557C  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 33883  015580  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 33884  015584  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 33885                           
 33886                           ; BSR set to: 0
 33887  015588  90D8               	bcf	status,0,c
 33888  01558A  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 33889  01558C  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 33890  01558E  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 33891  015590  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 33892                           
 33893                           ; BSR set to: 0
 33894  015592  2B75               	incf	sqrt@i& (0+255),f,b
 33895  015594                     i2l2221:
 33896                           
 33897                           ; BSR set to: 0
 33898                           
 33899                           ; BSR set to: 0
 33900  015594  0E18               	movlw	24
 33901  015596  6575               	cpfsgt	sqrt@i& (0+255),b
 33902  015598  D7AB               	goto	i2l2222
 33903                           
 33904                           ; BSR set to: 0
 33905                           
 33906                           ; BSR set to: 0
 33907  01559A  C085  F070         	movff	sqrt@frac,??_sqrt
 33908  01559E  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 33909  0155A2  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 33910  0155A6  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 33911  0155AA  90D8               	bcf	status,0,c
 33912  0155AC  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 33913  0155AE  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 33914  0155B0  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 33915  0155B2  3370               	rrcf	??_sqrt& (0+255),f,b
 33916  0155B4  C070  F085         	movff	??_sqrt,sqrt@frac
 33917  0155B8  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 33918  0155BC  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 33919  0155C0  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 33920                           
 33921                           ; BSR set to: 0
 33922  0155C4  0E01               	movlw	1
 33923  0155C6  1585               	andwf	sqrt@frac& (0+255),w,b
 33924  0155C8  6F7B               	movwf	sqrt@grs& (0+255),b
 33925  0155CA  0E00               	movlw	0
 33926  0155CC  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 33927  0155CE  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 33928  0155D0  0E00               	movlw	0
 33929  0155D2  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 33930  0155D4  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 33931  0155D6  0E00               	movlw	0
 33932  0155D8  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 33933  0155DA  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 33934                           
 33935                           ; BSR set to: 0
 33936  0155DC  C085  F070         	movff	sqrt@frac,??_sqrt
 33937  0155E0  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 33938  0155E4  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 33939  0155E8  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 33940  0155EC  90D8               	bcf	status,0,c
 33941  0155EE  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 33942  0155F0  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 33943  0155F2  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 33944  0155F4  3370               	rrcf	??_sqrt& (0+255),f,b
 33945  0155F6  C070  F085         	movff	??_sqrt,sqrt@frac
 33946  0155FA  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 33947  0155FE  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 33948  015602  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 33949  015606  517B               	movf	sqrt@grs& (0+255),w,b
 33950  015608  2785               	addwf	sqrt@frac& (0+255),f,b
 33951  01560A  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 33952  01560C  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 33953  01560E  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 33954  015610  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 33955  015612  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 33956  015614  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 33957                           
 33958                           ; BSR set to: 0
 33959  015616  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 33960  015618  D017               	goto	i2l2226
 33961                           
 33962                           ; BSR set to: 0
 33963  01561A  C085  F070         	movff	sqrt@frac,??_sqrt
 33964  01561E  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 33965  015622  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 33966  015626  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 33967  01562A  90D8               	bcf	status,0,c
 33968  01562C  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 33969  01562E  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 33970  015630  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 33971  015632  3370               	rrcf	??_sqrt& (0+255),f,b
 33972  015634  C070  F085         	movff	??_sqrt,sqrt@frac
 33973  015638  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 33974  01563C  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 33975  015640  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 33976  015644  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 33977  015646  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 33978  015648                     i2l2226:
 33979                           
 33980                           ; BSR set to: 0
 33981                           
 33982                           ; BSR set to: 0
 33983  015648  0EFF               	movlw	255
 33984  01564A  1585               	andwf	sqrt@frac& (0+255),w,b
 33985  01564C  6F81               	movwf	sqrt@root& (0+255),b
 33986  01564E  0EFF               	movlw	255
 33987  015650  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 33988  015652  6F82               	movwf	(sqrt@root+1)& (0+255),b
 33989  015654  0E7F               	movlw	127
 33990  015656  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 33991  015658  6F83               	movwf	(sqrt@root+2)& (0+255),b
 33992  01565A  0E00               	movlw	0
 33993  01565C  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 33994  01565E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 33995                           
 33996                           ; BSR set to: 0
 33997  015660  C07F  F07A         	movff	sqrt@exp,sqrt@p
 33998                           
 33999                           ; BSR set to: 0
 34000  015664  B17A               	btfsc	sqrt@p& (0+255),0,b
 34001                           
 34002                           ; BSR set to: 0
 34003  015666  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 34004                           
 34005                           ; BSR set to: 0
 34006                           
 34007                           ; BSR set to: 0
 34008  015668  90D8               	bcf	status,0,c
 34009  01566A  317A               	rrcf	sqrt@p& (0+255),w,b
 34010  01566C  6F84               	movwf	(sqrt@root+3)& (0+255),b
 34011                           
 34012                           ; BSR set to: 0
 34013  01566E  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 34014                           
 34015                           ; BSR set to: 0
 34016  015670  C081  F06C         	movff	sqrt@root,?_sqrt
 34017  015674  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 34018  015678  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 34019  01567C  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 34020  015680  0012               	return	
 34021  015682                     __end_of_sqrt:
 34022                           	opt stack 0
 34023                           tosu	equ	0xFFF
 34024                           tosh	equ	0xFFE
 34025                           tosl	equ	0xFFD
 34026                           pclatu	equ	0xFFB
 34027                           pclath	equ	0xFFA
 34028                           tblptru	equ	0xFF8
 34029                           tblptrh	equ	0xFF7
 34030                           tblptrl	equ	0xFF6
 34031                           tablat	equ	0xFF5
 34032                           prodh	equ	0xFF4
 34033                           prodl	equ	0xFF3
 34034                           intcon	equ	0xFF2
 34035                           indf0	equ	0xFEF
 34036                           postinc0	equ	0xFEE
 34037                           fsr0h	equ	0xFEA
 34038                           fsr0l	equ	0xFE9
 34039                           wreg	equ	0xFE8
 34040                           indf1	equ	0xFE7
 34041                           postdec1	equ	0xFE5
 34042                           plusw1	equ	0xFE3
 34043                           fsr1h	equ	0xFE2
 34044                           fsr1l	equ	0xFE1
 34045                           bsr	equ	0xFE0
 34046                           indf2	equ	0xFDF
 34047                           postinc2	equ	0xFDE
 34048                           postdec2	equ	0xFDD
 34049                           plusw2	equ	0xFDB
 34050                           fsr2h	equ	0xFDA
 34051                           fsr2l	equ	0xFD9
 34052                           status	equ	0xFD8
 34053                           
 34054 ;; *************** function _atan *****************
 34055 ;; Defined at:
 34056 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 34057 ;; Parameters:    Size  Location     Type
 34058 ;;  f               4   28[BANK0 ] unsigned char 
 34059 ;; Auto vars:     Size  Location     Type
 34060 ;;  val             4   45[BANK0 ] unsigned char 
 34061 ;;  val_squared     4   41[BANK0 ] unsigned char 
 34062 ;;  x               4   36[BANK0 ] unsigned char 
 34063 ;;  y               4   32[BANK0 ] unsigned char 
 34064 ;;  recip           1   40[BANK0 ] unsigned char 
 34065 ;; Return value:  Size  Location     Type
 34066 ;;                  4   28[BANK0 ] unsigned char 
 34067 ;; Registers used:
 34068 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34069 ;; Tracked objects:
 34070 ;;		On entry : 0/0
 34071 ;;		On exit  : 0/0
 34072 ;;		Unchanged: 0/0
 34073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34074 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34075 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34077 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34078 ;;Total ram usage:       21 bytes
 34079 ;; Hardware stack levels used:    1
 34080 ;; Hardware stack levels required when called:    2
 34081 ;; This function calls:
 34082 ;;		_eval_poly
 34083 ;;		_fabs
 34084 ;;		i2___fladd
 34085 ;;		i2___fldiv
 34086 ;;		i2___flge
 34087 ;;		i2___flmul
 34088 ;;		i2___flneg
 34089 ;; This function is called by:
 34090 ;;		_asin
 34091 ;; This function uses a non-reentrant model
 34092 ;;
 34093                           
 34094                           	psect	text110
 34095  0163AA                     __ptext110:
 34096                           	opt stack 0
 34097  0163AA                     _atan:
 34098                           	opt stack 11
 34099                           
 34100                           ;incstack = 0
 34101  0163AA  C07C  F030         	movff	atan@f,fabs@d
 34102  0163AE  C07D  F031         	movff	atan@f+1,fabs@d+1
 34103  0163B2  C07E  F032         	movff	atan@f+2,fabs@d+2
 34104  0163B6  C07F  F033         	movff	atan@f+3,fabs@d+3
 34105  0163BA  EC51  F0C3         	call	_fabs	;wreg free
 34106  0163BE  C030  F08D         	movff	?_fabs,atan@val
 34107  0163C2  C031  F08E         	movff	?_fabs+1,atan@val+1
 34108  0163C6  C032  F08F         	movff	?_fabs+2,atan@val+2
 34109  0163CA  C033  F090         	movff	?_fabs+3,atan@val+3
 34110  0163CE  0100               	movlb	0	; () banked
 34111  0163D0  518D               	movf	atan@val& (0+255),w,b
 34112  0163D2  118E               	iorwf	(atan@val+1)& (0+255),w,b
 34113  0163D4  118F               	iorwf	(atan@val+2)& (0+255),w,b
 34114  0163D6  1190               	iorwf	(atan@val+3)& (0+255),w,b
 34115  0163D8  A4D8               	btfss	status,2,c
 34116  0163DA  D009               	goto	i2l1703
 34117                           
 34118                           ; BSR set to: 0
 34119  0163DC  0E00               	movlw	0
 34120  0163DE  6F7C               	movwf	?_atan& (0+255),b
 34121  0163E0  0E00               	movlw	0
 34122  0163E2  6F7D               	movwf	(?_atan+1)& (0+255),b
 34123  0163E4  0E00               	movlw	0
 34124  0163E6  6F7E               	movwf	(?_atan+2)& (0+255),b
 34125  0163E8  0E00               	movlw	0
 34126  0163EA  6F7F               	movwf	(?_atan+3)& (0+255),b
 34127                           
 34128                           ; BSR set to: 0
 34129  0163EC  0012               	return	
 34130  0163EE                     i2l1703:
 34131                           
 34132                           ; BSR set to: 0
 34133                           
 34134                           ; BSR set to: 0
 34135  0163EE  0E00               	movlw	0
 34136  0163F0  6E34               	movwf	i2___flge@ff1,c
 34137  0163F2  0E00               	movlw	0
 34138  0163F4  6E35               	movwf	i2___flge@ff1+1,c
 34139  0163F6  0E80               	movlw	128
 34140  0163F8  6E36               	movwf	i2___flge@ff1+2,c
 34141  0163FA  0E3F               	movlw	63
 34142  0163FC  6E37               	movwf	i2___flge@ff1+3,c
 34143  0163FE  C08D  F038         	movff	atan@val,i2___flge@ff2
 34144  016402  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 34145  016406  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 34146  01640A  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 34147  01640E  EC97  F0B8         	call	i2___flge	;wreg free
 34148  016412  B0D8               	btfsc	status,0,c
 34149  016414  D002               	goto	i2u1493_40
 34150  016416  0E01               	movlw	1
 34151  016418  D001               	goto	i2u1494_40
 34152  01641A                     i2u1493_40:
 34153  01641A  0E00               	movlw	0
 34154  01641C                     i2u1494_40:
 34155  01641C  0100               	movlb	0	; () banked
 34156  01641E  6F88               	movwf	atan@recip& (0+255),b
 34157  016420  5188               	movf	atan@recip& (0+255),w,b
 34158  016422  B4D8               	btfsc	status,2,c
 34159  016424  D01A               	goto	i2l1705
 34160                           
 34161                           ; BSR set to: 0
 34162  016426  0E00               	movlw	0
 34163  016428  6E13               	movwf	i2___fldiv@b,c
 34164  01642A  0E00               	movlw	0
 34165  01642C  6E14               	movwf	i2___fldiv@b+1,c
 34166  01642E  0E80               	movlw	128
 34167  016430  6E15               	movwf	i2___fldiv@b+2,c
 34168  016432  0E3F               	movlw	63
 34169  016434  6E16               	movwf	i2___fldiv@b+3,c
 34170  016436  C08D  F017         	movff	atan@val,i2___fldiv@a
 34171  01643A  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 34172  01643E  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 34173  016442  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 34174  016446  ECFF  F0AD         	call	i2___fldiv	;wreg free
 34175  01644A  C013  F08D         	movff	?i2___fldiv,atan@val
 34176  01644E  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 34177  016452  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 34178  016456  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 34179  01645A                     i2l1705:
 34180  01645A  C08D  F030         	movff	atan@val,i2___flmul@b
 34181  01645E  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 34182  016462  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 34183  016466  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 34184  01646A  C08D  F034         	movff	atan@val,i2___flmul@a
 34185  01646E  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 34186  016472  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 34187  016476  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 34188  01647A  ECF8  F0A1         	call	i2___flmul	;wreg free
 34189  01647E  C030  F089         	movff	?i2___flmul,atan@val_squared
 34190  016482  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 34191  016486  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 34192  01648A  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 34193  01648E  C089  F06C         	movff	atan@val_squared,eval_poly@x
 34194  016492  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 34195  016496  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 34196  01649A  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 34197  01649E  0EA3               	movlw	low atan@coeff_b
 34198  0164A0  0100               	movlb	0	; () banked
 34199  0164A2  6F70               	movwf	eval_poly@d& (0+255),b
 34200  0164A4  0EE9               	movlw	high atan@coeff_b
 34201  0164A6  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 34202  0164A8  0E00               	movlw	0
 34203  0164AA  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 34204  0164AC  0E04               	movlw	4
 34205  0164AE  6F72               	movwf	eval_poly@n& (0+255),b
 34206  0164B0  ECB0  F0B9         	call	_eval_poly	;wreg free
 34207  0164B4  C06C  F080         	movff	?_eval_poly,atan@y
 34208  0164B8  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 34209  0164BC  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 34210  0164C0  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 34211  0164C4  C089  F06C         	movff	atan@val_squared,eval_poly@x
 34212  0164C8  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 34213  0164CC  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 34214  0164D0  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 34215  0164D4  0E77               	movlw	low atan@coeff_a
 34216  0164D6  0100               	movlb	0	; () banked
 34217  0164D8  6F70               	movwf	eval_poly@d& (0+255),b
 34218  0164DA  0EE9               	movlw	high atan@coeff_a
 34219  0164DC  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 34220  0164DE  0E00               	movlw	0
 34221  0164E0  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 34222  0164E2  0E05               	movlw	5
 34223  0164E4  6F72               	movwf	eval_poly@n& (0+255),b
 34224  0164E6  ECB0  F0B9         	call	_eval_poly	;wreg free
 34225  0164EA  C06C  F084         	movff	?_eval_poly,atan@x
 34226  0164EE  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 34227  0164F2  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 34228  0164F6  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 34229  0164FA  C08D  F030         	movff	atan@val,i2___flmul@b
 34230  0164FE  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 34231  016502  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 34232  016506  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 34233  01650A  C080  F017         	movff	atan@y,i2___fldiv@a
 34234  01650E  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 34235  016512  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 34236  016516  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 34237  01651A  C084  F013         	movff	atan@x,i2___fldiv@b
 34238  01651E  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 34239  016522  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 34240  016526  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 34241  01652A  ECFF  F0AD         	call	i2___fldiv	;wreg free
 34242  01652E  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 34243  016532  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 34244  016536  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 34245  01653A  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 34246  01653E  ECF8  F0A1         	call	i2___flmul	;wreg free
 34247  016542  C030  F08D         	movff	?i2___flmul,atan@val
 34248  016546  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 34249  01654A  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 34250  01654E  C033  F090         	movff	?i2___flmul+3,atan@val+3
 34251  016552  0100               	movlb	0	; () banked
 34252  016554  5188               	movf	atan@recip& (0+255),w,b
 34253  016556  B4D8               	btfsc	status,2,c
 34254  016558  D024               	goto	i2l1706
 34255                           
 34256                           ; BSR set to: 0
 34257  01655A  C08D  F02C         	movff	atan@val,i2___flneg@f1
 34258  01655E  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 34259  016562  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 34260  016566  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 34261  01656A  EC55  F0C4         	call	i2___flneg	;wreg free
 34262  01656E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 34263  016572  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 34264  016576  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 34265  01657A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 34266  01657E  0EDB               	movlw	219
 34267  016580  6E5A               	movwf	i2___fladd@a,c
 34268  016582  0E0F               	movlw	15
 34269  016584  6E5B               	movwf	i2___fladd@a+1,c
 34270  016586  0EC9               	movlw	201
 34271  016588  6E5C               	movwf	i2___fladd@a+2,c
 34272  01658A  0E3F               	movlw	63
 34273  01658C  6E5D               	movwf	i2___fladd@a+3,c
 34274  01658E  EC3F  F0A5         	call	i2___fladd	;wreg free
 34275  016592  C056  F08D         	movff	?i2___fladd,atan@val
 34276  016596  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 34277  01659A  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 34278  01659E  C059  F090         	movff	?i2___fladd+3,atan@val+3
 34279  0165A2                     i2l1706:
 34280  0165A2  0100               	movlb	0	; () banked
 34281  0165A4  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 34282  0165A6  D009               	goto	i2l1708
 34283                           
 34284                           ; BSR set to: 0
 34285  0165A8  C08D  F07C         	movff	atan@val,?_atan
 34286  0165AC  C08E  F07D         	movff	atan@val+1,?_atan+1
 34287  0165B0  C08F  F07E         	movff	atan@val+2,?_atan+2
 34288  0165B4  C090  F07F         	movff	atan@val+3,?_atan+3
 34289  0165B8  0012               	return	
 34290  0165BA                     i2l1708:
 34291                           
 34292                           ; BSR set to: 0
 34293                           
 34294                           ; BSR set to: 0
 34295  0165BA  C08D  F02C         	movff	atan@val,i2___flneg@f1
 34296  0165BE  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 34297  0165C2  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 34298  0165C6  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 34299  0165CA  EC55  F0C4         	call	i2___flneg	;wreg free
 34300  0165CE  C02C  F07C         	movff	?i2___flneg,?_atan
 34301  0165D2  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 34302  0165D6  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 34303  0165DA  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 34304  0165DE  0012               	return	
 34305  0165E0                     __end_of_atan:
 34306                           	opt stack 0
 34307                           tosu	equ	0xFFF
 34308                           tosh	equ	0xFFE
 34309                           tosl	equ	0xFFD
 34310                           pclatu	equ	0xFFB
 34311                           pclath	equ	0xFFA
 34312                           tblptru	equ	0xFF8
 34313                           tblptrh	equ	0xFF7
 34314                           tblptrl	equ	0xFF6
 34315                           tablat	equ	0xFF5
 34316                           prodh	equ	0xFF4
 34317                           prodl	equ	0xFF3
 34318                           intcon	equ	0xFF2
 34319                           indf0	equ	0xFEF
 34320                           postinc0	equ	0xFEE
 34321                           fsr0h	equ	0xFEA
 34322                           fsr0l	equ	0xFE9
 34323                           wreg	equ	0xFE8
 34324                           indf1	equ	0xFE7
 34325                           postdec1	equ	0xFE5
 34326                           plusw1	equ	0xFE3
 34327                           fsr1h	equ	0xFE2
 34328                           fsr1l	equ	0xFE1
 34329                           bsr	equ	0xFE0
 34330                           indf2	equ	0xFDF
 34331                           postinc2	equ	0xFDE
 34332                           postdec2	equ	0xFDD
 34333                           plusw2	equ	0xFDB
 34334                           fsr2h	equ	0xFDA
 34335                           fsr2l	equ	0xFD9
 34336                           status	equ	0xFD8
 34337                           
 34338 ;; *************** function _fabs *****************
 34339 ;; Defined at:
 34340 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 34341 ;; Parameters:    Size  Location     Type
 34342 ;;  d               4   47[COMRAM] unsigned char 
 34343 ;; Auto vars:     Size  Location     Type
 34344 ;;		None
 34345 ;; Return value:  Size  Location     Type
 34346 ;;                  4   47[COMRAM] unsigned char 
 34347 ;; Registers used:
 34348 ;;		wreg, status,2, status,0, cstack
 34349 ;; Tracked objects:
 34350 ;;		On entry : 0/0
 34351 ;;		On exit  : 0/0
 34352 ;;		Unchanged: 0/0
 34353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34358 ;;Total ram usage:        4 bytes
 34359 ;; Hardware stack levels used:    1
 34360 ;; Hardware stack levels required when called:    1
 34361 ;; This function calls:
 34362 ;;		i2___flneg
 34363 ;; This function is called by:
 34364 ;;		_asin
 34365 ;;		_atan
 34366 ;; This function uses a non-reentrant model
 34367 ;;
 34368                           
 34369                           	psect	text111
 34370  0186A2                     __ptext111:
 34371                           	opt stack 0
 34372  0186A2                     _fabs:
 34373                           	opt stack 12
 34374                           
 34375                           ;incstack = 0
 34376  0186A2  AE33               	btfss	fabs@d+3,7,c
 34377  0186A4  D013               	goto	i2l1800
 34378  0186A6  C030  F02C         	movff	fabs@d,i2___flneg@f1
 34379  0186AA  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 34380  0186AE  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 34381  0186B2  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 34382  0186B6  EC55  F0C4         	call	i2___flneg	;wreg free
 34383  0186BA  C02C  F030         	movff	?i2___flneg,?_fabs
 34384  0186BE  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 34385  0186C2  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 34386  0186C6  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 34387  0186CA  0012               	return	
 34388  0186CC                     i2l1800:
 34389  0186CC  C030  F030         	movff	fabs@d,?_fabs
 34390  0186D0  C031  F031         	movff	fabs@d+1,?_fabs+1
 34391  0186D4  C032  F032         	movff	fabs@d+2,?_fabs+2
 34392  0186D8  C033  F033         	movff	fabs@d+3,?_fabs+3
 34393  0186DC  0012               	return		;funcret
 34394  0186DE                     __end_of_fabs:
 34395                           	opt stack 0
 34396                           tosu	equ	0xFFF
 34397                           tosh	equ	0xFFE
 34398                           tosl	equ	0xFFD
 34399                           pclatu	equ	0xFFB
 34400                           pclath	equ	0xFFA
 34401                           tblptru	equ	0xFF8
 34402                           tblptrh	equ	0xFF7
 34403                           tblptrl	equ	0xFF6
 34404                           tablat	equ	0xFF5
 34405                           prodh	equ	0xFF4
 34406                           prodl	equ	0xFF3
 34407                           intcon	equ	0xFF2
 34408                           indf0	equ	0xFEF
 34409                           postinc0	equ	0xFEE
 34410                           fsr0h	equ	0xFEA
 34411                           fsr0l	equ	0xFE9
 34412                           wreg	equ	0xFE8
 34413                           indf1	equ	0xFE7
 34414                           postdec1	equ	0xFE5
 34415                           plusw1	equ	0xFE3
 34416                           fsr1h	equ	0xFE2
 34417                           fsr1l	equ	0xFE1
 34418                           bsr	equ	0xFE0
 34419                           indf2	equ	0xFDF
 34420                           postinc2	equ	0xFDE
 34421                           postdec2	equ	0xFDD
 34422                           plusw2	equ	0xFDB
 34423                           fsr2h	equ	0xFDA
 34424                           fsr2l	equ	0xFD9
 34425                           status	equ	0xFD8
 34426                           
 34427 ;; *************** function _currentMeasuredToPeak *****************
 34428 ;; Defined at:
 34429 ;;		line 130 in file "main.c"
 34430 ;; Parameters:    Size  Location     Type
 34431 ;;  Measured        4   57[BANK0 ] unsigned char 
 34432 ;;  Angle           4   61[BANK0 ] unsigned char 
 34433 ;; Auto vars:     Size  Location     Type
 34434 ;;  Peak            4   65[BANK0 ] unsigned char 
 34435 ;; Return value:  Size  Location     Type
 34436 ;;                  4   57[BANK0 ] unsigned char 
 34437 ;; Registers used:
 34438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34439 ;; Tracked objects:
 34440 ;;		On entry : 0/0
 34441 ;;		On exit  : 0/0
 34442 ;;		Unchanged: 0/0
 34443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34444 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34445 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34447 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34448 ;;Total ram usage:       12 bytes
 34449 ;; Hardware stack levels used:    1
 34450 ;; Hardware stack levels required when called:    3
 34451 ;; This function calls:
 34452 ;;		_sin
 34453 ;;		i2___fldiv
 34454 ;; This function is called by:
 34455 ;;		_ADCPostProcessingCallback
 34456 ;; This function uses a non-reentrant model
 34457 ;;
 34458                           
 34459                           	psect	text112
 34460  017CCE                     __ptext112:
 34461                           	opt stack 0
 34462  017CCE                     _currentMeasuredToPeak:
 34463                           	opt stack 13
 34464                           
 34465                           ;main.c: 133: double Peak = 0.0;
 34466                           
 34467                           ;incstack = 0
 34468  017CCE  0E00               	movlw	0
 34469  017CD0  0100               	movlb	0	; () banked
 34470  017CD2  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 34471  017CD4  0E00               	movlw	0
 34472  017CD6  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 34473  017CD8  0E00               	movlw	0
 34474  017CDA  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 34475  017CDC  0E00               	movlw	0
 34476  017CDE  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;main.c: 136: Peak = sin(Angle);
 34480  017CE0  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 34481  017CE4  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 34482  017CE8  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 34483  017CEC  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 34484  017CF0  EC60  F0A8         	call	_sin	;wreg free
 34485  017CF4  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 34486  017CF8  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 34487  017CFC  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 34488  017D00  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 34489                           
 34490                           ;main.c: 137: Peak = Measured / Peak;
 34491  017D04  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 34492  017D08  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 34493  017D0C  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 34494  017D10  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 34495  017D14  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 34496  017D18  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 34497  017D1C  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 34498  017D20  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 34499  017D24  ECFF  F0AD         	call	i2___fldiv	;wreg free
 34500  017D28  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 34501  017D2C  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 34502  017D30  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 34503  017D34  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 34504                           
 34505                           ;main.c: 138: return Peak;
 34506  017D38  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 34507  017D3C  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 34508  017D40  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 34509  017D44  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 34510  017D48  0012               	return	
 34511  017D4A                     __end_of_currentMeasuredToPeak:
 34512                           	opt stack 0
 34513                           tosu	equ	0xFFF
 34514                           tosh	equ	0xFFE
 34515                           tosl	equ	0xFFD
 34516                           pclatu	equ	0xFFB
 34517                           pclath	equ	0xFFA
 34518                           tblptru	equ	0xFF8
 34519                           tblptrh	equ	0xFF7
 34520                           tblptrl	equ	0xFF6
 34521                           tablat	equ	0xFF5
 34522                           prodh	equ	0xFF4
 34523                           prodl	equ	0xFF3
 34524                           intcon	equ	0xFF2
 34525                           indf0	equ	0xFEF
 34526                           postinc0	equ	0xFEE
 34527                           fsr0h	equ	0xFEA
 34528                           fsr0l	equ	0xFE9
 34529                           wreg	equ	0xFE8
 34530                           indf1	equ	0xFE7
 34531                           postdec1	equ	0xFE5
 34532                           plusw1	equ	0xFE3
 34533                           fsr1h	equ	0xFE2
 34534                           fsr1l	equ	0xFE1
 34535                           bsr	equ	0xFE0
 34536                           indf2	equ	0xFDF
 34537                           postinc2	equ	0xFDE
 34538                           postdec2	equ	0xFDD
 34539                           plusw2	equ	0xFDB
 34540                           fsr2h	equ	0xFDA
 34541                           fsr2l	equ	0xFD9
 34542                           status	equ	0xFD8
 34543                           
 34544 ;; *************** function _sin *****************
 34545 ;; Defined at:
 34546 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 34547 ;; Parameters:    Size  Location     Type
 34548 ;;  f               4   40[BANK0 ] unsigned char 
 34549 ;; Auto vars:     Size  Location     Type
 34550 ;;  x2              4   52[BANK0 ] unsigned char 
 34551 ;;  y               4   44[BANK0 ] unsigned char 
 34552 ;;  sgn             1   56[BANK0 ] unsigned char 
 34553 ;; Return value:  Size  Location     Type
 34554 ;;                  4   40[BANK0 ] unsigned char 
 34555 ;; Registers used:
 34556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34557 ;; Tracked objects:
 34558 ;;		On entry : 0/0
 34559 ;;		On exit  : 0/0
 34560 ;;		Unchanged: 0/0
 34561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34563 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34565 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34566 ;;Total ram usage:       17 bytes
 34567 ;; Hardware stack levels used:    1
 34568 ;; Hardware stack levels required when called:    2
 34569 ;; This function calls:
 34570 ;;		_eval_poly
 34571 ;;		_floor
 34572 ;;		i2___fladd
 34573 ;;		i2___fldiv
 34574 ;;		i2___flge
 34575 ;;		i2___flmul
 34576 ;;		i2___flneg
 34577 ;;		i2___flsub
 34578 ;; This function is called by:
 34579 ;;		_peakToRMS
 34580 ;;		_currentMeasuredToPeak
 34581 ;; This function uses a non-reentrant model
 34582 ;;
 34583                           
 34584                           	psect	text113
 34585  0150C0                     __ptext113:
 34586                           	opt stack 0
 34587  0150C0                     _sin:
 34588                           	opt stack 13
 34589                           
 34590                           ;incstack = 0
 34591  0150C0  0E00               	movlw	0
 34592  0150C2  0100               	movlb	0	; () banked
 34593  0150C4  6F98               	movwf	sin@sgn& (0+255),b
 34594                           
 34595                           ; BSR set to: 0
 34596  0150C6  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 34597  0150C8  D015               	goto	i2l2083
 34598                           
 34599                           ; BSR set to: 0
 34600  0150CA  C088  F02C         	movff	sin@f,i2___flneg@f1
 34601  0150CE  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 34602  0150D2  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 34603  0150D6  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 34604  0150DA  EC55  F0C4         	call	i2___flneg	;wreg free
 34605  0150DE  C02C  F088         	movff	?i2___flneg,sin@f
 34606  0150E2  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 34607  0150E6  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 34608  0150EA  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 34609  0150EE  0E01               	movlw	1
 34610  0150F0  0100               	movlb	0	; () banked
 34611  0150F2  6F98               	movwf	sin@sgn& (0+255),b
 34612  0150F4                     i2l2083:
 34613                           
 34614                           ; BSR set to: 0
 34615                           
 34616                           ; BSR set to: 0
 34617  0150F4  C088  F030         	movff	sin@f,i2___flmul@b
 34618  0150F8  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 34619  0150FC  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 34620  015100  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 34621  015104  0E83               	movlw	131
 34622  015106  6E34               	movwf	i2___flmul@a,c
 34623  015108  0EF9               	movlw	249
 34624  01510A  6E35               	movwf	i2___flmul@a+1,c
 34625  01510C  0E22               	movlw	34
 34626  01510E  6E36               	movwf	i2___flmul@a+2,c
 34627  015110  0E3E               	movlw	62
 34628  015112  6E37               	movwf	i2___flmul@a+3,c
 34629  015114  ECF8  F0A1         	call	i2___flmul	;wreg free
 34630  015118  C030  F088         	movff	?i2___flmul,sin@f
 34631  01511C  C031  F089         	movff	?i2___flmul+1,sin@f+1
 34632  015120  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 34633  015124  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 34634  015128  C088  F080         	movff	sin@f,i2___flsub@b
 34635  01512C  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 34636  015130  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 34637  015134  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 34638  015138  C088  F076         	movff	sin@f,floor@x
 34639  01513C  C089  F077         	movff	sin@f+1,floor@x+1
 34640  015140  C08A  F078         	movff	sin@f+2,floor@x+2
 34641  015144  C08B  F079         	movff	sin@f+3,floor@x+3
 34642  015148  EC27  F0B9         	call	_floor	;wreg free
 34643  01514C  C076  F084         	movff	?_floor,i2___flsub@a
 34644  015150  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 34645  015154  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 34646  015158  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 34647  01515C  EC8D  F0C2         	call	i2___flsub	;wreg free
 34648  015160  C080  F088         	movff	?i2___flsub,sin@f
 34649  015164  C081  F089         	movff	?i2___flsub+1,sin@f+1
 34650  015168  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 34651  01516C  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 34652  015170  C088  F030         	movff	sin@f,i2___flmul@b
 34653  015174  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 34654  015178  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 34655  01517C  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 34656  015180  0E00               	movlw	0
 34657  015182  6E34               	movwf	i2___flmul@a,c
 34658  015184  0E00               	movlw	0
 34659  015186  6E35               	movwf	i2___flmul@a+1,c
 34660  015188  0E80               	movlw	128
 34661  01518A  6E36               	movwf	i2___flmul@a+2,c
 34662  01518C  0E40               	movlw	64
 34663  01518E  6E37               	movwf	i2___flmul@a+3,c
 34664  015190  ECF8  F0A1         	call	i2___flmul	;wreg free
 34665  015194  C030  F088         	movff	?i2___flmul,sin@f
 34666  015198  C031  F089         	movff	?i2___flmul+1,sin@f+1
 34667  01519C  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 34668  0151A0  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 34669  0151A4  0E00               	movlw	0
 34670  0151A6  6E34               	movwf	i2___flge@ff1,c
 34671  0151A8  0E00               	movlw	0
 34672  0151AA  6E35               	movwf	i2___flge@ff1+1,c
 34673  0151AC  0E00               	movlw	0
 34674  0151AE  6E36               	movwf	i2___flge@ff1+2,c
 34675  0151B0  0E40               	movlw	64
 34676  0151B2  6E37               	movwf	i2___flge@ff1+3,c
 34677  0151B4  C088  F038         	movff	sin@f,i2___flge@ff2
 34678  0151B8  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 34679  0151BC  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 34680  0151C0  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 34681  0151C4  EC97  F0B8         	call	i2___flge	;wreg free
 34682  0151C8  B0D8               	btfsc	status,0,c
 34683  0151CA  D023               	goto	i2l2084
 34684  0151CC  C088  F080         	movff	sin@f,i2___flsub@b
 34685  0151D0  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 34686  0151D4  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 34687  0151D8  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 34688  0151DC  0E00               	movlw	0
 34689  0151DE  0100               	movlb	0	; () banked
 34690  0151E0  6F84               	movwf	i2___flsub@a& (0+255),b
 34691  0151E2  0E00               	movlw	0
 34692  0151E4  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 34693  0151E6  0E00               	movlw	0
 34694  0151E8  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 34695  0151EA  0E40               	movlw	64
 34696  0151EC  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 34697  0151EE  EC8D  F0C2         	call	i2___flsub	;wreg free
 34698  0151F2  C080  F088         	movff	?i2___flsub,sin@f
 34699  0151F6  C081  F089         	movff	?i2___flsub+1,sin@f+1
 34700  0151FA  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 34701  0151FE  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 34702  015202  0100               	movlb	0	; () banked
 34703  015204  5198               	movf	sin@sgn& (0+255),w,b
 34704  015206  A4D8               	btfss	status,2,c
 34705  015208  D002               	goto	i2u1638_40
 34706  01520A  0E01               	movlw	1
 34707  01520C  D001               	goto	i2u1639_40
 34708  01520E                     i2u1638_40:
 34709  01520E  0E00               	movlw	0
 34710  015210                     i2u1639_40:
 34711  015210  6F98               	movwf	sin@sgn& (0+255),b
 34712  015212                     i2l2084:
 34713                           
 34714                           ; BSR set to: 0
 34715  015212  0E00               	movlw	0
 34716  015214  6E34               	movwf	i2___flge@ff1,c
 34717  015216  0E00               	movlw	0
 34718  015218  6E35               	movwf	i2___flge@ff1+1,c
 34719  01521A  0E80               	movlw	128
 34720  01521C  6E36               	movwf	i2___flge@ff1+2,c
 34721  01521E  0E3F               	movlw	63
 34722  015220  6E37               	movwf	i2___flge@ff1+3,c
 34723  015222  C088  F038         	movff	sin@f,i2___flge@ff2
 34724  015226  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 34725  01522A  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 34726  01522E  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 34727  015232  EC97  F0B8         	call	i2___flge	;wreg free
 34728  015236  B0D8               	btfsc	status,0,c
 34729  015238  D024               	goto	i2l2085
 34730  01523A  C088  F02C         	movff	sin@f,i2___flneg@f1
 34731  01523E  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 34732  015242  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 34733  015246  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 34734  01524A  EC55  F0C4         	call	i2___flneg	;wreg free
 34735  01524E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 34736  015252  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 34737  015256  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 34738  01525A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 34739  01525E  0E00               	movlw	0
 34740  015260  6E5A               	movwf	i2___fladd@a,c
 34741  015262  0E00               	movlw	0
 34742  015264  6E5B               	movwf	i2___fladd@a+1,c
 34743  015266  0E00               	movlw	0
 34744  015268  6E5C               	movwf	i2___fladd@a+2,c
 34745  01526A  0E40               	movlw	64
 34746  01526C  6E5D               	movwf	i2___fladd@a+3,c
 34747  01526E  EC3F  F0A5         	call	i2___fladd	;wreg free
 34748  015272  C056  F088         	movff	?i2___fladd,sin@f
 34749  015276  C057  F089         	movff	?i2___fladd+1,sin@f+1
 34750  01527A  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 34751  01527E  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 34752  015282                     i2l2085:
 34753  015282  C088  F030         	movff	sin@f,i2___flmul@b
 34754  015286  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 34755  01528A  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 34756  01528E  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 34757  015292  C088  F034         	movff	sin@f,i2___flmul@a
 34758  015296  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 34759  01529A  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 34760  01529E  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 34761  0152A2  ECF8  F0A1         	call	i2___flmul	;wreg free
 34762  0152A6  C030  F094         	movff	?i2___flmul,sin@x2
 34763  0152AA  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 34764  0152AE  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 34765  0152B2  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 34766  0152B6  C094  F06C         	movff	sin@x2,eval_poly@x
 34767  0152BA  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 34768  0152BE  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 34769  0152C2  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 34770  0152C6  0EB7               	movlw	low sin@coeff_b
 34771  0152C8  0100               	movlb	0	; () banked
 34772  0152CA  6F70               	movwf	eval_poly@d& (0+255),b
 34773  0152CC  0EE9               	movlw	high sin@coeff_b
 34774  0152CE  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 34775  0152D0  0E00               	movlw	0
 34776  0152D2  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 34777  0152D4  0E03               	movlw	3
 34778  0152D6  6F72               	movwf	eval_poly@n& (0+255),b
 34779  0152D8  ECB0  F0B9         	call	_eval_poly	;wreg free
 34780  0152DC  C06C  F08C         	movff	?_eval_poly,sin@y
 34781  0152E0  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 34782  0152E4  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 34783  0152E8  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 34784  0152EC  C08C  F017         	movff	sin@y,i2___fldiv@a
 34785  0152F0  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 34786  0152F4  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 34787  0152F8  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 34788  0152FC  0E00               	movlw	0
 34789  0152FE  0100               	movlb	0	; () banked
 34790  015300  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 34791  015302  0E04               	movlw	4
 34792  015304  6F72               	movwf	eval_poly@n& (0+255),b
 34793  015306  0E8F               	movlw	low sin@coeff_a
 34794  015308  6F70               	movwf	eval_poly@d& (0+255),b
 34795  01530A  0EE9               	movlw	high sin@coeff_a
 34796  01530C  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 34797  01530E  C094  F06C         	movff	sin@x2,eval_poly@x
 34798  015312  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 34799  015316  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 34800  01531A  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 34801  01531E  ECB0  F0B9         	call	_eval_poly	;wreg free
 34802  015322  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 34803  015326  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 34804  01532A  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 34805  01532E  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 34806  015332  ECFF  F0AD         	call	i2___fldiv	;wreg free
 34807  015336  C013  F090         	movff	?i2___fldiv,_sin$4139
 34808  01533A  C014  F091         	movff	?i2___fldiv+1,_sin$4139+1
 34809  01533E  C015  F092         	movff	?i2___fldiv+2,_sin$4139+2
 34810  015342  C016  F093         	movff	?i2___fldiv+3,_sin$4139+3
 34811  015346  C088  F030         	movff	sin@f,i2___flmul@b
 34812  01534A  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 34813  01534E  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 34814  015352  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 34815  015356  C090  F034         	movff	_sin$4139,i2___flmul@a
 34816  01535A  C091  F035         	movff	_sin$4139+1,i2___flmul@a+1
 34817  01535E  C092  F036         	movff	_sin$4139+2,i2___flmul@a+2
 34818  015362  C093  F037         	movff	_sin$4139+3,i2___flmul@a+3
 34819  015366  ECF8  F0A1         	call	i2___flmul	;wreg free
 34820  01536A  C030  F088         	movff	?i2___flmul,sin@f
 34821  01536E  C031  F089         	movff	?i2___flmul+1,sin@f+1
 34822  015372  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 34823  015376  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 34824  01537A  0100               	movlb	0	; () banked
 34825  01537C  5198               	movf	sin@sgn& (0+255),w,b
 34826  01537E  B4D8               	btfsc	status,2,c
 34827  015380  D013               	goto	i2l2086
 34828                           
 34829                           ; BSR set to: 0
 34830  015382  C088  F02C         	movff	sin@f,i2___flneg@f1
 34831  015386  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 34832  01538A  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 34833  01538E  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 34834  015392  EC55  F0C4         	call	i2___flneg	;wreg free
 34835  015396  C02C  F088         	movff	?i2___flneg,?_sin
 34836  01539A  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 34837  01539E  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 34838  0153A2  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 34839  0153A6  0012               	return	
 34840  0153A8                     i2l2086:
 34841                           
 34842                           ; BSR set to: 0
 34843  0153A8  C088  F088         	movff	sin@f,?_sin
 34844  0153AC  C089  F089         	movff	sin@f+1,?_sin+1
 34845  0153B0  C08A  F08A         	movff	sin@f+2,?_sin+2
 34846  0153B4  C08B  F08B         	movff	sin@f+3,?_sin+3
 34847  0153B8  0012               	return		;funcret
 34848  0153BA                     __end_of_sin:
 34849                           	opt stack 0
 34850                           tosu	equ	0xFFF
 34851                           tosh	equ	0xFFE
 34852                           tosl	equ	0xFFD
 34853                           pclatu	equ	0xFFB
 34854                           pclath	equ	0xFFA
 34855                           tblptru	equ	0xFF8
 34856                           tblptrh	equ	0xFF7
 34857                           tblptrl	equ	0xFF6
 34858                           tablat	equ	0xFF5
 34859                           prodh	equ	0xFF4
 34860                           prodl	equ	0xFF3
 34861                           intcon	equ	0xFF2
 34862                           indf0	equ	0xFEF
 34863                           postinc0	equ	0xFEE
 34864                           fsr0h	equ	0xFEA
 34865                           fsr0l	equ	0xFE9
 34866                           wreg	equ	0xFE8
 34867                           indf1	equ	0xFE7
 34868                           postdec1	equ	0xFE5
 34869                           plusw1	equ	0xFE3
 34870                           fsr1h	equ	0xFE2
 34871                           fsr1l	equ	0xFE1
 34872                           bsr	equ	0xFE0
 34873                           indf2	equ	0xFDF
 34874                           postinc2	equ	0xFDE
 34875                           postdec2	equ	0xFDD
 34876                           plusw2	equ	0xFDB
 34877                           fsr2h	equ	0xFDA
 34878                           fsr2l	equ	0xFD9
 34879                           status	equ	0xFD8
 34880                           
 34881 ;; *************** function i2___flsub *****************
 34882 ;; Defined at:
 34883 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 34884 ;; Parameters:    Size  Location     Type
 34885 ;;  b               4   32[BANK0 ] unsigned char 
 34886 ;;  a               4   36[BANK0 ] unsigned char 
 34887 ;; Auto vars:     Size  Location     Type
 34888 ;;		None
 34889 ;; Return value:  Size  Location     Type
 34890 ;;                  4   32[BANK0 ] unsigned char 
 34891 ;; Registers used:
 34892 ;;		wreg, status,2, status,0, cstack
 34893 ;; Tracked objects:
 34894 ;;		On entry : 0/0
 34895 ;;		On exit  : 0/0
 34896 ;;		Unchanged: 0/0
 34897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34898 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34901 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34902 ;;Total ram usage:        8 bytes
 34903 ;; Hardware stack levels used:    1
 34904 ;; Hardware stack levels required when called:    1
 34905 ;; This function calls:
 34906 ;;		i2___fladd
 34907 ;; This function is called by:
 34908 ;;		_sin
 34909 ;;		i2_printf
 34910 ;; This function uses a non-reentrant model
 34911 ;;
 34912                           
 34913                           	psect	text114
 34914  01851A                     __ptext114:
 34915                           	opt stack 0
 34916  01851A                     i2___flsub:
 34917                           	opt stack 15
 34918                           
 34919                           ;incstack = 0
 34920  01851A  0E00               	movlw	0
 34921  01851C  0100               	movlb	0	; () banked
 34922  01851E  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 34923  018520  0E00               	movlw	0
 34924  018522  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 34925  018524  0E00               	movlw	0
 34926  018526  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 34927  018528  0E80               	movlw	128
 34928  01852A  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 34929                           
 34930                           ; BSR set to: 0
 34931  01852C  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 34932  018530  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 34933  018534  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 34934  018538  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 34935  01853C  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 34936  018540  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 34937  018544  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 34938  018548  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 34939  01854C  EC3F  F0A5         	call	i2___fladd	;wreg free
 34940  018550  C056  F080         	movff	?i2___fladd,?i2___flsub
 34941  018554  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 34942  018558  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 34943  01855C  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 34944  018560  0012               	return	
 34945  018562                     __end_ofi2___flsub:
 34946                           	opt stack 0
 34947                           tosu	equ	0xFFF
 34948                           tosh	equ	0xFFE
 34949                           tosl	equ	0xFFD
 34950                           pclatu	equ	0xFFB
 34951                           pclath	equ	0xFFA
 34952                           tblptru	equ	0xFF8
 34953                           tblptrh	equ	0xFF7
 34954                           tblptrl	equ	0xFF6
 34955                           tablat	equ	0xFF5
 34956                           prodh	equ	0xFF4
 34957                           prodl	equ	0xFF3
 34958                           intcon	equ	0xFF2
 34959                           indf0	equ	0xFEF
 34960                           postinc0	equ	0xFEE
 34961                           fsr0h	equ	0xFEA
 34962                           fsr0l	equ	0xFE9
 34963                           wreg	equ	0xFE8
 34964                           indf1	equ	0xFE7
 34965                           postdec1	equ	0xFE5
 34966                           plusw1	equ	0xFE3
 34967                           fsr1h	equ	0xFE2
 34968                           fsr1l	equ	0xFE1
 34969                           bsr	equ	0xFE0
 34970                           indf2	equ	0xFDF
 34971                           postinc2	equ	0xFDE
 34972                           postdec2	equ	0xFDD
 34973                           plusw2	equ	0xFDB
 34974                           fsr2h	equ	0xFDA
 34975                           fsr2l	equ	0xFD9
 34976                           status	equ	0xFD8
 34977                           
 34978 ;; *************** function i2___flneg *****************
 34979 ;; Defined at:
 34980 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 34981 ;; Parameters:    Size  Location     Type
 34982 ;;  f1              4   43[COMRAM] unsigned char 
 34983 ;; Auto vars:     Size  Location     Type
 34984 ;;		None
 34985 ;; Return value:  Size  Location     Type
 34986 ;;                  4   43[COMRAM] unsigned char 
 34987 ;; Registers used:
 34988 ;;		wreg, status,2, status,0
 34989 ;; Tracked objects:
 34990 ;;		On entry : 0/0
 34991 ;;		On exit  : 0/0
 34992 ;;		Unchanged: 0/0
 34993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34998 ;;Total ram usage:        4 bytes
 34999 ;; Hardware stack levels used:    1
 35000 ;; This function calls:
 35001 ;;		Nothing
 35002 ;; This function is called by:
 35003 ;;		_peakToRMS
 35004 ;;		_ADCPostProcessingCallback
 35005 ;;		_acos
 35006 ;;		_asin
 35007 ;;		_atan
 35008 ;;		_fabs
 35009 ;;		_sin
 35010 ;;		i2_printf
 35011 ;; This function uses a non-reentrant model
 35012 ;;
 35013                           
 35014                           	psect	text115
 35015  0188AA                     __ptext115:
 35016                           	opt stack 0
 35017  0188AA                     i2___flneg:
 35018                           	opt stack 16
 35019                           
 35020                           ;incstack = 0
 35021  0188AA  502C               	movf	i2___flneg@f1,w,c
 35022  0188AC  102D               	iorwf	i2___flneg@f1+1,w,c
 35023  0188AE  102E               	iorwf	i2___flneg@f1+2,w,c
 35024  0188B0  102F               	iorwf	i2___flneg@f1+3,w,c
 35025  0188B2  B4D8               	btfsc	status,2,c
 35026  0188B4  D008               	goto	i2l1828
 35027  0188B6  0E00               	movlw	0
 35028  0188B8  1A2C               	xorwf	i2___flneg@f1,f,c
 35029  0188BA  0E00               	movlw	0
 35030  0188BC  1A2D               	xorwf	i2___flneg@f1+1,f,c
 35031  0188BE  0E00               	movlw	0
 35032  0188C0  1A2E               	xorwf	i2___flneg@f1+2,f,c
 35033  0188C2  0E80               	movlw	128
 35034  0188C4  1A2F               	xorwf	i2___flneg@f1+3,f,c
 35035  0188C6                     i2l1828:
 35036  0188C6  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 35037  0188CA  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 35038  0188CE  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 35039  0188D2  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 35040  0188D6  0012               	return	
 35041  0188D8                     __end_ofi2___flneg:
 35042                           	opt stack 0
 35043                           tosu	equ	0xFFF
 35044                           tosh	equ	0xFFE
 35045                           tosl	equ	0xFFD
 35046                           pclatu	equ	0xFFB
 35047                           pclath	equ	0xFFA
 35048                           tblptru	equ	0xFF8
 35049                           tblptrh	equ	0xFF7
 35050                           tblptrl	equ	0xFF6
 35051                           tablat	equ	0xFF5
 35052                           prodh	equ	0xFF4
 35053                           prodl	equ	0xFF3
 35054                           intcon	equ	0xFF2
 35055                           indf0	equ	0xFEF
 35056                           postinc0	equ	0xFEE
 35057                           fsr0h	equ	0xFEA
 35058                           fsr0l	equ	0xFE9
 35059                           wreg	equ	0xFE8
 35060                           indf1	equ	0xFE7
 35061                           postdec1	equ	0xFE5
 35062                           plusw1	equ	0xFE3
 35063                           fsr1h	equ	0xFE2
 35064                           fsr1l	equ	0xFE1
 35065                           bsr	equ	0xFE0
 35066                           indf2	equ	0xFDF
 35067                           postinc2	equ	0xFDE
 35068                           postdec2	equ	0xFDD
 35069                           plusw2	equ	0xFDB
 35070                           fsr2h	equ	0xFDA
 35071                           fsr2l	equ	0xFD9
 35072                           status	equ	0xFD8
 35073                           
 35074 ;; *************** function i2___fldiv *****************
 35075 ;; Defined at:
 35076 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 35077 ;; Parameters:    Size  Location     Type
 35078 ;;  b               4   18[COMRAM] unsigned char 
 35079 ;;  a               4   22[COMRAM] unsigned char 
 35080 ;; Auto vars:     Size  Location     Type
 35081 ;;  __fldiv         4   37[COMRAM] unsigned long 
 35082 ;;  __fldiv         4   31[COMRAM] unsigned long 
 35083 ;;  __fldiv         2   35[COMRAM] int 
 35084 ;;  __fldiv         1   42[COMRAM] unsigned char 
 35085 ;;  __fldiv         1   41[COMRAM] unsigned char 
 35086 ;;  __fldiv         1   30[COMRAM] unsigned char 
 35087 ;; Return value:  Size  Location     Type
 35088 ;;                  4   18[COMRAM] unsigned char 
 35089 ;; Registers used:
 35090 ;;		wreg, status,2, status,0
 35091 ;; Tracked objects:
 35092 ;;		On entry : 0/0
 35093 ;;		On exit  : 0/0
 35094 ;;		Unchanged: 0/0
 35095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35096 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35097 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35098 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35099 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35100 ;;Total ram usage:       25 bytes
 35101 ;; Hardware stack levels used:    1
 35102 ;; This function calls:
 35103 ;;		Nothing
 35104 ;; This function is called by:
 35105 ;;		_peakToRMS
 35106 ;;		_currentMeasuredToPeak
 35107 ;;		_ADCPostProcessingCallback
 35108 ;;		_asin
 35109 ;;		_atan
 35110 ;;		_sin
 35111 ;; This function uses a non-reentrant model
 35112 ;;
 35113                           
 35114                           	psect	text116
 35115  015BFE                     __ptext116:
 35116                           	opt stack 0
 35117  015BFE                     i2___fldiv:
 35118                           	opt stack 16
 35119                           
 35120                           ;incstack = 0
 35121  015BFE  5016               	movf	i2___fldiv@b+3,w,c
 35122  015C00  0B80               	andlw	128
 35123  015C02  6E1F               	movwf	i2___fldiv@sign,c
 35124  015C04  5016               	movf	i2___fldiv@b+3,w,c
 35125  015C06  2416               	addwf	i2___fldiv@b+3,w,c
 35126  015C08  6E2A               	movwf	i2___fldiv@bexp,c
 35127  015C0A  BE15               	btfsc	i2___fldiv@b+2,7,c
 35128  015C0C  802A               	bsf	i2___fldiv@bexp,0,c
 35129  015C0E  502A               	movf	i2___fldiv@bexp,w,c
 35130  015C10  B4D8               	btfsc	status,2,c
 35131  015C12  D00D               	goto	i2l2148
 35132  015C14  282A               	incf	i2___fldiv@bexp,w,c
 35133  015C16  A4D8               	btfss	status,2,c
 35134  015C18  D008               	goto	i2l2149
 35135  015C1A  0E00               	movlw	0
 35136  015C1C  6E13               	movwf	i2___fldiv@b,c
 35137  015C1E  0E00               	movlw	0
 35138  015C20  6E14               	movwf	i2___fldiv@b+1,c
 35139  015C22  0E00               	movlw	0
 35140  015C24  6E15               	movwf	i2___fldiv@b+2,c
 35141  015C26  0E00               	movlw	0
 35142  015C28  6E16               	movwf	i2___fldiv@b+3,c
 35143  015C2A                     i2l2149:
 35144  015C2A  8E15               	bsf	i2___fldiv@b+2,7,c
 35145  015C2C  D006               	goto	L19
 35146  015C2E                     i2l2148:
 35147  015C2E  0E00               	movlw	0
 35148  015C30  6E13               	movwf	i2___fldiv@b,c
 35149  015C32  0E00               	movlw	0
 35150  015C34  6E14               	movwf	i2___fldiv@b+1,c
 35151  015C36  0E00               	movlw	0
 35152  015C38  6E15               	movwf	i2___fldiv@b+2,c
 35153  015C3A                     L19:
 35154  015C3A  0E00               	movlw	0
 35155  015C3C  6E16               	movwf	i2___fldiv@b+3,c
 35156  015C3E  501A               	movf	i2___fldiv@a+3,w,c
 35157  015C40  0B80               	andlw	128
 35158  015C42  1A1F               	xorwf	i2___fldiv@sign,f,c
 35159  015C44  501A               	movf	i2___fldiv@a+3,w,c
 35160  015C46  241A               	addwf	i2___fldiv@a+3,w,c
 35161  015C48  6E2B               	movwf	i2___fldiv@aexp,c
 35162  015C4A  BE19               	btfsc	i2___fldiv@a+2,7,c
 35163  015C4C  802B               	bsf	i2___fldiv@aexp,0,c
 35164  015C4E  502B               	movf	i2___fldiv@aexp,w,c
 35165  015C50  B4D8               	btfsc	status,2,c
 35166  015C52  D00D               	goto	i2l2152
 35167  015C54  282B               	incf	i2___fldiv@aexp,w,c
 35168  015C56  A4D8               	btfss	status,2,c
 35169  015C58  D008               	goto	i2l2153
 35170  015C5A  0E00               	movlw	0
 35171  015C5C  6E17               	movwf	i2___fldiv@a,c
 35172  015C5E  0E00               	movlw	0
 35173  015C60  6E18               	movwf	i2___fldiv@a+1,c
 35174  015C62  0E00               	movlw	0
 35175  015C64  6E19               	movwf	i2___fldiv@a+2,c
 35176  015C66  0E00               	movlw	0
 35177  015C68  6E1A               	movwf	i2___fldiv@a+3,c
 35178  015C6A                     i2l2153:
 35179  015C6A  8E19               	bsf	i2___fldiv@a+2,7,c
 35180  015C6C  D006               	goto	L20
 35181  015C6E                     i2l2152:
 35182  015C6E  0E00               	movlw	0
 35183  015C70  6E17               	movwf	i2___fldiv@a,c
 35184  015C72  0E00               	movlw	0
 35185  015C74  6E18               	movwf	i2___fldiv@a+1,c
 35186  015C76  0E00               	movlw	0
 35187  015C78  6E19               	movwf	i2___fldiv@a+2,c
 35188  015C7A                     L20:
 35189  015C7A  0E00               	movlw	0
 35190  015C7C  6E1A               	movwf	i2___fldiv@a+3,c
 35191  015C7E  5017               	movf	i2___fldiv@a,w,c
 35192  015C80  1018               	iorwf	i2___fldiv@a+1,w,c
 35193  015C82  1019               	iorwf	i2___fldiv@a+2,w,c
 35194  015C84  101A               	iorwf	i2___fldiv@a+3,w,c
 35195  015C86  A4D8               	btfss	status,2,c
 35196  015C88  D015               	goto	i2l2155
 35197  015C8A  0E00               	movlw	0
 35198  015C8C  6E13               	movwf	i2___fldiv@b,c
 35199  015C8E  0E00               	movlw	0
 35200  015C90  6E14               	movwf	i2___fldiv@b+1,c
 35201  015C92  0E00               	movlw	0
 35202  015C94  6E15               	movwf	i2___fldiv@b+2,c
 35203  015C96  0E00               	movlw	0
 35204  015C98  6E16               	movwf	i2___fldiv@b+3,c
 35205  015C9A  0E80               	movlw	128
 35206  015C9C  1215               	iorwf	i2___fldiv@b+2,f,c
 35207  015C9E  0E7F               	movlw	127
 35208  015CA0  1216               	iorwf	i2___fldiv@b+3,f,c
 35209  015CA2  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 35210  015CA6  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 35211  015CAA  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 35212  015CAE  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 35213  015CB2  0012               	return	
 35214  015CB4                     i2l2155:
 35215  015CB4  502A               	movf	i2___fldiv@bexp,w,c
 35216  015CB6  A4D8               	btfss	status,2,c
 35217  015CB8  D011               	goto	i2l2157
 35218  015CBA  0E00               	movlw	0
 35219  015CBC  6E13               	movwf	i2___fldiv@b,c
 35220  015CBE  0E00               	movlw	0
 35221  015CC0  6E14               	movwf	i2___fldiv@b+1,c
 35222  015CC2  0E00               	movlw	0
 35223  015CC4  6E15               	movwf	i2___fldiv@b+2,c
 35224  015CC6  0E00               	movlw	0
 35225  015CC8  6E16               	movwf	i2___fldiv@b+3,c
 35226  015CCA  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 35227  015CCE  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 35228  015CD2  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 35229  015CD6  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 35230  015CDA  0012               	return	
 35231  015CDC                     i2l2157:
 35232  015CDC  502B               	movf	i2___fldiv@aexp,w,c
 35233  015CDE  6E1B               	movwf	??i2___fldiv& (0+255),c
 35234  015CE0  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 35235  015CE2  1E1B               	comf	??i2___fldiv,f,c
 35236  015CE4  1E1C               	comf	??i2___fldiv+1,f,c
 35237  015CE6  4A1B               	infsnz	??i2___fldiv,f,c
 35238  015CE8  2A1C               	incf	??i2___fldiv+1,f,c
 35239  015CEA  502A               	movf	i2___fldiv@bexp,w,c
 35240  015CEC  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 35241  015CEE  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 35242  015CF0  501B               	movf	??i2___fldiv,w,c
 35243  015CF2  261D               	addwf	??i2___fldiv+2,f,c
 35244  015CF4  501C               	movf	??i2___fldiv+1,w,c
 35245  015CF6  221E               	addwfc	??i2___fldiv+3,f,c
 35246  015CF8  0E7F               	movlw	127
 35247  015CFA  241D               	addwf	??i2___fldiv+2,w,c
 35248  015CFC  6E24               	movwf	i2___fldiv@new_exp,c
 35249  015CFE  0E00               	movlw	0
 35250  015D00  201E               	addwfc	??i2___fldiv+3,w,c
 35251  015D02  6E25               	movwf	i2___fldiv@new_exp+1,c
 35252  015D04  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 35253  015D08  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 35254  015D0C  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 35255  015D10  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 35256  015D14  0E00               	movlw	0
 35257  015D16  6E13               	movwf	i2___fldiv@b,c
 35258  015D18  0E00               	movlw	0
 35259  015D1A  6E14               	movwf	i2___fldiv@b+1,c
 35260  015D1C  0E00               	movlw	0
 35261  015D1E  6E15               	movwf	i2___fldiv@b+2,c
 35262  015D20  0E00               	movlw	0
 35263  015D22  6E16               	movwf	i2___fldiv@b+3,c
 35264  015D24  0E00               	movlw	0
 35265  015D26  6E26               	movwf	i2___fldiv@grs,c
 35266  015D28  0E00               	movlw	0
 35267  015D2A  6E27               	movwf	i2___fldiv@grs+1,c
 35268  015D2C  0E00               	movlw	0
 35269  015D2E  6E28               	movwf	i2___fldiv@grs+2,c
 35270  015D30  0E00               	movlw	0
 35271  015D32  6E29               	movwf	i2___fldiv@grs+3,c
 35272  015D34  0E00               	movlw	0
 35273  015D36  6E2B               	movwf	i2___fldiv@aexp,c
 35274  015D38  D028               	goto	i2l2158
 35275  015D3A  502B               	movf	i2___fldiv@aexp,w,c
 35276  015D3C  B4D8               	btfsc	status,2,c
 35277  015D3E  D011               	goto	i2l2160
 35278  015D40  90D8               	bcf	status,0,c
 35279  015D42  3620               	rlcf	i2___fldiv@rem,f,c
 35280  015D44  3621               	rlcf	i2___fldiv@rem+1,f,c
 35281  015D46  3622               	rlcf	i2___fldiv@rem+2,f,c
 35282  015D48  3623               	rlcf	i2___fldiv@rem+3,f,c
 35283  015D4A  90D8               	bcf	status,0,c
 35284  015D4C  3613               	rlcf	i2___fldiv@b,f,c
 35285  015D4E  3614               	rlcf	i2___fldiv@b+1,f,c
 35286  015D50  3615               	rlcf	i2___fldiv@b+2,f,c
 35287  015D52  3616               	rlcf	i2___fldiv@b+3,f,c
 35288  015D54  BE29               	btfsc	i2___fldiv@grs+3,7,c
 35289  015D56  8013               	bsf	i2___fldiv@b,0,c
 35290  015D58  90D8               	bcf	status,0,c
 35291  015D5A  3626               	rlcf	i2___fldiv@grs,f,c
 35292  015D5C  3627               	rlcf	i2___fldiv@grs+1,f,c
 35293  015D5E  3628               	rlcf	i2___fldiv@grs+2,f,c
 35294  015D60  3629               	rlcf	i2___fldiv@grs+3,f,c
 35295  015D62                     i2l2160:
 35296  015D62  5017               	movf	i2___fldiv@a,w,c
 35297  015D64  5C20               	subwf	i2___fldiv@rem,w,c
 35298  015D66  5018               	movf	i2___fldiv@a+1,w,c
 35299  015D68  5821               	subwfb	i2___fldiv@rem+1,w,c
 35300  015D6A  5019               	movf	i2___fldiv@a+2,w,c
 35301  015D6C  5822               	subwfb	i2___fldiv@rem+2,w,c
 35302  015D6E  501A               	movf	i2___fldiv@a+3,w,c
 35303  015D70  5823               	subwfb	i2___fldiv@rem+3,w,c
 35304  015D72  A0D8               	btfss	status,0,c
 35305  015D74  D009               	goto	i2l2162
 35306  015D76  8C29               	bsf	i2___fldiv@grs+3,6,c
 35307  015D78  5017               	movf	i2___fldiv@a,w,c
 35308  015D7A  5E20               	subwf	i2___fldiv@rem,f,c
 35309  015D7C  5018               	movf	i2___fldiv@a+1,w,c
 35310  015D7E  5A21               	subwfb	i2___fldiv@rem+1,f,c
 35311  015D80  5019               	movf	i2___fldiv@a+2,w,c
 35312  015D82  5A22               	subwfb	i2___fldiv@rem+2,f,c
 35313  015D84  501A               	movf	i2___fldiv@a+3,w,c
 35314  015D86  5A23               	subwfb	i2___fldiv@rem+3,f,c
 35315  015D88                     i2l2162:
 35316  015D88  2A2B               	incf	i2___fldiv@aexp,f,c
 35317  015D8A                     i2l2158:
 35318  015D8A  0E19               	movlw	25
 35319  015D8C  642B               	cpfsgt	i2___fldiv@aexp,c
 35320  015D8E  D7D5               	goto	i2l2159
 35321  015D90  5020               	movf	i2___fldiv@rem,w,c
 35322  015D92  1021               	iorwf	i2___fldiv@rem+1,w,c
 35323  015D94  1022               	iorwf	i2___fldiv@rem+2,w,c
 35324  015D96  1023               	iorwf	i2___fldiv@rem+3,w,c
 35325  015D98  B4D8               	btfsc	status,2,c
 35326  015D9A  D011               	goto	i2l2165
 35327  015D9C  8026               	bsf	i2___fldiv@grs,0,c
 35328  015D9E  D00F               	goto	i2l2165
 35329  015DA0  90D8               	bcf	status,0,c
 35330  015DA2  3613               	rlcf	i2___fldiv@b,f,c
 35331  015DA4  3614               	rlcf	i2___fldiv@b+1,f,c
 35332  015DA6  3615               	rlcf	i2___fldiv@b+2,f,c
 35333  015DA8  3616               	rlcf	i2___fldiv@b+3,f,c
 35334  015DAA  BE29               	btfsc	i2___fldiv@grs+3,7,c
 35335  015DAC  8013               	bsf	i2___fldiv@b,0,c
 35336  015DAE  90D8               	bcf	status,0,c
 35337  015DB0  3626               	rlcf	i2___fldiv@grs,f,c
 35338  015DB2  3627               	rlcf	i2___fldiv@grs+1,f,c
 35339  015DB4  3628               	rlcf	i2___fldiv@grs+2,f,c
 35340  015DB6  3629               	rlcf	i2___fldiv@grs+3,f,c
 35341  015DB8  0624               	decf	i2___fldiv@new_exp,f,c
 35342  015DBA  A0D8               	btfss	status,0,c
 35343  015DBC  0625               	decf	i2___fldiv@new_exp+1,f,c
 35344  015DBE                     i2l2165:
 35345  015DBE  AE15               	btfss	i2___fldiv@b+2,7,c
 35346  015DC0  D7EF               	goto	i2l2166
 35347  015DC2  0E00               	movlw	0
 35348  015DC4  6E2B               	movwf	i2___fldiv@aexp,c
 35349  015DC6  AE29               	btfss	i2___fldiv@grs+3,7,c
 35350  015DC8  D016               	goto	i2l2172
 35351  015DCA  0EFF               	movlw	255
 35352  015DCC  1426               	andwf	i2___fldiv@grs,w,c
 35353  015DCE  6E1B               	movwf	??i2___fldiv& (0+255),c
 35354  015DD0  0EFF               	movlw	255
 35355  015DD2  1427               	andwf	i2___fldiv@grs+1,w,c
 35356  015DD4  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 35357  015DD6  0EFF               	movlw	255
 35358  015DD8  1428               	andwf	i2___fldiv@grs+2,w,c
 35359  015DDA  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 35360  015DDC  0E7F               	movlw	127
 35361  015DDE  1429               	andwf	i2___fldiv@grs+3,w,c
 35362  015DE0  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 35363  015DE2  501B               	movf	??i2___fldiv,w,c
 35364  015DE4  101C               	iorwf	??i2___fldiv+1,w,c
 35365  015DE6  101D               	iorwf	??i2___fldiv+2,w,c
 35366  015DE8  101E               	iorwf	??i2___fldiv+3,w,c
 35367  015DEA  A4D8               	btfss	status,2,c
 35368  015DEC  D002               	goto	i2u1450_40
 35369  015DEE  A013               	btfss	i2___fldiv@b,0,c
 35370  015DF0  D002               	goto	i2l2172
 35371  015DF2                     i2u1450_40:
 35372  015DF2  0E01               	movlw	1
 35373  015DF4  6E2B               	movwf	i2___fldiv@aexp,c
 35374  015DF6                     i2l2172:
 35375  015DF6  502B               	movf	i2___fldiv@aexp,w,c
 35376  015DF8  B4D8               	btfsc	status,2,c
 35377  015DFA  D01F               	goto	i2l2174
 35378  015DFC  0E01               	movlw	1
 35379  015DFE  2613               	addwf	i2___fldiv@b,f,c
 35380  015E00  0E00               	movlw	0
 35381  015E02  2214               	addwfc	i2___fldiv@b+1,f,c
 35382  015E04  2215               	addwfc	i2___fldiv@b+2,f,c
 35383  015E06  2216               	addwfc	i2___fldiv@b+3,f,c
 35384  015E08  A016               	btfss	i2___fldiv@b+3,0,c
 35385  015E0A  D017               	goto	i2l2174
 35386  015E0C  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 35387  015E10  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 35388  015E14  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 35389  015E18  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 35390  015E1C  341E               	rlcf	??i2___fldiv+3,w,c
 35391  015E1E  321E               	rrcf	??i2___fldiv+3,f,c
 35392  015E20  321D               	rrcf	??i2___fldiv+2,f,c
 35393  015E22  321C               	rrcf	??i2___fldiv+1,f,c
 35394  015E24  321B               	rrcf	??i2___fldiv,f,c
 35395  015E26  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 35396  015E2A  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 35397  015E2E  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 35398  015E32  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 35399  015E36  4A24               	infsnz	i2___fldiv@new_exp,f,c
 35400  015E38  2A25               	incf	i2___fldiv@new_exp+1,f,c
 35401  015E3A                     i2l2174:
 35402  015E3A  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 35403  015E3C  D010               	goto	i2l2175
 35404  015E3E  5025               	movf	i2___fldiv@new_exp+1,w,c
 35405  015E40  E103               	bnz	i2u1453_40
 35406  015E42  2824               	incf	i2___fldiv@new_exp,w,c
 35407  015E44  A0D8               	btfss	status,0,c
 35408  015E46  D00B               	goto	i2l2175
 35409  015E48                     i2u1453_40:
 35410  015E48  0E00               	movlw	0
 35411  015E4A  6E25               	movwf	i2___fldiv@new_exp+1,c
 35412  015E4C  6824               	setf	i2___fldiv@new_exp,c
 35413  015E4E  0E00               	movlw	0
 35414  015E50  6E13               	movwf	i2___fldiv@b,c
 35415  015E52  0E00               	movlw	0
 35416  015E54  6E14               	movwf	i2___fldiv@b+1,c
 35417  015E56  0E00               	movlw	0
 35418  015E58  6E15               	movwf	i2___fldiv@b+2,c
 35419  015E5A  0E00               	movlw	0
 35420  015E5C  6E16               	movwf	i2___fldiv@b+3,c
 35421  015E5E                     i2l2175:
 35422  015E5E  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 35423  015E60  D005               	goto	i2u1454_40
 35424  015E62  5025               	movf	i2___fldiv@new_exp+1,w,c
 35425  015E64  E111               	bnz	i2l11964
 35426  015E66  0424               	decf	i2___fldiv@new_exp,w,c
 35427  015E68  B0D8               	btfsc	status,0,c
 35428  015E6A  D00E               	goto	i2l2176
 35429  015E6C                     i2u1454_40:
 35430  015E6C  0E00               	movlw	0
 35431  015E6E  6E25               	movwf	i2___fldiv@new_exp+1,c
 35432  015E70  0E00               	movlw	0
 35433  015E72  6E24               	movwf	i2___fldiv@new_exp,c
 35434  015E74  0E00               	movlw	0
 35435  015E76  6E13               	movwf	i2___fldiv@b,c
 35436  015E78  0E00               	movlw	0
 35437  015E7A  6E14               	movwf	i2___fldiv@b+1,c
 35438  015E7C  0E00               	movlw	0
 35439  015E7E  6E15               	movwf	i2___fldiv@b+2,c
 35440  015E80  0E00               	movlw	0
 35441  015E82  6E16               	movwf	i2___fldiv@b+3,c
 35442  015E84  0E00               	movlw	0
 35443  015E86  6E1F               	movwf	i2___fldiv@sign,c
 35444  015E88                     i2l2176:
 35445  015E88                     i2l11964:
 35446  015E88  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 35447  015E8C  A02A               	btfss	i2___fldiv@bexp,0,c
 35448  015E8E  D002               	goto	i2l2177
 35449  015E90  8E15               	bsf	i2___fldiv@b+2,7,c
 35450  015E92  D001               	goto	i2l2178
 35451  015E94                     i2l2177:
 35452  015E94  9E15               	bcf	i2___fldiv@b+2,7,c
 35453  015E96                     i2l2178:
 35454  015E96  90D8               	bcf	status,0,c
 35455  015E98  302A               	rrcf	i2___fldiv@bexp,w,c
 35456  015E9A  6E16               	movwf	i2___fldiv@b+3,c
 35457  015E9C  501F               	movf	i2___fldiv@sign,w,c
 35458  015E9E  1216               	iorwf	i2___fldiv@b+3,f,c
 35459  015EA0  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 35460  015EA4  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 35461  015EA8  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 35462  015EAC  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 35463  015EB0  0012               	return	
 35464  015EB2                     __end_ofi2___fldiv:
 35465                           	opt stack 0
 35466                           tosu	equ	0xFFF
 35467                           tosh	equ	0xFFE
 35468                           tosl	equ	0xFFD
 35469                           pclatu	equ	0xFFB
 35470                           pclath	equ	0xFFA
 35471                           tblptru	equ	0xFF8
 35472                           tblptrh	equ	0xFF7
 35473                           tblptrl	equ	0xFF6
 35474                           tablat	equ	0xFF5
 35475                           prodh	equ	0xFF4
 35476                           prodl	equ	0xFF3
 35477                           intcon	equ	0xFF2
 35478                           indf0	equ	0xFEF
 35479                           postinc0	equ	0xFEE
 35480                           fsr0h	equ	0xFEA
 35481                           fsr0l	equ	0xFE9
 35482                           wreg	equ	0xFE8
 35483                           indf1	equ	0xFE7
 35484                           postdec1	equ	0xFE5
 35485                           plusw1	equ	0xFE3
 35486                           fsr1h	equ	0xFE2
 35487                           fsr1l	equ	0xFE1
 35488                           bsr	equ	0xFE0
 35489                           indf2	equ	0xFDF
 35490                           postinc2	equ	0xFDE
 35491                           postdec2	equ	0xFDD
 35492                           plusw2	equ	0xFDB
 35493                           fsr2h	equ	0xFDA
 35494                           fsr2l	equ	0xFD9
 35495                           status	equ	0xFD8
 35496                           
 35497 ;; *************** function _floor *****************
 35498 ;; Defined at:
 35499 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 35500 ;; Parameters:    Size  Location     Type
 35501 ;;  x               4   22[BANK0 ] unsigned char 
 35502 ;; Auto vars:     Size  Location     Type
 35503 ;;  i               4   26[BANK0 ] unsigned char 
 35504 ;;  expon           2   30[BANK0 ] int 
 35505 ;; Return value:  Size  Location     Type
 35506 ;;                  4   22[BANK0 ] int 
 35507 ;; Registers used:
 35508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35509 ;; Tracked objects:
 35510 ;;		On entry : 0/0
 35511 ;;		On exit  : 0/0
 35512 ;;		Unchanged: 0/0
 35513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35517 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35518 ;;Total ram usage:       10 bytes
 35519 ;; Hardware stack levels used:    1
 35520 ;; Hardware stack levels required when called:    1
 35521 ;; This function calls:
 35522 ;;		_frexp
 35523 ;;		i2___fladd
 35524 ;;		i2___flge
 35525 ;;		i2___fltol
 35526 ;;		i2___xxtofl
 35527 ;; This function is called by:
 35528 ;;		_sin
 35529 ;; This function uses a non-reentrant model
 35530 ;;
 35531                           
 35532                           	psect	text117
 35533  01724E                     __ptext117:
 35534                           	opt stack 0
 35535  01724E                     _floor:
 35536                           	opt stack 13
 35537                           
 35538                           ;incstack = 0
 35539  01724E  C076  F001         	movff	floor@x,frexp@value
 35540  017252  C077  F002         	movff	floor@x+1,frexp@value+1
 35541  017256  C078  F003         	movff	floor@x+2,frexp@value+2
 35542  01725A  C079  F004         	movff	floor@x+3,frexp@value+3
 35543  01725E  0E7E               	movlw	low floor@expon
 35544  017260  6E05               	movwf	frexp@eptr,c
 35545  017262  0E00               	movlw	high floor@expon
 35546  017264  6E06               	movwf	frexp@eptr+1,c
 35547  017266  ECA5  F0BE         	call	_frexp	;wreg free
 35548  01726A  0100               	movlb	0	; () banked
 35549  01726C  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 35550  01726E  D014               	goto	i2l2305
 35551                           
 35552                           ; BSR set to: 0
 35553  017270  AF79               	btfss	(floor@x+3)& (0+255),7,b
 35554  017272  D009               	goto	i2l2306
 35555                           
 35556                           ; BSR set to: 0
 35557  017274  0E00               	movlw	0
 35558  017276  6F76               	movwf	?_floor& (0+255),b
 35559  017278  0E00               	movlw	0
 35560  01727A  6F77               	movwf	(?_floor+1)& (0+255),b
 35561  01727C  0E80               	movlw	128
 35562  01727E  6F78               	movwf	(?_floor+2)& (0+255),b
 35563  017280  0EBF               	movlw	191
 35564  017282  6F79               	movwf	(?_floor+3)& (0+255),b
 35565                           
 35566                           ; BSR set to: 0
 35567  017284  0012               	return	
 35568  017286                     i2l2306:
 35569                           
 35570                           ; BSR set to: 0
 35571                           
 35572                           ; BSR set to: 0
 35573  017286  0E00               	movlw	0
 35574  017288  6F76               	movwf	?_floor& (0+255),b
 35575  01728A  0E00               	movlw	0
 35576  01728C  6F77               	movwf	(?_floor+1)& (0+255),b
 35577  01728E  0E00               	movlw	0
 35578  017290  6F78               	movwf	(?_floor+2)& (0+255),b
 35579  017292  0E00               	movlw	0
 35580  017294  6F79               	movwf	(?_floor+3)& (0+255),b
 35581                           
 35582                           ; BSR set to: 0
 35583  017296  0012               	return	
 35584  017298                     i2l2305:
 35585                           
 35586                           ; BSR set to: 0
 35587                           
 35588                           ; BSR set to: 0
 35589  017298  517F               	movf	(floor@expon+1)& (0+255),w,b
 35590  01729A  E104               	bnz	i2u1634_40
 35591  01729C  0E1D               	movlw	29
 35592  01729E  5D7E               	subwf	floor@expon& (0+255),w,b
 35593  0172A0  A0D8               	btfss	status,0,c
 35594  0172A2  D009               	goto	i2l2308
 35595  0172A4                     i2u1634_40:
 35596                           
 35597                           ; BSR set to: 0
 35598  0172A4  C076  F076         	movff	floor@x,?_floor
 35599  0172A8  C077  F077         	movff	floor@x+1,?_floor+1
 35600  0172AC  C078  F078         	movff	floor@x+2,?_floor+2
 35601  0172B0  C079  F079         	movff	floor@x+3,?_floor+3
 35602  0172B4  0012               	return	
 35603  0172B6                     i2l2308:
 35604                           
 35605                           ; BSR set to: 0
 35606                           
 35607                           ; BSR set to: 0
 35608  0172B6  C076  F06C         	movff	floor@x,i2___fltol@f1
 35609  0172BA  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 35610  0172BE  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 35611  0172C2  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 35612  0172C6  EC9F  F0BA         	call	i2___fltol	;wreg free
 35613  0172CA  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 35614  0172CE  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 35615  0172D2  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 35616  0172D6  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 35617  0172DA  0E01               	movlw	1
 35618  0172DC  EC70  F0B4         	call	i2___xxtofl
 35619  0172E0  C005  F07A         	movff	?i2___xxtofl,floor@i
 35620  0172E4  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 35621  0172E8  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 35622  0172EC  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 35623  0172F0  C076  F034         	movff	floor@x,i2___flge@ff1
 35624  0172F4  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 35625  0172F8  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 35626  0172FC  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 35627  017300  C07A  F038         	movff	floor@i,i2___flge@ff2
 35628  017304  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 35629  017308  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 35630  01730C  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 35631  017310  EC97  F0B8         	call	i2___flge	;wreg free
 35632  017314  B0D8               	btfsc	status,0,c
 35633  017316  D01B               	goto	i2l2309
 35634  017318  C07A  F056         	movff	floor@i,i2___fladd@b
 35635  01731C  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 35636  017320  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 35637  017324  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 35638  017328  0E00               	movlw	0
 35639  01732A  6E5A               	movwf	i2___fladd@a,c
 35640  01732C  0E00               	movlw	0
 35641  01732E  6E5B               	movwf	i2___fladd@a+1,c
 35642  017330  0E80               	movlw	128
 35643  017332  6E5C               	movwf	i2___fladd@a+2,c
 35644  017334  0EBF               	movlw	191
 35645  017336  6E5D               	movwf	i2___fladd@a+3,c
 35646  017338  EC3F  F0A5         	call	i2___fladd	;wreg free
 35647  01733C  C056  F076         	movff	?i2___fladd,?_floor
 35648  017340  C057  F077         	movff	?i2___fladd+1,?_floor+1
 35649  017344  C058  F078         	movff	?i2___fladd+2,?_floor+2
 35650  017348  C059  F079         	movff	?i2___fladd+3,?_floor+3
 35651  01734C  0012               	return	
 35652  01734E                     i2l2309:
 35653  01734E  C07A  F076         	movff	floor@i,?_floor
 35654  017352  C07B  F077         	movff	floor@i+1,?_floor+1
 35655  017356  C07C  F078         	movff	floor@i+2,?_floor+2
 35656  01735A  C07D  F079         	movff	floor@i+3,?_floor+3
 35657  01735E  0012               	return		;funcret
 35658  017360                     __end_of_floor:
 35659                           	opt stack 0
 35660                           tosu	equ	0xFFF
 35661                           tosh	equ	0xFFE
 35662                           tosl	equ	0xFFD
 35663                           pclatu	equ	0xFFB
 35664                           pclath	equ	0xFFA
 35665                           tblptru	equ	0xFF8
 35666                           tblptrh	equ	0xFF7
 35667                           tblptrl	equ	0xFF6
 35668                           tablat	equ	0xFF5
 35669                           prodh	equ	0xFF4
 35670                           prodl	equ	0xFF3
 35671                           intcon	equ	0xFF2
 35672                           indf0	equ	0xFEF
 35673                           postinc0	equ	0xFEE
 35674                           fsr0h	equ	0xFEA
 35675                           fsr0l	equ	0xFE9
 35676                           wreg	equ	0xFE8
 35677                           indf1	equ	0xFE7
 35678                           postdec1	equ	0xFE5
 35679                           plusw1	equ	0xFE3
 35680                           fsr1h	equ	0xFE2
 35681                           fsr1l	equ	0xFE1
 35682                           bsr	equ	0xFE0
 35683                           indf2	equ	0xFDF
 35684                           postinc2	equ	0xFDE
 35685                           postdec2	equ	0xFDD
 35686                           plusw2	equ	0xFDB
 35687                           fsr2h	equ	0xFDA
 35688                           fsr2l	equ	0xFD9
 35689                           status	equ	0xFD8
 35690                           
 35691 ;; *************** function i2___xxtofl *****************
 35692 ;; Defined at:
 35693 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 35694 ;; Parameters:    Size  Location     Type
 35695 ;;  sign            1    wreg     unsigned char 
 35696 ;;  val             4    4[COMRAM] long 
 35697 ;; Auto vars:     Size  Location     Type
 35698 ;;  sign            1   12[COMRAM] unsigned char 
 35699 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 35700 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 35701 ;; Return value:  Size  Location     Type
 35702 ;;                  4    4[COMRAM] unsigned char 
 35703 ;; Registers used:
 35704 ;;		wreg, status,2, status,0
 35705 ;; Tracked objects:
 35706 ;;		On entry : 0/0
 35707 ;;		On exit  : 0/0
 35708 ;;		Unchanged: 0/0
 35709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35711 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35712 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35713 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35714 ;;Total ram usage:       14 bytes
 35715 ;; Hardware stack levels used:    1
 35716 ;; This function calls:
 35717 ;;		Nothing
 35718 ;; This function is called by:
 35719 ;;		_ADCPostProcessingCallback
 35720 ;;		_floor
 35721 ;;		i2_printf
 35722 ;; This function uses a non-reentrant model
 35723 ;;
 35724                           
 35725                           	psect	text118
 35726  0168E0                     __ptext118:
 35727                           	opt stack 0
 35728  0168E0                     i2___xxtofl:
 35729                           	opt stack 16
 35730                           
 35731                           ;incstack = 0
 35732                           ;i2___xxtofl@sign stored from wreg
 35733  0168E0  6E0D               	movwf	i2___xxtofl@sign,c
 35734  0168E2  500D               	movf	i2___xxtofl@sign,w,c
 35735  0168E4  A4D8               	btfss	status,2,c
 35736  0168E6  AE08               	btfss	i2___xxtofl@val+3,7,c
 35737  0168E8  D01A               	goto	i2l2284
 35738  0168EA  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 35739  0168EE  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 35740  0168F2  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 35741  0168F6  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 35742  0168FA  1E09               	comf	??i2___xxtofl,f,c
 35743  0168FC  1E0A               	comf	??i2___xxtofl+1,f,c
 35744  0168FE  1E0B               	comf	??i2___xxtofl+2,f,c
 35745  016900  1E0C               	comf	??i2___xxtofl+3,f,c
 35746  016902  2A09               	incf	??i2___xxtofl,f,c
 35747  016904  0E00               	movlw	0
 35748  016906  220A               	addwfc	??i2___xxtofl+1,f,c
 35749  016908  220B               	addwfc	??i2___xxtofl+2,f,c
 35750  01690A  220C               	addwfc	??i2___xxtofl+3,f,c
 35751  01690C  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 35752  016910  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 35753  016914  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 35754  016918  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 35755  01691C  D008               	goto	i2l2285
 35756  01691E                     i2l2284:
 35757  01691E  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 35758  016922  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 35759  016926  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 35760  01692A  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 35761  01692E                     i2l2285:
 35762  01692E  5005               	movf	i2___xxtofl@val,w,c
 35763  016930  1006               	iorwf	i2___xxtofl@val+1,w,c
 35764  016932  1007               	iorwf	i2___xxtofl@val+2,w,c
 35765  016934  1008               	iorwf	i2___xxtofl@val+3,w,c
 35766  016936  A4D8               	btfss	status,2,c
 35767  016938  D009               	goto	i2l2286
 35768  01693A  0E00               	movlw	0
 35769  01693C  6E05               	movwf	?i2___xxtofl,c
 35770  01693E  0E00               	movlw	0
 35771  016940  6E06               	movwf	?i2___xxtofl+1,c
 35772  016942  0E00               	movlw	0
 35773  016944  6E07               	movwf	?i2___xxtofl+2,c
 35774  016946  0E00               	movlw	0
 35775  016948  6E08               	movwf	?i2___xxtofl+3,c
 35776  01694A  0012               	return	
 35777  01694C                     i2l2286:
 35778  01694C  0E96               	movlw	150
 35779  01694E  6E0E               	movwf	i2___xxtofl@exp,c
 35780  016950  D006               	goto	i2l2288
 35781  016952  2A0E               	incf	i2___xxtofl@exp,f,c
 35782  016954  90D8               	bcf	status,0,c
 35783  016956  3212               	rrcf	i2___xxtofl@arg+3,f,c
 35784  016958  3211               	rrcf	i2___xxtofl@arg+2,f,c
 35785  01695A  3210               	rrcf	i2___xxtofl@arg+1,f,c
 35786  01695C  320F               	rrcf	i2___xxtofl@arg,f,c
 35787  01695E                     i2l2288:
 35788  01695E  0E00               	movlw	0
 35789  016960  140F               	andwf	i2___xxtofl@arg,w,c
 35790  016962  6E09               	movwf	??i2___xxtofl& (0+255),c
 35791  016964  0E00               	movlw	0
 35792  016966  1410               	andwf	i2___xxtofl@arg+1,w,c
 35793  016968  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 35794  01696A  0E00               	movlw	0
 35795  01696C  1411               	andwf	i2___xxtofl@arg+2,w,c
 35796  01696E  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 35797  016970  0EFE               	movlw	254
 35798  016972  1412               	andwf	i2___xxtofl@arg+3,w,c
 35799  016974  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 35800  016976  5009               	movf	??i2___xxtofl,w,c
 35801  016978  100A               	iorwf	??i2___xxtofl+1,w,c
 35802  01697A  100B               	iorwf	??i2___xxtofl+2,w,c
 35803  01697C  100C               	iorwf	??i2___xxtofl+3,w,c
 35804  01697E  B4D8               	btfsc	status,2,c
 35805  016980  D00D               	goto	i2l2291
 35806  016982  D7E7               	goto	i2l2289
 35807  016984  2A0E               	incf	i2___xxtofl@exp,f,c
 35808  016986  0E01               	movlw	1
 35809  016988  260F               	addwf	i2___xxtofl@arg,f,c
 35810  01698A  0E00               	movlw	0
 35811  01698C  2210               	addwfc	i2___xxtofl@arg+1,f,c
 35812  01698E  2211               	addwfc	i2___xxtofl@arg+2,f,c
 35813  016990  2212               	addwfc	i2___xxtofl@arg+3,f,c
 35814  016992  90D8               	bcf	status,0,c
 35815  016994  3212               	rrcf	i2___xxtofl@arg+3,f,c
 35816  016996  3211               	rrcf	i2___xxtofl@arg+2,f,c
 35817  016998  3210               	rrcf	i2___xxtofl@arg+1,f,c
 35818  01699A  320F               	rrcf	i2___xxtofl@arg,f,c
 35819  01699C                     i2l2291:
 35820  01699C  0E00               	movlw	0
 35821  01699E  140F               	andwf	i2___xxtofl@arg,w,c
 35822  0169A0  6E09               	movwf	??i2___xxtofl& (0+255),c
 35823  0169A2  0E00               	movlw	0
 35824  0169A4  1410               	andwf	i2___xxtofl@arg+1,w,c
 35825  0169A6  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 35826  0169A8  0E00               	movlw	0
 35827  0169AA  1411               	andwf	i2___xxtofl@arg+2,w,c
 35828  0169AC  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 35829  0169AE  0EFF               	movlw	255
 35830  0169B0  1412               	andwf	i2___xxtofl@arg+3,w,c
 35831  0169B2  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 35832  0169B4  5009               	movf	??i2___xxtofl,w,c
 35833  0169B6  100A               	iorwf	??i2___xxtofl+1,w,c
 35834  0169B8  100B               	iorwf	??i2___xxtofl+2,w,c
 35835  0169BA  100C               	iorwf	??i2___xxtofl+3,w,c
 35836  0169BC  B4D8               	btfsc	status,2,c
 35837  0169BE  D007               	goto	i2l2294
 35838  0169C0  D7E1               	goto	i2l2292
 35839  0169C2  060E               	decf	i2___xxtofl@exp,f,c
 35840  0169C4  90D8               	bcf	status,0,c
 35841  0169C6  360F               	rlcf	i2___xxtofl@arg,f,c
 35842  0169C8  3610               	rlcf	i2___xxtofl@arg+1,f,c
 35843  0169CA  3611               	rlcf	i2___xxtofl@arg+2,f,c
 35844  0169CC  3612               	rlcf	i2___xxtofl@arg+3,f,c
 35845  0169CE                     i2l2294:
 35846  0169CE  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 35847  0169D0  D003               	goto	i2u1542_40
 35848  0169D2  0E02               	movlw	2
 35849  0169D4  600E               	cpfslt	i2___xxtofl@exp,c
 35850  0169D6  D7F5               	goto	i2l2295
 35851  0169D8                     i2u1542_40:
 35852  0169D8  B00E               	btfsc	i2___xxtofl@exp,0,c
 35853  0169DA  D008               	goto	i2l2299
 35854  0169DC  0EFF               	movlw	255
 35855  0169DE  160F               	andwf	i2___xxtofl@arg,f,c
 35856  0169E0  0EFF               	movlw	255
 35857  0169E2  1610               	andwf	i2___xxtofl@arg+1,f,c
 35858  0169E4  0E7F               	movlw	127
 35859  0169E6  1611               	andwf	i2___xxtofl@arg+2,f,c
 35860  0169E8  0EFF               	movlw	255
 35861  0169EA  1612               	andwf	i2___xxtofl@arg+3,f,c
 35862  0169EC                     i2l2299:
 35863  0169EC  90D8               	bcf	status,0,c
 35864  0169EE  320E               	rrcf	i2___xxtofl@exp,f,c
 35865  0169F0  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 35866  0169F4  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 35867  0169F6  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 35868  0169F8  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 35869  0169FA  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 35870  0169FE  6A0B               	clrf	??i2___xxtofl+2,c
 35871  016A00  6A0A               	clrf	??i2___xxtofl+1,c
 35872  016A02  6A09               	clrf	??i2___xxtofl,c
 35873  016A04  5009               	movf	??i2___xxtofl,w,c
 35874  016A06  120F               	iorwf	i2___xxtofl@arg,f,c
 35875  016A08  500A               	movf	??i2___xxtofl+1,w,c
 35876  016A0A  1210               	iorwf	i2___xxtofl@arg+1,f,c
 35877  016A0C  500B               	movf	??i2___xxtofl+2,w,c
 35878  016A0E  1211               	iorwf	i2___xxtofl@arg+2,f,c
 35879  016A10  500C               	movf	??i2___xxtofl+3,w,c
 35880  016A12  1212               	iorwf	i2___xxtofl@arg+3,f,c
 35881  016A14  500D               	movf	i2___xxtofl@sign,w,c
 35882  016A16  A4D8               	btfss	status,2,c
 35883  016A18  AE08               	btfss	i2___xxtofl@val+3,7,c
 35884  016A1A  D001               	goto	i2l2300
 35885  016A1C  8E12               	bsf	i2___xxtofl@arg+3,7,c
 35886  016A1E                     i2l2300:
 35887  016A1E  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 35888  016A22  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 35889  016A26  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 35890  016A2A  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 35891  016A2E  0012               	return	
 35892  016A30                     __end_ofi2___xxtofl:
 35893                           	opt stack 0
 35894                           tosu	equ	0xFFF
 35895                           tosh	equ	0xFFE
 35896                           tosl	equ	0xFFD
 35897                           pclatu	equ	0xFFB
 35898                           pclath	equ	0xFFA
 35899                           tblptru	equ	0xFF8
 35900                           tblptrh	equ	0xFF7
 35901                           tblptrl	equ	0xFF6
 35902                           tablat	equ	0xFF5
 35903                           prodh	equ	0xFF4
 35904                           prodl	equ	0xFF3
 35905                           intcon	equ	0xFF2
 35906                           indf0	equ	0xFEF
 35907                           postinc0	equ	0xFEE
 35908                           fsr0h	equ	0xFEA
 35909                           fsr0l	equ	0xFE9
 35910                           wreg	equ	0xFE8
 35911                           indf1	equ	0xFE7
 35912                           postdec1	equ	0xFE5
 35913                           plusw1	equ	0xFE3
 35914                           fsr1h	equ	0xFE2
 35915                           fsr1l	equ	0xFE1
 35916                           bsr	equ	0xFE0
 35917                           indf2	equ	0xFDF
 35918                           postinc2	equ	0xFDE
 35919                           postdec2	equ	0xFDD
 35920                           plusw2	equ	0xFDB
 35921                           fsr2h	equ	0xFDA
 35922                           fsr2l	equ	0xFD9
 35923                           status	equ	0xFD8
 35924                           
 35925 ;; *************** function i2___fltol *****************
 35926 ;; Defined at:
 35927 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 35928 ;; Parameters:    Size  Location     Type
 35929 ;;  f1              4   12[BANK0 ] unsigned char 
 35930 ;; Auto vars:     Size  Location     Type
 35931 ;;  __fltol         1   21[BANK0 ] unsigned char 
 35932 ;;  __fltol         1   20[BANK0 ] unsigned char 
 35933 ;; Return value:  Size  Location     Type
 35934 ;;                  4   12[BANK0 ] long 
 35935 ;; Registers used:
 35936 ;;		wreg, status,2, status,0
 35937 ;; Tracked objects:
 35938 ;;		On entry : 0/0
 35939 ;;		On exit  : 0/0
 35940 ;;		Unchanged: 0/0
 35941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35944 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35945 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35946 ;;Total ram usage:       10 bytes
 35947 ;; Hardware stack levels used:    1
 35948 ;; This function calls:
 35949 ;;		Nothing
 35950 ;; This function is called by:
 35951 ;;		_ADCPostProcessingCallback
 35952 ;;		_floor
 35953 ;;		i2_printf
 35954 ;; This function uses a non-reentrant model
 35955 ;;
 35956                           
 35957                           	psect	text119
 35958  01753E                     __ptext119:
 35959                           	opt stack 0
 35960  01753E                     i2___fltol:
 35961                           	opt stack 16
 35962                           
 35963                           ;incstack = 0
 35964  01753E  0100               	movlb	0	; () banked
 35965  017540  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 35966  017542  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 35967  017544  6F75               	movwf	i2___fltol@exp1& (0+255),b
 35968  017546  5175               	movf	i2___fltol@exp1& (0+255),w,b
 35969  017548  A4D8               	btfss	status,2,c
 35970  01754A  D009               	goto	i2l1851
 35971                           
 35972                           ; BSR set to: 0
 35973  01754C  0E00               	movlw	0
 35974  01754E  6F6C               	movwf	?i2___fltol& (0+255),b
 35975  017550  0E00               	movlw	0
 35976  017552  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 35977  017554  0E00               	movlw	0
 35978  017556  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 35979  017558  0E00               	movlw	0
 35980  01755A  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 35981                           
 35982                           ; BSR set to: 0
 35983  01755C  0012               	return	
 35984  01755E                     i2l1851:
 35985                           
 35986                           ; BSR set to: 0
 35987                           
 35988                           ; BSR set to: 0
 35989  01755E  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 35990  017562  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 35991  017566  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 35992  01756A  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 35993  01756E  0E20               	movlw	32
 35994  017570  D005               	goto	i2u1530_40
 35995  017572                     i2u1530_45:
 35996  017572  90D8               	bcf	status,0,c
 35997  017574  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 35998  017576  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 35999  017578  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 36000  01757A  3370               	rrcf	??i2___fltol& (0+255),f,b
 36001  01757C                     i2u1530_40:
 36002  01757C  2EE8               	decfsz	wreg,f,c
 36003  01757E  D7F9               	goto	i2u1530_45
 36004  017580  5170               	movf	??i2___fltol& (0+255),w,b
 36005  017582  6F74               	movwf	i2___fltol@sign1& (0+255),b
 36006                           
 36007                           ; BSR set to: 0
 36008  017584  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 36009                           
 36010                           ; BSR set to: 0
 36011  017586  0EFF               	movlw	255
 36012  017588  176C               	andwf	i2___fltol@f1& (0+255),f,b
 36013  01758A  0EFF               	movlw	255
 36014  01758C  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 36015  01758E  0EFF               	movlw	255
 36016  017590  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 36017  017592  0E00               	movlw	0
 36018  017594  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 36019                           
 36020                           ; BSR set to: 0
 36021  017596  0E96               	movlw	150
 36022  017598  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 36023                           
 36024                           ; BSR set to: 0
 36025  01759A  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 36026  01759C  D016               	goto	i2l1853
 36027                           
 36028                           ; BSR set to: 0
 36029  01759E  5175               	movf	i2___fltol@exp1& (0+255),w,b
 36030  0175A0  0A80               	xorlw	128
 36031  0175A2  0F97               	addlw	151
 36032  0175A4  B0D8               	btfsc	status,0,c
 36033  0175A6  D009               	goto	i2l1854
 36034                           
 36035                           ; BSR set to: 0
 36036  0175A8  0E00               	movlw	0
 36037  0175AA  6F6C               	movwf	?i2___fltol& (0+255),b
 36038  0175AC  0E00               	movlw	0
 36039  0175AE  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 36040  0175B0  0E00               	movlw	0
 36041  0175B2  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 36042  0175B4  0E00               	movlw	0
 36043  0175B6  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 36044                           
 36045                           ; BSR set to: 0
 36046  0175B8  0012               	return	
 36047  0175BA                     i2l1854:
 36048                           
 36049                           ; BSR set to: 0
 36050                           
 36051                           ; BSR set to: 0
 36052                           
 36053                           ; BSR set to: 0
 36054  0175BA  90D8               	bcf	status,0,c
 36055  0175BC  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 36056  0175BE  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 36057  0175C0  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 36058  0175C2  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 36059                           
 36060                           ; BSR set to: 0
 36061  0175C4  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 36062  0175C6  D7F9               	goto	i2l1854
 36063                           
 36064                           ; BSR set to: 0
 36065  0175C8  D015               	goto	i2u1534_40
 36066  0175CA                     i2l1853:
 36067                           
 36068                           ; BSR set to: 0
 36069                           
 36070                           ; BSR set to: 0
 36071  0175CA  0E1F               	movlw	31
 36072  0175CC  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 36073  0175CE  D00F               	goto	i2l1859
 36074                           
 36075                           ; BSR set to: 0
 36076  0175D0  0E00               	movlw	0
 36077  0175D2  6F6C               	movwf	?i2___fltol& (0+255),b
 36078  0175D4  0E00               	movlw	0
 36079  0175D6  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 36080  0175D8  0E00               	movlw	0
 36081  0175DA  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 36082  0175DC  0E00               	movlw	0
 36083  0175DE  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 36084                           
 36085                           ; BSR set to: 0
 36086  0175E0  0012               	return	
 36087  0175E2                     
 36088                           ; BSR set to: 0
 36089                           
 36090                           ; BSR set to: 0
 36091  0175E2  90D8               	bcf	status,0,c
 36092  0175E4  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 36093  0175E6  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 36094  0175E8  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 36095  0175EA  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 36096  0175EC  0775               	decf	i2___fltol@exp1& (0+255),f,b
 36097  0175EE                     i2l1859:
 36098                           
 36099                           ; BSR set to: 0
 36100                           
 36101                           ; BSR set to: 0
 36102  0175EE  5175               	movf	i2___fltol@exp1& (0+255),w,b
 36103  0175F0  A4D8               	btfss	status,2,c
 36104  0175F2  D7F7               	goto	i2l1860
 36105  0175F4                     i2u1534_40:
 36106                           
 36107                           ; BSR set to: 0
 36108                           
 36109                           ; BSR set to: 0
 36110                           
 36111                           ; BSR set to: 0
 36112  0175F4  5174               	movf	i2___fltol@sign1& (0+255),w,b
 36113  0175F6  B4D8               	btfsc	status,2,c
 36114  0175F8  D008               	goto	i2l1862
 36115                           
 36116                           ; BSR set to: 0
 36117  0175FA  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 36118  0175FC  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 36119  0175FE  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 36120  017600  6D6C               	negf	i2___fltol@f1& (0+255),b
 36121  017602  0E00               	movlw	0
 36122  017604  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 36123  017606  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 36124  017608  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 36125  01760A                     i2l1862:
 36126                           
 36127                           ; BSR set to: 0
 36128                           
 36129                           ; BSR set to: 0
 36130  01760A  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 36131  01760E  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 36132  017612  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 36133  017616  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 36134  01761A  0012               	return	
 36135  01761C                     __end_ofi2___fltol:
 36136                           	opt stack 0
 36137                           tosu	equ	0xFFF
 36138                           tosh	equ	0xFFE
 36139                           tosl	equ	0xFFD
 36140                           pclatu	equ	0xFFB
 36141                           pclath	equ	0xFFA
 36142                           tblptru	equ	0xFF8
 36143                           tblptrh	equ	0xFF7
 36144                           tblptrl	equ	0xFF6
 36145                           tablat	equ	0xFF5
 36146                           prodh	equ	0xFF4
 36147                           prodl	equ	0xFF3
 36148                           intcon	equ	0xFF2
 36149                           indf0	equ	0xFEF
 36150                           postinc0	equ	0xFEE
 36151                           fsr0h	equ	0xFEA
 36152                           fsr0l	equ	0xFE9
 36153                           wreg	equ	0xFE8
 36154                           indf1	equ	0xFE7
 36155                           postdec1	equ	0xFE5
 36156                           plusw1	equ	0xFE3
 36157                           fsr1h	equ	0xFE2
 36158                           fsr1l	equ	0xFE1
 36159                           bsr	equ	0xFE0
 36160                           indf2	equ	0xFDF
 36161                           postinc2	equ	0xFDE
 36162                           postdec2	equ	0xFDD
 36163                           plusw2	equ	0xFDB
 36164                           fsr2h	equ	0xFDA
 36165                           fsr2l	equ	0xFD9
 36166                           status	equ	0xFD8
 36167                           
 36168 ;; *************** function i2___flge *****************
 36169 ;; Defined at:
 36170 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 36171 ;; Parameters:    Size  Location     Type
 36172 ;;  ff1             4   51[COMRAM] long 
 36173 ;;  ff2             4   55[COMRAM] long 
 36174 ;; Auto vars:     Size  Location     Type
 36175 ;;		None
 36176 ;; Return value:  Size  Location     Type
 36177 ;;		None               void
 36178 ;; Registers used:
 36179 ;;		wreg, status,2, status,0
 36180 ;; Tracked objects:
 36181 ;;		On entry : 0/0
 36182 ;;		On exit  : 0/0
 36183 ;;		Unchanged: 0/0
 36184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36185 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36187 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36188 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36189 ;;Total ram usage:       12 bytes
 36190 ;; Hardware stack levels used:    1
 36191 ;; This function calls:
 36192 ;;		Nothing
 36193 ;; This function is called by:
 36194 ;;		_ADCPostProcessingCallback
 36195 ;;		_asin
 36196 ;;		_atan
 36197 ;;		_sin
 36198 ;;		_floor
 36199 ;;		i2_printf
 36200 ;; This function uses a non-reentrant model
 36201 ;;
 36202                           
 36203                           	psect	text120
 36204  01712E                     __ptext120:
 36205                           	opt stack 0
 36206  01712E                     i2___flge:
 36207                           	opt stack 16
 36208                           
 36209                           ; BSR set to: 0
 36210                           ;incstack = 0
 36211  01712E  0E00               	movlw	0
 36212  017130  1434               	andwf	i2___flge@ff1,w,c
 36213  017132  6E3C               	movwf	??i2___flge& (0+255),c
 36214  017134  0E00               	movlw	0
 36215  017136  1435               	andwf	i2___flge@ff1+1,w,c
 36216  017138  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 36217  01713A  0E80               	movlw	128
 36218  01713C  1436               	andwf	i2___flge@ff1+2,w,c
 36219  01713E  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 36220  017140  0E7F               	movlw	127
 36221  017142  1437               	andwf	i2___flge@ff1+3,w,c
 36222  017144  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 36223  017146  503C               	movf	??i2___flge,w,c
 36224  017148  103D               	iorwf	??i2___flge+1,w,c
 36225  01714A  103E               	iorwf	??i2___flge+2,w,c
 36226  01714C  103F               	iorwf	??i2___flge+3,w,c
 36227  01714E  A4D8               	btfss	status,2,c
 36228  017150  D008               	goto	i2l1821
 36229  017152  0E00               	movlw	0
 36230  017154  6E34               	movwf	i2___flge@ff1,c
 36231  017156  0E00               	movlw	0
 36232  017158  6E35               	movwf	i2___flge@ff1+1,c
 36233  01715A  0E00               	movlw	0
 36234  01715C  6E36               	movwf	i2___flge@ff1+2,c
 36235  01715E  0E00               	movlw	0
 36236  017160  6E37               	movwf	i2___flge@ff1+3,c
 36237  017162                     i2l1821:
 36238  017162  0E00               	movlw	0
 36239  017164  1438               	andwf	i2___flge@ff2,w,c
 36240  017166  6E3C               	movwf	??i2___flge& (0+255),c
 36241  017168  0E00               	movlw	0
 36242  01716A  1439               	andwf	i2___flge@ff2+1,w,c
 36243  01716C  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 36244  01716E  0E80               	movlw	128
 36245  017170  143A               	andwf	i2___flge@ff2+2,w,c
 36246  017172  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 36247  017174  0E7F               	movlw	127
 36248  017176  143B               	andwf	i2___flge@ff2+3,w,c
 36249  017178  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 36250  01717A  503C               	movf	??i2___flge,w,c
 36251  01717C  103D               	iorwf	??i2___flge+1,w,c
 36252  01717E  103E               	iorwf	??i2___flge+2,w,c
 36253  017180  103F               	iorwf	??i2___flge+3,w,c
 36254  017182  A4D8               	btfss	status,2,c
 36255  017184  D008               	goto	i2l1822
 36256  017186  0E00               	movlw	0
 36257  017188  6E38               	movwf	i2___flge@ff2,c
 36258  01718A  0E00               	movlw	0
 36259  01718C  6E39               	movwf	i2___flge@ff2+1,c
 36260  01718E  0E00               	movlw	0
 36261  017190  6E3A               	movwf	i2___flge@ff2+2,c
 36262  017192  0E00               	movlw	0
 36263  017194  6E3B               	movwf	i2___flge@ff2+3,c
 36264  017196                     i2l1822:
 36265  017196  AE37               	btfss	i2___flge@ff1+3,7,c
 36266  017198  D01D               	goto	i2l1823
 36267  01719A  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 36268  01719E  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 36269  0171A2  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 36270  0171A6  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 36271  0171AA  1E3C               	comf	??i2___flge,f,c
 36272  0171AC  1E3D               	comf	??i2___flge+1,f,c
 36273  0171AE  1E3E               	comf	??i2___flge+2,f,c
 36274  0171B0  1E3F               	comf	??i2___flge+3,f,c
 36275  0171B2  2A3C               	incf	??i2___flge,f,c
 36276  0171B4  0E00               	movlw	0
 36277  0171B6  223D               	addwfc	??i2___flge+1,f,c
 36278  0171B8  223E               	addwfc	??i2___flge+2,f,c
 36279  0171BA  223F               	addwfc	??i2___flge+3,f,c
 36280  0171BC  0E00               	movlw	0
 36281  0171BE  243C               	addwf	??i2___flge,w,c
 36282  0171C0  6E34               	movwf	i2___flge@ff1,c
 36283  0171C2  0E00               	movlw	0
 36284  0171C4  203D               	addwfc	??i2___flge+1,w,c
 36285  0171C6  6E35               	movwf	i2___flge@ff1+1,c
 36286  0171C8  0E00               	movlw	0
 36287  0171CA  203E               	addwfc	??i2___flge+2,w,c
 36288  0171CC  6E36               	movwf	i2___flge@ff1+2,c
 36289  0171CE  0E80               	movlw	128
 36290  0171D0  203F               	addwfc	??i2___flge+3,w,c
 36291  0171D2  6E37               	movwf	i2___flge@ff1+3,c
 36292  0171D4                     i2l1823:
 36293  0171D4  AE3B               	btfss	i2___flge@ff2+3,7,c
 36294  0171D6  D01D               	goto	i2l1824
 36295  0171D8  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 36296  0171DC  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 36297  0171E0  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 36298  0171E4  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 36299  0171E8  1E3C               	comf	??i2___flge,f,c
 36300  0171EA  1E3D               	comf	??i2___flge+1,f,c
 36301  0171EC  1E3E               	comf	??i2___flge+2,f,c
 36302  0171EE  1E3F               	comf	??i2___flge+3,f,c
 36303  0171F0  2A3C               	incf	??i2___flge,f,c
 36304  0171F2  0E00               	movlw	0
 36305  0171F4  223D               	addwfc	??i2___flge+1,f,c
 36306  0171F6  223E               	addwfc	??i2___flge+2,f,c
 36307  0171F8  223F               	addwfc	??i2___flge+3,f,c
 36308  0171FA  0E00               	movlw	0
 36309  0171FC  243C               	addwf	??i2___flge,w,c
 36310  0171FE  6E38               	movwf	i2___flge@ff2,c
 36311  017200  0E00               	movlw	0
 36312  017202  203D               	addwfc	??i2___flge+1,w,c
 36313  017204  6E39               	movwf	i2___flge@ff2+1,c
 36314  017206  0E00               	movlw	0
 36315  017208  203E               	addwfc	??i2___flge+2,w,c
 36316  01720A  6E3A               	movwf	i2___flge@ff2+2,c
 36317  01720C  0E80               	movlw	128
 36318  01720E  203F               	addwfc	??i2___flge+3,w,c
 36319  017210  6E3B               	movwf	i2___flge@ff2+3,c
 36320  017212                     i2l1824:
 36321  017212  0E00               	movlw	0
 36322  017214  1A34               	xorwf	i2___flge@ff1,f,c
 36323  017216  0E00               	movlw	0
 36324  017218  1A35               	xorwf	i2___flge@ff1+1,f,c
 36325  01721A  0E00               	movlw	0
 36326  01721C  1A36               	xorwf	i2___flge@ff1+2,f,c
 36327  01721E  0E80               	movlw	128
 36328  017220  1A37               	xorwf	i2___flge@ff1+3,f,c
 36329  017222  0E00               	movlw	0
 36330  017224  1A38               	xorwf	i2___flge@ff2,f,c
 36331  017226  0E00               	movlw	0
 36332  017228  1A39               	xorwf	i2___flge@ff2+1,f,c
 36333  01722A  0E00               	movlw	0
 36334  01722C  1A3A               	xorwf	i2___flge@ff2+2,f,c
 36335  01722E  0E80               	movlw	128
 36336  017230  1A3B               	xorwf	i2___flge@ff2+3,f,c
 36337  017232  5038               	movf	i2___flge@ff2,w,c
 36338  017234  5C34               	subwf	i2___flge@ff1,w,c
 36339  017236  5039               	movf	i2___flge@ff2+1,w,c
 36340  017238  5835               	subwfb	i2___flge@ff1+1,w,c
 36341  01723A  503A               	movf	i2___flge@ff2+2,w,c
 36342  01723C  5836               	subwfb	i2___flge@ff1+2,w,c
 36343  01723E  503B               	movf	i2___flge@ff2+3,w,c
 36344  017240  5837               	subwfb	i2___flge@ff1+3,w,c
 36345  017242  B0D8               	btfsc	status,0,c
 36346  017244  D002               	goto	i2l11036
 36347  017246  90D8               	bcf	status,0,c
 36348  017248  0012               	return	
 36349  01724A                     i2l11036:
 36350  01724A  80D8               	bsf	status,0,c
 36351  01724C  0012               	return	
 36352  01724E                     __end_ofi2___flge:
 36353                           	opt stack 0
 36354                           tosu	equ	0xFFF
 36355                           tosh	equ	0xFFE
 36356                           tosl	equ	0xFFD
 36357                           pclatu	equ	0xFFB
 36358                           pclath	equ	0xFFA
 36359                           tblptru	equ	0xFF8
 36360                           tblptrh	equ	0xFF7
 36361                           tblptrl	equ	0xFF6
 36362                           tablat	equ	0xFF5
 36363                           prodh	equ	0xFF4
 36364                           prodl	equ	0xFF3
 36365                           intcon	equ	0xFF2
 36366                           indf0	equ	0xFEF
 36367                           postinc0	equ	0xFEE
 36368                           fsr0h	equ	0xFEA
 36369                           fsr0l	equ	0xFE9
 36370                           wreg	equ	0xFE8
 36371                           indf1	equ	0xFE7
 36372                           postdec1	equ	0xFE5
 36373                           plusw1	equ	0xFE3
 36374                           fsr1h	equ	0xFE2
 36375                           fsr1l	equ	0xFE1
 36376                           bsr	equ	0xFE0
 36377                           indf2	equ	0xFDF
 36378                           postinc2	equ	0xFDE
 36379                           postdec2	equ	0xFDD
 36380                           plusw2	equ	0xFDB
 36381                           fsr2h	equ	0xFDA
 36382                           fsr2l	equ	0xFD9
 36383                           status	equ	0xFD8
 36384                           
 36385 ;; *************** function _frexp *****************
 36386 ;; Defined at:
 36387 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 36388 ;; Parameters:    Size  Location     Type
 36389 ;;  value           4    0[COMRAM] long 
 36390 ;;  eptr            2    4[COMRAM] PTR int 
 36391 ;;		 -> floor@expon(2), 
 36392 ;; Auto vars:     Size  Location     Type
 36393 ;;		None
 36394 ;; Return value:  Size  Location     Type
 36395 ;;                  4    0[COMRAM] PTR int 
 36396 ;; Registers used:
 36397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36398 ;; Tracked objects:
 36399 ;;		On entry : 0/0
 36400 ;;		On exit  : 0/0
 36401 ;;		Unchanged: 0/0
 36402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36403 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36406 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36407 ;;Total ram usage:        8 bytes
 36408 ;; Hardware stack levels used:    1
 36409 ;; This function calls:
 36410 ;;		Nothing
 36411 ;; This function is called by:
 36412 ;;		_floor
 36413 ;; This function uses a non-reentrant model
 36414 ;;
 36415                           
 36416                           	psect	text121
 36417  017D4A                     __ptext121:
 36418                           	opt stack 0
 36419  017D4A                     _frexp:
 36420                           	opt stack 13
 36421                           
 36422                           ;incstack = 0
 36423  017D4A  5001               	movf	frexp@value,w,c
 36424  017D4C  1002               	iorwf	frexp@value+1,w,c
 36425  017D4E  1003               	iorwf	frexp@value+2,w,c
 36426  017D50  1004               	iorwf	frexp@value+3,w,c
 36427  017D52  A4D8               	btfss	status,2,c
 36428  017D54  D009               	goto	i2l2314
 36429  017D56  C005  FFD9         	movff	frexp@eptr,fsr2l
 36430  017D5A  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 36431  017D5E  0E00               	movlw	0
 36432  017D60  6EDE               	movwf	postinc2,c
 36433  017D62  0E00               	movlw	0
 36434  017D64  6EDD               	movwf	postdec2,c
 36435                           
 36436                           ;	Return value of _frexp is never used
 36437  017D66  0012               	return	
 36438  017D68                     i2l2314:
 36439  017D68  5004               	movf	frexp@value+3,w,c
 36440  017D6A  0B7F               	andlw	127
 36441  017D6C  6E07               	movwf	??_frexp& (0+255),c
 36442  017D6E  6A08               	clrf	(??_frexp+1)& (0+255),c
 36443  017D70  90D8               	bcf	status,0,c
 36444  017D72  3607               	rlcf	??_frexp,f,c
 36445  017D74  3608               	rlcf	??_frexp+1,f,c
 36446  017D76  C005  FFD9         	movff	frexp@eptr,fsr2l
 36447  017D7A  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 36448  017D7E  C007  FFDE         	movff	??_frexp,postinc2
 36449  017D82  C008  FFDD         	movff	??_frexp+1,postdec2
 36450  017D86  AE03               	btfss	frexp@value+2,7,c
 36451  017D88  D003               	goto	i2u1528_40
 36452  017D8A  6A07               	clrf	??_frexp& (0+255),c
 36453  017D8C  2A07               	incf	??_frexp& (0+255),f,c
 36454  017D8E  D001               	goto	i2u1528_48
 36455  017D90                     i2u1528_40:
 36456  017D90  6A07               	clrf	??_frexp& (0+255),c
 36457  017D92                     i2u1528_48:
 36458  017D92  5007               	movf	??_frexp,w,c
 36459  017D94  C005  FFD9         	movff	frexp@eptr,fsr2l
 36460  017D98  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 36461  017D9C  12DE               	iorwf	postinc2,f,c
 36462  017D9E  0E00               	movlw	0
 36463  017DA0  12DD               	iorwf	postdec2,f,c
 36464  017DA2  C005  FFD9         	movff	frexp@eptr,fsr2l
 36465  017DA6  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 36466  017DAA  0E82               	movlw	130
 36467  017DAC  26DE               	addwf	postinc2,f,c
 36468  017DAE  0EFF               	movlw	255
 36469  017DB0  22DD               	addwfc	postdec2,f,c
 36470  017DB2  8004               	bsf	frexp@value+3,0,c
 36471  017DB4  8204               	bsf	frexp@value+3,1,c
 36472  017DB6  8404               	bsf	frexp@value+3,2,c
 36473  017DB8  8604               	bsf	frexp@value+3,3,c
 36474  017DBA  8804               	bsf	frexp@value+3,4,c
 36475  017DBC  8A04               	bsf	frexp@value+3,5,c
 36476  017DBE  9C04               	bcf	frexp@value+3,6,c
 36477  017DC0  9E03               	bcf	frexp@value+2,7,c
 36478  017DC2  0012               	return	
 36479  017DC4                     __end_of_frexp:
 36480                           	opt stack 0
 36481                           tosu	equ	0xFFF
 36482                           tosh	equ	0xFFE
 36483                           tosl	equ	0xFFD
 36484                           pclatu	equ	0xFFB
 36485                           pclath	equ	0xFFA
 36486                           tblptru	equ	0xFF8
 36487                           tblptrh	equ	0xFF7
 36488                           tblptrl	equ	0xFF6
 36489                           tablat	equ	0xFF5
 36490                           prodh	equ	0xFF4
 36491                           prodl	equ	0xFF3
 36492                           intcon	equ	0xFF2
 36493                           indf0	equ	0xFEF
 36494                           postinc0	equ	0xFEE
 36495                           fsr0h	equ	0xFEA
 36496                           fsr0l	equ	0xFE9
 36497                           wreg	equ	0xFE8
 36498                           indf1	equ	0xFE7
 36499                           postdec1	equ	0xFE5
 36500                           plusw1	equ	0xFE3
 36501                           fsr1h	equ	0xFE2
 36502                           fsr1l	equ	0xFE1
 36503                           bsr	equ	0xFE0
 36504                           indf2	equ	0xFDF
 36505                           postinc2	equ	0xFDE
 36506                           postdec2	equ	0xFDD
 36507                           plusw2	equ	0xFDB
 36508                           fsr2h	equ	0xFDA
 36509                           fsr2l	equ	0xFD9
 36510                           status	equ	0xFD8
 36511                           
 36512 ;; *************** function _eval_poly *****************
 36513 ;; Defined at:
 36514 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 36515 ;; Parameters:    Size  Location     Type
 36516 ;;  x               4   12[BANK0 ] PTR int 
 36517 ;;  d               2   16[BANK0 ] PTR const 
 36518 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 36519 ;;  n               2   18[BANK0 ] int 
 36520 ;; Auto vars:     Size  Location     Type
 36521 ;;  res             4   24[BANK0 ] int 
 36522 ;; Return value:  Size  Location     Type
 36523 ;;                  4   12[BANK0 ] int 
 36524 ;; Registers used:
 36525 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36526 ;; Tracked objects:
 36527 ;;		On entry : 0/0
 36528 ;;		On exit  : 0/0
 36529 ;;		Unchanged: 0/0
 36530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36531 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36532 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36533 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36534 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36535 ;;Total ram usage:       16 bytes
 36536 ;; Hardware stack levels used:    1
 36537 ;; Hardware stack levels required when called:    1
 36538 ;; This function calls:
 36539 ;;		i2___fladd
 36540 ;;		i2___flmul
 36541 ;; This function is called by:
 36542 ;;		_atan
 36543 ;;		_sin
 36544 ;; This function uses a non-reentrant model
 36545 ;;
 36546                           
 36547                           	psect	text122
 36548  017360                     __ptext122:
 36549                           	opt stack 0
 36550  017360                     _eval_poly:
 36551                           	opt stack 13
 36552                           
 36553                           ;incstack = 0
 36554  017360  C072  F074         	movff	eval_poly@n,??_eval_poly
 36555  017364  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 36556  017368  0100               	movlb	0	; () banked
 36557  01736A  90D8               	bcf	status,0,c
 36558  01736C  3774               	rlcf	??_eval_poly& (0+255),f,b
 36559  01736E  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 36560  017370  90D8               	bcf	status,0,c
 36561  017372  3774               	rlcf	??_eval_poly& (0+255),f,b
 36562  017374  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 36563  017376  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 36564  01737A  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 36565  01737E  5174               	movf	??_eval_poly& (0+255),w,b
 36566  017380  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 36567  017382  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 36568  017384  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 36569  017386  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 36570  01738A  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 36571  01738E                     	if	0	;tblptru may be non-zero
 36572  01738E                     	endif
 36573  01738E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36574  01738E  0E00               	movlw	low (__mediumconst shr (0+16))
 36575  017390  6EF8               	movwf	tblptru,c
 36576  017392                     	endif
 36577  017392  0009               	tblrd		*+
 36578  017394  CFF5 F078          	movff	tablat,eval_poly@res
 36579  017398  0009               	tblrd		*+
 36580  01739A  CFF5 F079          	movff	tablat,eval_poly@res+1
 36581  01739E  0009               	tblrd		*+
 36582  0173A0  CFF5 F07A          	movff	tablat,eval_poly@res+2
 36583  0173A4  000A               	tblrd		*-
 36584  0173A6  CFF5 F07B          	movff	tablat,eval_poly@res+3
 36585  0173AA  D04C               	goto	i2l1794
 36586  0173AC                     
 36587                           ; BSR set to: 0
 36588                           
 36589                           ; BSR set to: 0
 36590  0173AC  C078  F034         	movff	eval_poly@res,i2___flmul@a
 36591  0173B0  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 36592  0173B4  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 36593  0173B8  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 36594  0173BC  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 36595  0173C0  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 36596  0173C4  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 36597  0173C8  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 36598  0173CC  ECF8  F0A1         	call	i2___flmul	;wreg free
 36599  0173D0  C030  F056         	movff	?i2___flmul,i2___fladd@b
 36600  0173D4  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 36601  0173D8  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 36602  0173DC  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 36603  0173E0  0100               	movlb	0	; () banked
 36604  0173E2  0772               	decf	eval_poly@n& (0+255),f,b
 36605  0173E4  A0D8               	btfss	status,0,c
 36606  0173E6  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 36607  0173E8  C072  F074         	movff	eval_poly@n,??_eval_poly
 36608  0173EC  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 36609  0173F0  90D8               	bcf	status,0,c
 36610  0173F2  3774               	rlcf	??_eval_poly& (0+255),f,b
 36611  0173F4  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 36612  0173F6  90D8               	bcf	status,0,c
 36613  0173F8  3774               	rlcf	??_eval_poly& (0+255),f,b
 36614  0173FA  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 36615  0173FC  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 36616  017400  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 36617  017404  5174               	movf	??_eval_poly& (0+255),w,b
 36618  017406  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 36619  017408  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 36620  01740A  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 36621  01740C  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 36622  017410  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 36623  017414                     	if	0	;tblptru may be non-zero
 36624  017414                     	endif
 36625  017414                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36626  017414  0E00               	movlw	low (__mediumconst shr (0+16))
 36627  017416  6EF8               	movwf	tblptru,c
 36628  017418                     	endif
 36629  017418  0009               	tblrd		*+
 36630  01741A  CFF5 F05A          	movff	tablat,i2___fladd@a
 36631  01741E  0009               	tblrd		*+
 36632  017420  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 36633  017424  0009               	tblrd		*+
 36634  017426  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 36635  01742A  000A               	tblrd		*-
 36636  01742C  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 36637  017430  EC3F  F0A5         	call	i2___fladd	;wreg free
 36638  017434  C056  F078         	movff	?i2___fladd,eval_poly@res
 36639  017438  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 36640  01743C  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 36641  017440  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 36642  017444                     i2l1794:
 36643  017444  0100               	movlb	0	; () banked
 36644  017446  5172               	movf	eval_poly@n& (0+255),w,b
 36645  017448  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 36646  01744A  A4D8               	btfss	status,2,c
 36647  01744C  D7AF               	goto	i2l1795
 36648                           
 36649                           ; BSR set to: 0
 36650  01744E  C078  F06C         	movff	eval_poly@res,?_eval_poly
 36651  017452  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 36652  017456  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 36653  01745A  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 36654                           
 36655                           ; BSR set to: 0
 36656  01745E  0012               	return		;funcret
 36657  017460                     __end_of_eval_poly:
 36658                           	opt stack 0
 36659                           tosu	equ	0xFFF
 36660                           tosh	equ	0xFFE
 36661                           tosl	equ	0xFFD
 36662                           pclatu	equ	0xFFB
 36663                           pclath	equ	0xFFA
 36664                           tblptru	equ	0xFF8
 36665                           tblptrh	equ	0xFF7
 36666                           tblptrl	equ	0xFF6
 36667                           tablat	equ	0xFF5
 36668                           prodh	equ	0xFF4
 36669                           prodl	equ	0xFF3
 36670                           intcon	equ	0xFF2
 36671                           indf0	equ	0xFEF
 36672                           postinc0	equ	0xFEE
 36673                           fsr0h	equ	0xFEA
 36674                           fsr0l	equ	0xFE9
 36675                           wreg	equ	0xFE8
 36676                           indf1	equ	0xFE7
 36677                           postdec1	equ	0xFE5
 36678                           plusw1	equ	0xFE3
 36679                           fsr1h	equ	0xFE2
 36680                           fsr1l	equ	0xFE1
 36681                           bsr	equ	0xFE0
 36682                           indf2	equ	0xFDF
 36683                           postinc2	equ	0xFDE
 36684                           postdec2	equ	0xFDD
 36685                           plusw2	equ	0xFDB
 36686                           fsr2h	equ	0xFDA
 36687                           fsr2l	equ	0xFD9
 36688                           status	equ	0xFD8
 36689                           
 36690 ;; *************** function i2___flmul *****************
 36691 ;; Defined at:
 36692 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 36693 ;; Parameters:    Size  Location     Type
 36694 ;;  b               4   47[COMRAM] int 
 36695 ;;  a               4   51[COMRAM] int 
 36696 ;; Auto vars:     Size  Location     Type
 36697 ;;  __flmul         4   66[COMRAM] struct .
 36698 ;;  __flmul         4   61[COMRAM] unsigned long 
 36699 ;;  __flmul         2   70[COMRAM] struct .
 36700 ;;  __flmul         1   65[COMRAM] unsigned char 
 36701 ;;  __flmul         1   60[COMRAM] unsigned char 
 36702 ;;  __flmul         1   59[COMRAM] unsigned char 
 36703 ;; Return value:  Size  Location     Type
 36704 ;;                  4   47[COMRAM] unsigned char 
 36705 ;; Registers used:
 36706 ;;		wreg, status,2, status,0, prodl, prodh
 36707 ;; Tracked objects:
 36708 ;;		On entry : 0/0
 36709 ;;		On exit  : 0/0
 36710 ;;		Unchanged: 0/0
 36711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36712 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36713 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36714 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36715 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36716 ;;Total ram usage:       25 bytes
 36717 ;; Hardware stack levels used:    1
 36718 ;; This function calls:
 36719 ;;		Nothing
 36720 ;; This function is called by:
 36721 ;;		_peakToRMS
 36722 ;;		_ADCPostProcessingCallback
 36723 ;;		_asin
 36724 ;;		_atan
 36725 ;;		_eval_poly
 36726 ;;		_sin
 36727 ;;		i2_fround
 36728 ;;		i2_scale
 36729 ;;		i2_printf
 36730 ;; This function uses a non-reentrant model
 36731 ;;
 36732                           
 36733                           	psect	text123
 36734  0143F0                     __ptext123:
 36735                           	opt stack 0
 36736  0143F0                     i2___flmul:
 36737                           	opt stack 15
 36738                           
 36739                           ; BSR set to: 0
 36740                           ;incstack = 0
 36741  0143F0  5033               	movf	i2___flmul@b+3,w,c
 36742  0143F2  0B80               	andlw	128
 36743  0143F4  6E3C               	movwf	i2___flmul@sign,c
 36744  0143F6  5033               	movf	i2___flmul@b+3,w,c
 36745  0143F8  2433               	addwf	i2___flmul@b+3,w,c
 36746  0143FA  6E42               	movwf	i2___flmul@bexp,c
 36747  0143FC  BE32               	btfsc	i2___flmul@b+2,7,c
 36748  0143FE  8042               	bsf	i2___flmul@bexp,0,c
 36749  014400  5042               	movf	i2___flmul@bexp,w,c
 36750  014402  B4D8               	btfsc	status,2,c
 36751  014404  D00D               	goto	i2l2182
 36752  014406  2842               	incf	i2___flmul@bexp,w,c
 36753  014408  A4D8               	btfss	status,2,c
 36754  01440A  D008               	goto	i2l2183
 36755  01440C  0E00               	movlw	0
 36756  01440E  6E30               	movwf	i2___flmul@b,c
 36757  014410  0E00               	movlw	0
 36758  014412  6E31               	movwf	i2___flmul@b+1,c
 36759  014414  0E00               	movlw	0
 36760  014416  6E32               	movwf	i2___flmul@b+2,c
 36761  014418  0E00               	movlw	0
 36762  01441A  6E33               	movwf	i2___flmul@b+3,c
 36763  01441C                     i2l2183:
 36764  01441C  8E32               	bsf	i2___flmul@b+2,7,c
 36765  01441E  D008               	goto	i2l2184
 36766  014420                     i2l2182:
 36767  014420  0E00               	movlw	0
 36768  014422  6E30               	movwf	i2___flmul@b,c
 36769  014424  0E00               	movlw	0
 36770  014426  6E31               	movwf	i2___flmul@b+1,c
 36771  014428  0E00               	movlw	0
 36772  01442A  6E32               	movwf	i2___flmul@b+2,c
 36773  01442C  0E00               	movlw	0
 36774  01442E  6E33               	movwf	i2___flmul@b+3,c
 36775  014430                     i2l2184:
 36776  014430  5037               	movf	i2___flmul@a+3,w,c
 36777  014432  0B80               	andlw	128
 36778  014434  1A3C               	xorwf	i2___flmul@sign,f,c
 36779  014436  5037               	movf	i2___flmul@a+3,w,c
 36780  014438  2437               	addwf	i2___flmul@a+3,w,c
 36781  01443A  6E3D               	movwf	i2___flmul@aexp,c
 36782  01443C  BE36               	btfsc	i2___flmul@a+2,7,c
 36783  01443E  803D               	bsf	i2___flmul@aexp,0,c
 36784  014440  503D               	movf	i2___flmul@aexp,w,c
 36785  014442  B4D8               	btfsc	status,2,c
 36786  014444  D00D               	goto	i2l2186
 36787  014446  283D               	incf	i2___flmul@aexp,w,c
 36788  014448  A4D8               	btfss	status,2,c
 36789  01444A  D008               	goto	i2l2187
 36790  01444C  0E00               	movlw	0
 36791  01444E  6E34               	movwf	i2___flmul@a,c
 36792  014450  0E00               	movlw	0
 36793  014452  6E35               	movwf	i2___flmul@a+1,c
 36794  014454  0E00               	movlw	0
 36795  014456  6E36               	movwf	i2___flmul@a+2,c
 36796  014458  0E00               	movlw	0
 36797  01445A  6E37               	movwf	i2___flmul@a+3,c
 36798  01445C                     i2l2187:
 36799  01445C  8E36               	bsf	i2___flmul@a+2,7,c
 36800  01445E  D008               	goto	i2l2188
 36801  014460                     i2l2186:
 36802  014460  0E00               	movlw	0
 36803  014462  6E34               	movwf	i2___flmul@a,c
 36804  014464  0E00               	movlw	0
 36805  014466  6E35               	movwf	i2___flmul@a+1,c
 36806  014468  0E00               	movlw	0
 36807  01446A  6E36               	movwf	i2___flmul@a+2,c
 36808  01446C  0E00               	movlw	0
 36809  01446E  6E37               	movwf	i2___flmul@a+3,c
 36810  014470                     i2l2188:
 36811  014470  503D               	movf	i2___flmul@aexp,w,c
 36812  014472  B4D8               	btfsc	status,2,c
 36813  014474  D003               	goto	i2u1341_40
 36814  014476  5042               	movf	i2___flmul@bexp,w,c
 36815  014478  A4D8               	btfss	status,2,c
 36816  01447A  D009               	goto	i2l2189
 36817  01447C                     i2u1341_40:
 36818  01447C  0E00               	movlw	0
 36819  01447E  6E30               	movwf	?i2___flmul,c
 36820  014480  0E00               	movlw	0
 36821  014482  6E31               	movwf	?i2___flmul+1,c
 36822  014484  0E00               	movlw	0
 36823  014486  6E32               	movwf	?i2___flmul+2,c
 36824  014488  0E00               	movlw	0
 36825  01448A  6E33               	movwf	?i2___flmul+3,c
 36826  01448C  0012               	return	
 36827  01448E                     i2l2189:
 36828  01448E  5036               	movf	i2___flmul@a+2,w,c
 36829  014490  0230               	mulwf	i2___flmul@b,c
 36830  014492  CFF3 F047          	movff	prodl,i2___flmul@temp
 36831  014496  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36832  01449A  5047               	movf	i2___flmul@temp,w,c
 36833  01449C  6E3E               	movwf	i2___flmul@grs,c
 36834  01449E  6A3F               	clrf	i2___flmul@grs+1,c
 36835  0144A0  6A40               	clrf	i2___flmul@grs+2,c
 36836  0144A2  6A41               	clrf	i2___flmul@grs+3,c
 36837  0144A4  5048               	movf	i2___flmul@temp+1,w,c
 36838  0144A6  6E43               	movwf	i2___flmul@prod,c
 36839  0144A8  6A44               	clrf	i2___flmul@prod+1,c
 36840  0144AA  6A45               	clrf	i2___flmul@prod+2,c
 36841  0144AC  6A46               	clrf	i2___flmul@prod+3,c
 36842  0144AE  5035               	movf	i2___flmul@a+1,w,c
 36843  0144B0  0231               	mulwf	i2___flmul@b+1,c
 36844  0144B2  CFF3 F047          	movff	prodl,i2___flmul@temp
 36845  0144B6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36846  0144BA  5047               	movf	i2___flmul@temp,w,c
 36847  0144BC  263E               	addwf	i2___flmul@grs,f,c
 36848  0144BE  0E00               	movlw	0
 36849  0144C0  223F               	addwfc	i2___flmul@grs+1,f,c
 36850  0144C2  2240               	addwfc	i2___flmul@grs+2,f,c
 36851  0144C4  2241               	addwfc	i2___flmul@grs+3,f,c
 36852  0144C6  5048               	movf	i2___flmul@temp+1,w,c
 36853  0144C8  2643               	addwf	i2___flmul@prod,f,c
 36854  0144CA  0E00               	movlw	0
 36855  0144CC  2244               	addwfc	i2___flmul@prod+1,f,c
 36856  0144CE  2245               	addwfc	i2___flmul@prod+2,f,c
 36857  0144D0  2246               	addwfc	i2___flmul@prod+3,f,c
 36858  0144D2  5034               	movf	i2___flmul@a,w,c
 36859  0144D4  0232               	mulwf	i2___flmul@b+2,c
 36860  0144D6  CFF3 F047          	movff	prodl,i2___flmul@temp
 36861  0144DA  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36862  0144DE  5047               	movf	i2___flmul@temp,w,c
 36863  0144E0  263E               	addwf	i2___flmul@grs,f,c
 36864  0144E2  0E00               	movlw	0
 36865  0144E4  223F               	addwfc	i2___flmul@grs+1,f,c
 36866  0144E6  2240               	addwfc	i2___flmul@grs+2,f,c
 36867  0144E8  2241               	addwfc	i2___flmul@grs+3,f,c
 36868  0144EA  5048               	movf	i2___flmul@temp+1,w,c
 36869  0144EC  2643               	addwf	i2___flmul@prod,f,c
 36870  0144EE  0E00               	movlw	0
 36871  0144F0  2244               	addwfc	i2___flmul@prod+1,f,c
 36872  0144F2  2245               	addwfc	i2___flmul@prod+2,f,c
 36873  0144F4  2246               	addwfc	i2___flmul@prod+3,f,c
 36874  0144F6  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 36875  0144FA  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 36876  0144FE  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 36877  014502  6A3E               	clrf	i2___flmul@grs,c
 36878  014504  5034               	movf	i2___flmul@a,w,c
 36879  014506  0231               	mulwf	i2___flmul@b+1,c
 36880  014508  CFF3 F047          	movff	prodl,i2___flmul@temp
 36881  01450C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36882  014510  5047               	movf	i2___flmul@temp,w,c
 36883  014512  263E               	addwf	i2___flmul@grs,f,c
 36884  014514  5048               	movf	i2___flmul@temp+1,w,c
 36885  014516  223F               	addwfc	i2___flmul@grs+1,f,c
 36886  014518  0E00               	movlw	0
 36887  01451A  2240               	addwfc	i2___flmul@grs+2,f,c
 36888  01451C  0E00               	movlw	0
 36889  01451E  2241               	addwfc	i2___flmul@grs+3,f,c
 36890  014520  5035               	movf	i2___flmul@a+1,w,c
 36891  014522  0230               	mulwf	i2___flmul@b,c
 36892  014524  CFF3 F047          	movff	prodl,i2___flmul@temp
 36893  014528  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36894  01452C  5047               	movf	i2___flmul@temp,w,c
 36895  01452E  263E               	addwf	i2___flmul@grs,f,c
 36896  014530  5048               	movf	i2___flmul@temp+1,w,c
 36897  014532  223F               	addwfc	i2___flmul@grs+1,f,c
 36898  014534  0E00               	movlw	0
 36899  014536  2240               	addwfc	i2___flmul@grs+2,f,c
 36900  014538  0E00               	movlw	0
 36901  01453A  2241               	addwfc	i2___flmul@grs+3,f,c
 36902  01453C  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 36903  014540  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 36904  014544  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 36905  014548  6A3E               	clrf	i2___flmul@grs,c
 36906  01454A  5034               	movf	i2___flmul@a,w,c
 36907  01454C  0230               	mulwf	i2___flmul@b,c
 36908  01454E  CFF3 F047          	movff	prodl,i2___flmul@temp
 36909  014552  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36910  014556  5047               	movf	i2___flmul@temp,w,c
 36911  014558  263E               	addwf	i2___flmul@grs,f,c
 36912  01455A  5048               	movf	i2___flmul@temp+1,w,c
 36913  01455C  223F               	addwfc	i2___flmul@grs+1,f,c
 36914  01455E  0E00               	movlw	0
 36915  014560  2240               	addwfc	i2___flmul@grs+2,f,c
 36916  014562  0E00               	movlw	0
 36917  014564  2241               	addwfc	i2___flmul@grs+3,f,c
 36918  014566  5036               	movf	i2___flmul@a+2,w,c
 36919  014568  0231               	mulwf	i2___flmul@b+1,c
 36920  01456A  CFF3 F047          	movff	prodl,i2___flmul@temp
 36921  01456E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36922  014572  5047               	movf	i2___flmul@temp,w,c
 36923  014574  2643               	addwf	i2___flmul@prod,f,c
 36924  014576  5048               	movf	i2___flmul@temp+1,w,c
 36925  014578  2244               	addwfc	i2___flmul@prod+1,f,c
 36926  01457A  0E00               	movlw	0
 36927  01457C  2245               	addwfc	i2___flmul@prod+2,f,c
 36928  01457E  0E00               	movlw	0
 36929  014580  2246               	addwfc	i2___flmul@prod+3,f,c
 36930  014582  5035               	movf	i2___flmul@a+1,w,c
 36931  014584  0232               	mulwf	i2___flmul@b+2,c
 36932  014586  CFF3 F047          	movff	prodl,i2___flmul@temp
 36933  01458A  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36934  01458E  5047               	movf	i2___flmul@temp,w,c
 36935  014590  2643               	addwf	i2___flmul@prod,f,c
 36936  014592  5048               	movf	i2___flmul@temp+1,w,c
 36937  014594  2244               	addwfc	i2___flmul@prod+1,f,c
 36938  014596  0E00               	movlw	0
 36939  014598  2245               	addwfc	i2___flmul@prod+2,f,c
 36940  01459A  0E00               	movlw	0
 36941  01459C  2246               	addwfc	i2___flmul@prod+3,f,c
 36942  01459E  5036               	movf	i2___flmul@a+2,w,c
 36943  0145A0  0232               	mulwf	i2___flmul@b+2,c
 36944  0145A2  CFF3 F047          	movff	prodl,i2___flmul@temp
 36945  0145A6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 36946  0145AA  5047               	movf	i2___flmul@temp,w,c
 36947  0145AC  6E38               	movwf	??i2___flmul& (0+255),c
 36948  0145AE  5048               	movf	i2___flmul@temp+1,w,c
 36949  0145B0  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 36950  0145B2  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 36951  0145B4  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 36952  0145B6  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 36953  0145BA  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 36954  0145BE  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 36955  0145C2  6A38               	clrf	??i2___flmul,c
 36956  0145C4  5038               	movf	??i2___flmul,w,c
 36957  0145C6  2643               	addwf	i2___flmul@prod,f,c
 36958  0145C8  5039               	movf	??i2___flmul+1,w,c
 36959  0145CA  2244               	addwfc	i2___flmul@prod+1,f,c
 36960  0145CC  503A               	movf	??i2___flmul+2,w,c
 36961  0145CE  2245               	addwfc	i2___flmul@prod+2,f,c
 36962  0145D0  503B               	movf	??i2___flmul+3,w,c
 36963  0145D2  2246               	addwfc	i2___flmul@prod+3,f,c
 36964  0145D4  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 36965  0145D8  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 36966  0145DC  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 36967  0145E0  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 36968  0145E4  0E19               	movlw	25
 36969  0145E6  D005               	goto	i2u1342_40
 36970  0145E8                     i2u1342_45:
 36971  0145E8  90D8               	bcf	status,0,c
 36972  0145EA  323B               	rrcf	??i2___flmul+3,f,c
 36973  0145EC  323A               	rrcf	??i2___flmul+2,f,c
 36974  0145EE  3239               	rrcf	??i2___flmul+1,f,c
 36975  0145F0  3238               	rrcf	??i2___flmul,f,c
 36976  0145F2                     i2u1342_40:
 36977  0145F2  2EE8               	decfsz	wreg,f,c
 36978  0145F4  D7F9               	goto	i2u1342_45
 36979  0145F6  5038               	movf	??i2___flmul,w,c
 36980  0145F8  2643               	addwf	i2___flmul@prod,f,c
 36981  0145FA  5039               	movf	??i2___flmul+1,w,c
 36982  0145FC  2244               	addwfc	i2___flmul@prod+1,f,c
 36983  0145FE  503A               	movf	??i2___flmul+2,w,c
 36984  014600  2245               	addwfc	i2___flmul@prod+2,f,c
 36985  014602  503B               	movf	??i2___flmul+3,w,c
 36986  014604  2246               	addwfc	i2___flmul@prod+3,f,c
 36987  014606  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 36988  01460A  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 36989  01460E  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 36990  014612  6A3E               	clrf	i2___flmul@grs,c
 36991  014614  503D               	movf	i2___flmul@aexp,w,c
 36992  014616  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 36993  01461A  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 36994  01461C  2638               	addwf	??i2___flmul,f,c
 36995  01461E  0E00               	movlw	0
 36996  014620  2239               	addwfc	??i2___flmul+1,f,c
 36997  014622  0E82               	movlw	130
 36998  014624  2438               	addwf	??i2___flmul,w,c
 36999  014626  6E47               	movwf	i2___flmul@temp,c
 37000  014628  0EFF               	movlw	255
 37001  01462A  2039               	addwfc	??i2___flmul+1,w,c
 37002  01462C  6E48               	movwf	i2___flmul@temp+1,c
 37003  01462E  D00F               	goto	i2l2193
 37004  014630  90D8               	bcf	status,0,c
 37005  014632  3643               	rlcf	i2___flmul@prod,f,c
 37006  014634  3644               	rlcf	i2___flmul@prod+1,f,c
 37007  014636  3645               	rlcf	i2___flmul@prod+2,f,c
 37008  014638  3646               	rlcf	i2___flmul@prod+3,f,c
 37009  01463A  BE41               	btfsc	i2___flmul@grs+3,7,c
 37010  01463C  8043               	bsf	i2___flmul@prod,0,c
 37011  01463E  90D8               	bcf	status,0,c
 37012  014640  363E               	rlcf	i2___flmul@grs,f,c
 37013  014642  363F               	rlcf	i2___flmul@grs+1,f,c
 37014  014644  3640               	rlcf	i2___flmul@grs+2,f,c
 37015  014646  3641               	rlcf	i2___flmul@grs+3,f,c
 37016  014648  0647               	decf	i2___flmul@temp,f,c
 37017  01464A  A0D8               	btfss	status,0,c
 37018  01464C  0648               	decf	i2___flmul@temp+1,f,c
 37019  01464E                     i2l2193:
 37020  01464E  AE45               	btfss	i2___flmul@prod+2,7,c
 37021  014650  D7EF               	goto	i2l2194
 37022  014652  0E00               	movlw	0
 37023  014654  6E3D               	movwf	i2___flmul@aexp,c
 37024  014656  AE41               	btfss	i2___flmul@grs+3,7,c
 37025  014658  D016               	goto	i2l2200
 37026  01465A  0EFF               	movlw	255
 37027  01465C  143E               	andwf	i2___flmul@grs,w,c
 37028  01465E  6E38               	movwf	??i2___flmul& (0+255),c
 37029  014660  0EFF               	movlw	255
 37030  014662  143F               	andwf	i2___flmul@grs+1,w,c
 37031  014664  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 37032  014666  0EFF               	movlw	255
 37033  014668  1440               	andwf	i2___flmul@grs+2,w,c
 37034  01466A  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 37035  01466C  0E7F               	movlw	127
 37036  01466E  1441               	andwf	i2___flmul@grs+3,w,c
 37037  014670  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 37038  014672  5038               	movf	??i2___flmul,w,c
 37039  014674  1039               	iorwf	??i2___flmul+1,w,c
 37040  014676  103A               	iorwf	??i2___flmul+2,w,c
 37041  014678  103B               	iorwf	??i2___flmul+3,w,c
 37042  01467A  A4D8               	btfss	status,2,c
 37043  01467C  D002               	goto	i2u1347_40
 37044  01467E  A043               	btfss	i2___flmul@prod,0,c
 37045  014680  D002               	goto	i2l2200
 37046  014682                     i2u1347_40:
 37047  014682  0E01               	movlw	1
 37048  014684  6E3D               	movwf	i2___flmul@aexp,c
 37049  014686                     i2l2200:
 37050  014686  503D               	movf	i2___flmul@aexp,w,c
 37051  014688  B4D8               	btfsc	status,2,c
 37052  01468A  D01F               	goto	i2l2202
 37053  01468C  0E01               	movlw	1
 37054  01468E  2643               	addwf	i2___flmul@prod,f,c
 37055  014690  0E00               	movlw	0
 37056  014692  2244               	addwfc	i2___flmul@prod+1,f,c
 37057  014694  2245               	addwfc	i2___flmul@prod+2,f,c
 37058  014696  2246               	addwfc	i2___flmul@prod+3,f,c
 37059  014698  A046               	btfss	i2___flmul@prod+3,0,c
 37060  01469A  D017               	goto	i2l2202
 37061  01469C  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 37062  0146A0  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 37063  0146A4  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 37064  0146A8  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 37065  0146AC  343B               	rlcf	??i2___flmul+3,w,c
 37066  0146AE  323B               	rrcf	??i2___flmul+3,f,c
 37067  0146B0  323A               	rrcf	??i2___flmul+2,f,c
 37068  0146B2  3239               	rrcf	??i2___flmul+1,f,c
 37069  0146B4  3238               	rrcf	??i2___flmul,f,c
 37070  0146B6  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 37071  0146BA  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 37072  0146BE  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 37073  0146C2  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 37074  0146C6  4A47               	infsnz	i2___flmul@temp,f,c
 37075  0146C8  2A48               	incf	i2___flmul@temp+1,f,c
 37076  0146CA                     i2l2202:
 37077  0146CA  BE48               	btfsc	i2___flmul@temp+1,7,c
 37078  0146CC  D00D               	goto	i2l2203
 37079  0146CE  5048               	movf	i2___flmul@temp+1,w,c
 37080  0146D0  E103               	bnz	i2u1350_40
 37081  0146D2  2847               	incf	i2___flmul@temp,w,c
 37082  0146D4  A0D8               	btfss	status,0,c
 37083  0146D6  D008               	goto	i2l2203
 37084  0146D8                     i2u1350_40:
 37085  0146D8  0E00               	movlw	0
 37086  0146DA  6E43               	movwf	i2___flmul@prod,c
 37087  0146DC  0E00               	movlw	0
 37088  0146DE  6E44               	movwf	i2___flmul@prod+1,c
 37089  0146E0  0E80               	movlw	128
 37090  0146E2  6E45               	movwf	i2___flmul@prod+2,c
 37091  0146E4  0E7F               	movlw	127
 37092  0146E6  D020               	goto	L21
 37093  0146E8                     i2l2203:
 37094  0146E8  BE48               	btfsc	i2___flmul@temp+1,7,c
 37095  0146EA  D005               	goto	i2u1351_40
 37096  0146EC  5048               	movf	i2___flmul@temp+1,w,c
 37097  0146EE  E10E               	bnz	i2l2205
 37098  0146F0  0447               	decf	i2___flmul@temp,w,c
 37099  0146F2  B0D8               	btfsc	status,0,c
 37100  0146F4  D00B               	goto	i2l2205
 37101  0146F6                     i2u1351_40:
 37102  0146F6  0E00               	movlw	0
 37103  0146F8  6E43               	movwf	i2___flmul@prod,c
 37104  0146FA  0E00               	movlw	0
 37105  0146FC  6E44               	movwf	i2___flmul@prod+1,c
 37106  0146FE  0E00               	movlw	0
 37107  014700  6E45               	movwf	i2___flmul@prod+2,c
 37108  014702  0E00               	movlw	0
 37109  014704  6E46               	movwf	i2___flmul@prod+3,c
 37110  014706  0E00               	movlw	0
 37111  014708  6E3C               	movwf	i2___flmul@sign,c
 37112  01470A  D00F               	goto	i2l2206
 37113  01470C                     i2l2205:
 37114  01470C  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 37115  014710  0EFF               	movlw	255
 37116  014712  1643               	andwf	i2___flmul@prod,f,c
 37117  014714  0EFF               	movlw	255
 37118  014716  1644               	andwf	i2___flmul@prod+1,f,c
 37119  014718  0E7F               	movlw	127
 37120  01471A  1645               	andwf	i2___flmul@prod+2,f,c
 37121  01471C  0E00               	movlw	0
 37122  01471E  1646               	andwf	i2___flmul@prod+3,f,c
 37123  014720  B042               	btfsc	i2___flmul@bexp,0,c
 37124  014722  8E45               	bsf	i2___flmul@prod+2,7,c
 37125  014724  90D8               	bcf	status,0,c
 37126  014726  3042               	rrcf	i2___flmul@bexp,w,c
 37127  014728                     L21:
 37128  014728  6E46               	movwf	i2___flmul@prod+3,c
 37129  01472A                     i2l2206:
 37130  01472A  503C               	movf	i2___flmul@sign,w,c
 37131  01472C  1246               	iorwf	i2___flmul@prod+3,f,c
 37132  01472E  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 37133  014732  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 37134  014736  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 37135  01473A  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 37136  01473E  0012               	return	
 37137  014740                     __end_ofi2___flmul:
 37138                           	opt stack 0
 37139                           tosu	equ	0xFFF
 37140                           tosh	equ	0xFFE
 37141                           tosl	equ	0xFFD
 37142                           pclatu	equ	0xFFB
 37143                           pclath	equ	0xFFA
 37144                           tblptru	equ	0xFF8
 37145                           tblptrh	equ	0xFF7
 37146                           tblptrl	equ	0xFF6
 37147                           tablat	equ	0xFF5
 37148                           prodh	equ	0xFF4
 37149                           prodl	equ	0xFF3
 37150                           intcon	equ	0xFF2
 37151                           indf0	equ	0xFEF
 37152                           postinc0	equ	0xFEE
 37153                           fsr0h	equ	0xFEA
 37154                           fsr0l	equ	0xFE9
 37155                           wreg	equ	0xFE8
 37156                           indf1	equ	0xFE7
 37157                           postdec1	equ	0xFE5
 37158                           plusw1	equ	0xFE3
 37159                           fsr1h	equ	0xFE2
 37160                           fsr1l	equ	0xFE1
 37161                           bsr	equ	0xFE0
 37162                           indf2	equ	0xFDF
 37163                           postinc2	equ	0xFDE
 37164                           postdec2	equ	0xFDD
 37165                           plusw2	equ	0xFDB
 37166                           fsr2h	equ	0xFDA
 37167                           fsr2l	equ	0xFD9
 37168                           status	equ	0xFD8
 37169                           
 37170 ;; *************** function i2___fladd *****************
 37171 ;; Defined at:
 37172 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 37173 ;; Parameters:    Size  Location     Type
 37174 ;;  b               4   85[COMRAM] unsigned char 
 37175 ;;  a               4   89[COMRAM] unsigned char 
 37176 ;; Auto vars:     Size  Location     Type
 37177 ;;  __fladd         1   11[BANK0 ] unsigned char 
 37178 ;;  __fladd         1   10[BANK0 ] unsigned char 
 37179 ;;  __fladd         1    9[BANK0 ] unsigned char 
 37180 ;;  __fladd         1    8[BANK0 ] unsigned char 
 37181 ;; Return value:  Size  Location     Type
 37182 ;;                  4   85[COMRAM] unsigned char 
 37183 ;; Registers used:
 37184 ;;		wreg, status,2, status,0
 37185 ;; Tracked objects:
 37186 ;;		On entry : 0/0
 37187 ;;		On exit  : 0/0
 37188 ;;		Unchanged: 0/0
 37189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37190 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37191 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37192 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37193 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37194 ;;Total ram usage:       20 bytes
 37195 ;; Hardware stack levels used:    1
 37196 ;; This function calls:
 37197 ;;		Nothing
 37198 ;; This function is called by:
 37199 ;;		_peakToRMS
 37200 ;;		_ADCPostProcessingCallback
 37201 ;;		_acos
 37202 ;;		_asin
 37203 ;;		_atan
 37204 ;;		_eval_poly
 37205 ;;		_sin
 37206 ;;		_floor
 37207 ;;		i2_printf
 37208 ;;		i2___flsub
 37209 ;; This function uses a non-reentrant model
 37210 ;;
 37211                           
 37212                           	psect	text124
 37213  014A7E                     __ptext124:
 37214                           	opt stack 0
 37215  014A7E                     i2___fladd:
 37216                           	opt stack 15
 37217                           
 37218                           ;incstack = 0
 37219  014A7E  5059               	movf	i2___fladd@b+3,w,c
 37220  014A80  0B80               	andlw	128
 37221  014A82  0100               	movlb	0	; () banked
 37222  014A84  6F68               	movwf	i2___fladd@signs& (0+255),b
 37223  014A86  5059               	movf	i2___fladd@b+3,w,c
 37224  014A88  2459               	addwf	i2___fladd@b+3,w,c
 37225  014A8A  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 37226                           
 37227                           ; BSR set to: 0
 37228  014A8C  BE58               	btfsc	i2___fladd@b+2,7,c
 37229                           
 37230                           ; BSR set to: 0
 37231  014A8E  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 37232                           
 37233                           ; BSR set to: 0
 37234                           
 37235                           ; BSR set to: 0
 37236  014A90  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37237  014A92  B4D8               	btfsc	status,2,c
 37238  014A94  D00D               	goto	i2l2091
 37239                           
 37240                           ; BSR set to: 0
 37241  014A96  296A               	incf	i2___fladd@bexp& (0+255),w,b
 37242  014A98  A4D8               	btfss	status,2,c
 37243  014A9A  D008               	goto	i2l2092
 37244                           
 37245                           ; BSR set to: 0
 37246  014A9C  0E00               	movlw	0
 37247  014A9E  6E56               	movwf	i2___fladd@b,c
 37248  014AA0  0E00               	movlw	0
 37249  014AA2  6E57               	movwf	i2___fladd@b+1,c
 37250  014AA4  0E00               	movlw	0
 37251  014AA6  6E58               	movwf	i2___fladd@b+2,c
 37252  014AA8  0E00               	movlw	0
 37253  014AAA  6E59               	movwf	i2___fladd@b+3,c
 37254  014AAC                     i2l2092:
 37255                           
 37256                           ; BSR set to: 0
 37257                           
 37258                           ; BSR set to: 0
 37259  014AAC  8E58               	bsf	i2___fladd@b+2,7,c
 37260  014AAE  D006               	goto	L22
 37261  014AB0                     i2l2091:
 37262                           
 37263                           ; BSR set to: 0
 37264                           
 37265                           ; BSR set to: 0
 37266  014AB0  0E00               	movlw	0
 37267  014AB2  6E56               	movwf	i2___fladd@b,c
 37268  014AB4  0E00               	movlw	0
 37269  014AB6  6E57               	movwf	i2___fladd@b+1,c
 37270  014AB8  0E00               	movlw	0
 37271  014ABA  6E58               	movwf	i2___fladd@b+2,c
 37272  014ABC                     L22:
 37273  014ABC  0E00               	movlw	0
 37274  014ABE  6E59               	movwf	i2___fladd@b+3,c
 37275                           
 37276                           ; BSR set to: 0
 37277                           
 37278                           ; BSR set to: 0
 37279  014AC0  505D               	movf	i2___fladd@a+3,w,c
 37280  014AC2  0B80               	andlw	128
 37281  014AC4  6F69               	movwf	i2___fladd@aexp& (0+255),b
 37282                           
 37283                           ; BSR set to: 0
 37284  014AC6  5168               	movf	i2___fladd@signs& (0+255),w,b
 37285  014AC8  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 37286  014ACA  A4D8               	btfss	status,2,c
 37287                           
 37288                           ; BSR set to: 0
 37289  014ACC  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 37290                           
 37291                           ; BSR set to: 0
 37292                           
 37293                           ; BSR set to: 0
 37294  014ACE  505D               	movf	i2___fladd@a+3,w,c
 37295  014AD0  245D               	addwf	i2___fladd@a+3,w,c
 37296  014AD2  6F69               	movwf	i2___fladd@aexp& (0+255),b
 37297                           
 37298                           ; BSR set to: 0
 37299  014AD4  BE5C               	btfsc	i2___fladd@a+2,7,c
 37300                           
 37301                           ; BSR set to: 0
 37302  014AD6  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 37303                           
 37304                           ; BSR set to: 0
 37305                           
 37306                           ; BSR set to: 0
 37307  014AD8  5169               	movf	i2___fladd@aexp& (0+255),w,b
 37308  014ADA  B4D8               	btfsc	status,2,c
 37309  014ADC  D00D               	goto	i2l2096
 37310                           
 37311                           ; BSR set to: 0
 37312  014ADE  2969               	incf	i2___fladd@aexp& (0+255),w,b
 37313  014AE0  A4D8               	btfss	status,2,c
 37314  014AE2  D008               	goto	i2l2097
 37315                           
 37316                           ; BSR set to: 0
 37317  014AE4  0E00               	movlw	0
 37318  014AE6  6E5A               	movwf	i2___fladd@a,c
 37319  014AE8  0E00               	movlw	0
 37320  014AEA  6E5B               	movwf	i2___fladd@a+1,c
 37321  014AEC  0E00               	movlw	0
 37322  014AEE  6E5C               	movwf	i2___fladd@a+2,c
 37323  014AF0  0E00               	movlw	0
 37324  014AF2  6E5D               	movwf	i2___fladd@a+3,c
 37325  014AF4                     i2l2097:
 37326                           
 37327                           ; BSR set to: 0
 37328                           
 37329                           ; BSR set to: 0
 37330  014AF4  8E5C               	bsf	i2___fladd@a+2,7,c
 37331  014AF6  D006               	goto	L23
 37332  014AF8                     i2l2096:
 37333                           
 37334                           ; BSR set to: 0
 37335                           
 37336                           ; BSR set to: 0
 37337  014AF8  0E00               	movlw	0
 37338  014AFA  6E5A               	movwf	i2___fladd@a,c
 37339  014AFC  0E00               	movlw	0
 37340  014AFE  6E5B               	movwf	i2___fladd@a+1,c
 37341  014B00  0E00               	movlw	0
 37342  014B02  6E5C               	movwf	i2___fladd@a+2,c
 37343  014B04                     L23:
 37344  014B04  0E00               	movlw	0
 37345  014B06  6E5D               	movwf	i2___fladd@a+3,c
 37346                           
 37347                           ; BSR set to: 0
 37348                           
 37349                           ; BSR set to: 0
 37350  014B08  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37351  014B0A  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 37352  014B0C  B0D8               	btfsc	status,0,c
 37353  014B0E  D022               	goto	i2l2099
 37354                           
 37355                           ; BSR set to: 0
 37356  014B10  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 37357  014B12  D002               	goto	i2l2100
 37358                           
 37359                           ; BSR set to: 0
 37360  014B14  0E80               	movlw	128
 37361  014B16  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 37362  014B18                     i2l2100:
 37363                           
 37364                           ; BSR set to: 0
 37365                           
 37366                           ; BSR set to: 0
 37367  014B18  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 37368                           
 37369                           ; BSR set to: 0
 37370  014B1C  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 37371                           
 37372                           ; BSR set to: 0
 37373  014B20  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 37374                           
 37375                           ; BSR set to: 0
 37376  014B24  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 37377                           
 37378                           ; BSR set to: 0
 37379  014B28  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 37380                           
 37381                           ; BSR set to: 0
 37382  014B2C  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 37383                           
 37384                           ; BSR set to: 0
 37385  014B30  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 37386                           
 37387                           ; BSR set to: 0
 37388  014B34  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 37389                           
 37390                           ; BSR set to: 0
 37391  014B38  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 37392                           
 37393                           ; BSR set to: 0
 37394  014B3C  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 37395                           
 37396                           ; BSR set to: 0
 37397  014B40  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 37398                           
 37399                           ; BSR set to: 0
 37400  014B44  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 37401                           
 37402                           ; BSR set to: 0
 37403  014B48  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 37404                           
 37405                           ; BSR set to: 0
 37406  014B4C  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 37407                           
 37408                           ; BSR set to: 0
 37409  014B50  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 37410  014B54                     i2l2099:
 37411                           
 37412                           ; BSR set to: 0
 37413                           
 37414                           ; BSR set to: 0
 37415  014B54  0E00               	movlw	0
 37416  014B56  6F6B               	movwf	i2___fladd@grs& (0+255),b
 37417                           
 37418                           ; BSR set to: 0
 37419  014B58  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37420  014B5A  6F60               	movwf	??i2___fladd& (0+255),b
 37421  014B5C  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 37422  014B5E  1F60               	comf	??i2___fladd& (0+255),f,b
 37423  014B60  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 37424  014B62  4B60               	infsnz	??i2___fladd& (0+255),f,b
 37425  014B64  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 37426  014B66  5169               	movf	i2___fladd@aexp& (0+255),w,b
 37427  014B68  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 37428  014B6A  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 37429  014B6C  5160               	movf	??i2___fladd& (0+255),w,b
 37430  014B6E  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 37431  014B70  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 37432  014B72  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 37433  014B74  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 37434  014B76  D02C               	goto	i2l2103
 37435  014B78  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 37436  014B7A  E104               	bnz	i2u1304_40
 37437  014B7C  0E1A               	movlw	26
 37438  014B7E  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 37439  014B80  A0D8               	btfss	status,0,c
 37440  014B82  D026               	goto	i2l2103
 37441  014B84                     i2u1304_40:
 37442                           
 37443                           ; BSR set to: 0
 37444  014B84  5056               	movf	i2___fladd@b,w,c
 37445  014B86  1057               	iorwf	i2___fladd@b+1,w,c
 37446  014B88  1058               	iorwf	i2___fladd@b+2,w,c
 37447  014B8A  1059               	iorwf	i2___fladd@b+3,w,c
 37448  014B8C  B4D8               	btfsc	status,2,c
 37449  014B8E  D002               	goto	i2u1305_40
 37450  014B90  0E01               	movlw	1
 37451  014B92  D001               	goto	i2u1306_40
 37452  014B94                     i2u1305_40:
 37453  014B94  0E00               	movlw	0
 37454  014B96                     i2u1306_40:
 37455  014B96  6F6B               	movwf	i2___fladd@grs& (0+255),b
 37456                           
 37457                           ; BSR set to: 0
 37458  014B98  0E00               	movlw	0
 37459  014B9A  6E56               	movwf	i2___fladd@b,c
 37460  014B9C  0E00               	movlw	0
 37461  014B9E  6E57               	movwf	i2___fladd@b+1,c
 37462  014BA0  0E00               	movlw	0
 37463  014BA2  6E58               	movwf	i2___fladd@b+2,c
 37464  014BA4  0E00               	movlw	0
 37465  014BA6  6E59               	movwf	i2___fladd@b+3,c
 37466                           
 37467                           ; BSR set to: 0
 37468  014BA8  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 37469  014BAC  D015               	goto	i2u1309_40
 37470  014BAE                     i2l2104:
 37471                           
 37472                           ; BSR set to: 0
 37473  014BAE  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 37474  014BB0  D005               	goto	i2l2105
 37475                           
 37476                           ; BSR set to: 0
 37477  014BB2  90D8               	bcf	status,0,c
 37478  014BB4  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 37479  014BB6  0901               	iorlw	1
 37480  014BB8  6F6B               	movwf	i2___fladd@grs& (0+255),b
 37481  014BBA  D002               	goto	i2l2106
 37482  014BBC                     i2l2105:
 37483                           
 37484                           ; BSR set to: 0
 37485                           
 37486                           ; BSR set to: 0
 37487  014BBC  90D8               	bcf	status,0,c
 37488  014BBE  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 37489  014BC0                     i2l2106:
 37490                           
 37491                           ; BSR set to: 0
 37492                           
 37493                           ; BSR set to: 0
 37494  014BC0  B056               	btfsc	i2___fladd@b,0,c
 37495                           
 37496                           ; BSR set to: 0
 37497  014BC2  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 37498                           
 37499                           ; BSR set to: 0
 37500                           
 37501                           ; BSR set to: 0
 37502  014BC4  3459               	rlcf	i2___fladd@b+3,w,c
 37503  014BC6  3259               	rrcf	i2___fladd@b+3,f,c
 37504  014BC8  3258               	rrcf	i2___fladd@b+2,f,c
 37505  014BCA  3257               	rrcf	i2___fladd@b+1,f,c
 37506  014BCC  3256               	rrcf	i2___fladd@b,f,c
 37507                           
 37508                           ; BSR set to: 0
 37509  014BCE  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 37510  014BD0                     i2l2103:
 37511                           
 37512                           ; BSR set to: 0
 37513  014BD0  5169               	movf	i2___fladd@aexp& (0+255),w,b
 37514  014BD2  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 37515  014BD4  A0D8               	btfss	status,0,c
 37516  014BD6  D7EB               	goto	i2l2104
 37517  014BD8                     i2u1309_40:
 37518                           
 37519                           ; BSR set to: 0
 37520                           
 37521                           ; BSR set to: 0
 37522  014BD8  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 37523  014BDA  D029               	goto	i2l2109
 37524                           
 37525                           ; BSR set to: 0
 37526  014BDC  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37527  014BDE  A4D8               	btfss	status,2,c
 37528  014BE0  D009               	goto	i2l2110
 37529                           
 37530                           ; BSR set to: 0
 37531  014BE2  0E00               	movlw	0
 37532  014BE4  6E56               	movwf	?i2___fladd,c
 37533  014BE6  0E00               	movlw	0
 37534  014BE8  6E57               	movwf	?i2___fladd+1,c
 37535  014BEA  0E00               	movlw	0
 37536  014BEC  6E58               	movwf	?i2___fladd+2,c
 37537  014BEE  0E00               	movlw	0
 37538  014BF0  6E59               	movwf	?i2___fladd+3,c
 37539                           
 37540                           ; BSR set to: 0
 37541  014BF2  0012               	return	
 37542  014BF4                     i2l2110:
 37543                           
 37544                           ; BSR set to: 0
 37545                           
 37546                           ; BSR set to: 0
 37547  014BF4  505A               	movf	i2___fladd@a,w,c
 37548  014BF6  2656               	addwf	i2___fladd@b,f,c
 37549  014BF8  505B               	movf	i2___fladd@a+1,w,c
 37550  014BFA  2257               	addwfc	i2___fladd@b+1,f,c
 37551  014BFC  505C               	movf	i2___fladd@a+2,w,c
 37552  014BFE  2258               	addwfc	i2___fladd@b+2,f,c
 37553  014C00  505D               	movf	i2___fladd@a+3,w,c
 37554  014C02  2259               	addwfc	i2___fladd@b+3,f,c
 37555                           
 37556                           ; BSR set to: 0
 37557  014C04  A059               	btfss	i2___fladd@b+3,0,c
 37558  014C06  D083               	goto	i2u1322_40
 37559                           
 37560                           ; BSR set to: 0
 37561  014C08  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 37562  014C0A  D006               	goto	i2l2113
 37563                           
 37564                           ; BSR set to: 0
 37565  014C0C  90D8               	bcf	status,0,c
 37566  014C0E  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 37567  014C10  516B               	movf	i2___fladd@grs& (0+255),w,b
 37568  014C12  0901               	iorlw	1
 37569  014C14  6F6B               	movwf	i2___fladd@grs& (0+255),b
 37570  014C16  D002               	goto	i2l2114
 37571  014C18                     i2l2113:
 37572                           
 37573                           ; BSR set to: 0
 37574                           
 37575                           ; BSR set to: 0
 37576  014C18  90D8               	bcf	status,0,c
 37577  014C1A  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 37578  014C1C                     i2l2114:
 37579                           
 37580                           ; BSR set to: 0
 37581                           
 37582                           ; BSR set to: 0
 37583  014C1C  B056               	btfsc	i2___fladd@b,0,c
 37584                           
 37585                           ; BSR set to: 0
 37586  014C1E  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 37587                           
 37588                           ; BSR set to: 0
 37589                           
 37590                           ; BSR set to: 0
 37591  014C20  3459               	rlcf	i2___fladd@b+3,w,c
 37592  014C22  3259               	rrcf	i2___fladd@b+3,f,c
 37593  014C24  3258               	rrcf	i2___fladd@b+2,f,c
 37594  014C26  3257               	rrcf	i2___fladd@b+1,f,c
 37595  014C28  3256               	rrcf	i2___fladd@b,f,c
 37596                           
 37597                           ; BSR set to: 0
 37598  014C2A  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 37599                           
 37600                           ; BSR set to: 0
 37601  014C2C  D070               	goto	i2u1322_40
 37602  014C2E                     i2l2109:
 37603                           
 37604                           ; BSR set to: 0
 37605                           
 37606                           ; BSR set to: 0
 37607  014C2E  505A               	movf	i2___fladd@a,w,c
 37608  014C30  5C56               	subwf	i2___fladd@b,w,c
 37609  014C32  505B               	movf	i2___fladd@a+1,w,c
 37610  014C34  5857               	subwfb	i2___fladd@b+1,w,c
 37611  014C36  505C               	movf	i2___fladd@a+2,w,c
 37612  014C38  5858               	subwfb	i2___fladd@b+2,w,c
 37613  014C3A  5059               	movf	i2___fladd@b+3,w,c
 37614  014C3C  0A80               	xorlw	128
 37615  014C3E  6F60               	movwf	??i2___fladd& (0+255),b
 37616  014C40  505D               	movf	i2___fladd@a+3,w,c
 37617  014C42  0A80               	xorlw	128
 37618  014C44  5960               	subwfb	??i2___fladd& (0+255),w,b
 37619  014C46  B0D8               	btfsc	status,0,c
 37620  014C48  D036               	goto	i2l2117
 37621                           
 37622                           ; BSR set to: 0
 37623  014C4A  C056  F060         	movff	i2___fladd@b,??i2___fladd
 37624  014C4E  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 37625  014C52  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 37626  014C56  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 37627  014C5A  1F60               	comf	??i2___fladd& (0+255),f,b
 37628  014C5C  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 37629  014C5E  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 37630  014C60  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 37631  014C62  2B60               	incf	??i2___fladd& (0+255),f,b
 37632  014C64  0E00               	movlw	0
 37633  014C66  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 37634  014C68  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 37635  014C6A  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 37636  014C6C  505A               	movf	i2___fladd@a,w,c
 37637  014C6E  2560               	addwf	??i2___fladd& (0+255),w,b
 37638  014C70  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 37639  014C72  505B               	movf	i2___fladd@a+1,w,c
 37640  014C74  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 37641  014C76  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 37642  014C78  505C               	movf	i2___fladd@a+2,w,c
 37643  014C7A  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 37644  014C7C  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 37645  014C7E  505D               	movf	i2___fladd@a+3,w,c
 37646  014C80  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 37647  014C82  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 37648  014C84  0EFF               	movlw	255
 37649  014C86  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 37650  014C88  6E56               	movwf	i2___fladd@b,c
 37651  014C8A  0EFF               	movlw	255
 37652  014C8C  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 37653  014C8E  6E57               	movwf	i2___fladd@b+1,c
 37654  014C90  0EFF               	movlw	255
 37655  014C92  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 37656  014C94  6E58               	movwf	i2___fladd@b+2,c
 37657  014C96  0EFF               	movlw	255
 37658  014C98  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 37659  014C9A  6E59               	movwf	i2___fladd@b+3,c
 37660  014C9C  0E80               	movlw	128
 37661  014C9E  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 37662                           
 37663                           ; BSR set to: 0
 37664  014CA0  6D6B               	negf	i2___fladd@grs& (0+255),b
 37665                           
 37666                           ; BSR set to: 0
 37667  014CA2  516B               	movf	i2___fladd@grs& (0+255),w,b
 37668  014CA4  A4D8               	btfss	status,2,c
 37669  014CA6  D00F               	goto	i2l2119
 37670                           
 37671                           ; BSR set to: 0
 37672  014CA8  0E01               	movlw	1
 37673  014CAA  2656               	addwf	i2___fladd@b,f,c
 37674  014CAC  0E00               	movlw	0
 37675  014CAE  2257               	addwfc	i2___fladd@b+1,f,c
 37676  014CB0  2258               	addwfc	i2___fladd@b+2,f,c
 37677  014CB2  2259               	addwfc	i2___fladd@b+3,f,c
 37678                           
 37679                           ; BSR set to: 0
 37680  014CB4  D008               	goto	i2l2119
 37681  014CB6                     i2l2117:
 37682                           
 37683                           ; BSR set to: 0
 37684                           
 37685                           ; BSR set to: 0
 37686  014CB6  505A               	movf	i2___fladd@a,w,c
 37687  014CB8  5E56               	subwf	i2___fladd@b,f,c
 37688  014CBA  505B               	movf	i2___fladd@a+1,w,c
 37689  014CBC  5A57               	subwfb	i2___fladd@b+1,f,c
 37690  014CBE  505C               	movf	i2___fladd@a+2,w,c
 37691  014CC0  5A58               	subwfb	i2___fladd@b+2,f,c
 37692  014CC2  505D               	movf	i2___fladd@a+3,w,c
 37693  014CC4  5A59               	subwfb	i2___fladd@b+3,f,c
 37694  014CC6                     i2l2119:
 37695                           
 37696                           ; BSR set to: 0
 37697  014CC6  5056               	movf	i2___fladd@b,w,c
 37698  014CC8  1057               	iorwf	i2___fladd@b+1,w,c
 37699  014CCA  1058               	iorwf	i2___fladd@b+2,w,c
 37700  014CCC  1059               	iorwf	i2___fladd@b+3,w,c
 37701  014CCE  A4D8               	btfss	status,2,c
 37702  014CD0  D01C               	goto	i2l2126
 37703                           
 37704                           ; BSR set to: 0
 37705  014CD2  516B               	movf	i2___fladd@grs& (0+255),w,b
 37706  014CD4  A4D8               	btfss	status,2,c
 37707  014CD6  D019               	goto	i2l2126
 37708                           
 37709                           ; BSR set to: 0
 37710  014CD8  0E00               	movlw	0
 37711  014CDA  6E56               	movwf	?i2___fladd,c
 37712  014CDC  0E00               	movlw	0
 37713  014CDE  6E57               	movwf	?i2___fladd+1,c
 37714  014CE0  0E00               	movlw	0
 37715  014CE2  6E58               	movwf	?i2___fladd+2,c
 37716  014CE4  0E00               	movlw	0
 37717  014CE6  6E59               	movwf	?i2___fladd+3,c
 37718                           
 37719                           ; BSR set to: 0
 37720  014CE8  0012               	return	
 37721  014CEA                     
 37722                           ; BSR set to: 0
 37723                           
 37724                           ; BSR set to: 0
 37725  014CEA  90D8               	bcf	status,0,c
 37726  014CEC  3656               	rlcf	i2___fladd@b,f,c
 37727  014CEE  3657               	rlcf	i2___fladd@b+1,f,c
 37728  014CF0  3658               	rlcf	i2___fladd@b+2,f,c
 37729  014CF2  3659               	rlcf	i2___fladd@b+3,f,c
 37730                           
 37731                           ; BSR set to: 0
 37732  014CF4  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 37733                           
 37734                           ; BSR set to: 0
 37735  014CF6  8056               	bsf	i2___fladd@b,0,c
 37736                           
 37737                           ; BSR set to: 0
 37738                           
 37739                           ; BSR set to: 0
 37740  014CF8  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 37741  014CFA  D002               	goto	i2l2124
 37742                           
 37743                           ; BSR set to: 0
 37744  014CFC  80D8               	bsf	status,0,c
 37745  014CFE  D001               	goto	L24
 37746  014D00                     i2l2124:
 37747                           
 37748                           ; BSR set to: 0
 37749                           
 37750                           ; BSR set to: 0
 37751  014D00  90D8               	bcf	status,0,c
 37752  014D02                     L24:
 37753  014D02  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 37754                           
 37755                           ; BSR set to: 0
 37756                           
 37757                           ; BSR set to: 0
 37758  014D04  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37759  014D06  A4D8               	btfss	status,2,c
 37760                           
 37761                           ; BSR set to: 0
 37762  014D08  076A               	decf	i2___fladd@bexp& (0+255),f,b
 37763  014D0A                     i2l2126:
 37764                           
 37765                           ; BSR set to: 0
 37766                           
 37767                           ; BSR set to: 0
 37768                           
 37769                           ; BSR set to: 0
 37770  014D0A  AE58               	btfss	i2___fladd@b+2,7,c
 37771  014D0C  D7EE               	goto	i2l2122
 37772  014D0E                     i2u1322_40:
 37773                           
 37774                           ; BSR set to: 0
 37775                           
 37776                           ; BSR set to: 0
 37777                           
 37778                           ; BSR set to: 0
 37779  014D0E  0E00               	movlw	0
 37780  014D10  6F69               	movwf	i2___fladd@aexp& (0+255),b
 37781                           
 37782                           ; BSR set to: 0
 37783  014D12  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 37784  014D14  D00A               	goto	i2l2131
 37785                           
 37786                           ; BSR set to: 0
 37787  014D16  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 37788  014D1A  0E7F               	movlw	127
 37789  014D1C  1760               	andwf	??i2___fladd& (0+255),f,b
 37790  014D1E  A4D8               	btfss	status,2,c
 37791  014D20  D002               	goto	i2u1325_40
 37792                           
 37793                           ; BSR set to: 0
 37794                           
 37795                           ; BSR set to: 0
 37796  014D22  A056               	btfss	i2___fladd@b,0,c
 37797  014D24  D002               	goto	i2l2131
 37798  014D26                     i2u1325_40:
 37799                           
 37800                           ; BSR set to: 0
 37801  014D26  0E01               	movlw	1
 37802  014D28  6F69               	movwf	i2___fladd@aexp& (0+255),b
 37803  014D2A                     i2l2131:
 37804                           
 37805                           ; BSR set to: 0
 37806                           
 37807                           ; BSR set to: 0
 37808                           
 37809                           ; BSR set to: 0
 37810  014D2A  5169               	movf	i2___fladd@aexp& (0+255),w,b
 37811  014D2C  B4D8               	btfsc	status,2,c
 37812  014D2E  D020               	goto	i2l2134
 37813                           
 37814                           ; BSR set to: 0
 37815  014D30  0E01               	movlw	1
 37816  014D32  2656               	addwf	i2___fladd@b,f,c
 37817  014D34  0E00               	movlw	0
 37818  014D36  2257               	addwfc	i2___fladd@b+1,f,c
 37819  014D38  2258               	addwfc	i2___fladd@b+2,f,c
 37820  014D3A  2259               	addwfc	i2___fladd@b+3,f,c
 37821                           
 37822                           ; BSR set to: 0
 37823  014D3C  A059               	btfss	i2___fladd@b+3,0,c
 37824  014D3E  D018               	goto	i2l2134
 37825                           
 37826                           ; BSR set to: 0
 37827  014D40  C056  F060         	movff	i2___fladd@b,??i2___fladd
 37828  014D44  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 37829  014D48  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 37830  014D4C  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 37831  014D50  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 37832  014D52  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 37833  014D54  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 37834  014D56  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 37835  014D58  3360               	rrcf	??i2___fladd& (0+255),f,b
 37836  014D5A  C060  F056         	movff	??i2___fladd,i2___fladd@b
 37837  014D5E  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 37838  014D62  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 37839  014D66  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 37840  014D6A  296A               	incf	i2___fladd@bexp& (0+255),w,b
 37841  014D6C  A4D8               	btfss	status,2,c
 37842                           
 37843                           ; BSR set to: 0
 37844  014D6E  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 37845  014D70                     i2l2134:
 37846                           
 37847                           ; BSR set to: 0
 37848                           
 37849                           ; BSR set to: 0
 37850                           
 37851                           ; BSR set to: 0
 37852                           
 37853                           ; BSR set to: 0
 37854  014D70  296A               	incf	i2___fladd@bexp& (0+255),w,b
 37855  014D72  B4D8               	btfsc	status,2,c
 37856  014D74  D003               	goto	i2u1330_40
 37857                           
 37858                           ; BSR set to: 0
 37859  014D76  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37860  014D78  A4D8               	btfss	status,2,c
 37861  014D7A  D00D               	goto	i2l2138
 37862  014D7C                     i2u1330_40:
 37863                           
 37864                           ; BSR set to: 0
 37865                           
 37866                           ; BSR set to: 0
 37867  014D7C  0E00               	movlw	0
 37868  014D7E  6E56               	movwf	i2___fladd@b,c
 37869  014D80  0E00               	movlw	0
 37870  014D82  6E57               	movwf	i2___fladd@b+1,c
 37871  014D84  0E00               	movlw	0
 37872  014D86  6E58               	movwf	i2___fladd@b+2,c
 37873  014D88  0E00               	movlw	0
 37874  014D8A  6E59               	movwf	i2___fladd@b+3,c
 37875  014D8C  516A               	movf	i2___fladd@bexp& (0+255),w,b
 37876  014D8E  A4D8               	btfss	status,2,c
 37877  014D90  D002               	goto	i2l2138
 37878                           
 37879                           ; BSR set to: 0
 37880  014D92  0E00               	movlw	0
 37881  014D94  6F68               	movwf	i2___fladd@signs& (0+255),b
 37882  014D96                     i2l2138:
 37883                           
 37884                           ; BSR set to: 0
 37885                           
 37886                           ; BSR set to: 0
 37887                           
 37888                           ; BSR set to: 0
 37889  014D96  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 37890  014D98  D002               	goto	i2l2139
 37891                           
 37892                           ; BSR set to: 0
 37893  014D9A  8E58               	bsf	i2___fladd@b+2,7,c
 37894  014D9C  D001               	goto	i2l2140
 37895  014D9E                     i2l2139:
 37896                           
 37897                           ; BSR set to: 0
 37898                           
 37899                           ; BSR set to: 0
 37900  014D9E  9E58               	bcf	i2___fladd@b+2,7,c
 37901  014DA0                     i2l2140:
 37902                           
 37903                           ; BSR set to: 0
 37904                           
 37905                           ; BSR set to: 0
 37906  014DA0  90D8               	bcf	status,0,c
 37907  014DA2  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 37908  014DA4  6E59               	movwf	i2___fladd@b+3,c
 37909                           
 37910                           ; BSR set to: 0
 37911  014DA6  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 37912                           
 37913                           ; BSR set to: 0
 37914  014DA8  8E59               	bsf	i2___fladd@b+3,7,c
 37915                           
 37916                           ; BSR set to: 0
 37917                           
 37918                           ; BSR set to: 0
 37919  014DAA  C056  F056         	movff	i2___fladd@b,?i2___fladd
 37920  014DAE  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 37921  014DB2  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 37922  014DB6  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 37923  014DBA  0012               	return	
 37924  014DBC                     __end_ofi2___fladd:
 37925                           	opt stack 0
 37926                           tosu	equ	0xFFF
 37927                           tosh	equ	0xFFE
 37928                           tosl	equ	0xFFD
 37929                           pclatu	equ	0xFFB
 37930                           pclath	equ	0xFFA
 37931                           tblptru	equ	0xFF8
 37932                           tblptrh	equ	0xFF7
 37933                           tblptrl	equ	0xFF6
 37934                           tablat	equ	0xFF5
 37935                           prodh	equ	0xFF4
 37936                           prodl	equ	0xFF3
 37937                           intcon	equ	0xFF2
 37938                           indf0	equ	0xFEF
 37939                           postinc0	equ	0xFEE
 37940                           fsr0h	equ	0xFEA
 37941                           fsr0l	equ	0xFE9
 37942                           wreg	equ	0xFE8
 37943                           indf1	equ	0xFE7
 37944                           postdec1	equ	0xFE5
 37945                           plusw1	equ	0xFE3
 37946                           fsr1h	equ	0xFE2
 37947                           fsr1l	equ	0xFE1
 37948                           bsr	equ	0xFE0
 37949                           indf2	equ	0xFDF
 37950                           postinc2	equ	0xFDE
 37951                           postdec2	equ	0xFDD
 37952                           plusw2	equ	0xFDB
 37953                           fsr2h	equ	0xFDA
 37954                           fsr2l	equ	0xFD9
 37955                           status	equ	0xFD8
 37956                           
 37957 ;; *************** function _abs *****************
 37958 ;; Defined at:
 37959 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 37960 ;; Parameters:    Size  Location     Type
 37961 ;;  a               2   22[BANK0 ] int 
 37962 ;; Auto vars:     Size  Location     Type
 37963 ;;		None
 37964 ;; Return value:  Size  Location     Type
 37965 ;;                  2   22[BANK0 ] int 
 37966 ;; Registers used:
 37967 ;;		wreg, status,2, status,0
 37968 ;; Tracked objects:
 37969 ;;		On entry : 0/0
 37970 ;;		On exit  : 0/0
 37971 ;;		Unchanged: 0/0
 37972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37976 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37977 ;;Total ram usage:        4 bytes
 37978 ;; Hardware stack levels used:    1
 37979 ;; This function calls:
 37980 ;;		Nothing
 37981 ;; This function is called by:
 37982 ;;		_ADCPostProcessingCallback
 37983 ;; This function uses a non-reentrant model
 37984 ;;
 37985                           
 37986                           	psect	text125
 37987  0188D8                     __ptext125:
 37988                           	opt stack 0
 37989  0188D8                     _abs:
 37990                           	opt stack 16
 37991                           
 37992                           ; BSR set to: 0
 37993                           ;incstack = 0
 37994  0188D8  0100               	movlb	0	; () banked
 37995  0188DA  AF77               	btfss	(abs@a+1)& (0+255),7,b
 37996  0188DC  D00D               	goto	i2l1586
 37997                           
 37998                           ; BSR set to: 0
 37999  0188DE  C076  F078         	movff	abs@a,??_abs
 38000  0188E2  C077  F079         	movff	abs@a+1,??_abs+1
 38001  0188E6  1F78               	comf	??_abs& (0+255),f,b
 38002  0188E8  1F79               	comf	(??_abs+1)& (0+255),f,b
 38003  0188EA  4B78               	infsnz	??_abs& (0+255),f,b
 38004  0188EC  2B79               	incf	(??_abs+1)& (0+255),f,b
 38005  0188EE  C078  F076         	movff	??_abs,?_abs
 38006  0188F2  C079  F077         	movff	??_abs+1,?_abs+1
 38007  0188F6  0012               	return	
 38008  0188F8                     i2l1586:
 38009                           
 38010                           ; BSR set to: 0
 38011  0188F8  C076  F076         	movff	abs@a,?_abs
 38012  0188FC  C077  F077         	movff	abs@a+1,?_abs+1
 38013                           
 38014                           ; BSR set to: 0
 38015  018900  0012               	return		;funcret
 38016  018902                     __end_of_abs:
 38017                           	opt stack 0
 38018                           tosu	equ	0xFFF
 38019                           tosh	equ	0xFFE
 38020                           tosl	equ	0xFFD
 38021                           pclatu	equ	0xFFB
 38022                           pclath	equ	0xFFA
 38023                           tblptru	equ	0xFF8
 38024                           tblptrh	equ	0xFF7
 38025                           tblptrl	equ	0xFF6
 38026                           tablat	equ	0xFF5
 38027                           prodh	equ	0xFF4
 38028                           prodl	equ	0xFF3
 38029                           intcon	equ	0xFF2
 38030                           indf0	equ	0xFEF
 38031                           postinc0	equ	0xFEE
 38032                           fsr0h	equ	0xFEA
 38033                           fsr0l	equ	0xFE9
 38034                           wreg	equ	0xFE8
 38035                           indf1	equ	0xFE7
 38036                           postdec1	equ	0xFE5
 38037                           plusw1	equ	0xFE3
 38038                           fsr1h	equ	0xFE2
 38039                           fsr1l	equ	0xFE1
 38040                           bsr	equ	0xFE0
 38041                           indf2	equ	0xFDF
 38042                           postinc2	equ	0xFDE
 38043                           postdec2	equ	0xFDD
 38044                           plusw2	equ	0xFDB
 38045                           fsr2h	equ	0xFDA
 38046                           fsr2l	equ	0xFD9
 38047                           status	equ	0xFD8
 38048                           
 38049 ;; *************** function _ADCC_StopConversion *****************
 38050 ;; Defined at:
 38051 ;;		line 162 in file "mcc_generated_files/adcc.c"
 38052 ;; Parameters:    Size  Location     Type
 38053 ;;		None
 38054 ;; Auto vars:     Size  Location     Type
 38055 ;;		None
 38056 ;; Return value:  Size  Location     Type
 38057 ;;                  1    wreg      void 
 38058 ;; Registers used:
 38059 ;;		None
 38060 ;; Tracked objects:
 38061 ;;		On entry : 0/0
 38062 ;;		On exit  : 0/0
 38063 ;;		Unchanged: 0/0
 38064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38069 ;;Total ram usage:        0 bytes
 38070 ;; Hardware stack levels used:    1
 38071 ;; This function calls:
 38072 ;;		Nothing
 38073 ;; This function is called by:
 38074 ;;		_ADCPostProcessingCallback
 38075 ;; This function uses a non-reentrant model
 38076 ;;
 38077                           
 38078                           	psect	text126
 38079  018C4E                     __ptext126:
 38080                           	opt stack 0
 38081  018C4E                     _ADCC_StopConversion:
 38082                           	opt stack 16
 38083                           
 38084                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 38085                           
 38086                           ; BSR set to: 0
 38087                           ;incstack = 0
 38088  018C4E  9060               	bcf	3936,0,c	;volatile
 38089  018C50  0012               	return		;funcret
 38090  018C52                     __end_of_ADCC_StopConversion:
 38091                           	opt stack 0
 38092                           tosu	equ	0xFFF
 38093                           tosh	equ	0xFFE
 38094                           tosl	equ	0xFFD
 38095                           pclatu	equ	0xFFB
 38096                           pclath	equ	0xFFA
 38097                           tblptru	equ	0xFF8
 38098                           tblptrh	equ	0xFF7
 38099                           tblptrl	equ	0xFF6
 38100                           tablat	equ	0xFF5
 38101                           prodh	equ	0xFF4
 38102                           prodl	equ	0xFF3
 38103                           intcon	equ	0xFF2
 38104                           indf0	equ	0xFEF
 38105                           postinc0	equ	0xFEE
 38106                           fsr0h	equ	0xFEA
 38107                           fsr0l	equ	0xFE9
 38108                           wreg	equ	0xFE8
 38109                           indf1	equ	0xFE7
 38110                           postdec1	equ	0xFE5
 38111                           plusw1	equ	0xFE3
 38112                           fsr1h	equ	0xFE2
 38113                           fsr1l	equ	0xFE1
 38114                           bsr	equ	0xFE0
 38115                           indf2	equ	0xFDF
 38116                           postinc2	equ	0xFDE
 38117                           postdec2	equ	0xFDD
 38118                           plusw2	equ	0xFDB
 38119                           fsr2h	equ	0xFDA
 38120                           fsr2l	equ	0xFD9
 38121                           status	equ	0xFD8
 38122                           
 38123 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 38124 ;; Defined at:
 38125 ;;		line 216 in file "mcc_generated_files/adcc.c"
 38126 ;; Parameters:    Size  Location     Type
 38127 ;;		None
 38128 ;; Auto vars:     Size  Location     Type
 38129 ;;		None
 38130 ;; Return value:  Size  Location     Type
 38131 ;;                  1    wreg      unsigned char 
 38132 ;; Registers used:
 38133 ;;		wreg
 38134 ;; Tracked objects:
 38135 ;;		On entry : 0/0
 38136 ;;		On exit  : 0/0
 38137 ;;		Unchanged: 0/0
 38138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38143 ;;Total ram usage:        0 bytes
 38144 ;; Hardware stack levels used:    1
 38145 ;; This function calls:
 38146 ;;		Nothing
 38147 ;; This function is called by:
 38148 ;;		_ADCPostProcessingCallback
 38149 ;; This function uses a non-reentrant model
 38150 ;;
 38151                           
 38152                           	psect	text127
 38153  018C08                     __ptext127:
 38154                           	opt stack 0
 38155  018C08                     _ADCC_HasAccumulatorOverflowed:
 38156                           	opt stack 16
 38157                           
 38158                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 38159                           
 38160                           ;incstack = 0
 38161  018C08  AE65               	btfss	3941,7,c	;volatile
 38162  018C0A  D002               	goto	i2u1664_40
 38163  018C0C  0E01               	movlw	1
 38164  018C0E  0012               	return	
 38165  018C10                     i2u1664_40:
 38166  018C10  0E00               	movlw	0
 38167  018C12  0012               	return	
 38168  018C14                     __end_of_ADCC_HasAccumulatorOverflowed:
 38169                           	opt stack 0
 38170                           tosu	equ	0xFFF
 38171                           tosh	equ	0xFFE
 38172                           tosl	equ	0xFFD
 38173                           pclatu	equ	0xFFB
 38174                           pclath	equ	0xFFA
 38175                           tblptru	equ	0xFF8
 38176                           tblptrh	equ	0xFF7
 38177                           tblptrl	equ	0xFF6
 38178                           tablat	equ	0xFF5
 38179                           prodh	equ	0xFF4
 38180                           prodl	equ	0xFF3
 38181                           intcon	equ	0xFF2
 38182                           indf0	equ	0xFEF
 38183                           postinc0	equ	0xFEE
 38184                           fsr0h	equ	0xFEA
 38185                           fsr0l	equ	0xFE9
 38186                           wreg	equ	0xFE8
 38187                           indf1	equ	0xFE7
 38188                           postdec1	equ	0xFE5
 38189                           plusw1	equ	0xFE3
 38190                           fsr1h	equ	0xFE2
 38191                           fsr1l	equ	0xFE1
 38192                           bsr	equ	0xFE0
 38193                           indf2	equ	0xFDF
 38194                           postinc2	equ	0xFDE
 38195                           postdec2	equ	0xFDD
 38196                           plusw2	equ	0xFDB
 38197                           fsr2h	equ	0xFDA
 38198                           fsr2l	equ	0xFD9
 38199                           status	equ	0xFD8
 38200                           
 38201 ;; *************** function _ADCC_GetFilterValue *****************
 38202 ;; Defined at:
 38203 ;;		line 222 in file "mcc_generated_files/adcc.c"
 38204 ;; Parameters:    Size  Location     Type
 38205 ;;		None
 38206 ;; Auto vars:     Size  Location     Type
 38207 ;;		None
 38208 ;; Return value:  Size  Location     Type
 38209 ;;                  2    0[COMRAM] unsigned int 
 38210 ;; Registers used:
 38211 ;;		wreg, status,2, status,0
 38212 ;; Tracked objects:
 38213 ;;		On entry : 0/0
 38214 ;;		On exit  : 0/0
 38215 ;;		Unchanged: 0/0
 38216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38219 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38220 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38221 ;;Total ram usage:        4 bytes
 38222 ;; Hardware stack levels used:    1
 38223 ;; This function calls:
 38224 ;;		Nothing
 38225 ;; This function is called by:
 38226 ;;		_ADCPostProcessingCallback
 38227 ;; This function uses a non-reentrant model
 38228 ;;
 38229                           
 38230                           	psect	text128
 38231  018B0C                     __ptext128:
 38232                           	opt stack 0
 38233  018B0C                     _ADCC_GetFilterValue:
 38234                           	opt stack 16
 38235                           
 38236                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 38237                           
 38238                           ;incstack = 0
 38239  018B0C  5073               	movf	3955,w,c	;volatile
 38240  018B0E  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 38241  018B10  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 38242  018B12  5072               	movf	3954,w,c	;volatile
 38243  018B14  2403               	addwf	??_ADCC_GetFilterValue,w,c
 38244  018B16  6E01               	movwf	?_ADCC_GetFilterValue,c
 38245  018B18  0E00               	movlw	0
 38246  018B1A  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 38247  018B1C  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 38248  018B1E  0012               	return	
 38249  018B20                     __end_of_ADCC_GetFilterValue:
 38250                           	opt stack 0
 38251                           tosu	equ	0xFFF
 38252                           tosh	equ	0xFFE
 38253                           tosl	equ	0xFFD
 38254                           pclatu	equ	0xFFB
 38255                           pclath	equ	0xFFA
 38256                           tblptru	equ	0xFF8
 38257                           tblptrh	equ	0xFF7
 38258                           tblptrl	equ	0xFF6
 38259                           tablat	equ	0xFF5
 38260                           prodh	equ	0xFF4
 38261                           prodl	equ	0xFF3
 38262                           intcon	equ	0xFF2
 38263                           indf0	equ	0xFEF
 38264                           postinc0	equ	0xFEE
 38265                           fsr0h	equ	0xFEA
 38266                           fsr0l	equ	0xFE9
 38267                           wreg	equ	0xFE8
 38268                           indf1	equ	0xFE7
 38269                           postdec1	equ	0xFE5
 38270                           plusw1	equ	0xFE3
 38271                           fsr1h	equ	0xFE2
 38272                           fsr1l	equ	0xFE1
 38273                           bsr	equ	0xFE0
 38274                           indf2	equ	0xFDF
 38275                           postinc2	equ	0xFDE
 38276                           postdec2	equ	0xFDD
 38277                           plusw2	equ	0xFDB
 38278                           fsr2h	equ	0xFDA
 38279                           fsr2l	equ	0xFD9
 38280                           status	equ	0xFD8
 38281                           
 38282 ;; *************** function _ADCC_GetConversionResult *****************
 38283 ;; Defined at:
 38284 ;;		line 130 in file "mcc_generated_files/adcc.c"
 38285 ;; Parameters:    Size  Location     Type
 38286 ;;		None
 38287 ;; Auto vars:     Size  Location     Type
 38288 ;;		None
 38289 ;; Return value:  Size  Location     Type
 38290 ;;                  2    0[COMRAM] unsigned int 
 38291 ;; Registers used:
 38292 ;;		wreg, status,2, status,0
 38293 ;; Tracked objects:
 38294 ;;		On entry : 0/0
 38295 ;;		On exit  : 0/0
 38296 ;;		Unchanged: 0/0
 38297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38301 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38302 ;;Total ram usage:        4 bytes
 38303 ;; Hardware stack levels used:    1
 38304 ;; This function calls:
 38305 ;;		Nothing
 38306 ;; This function is called by:
 38307 ;;		_ADCPostProcessingCallback
 38308 ;; This function uses a non-reentrant model
 38309 ;;
 38310                           
 38311                           	psect	text129
 38312  018B20                     __ptext129:
 38313                           	opt stack 0
 38314  018B20                     _ADCC_GetConversionResult:
 38315                           	opt stack 16
 38316                           
 38317                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 38318                           
 38319                           ;incstack = 0
 38320  018B20  5064               	movf	3940,w,c	;volatile
 38321  018B22  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 38322  018B24  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 38323  018B26  5063               	movf	3939,w,c	;volatile
 38324  018B28  2403               	addwf	??_ADCC_GetConversionResult,w,c
 38325  018B2A  6E01               	movwf	?_ADCC_GetConversionResult,c
 38326  018B2C  0E00               	movlw	0
 38327  018B2E  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 38328  018B30  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 38329  018B32  0012               	return	
 38330  018B34                     __end_of_ADCC_GetConversionResult:
 38331                           	opt stack 0
 38332                           tosu	equ	0xFFF
 38333                           tosh	equ	0xFFE
 38334                           tosl	equ	0xFFD
 38335                           pclatu	equ	0xFFB
 38336                           pclath	equ	0xFFA
 38337                           tblptru	equ	0xFF8
 38338                           tblptrh	equ	0xFF7
 38339                           tblptrl	equ	0xFF6
 38340                           tablat	equ	0xFF5
 38341                           prodh	equ	0xFF4
 38342                           prodl	equ	0xFF3
 38343                           intcon	equ	0xFF2
 38344                           indf0	equ	0xFEF
 38345                           postinc0	equ	0xFEE
 38346                           fsr0h	equ	0xFEA
 38347                           fsr0l	equ	0xFE9
 38348                           wreg	equ	0xFE8
 38349                           indf1	equ	0xFE7
 38350                           postdec1	equ	0xFE5
 38351                           plusw1	equ	0xFE3
 38352                           fsr1h	equ	0xFE2
 38353                           fsr1l	equ	0xFE1
 38354                           bsr	equ	0xFE0
 38355                           indf2	equ	0xFDF
 38356                           postinc2	equ	0xFDE
 38357                           postdec2	equ	0xFDD
 38358                           plusw2	equ	0xFDB
 38359                           fsr2h	equ	0xFDA
 38360                           fsr2l	equ	0xFD9
 38361                           status	equ	0xFD8
 38362                           tosu	equ	0xFFF
 38363                           tosh	equ	0xFFE
 38364                           tosl	equ	0xFFD
 38365                           pclatu	equ	0xFFB
 38366                           pclath	equ	0xFFA
 38367                           tblptru	equ	0xFF8
 38368                           tblptrh	equ	0xFF7
 38369                           tblptrl	equ	0xFF6
 38370                           tablat	equ	0xFF5
 38371                           prodh	equ	0xFF4
 38372                           prodl	equ	0xFF3
 38373                           intcon	equ	0xFF2
 38374                           indf0	equ	0xFEF
 38375                           postinc0	equ	0xFEE
 38376                           fsr0h	equ	0xFEA
 38377                           fsr0l	equ	0xFE9
 38378                           wreg	equ	0xFE8
 38379                           indf1	equ	0xFE7
 38380                           postdec1	equ	0xFE5
 38381                           plusw1	equ	0xFE3
 38382                           fsr1h	equ	0xFE2
 38383                           fsr1l	equ	0xFE1
 38384                           bsr	equ	0xFE0
 38385                           indf2	equ	0xFDF
 38386                           postinc2	equ	0xFDE
 38387                           postdec2	equ	0xFDD
 38388                           plusw2	equ	0xFDB
 38389                           fsr2h	equ	0xFDA
 38390                           fsr2l	equ	0xFD9
 38391                           status	equ	0xFD8
 38392                           
 38393                           	psect	text130
 38394  000000                     __ptext130:
 38395                           	opt stack 0
 38396                           tosu	equ	0xFFF
 38397                           tosh	equ	0xFFE
 38398                           tosl	equ	0xFFD
 38399                           pclatu	equ	0xFFB
 38400                           pclath	equ	0xFFA
 38401                           tblptru	equ	0xFF8
 38402                           tblptrh	equ	0xFF7
 38403                           tblptrl	equ	0xFF6
 38404                           tablat	equ	0xFF5
 38405                           prodh	equ	0xFF4
 38406                           prodl	equ	0xFF3
 38407                           intcon	equ	0xFF2
 38408                           indf0	equ	0xFEF
 38409                           postinc0	equ	0xFEE
 38410                           fsr0h	equ	0xFEA
 38411                           fsr0l	equ	0xFE9
 38412                           wreg	equ	0xFE8
 38413                           indf1	equ	0xFE7
 38414                           postdec1	equ	0xFE5
 38415                           plusw1	equ	0xFE3
 38416                           fsr1h	equ	0xFE2
 38417                           fsr1l	equ	0xFE1
 38418                           bsr	equ	0xFE0
 38419                           indf2	equ	0xFDF
 38420                           postinc2	equ	0xFDE
 38421                           postdec2	equ	0xFDD
 38422                           plusw2	equ	0xFDB
 38423                           fsr2h	equ	0xFDA
 38424                           fsr2l	equ	0xFD9
 38425                           status	equ	0xFD8
 38426                           
 38427                           	psect	rparam
 38428  0000                     tosu	equ	0xFFF
 38429                           tosh	equ	0xFFE
 38430                           tosl	equ	0xFFD
 38431                           pclatu	equ	0xFFB
 38432                           pclath	equ	0xFFA
 38433                           tblptru	equ	0xFF8
 38434                           tblptrh	equ	0xFF7
 38435                           tblptrl	equ	0xFF6
 38436                           tablat	equ	0xFF5
 38437                           prodh	equ	0xFF4
 38438                           prodl	equ	0xFF3
 38439                           intcon	equ	0xFF2
 38440                           indf0	equ	0xFEF
 38441                           postinc0	equ	0xFEE
 38442                           fsr0h	equ	0xFEA
 38443                           fsr0l	equ	0xFE9
 38444                           wreg	equ	0xFE8
 38445                           indf1	equ	0xFE7
 38446                           postdec1	equ	0xFE5
 38447                           plusw1	equ	0xFE3
 38448                           fsr1h	equ	0xFE2
 38449                           fsr1l	equ	0xFE1
 38450                           bsr	equ	0xFE0
 38451                           indf2	equ	0xFDF
 38452                           postinc2	equ	0xFDE
 38453                           postdec2	equ	0xFDD
 38454                           plusw2	equ	0xFDB
 38455                           fsr2h	equ	0xFDA
 38456                           fsr2l	equ	0xFD9
 38457                           status	equ	0xFD8
 38458                           
 38459                           	psect	temp
 38460  00005F                     btemp:
 38461                           	opt stack 0
 38462  00005F                     	ds	1
 38463  0000                     int$flags	set	btemp
 38464  0000                     wtemp6	set	btemp+1
 38465                           tosu	equ	0xFFF
 38466                           tosh	equ	0xFFE
 38467                           tosl	equ	0xFFD
 38468                           pclatu	equ	0xFFB
 38469                           pclath	equ	0xFFA
 38470                           tblptru	equ	0xFF8
 38471                           tblptrh	equ	0xFF7
 38472                           tblptrl	equ	0xFF6
 38473                           tablat	equ	0xFF5
 38474                           prodh	equ	0xFF4
 38475                           prodl	equ	0xFF3
 38476                           intcon	equ	0xFF2
 38477                           indf0	equ	0xFEF
 38478                           postinc0	equ	0xFEE
 38479                           fsr0h	equ	0xFEA
 38480                           fsr0l	equ	0xFE9
 38481                           wreg	equ	0xFE8
 38482                           indf1	equ	0xFE7
 38483                           postdec1	equ	0xFE5
 38484                           plusw1	equ	0xFE3
 38485                           fsr1h	equ	0xFE2
 38486                           fsr1l	equ	0xFE1
 38487                           bsr	equ	0xFE0
 38488                           indf2	equ	0xFDF
 38489                           postinc2	equ	0xFDE
 38490                           postdec2	equ	0xFDD
 38491                           plusw2	equ	0xFDB
 38492                           fsr2h	equ	0xFDA
 38493                           fsr2l	equ	0xFD9
 38494                           status	equ	0xFD8


Data Sizes:
    Strings     5687
    Constant    260
    Data        43
    BSS         354
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    187     233
    BANK2           256     24     237
    BANK3           256     43     171
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_124(CODE[5]), STR_122(CODE[11]), STR_120(CODE[17]), STR_118(CODE[14]), 
		 -> STR_116(CODE[16]), STR_107(CODE[13]), STR_103(CODE[17]), STR_100(CODE[14]), 
		 -> STR_98(CODE[12]), STR_96(CODE[16]), STR_94(CODE[15]), STR_92(CODE[15]), 
		 -> STR_90(CODE[21]), STR_88(CODE[21]), STR_86(CODE[26]), STR_84(CODE[14]), 
		 -> STR_82(CODE[13]), STR_80(CODE[18]), STR_78(CODE[15]), STR_76(CODE[16]), 
		 -> STR_73(CODE[17]), STR_71(CODE[16]), STR_60(CODE[11]), STR_57(CODE[10]), 
		 -> STR_55(CODE[13]), STR_53(CODE[11]), STR_50(CODE[4]), STR_49(CODE[6]), 
		 -> STR_47(CODE[16]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK3[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_144(CODE[7]), printf@c(BANK1[1]), STR_143(CODE[16]), STR_142(CODE[22]), 
		 -> STR_141(CODE[21]), STR_140(CODE[27]), STR_139(CODE[41]), STR_138(CODE[32]), 
		 -> STR_137(CODE[19]), STR_136(CODE[16]), STR_135(CODE[15]), STR_134(CODE[16]), 
		 -> STR_133(CODE[10]), STR_132(CODE[13]), STR_131(CODE[12]), ringBufferLUT@channel_name(BANK3[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2360
		 -> STR_130(CODE[30]), STR_129(CODE[46]), STR_128(CODE[39]), STR_127(CODE[62]), 
		 -> STR_126(CODE[55]), STR_125(CODE[2360]), STR_123(CODE[46]), STR_121(CODE[51]), 
		 -> STR_119(CODE[53]), STR_117(CODE[58]), STR_115(CODE[71]), STR_114(CODE[63]), 
		 -> STR_113(CODE[37]), STR_112(CODE[46]), STR_111(CODE[102]), STR_110(CODE[86]), 
		 -> STR_108(CODE[25]), STR_106(CODE[42]), STR_105(CODE[53]), STR_104(CODE[31]), 
		 -> STR_102(CODE[29]), STR_101(CODE[28]), STR_99(CODE[42]), STR_97(CODE[41]), 
		 -> STR_95(CODE[40]), STR_93(CODE[56]), STR_91(CODE[34]), STR_89(CODE[34]), 
		 -> STR_87(CODE[32]), STR_85(CODE[37]), STR_83(CODE[58]), STR_81(CODE[36]), 
		 -> STR_79(CODE[36]), STR_77(CODE[37]), STR_75(CODE[45]), STR_74(CODE[66]), 
		 -> STR_72(CODE[21]), STR_70(CODE[24]), STR_69(CODE[48]), STR_59(CODE[54]), 
		 -> STR_58(CODE[64]), STR_56(CODE[59]), STR_54(CODE[85]), STR_52(CODE[47]), 
		 -> STR_51(CODE[17]), STR_48(CODE[52]), STR_46(CODE[4]), STR_45(CODE[5]), 
		 -> STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), 
		 -> STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_142(CODE[22]), STR_141(CODE[21]), STR_140(CODE[27]), STR_139(CODE[41]), 
		 -> STR_138(CODE[32]), STR_137(CODE[19]), STR_136(CODE[16]), STR_135(CODE[15]), 
		 -> STR_134(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_133(CODE[10]), STR_132(CODE[13]), STR_131(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_133(CODE[10]), STR_132(CODE[13]), STR_131(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_133(CODE[10]), STR_132(CODE[13]), STR_131(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_143(CODE[16]), STR_142(CODE[22]), STR_141(CODE[21]), STR_140(CODE[27]), 
		 -> STR_139(CODE[41]), STR_138(CODE[32]), STR_137(CODE[19]), STR_136(CODE[16]), 
		 -> STR_135(CODE[15]), STR_134(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _terminal_ringBufferPull->_ringBufferLUT

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  854592
                                             22 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                             ___flge
                    _getCauseOfReset
               _readDoubleFromEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeDoubleToEEPROM                                 12     6      6     896
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     307
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0  104122
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  515112
                                            184 BANK1      3     3      0
                                             16 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       47    45      2  513921
                                            180 BANK1      4     2      2
                                              0 BANK3     43    43      0
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  124071
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  124071
                                            178 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     741
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    7213
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0  104122
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    2624
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     722
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     736
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     468
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2188
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    7938
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    1155
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     234
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2    1328
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0    1208
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0    1208
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     374
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2    1143
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4    1143
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     537
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2     110
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2892
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    5576
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      75
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0  104122
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10  104122
                                            130 BANK1     48    38     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   19276
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     165
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0     110
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     185
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   18781
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   11764
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    3047
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3335
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6    1133
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1133
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1808
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1953
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1427
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1457
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1272
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   10022
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    9226
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1343
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    3430
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  196383
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   40465
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   40465
                                             40 BANK0     40    38      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  155678
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  155678
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   99862
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   47417
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   42313
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   25639
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   40118
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   37270
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4509
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2535
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7999
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10340
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4234
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   ___flge
   _getCauseOfReset
   _readDoubleFromEEPROM
     _DATAEE_ReadByte
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy
   _writeDoubleToEEPROM
     _DATAEE_WriteByte

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     2B      AB      12       66.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100     18      ED      10       92.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37B       8        0.0%
DATA                 0      0     37B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 06 13:55:35 2018

                           ??i2_TMR7_StopTimer 0001                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
                 __end_of_readDoubleFromEEPROM 821E               __end_of_TMR5_SetInterruptHandler 8BD0  
                                 ___fldiv@sign 0149                                    __CFG_CP$OFF 000000  
                                           l57 8AA2                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 8C26                                             bsr 000FE0  
                          ___wmul@multiplicand 0119                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                 __end_of_heartbeatTimerCallback 8628  
                                          l381 8496                                            l382 8492  
                                          l391 83CA                                            l392 83F0  
                                          l384 84C0                                            l393 83EE  
                                          l388 83B4                                            l389 83B0  
                                          l789 8652                                   __CFG_CPD$OFF 000000  
                                          _PR6 000FB0                                    i2___fladd@a 005A  
                                  i2___fladd@b 0056                                            _Ipk 01C7  
                                          _Vpk 0250                                            _abs 88D8  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString 8114                                            _sin 50C0  
                   currentMeasuredToPeak@Angle 009D                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 68E0                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0034  
                                  i2___flmul@b 0030                                    i2___flsub@a 0084  
                                  i2___flsub@b 0080                               ??_TMR7_StopTimer 0117  
                                 ___flmul@aexp 0163                                   ___flmul@bexp 0164  
                                 ___flmul@sign 0162                                   ___flmul@temp 016D  
                                 ___flmul@prod 0169                                   __CFG_LVP$OFF 000000  
                                 __CFG_ZCD$OFF 000000                                   ___fltol@exp1 0181  
                                         l1010 66B6                                           l1100 4042  
                                         l1012 6724                                           l1101 3F6A  
                                         l1102 4078                                           l1110 402A  
                                         l1103 3F82                                           l1104 3F9A  
                                         l1105 3FB2                                           l1106 3FCA  
                                         l1210 00CC                                           l1107 3FE2  
                                         l1051 6F08                                           ?_abs 0076  
                                         l2100 47DA                                           l2004 8006  
                                         l1108 3FFA                                           l1220 02A0  
                                         l1212 013A                                           l2005 7FFA  
                                         l1109 4012                                           l1221 025A  
                                         l1053 6F46                                           l2110 48B6  
                                         l1230 0308                                           l1206 003E  
                                         l1054 6F28                                           l2103 4892  
                                         l1231 0320                                           l2104 4870  
                                         l2008 802E                                           l2200 4336  
                                         l1080 3E02                                           l1240 04C4  
                                         l1224 0408                                           l1232 0338  
                                         l1216 01A0                                           l1208 007A  
                                         l1056 6F94                                           l2113 48DA  
                                         l2105 487E                                           l2009 803C  
                                         l1401 0EAE                                           l1313 80E6  
                                         l1081 3D5A                                           l1241 04A0  
                                         l1225 03E4                                           l1233 0350  
                                         l1057 6F66                                           l1330 8236  
                                         l2122 49AC                                           l2114 48DE  
                                         l2106 4882                                           l2202 437A  
                                         l1410 0F38                                           l1402 0EC0  
                                         l1314 80C8                                           l1090 3E44  
                                         l1082 3E2C                                           l1250 060C  
                                         l1226 0398                                           l1234 0368  
                                         l1218 0204                                           l2131 49EC  
                                         l2203 4398                                           l1091 3F52  
                                         l1083 3D72                                           l1235 0380  
                                         l1227 02D8                                           l1332 823E  
                                         l2140 4A62                                           l2124 49C2  
                                         l2300 68CE                                           l1420 108E  
                                         l1412 1080                                           l1404 0EDC  
                                         l1092 3E5C                                           l1084 3D8A  
                                         l1260 07A6                                           l1252 065E  
                                         l1244 0516                                           l1228 03C8  
                                         l2117 4978                                           l2109 48F0  
                                         l2205 43BC                                           l1421 1234  
                                         l1413 1054                                           l1405 0ED4  
                                         l1317 80D2                                           l1093 3E74  
                                         l1085 3DA2                                           l1229 02F0  
                                         l1334 8246                                           l1326 8226  
                                         l2134 4A32                                           l2126 49CC  
                                         l2206 43DA                                           l1510 1A1A  
                                         l1414 1000                                           l1318 80DC  
                                         l2230 836E                                           l1094 3E8C  
                                         l1086 3DBA                                           l1262 07EA  
                                         l1254 06B0                                           l1246 0568  
                                         l1238 0458                                           l2119 4988  
                                         l1511 1A3C                                           l1503 19DE  
                                         l2231 8368                                           l1095 3EA4  
                                         l1087 3DD2                                           l1336 824E  
                                         l1328 822E                                           l1504 1986  
                                         l1432 1120                                           l1424 1092  
                                         l2160 5AAE                                           l2152 59BA  
                                         l1360 820C                                           l2240 82C2  
                                         l1096 3EBC                                           l1088 3DEA  
                                         l1280 0C3C                                           l1272 0972  
                                         l1264 082E                                           l1256 0702  
                                         l1248 05BA                                           l1513 1A5E  
                                         l1417 11C6                                           l1441 119A  
                                         l1433 1136                                           l2153 59B6  
                                         l1345 8842                                           l2233 8388  
                                         l1089 3F1C                                           l1097 3ED4  
                                         l1281 09F4                                           l1273 0928  
                                         l1338 8256                                           l2138 4A58  
                                         l1530 1B04                                           l1514 1A66  
                                         l1442 11AE                                           l1426 1096  
                                         l2162 5AD4                                           l2234 837E  
                                         l1098 3EEC                                           l1290 0CE0  
                                         l1266 0876                                           l1258 0754  
                                         l2139 4A60                                           l2091 4772  
                                         l1515 1A8A                                           l1451 13B2  
                                         l1443 11C0                                           l1435 1146  
                                         l1427 10BE                                           l2155 5A00  
                                         l1099 3F04                                           l1283 0AB0  
                                         l1275 094E                                           l2092 476E  
                                         l1532 1C18                                           l1516 1A92  
                                         l1508 19FA                                           l1444 18B6  
                                         l1452 13FC                                           l1436 1140  
                                         l1428 10CE                                           l2172 5B42  
                                         l2148 597A                                           l2260 7F88  
                                         l1292 0D60                                           l1268 08E0  
                                         l1356 82BE                                           l1533 1B88  
                                         l1517 1ACA                                           l1453 14DE  
                                         l1445 1248                                           l1429 10C8  
                                         l2165 5B0A                                           l2157 5A28  
                                         l2149 5976                                           l2253 8184  
                                         l2261 7FB8                                           l1269 08BC  
                                         l2182 40D0                                           l1390 366A  
                                         l1518 1AB0                                           l1470 1610  
                                         l1462 1556                                           l1446 1296  
                                         l1438 1186                                           l2174 5B86  
                                         l2166 5AEC                                           l2158 5AD6  
                                         l2254 817E                                           l2334 7A16  
                                         l1294 0DE0                                           l1278 09BA  
                                         l2183 40CC                                           l1391 3572  
                                         l1527 1C1E                                           l1471 1602  
                                         l1439 115A                                           l2175 5BAA  
                                         l2159 5A86                                           l1359 81DC  
                                         l2239 82CC                                           l2247 872A  
                                         l2335 79A4                                           l2263 7FD4  
                                         l2096 47BA                                           l2184 40E0  
                                         l1384 5802                                           l1456 1478  
                                         l1448 1304                                           l2176 5BD4  
                                         l2248 8720                                           l2336 7A0E  
                                         l2264 7FC4                                           l1288 0C8E  
                                         l2097 47B6                                           l2193 42FE  
                                         l1529 1C00                                           l1481 1708  
                                         l1449 1384                                           l2177 5BE0  
                                         l2329 86FA                                           l1810 6D84  
                                         l2194 42E0                                           l2186 4110  
                                         l1394 3638                                           l1490 18AC  
                                         l1482 16FA                                           l1474 1630  
                                         l1466 15C8                                           l2178 5BE2  
                                         l2099 4816                                           l2291 684C  
                                         l1811 6D74                                           l2187 410C  
                                         l1387 58F2                                           l1395 37BE  
                                         l1491 189E                                           l1475 1622  
                                         l1467 15E2                                           l2275 7A9C  
              ??_ADCC_DischargeSampleCapacitor 0100                                           l2292 6834  
                                         l2284 67CE                                           l1804 6CB6  
                                         l2188 4120                                           l1484 172C  
                                         l2276 7A34                                           l1821 7042  
                                         l2285 67DE                                           l2189 413E  
                                         l1397 3884                                           l1493 1906  
                                         l1485 1730                                           l1741 7624  
                                         l2277 7A70                                           l1822 7076  
                                         l2294 687E                                           l2286 67FC  
                                         l1806 6CD4                                           l1910 6A8A  
                                         l1486 1748                                           l1478 16EE  
                                         l1750 76EA                                           l1742 761E  
                                         l1823 70B4                                           l2295 6872  
                                         l1807 6D16                                           l1911 6AC4  
                                         l1495 192A                                           l1487 1892  
                                         l1479 165A                                           l1824 70F2  
                                         l2288 680E                                           l1816 6DA8  
                                         l1808 6D46                                           l1920 6B4C  
                                         l1912 6AEC                                           l1760 7AD4  
                                         l1488 17AA                                           l1744 7666  
                                         l2289 6802                                           l1817 6D9C  
                                         l1921 6B40                                           l1761 7AE4  
                                         l1497 19C8                                           l1914 6B28  
                                         l1498 1944                                           l1851 7480  
                                         l2299 689C                                           l1915 6B18  
                                         l1763 7B02                                           l1747 76B6  
                                         l1828 886A                                           l1860 7504  
                                         l1908 6A5E                                           l1764 7AFA  
                                         l1780 7E14                                           l1748 7678  
                                         l1853 74EC                                           l1781 7E1E  
                                         l1773 7DDA                                           l1862 752C  
                                         l1854 74DC                                           l1782 7E2C  
                                         l1774 7DE6                           _ADCC_StartConversion 8BFA  
                                         l1767 7B22                                           l1768 7B2C  
                                         l1776 7DFC                                           l1769 7B3A  
                                         l1777 7DF4                                           l1859 7510  
                                         l1968 8A2A                                           l1994 7B74  
                                         l1995 7B68                                           l1998 7BA8  
                                         l1999 7BB6                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC4  
                                         STR_2 FFAF                                           STR_3 FFB8  
                                         STR_4 F2FF                                           STR_6 FFAF  
                                         STR_7 FFB8                                           STR_9 FFBC  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 019D                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM 8270                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                         _Irms 00F6                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 83AA                ??_ADCC_HasAccumulatorOverflowed 0001  
                                         _Vrms 01BF                                           abs@a 0076  
                                         _acos 7EA6                                           _fabs 86A2  
               ringBufferLUT@max_current_print 039A                                           _atan 63AA  
                                         _asin 4DBC                                           _atoi 761C  
                                         _main 65E0                                           _line 0270  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                 __size_of_ADCC_ClearAccumulator 0006  
                                         _sqrt 53BA                                   i2___flneg@f1 002C  
                __end_of_ADCC_ClearAccumulator 8C48                                           sin@f 0088  
                                         sin@y 008C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 010A  
                              _timer5ReloadVal 01D7                                   i2___fltol@f1 006C  
                              ___fldiv@new_exp 014E                                __end_ofi2_scale 3D36  
                 __end_of_EUSART2_Transmit_ISR 8782                                __end_ofi2_putch 8C1E  
                                __CFG_CSWEN$ON 000000                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                readDoubleFromEEPROM@output_data 011D  
                     __size_ofi2_EUSART2_Write 004A                                          ??_abs 0078  
                    __size_of_DATAEE_WriteByte 003E                                _timer7ReloadVal 01D9  
                                        ??_sin 005E                           ?_writeDoubleToEEPROM 011B  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0124  
                             __end_of_HLVD_ISR 8C36                 __size_of_OSCILLATOR_Initialize 001C  
                __end_of_OSCILLATOR_Initialize 8AA8                       ?_terminal_textAttributes 01B2  
                            ??_TMR7_WriteTimer 0102                                          l15008 828A  
                                        l18240 115A                                          l18316 144A  
                                        l18308 13FC                                          l18236 1140  
                                        l19220 0A60                                          l19204 09E4  
                                        ?_acos 00A9                                          l17374 712A  
                                        l19222 0AB0                                          l19214 0A2A  
                                        l19054 024A                                          l19302 6EF8  
                                        l18336 155A                                          l19064 029A  
                                        l19312 6F1E                                          l18362 1602  
                                        ?_fabs 0030                                          l18460 198A  
                                        l18534 1C00                                          l18446 1948  
                                        l18368 1622                                          l18386 16FA  
                                        l18562 7FC4                                          l19480 810A  
                                        l18682 79A4                                          l18852 76B2  
                                        l19478 8100                                  ___fltol@sign1 0180  
                                        l18980 5BD4                                          ?_atan 007C  
                                        ?_asin 0091                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 011D                                __end_of___fladd 4A7E  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 5BFE                                          _ADREF 000F58  
                              __end_of___awdiv 7B44                                __end_of___flneg 887C  
                                        _ADPRE 000F5E                                          STR_10 FFC0  
                                        STR_11 FFF5                                          STR_12 FFC9  
                                        STR_20 FFC8                                          STR_13 FD34  
                                        STR_21 FFCB                                          STR_30 FF41  
                                        STR_14 FFDE                                          STR_22 FFD1  
                                        STR_15 FFE4                                          STR_23 FFD7  
                                        STR_31 FFCE                                          STR_40 F5C8  
                                        STR_16 FFF0                                          STR_24 FFDD  
                                        STR_32 FFD4                                          STR_41 FE0E  
                                        STR_17 FFF8                                          STR_25 FFE3  
                                        STR_33 FFDA                                          STR_18 FFC9  
                                        STR_42 FFAF                                          STR_26 FFE9  
                                        STR_34 FFE0                                          STR_50 FFB4  
                                        STR_43 FFB8                                          STR_19 FFFA  
                                        STR_27 FFEF                                          STR_35 FFE6  
                                        STR_51 FDC0                                          STR_28 FFEF  
                                        STR_36 FFEC                                          STR_44 FF9F  
                                        STR_60 FF66                                          STR_52 F91F  
                              __end_of___awmod 7E36                                          STR_29 FFFA  
                                        STR_45 FFAF                                          STR_37 FFF2  
                                        STR_61 FFA5                                          STR_53 FF50  
                                        STR_38 FFF2                                          STR_46 FFB8  
                                        STR_62 FF93                                          STR_70 FCF2  
                                        STR_54 F52F                                          STR_39 FFFC  
                                        STR_63 FF8C                                          STR_55 FF11  
                                        STR_71 FE64                                          STR_47 FE44  
                                        STR_64 FEE8                                          STR_80 FD9D  
                                        STR_72 FD4B                                          STR_48 F888  
                                        STR_56 F6CA                                          _ADRPT 000F66  
                                        STR_49 FF99                                          STR_57 FF71  
                                        STR_65 FEF6                                          STR_73 FDE2  
                                        STR_81 FB69                                          STR_82 FF1E  
                                        STR_66 FEB0                                          STR_90 FD60  
                                        STR_58 F60D                                          STR_74 F5CB  
                                        STR_67 FD20                                          STR_91 FBD3  
                                        STR_75 F9D8                                          STR_59 F7E8  
                                        STR_83 F73F                                          STR_68 FF7B  
                                        STR_84 FEBE                                          STR_92 FE92  
                                        STR_76 FE24                                          STR_77 FB1F  
                                        STR_85 FAFA                                          STR_69 F8EF  
                                        STR_93 F779                                          STR_94 FEA1  
                                        STR_78 FE83                                          STR_86 FCA6  
                                        STR_87 FBF5                                          STR_79 FB8D  
                                        STR_95 FAAB                                          STR_96 FE54  
                                        STR_88 FD75                                __end_of___flmul 43F0  
                                        STR_89 FBB1                                          STR_97 FA82  
                                        STR_98 FF44                                          STR_99 FA05  
                              __end_of___flsub 851A                                __end_of___fltol 753E  
                              __end_of___lldiv 7BC8                                          ?_sqrt 006C  
                              ___awdiv@divisor 011F                                __end_of___llmod 804E  
                                        u23020 4846                                          u23030 4856  
                                        u23200 49D0                                          u23040 4858  
                                        u24020 7B78                                          u23230 49E8  
                                        u23070 489A                                          _T5CLK 000FC6  
                                        u23400 42A2                                          u25000 81A6  
                                        u24050 800A                                          u24130 6888  
                                        u24210 0F82                                          u24300 10FC  
                                        u24220 0FBE                                          u25100 8304  
                                        u23405 4298                                          u24310 1102  
                                        u24230 0FC6                                          u25030 79D6  
                                        u25007 819C                                          u23280 4A3E  
                                        u23600 7E00                                          u24240 0FE8  
                                        _T5CON 000FC3                                          u24217 0F78  
                                        u25121 80BE                                          u23450 4332  
                                        u24307 10F2                                          u24227 0FB4  
                                        u23540 7B06                                          u24500 144A  
                                        u24260 1038                                          u24180 0EFE  
                                        u26020 6F1E                                          u23390 412C  
                                        u24270 1076                                          u24190 0F26  
                                        u24247 0FDE                                          u25135 8692  
                                        _T7CLK 000F33                                          u23800 6B52  
                                        u23480 4388                                          u24600 163E  
                                        u24360 117C                                          u25080 820C  
                                        _T6CON 000FB1                                          u23721 6A42  
                                        u23490 43A6                                          u25410 5B3E  
                                        u25170 7AB4                                          u24267 102E  
                                        u24187 0EF4                                          u24540 1598  
                                        u24460 13C2                                          u24380 11F6  
                                        u23741 6A6E                                          u24277 106C  
                                        u24197 0F1C                                          u24630 1716  
                                        u24470 140E                                 __CFG_DEBUG$OFF 000000  
                                        u24367 1172                                          u17415 8662  
                                        u24640 1726                                          u25440 5B94  
                                        u17416 8664                                          _T7CON 000F30  
                                        u25450 5BB8                                          u25530 010A  
                                        u24387 11EC                                          u24900 1AE8  
                                        u23950 749E                                          u23870 6DAE  
                                        u24920 1C30                                          u24930 1C60  
                                        u23955 7494                                          u25580 029A  
                                        _T6HLT 000FB2                                          u26277 65F4  
                                        u23990 7516                                          u24937 1C56  
                   _ADCC_ADTI_InterruptHandler 0262                                          u24890 1AD2  
                                        u25850 0A2A                                          u25860 0A52  
                                        u25870 0A60                                          i1l223 007C  
                                        i1l225 009C                                          i1l403 877C  
                                        i1l227 00A8                                          i1l404 8778  
                                        i1l229 00B2                                          i2l212 775E  
                                        i2l214 776A                                          i2l216 7774  
                                        i1l640 89B8                                          i2l410 77F0  
                                        i2l411 7812                                          i2l414 7816  
                                        i2l416 7866                                          i2l409 77CC  
                                        _T6TMR 000FAF                                          i2l391 845E  
                                        i2l392 8484                                          i2l393 8482  
                                        i2l714 8ABA                                          _T6RST 000FB4  
                                        i2l388 8448                                          i2l389 8444  
                                        i1l965 8624                                          i2l970 2A3E  
                                        i2l971 2AC8                                          i2l980 2BE2  
                              ___awdiv@counter 0121                                          i2l981 2CA0  
                                        i2l991 30FC                                          i2l984 2CA8  
                                        i2l976 2AD0                                          i2l969 33E2  
                                        i2l985 2F9E                                          i2l977 2BDA  
                                        i2l994 3104                                          i2l986 2EEC  
                                        i2l995 31E6                                          i2l987 2E04  
                                        i2l989 2F44                                          i2l998 31EE  
                                        i2l999 33CC                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 6DC0                                          _TRISA 000F81  
                                        _TRISB 000F82                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a E9A3  
                           __end_ofsin@coeff_b E9C7                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                        _Imeas 01C3                                  __CFG_WRT3$OFF 000000  
                                __CFG_PWRTE$ON 000000                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 006B                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 87EA  
                             __end_of_TMR6_ISR 8952                               __end_of_TMR7_ISR 87B6  
                              _DATAEE_ReadByte 8AC4                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 01B8  
                              __end_of_dpowers E953                                          acos@x 00A9  
                                        fabs@d 0030                                     i2scale@scl 0051  
                                        _floor 724E            writeDoubleToEEPROM@starting_address 011F  
                                        _frexp 7D4A                                          _errno 026E  
                        ?_ADCC_StartConversion 0001                                          _scale 3412  
                              __end_of_isdigit 8A32                                          atan@f 007C  
                                        atan@x 0084                                          atan@y 0080  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 0020                                          asin@x 0091  
                                        asin@y 00A1                                          atoi@a 0122  
                                        atoi@s 011D                                          _putch 8B98  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge 724E  
                                        sin@x2 0094                                          tablat 000FF5  
                             __end_ofi2___wmul 89EC                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                                          wtemp6 0060  
                                i2___flmul@grs 003E                                __end_of_strncmp 7A32  
                              __end_of_strncpy 7FE6                               __end_ofi2_fround 6160  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___fladd 033E  
                           __size_ofi2___fldiv 02B4                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0129                             __size_ofi2___flmul 0350  
                                i2printf@width 00AB                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DE                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf 2A32                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 8BDE  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 8BD0  
                              _TMR5_Initialize 83F6                                __initialization 7910  
                            i2___lldiv@divisor 0005                                   __end_of_acos 7F14  
                                 __end_of_fabs 86DE                                   __end_of_atan 65E0  
                                 __end_of_asin 50C0                                   __end_of_atoi 76F4  
                                 __end_of_main 678C                              i2___lldiv@counter 000D  
                             _max_Irms_address E975                                   __end_of_sqrt 5682  
                                   i2printf@ap 0099                                     i2printf@cp 0095  
                        ??_writeDoubleToEEPROM 0121                          __end_of_ringBufferLUT 0EA0  
                               __CFG_SCANE$OFF 000000                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                       ??_acos 005E                                         ??_fabs 0034  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 02EA  
                     _TMR5_SetInterruptHandler 8BC2                                         ??_sqrt 0070  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0125                                _TMR6_Initialize 87EA  
                           _TRIAC_Firing_Angle 00F2                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 7F7E  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01E1                                         ?_floor 0076  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 FECC                                         _ADLTHL 000F6A  
                                       STR_101 FC6F                                         STR_102 FC52  
                                       STR_110 F4D9                                         STR_103 FDD1  
                                       STR_111 F473                                         STR_120 FDF3  
                                       STR_104 FC15                                         STR_112 F97C  
                                       STR_113 FB44                                         STR_121 F8BC  
                                       STR_105 F81E                                         STR_122 FF5B  
                                       STR_130 FC34                                         STR_106 FA2F  
                                       STR_114 F64D                                         _ADRESH 000F64  
                                       STR_107 FF2B                                         STR_123 F9AA  
                                       STR_115 F584                                         STR_131 FF38  
                                       STR_124 FFAA                                         STR_116 FE34  
                                       STR_108 FCC0                                         STR_132 FF04  
                                       STR_140 FC8B                                         STR_109 FCD9  
                                       STR_117 F705                                         STR_125 E9C7  
                                       STR_133 FF7B                                         STR_141 FD36  
                                       STR_118 FEDA                                         STR_126 F7B1  
                                       _ADRESL 000F63                                         STR_142 FD0A  
                                       STR_134 FE04                                         STR_143 FE04  
                                       STR_119 F853                                         STR_127 F68C  
                                       STR_135 FE74                                         STR_144 FF85  
                                       STR_128 FAD3                                         STR_136 FE14  
                                       STR_145 FDAF                                         STR_129 F94E  
                                       STR_137 FD8A                                         STR_138 FA62  
                                       STR_139 FA59                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                         _readDoubleFromEEPROM 81CC                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1002 33D4  
                                       i2l2100 4B18                                         i2l2004 806C  
                                       i2l2005 8060                                         i2l2110 4BF4  
                                       i2l2103 4BD0                                         i2l2104 4BAE  
                                       i2l2200 4686                                         i2l2008 8094  
                                       i2l2113 4C18                                         i2l2105 4BBC  
                                       i2l2009 80A2                                         i2l1401 1C7C  
                                       i2l2122 4CEA                                         i2l2114 4C1C  
                                       i2l2106 4BC0                                         i2l2202 46CA  
                                       i2l1410 1D06                                         i2l1402 1C8E  
                                       i2l2131 4D2A                                         i2l2203 46E8  
                                       i2l2140 4DA0                                         i2l2124 4D00  
                                       i2l2300 6A1E                                         i2l2220 54EA  
                                       i2l1420 1E58                                         i2l1412 1E4A  
                                       i2l1404 1CAA                                         i2l2117 4CB6  
                                       i2l2109 4C2E                                         i2l2205 470C  
                                       i2l2221 5594                                         i2l2213 53FC  
                                       i2l1421 1FFE                                         i2l1413 1E1E  
                                       i2l1405 1CA2                                         i2l2134 4D70  
                                       i2l2126 4D0A                                         i2l2206 472A  
                                       i2l2222 54F0                                         i2l1510 27E0  
                                       i2l1414 1DCC                                         i2l2119 4CC6  
                                       i2l2223 5536                                         i2l2215 540C  
                                       i2l1511 2802                                         i2l1503 27A4  
                                       i2l2160 5D62                                         i2l2152 5C6E  
                                       i2l2224 555E                                         i2l2216 5426  
                                       i2l1504 274C                                         i2l1432 1EEA  
                                       i2l1424 1E5C                                         i2l2305 7298  
                                       i2l2153 5C6A                                         i2l1513 2824  
                                       i2l1417 1F90                                         i2l1441 1F64  
                                       i2l1433 1F00                                         i2l2138 4D96  
                                       i2l2314 7D68                                         i2l2306 7286  
                                       i2l2162 5D88                                         i2l2226 5648  
                                       i2l2218 5460                                         i2l1530 28CA  
                                       i2l1514 282C                                         i2l1442 1F78  
                                       i2l1426 1E60                                         i2l2139 4D9E  
                                       i2l2091 4AB0                                         i2l2155 5CB4  
                                       i2l2083 50F4                                         i2l2219 548C  
                                       i2l1515 2850                                         i2l1451 2178  
                                       i2l1443 1F8A                                         i2l1435 1F10  
                                       i2l1427 1E88                                         i2l2092 4AAC  
                                       i2l2308 72B6                                         i2l2172 5DF6  
                                       i2l2148 5C2E                                         i2l2084 5212  
                                       i2l1532 29DC                                         i2l1516 2858  
                                       i2l1508 27C0                                         i2l1444 267C  
                                       i2l1452 21C4                                         i2l1436 1F0A  
                                       i2l1428 1E98                                         i2l2309 734E  
                                       i2l2165 5DBE                                         i2l2157 5CDC  
                                       i2l2149 5C2A                                         i2l2085 5282  
                                       i2l1533 294C                                         i2l1517 2890  
                                       i2l1453 22A8                                         i2l1445 2012  
                                       i2l1429 1E92                                         i2l2182 4420  
                                       i2l2174 5E3A                                         i2l2166 5DA0  
                                       i2l2158 5D8A                                         i2l2086 53A8  
                                       i2l1390 3AFA                                         i2l1518 2876  
                                       i2l1470 23DA                                         i2l1462 2320  
                                       i2l1446 2060                                         i2l1438 1F50  
                                       i2l2183 441C                                         i2l2175 5E5E  
                                       i2l2159 5D3A                                         i2l1703 63EE  
                                       i2l1391 3A0A                                         i2l1527 29E2  
                                       i2l1471 23CC                                         i2l1439 1F24  
                                       i2l2096 4AF8                                         i2l2184 4430  
                                       i2l2176 5E88                                         i2l1800 86CC  
                                       i2l1384 6024                                         i2l1456 2240  
                                       i2l1448 20CC                                         i2l2097 4AF4  
                                       i2l2193 464E                                         i2l2177 5E94  
                                       i2l1705 645A                                         i2l1529 29C4  
                                       i2l1481 24D0                                         i2l1449 214A  
                                       i2l2194 4630                                         i2l2186 4460  
                                       i2l2178 5E96                                         i2l1706 65A2  
                                       i2l1810 6EAC                                         i2l1394 3ACA  
                                       i2l1490 2672                                         i2l1482 24C2  
                                       i2l1474 23FA                                         i2l1466 2392  
                                       i2l2099 4B54                                         i2l2187 445C  
                                       i2l2291 699C                                         i2l1811 6E9C  
                                       i2l1387 610C                                         i2l1395 3C46  
                                       i2l1491 2664                                         i2l1475 23EC  
                                       i2l1467 23AC                                         i2l2188 4470  
                                       i2l2292 6984                                         i2l2284 691E  
                                       i2l1708 65BA                                         i2l1804 6DDE  
                                       i2l1484 24F4                                         i2l2189 448E  
                                       i2l1821 7162                                         i2l2285 692E  
                                       i2l1397 3D06                                         i2l1493 26CC  
                                       i2l1485 24F8                                         i2l1822 7196  
                                       i2l2294 69CE                                         i2l2286 694C  
                                       i2l1806 6DFC                                         i2l1910 6BBC  
                                       i2l1486 2510                                         i2l1478 24B6  
                                       i2l1823 71D4                                         i2l2295 69C2  
                                       i2l1807 6E3E                                         i2l1911 6BF6  
                                       i2l1495 26F0                                         i2l1487 2658  
                                       i2l1479 2424                                         i2l1824 7212  
                                       i2l2288 695E                                         i2l1816 6ED0  
                                       i2l1808 6E6E                                         i2l1920 6C7E  
                                       i2l1912 6C1E                                         i2l1760 7BDC  
                                       i2l1488 2572                                         i2l2289 6952  
                                       i2l1817 6EC4                                         i2l1921 6C72  
                                       i2l1761 7BEC                                         i2l1497 278E  
                                       i2l1586 88F8                                         i2l1914 6C5A  
                                       i2l1498 270A                                         i2l1851 755E  
                                       i2l2299 69EC                                         i2l1915 6C4A  
                                       i2l1763 7C0A                                         i2l1860 75E2  
                                       i2l1828 88C6                                         i2l1684 4E16  
                                       i2l1908 6B90                                         i2l1764 7C02  
                                       i2l1780 7E84                                         i2l1853 75CA  
                                       i2l1781 7E8E                                         i2l1773 7E4A  
                                       i2l1862 760A                                         i2l1854 75BA  
                                       i2l1686 4F3E                                         i2l1782 7E9C  
                                       i2l1774 7E56                                         i2l1687 501E  
                                       i2l1767 7C2A                                         i2l1768 7C34  
                                       i2l1776 7E6C                                         i2l1769 7C42  
                                       i2l1777 7E64                                         i2l1794 7444  
                                       i2l1795 73AC                                         i2l1859 75EE  
                                       i2l1968 8A68                                         i2l1994 7C7A  
                                       i2l1995 7C6E                                         i2l1998 7CAE  
                                       i2l1999 7CBC                                         _RG7PPS 000E89  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 004D  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                               __end_of___xxtofl 68E0  
        __end_of_ADCC_DischargeSampleCapacitor 8C2E         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor 8C26                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A          __end_of_ADCC_HasAccumulatorOverflowed 8C14  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed 8C08  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 8310  
                                 i2_scale$4142 004D                               __end_of__powers_ E8F7  
              __end_of_terminal_ringBufferPull 700C                                         ___flge 700C  
                            _ADCC_ThresholdISR 8952                                      ??___fladd 0131  
                                       ___wmul 8902                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 017C                                      ??___lldiv 011F  
                                    ??___llmod 012C                             ?_ADCC_ThresholdISR 0001  
                     ??_terminal_setCursorHome 01B2                                         _fround 5682  
                                       clear_0 7968                                         clear_1 7974  
                                       clear_2 7980                           _eusart2RxStringReady 07D8  
                             ___awdiv@quotient 0123                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0119  
                               i2___fldiv@sign 001F                                ___awmod@counter 011B  
                                       _printf 0EA0                                         _strcat 835E  
                                       _strchr 86DE                        __end_of_DATAEE_ReadByte 8ADE  
                                       _strcmp 82C0                                         _strcpy 8716  
                                       _strlen 8174                                 i2___awdiv@sign 000C  
                                       _strstr 7A32                                         floor@i 007A  
                                       floor@x 0076                   getCauseOfResetString@strings 02B0  
                             _background_color 01DC                                _ADCC_Initialize 8114  
                            ??i2_EUSART2_Write 0001                      _ADCPostProcessingCallback 2A32  
                               _PMD_Initialize 8A70                        FLASH_ReadWord@flashAddr 011B  
                            __end_ofi2___fladd 4DBC                                      ??_isdigit 0117  
                            __end_ofi2___fldiv 5EB2                              __end_ofi2___awdiv 7C4C  
                            __end_ofi2___flneg 88D8                              __end_ofi2___awmod 7EA6  
                            __end_ofi2___flmul 4740                              __end_ofi2___flsub 8562  
                            __end_ofi2___fltol 761C                              __end_ofi2___lldiv 7CCE  
                                       sin@sgn 0098                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod 80B4                                   __mediumconst E8C2  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                            _ADCC_StopConversion 8C4E  
                         _EUSART2_Transmit_ISR 874C                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
 ADCC_SetADTIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 00B5                          ?_readDoubleFromEEPROM 0119  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01B2                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 0014                                _eusart2RxBuffer 0200  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                      __end_of_TMR5_Initialize 8440                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit 8A70                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize 887C                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler 8C54          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 8C52                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 7998  
                               i2___fltol@exp1 0075                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 009B  
                           ?_SYSTEM_Initialize 0001                                   eval_poly@res 0078  
                                ___rparam_used 000001                                     ___fltol@f1 0178  
                              _TMR5_WriteTimer 8AA8                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR 897A                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 02E4                            __size_ofi2___xxtofl 0150  
                   __end_of_getMajorRevisionID 86A2                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01B2  
                                 __pidataBANK0 8C36                                   __pidataBANK1 8C5A  
                                 __pidataBANK2 89EC                            ??_SYSTEM_Initialize 011C  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                               _DATAEE_WriteByte 8628  
                                __end_of_floor 7360                                  __end_of_frexp 7DC4  
                                __end_of_scale 38B6                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 8BA6                              ??_HLVD_Initialize 0117  
                                  i2printf@idx 0094                       ??_terminal_clearTerminal 01B2  
                                  i2printf@len 0097                                    i2printf@exp 009F  
                                  i2printf@val 00A1                        __end_of_TMR6_Initialize 881C  
                     __size_of_getCauseOfReset 0052                         __end_of_PMD_Initialize 8A8C  
                        _getCauseOfResetString 881C                                      ?i2___flge 0034  
                         __end_of_EUSART2_Read 84D2                                      ?i2___wmul 0001  
                                i2__tdiv_to_l_ 6B64                                     __div_to_l_ 6C96  
                    __size_ofi2_TMR7_StopTimer 0006                             __size_of_getUserID 0044  
                                    ?i2_fround 0049                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                                      ?i2_printf 0088  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0124  
                                      ??_floor 005E                                __div_to_l_@cntr 0123  
                                      ??_frexp 0007                                        ??_scale 0173  
                    __end_of_SYSTEM_Initialize 88AA                                __div_to_l_@quot 011F  
                                      ??_putch 0118                                   peakToRMS@RMS 00C5  
                           i2___lldiv@quotient 0009                                  _eusart2RxHead 00FA  
                                _eusart2TxHead 01E3                                     __pbssBANK0 00F6  
                                   __pbssBANK1 01BB                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                  _eusart2RxTail 01E0  
                                _eusart2TxTail 01E2                             __size_of_eval_poly 0100  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 835E                             __size_of_peakToRMS 024A  
                                   ??_HLVD_ISR 0100                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011B  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 89A0  
                        ??_ADCC_StopConversion 0001                               ??_FVR_Initialize 0117  
                               _peakToRMS$4127 00C1                                 _peakToRMS$4128 00B9  
                               _peakToRMS$4129 00BD                          ringBufferLUT@arg_buff 03A2  
                                  _Irms_offset 02C8                                        ?___flge 0117  
               ?_ADCC_DischargeSampleCapacitor 0001              terminal_ringBufferPull@index_2412 02E6  
                                      ?___wmul 0117                          _currentMeasuredToPeak 7CCE  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 8BC2  
                      __end_of_ADCC_Initialize 8174                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
               ?_ADCC_HasAccumulatorOverflowed 0001                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                   ringBufferLUT@max_Power_print 039E  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler 8BFA  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler 8BEC  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 0182  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue 8B0C  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte 8ADE  
                                      ?_strstr 0126                               ?_DATAEE_ReadByte 0117  
                                   ??i2___wmul 0005                                 _FLASH_ReadWord 85A6  
                                      u1720_41 6B74                                        u1722_41 6BA0  
                                      i2l11036 724A                                        i2l11964 5E88  
                                      i2l14624 2212                                        i2l14616 21C4  
                                      i2l14544 1F0A                                        i2l14644 2324  
                                      i2l14548 1F24                                        i2l14670 23CC  
                                      i2l14842 29C4                                        i2l14754 270E  
                                      i2l14676 23EC                                        i2l14694 24C2  
                                      i2l14768 2750                writeDoubleToEEPROM@input_double 011B  
                                    ?___xxtofl 0117                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 786E                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 008A                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                         ??_readDoubleFromEEPROM 011D  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
                     _acquisitionTimerCallback 8B46                       __end_of_max_Irms_address E977  
                      __end_of_TMR5_WriteTimer 8AC4               __size_of_terminal_textAttributes 0368  
                                      i2_scale 38B6                               ?_TMR5_Initialize 0001  
                         DATAEE_WriteByte@bAdd 0117                           ?_ADCC_GetFilterValue 0001  
                                      i2_putch 8C14                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset 8B46          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 8B34                              __end_of__npowers_ E92B  
                                      __Hparam 0000                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$3939 0173                                        __Lparam 0000  
                            __end_of_getUserID 85A6                          _ADCC_ClearAccumulator 8C42  
                   ??_TMR5_SetInterruptHandler 011A                                 _adc_error_flag 02F0  
                              __size_of___flge 0122                                        ___fladd 4740  
                                      ___fldiv 5948                                        ___awdiv 7ABE  
                                      ___flneg 884C                                        ___awmod 7DC4  
                                      ___flmul 409E                                        ___flsub 84D2  
                                      ___fltol 7460                                        ___lldiv 7B44  
                              __size_of___wmul 0028                                        ___llmod 7FE6  
                       __end_of_FLASH_ReadByte 8AF8                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord 85E8                                        __pcinit 7910  
                            __end_of_eval_poly 7460                                __size_of_fround 02C6  
                             ?_TMR6_Initialize 0001                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                        __ptext0 65E0  
               readDoubleFromEEPROM@byte_index 0121                                        __ptext1 8270  
                                      __ptext2 8628                                        __ptext3 8B58  
                                      __ptext4 6EE8                                        __ptext5 0000  
                                      __ptext6 8B34                                        __ptext7 3D36  
                                      __ptext8 7F7E                                        __ptext9 835E  
                            __end_of_peakToRMS 63AA                                __size_of_printf 0DCE  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 0396  
                ?_ADCC_SetADTIInterruptHandler 0117                                __size_of_strcat 004C  
                                i2_fround$4140 0051                                  i2_fround$4141 004D  
                              __size_of_strchr 0038                                __size_of_strcmp 0050  
                              __size_of_strcpy 0036                                __size_of_strlen 0058  
                            __end_of_hexpowers E973                         getCauseOfResetString@r 0119  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers E92B                          _OSCILLATOR_Initialize 8A8C  
                       ??_EUSART2_Transmit_ISR 0100                                   __size_of_abs 002A  
                                 i2fround@prec 0055                                        _isdigit 8A10  
                              atan@val_squared 0089                                   __size_of_sin 02FA  
                                 ??i2___xxtofl 0009                                     ??___xxtofl 011B  
                             ___awmod@dividend 0117                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 008D                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 03A7                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002E                          i2EUSART2_Write@txData 0001  
                                      _strncmp 79A2                                 __pintcode_body 76F4  
                                      _strncpy 7F7E                           end_of_initialization 7998  
                      __end_of_TMR7_WriteTimer 89C6                        getDeviceIDString@F17550 02C2  
                       _terminal_setCursorHome 8B58                          ??_ADCC_GetFilterValue 0003  
                                    _PCON0bits 000FD7                               ?_TMR7_Initialize 0001  
                                    i1u1102_20 85F4                                      i1u1103_28 85F8  
                                      int_func 76F4                            i2___wmul@multiplier 0001  
                                    _T6RSTbits 000FB4                                      i1u2600_28 87A2  
                                    i1u2617_28 0086                        __size_of_TMR7_StopTimer 0006  
                                    i2u1304_40 4B84                                      i2u1305_40 4B94  
                                    i2u1330_40 4D7C                                      i2u1322_40 4D0E  
                                    i2u1306_40 4B96                                 i2___xxtofl@arg 000F  
                                    i2u1325_40 4D26                                      i2u1309_40 4BD8  
                                    i2u1341_40 447C                                      i2u1350_40 46D8  
                                    i2u1342_40 45F2                                      i1u2598_28 893E  
                                    i2u1342_45 45E8                                      i2u1351_40 46F6  
                               i2___xxtofl@exp 000E                                 i2___xxtofl@val 0005  
                                    i2u1530_40 757C                                      i2u1450_40 5DF2  
                                    i2u1530_45 7572                                      i2u1347_40 4682  
                                    i2u1453_40 5E48                                      i2u1534_40 75F4  
                                    i2u1542_40 69D8                                      i2u1454_40 5E6C  
                                    i2u1528_40 7D90                                      i2u1528_48 7D92  
                                    i2u1634_40 72A4                                      i2u1811_40 1E02  
                                    i2u1803_40 1CCC                                      i2u1811_47 1DF8  
                                    i2u1803_47 1CC2                                      i2u1732_40 7C7E  
                                    i2u1812_40 1E40                                      i2u1804_40 1CF4  
                                    i2u1812_47 1E36                                      i2u1804_47 1CEA  
                                    i2u1493_40 641A                                      i2u1661_40 7E70  
                                    i2u1821_40 1F46                                      i2u1821_47 1F3C  
                                    i2u1638_40 520E                                      i2u1494_40 641C  
                                    i2u1806_40 1D4E                                      i2u1806_47 1D44  
                                    i2u1639_40 5210                                      i2u1743_40 2ABA  
                                    i2u1735_40 8070                                      i2u1719_40 6ED6  
                                    i2u1655_40 7C0E                                      i2u1831_40 218A  
                                    i2u1823_40 1FC0                                      i2u1815_40 1EC6  
                                    i2u1807_40 1D8A                                      i2u1823_47 1FB6  
                                    i2u1815_47 1EBC                                      i2u1807_47 1D80  
                                    i2u1664_40 8C10                                      i2u1728_40 6C84  
                                    i2u1832_40 21D6                                      i2u1816_40 1ECC  
                                    i2u1808_40 1D92                                      i2u1753_40 30EE  
                                    i2u1809_40 1DB4                                      i2u2608_48 7748  
                                    i2u1809_47 1DAA                                      i2u1746_40 2BCC  
                                    i2u1755_40 31D8                                      i2u1835_40 2212  
                                    i2u1748_40 2C92                                      i2u1757_40 33BE  
                                    i2u1845_40 2408                                      i2u1839_40 2362  
                                    i2u1848_40 24DE                                      i2u1849_40 24EE  
                                    i2u1874_40 2898                                ___lldiv@divisor 011B  
                                    i2u1875_40 28AE                                      i2u1891_40 7806  
                                    i2u2594_48 87D6                                      i2u2596_48 8966  
                                    i2u1877_40 29F4                    __end_of_writeDoubleToEEPROM 82C0  
                                    i2u1878_40 2A24                                      i2u1878_47 2A1A  
                              ___lldiv@counter 011F                             _EUSART2_Initialize 7F14  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0099  
                  getDeviceIDString@inputDevID 0124                                i2_EUSART2_Write 8440  
                                ??_getDeviceID 0124                                        printf@c 01B1  
                                      printf@f 0182                       ??_heartbeatTimerCallback 0100  
                           __end_ofi2___xxtofl 6A30                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0048                 _ADCPostProcessingCallback$4130 00D6  
               _ADCPostProcessingCallback$4131 00DA                 _ADCPostProcessingCallback$4132 00C9  
               _ADCPostProcessingCallback$4133 00CD                 _ADCPostProcessingCallback$4134 00D1  
                             ?_ADCC_Initialize 0001                                        sqrt@grs 007B  
                                      sqrt@exp 007F                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0117  
                          ?_EUSART2_Initialize 0001                                        strlen@s 0117  
                 terminal_ringBufferPull@index 02E8                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler 8BB4  
                        _TMR5_InterruptHandler 025C                               i2_TMR7_StopTimer 8C48  
                     ?_terminal_ringBufferPull 0001                                    ___fladd@grs 013C  
                         __CFG_WDTCCS$LFINTOSC 000000                                  ___xxtofl@sign 011F  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0074                                      i2___fladd 4A7E  
                                    i2___fldiv 5BFE                                      i2___awdiv 7BC8  
                                    i2___flneg 88AA                                      i2___awmod 7E36  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 43F0  
                                    i2___flsub 851A                                      i2___fltol 753E  
                                    i2___lldiv 7C4C                                      i2___llmod 804E  
                     __end_of_DATAEE_WriteByte 8666                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 8B78  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 0EA0  
                                  ___flmul@grs 0165                                    printf@width 01AD  
                                 _EUSART2_Read 848A                             i2___llmod@dividend 000E  
                              _HLVD_Initialize 8B88                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit 8A52  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0008  
                                    _Avg_Power 01BB                   __end_of_INTERRUPT_Initialize 8B0C  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 712E                  __end_of_terminal_printNewline 8B78  
                               __end_of___wmul 892A                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID 8A52                                 __end_of_fround 5948  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                               i2___wmul@product 0005  
                               __end_of_printf 1C6E                                  i2_printf$4143 0090  
                           _getMajorRevisionID 8666                                 __end_of_strcat 83AA  
                               __end_of_strchr 8716                                 __end_of_strcmp 8310  
                                 i2printf@flag 00A9                                 __end_of_strcpy 874C  
                               __end_of_strlen 81CC                                   i2printf@fval 00A5  
                               __end_of_strstr 7ABE                                   i2printf@prec 00AD  
                            __size_ofi2___flge 0120                            start_initialization 7910  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 8C58  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 8C56  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 6B64  
                                  __end_of_abs 8902                                    __end_of_sin 53BA  
                                    i2printf@c 00AF                                      i2printf@f 0088  
                      _terminal_textAttributes 3D36                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                              __size_ofi2_printf 0DC4  
                        __end_of_EUSART2_Write 83F6                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 02D5  
                      __end_ofi2_EUSART2_Write 848A                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                            DATAEE_ReadByte@bAdd 0117  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 01E4  
                             __CFG_LPBOREN$OFF 000000                                       ??___flge 011F  
                             ??_PMD_Initialize 0117                                       ??___wmul 011B  
              __size_of_heartbeatTimerCallback 0040                           ??_getMajorRevisionID 0122  
                                  __pdataBANK0 00F0                                    __pdataBANK1 01E8  
                                  __pdataBANK2 02B0                                       ??_fround 0173  
                                _ringBufferLUT 0000                 ??_terminal_textAttributesReset 01B4  
                                     ??_printf 018C              getCauseOfReset@return_reset_cause 0117  
         readDoubleFromEEPROM@starting_address 0119                              _POS3P3_ADC_Result 01CF  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 00B1                     __end_of_getMinorRevisionID 89A0  
                                     ??_strstr 012A                                      ___fladd@a 012D  
                                    ___fladd@b 0129                                      _Vpk_const 02CC  
                                   fround@prec 017B                                 _eusart2RxCount 01DF  
                                ?i2__div_to_l_ 0001                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$4135 00AD  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 02D4                                  __pcstackBANK3 0380  
                            __size_of___xxtofl 0154                                   _isdigit$3225 0118  
                ?_TMR5_DefaultInterruptHandler 0001                        __end_of_HLVD_Initialize 8B98  
                          EUSART2_Write@txData 0117                                   _load_on_time 0248  
                  __end_of_ADCC_StopConversion 8C52                                       ?i2_scale 0049  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$4136 00A5  
                                    _asin$4137 009D                                      _asin$4138 0099  
                                     ?i2_putch 0001                                     sin@coeff_a E98F  
                                   sin@coeff_b E9B7                                 _TMR7_StopTimer 8C3C  
                        _TMR6_InterruptHandler 0265                                      __pnvBANK2 02EC  
                  getMinorRevisionID@REVID_RAW 0122                         _PIN_MANAGER_Initialize 786E  
                      ??_getCauseOfResetString 0119                                      __pintcode 0008  
                                  _getDeviceID 8A32                                  __pmediumconst E8C2  
                                     ?___fladd 0129                                       ?___fldiv 013D  
                                     ?___awdiv 011D                                      __ptext100 804E  
                                    __ptext101 7C4C                                      __ptext110 63AA  
                                    __ptext102 8952                                       ?___flneg 0125  
                                    __ptext111 86A2                                      __ptext103 8C58  
                                    __ptext120 712E                                      __ptext112 7CCE  
                                    __ptext104 2A32                                      __ptext121 7D4A  
                                    __ptext113 50C0                                      __ptext105 8C48  
                                    __ptext130 0000                                      __ptext122 7360  
                                    __ptext114 851A                                      __ptext106 6160  
                                    __ptext123 43F0                                      __ptext115 88AA  
                                    __ptext107 7EA6                                      __ptext124 4A7E  
                                    __ptext116 5BFE                                      __ptext108 4DBC  
                                    __ptext125 88D8                                      __ptext117 724E  
                                    __ptext109 53BA                                      __ptext126 8C4E  
                                    __ptext118 68E0                                      __ptext127 8C08  
                                    __ptext119 753E                                      __ptext128 8B0C  
                                    __ptext129 8B20                                       ?___awmod 0117  
                                     ?___flmul 0156                                       ?___flsub 013D  
                                     ?___fltol 0178               __end_of_TMR7_SetInterruptHandler 8BB4  
                                     ?___lldiv 0117                                       ?___llmod 0124  
                                    __npowers_ E8F7                                _getCauseOfReset 821E  
                               ?_ringBufferLUT 01B4                                      _getUserID 8562  
            _EUSART2_TxDefaultInterruptHandler 026B                                    __pintcodelo 0018  
                         _VCC_overvoltage_flag 02F2                                    __tdiv_to_l_ 6A30  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 01CB                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                    _dev_on_time 024C  
                                    _eval_poly 7360                      ??_terminal_textAttributes 01B4  
                                    _max_Power 0240                                      _attribute 01DE  
                                    _peakToRMS 6160                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers E953  
                       _heartbeatTimerCallback 85E8                                 _dimming_period 00F0  
                                  ??i2___fladd 0060                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0030  
                                  ??i2___awmod 0005                                    ??i2___flmul 0038  
                               __size_of_floor 0112                                    ??i2___flsub 005E  
                                  ??i2___fltol 0070                                 __size_of_frexp 007A  
                                  ??i2___lldiv 0009                                 __size_of_scale 04A4  
                                  ??i2___llmod 0016                       __size_of_DATAEE_ReadByte 001A  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                __size_of_readDoubleFromEEPROM 0052                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 8AF8                         __end_of_TMR7_StopTimer 8C42  
                                     _T6CLKCON 000FB3         terminal_textAttributes@input_attribute 01B3  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00AE                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 00A1                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR 8C2E                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0088  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                     __end_ofi2_TMR7_StopTimer 8C4E                                       _PIE2bits 000E2B  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 6DC0                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                              i2___fldiv@new_exp 0024  
                                     _TMR5_ISR 87B6                                       _TMR6_ISR 892A  
                                     _TMR7_ISR 8782                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 0122  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 712E  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul 89C6                        __size_of_FVR_Initialize 0008  
                                   printf@flag 01AB                                     printf@fval 01A3  
                                   printf@prec 01AF                                     ?_eval_poly 006C  
               __end_of_terminal_setCursorHome 8B68                              i2___awdiv@divisor 0009  
                                     i2_fround 5EB2              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 00B1                  writeDoubleToEEPROM@byte_index 0125  
                            i2___awdiv@counter 000B                    __end_of_ADCC_GetFilterValue 8B20  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                        DATAEE_WriteByte@bData 0119                                       i2_printf 1C6E  
                          __end_ofatan@coeff_a E98F                            __end_ofatan@coeff_b E9B7  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                            _max_Power_address E973                                      copy_data0 7924  
                                    copy_data1 7956                               ?_HLVD_Initialize 0001  
                        ?_INTERRUPT_Initialize 0001                            _current_adc_channel 01DB  
                           i2___awmod@dividend 0001                                ?_TMR7_StopTimer 0001  
                            ?_DATAEE_WriteByte 0117                        ??_ADCC_ClearAccumulator 0100  
             __size_of_terminal_ringBufferPull 0124                               __size_ofi2_scale 0480  
               ??_TMR5_DefaultInterruptHandler 0001                             ??_DATAEE_WriteByte 011A  
                                 _next_channel 01E8                               __size_ofi2_putch 000A  
                                    frexp@eptr 0005                        __end_of_getCauseOfReset 8270  
              __end_of_terminal_textAttributes 409E                  writeDoubleToEEPROM@input_data 0121  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 8B34  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 8BEC  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 8BDE  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01B6                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 01DD                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___fladd 033E                               __size_of___fldiv 02B6  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0352  
                             __size_of___flsub 0048                               __size_of___fltol 00DE  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                   __size_of_writeDoubleToEEPROM 0050  
                                  _load_enable 02F1               __end_of_acquisitionTimerCallback 8B58  
                                  _fround$3937 0177                                    _fround$3938 0173  
                        __end_ofi2__tdiv_to_l_ 6C96                       _TMR7_SetInterruptHandler 8BA6  
                        _TMR7_InterruptHandler 025F                             _ADC_Result_Scaling 0258  
      terminal_textAttributes@foreground_color 02D4                                       ___xxtofl 678C  
                     __size_of_ADCC_Initialize 0060                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 8B88  
                             __size_of_isdigit 0022                      __end_of_max_Power_address E975  
                                     __ptext10 8B68                                       __ptext11 7A32  
                                     __ptext20 897A                                       __ptext12 79A2  
                                     __ptext21 8666                                       __ptext13 8174  
                                     __ptext30 848A                                       __ptext22 80B4  
                                     __ptext14 86DE                                       __ptext31 8B78  
                                     __ptext23 8A32                                       __ptext15 8716  
                                     __ptext40 7ABE                                       __ptext32 0EA0  
                                     __ptext24 85A6                                       __ptext16 82C0  
                                     __ptext41 6A30                                       __ptext33 3412  
                                     __ptext25 8ADE                                       __ptext17 81CC  
                                     __ptext50 884C                                       __ptext42 6C96  
                                     __ptext34 8B98                                       __ptext26 881C  
                                     __ptext18 8AC4                                       __ptext51 700C  
                                     __ptext43 678C                                       __ptext35 83AA  
                                     __ptext27 761C                                       __ptext19 8562  
                                     __ptext60 8A70                                       __ptext52 821E  
                                     __ptext44 8902                                       __ptext36 8A10  
                                     __ptext28 5948                                       __ptext61 786E  
                                     __ptext53 887C                                       __ptext45 7FE6  
                                     __ptext37 5682                                       __ptext29 8C3C  
                                     __ptext70 8BEC                                       __ptext62 8A8C  
                                     __ptext54 8310                                       __ptext46 7B44  
                                     __ptext38 409E                                       __ptext63 8AF8  
                                     __ptext55 8BA6                                       __ptext47 7460  
                                     __ptext39 7DC4                                       __ptext80 8C54  
                                     __ptext72 8782                                       __ptext64 8B88  
                                     __ptext56 87EA                                       __ptext48 84D2  
                                     __ptext81 85E8                                       __ptext73 8C52  
                                     __ptext65 8C1E                                       __ptext57 8BB4  
                                     __ptext49 4740                                       __ptext90 38B6  
                                     __ptext82 8C2E                                       __ptext74 8B46  
                                     __ptext66 7F14                                       __ptext58 83F6  
                                     __ptext91 8C14                                       __ptext83 874C  
                                     __ptext75 8BFA                                       __ptext67 8BD0  
                                     __ptext59 8BC2                                       __ptext92 8440  
                                     __ptext76 8C26                                       __ptext68 8BDE  
                                     __ptext93 8A52                                       __ptext85 87B6  
                                     __ptext77 8C42                                       __ptext69 8114  
                                     __ptext94 5EB2                                       __ptext86 8AA8  
                                     __ptext78 89A0                                       __ptext95 7E36  
                                     __ptext87 8C56                                       __ptext79 892A  
                                     __ptext96 7BC8                                       __ptext88 77C0  
                                     __ptext97 6B64                                       __ptext89 1C6E  
                                     __ptext98 6DC0                                       __ptext99 89C6  
                                     _sin$4139 0090                                       __powers_ E8C3  
                          ringBufferLUT@userID 03A9                                _Temp_ADC_Offset 02D0  
                  DATAEE_WriteByte@GIEBitValue 011A                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 006A  
                                   strcpy@from 0119                                 i2_isdigit$3225 0002  
                                     _max_Irms 0244                                _Temp_ADC_Result 0254  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 01AC  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 09E0                           __end_ofi2__div_to_l_ 6EE8  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                            ??_DATAEE_ReadByte 0119                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      ringBufferLUT@channel_name 0380  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 8C08  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                      printf@idx 0196  
                                    printf@len 0199                                      printf@exp 01A1  
                                    printf@val 01A7                                    atan@coeff_a E977  
                                  atan@coeff_b E9A3                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 8B68                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                                     scale@scl 0177                                      sqrt@tfrac 0076  
         __end_of_TMR6_DefaultInterruptHandler 8C56          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 8C54           __end_of_ADCC_DefaultInterruptHandler 8C5A  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 8C58  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID 897A                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 03A5  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                  _reset_cause 02EC                                      strncmp@s1 011D  
                                    strncmp@s2 011F                               ?_getCauseOfReset 0001  
                              _AVSS_ADC_Result 01D3              __end_of_ADCPostProcessingCallback 3412  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 011D  
                                    strncpy@to 0117                       __size_of_TMR7_WriteTimer 0026  
                                 ?_getDeviceID 0122                                       printf@ap 019B  
                                     printf@cp 0197                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString 884C                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult 8B20                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                         __size_of_EUSART2_Write 004C  
                          _EUSART2_Receive_ISR 77C0                                       sqrt@frac 0085  
       __end_of_INTERRUPT_InterruptManagerHigh 77C0        __size_of_INTERRUPT_InterruptManagerHigh 77B8  
               _INTERRUPT_InterruptManagerHigh 0008                                       sqrt@sign 0074  
                  getMajorRevisionID@REVID_RAW 0125                                       sqrt@root 0081  
                            ??_TMR7_Initialize 011A                                 _FVR_Initialize 8C1E  
                                  _printf$3940 0192                                       strcat@cp 011B  
                                     strcat@to 0117                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                            ringBufferLUT@line 01B4                               ___lldiv@quotient 0120  
                                     strcpy@cp 011B                                       strlen@cp 011B  
                                     strcpy@to 0117                           ??_getMinorRevisionID 0122  
                            _getDeviceIDString 80B4                                       strstr@s1 0126  
                                     strstr@s2 0128                                     _TX2STAbits 000EF6  
                                ___fladd@signs 0139                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 010A         __size_of_INTERRUPT_InterruptManagerLow 00F2  
                _INTERRUPT_InterruptManagerLow 0018                 ??_ADCC_SetADTIInterruptHandler 011A  
               __end_of_PIN_MANAGER_Initialize 7910                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 6EE8                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                          ??_getDeviceIDString 0126                              ?i2_TMR7_StopTimer 0001  
            _EUSART2_RxDefaultInterruptHandler 0268                 __size_of_currentMeasuredToPeak 007C  
                __end_of_currentMeasuredToPeak 7D4A                   __size_of_ADCC_StopConversion 0004  
