

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 01 21:45:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   133                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   134  0000                     
   135                           ; Version 1.45 (B)
   136                           ; Generated 30/01/2018 GMT
   137                           ; 
   138                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18LF67K40 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     
   170                           	psect	idataBANK0
   171  016432                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Vpk_const
   175                           ;main.c: 58: volatile bit eusart2RxStringReady = 0;
   176                           ;main.c: 61: volatile unsigned long on_time = 0;
   177                           ;main.c: 64: volatile double FVR_ADC_Result;
   178                           ;main.c: 65: volatile double AVSS_ADC_Result;
   179                           ;main.c: 66: volatile double ADC_Result_Scaling;
   180                           ;main.c: 67: volatile double POS3P3_ADC_Result;
   181                           ;main.c: 68: volatile double POS12_ADC_Result;
   182                           ;main.c: 69: volatile double Temp_ADC_Result;
   183                           ;main.c: 70: volatile double Temp_ADC_Offset = -267.409;
   184  016432  B5                 	db	181
   185  016433  29                 	db	41
   186  016434  43                 	db	67
   187                           
   188                           ;initializer for _Temp_ADC_Offset
   189  016435  B4                 	db	180
   190  016436  85                 	db	133
   191  016437  C3                 	db	195
   192                           
   193                           	psect	mediumconst
   194  00F228                     __pmediumconst:
   195                           	opt stack 0
   196  00F228  00                 	db	0
   197  00F229                     _dpowers:
   198                           	opt stack 0
   199  00F229  0001               	dw	1
   200  00F22B  0000               	dw	0
   201  00F22D  000A               	dw	10
   202  00F22F  0000               	dw	0
   203  00F231  0064               	dw	100
   204  00F233  0000               	dw	0
   205  00F235  03E8               	dw	1000
   206  00F237  0000               	dw	0
   207  00F239  2710               	dw	10000
   208  00F23B  0000               	dw	0
   209  00F23D  86A0               	dw	34464
   210  00F23F  0001               	dw	1
   211  00F241  4240               	dw	16960
   212  00F243  000F               	dw	15
   213  00F245  9680               	dw	38528
   214  00F247  0098               	dw	152
   215  00F249  E100               	dw	57600
   216  00F24B  05F5               	dw	1525
   217  00F24D  CA00               	dw	51712
   218  00F24F  3B9A               	dw	15258
   219  00F251                     __end_of_dpowers:
   220                           	opt stack 0
   221  00F251                     __powers_:
   222                           	opt stack 0
   223  00F251  00                 	db	0
   224  00F252  80                 	db	128
   225  00F253  3F                 	db	63
   226  00F254  00                 	db	0
   227  00F255  20                 	db	32
   228  00F256  41                 	db	65
   229  00F257  00                 	db	0
   230  00F258  C8                 	db	200
   231  00F259  42                 	db	66
   232  00F25A  00                 	db	0
   233  00F25B  7A                 	db	122
   234  00F25C  44                 	db	68
   235  00F25D  40                 	db	64
   236  00F25E  1C                 	db	28
   237  00F25F  46                 	db	70
   238  00F260  50                 	db	80
   239  00F261  C3                 	db	195
   240  00F262  47                 	db	71
   241  00F263  24                 	db	36
   242  00F264  74                 	db	116
   243  00F265  49                 	db	73
   244  00F266  97                 	db	151
   245  00F267  18                 	db	24
   246  00F268  4B                 	db	75
   247  00F269  BC                 	db	188
   248  00F26A  BE                 	db	190
   249  00F26B  4C                 	db	76
   250  00F26C  6B                 	db	107
   251  00F26D  6E                 	db	110
   252  00F26E  4E                 	db	78
   253  00F26F  03                 	db	3
   254  00F270  15                 	db	21
   255  00F271  50                 	db	80
   256  00F272  79                 	db	121
   257  00F273  AD                 	db	173
   258  00F274  60                 	db	96
   259  00F275  F3                 	db	243
   260  00F276  49                 	db	73
   261  00F277  71                 	db	113
   262  00F278                     __end_of__powers_:
   263                           	opt stack 0
   264  00F278                     __npowers_:
   265                           	opt stack 0
   266  00F278  00                 	db	0
   267  00F279  80                 	db	128
   268  00F27A  3F                 	db	63
   269  00F27B  CD                 	db	205
   270  00F27C  CC                 	db	204
   271  00F27D  3D                 	db	61
   272  00F27E  D7                 	db	215
   273  00F27F  23                 	db	35
   274  00F280  3C                 	db	60
   275  00F281  12                 	db	18
   276  00F282  83                 	db	131
   277  00F283  3A                 	db	58
   278  00F284  B7                 	db	183
   279  00F285  D1                 	db	209
   280  00F286  38                 	db	56
   281  00F287  C6                 	db	198
   282  00F288  27                 	db	39
   283  00F289  37                 	db	55
   284  00F28A  38                 	db	56
   285  00F28B  86                 	db	134
   286  00F28C  35                 	db	53
   287  00F28D  C0                 	db	192
   288  00F28E  D6                 	db	214
   289  00F28F  33                 	db	51
   290  00F290  CC                 	db	204
   291  00F291  2B                 	db	43
   292  00F292  32                 	db	50
   293  00F293  70                 	db	112
   294  00F294  89                 	db	137
   295  00F295  30                 	db	48
   296  00F296  E7                 	db	231
   297  00F297  DB                 	db	219
   298  00F298  2E                 	db	46
   299  00F299  E5                 	db	229
   300  00F29A  3C                 	db	60
   301  00F29B  1E                 	db	30
   302  00F29C  42                 	db	66
   303  00F29D  A2                 	db	162
   304  00F29E  0D                 	db	13
   305  00F29F                     __end_of__npowers_:
   306                           	opt stack 0
   307  00F29F                     _hexpowers:
   308                           	opt stack 0
   309  00F29F  0001               	dw	1
   310  00F2A1  0000               	dw	0
   311  00F2A3  0010               	dw	16
   312  00F2A5  0000               	dw	0
   313  00F2A7  0100               	dw	256
   314  00F2A9  0000               	dw	0
   315  00F2AB  1000               	dw	4096
   316  00F2AD  0000               	dw	0
   317  00F2AF  0000               	dw	0
   318  00F2B1  0001               	dw	1
   319  00F2B3  0000               	dw	0
   320  00F2B5  0010               	dw	16
   321  00F2B7  0000               	dw	0
   322  00F2B9  0100               	dw	256
   323  00F2BB  0000               	dw	0
   324  00F2BD  1000               	dw	4096
   325  00F2BF                     __end_of_hexpowers:
   326                           	opt stack 0
   327  00F2BF                     atan@coeff_a:
   328                           	opt stack 0
   329  00F2BF  3C                 	db	60
   330  00F2C0  04                 	db	4
   331  00F2C1  42                 	db	66
   332  00F2C2  9F                 	db	159
   333  00F2C3  6A                 	db	106
   334  00F2C4  42                 	db	66
   335  00F2C5  90                 	db	144
   336  00F2C6  01                 	db	1
   337  00F2C7  42                 	db	66
   338  00F2C8  4D                 	db	77
   339  00F2C9  BB                 	db	187
   340  00F2CA  40                 	db	64
   341  00F2CB  EC                 	db	236
   342  00F2CC  47                 	db	71
   343  00F2CD  3E                 	db	62
   344  00F2CE  8E                 	db	142
   345  00F2CF  1F                 	db	31
   346  00F2D0  BB                 	db	187
   347  00F2D1                     __end_ofatan@coeff_a:
   348                           	opt stack 0
   349  00F2D1                     sin@coeff_a:
   350                           	opt stack 0
   351  00F2D1  F4                 	db	244
   352  00F2D2  4A                 	db	74
   353  00F2D3  48                 	db	72
   354  00F2D4  95                 	db	149
   355  00F2D5  95                 	db	149
   356  00F2D6  C7                 	db	199
   357  00F2D7  C1                 	db	193
   358  00F2D8  DC                 	db	220
   359  00F2D9  45                 	db	69
   360  00F2DA  DC                 	db	220
   361  00F2DB  6D                 	db	109
   362  00F2DC  C3                 	db	195
   363  00F2DD  B3                 	db	179
   364  00F2DE  33                 	db	51
   365  00F2DF  40                 	db	64
   366  00F2E0                     __end_ofsin@coeff_a:
   367                           	opt stack 0
   368  00F2E0                     atan@coeff_b:
   369                           	opt stack 0
   370  00F2E0  3C                 	db	60
   371  00F2E1  04                 	db	4
   372  00F2E2  42                 	db	66
   373  00F2E3  5A                 	db	90
   374  00F2E4  8B                 	db	139
   375  00F2E5  42                 	db	66
   376  00F2E6  04                 	db	4
   377  00F2E7  44                 	db	68
   378  00F2E8  42                 	db	66
   379  00F2E9  9C                 	db	156
   380  00F2EA  4F                 	db	79
   381  00F2EB  41                 	db	65
   382  00F2EC  00                 	db	0
   383  00F2ED  80                 	db	128
   384  00F2EE  3F                 	db	63
   385  00F2EF                     __end_ofatan@coeff_b:
   386                           	opt stack 0
   387  00F2EF                     sin@coeff_b:
   388                           	opt stack 0
   389  00F2EF  34                 	db	52
   390  00F2F0  01                 	db	1
   391  00F2F1  48                 	db	72
   392  00F2F2  9D                 	db	157
   393  00F2F3  B0                 	db	176
   394  00F2F4  45                 	db	69
   395  00F2F5  00                 	db	0
   396  00F2F6  DA                 	db	218
   397  00F2F7  42                 	db	66
   398  00F2F8  00                 	db	0
   399  00F2F9  80                 	db	128
   400  00F2FA  3F                 	db	63
   401  00F2FB                     __end_ofsin@coeff_b:
   402                           	opt stack 0
   403  0000                     _FVRCONbits	set	3780
   404  0000                     _FVRCON	set	3780
   405  0000                     _RC2REG	set	3825
   406  0000                     _RC2STAbits	set	3829
   407  0000                     _TX2REG	set	3826
   408  0000                     _TX2STAbits	set	3830
   409  0000                     _SP2BRGH	set	3828
   410  0000                     _SP2BRGL	set	3827
   411  0000                     _TX2STA	set	3830
   412  0000                     _RC2STA	set	3829
   413  0000                     _BAUD2CON	set	3831
   414  0000                     _PIR1bits	set	3636
   415  0000                     _PIE1bits	set	3626
   416  0000                     _PIR5bits	set	3640
   417  0000                     _PIE5bits	set	3630
   418  0000                     _PIR3bits	set	3638
   419  0000                     _PIE3bits	set	3628
   420  0000                     _IPR1bits	set	3616
   421  0000                     _IPR5bits	set	3620
   422  0000                     _IPR3bits	set	3618
   423  0000                     _RX2PPS	set	3601
   424  0000                     _RG7PPS	set	3721
   425  0000                     _SLRCONH	set	3774
   426  0000                     _SLRCONG	set	3769
   427  0000                     _SLRCONF	set	3761
   428  0000                     _SLRCONE	set	3756
   429  0000                     _SLRCOND	set	3748
   430  0000                     _SLRCONC	set	3743
   431  0000                     _SLRCONB	set	3735
   432  0000                     _SLRCONA	set	3727
   433  0000                     _ODCOND	set	3749
   434  0000                     _ODCONC	set	3744
   435  0000                     _ODCONH	set	3775
   436  0000                     _ODCONB	set	3736
   437  0000                     _ODCONG	set	3770
   438  0000                     _ODCONA	set	3728
   439  0000                     _ODCONF	set	3762
   440  0000                     _ODCONE	set	3757
   441  0000                     _WPUH	set	3776
   442  0000                     _WPUC	set	3745
   443  0000                     _WPUA	set	3729
   444  0000                     _WPUG	set	3771
   445  0000                     _WPUB	set	3737
   446  0000                     _WPUE	set	3758
   447  0000                     _WPUF	set	3763
   448  0000                     _WPUD	set	3750
   449  0000                     _ANSELA	set	3730
   450  0000                     _ANSELF	set	3764
   451  0000                     _ANSELG	set	3772
   452  0000                     _ANSELE	set	3759
   453  0000                     _ANSELB	set	3738
   454  0000                     _ANSELD	set	3751
   455  0000                     _PMD5	set	3665
   456  0000                     _PMD4	set	3664
   457  0000                     _PMD3	set	3663
   458  0000                     _PMD2	set	3662
   459  0000                     _PMD1	set	3661
   460  0000                     _PMD0	set	3660
   461  0000                     _OSCTUNE	set	3656
   462  0000                     _OSCFRQ	set	3657
   463  0000                     _OSCEN	set	3655
   464  0000                     _OSCCON3	set	3653
   465  0000                     _OSCCON1	set	3651
   466  0000                     _PLLR	set	29232
   467  0000                     _T7GCONbits	set	3889
   468  0000                     _T7CONbits	set	3888
   469  0000                     _T7CON	set	3888
   470  0000                     _TMR7L	set	3886
   471  0000                     _TMR7H	set	3887
   472  0000                     _T7CLK	set	3891
   473  0000                     _T7GATE	set	3890
   474  0000                     _T7GCON	set	3889
   475  0000                     _ADCON1bits	set	3929
   476  0000                     _ADCON2bits	set	3930
   477  0000                     _ADPRE	set	3934
   478  0000                     _ADCON3bits	set	3931
   479  0000                     _ADACQ	set	3932
   480  0000                     _ADCLK	set	3927
   481  0000                     _ADACT	set	3926
   482  0000                     _ADREF	set	3928
   483  0000                     _ADCON3	set	3931
   484  0000                     _ADCON2	set	3930
   485  0000                     _ADCON1	set	3929
   486  0000                     _ADCAP	set	3933
   487  0000                     _ADPCH	set	3935
   488  0000                     _LATGbits	set	3967
   489  0000                     _LATFbits	set	3966
   490  0000                     _T5GCONbits	set	4036
   491  0000                     _T5CONbits	set	4035
   492  0000                     _T5CON	set	4035
   493  0000                     _TMR5L	set	4033
   494  0000                     _TMR5H	set	4034
   495  0000                     _T5CLK	set	4038
   496  0000                     _T5GATE	set	4037
   497  0000                     _T5GCON	set	4036
   498  0000                     _ADERRL	set	3950
   499  0000                     _ADERRH	set	3951
   500  0000                     _ADPREVL	set	3937
   501  0000                     _ADPREVH	set	3938
   502  0000                     _ADFLTRL	set	3954
   503  0000                     _ADFLTRH	set	3955
   504  0000                     _ADSTATbits	set	3941
   505  0000                     _ADACCL	set	3952
   506  0000                     _ADACCH	set	3953
   507  0000                     _ADCNT	set	3943
   508  0000                     _ADRESL	set	3939
   509  0000                     _ADRESH	set	3940
   510  0000                     _ADCON0bits	set	3936
   511  0000                     _ADCON0	set	3936
   512  0000                     _ADSTAT	set	3941
   513  0000                     _ADRPT	set	3942
   514  0000                     _ADSTPTH	set	3945
   515  0000                     _ADSTPTL	set	3944
   516  0000                     _ADUTHH	set	3949
   517  0000                     _ADUTHL	set	3948
   518  0000                     _ADLTHH	set	3947
   519  0000                     _ADLTHL	set	3946
   520  0000                     _PR6	set	4016
   521  0000                     _TMR6	set	4015
   522  0000                     _T6CONbits	set	4017
   523  0000                     _T6RSTbits	set	4020
   524  0000                     _T6HLTbits	set	4018
   525  0000                     _T6CON	set	4017
   526  0000                     _T6TMR	set	4015
   527  0000                     _T6PR	set	4016
   528  0000                     _T6RST	set	4020
   529  0000                     _T6HLT	set	4018
   530  0000                     _T6CLKCON	set	4019
   531  0000                     _INTCONbits	set	4082
   532  0000                     _TRISD	set	3972
   533  0000                     _TRISC	set	3971
   534  0000                     _TRISH	set	3976
   535  0000                     _TRISB	set	3970
   536  0000                     _TRISG	set	3975
   537  0000                     _TRISA	set	3969
   538  0000                     _TRISF	set	3974
   539  0000                     _TRISE	set	3973
   540  0000                     _LATH	set	3968
   541  0000                     _LATC	set	3963
   542  0000                     _LATG	set	3967
   543  0000                     _LATB	set	3962
   544  0000                     _LATF	set	3966
   545  0000                     _LATA	set	3961
   546  0000                     _LATD	set	3964
   547  0000                     _LATE	set	3965
   548  00F2FB                     STR_87:
   549  00F2FB  4C                 	db	76	;'L'
   550  00F2FC  69                 	db	105	;'i'
   551  00F2FD  73                 	db	115	;'s'
   552  00F2FE  74                 	db	116	;'t'
   553  00F2FF  20                 	db	32
   554  00F300  6F                 	db	111	;'o'
   555  00F301  66                 	db	102	;'f'
   556  00F302  20                 	db	32
   557  00F303  73                 	db	115	;'s'
   558  00F304  75                 	db	117	;'u'
   559  00F305  70                 	db	112	;'p'
   560  00F306  70                 	db	112	;'p'
   561  00F307  6F                 	db	111	;'o'
   562  00F308  72                 	db	114	;'r'
   563  00F309  74                 	db	116	;'t'
   564  00F30A  65                 	db	101	;'e'
   565  00F30B  64                 	db	100	;'d'
   566  00F30C  20                 	db	32
   567  00F30D  63                 	db	99	;'c'
   568  00F30E  6F                 	db	111	;'o'
   569  00F30F  6D                 	db	109	;'m'
   570  00F310  6D                 	db	109	;'m'
   571  00F311  61                 	db	97	;'a'
   572  00F312  6E                 	db	110	;'n'
   573  00F313  64                 	db	100	;'d'
   574  00F314  73                 	db	115	;'s'
   575  00F315  3A                 	db	58	;':'
   576  00F316  0A                 	db	10
   577  00F317  0D                 	db	13
   578  00F318  48                 	db	72	;'H'
   579  00F319  6F                 	db	111	;'o'
   580  00F31A  75                 	db	117	;'u'
   581  00F31B  73                 	db	115	;'s'
   582  00F31C  65                 	db	101	;'e'
   583  00F31D  6B                 	db	107	;'k'
   584  00F31E  65                 	db	101	;'e'
   585  00F31F  65                 	db	101	;'e'
   586  00F320  70                 	db	112	;'p'
   587  00F321  69                 	db	105	;'i'
   588  00F322  6E                 	db	110	;'n'
   589  00F323  67                 	db	103	;'g'
   590  00F324  20                 	db	32
   591  00F325  43                 	db	67	;'C'
   592  00F326  6F                 	db	111	;'o'
   593  00F327  6D                 	db	109	;'m'
   594  00F328  6D                 	db	109	;'m'
   595  00F329  61                 	db	97	;'a'
   596  00F32A  6E                 	db	110	;'n'
   597  00F32B  64                 	db	100	;'d'
   598  00F32C  73                 	db	115	;'s'
   599  00F32D  3A                 	db	58	;':'
   600  00F32E  0A                 	db	10
   601  00F32F  0D                 	db	13
   602  00F330  20                 	db	32
   603  00F331  20                 	db	32
   604  00F332  20                 	db	32
   605  00F333  52                 	db	82	;'R'
   606  00F334  65                 	db	101	;'e'
   607  00F335  73                 	db	115	;'s'
   608  00F336  65                 	db	101	;'e'
   609  00F337  74                 	db	116	;'t'
   610  00F338  3A                 	db	58	;':'
   611  00F339  20                 	db	32
   612  00F33A  43                 	db	67	;'C'
   613  00F33B  6C                 	db	108	;'l'
   614  00F33C  65                 	db	101	;'e'
   615  00F33D  61                 	db	97	;'a'
   616  00F33E  72                 	db	114	;'r'
   617  00F33F  73                 	db	115	;'s'
   618  00F340  20                 	db	32
   619  00F341  74                 	db	116	;'t'
   620  00F342  68                 	db	104	;'h'
   621  00F343  65                 	db	101	;'e'
   622  00F344  20                 	db	32
   623  00F345  74                 	db	116	;'t'
   624  00F346  65                 	db	101	;'e'
   625  00F347  72                 	db	114	;'r'
   626  00F348  6D                 	db	109	;'m'
   627  00F349  69                 	db	105	;'i'
   628  00F34A  6E                 	db	110	;'n'
   629  00F34B  61                 	db	97	;'a'
   630  00F34C  6C                 	db	108	;'l'
   631  00F34D  20                 	db	32
   632  00F34E  61                 	db	97	;'a'
   633  00F34F  6E                 	db	110	;'n'
   634  00F350  64                 	db	100	;'d'
   635  00F351  20                 	db	32
   636  00F352  72                 	db	114	;'r'
   637  00F353  65                 	db	101	;'e'
   638  00F354  73                 	db	115	;'s'
   639  00F355  65                 	db	101	;'e'
   640  00F356  74                 	db	116	;'t'
   641  00F357  73                 	db	115	;'s'
   642  00F358  20                 	db	32
   643  00F359  74                 	db	116	;'t'
   644  00F35A  68                 	db	104	;'h'
   645  00F35B  65                 	db	101	;'e'
   646  00F35C  20                 	db	32
   647  00F35D  6D                 	db	109	;'m'
   648  00F35E  69                 	db	105	;'i'
   649  00F35F  63                 	db	99	;'c'
   650  00F360  72                 	db	114	;'r'
   651  00F361  6F                 	db	111	;'o'
   652  00F362  0A                 	db	10
   653  00F363  0D                 	db	13
   654  00F364  20                 	db	32
   655  00F365  20                 	db	32
   656  00F366  20                 	db	32
   657  00F367  43                 	db	67	;'C'
   658  00F368  6C                 	db	108	;'l'
   659  00F369  65                 	db	101	;'e'
   660  00F36A  61                 	db	97	;'a'
   661  00F36B  72                 	db	114	;'r'
   662  00F36C  3A                 	db	58	;':'
   663  00F36D  20                 	db	32
   664  00F36E  43                 	db	67	;'C'
   665  00F36F  6C                 	db	108	;'l'
   666  00F370  65                 	db	101	;'e'
   667  00F371  61                 	db	97	;'a'
   668  00F372  72                 	db	114	;'r'
   669  00F373  73                 	db	115	;'s'
   670  00F374  20                 	db	32
   671  00F375  74                 	db	116	;'t'
   672  00F376  68                 	db	104	;'h'
   673  00F377  65                 	db	101	;'e'
   674  00F378  20                 	db	32
   675  00F379  74                 	db	116	;'t'
   676  00F37A  65                 	db	101	;'e'
   677  00F37B  72                 	db	114	;'r'
   678  00F37C  6D                 	db	109	;'m'
   679  00F37D  69                 	db	105	;'i'
   680  00F37E  6E                 	db	110	;'n'
   681  00F37F  61                 	db	97	;'a'
   682  00F380  6C                 	db	108	;'l'
   683  00F381  20                 	db	32
   684  00F382  62                 	db	98	;'b'
   685  00F383  75                 	db	117	;'u'
   686  00F384  74                 	db	116	;'t'
   687  00F385  20                 	db	32
   688  00F386  64                 	db	100	;'d'
   689  00F387  6F                 	db	111	;'o'
   690  00F388  65                 	db	101	;'e'
   691  00F389  73                 	db	115	;'s'
   692  00F38A  6E                 	db	110	;'n'
   693  00F38B  27                 	db	39
   694  00F38C  74                 	db	116	;'t'
   695  00F38D  20                 	db	32
   696  00F38E  72                 	db	114	;'r'
   697  00F38F  65                 	db	101	;'e'
   698  00F390  73                 	db	115	;'s'
   699  00F391  65                 	db	101	;'e'
   700  00F392  74                 	db	116	;'t'
   701  00F393  20                 	db	32
   702  00F394  74                 	db	116	;'t'
   703  00F395  68                 	db	104	;'h'
   704  00F396  65                 	db	101	;'e'
   705  00F397  20                 	db	32
   706  00F398  6D                 	db	109	;'m'
   707  00F399  69                 	db	105	;'i'
   708  00F39A  63                 	db	99	;'c'
   709  00F39B  72                 	db	114	;'r'
   710  00F39C  6F                 	db	111	;'o'
   711  00F39D  0A                 	db	10
   712  00F39E  0D                 	db	13
   713  00F39F  20                 	db	32
   714  00F3A0  20                 	db	32
   715  00F3A1  20                 	db	32
   716  00F3A2  2A                 	db	42
   717  00F3A3  49                 	db	73	;'I'
   718  00F3A4  44                 	db	68	;'D'
   719  00F3A5  4E                 	db	78	;'N'
   720  00F3A6  3F                 	db	63	;'?'
   721  00F3A7  3A                 	db	58	;':'
   722  00F3A8  20                 	db	32
   723  00F3A9  52                 	db	82	;'R'
   724  00F3AA  65                 	db	101	;'e'
   725  00F3AB  74                 	db	116	;'t'
   726  00F3AC  75                 	db	117	;'u'
   727  00F3AD  72                 	db	114	;'r'
   728  00F3AE  6E                 	db	110	;'n'
   729  00F3AF  73                 	db	115	;'s'
   730  00F3B0  20                 	db	32
   731  00F3B1  64                 	db	100	;'d'
   732  00F3B2  65                 	db	101	;'e'
   733  00F3B3  76                 	db	118	;'v'
   734  00F3B4  69                 	db	105	;'i'
   735  00F3B5  63                 	db	99	;'c'
   736  00F3B6  65                 	db	101	;'e'
   737  00F3B7  20                 	db	32
   738  00F3B8  69                 	db	105	;'i'
   739  00F3B9  64                 	db	100	;'d'
   740  00F3BA  65                 	db	101	;'e'
   741  00F3BB  6E                 	db	110	;'n'
   742  00F3BC  74                 	db	116	;'t'
   743  00F3BD  69                 	db	105	;'i'
   744  00F3BE  66                 	db	102	;'f'
   745  00F3BF  69                 	db	105	;'i'
   746  00F3C0  63                 	db	99	;'c'
   747  00F3C1  61                 	db	97	;'a'
   748  00F3C2  74                 	db	116	;'t'
   749  00F3C3  69                 	db	105	;'i'
   750  00F3C4  6F                 	db	111	;'o'
   751  00F3C5  6E                 	db	110	;'n'
   752  00F3C6  0A                 	db	10
   753  00F3C7  0D                 	db	13
   754  00F3C8  20                 	db	32
   755  00F3C9  20                 	db	32
   756  00F3CA  20                 	db	32
   757  00F3CB  4F                 	db	79	;'O'
   758  00F3CC  6E                 	db	110	;'n'
   759  00F3CD  20                 	db	32
   760  00F3CE  54                 	db	84	;'T'
   761  00F3CF  69                 	db	105	;'i'
   762  00F3D0  6D                 	db	109	;'m'
   763  00F3D1  65                 	db	101	;'e'
   764  00F3D2  3F                 	db	63	;'?'
   765  00F3D3  3A                 	db	58	;':'
   766  00F3D4  20                 	db	32
   767  00F3D5  52                 	db	82	;'R'
   768  00F3D6  65                 	db	101	;'e'
   769  00F3D7  74                 	db	116	;'t'
   770  00F3D8  75                 	db	117	;'u'
   771  00F3D9  72                 	db	114	;'r'
   772  00F3DA  6E                 	db	110	;'n'
   773  00F3DB  73                 	db	115	;'s'
   774  00F3DC  20                 	db	32
   775  00F3DD  64                 	db	100	;'d'
   776  00F3DE  65                 	db	101	;'e'
   777  00F3DF  76                 	db	118	;'v'
   778  00F3E0  69                 	db	105	;'i'
   779  00F3E1  63                 	db	99	;'c'
   780  00F3E2  65                 	db	101	;'e'
   781  00F3E3  20                 	db	32
   782  00F3E4  6F                 	db	111	;'o'
   783  00F3E5  6E                 	db	110	;'n'
   784  00F3E6  20                 	db	32
   785  00F3E7  74                 	db	116	;'t'
   786  00F3E8  69                 	db	105	;'i'
   787  00F3E9  6D                 	db	109	;'m'
   788  00F3EA  65                 	db	101	;'e'
   789  00F3EB  20                 	db	32
   790  00F3EC  73                 	db	115	;'s'
   791  00F3ED  69                 	db	105	;'i'
   792  00F3EE  6E                 	db	110	;'n'
   793  00F3EF  63                 	db	99	;'c'
   794  00F3F0  65                 	db	101	;'e'
   795  00F3F1  20                 	db	32
   796  00F3F2  6C                 	db	108	;'l'
   797  00F3F3  61                 	db	97	;'a'
   798  00F3F4  73                 	db	115	;'s'
   799  00F3F5  74                 	db	116	;'t'
   800  00F3F6  20                 	db	32
   801  00F3F7  64                 	db	100	;'d'
   802  00F3F8  65                 	db	101	;'e'
   803  00F3F9  76                 	db	118	;'v'
   804  00F3FA  69                 	db	105	;'i'
   805  00F3FB  63                 	db	99	;'c'
   806  00F3FC  65                 	db	101	;'e'
   807  00F3FD  20                 	db	32
   808  00F3FE  72                 	db	114	;'r'
   809  00F3FF  65                 	db	101	;'e'
   810  00F400  73                 	db	115	;'s'
   811  00F401  65                 	db	101	;'e'
   812  00F402  74                 	db	116	;'t'
   813  00F403  0A                 	db	10
   814  00F404  0D                 	db	13
   815  00F405  20                 	db	32
   816  00F406  20                 	db	32
   817  00F407  20                 	db	32
   818  00F408  48                 	db	72	;'H'
   819  00F409  65                 	db	101	;'e'
   820  00F40A  6C                 	db	108	;'l'
   821  00F40B  70                 	db	112	;'p'
   822  00F40C  3A                 	db	58	;':'
   823  00F40D  20                 	db	32
   824  00F40E  54                 	db	84	;'T'
   825  00F40F  68                 	db	104	;'h'
   826  00F410  69                 	db	105	;'i'
   827  00F411  73                 	db	115	;'s'
   828  00F412  20                 	db	32
   829  00F413  6D                 	db	109	;'m'
   830  00F414  65                 	db	101	;'e'
   831  00F415  73                 	db	115	;'s'
   832  00F416  73                 	db	115	;'s'
   833  00F417  61                 	db	97	;'a'
   834  00F418  67                 	db	103	;'g'
   835  00F419  65                 	db	101	;'e'
   836  00F41A  2C                 	db	44
   837  00F41B  20                 	db	32
   838  00F41C  6C                 	db	108	;'l'
   839  00F41D  69                 	db	105	;'i'
   840  00F41E  73                 	db	115	;'s'
   841  00F41F  74                 	db	116	;'t'
   842  00F420  73                 	db	115	;'s'
   843  00F421  20                 	db	32
   844  00F422  63                 	db	99	;'c'
   845  00F423  6F                 	db	111	;'o'
   846  00F424  6D                 	db	109	;'m'
   847  00F425  6D                 	db	109	;'m'
   848  00F426  61                 	db	97	;'a'
   849  00F427  6E                 	db	110	;'n'
   850  00F428  64                 	db	100	;'d'
   851  00F429  73                 	db	115	;'s'
   852  00F42A  0A                 	db	10
   853  00F42B  0D                 	db	13
   854  00F42C  0A                 	db	10
   855  00F42D  0D                 	db	13
   856  00F42E  49                 	db	73	;'I'
   857  00F42F  6E                 	db	110	;'n'
   858  00F430  74                 	db	116	;'t'
   859  00F431  65                 	db	101	;'e'
   860  00F432  72                 	db	114	;'r'
   861  00F433  6E                 	db	110	;'n'
   862  00F434  61                 	db	97	;'a'
   863  00F435  6C                 	db	108	;'l'
   864  00F436  20                 	db	32
   865  00F437  4D                 	db	77	;'M'
   866  00F438  65                 	db	101	;'e'
   867  00F439  61                 	db	97	;'a'
   868  00F43A  73                 	db	115	;'s'
   869  00F43B  75                 	db	117	;'u'
   870  00F43C  72                 	db	114	;'r'
   871  00F43D  65                 	db	101	;'e'
   872  00F43E  6D                 	db	109	;'m'
   873  00F43F  65                 	db	101	;'e'
   874  00F440  6E                 	db	110	;'n'
   875  00F441  74                 	db	116	;'t'
   876  00F442  20                 	db	32
   877  00F443  43                 	db	67	;'C'
   878  00F444  6F                 	db	111	;'o'
   879  00F445  6D                 	db	109	;'m'
   880  00F446  6D                 	db	109	;'m'
   881  00F447  61                 	db	97	;'a'
   882  00F448  6E                 	db	110	;'n'
   883  00F449  64                 	db	100	;'d'
   884  00F44A  73                 	db	115	;'s'
   885  00F44B  3A                 	db	58	;':'
   886  00F44C  0A                 	db	10
   887  00F44D  0D                 	db	13
   888  00F44E  20                 	db	32
   889  00F44F  20                 	db	32
   890  00F450  20                 	db	32
   891  00F451  4D                 	db	77	;'M'
   892  00F452  65                 	db	101	;'e'
   893  00F453  61                 	db	97	;'a'
   894  00F454  73                 	db	115	;'s'
   895  00F455  75                 	db	117	;'u'
   896  00F456  72                 	db	114	;'r'
   897  00F457  65                 	db	101	;'e'
   898  00F458  20                 	db	32
   899  00F459  50                 	db	80	;'P'
   900  00F45A  4F                 	db	79	;'O'
   901  00F45B  53                 	db	83	;'S'
   902  00F45C  33                 	db	51	;'3'
   903  00F45D  50                 	db	80	;'P'
   904  00F45E  33                 	db	51	;'3'
   905  00F45F  3F                 	db	63	;'?'
   906  00F460  3A                 	db	58	;':'
   907  00F461  20                 	db	32
   908  00F462  52                 	db	82	;'R'
   909  00F463  65                 	db	101	;'e'
   910  00F464  74                 	db	116	;'t'
   911  00F465  75                 	db	117	;'u'
   912  00F466  72                 	db	114	;'r'
   913  00F467  6E                 	db	110	;'n'
   914  00F468  73                 	db	115	;'s'
   915  00F469  20                 	db	32
   916  00F46A  2B                 	db	43
   917  00F46B  33                 	db	51	;'3'
   918  00F46C  2E                 	db	46
   919  00F46D  33                 	db	51	;'3'
   920  00F46E  56                 	db	86	;'V'
   921  00F46F  20                 	db	32
   922  00F470  41                 	db	65	;'A'
   923  00F471  44                 	db	68	;'D'
   924  00F472  43                 	db	67	;'C'
   925  00F473  20                 	db	32
   926  00F474  43                 	db	67	;'C'
   927  00F475  6F                 	db	111	;'o'
   928  00F476  6E                 	db	110	;'n'
   929  00F477  76                 	db	118	;'v'
   930  00F478  65                 	db	101	;'e'
   931  00F479  72                 	db	114	;'r'
   932  00F47A  73                 	db	115	;'s'
   933  00F47B  69                 	db	105	;'i'
   934  00F47C  6F                 	db	111	;'o'
   935  00F47D  6E                 	db	110	;'n'
   936  00F47E  20                 	db	32
   937  00F47F  69                 	db	105	;'i'
   938  00F480  6E                 	db	110	;'n'
   939  00F481  20                 	db	32
   940  00F482  76                 	db	118	;'v'
   941  00F483  6F                 	db	111	;'o'
   942  00F484  6C                 	db	108	;'l'
   943  00F485  74                 	db	116	;'t'
   944  00F486  73                 	db	115	;'s'
   945  00F487  0A                 	db	10
   946  00F488  0D                 	db	13
   947  00F489  20                 	db	32
   948  00F48A  20                 	db	32
   949  00F48B  20                 	db	32
   950  00F48C  4D                 	db	77	;'M'
   951  00F48D  65                 	db	101	;'e'
   952  00F48E  61                 	db	97	;'a'
   953  00F48F  73                 	db	115	;'s'
   954  00F490  75                 	db	117	;'u'
   955  00F491  72                 	db	114	;'r'
   956  00F492  65                 	db	101	;'e'
   957  00F493  20                 	db	32
   958  00F494  50                 	db	80	;'P'
   959  00F495  4F                 	db	79	;'O'
   960  00F496  53                 	db	83	;'S'
   961  00F497  31                 	db	49	;'1'
   962  00F498  32                 	db	50	;'2'
   963  00F499  3F                 	db	63	;'?'
   964  00F49A  3A                 	db	58	;':'
   965  00F49B  20                 	db	32
   966  00F49C  52                 	db	82	;'R'
   967  00F49D  65                 	db	101	;'e'
   968  00F49E  74                 	db	116	;'t'
   969  00F49F  75                 	db	117	;'u'
   970  00F4A0  72                 	db	114	;'r'
   971  00F4A1  6E                 	db	110	;'n'
   972  00F4A2  73                 	db	115	;'s'
   973  00F4A3  20                 	db	32
   974  00F4A4  2B                 	db	43
   975  00F4A5  31                 	db	49	;'1'
   976  00F4A6  32                 	db	50	;'2'
   977  00F4A7  56                 	db	86	;'V'
   978  00F4A8  20                 	db	32
   979  00F4A9  41                 	db	65	;'A'
   980  00F4AA  44                 	db	68	;'D'
   981  00F4AB  43                 	db	67	;'C'
   982  00F4AC  20                 	db	32
   983  00F4AD  43                 	db	67	;'C'
   984  00F4AE  6F                 	db	111	;'o'
   985  00F4AF  6E                 	db	110	;'n'
   986  00F4B0  76                 	db	118	;'v'
   987  00F4B1  65                 	db	101	;'e'
   988  00F4B2  72                 	db	114	;'r'
   989  00F4B3  73                 	db	115	;'s'
   990  00F4B4  69                 	db	105	;'i'
   991  00F4B5  6F                 	db	111	;'o'
   992  00F4B6  6E                 	db	110	;'n'
   993  00F4B7  20                 	db	32
   994  00F4B8  69                 	db	105	;'i'
   995  00F4B9  6E                 	db	110	;'n'
   996  00F4BA  20                 	db	32
   997  00F4BB  76                 	db	118	;'v'
   998  00F4BC  6F                 	db	111	;'o'
   999  00F4BD  6C                 	db	108	;'l'
  1000  00F4BE  74                 	db	116	;'t'
  1001  00F4BF  73                 	db	115	;'s'
  1002  00F4C0  0A                 	db	10
  1003  00F4C1  0D                 	db	13
  1004  00F4C2  20                 	db	32
  1005  00F4C3  20                 	db	32
  1006  00F4C4  20                 	db	32
  1007  00F4C5  4D                 	db	77	;'M'
  1008  00F4C6  65                 	db	101	;'e'
  1009  00F4C7  61                 	db	97	;'a'
  1010  00F4C8  73                 	db	115	;'s'
  1011  00F4C9  75                 	db	117	;'u'
  1012  00F4CA  72                 	db	114	;'r'
  1013  00F4CB  65                 	db	101	;'e'
  1014  00F4CC  20                 	db	32
  1015  00F4CD  44                 	db	68	;'D'
  1016  00F4CE  69                 	db	105	;'i'
  1017  00F4CF  65                 	db	101	;'e'
  1018  00F4D0  20                 	db	32
  1019  00F4D1  54                 	db	84	;'T'
  1020  00F4D2  65                 	db	101	;'e'
  1021  00F4D3  6D                 	db	109	;'m'
  1022  00F4D4  70                 	db	112	;'p'
  1023  00F4D5  3F                 	db	63	;'?'
  1024  00F4D6  3A                 	db	58	;':'
  1025  00F4D7  20                 	db	32
  1026  00F4D8  52                 	db	82	;'R'
  1027  00F4D9  65                 	db	101	;'e'
  1028  00F4DA  74                 	db	116	;'t'
  1029  00F4DB  75                 	db	117	;'u'
  1030  00F4DC  72                 	db	114	;'r'
  1031  00F4DD  6E                 	db	110	;'n'
  1032  00F4DE  73                 	db	115	;'s'
  1033  00F4DF  20                 	db	32
  1034  00F4E0  74                 	db	116	;'t'
  1035  00F4E1  68                 	db	104	;'h'
  1036  00F4E2  65                 	db	101	;'e'
  1037  00F4E3  20                 	db	32
  1038  00F4E4  6D                 	db	109	;'m'
  1039  00F4E5  69                 	db	105	;'i'
  1040  00F4E6  63                 	db	99	;'c'
  1041  00F4E7  72                 	db	114	;'r'
  1042  00F4E8  6F                 	db	111	;'o'
  1043  00F4E9  63                 	db	99	;'c'
  1044  00F4EA  6F                 	db	111	;'o'
  1045  00F4EB  6E                 	db	110	;'n'
  1046  00F4EC  74                 	db	116	;'t'
  1047  00F4ED  72                 	db	114	;'r'
  1048  00F4EE  6F                 	db	111	;'o'
  1049  00F4EF  6C                 	db	108	;'l'
  1050  00F4F0  6C                 	db	108	;'l'
  1051  00F4F1  65                 	db	101	;'e'
  1052  00F4F2  72                 	db	114	;'r'
  1053  00F4F3  20                 	db	32
  1054  00F4F4  64                 	db	100	;'d'
  1055  00F4F5  69                 	db	105	;'i'
  1056  00F4F6  65                 	db	101	;'e'
  1057  00F4F7  20                 	db	32
  1058  00F4F8  74                 	db	116	;'t'
  1059  00F4F9  65                 	db	101	;'e'
  1060  00F4FA  6D                 	db	109	;'m'
  1061  00F4FB  70                 	db	112	;'p'
  1062  00F4FC  65                 	db	101	;'e'
  1063  00F4FD  72                 	db	114	;'r'
  1064  00F4FE  61                 	db	97	;'a'
  1065  00F4FF  74                 	db	116	;'t'
  1066  00F500  75                 	db	117	;'u'
  1067  00F501  72                 	db	114	;'r'
  1068  00F502  65                 	db	101	;'e'
  1069  00F503  20                 	db	32
  1070  00F504  69                 	db	105	;'i'
  1071  00F505  6E                 	db	110	;'n'
  1072  00F506  20                 	db	32
  1073  00F507  64                 	db	100	;'d'
  1074  00F508  65                 	db	101	;'e'
  1075  00F509  67                 	db	103	;'g'
  1076  00F50A  72                 	db	114	;'r'
  1077  00F50B  65                 	db	101	;'e'
  1078  00F50C  65                 	db	101	;'e'
  1079  00F50D  73                 	db	115	;'s'
  1080  00F50E  20                 	db	32
  1081  00F50F  43                 	db	67	;'C'
  1082  00F510  0A                 	db	10
  1083  00F511  0D                 	db	13
  1084  00F512  20                 	db	32
  1085  00F513  20                 	db	32
  1086  00F514  20                 	db	32
  1087  00F515  4D                 	db	77	;'M'
  1088  00F516  65                 	db	101	;'e'
  1089  00F517  61                 	db	97	;'a'
  1090  00F518  73                 	db	115	;'s'
  1091  00F519  75                 	db	117	;'u'
  1092  00F51A  72                 	db	114	;'r'
  1093  00F51B  65                 	db	101	;'e'
  1094  00F51C  20                 	db	32
  1095  00F51D  46                 	db	70	;'F'
  1096  00F51E  56                 	db	86	;'V'
  1097  00F51F  52                 	db	82	;'R'
  1098  00F520  3F                 	db	63	;'?'
  1099  00F521  3A                 	db	58	;':'
  1100  00F522  20                 	db	32
  1101  00F523  52                 	db	82	;'R'
  1102  00F524  65                 	db	101	;'e'
  1103  00F525  74                 	db	116	;'t'
  1104  00F526  75                 	db	117	;'u'
  1105  00F527  72                 	db	114	;'r'
  1106  00F528  6E                 	db	110	;'n'
  1107  00F529  73                 	db	115	;'s'
  1108  00F52A  20                 	db	32
  1109  00F52B  74                 	db	116	;'t'
  1110  00F52C  68                 	db	104	;'h'
  1111  00F52D  65                 	db	101	;'e'
  1112  00F52E  20                 	db	32
  1113  00F52F  69                 	db	105	;'i'
  1114  00F530  6E                 	db	110	;'n'
  1115  00F531  74                 	db	116	;'t'
  1116  00F532  65                 	db	101	;'e'
  1117  00F533  72                 	db	114	;'r'
  1118  00F534  6E                 	db	110	;'n'
  1119  00F535  61                 	db	97	;'a'
  1120  00F536  6C                 	db	108	;'l'
  1121  00F537  20                 	db	32
  1122  00F538  66                 	db	102	;'f'
  1123  00F539  69                 	db	105	;'i'
  1124  00F53A  78                 	db	120	;'x'
  1125  00F53B  65                 	db	101	;'e'
  1126  00F53C  64                 	db	100	;'d'
  1127  00F53D  20                 	db	32
  1128  00F53E  76                 	db	118	;'v'
  1129  00F53F  6F                 	db	111	;'o'
  1130  00F540  6C                 	db	108	;'l'
  1131  00F541  74                 	db	116	;'t'
  1132  00F542  61                 	db	97	;'a'
  1133  00F543  67                 	db	103	;'g'
  1134  00F544  65                 	db	101	;'e'
  1135  00F545  20                 	db	32
  1136  00F546  72                 	db	114	;'r'
  1137  00F547  65                 	db	101	;'e'
  1138  00F548  66                 	db	102	;'f'
  1139  00F549  65                 	db	101	;'e'
  1140  00F54A  72                 	db	114	;'r'
  1141  00F54B  65                 	db	101	;'e'
  1142  00F54C  6E                 	db	110	;'n'
  1143  00F54D  63                 	db	99	;'c'
  1144  00F54E  65                 	db	101	;'e'
  1145  00F54F  20                 	db	32
  1146  00F550  62                 	db	98	;'b'
  1147  00F551  75                 	db	117	;'u'
  1148  00F552  66                 	db	102	;'f'
  1149  00F553  66                 	db	102	;'f'
  1150  00F554  65                 	db	101	;'e'
  1151  00F555  72                 	db	114	;'r'
  1152  00F556  20                 	db	32
  1153  00F557  31                 	db	49	;'1'
  1154  00F558  20                 	db	32
  1155  00F559  6F                 	db	111	;'o'
  1156  00F55A  75                 	db	117	;'u'
  1157  00F55B  74                 	db	116	;'t'
  1158  00F55C  70                 	db	112	;'p'
  1159  00F55D  75                 	db	117	;'u'
  1160  00F55E  74                 	db	116	;'t'
  1161  00F55F  20                 	db	32
  1162  00F560  69                 	db	105	;'i'
  1163  00F561  6E                 	db	110	;'n'
  1164  00F562  20                 	db	32
  1165  00F563  76                 	db	118	;'v'
  1166  00F564  6F                 	db	111	;'o'
  1167  00F565  6C                 	db	108	;'l'
  1168  00F566  74                 	db	116	;'t'
  1169  00F567  73                 	db	115	;'s'
  1170  00F568  0A                 	db	10
  1171  00F569  0D                 	db	13
  1172  00F56A  20                 	db	32
  1173  00F56B  20                 	db	32
  1174  00F56C  20                 	db	32
  1175  00F56D  4D                 	db	77	;'M'
  1176  00F56E  65                 	db	101	;'e'
  1177  00F56F  61                 	db	97	;'a'
  1178  00F570  73                 	db	115	;'s'
  1179  00F571  75                 	db	117	;'u'
  1180  00F572  72                 	db	114	;'r'
  1181  00F573  65                 	db	101	;'e'
  1182  00F574  20                 	db	32
  1183  00F575  41                 	db	65	;'A'
  1184  00F576  56                 	db	86	;'V'
  1185  00F577  53                 	db	83	;'S'
  1186  00F578  53                 	db	83	;'S'
  1187  00F579  3F                 	db	63	;'?'
  1188  00F57A  3A                 	db	58	;':'
  1189  00F57B  20                 	db	32
  1190  00F57C  52                 	db	82	;'R'
  1191  00F57D  65                 	db	101	;'e'
  1192  00F57E  74                 	db	116	;'t'
  1193  00F57F  75                 	db	117	;'u'
  1194  00F580  72                 	db	114	;'r'
  1195  00F581  6E                 	db	110	;'n'
  1196  00F582  73                 	db	115	;'s'
  1197  00F583  20                 	db	32
  1198  00F584  74                 	db	116	;'t'
  1199  00F585  68                 	db	104	;'h'
  1200  00F586  65                 	db	101	;'e'
  1201  00F587  20                 	db	32
  1202  00F588  6D                 	db	109	;'m'
  1203  00F589  65                 	db	101	;'e'
  1204  00F58A  61                 	db	97	;'a'
  1205  00F58B  73                 	db	115	;'s'
  1206  00F58C  75                 	db	117	;'u'
  1207  00F58D  72                 	db	114	;'r'
  1208  00F58E  65                 	db	101	;'e'
  1209  00F58F  64                 	db	100	;'d'
  1210  00F590  20                 	db	32
  1211  00F591  76                 	db	118	;'v'
  1212  00F592  61                 	db	97	;'a'
  1213  00F593  6C                 	db	108	;'l'
  1214  00F594  75                 	db	117	;'u'
  1215  00F595  65                 	db	101	;'e'
  1216  00F596  20                 	db	32
  1217  00F597  6F                 	db	111	;'o'
  1218  00F598  66                 	db	102	;'f'
  1219  00F599  20                 	db	32
  1220  00F59A  41                 	db	65	;'A'
  1221  00F59B  6E                 	db	110	;'n'
  1222  00F59C  61                 	db	97	;'a'
  1223  00F59D  6C                 	db	108	;'l'
  1224  00F59E  6F                 	db	111	;'o'
  1225  00F59F  67                 	db	103	;'g'
  1226  00F5A0  20                 	db	32
  1227  00F5A1  56                 	db	86	;'V'
  1228  00F5A2  53                 	db	83	;'S'
  1229  00F5A3  53                 	db	83	;'S'
  1230  00F5A4  20                 	db	32
  1231  00F5A5  69                 	db	105	;'i'
  1232  00F5A6  6E                 	db	110	;'n'
  1233  00F5A7  20                 	db	32
  1234  00F5A8  76                 	db	118	;'v'
  1235  00F5A9  6F                 	db	111	;'o'
  1236  00F5AA  6C                 	db	108	;'l'
  1237  00F5AB  74                 	db	116	;'t'
  1238  00F5AC  73                 	db	115	;'s'
  1239  00F5AD  0A                 	db	10
  1240  00F5AE  0D                 	db	13
  1241  00F5AF  0A                 	db	10
  1242  00F5B0  0D                 	db	13
  1243  00F5B1  45                 	db	69	;'E'
  1244  00F5B2  78                 	db	120	;'x'
  1245  00F5B3  74                 	db	116	;'t'
  1246  00F5B4  65                 	db	101	;'e'
  1247  00F5B5  72                 	db	114	;'r'
  1248  00F5B6  6E                 	db	110	;'n'
  1249  00F5B7  61                 	db	97	;'a'
  1250  00F5B8  6C                 	db	108	;'l'
  1251  00F5B9  20                 	db	32
  1252  00F5BA  4D                 	db	77	;'M'
  1253  00F5BB  65                 	db	101	;'e'
  1254  00F5BC  61                 	db	97	;'a'
  1255  00F5BD  73                 	db	115	;'s'
  1256  00F5BE  75                 	db	117	;'u'
  1257  00F5BF  72                 	db	114	;'r'
  1258  00F5C0  65                 	db	101	;'e'
  1259  00F5C1  6D                 	db	109	;'m'
  1260  00F5C2  65                 	db	101	;'e'
  1261  00F5C3  6E                 	db	110	;'n'
  1262  00F5C4  74                 	db	116	;'t'
  1263  00F5C5  20                 	db	32
  1264  00F5C6  43                 	db	67	;'C'
  1265  00F5C7  6F                 	db	111	;'o'
  1266  00F5C8  6D                 	db	109	;'m'
  1267  00F5C9  6D                 	db	109	;'m'
  1268  00F5CA  61                 	db	97	;'a'
  1269  00F5CB  6E                 	db	110	;'n'
  1270  00F5CC  64                 	db	100	;'d'
  1271  00F5CD  73                 	db	115	;'s'
  1272  00F5CE  3A                 	db	58	;':'
  1273  00F5CF  0A                 	db	10
  1274  00F5D0  0D                 	db	13
  1275  00F5D1  20                 	db	32
  1276  00F5D2  20                 	db	32
  1277  00F5D3  20                 	db	32
  1278  00F5D4  4D                 	db	77	;'M'
  1279  00F5D5  65                 	db	101	;'e'
  1280  00F5D6  61                 	db	97	;'a'
  1281  00F5D7  73                 	db	115	;'s'
  1282  00F5D8  75                 	db	117	;'u'
  1283  00F5D9  72                 	db	114	;'r'
  1284  00F5DA  65                 	db	101	;'e'
  1285  00F5DB  20                 	db	32
  1286  00F5DC  44                 	db	68	;'D'
  1287  00F5DD  65                 	db	101	;'e'
  1288  00F5DE  74                 	db	116	;'t'
  1289  00F5DF  65                 	db	101	;'e'
  1290  00F5E0  63                 	db	99	;'c'
  1291  00F5E1  74                 	db	116	;'t'
  1292  00F5E2  65                 	db	101	;'e'
  1293  00F5E3  64                 	db	100	;'d'
  1294  00F5E4  20                 	db	32
  1295  00F5E5  43                 	db	67	;'C'
  1296  00F5E6  75                 	db	117	;'u'
  1297  00F5E7  72                 	db	114	;'r'
  1298  00F5E8  72                 	db	114	;'r'
  1299  00F5E9  65                 	db	101	;'e'
  1300  00F5EA  6E                 	db	110	;'n'
  1301  00F5EB  74                 	db	116	;'t'
  1302  00F5EC  3F                 	db	63	;'?'
  1303  00F5ED  3A                 	db	58	;':'
  1304  00F5EE  20                 	db	32
  1305  00F5EF  52                 	db	82	;'R'
  1306  00F5F0  65                 	db	101	;'e'
  1307  00F5F1  74                 	db	116	;'t'
  1308  00F5F2  75                 	db	117	;'u'
  1309  00F5F3  72                 	db	114	;'r'
  1310  00F5F4  6E                 	db	110	;'n'
  1311  00F5F5  73                 	db	115	;'s'
  1312  00F5F6  20                 	db	32
  1313  00F5F7  6D                 	db	109	;'m'
  1314  00F5F8  65                 	db	101	;'e'
  1315  00F5F9  61                 	db	97	;'a'
  1316  00F5FA  73                 	db	115	;'s'
  1317  00F5FB  75                 	db	117	;'u'
  1318  00F5FC  72                 	db	114	;'r'
  1319  00F5FD  65                 	db	101	;'e'
  1320  00F5FE  64                 	db	100	;'d'
  1321  00F5FF  20                 	db	32
  1322  00F600  6F                 	db	111	;'o'
  1323  00F601  75                 	db	117	;'u'
  1324  00F602  74                 	db	116	;'t'
  1325  00F603  70                 	db	112	;'p'
  1326  00F604  75                 	db	117	;'u'
  1327  00F605  74                 	db	116	;'t'
  1328  00F606  20                 	db	32
  1329  00F607  63                 	db	99	;'c'
  1330  00F608  75                 	db	117	;'u'
  1331  00F609  72                 	db	114	;'r'
  1332  00F60A  72                 	db	114	;'r'
  1333  00F60B  65                 	db	101	;'e'
  1334  00F60C  6E                 	db	110	;'n'
  1335  00F60D  74                 	db	116	;'t'
  1336  00F60E  20                 	db	32
  1337  00F60F  69                 	db	105	;'i'
  1338  00F610  6E                 	db	110	;'n'
  1339  00F611  20                 	db	32
  1340  00F612  61                 	db	97	;'a'
  1341  00F613  6D                 	db	109	;'m'
  1342  00F614  70                 	db	112	;'p'
  1343  00F615  73                 	db	115	;'s'
  1344  00F616  20                 	db	32
  1345  00F617  61                 	db	97	;'a'
  1346  00F618  73                 	db	115	;'s'
  1347  00F619  20                 	db	32
  1348  00F61A  73                 	db	115	;'s'
  1349  00F61B  65                 	db	101	;'e'
  1350  00F61C  65                 	db	101	;'e'
  1351  00F61D  6E                 	db	110	;'n'
  1352  00F61E  20                 	db	32
  1353  00F61F  62                 	db	98	;'b'
  1354  00F620  79                 	db	121	;'y'
  1355  00F621  20                 	db	32
  1356  00F622  41                 	db	65	;'A'
  1357  00F623  44                 	db	68	;'D'
  1358  00F624  43                 	db	67	;'C'
  1359  00F625  0A                 	db	10
  1360  00F626  0D                 	db	13
  1361  00F627  20                 	db	32
  1362  00F628  20                 	db	32
  1363  00F629  20                 	db	32
  1364  00F62A  4D                 	db	77	;'M'
  1365  00F62B  65                 	db	101	;'e'
  1366  00F62C  61                 	db	97	;'a'
  1367  00F62D  73                 	db	115	;'s'
  1368  00F62E  75                 	db	117	;'u'
  1369  00F62F  72                 	db	114	;'r'
  1370  00F630  65                 	db	101	;'e'
  1371  00F631  20                 	db	32
  1372  00F632  52                 	db	82	;'R'
  1373  00F633  4D                 	db	77	;'M'
  1374  00F634  53                 	db	83	;'S'
  1375  00F635  20                 	db	32
  1376  00F636  43                 	db	67	;'C'
  1377  00F637  75                 	db	117	;'u'
  1378  00F638  72                 	db	114	;'r'
  1379  00F639  72                 	db	114	;'r'
  1380  00F63A  65                 	db	101	;'e'
  1381  00F63B  6E                 	db	110	;'n'
  1382  00F63C  74                 	db	116	;'t'
  1383  00F63D  3F                 	db	63	;'?'
  1384  00F63E  3A                 	db	58	;':'
  1385  00F63F  20                 	db	32
  1386  00F640  52                 	db	82	;'R'
  1387  00F641  65                 	db	101	;'e'
  1388  00F642  74                 	db	116	;'t'
  1389  00F643  75                 	db	117	;'u'
  1390  00F644  72                 	db	114	;'r'
  1391  00F645  6E                 	db	110	;'n'
  1392  00F646  73                 	db	115	;'s'
  1393  00F647  20                 	db	32
  1394  00F648  74                 	db	116	;'t'
  1395  00F649  68                 	db	104	;'h'
  1396  00F64A  65                 	db	101	;'e'
  1397  00F64B  20                 	db	32
  1398  00F64C  63                 	db	99	;'c'
  1399  00F64D  61                 	db	97	;'a'
  1400  00F64E  6C                 	db	108	;'l'
  1401  00F64F  63                 	db	99	;'c'
  1402  00F650  75                 	db	117	;'u'
  1403  00F651  6C                 	db	108	;'l'
  1404  00F652  61                 	db	97	;'a'
  1405  00F653  74                 	db	116	;'t'
  1406  00F654  65                 	db	101	;'e'
  1407  00F655  64                 	db	100	;'d'
  1408  00F656  20                 	db	32
  1409  00F657  52                 	db	82	;'R'
  1410  00F658  4D                 	db	77	;'M'
  1411  00F659  53                 	db	83	;'S'
  1412  00F65A  20                 	db	32
  1413  00F65B  6F                 	db	111	;'o'
  1414  00F65C  75                 	db	117	;'u'
  1415  00F65D  74                 	db	116	;'t'
  1416  00F65E  70                 	db	112	;'p'
  1417  00F65F  75                 	db	117	;'u'
  1418  00F660  74                 	db	116	;'t'
  1419  00F661  20                 	db	32
  1420  00F662  63                 	db	99	;'c'
  1421  00F663  75                 	db	117	;'u'
  1422  00F664  72                 	db	114	;'r'
  1423  00F665  72                 	db	114	;'r'
  1424  00F666  65                 	db	101	;'e'
  1425  00F667  6E                 	db	110	;'n'
  1426  00F668  74                 	db	116	;'t'
  1427  00F669  20                 	db	32
  1428  00F66A  66                 	db	102	;'f'
  1429  00F66B  72                 	db	114	;'r'
  1430  00F66C  6F                 	db	111	;'o'
  1431  00F66D  6D                 	db	109	;'m'
  1432  00F66E  20                 	db	32
  1433  00F66F  6D                 	db	109	;'m'
  1434  00F670  65                 	db	101	;'e'
  1435  00F671  61                 	db	97	;'a'
  1436  00F672  73                 	db	115	;'s'
  1437  00F673  75                 	db	117	;'u'
  1438  00F674  72                 	db	114	;'r'
  1439  00F675  65                 	db	101	;'e'
  1440  00F676  6D                 	db	109	;'m'
  1441  00F677  65                 	db	101	;'e'
  1442  00F678  6E                 	db	110	;'n'
  1443  00F679  74                 	db	116	;'t'
  1444  00F67A  73                 	db	115	;'s'
  1445  00F67B  20                 	db	32
  1446  00F67C  61                 	db	97	;'a'
  1447  00F67D  6E                 	db	110	;'n'
  1448  00F67E  64                 	db	100	;'d'
  1449  00F67F  20                 	db	32
  1450  00F680  54                 	db	84	;'T'
  1451  00F681  52                 	db	82	;'R'
  1452  00F682  49                 	db	73	;'I'
  1453  00F683  41                 	db	65	;'A'
  1454  00F684  43                 	db	67	;'C'
  1455  00F685  20                 	db	32
  1456  00F686  66                 	db	102	;'f'
  1457  00F687  69                 	db	105	;'i'
  1458  00F688  72                 	db	114	;'r'
  1459  00F689  69                 	db	105	;'i'
  1460  00F68A  6E                 	db	110	;'n'
  1461  00F68B  67                 	db	103	;'g'
  1462  00F68C  20                 	db	32
  1463  00F68D  61                 	db	97	;'a'
  1464  00F68E  6E                 	db	110	;'n'
  1465  00F68F  67                 	db	103	;'g'
  1466  00F690  6C                 	db	108	;'l'
  1467  00F691  65                 	db	101	;'e'
  1468  00F692  0A                 	db	10
  1469  00F693  0D                 	db	13
  1470  00F694  20                 	db	32
  1471  00F695  20                 	db	32
  1472  00F696  20                 	db	32
  1473  00F697  4D                 	db	77	;'M'
  1474  00F698  65                 	db	101	;'e'
  1475  00F699  61                 	db	97	;'a'
  1476  00F69A  73                 	db	115	;'s'
  1477  00F69B  75                 	db	117	;'u'
  1478  00F69C  72                 	db	114	;'r'
  1479  00F69D  65                 	db	101	;'e'
  1480  00F69E  20                 	db	32
  1481  00F69F  52                 	db	82	;'R'
  1482  00F6A0  4D                 	db	77	;'M'
  1483  00F6A1  53                 	db	83	;'S'
  1484  00F6A2  20                 	db	32
  1485  00F6A3  56                 	db	86	;'V'
  1486  00F6A4  6F                 	db	111	;'o'
  1487  00F6A5  6C                 	db	108	;'l'
  1488  00F6A6  74                 	db	116	;'t'
  1489  00F6A7  61                 	db	97	;'a'
  1490  00F6A8  67                 	db	103	;'g'
  1491  00F6A9  65                 	db	101	;'e'
  1492  00F6AA  3F                 	db	63	;'?'
  1493  00F6AB  3A                 	db	58	;':'
  1494  00F6AC  20                 	db	32
  1495  00F6AD  52                 	db	82	;'R'
  1496  00F6AE  65                 	db	101	;'e'
  1497  00F6AF  74                 	db	116	;'t'
  1498  00F6B0  75                 	db	117	;'u'
  1499  00F6B1  72                 	db	114	;'r'
  1500  00F6B2  6E                 	db	110	;'n'
  1501  00F6B3  73                 	db	115	;'s'
  1502  00F6B4  20                 	db	32
  1503  00F6B5  74                 	db	116	;'t'
  1504  00F6B6  68                 	db	104	;'h'
  1505  00F6B7  65                 	db	101	;'e'
  1506  00F6B8  20                 	db	32
  1507  00F6B9  63                 	db	99	;'c'
  1508  00F6BA  61                 	db	97	;'a'
  1509  00F6BB  6C                 	db	108	;'l'
  1510  00F6BC  63                 	db	99	;'c'
  1511  00F6BD  75                 	db	117	;'u'
  1512  00F6BE  6C                 	db	108	;'l'
  1513  00F6BF  61                 	db	97	;'a'
  1514  00F6C0  74                 	db	116	;'t'
  1515  00F6C1  65                 	db	101	;'e'
  1516  00F6C2  64                 	db	100	;'d'
  1517  00F6C3  20                 	db	32
  1518  00F6C4  52                 	db	82	;'R'
  1519  00F6C5  4D                 	db	77	;'M'
  1520  00F6C6  53                 	db	83	;'S'
  1521  00F6C7  20                 	db	32
  1522  00F6C8  6F                 	db	111	;'o'
  1523  00F6C9  75                 	db	117	;'u'
  1524  00F6CA  74                 	db	116	;'t'
  1525  00F6CB  70                 	db	112	;'p'
  1526  00F6CC  75                 	db	117	;'u'
  1527  00F6CD  74                 	db	116	;'t'
  1528  00F6CE  20                 	db	32
  1529  00F6CF  76                 	db	118	;'v'
  1530  00F6D0  6F                 	db	111	;'o'
  1531  00F6D1  6C                 	db	108	;'l'
  1532  00F6D2  74                 	db	116	;'t'
  1533  00F6D3  61                 	db	97	;'a'
  1534  00F6D4  67                 	db	103	;'g'
  1535  00F6D5  65                 	db	101	;'e'
  1536  00F6D6  20                 	db	32
  1537  00F6D7  66                 	db	102	;'f'
  1538  00F6D8  72                 	db	114	;'r'
  1539  00F6D9  6F                 	db	111	;'o'
  1540  00F6DA  6D                 	db	109	;'m'
  1541  00F6DB  20                 	db	32
  1542  00F6DC  54                 	db	84	;'T'
  1543  00F6DD  52                 	db	82	;'R'
  1544  00F6DE  49                 	db	73	;'I'
  1545  00F6DF  41                 	db	65	;'A'
  1546  00F6E0  43                 	db	67	;'C'
  1547  00F6E1  20                 	db	32
  1548  00F6E2  66                 	db	102	;'f'
  1549  00F6E3  69                 	db	105	;'i'
  1550  00F6E4  72                 	db	114	;'r'
  1551  00F6E5  69                 	db	105	;'i'
  1552  00F6E6  6E                 	db	110	;'n'
  1553  00F6E7  67                 	db	103	;'g'
  1554  00F6E8  20                 	db	32
  1555  00F6E9  61                 	db	97	;'a'
  1556  00F6EA  6E                 	db	110	;'n'
  1557  00F6EB  67                 	db	103	;'g'
  1558  00F6EC  6C                 	db	108	;'l'
  1559  00F6ED  65                 	db	101	;'e'
  1560  00F6EE  0A                 	db	10
  1561  00F6EF  0D                 	db	13
  1562  00F6F0  20                 	db	32
  1563  00F6F1  20                 	db	32
  1564  00F6F2  20                 	db	32
  1565  00F6F3  4D                 	db	77	;'M'
  1566  00F6F4  65                 	db	101	;'e'
  1567  00F6F5  61                 	db	97	;'a'
  1568  00F6F6  73                 	db	115	;'s'
  1569  00F6F7  75                 	db	117	;'u'
  1570  00F6F8  72                 	db	114	;'r'
  1571  00F6F9  65                 	db	101	;'e'
  1572  00F6FA  20                 	db	32
  1573  00F6FB  50                 	db	80	;'P'
  1574  00F6FC  6F                 	db	111	;'o'
  1575  00F6FD  77                 	db	119	;'w'
  1576  00F6FE  65                 	db	101	;'e'
  1577  00F6FF  72                 	db	114	;'r'
  1578  00F700  3F                 	db	63	;'?'
  1579  00F701  3A                 	db	58	;':'
  1580  00F702  20                 	db	32
  1581  00F703  52                 	db	82	;'R'
  1582  00F704  65                 	db	101	;'e'
  1583  00F705  74                 	db	116	;'t'
  1584  00F706  75                 	db	117	;'u'
  1585  00F707  72                 	db	114	;'r'
  1586  00F708  6E                 	db	110	;'n'
  1587  00F709  73                 	db	115	;'s'
  1588  00F70A  20                 	db	32
  1589  00F70B  74                 	db	116	;'t'
  1590  00F70C  68                 	db	104	;'h'
  1591  00F70D  65                 	db	101	;'e'
  1592  00F70E  20                 	db	32
  1593  00F70F  63                 	db	99	;'c'
  1594  00F710  61                 	db	97	;'a'
  1595  00F711  6C                 	db	108	;'l'
  1596  00F712  63                 	db	99	;'c'
  1597  00F713  75                 	db	117	;'u'
  1598  00F714  6C                 	db	108	;'l'
  1599  00F715  61                 	db	97	;'a'
  1600  00F716  74                 	db	116	;'t'
  1601  00F717  65                 	db	101	;'e'
  1602  00F718  64                 	db	100	;'d'
  1603  00F719  20                 	db	32
  1604  00F71A  6F                 	db	111	;'o'
  1605  00F71B  75                 	db	117	;'u'
  1606  00F71C  74                 	db	116	;'t'
  1607  00F71D  70                 	db	112	;'p'
  1608  00F71E  75                 	db	117	;'u'
  1609  00F71F  74                 	db	116	;'t'
  1610  00F720  20                 	db	32
  1611  00F721  70                 	db	112	;'p'
  1612  00F722  6F                 	db	111	;'o'
  1613  00F723  77                 	db	119	;'w'
  1614  00F724  65                 	db	101	;'e'
  1615  00F725  72                 	db	114	;'r'
  1616  00F726  20                 	db	32
  1617  00F727  69                 	db	105	;'i'
  1618  00F728  6E                 	db	110	;'n'
  1619  00F729  20                 	db	32
  1620  00F72A  57                 	db	87	;'W'
  1621  00F72B  61                 	db	97	;'a'
  1622  00F72C  74                 	db	116	;'t'
  1623  00F72D  74                 	db	116	;'t'
  1624  00F72E  73                 	db	115	;'s'
  1625  00F72F  0A                 	db	10
  1626  00F730  0D                 	db	13
  1627  00F731  0A                 	db	10
  1628  00F732  0D                 	db	13
  1629  00F733  4F                 	db	79	;'O'
  1630  00F734  75                 	db	117	;'u'
  1631  00F735  74                 	db	116	;'t'
  1632  00F736  70                 	db	112	;'p'
  1633  00F737  75                 	db	117	;'u'
  1634  00F738  74                 	db	116	;'t'
  1635  00F739  20                 	db	32
  1636  00F73A  43                 	db	67	;'C'
  1637  00F73B  6F                 	db	111	;'o'
  1638  00F73C  6E                 	db	110	;'n'
  1639  00F73D  74                 	db	116	;'t'
  1640  00F73E  72                 	db	114	;'r'
  1641  00F73F  6F                 	db	111	;'o'
  1642  00F740  6C                 	db	108	;'l'
  1643  00F741  20                 	db	32
  1644  00F742  43                 	db	67	;'C'
  1645  00F743  6F                 	db	111	;'o'
  1646  00F744  6D                 	db	109	;'m'
  1647  00F745  6D                 	db	109	;'m'
  1648  00F746  61                 	db	97	;'a'
  1649  00F747  6E                 	db	110	;'n'
  1650  00F748  64                 	db	100	;'d'
  1651  00F749  73                 	db	115	;'s'
  1652  00F74A  3A                 	db	58	;':'
  1653  00F74B  0A                 	db	10
  1654  00F74C  0D                 	db	13
  1655  00F74D  20                 	db	32
  1656  00F74E  20                 	db	32
  1657  00F74F  20                 	db	32
  1658  00F750  45                 	db	69	;'E'
  1659  00F751  6E                 	db	110	;'n'
  1660  00F752  61                 	db	97	;'a'
  1661  00F753  62                 	db	98	;'b'
  1662  00F754  6C                 	db	108	;'l'
  1663  00F755  65                 	db	101	;'e'
  1664  00F756  20                 	db	32
  1665  00F757  44                 	db	68	;'D'
  1666  00F758  69                 	db	105	;'i'
  1667  00F759  6D                 	db	109	;'m'
  1668  00F75A  6D                 	db	109	;'m'
  1669  00F75B  69                 	db	105	;'i'
  1670  00F75C  6E                 	db	110	;'n'
  1671  00F75D  67                 	db	103	;'g'
  1672  00F75E  3A                 	db	58	;':'
  1673  00F75F  20                 	db	32
  1674  00F760  45                 	db	69	;'E'
  1675  00F761  6E                 	db	110	;'n'
  1676  00F762  61                 	db	97	;'a'
  1677  00F763  62                 	db	98	;'b'
  1678  00F764  6C                 	db	108	;'l'
  1679  00F765  65                 	db	101	;'e'
  1680  00F766  20                 	db	32
  1681  00F767  54                 	db	84	;'T'
  1682  00F768  52                 	db	82	;'R'
  1683  00F769  49                 	db	73	;'I'
  1684  00F76A  41                 	db	65	;'A'
  1685  00F76B  43                 	db	67	;'C'
  1686  00F76C  20                 	db	32
  1687  00F76D  6F                 	db	111	;'o'
  1688  00F76E  75                 	db	117	;'u'
  1689  00F76F  74                 	db	116	;'t'
  1690  00F770  70                 	db	112	;'p'
  1691  00F771  75                 	db	117	;'u'
  1692  00F772  74                 	db	116	;'t'
  1693  00F773  20                 	db	32
  1694  00F774  64                 	db	100	;'d'
  1695  00F775  69                 	db	105	;'i'
  1696  00F776  6D                 	db	109	;'m'
  1697  00F777  6D                 	db	109	;'m'
  1698  00F778  69                 	db	105	;'i'
  1699  00F779  6E                 	db	110	;'n'
  1700  00F77A  67                 	db	103	;'g'
  1701  00F77B  0A                 	db	10
  1702  00F77C  0D                 	db	13
  1703  00F77D  20                 	db	32
  1704  00F77E  20                 	db	32
  1705  00F77F  20                 	db	32
  1706  00F780  44                 	db	68	;'D'
  1707  00F781  69                 	db	105	;'i'
  1708  00F782  73                 	db	115	;'s'
  1709  00F783  61                 	db	97	;'a'
  1710  00F784  62                 	db	98	;'b'
  1711  00F785  6C                 	db	108	;'l'
  1712  00F786  65                 	db	101	;'e'
  1713  00F787  20                 	db	32
  1714  00F788  44                 	db	68	;'D'
  1715  00F789  69                 	db	105	;'i'
  1716  00F78A  6D                 	db	109	;'m'
  1717  00F78B  6D                 	db	109	;'m'
  1718  00F78C  69                 	db	105	;'i'
  1719  00F78D  6E                 	db	110	;'n'
  1720  00F78E  67                 	db	103	;'g'
  1721  00F78F  3A                 	db	58	;':'
  1722  00F790  20                 	db	32
  1723  00F791  44                 	db	68	;'D'
  1724  00F792  69                 	db	105	;'i'
  1725  00F793  73                 	db	115	;'s'
  1726  00F794  61                 	db	97	;'a'
  1727  00F795  62                 	db	98	;'b'
  1728  00F796  6C                 	db	108	;'l'
  1729  00F797  65                 	db	101	;'e'
  1730  00F798  20                 	db	32
  1731  00F799  54                 	db	84	;'T'
  1732  00F79A  52                 	db	82	;'R'
  1733  00F79B  49                 	db	73	;'I'
  1734  00F79C  41                 	db	65	;'A'
  1735  00F79D  43                 	db	67	;'C'
  1736  00F79E  20                 	db	32
  1737  00F79F  6F                 	db	111	;'o'
  1738  00F7A0  75                 	db	117	;'u'
  1739  00F7A1  74                 	db	116	;'t'
  1740  00F7A2  70                 	db	112	;'p'
  1741  00F7A3  75                 	db	117	;'u'
  1742  00F7A4  74                 	db	116	;'t'
  1743  00F7A5  20                 	db	32
  1744  00F7A6  64                 	db	100	;'d'
  1745  00F7A7  69                 	db	105	;'i'
  1746  00F7A8  6D                 	db	109	;'m'
  1747  00F7A9  6D                 	db	109	;'m'
  1748  00F7AA  69                 	db	105	;'i'
  1749  00F7AB  6E                 	db	110	;'n'
  1750  00F7AC  67                 	db	103	;'g'
  1751  00F7AD  0A                 	db	10
  1752  00F7AE  0D                 	db	13
  1753  00F7AF  20                 	db	32
  1754  00F7B0  20                 	db	32
  1755  00F7B1  20                 	db	32
  1756  00F7B2  45                 	db	69	;'E'
  1757  00F7B3  6E                 	db	110	;'n'
  1758  00F7B4  61                 	db	97	;'a'
  1759  00F7B5  62                 	db	98	;'b'
  1760  00F7B6  6C                 	db	108	;'l'
  1761  00F7B7  65                 	db	101	;'e'
  1762  00F7B8  20                 	db	32
  1763  00F7B9  4C                 	db	76	;'L'
  1764  00F7BA  6F                 	db	111	;'o'
  1765  00F7BB  61                 	db	97	;'a'
  1766  00F7BC  64                 	db	100	;'d'
  1767  00F7BD  3A                 	db	58	;':'
  1768  00F7BE  20                 	db	32
  1769  00F7BF  45                 	db	69	;'E'
  1770  00F7C0  6E                 	db	110	;'n'
  1771  00F7C1  61                 	db	97	;'a'
  1772  00F7C2  62                 	db	98	;'b'
  1773  00F7C3  6C                 	db	108	;'l'
  1774  00F7C4  65                 	db	101	;'e'
  1775  00F7C5  73                 	db	115	;'s'
  1776  00F7C6  20                 	db	32
  1777  00F7C7  74                 	db	116	;'t'
  1778  00F7C8  68                 	db	104	;'h'
  1779  00F7C9  65                 	db	101	;'e'
  1780  00F7CA  20                 	db	32
  1781  00F7CB  6F                 	db	111	;'o'
  1782  00F7CC  75                 	db	117	;'u'
  1783  00F7CD  74                 	db	116	;'t'
  1784  00F7CE  70                 	db	112	;'p'
  1785  00F7CF  75                 	db	117	;'u'
  1786  00F7D0  74                 	db	116	;'t'
  1787  00F7D1  20                 	db	32
  1788  00F7D2  54                 	db	84	;'T'
  1789  00F7D3  52                 	db	82	;'R'
  1790  00F7D4  49                 	db	73	;'I'
  1791  00F7D5  41                 	db	65	;'A'
  1792  00F7D6  43                 	db	67	;'C'
  1793  00F7D7  20                 	db	32
  1794  00F7D8  77                 	db	119	;'w'
  1795  00F7D9  69                 	db	105	;'i'
  1796  00F7DA  74                 	db	116	;'t'
  1797  00F7DB  68                 	db	104	;'h'
  1798  00F7DC  20                 	db	32
  1799  00F7DD  64                 	db	100	;'d'
  1800  00F7DE  69                 	db	105	;'i'
  1801  00F7DF  6D                 	db	109	;'m'
  1802  00F7E0  6D                 	db	109	;'m'
  1803  00F7E1  69                 	db	105	;'i'
  1804  00F7E2  6E                 	db	110	;'n'
  1805  00F7E3  67                 	db	103	;'g'
  1806  00F7E4  20                 	db	32
  1807  00F7E5  64                 	db	100	;'d'
  1808  00F7E6  69                 	db	105	;'i'
  1809  00F7E7  73                 	db	115	;'s'
  1810  00F7E8  61                 	db	97	;'a'
  1811  00F7E9  62                 	db	98	;'b'
  1812  00F7EA  6C                 	db	108	;'l'
  1813  00F7EB  65                 	db	101	;'e'
  1814  00F7EC  64                 	db	100	;'d'
  1815  00F7ED  0A                 	db	10
  1816  00F7EE  0D                 	db	13
  1817  00F7EF  20                 	db	32
  1818  00F7F0  20                 	db	32
  1819  00F7F1  20                 	db	32
  1820  00F7F2  44                 	db	68	;'D'
  1821  00F7F3  69                 	db	105	;'i'
  1822  00F7F4  73                 	db	115	;'s'
  1823  00F7F5  61                 	db	97	;'a'
  1824  00F7F6  62                 	db	98	;'b'
  1825  00F7F7  6C                 	db	108	;'l'
  1826  00F7F8  65                 	db	101	;'e'
  1827  00F7F9  20                 	db	32
  1828  00F7FA  4C                 	db	76	;'L'
  1829  00F7FB  6F                 	db	111	;'o'
  1830  00F7FC  61                 	db	97	;'a'
  1831  00F7FD  64                 	db	100	;'d'
  1832  00F7FE  3A                 	db	58	;':'
  1833  00F7FF  20                 	db	32
  1834  00F800  44                 	db	68	;'D'
  1835  00F801  69                 	db	105	;'i'
  1836  00F802  73                 	db	115	;'s'
  1837  00F803  61                 	db	97	;'a'
  1838  00F804  62                 	db	98	;'b'
  1839  00F805  6C                 	db	108	;'l'
  1840  00F806  65                 	db	101	;'e'
  1841  00F807  73                 	db	115	;'s'
  1842  00F808  20                 	db	32
  1843  00F809  74                 	db	116	;'t'
  1844  00F80A  68                 	db	104	;'h'
  1845  00F80B  65                 	db	101	;'e'
  1846  00F80C  20                 	db	32
  1847  00F80D  6F                 	db	111	;'o'
  1848  00F80E  75                 	db	117	;'u'
  1849  00F80F  74                 	db	116	;'t'
  1850  00F810  70                 	db	112	;'p'
  1851  00F811  75                 	db	117	;'u'
  1852  00F812  74                 	db	116	;'t'
  1853  00F813  20                 	db	32
  1854  00F814  54                 	db	84	;'T'
  1855  00F815  52                 	db	82	;'R'
  1856  00F816  49                 	db	73	;'I'
  1857  00F817  41                 	db	65	;'A'
  1858  00F818  43                 	db	67	;'C'
  1859  00F819  20                 	db	32
  1860  00F81A  63                 	db	99	;'c'
  1861  00F81B  6F                 	db	111	;'o'
  1862  00F81C  6D                 	db	109	;'m'
  1863  00F81D  70                 	db	112	;'p'
  1864  00F81E  6C                 	db	108	;'l'
  1865  00F81F  65                 	db	101	;'e'
  1866  00F820  74                 	db	116	;'t'
  1867  00F821  65                 	db	101	;'e'
  1868  00F822  6C                 	db	108	;'l'
  1869  00F823  79                 	db	121	;'y'
  1870  00F824  0A                 	db	10
  1871  00F825  0D                 	db	13
  1872  00F826  20                 	db	32
  1873  00F827  20                 	db	32
  1874  00F828  20                 	db	32
  1875  00F829  53                 	db	83	;'S'
  1876  00F82A  65                 	db	101	;'e'
  1877  00F82B  74                 	db	116	;'t'
  1878  00F82C  20                 	db	32
  1879  00F82D  44                 	db	68	;'D'
  1880  00F82E  69                 	db	105	;'i'
  1881  00F82F  6D                 	db	109	;'m'
  1882  00F830  6D                 	db	109	;'m'
  1883  00F831  69                 	db	105	;'i'
  1884  00F832  6E                 	db	110	;'n'
  1885  00F833  67                 	db	103	;'g'
  1886  00F834  20                 	db	32
  1887  00F835  50                 	db	80	;'P'
  1888  00F836  65                 	db	101	;'e'
  1889  00F837  72                 	db	114	;'r'
  1890  00F838  63                 	db	99	;'c'
  1891  00F839  65                 	db	101	;'e'
  1892  00F83A  6E                 	db	110	;'n'
  1893  00F83B  74                 	db	116	;'t'
  1894  00F83C  61                 	db	97	;'a'
  1895  00F83D  67                 	db	103	;'g'
  1896  00F83E  65                 	db	101	;'e'
  1897  00F83F  3A                 	db	58	;':'
  1898  00F840  20                 	db	32
  1899  00F841  3C                 	db	60	;'<'
  1900  00F842  78                 	db	120	;'x'
  1901  00F843  3E                 	db	62	;'>'
  1902  00F844  3A                 	db	58	;':'
  1903  00F845  20                 	db	32
  1904  00F846  53                 	db	83	;'S'
  1905  00F847  65                 	db	101	;'e'
  1906  00F848  74                 	db	116	;'t'
  1907  00F849  73                 	db	115	;'s'
  1908  00F84A  20                 	db	32
  1909  00F84B  74                 	db	116	;'t'
  1910  00F84C  68                 	db	104	;'h'
  1911  00F84D  65                 	db	101	;'e'
  1912  00F84E  20                 	db	32
  1913  00F84F  6F                 	db	111	;'o'
  1914  00F850  75                 	db	117	;'u'
  1915  00F851  74                 	db	116	;'t'
  1916  00F852  70                 	db	112	;'p'
  1917  00F853  75                 	db	117	;'u'
  1918  00F854  74                 	db	116	;'t'
  1919  00F855  20                 	db	32
  1920  00F856  64                 	db	100	;'d'
  1921  00F857  69                 	db	105	;'i'
  1922  00F858  6D                 	db	109	;'m'
  1923  00F859  6D                 	db	109	;'m'
  1924  00F85A  69                 	db	105	;'i'
  1925  00F85B  6E                 	db	110	;'n'
  1926  00F85C  67                 	db	103	;'g'
  1927  00F85D  20                 	db	32
  1928  00F85E  70                 	db	112	;'p'
  1929  00F85F  65                 	db	101	;'e'
  1930  00F860  72                 	db	114	;'r'
  1931  00F861  63                 	db	99	;'c'
  1932  00F862  65                 	db	101	;'e'
  1933  00F863  6E                 	db	110	;'n'
  1934  00F864  74                 	db	116	;'t'
  1935  00F865  61                 	db	97	;'a'
  1936  00F866  67                 	db	103	;'g'
  1937  00F867  65                 	db	101	;'e'
  1938  00F868  20                 	db	32
  1939  00F869  61                 	db	97	;'a'
  1940  00F86A  73                 	db	115	;'s'
  1941  00F86B  20                 	db	32
  1942  00F86C  78                 	db	120	;'x'
  1943  00F86D  20                 	db	32
  1944  00F86E  70                 	db	112	;'p'
  1945  00F86F  65                 	db	101	;'e'
  1946  00F870  72                 	db	114	;'r'
  1947  00F871  63                 	db	99	;'c'
  1948  00F872  65                 	db	101	;'e'
  1949  00F873  6E                 	db	110	;'n'
  1950  00F874  74                 	db	116	;'t'
  1951  00F875  0A                 	db	10
  1952  00F876  0D                 	db	13
  1953  00F877  00                 	db	0
  1954  00F878  20                 	db	32
  1955  00F879  20                 	db	32
  1956  00F87A  20                 	db	32
  1957  00F87B  20                 	db	32
  1958  00F87C  42                 	db	66	;'B'
  1959  00F87D  6F                 	db	111	;'o'
  1960  00F87E  6F                 	db	111	;'o'
  1961  00F87F  74                 	db	116	;'t'
  1962  00F880  20                 	db	32
  1963  00F881  63                 	db	99	;'c'
  1964  00F882  6F                 	db	111	;'o'
  1965  00F883  6D                 	db	109	;'m'
  1966  00F884  70                 	db	112	;'p'
  1967  00F885  6C                 	db	108	;'l'
  1968  00F886  65                 	db	101	;'e'
  1969  00F887  74                 	db	116	;'t'
  1970  00F888  65                 	db	101	;'e'
  1971  00F889  0A                 	db	10
  1972  00F88A  0D                 	db	13
  1973  00F88B  20                 	db	32
  1974  00F88C  20                 	db	32
  1975  00F88D  20                 	db	32
  1976  00F88E  20                 	db	32
  1977  00F88F  50                 	db	80	;'P'
  1978  00F890  49                 	db	73	;'I'
  1979  00F891  43                 	db	67	;'C'
  1980  00F892  31                 	db	49	;'1'
  1981  00F893  38                 	db	56	;'8'
  1982  00F894  46                 	db	70	;'F'
  1983  00F895  36                 	db	54	;'6'
  1984  00F896  37                 	db	55	;'7'
  1985  00F897  4B                 	db	75	;'K'
  1986  00F898  34                 	db	52	;'4'
  1987  00F899  30                 	db	48	;'0'
  1988  00F89A  20                 	db	32
  1989  00F89B  6D                 	db	109	;'m'
  1990  00F89C  54                 	db	84	;'T'
  1991  00F89D  6F                 	db	111	;'o'
  1992  00F89E  75                 	db	117	;'u'
  1993  00F89F  63                 	db	99	;'c'
  1994  00F8A0  68                 	db	104	;'h'
  1995  00F8A1  20                 	db	32
  1996  00F8A2  54                 	db	84	;'T'
  1997  00F8A3  65                 	db	101	;'e'
  1998  00F8A4  73                 	db	115	;'s'
  1999  00F8A5  74                 	db	116	;'t'
  2000  00F8A6  20                 	db	32
  2001  00F8A7  42                 	db	66	;'B'
  2002  00F8A8  6F                 	db	111	;'o'
  2003  00F8A9  61                 	db	97	;'a'
  2004  00F8AA  72                 	db	114	;'r'
  2005  00F8AB  64                 	db	100	;'d'
  2006  00F8AC  0A                 	db	10
  2007  00F8AD  0D                 	db	13
  2008  00F8AE  20                 	db	32
  2009  00F8AF  20                 	db	32
  2010  00F8B0  20                 	db	32
  2011  00F8B1  20                 	db	32
  2012  00F8B2  45                 	db	69	;'E'
  2013  00F8B3  76                 	db	118	;'v'
  2014  00F8B4  61                 	db	97	;'a'
  2015  00F8B5  6C                 	db	108	;'l'
  2016  00F8B6  75                 	db	117	;'u'
  2017  00F8B7  61                 	db	97	;'a'
  2018  00F8B8  74                 	db	116	;'t'
  2019  00F8B9  65                 	db	101	;'e'
  2020  00F8BA  73                 	db	115	;'s'
  2021  00F8BB  20                 	db	32
  2022  00F8BC  74                 	db	116	;'t'
  2023  00F8BD  68                 	db	104	;'h'
  2024  00F8BE  65                 	db	101	;'e'
  2025  00F8BF  20                 	db	32
  2026  00F8C0  6D                 	db	109	;'m'
  2027  00F8C1  54                 	db	84	;'T'
  2028  00F8C2  6F                 	db	111	;'o'
  2029  00F8C3  75                 	db	117	;'u'
  2030  00F8C4  63                 	db	99	;'c'
  2031  00F8C5  68                 	db	104	;'h'
  2032  00F8C6  20                 	db	32
  2033  00F8C7  63                 	db	99	;'c'
  2034  00F8C8  61                 	db	97	;'a'
  2035  00F8C9  70                 	db	112	;'p'
  2036  00F8CA  61                 	db	97	;'a'
  2037  00F8CB  63                 	db	99	;'c'
  2038  00F8CC  69                 	db	105	;'i'
  2039  00F8CD  74                 	db	116	;'t'
  2040  00F8CE  69                 	db	105	;'i'
  2041  00F8CF  76                 	db	118	;'v'
  2042  00F8D0  65                 	db	101	;'e'
  2043  00F8D1  20                 	db	32
  2044  00F8D2  74                 	db	116	;'t'
  2045  00F8D3  6F                 	db	111	;'o'
  2046  00F8D4  75                 	db	117	;'u'
  2047  00F8D5  63                 	db	99	;'c'
  2048  00F8D6  68                 	db	104	;'h'
  2049  00F8D7  20                 	db	32
  2050  00F8D8  6C                 	db	108	;'l'
  2051  00F8D9  69                 	db	105	;'i'
  2052  00F8DA  62                 	db	98	;'b'
  2053  00F8DB  72                 	db	114	;'r'
  2054  00F8DC  61                 	db	97	;'a'
  2055  00F8DD  72                 	db	114	;'r'
  2056  00F8DE  79                 	db	121	;'y'
  2057  00F8DF  20                 	db	32
  2058  00F8E0  64                 	db	100	;'d'
  2059  00F8E1  69                 	db	105	;'i'
  2060  00F8E2  73                 	db	115	;'s'
  2061  00F8E3  74                 	db	116	;'t'
  2062  00F8E4  72                 	db	114	;'r'
  2063  00F8E5  69                 	db	105	;'i'
  2064  00F8E6  62                 	db	98	;'b'
  2065  00F8E7  75                 	db	117	;'u'
  2066  00F8E8  74                 	db	116	;'t'
  2067  00F8E9  65                 	db	101	;'e'
  2068  00F8EA  64                 	db	100	;'d'
  2069  00F8EB  20                 	db	32
  2070  00F8EC  62                 	db	98	;'b'
  2071  00F8ED  79                 	db	121	;'y'
  2072  00F8EE  20                 	db	32
  2073  00F8EF  4D                 	db	77	;'M'
  2074  00F8F0  69                 	db	105	;'i'
  2075  00F8F1  63                 	db	99	;'c'
  2076  00F8F2  72                 	db	114	;'r'
  2077  00F8F3  6F                 	db	111	;'o'
  2078  00F8F4  63                 	db	99	;'c'
  2079  00F8F5  68                 	db	104	;'h'
  2080  00F8F6  69                 	db	105	;'i'
  2081  00F8F7  70                 	db	112	;'p'
  2082  00F8F8  0A                 	db	10
  2083  00F8F9  0D                 	db	13
  2084  00F8FA  20                 	db	32
  2085  00F8FB  20                 	db	32
  2086  00F8FC  20                 	db	32
  2087  00F8FD  20                 	db	32
  2088  00F8FE  53                 	db	83	;'S'
  2089  00F8FF  65                 	db	101	;'e'
  2090  00F900  74                 	db	116	;'t'
  2091  00F901  73                 	db	115	;'s'
  2092  00F902  20                 	db	32
  2093  00F903  74                 	db	116	;'t'
  2094  00F904  68                 	db	104	;'h'
  2095  00F905  65                 	db	101	;'e'
  2096  00F906  20                 	db	32
  2097  00F907  73                 	db	115	;'s'
  2098  00F908  74                 	db	116	;'t'
  2099  00F909  61                 	db	97	;'a'
  2100  00F90A  74                 	db	116	;'t'
  2101  00F90B  65                 	db	101	;'e'
  2102  00F90C  20                 	db	32
  2103  00F90D  6F                 	db	111	;'o'
  2104  00F90E  66                 	db	102	;'f'
  2105  00F90F  20                 	db	32
  2106  00F910  66                 	db	102	;'f'
  2107  00F911  69                 	db	105	;'i'
  2108  00F912  76                 	db	118	;'v'
  2109  00F913  65                 	db	101	;'e'
  2110  00F914  20                 	db	32
  2111  00F915  4C                 	db	76	;'L'
  2112  00F916  45                 	db	69	;'E'
  2113  00F917  44                 	db	68	;'D'
  2114  00F918  73                 	db	115	;'s'
  2115  00F919  20                 	db	32
  2116  00F91A  62                 	db	98	;'b'
  2117  00F91B  61                 	db	97	;'a'
  2118  00F91C  73                 	db	115	;'s'
  2119  00F91D  65                 	db	101	;'e'
  2120  00F91E  64                 	db	100	;'d'
  2121  00F91F  20                 	db	32
  2122  00F920  6F                 	db	111	;'o'
  2123  00F921  6E                 	db	110	;'n'
  2124  00F922  20                 	db	32
  2125  00F923  6D                 	db	109	;'m'
  2126  00F924  54                 	db	84	;'T'
  2127  00F925  6F                 	db	111	;'o'
  2128  00F926  75                 	db	117	;'u'
  2129  00F927  63                 	db	99	;'c'
  2130  00F928  68                 	db	104	;'h'
  2131  00F929  20                 	db	32
  2132  00F92A  63                 	db	99	;'c'
  2133  00F92B  61                 	db	97	;'a'
  2134  00F92C  70                 	db	112	;'p'
  2135  00F92D  61                 	db	97	;'a'
  2136  00F92E  63                 	db	99	;'c'
  2137  00F92F  69                 	db	105	;'i'
  2138  00F930  74                 	db	116	;'t'
  2139  00F931  69                 	db	105	;'i'
  2140  00F932  76                 	db	118	;'v'
  2141  00F933  65                 	db	101	;'e'
  2142  00F934  20                 	db	32
  2143  00F935  70                 	db	112	;'p'
  2144  00F936  75                 	db	117	;'u'
  2145  00F937  73                 	db	115	;'s'
  2146  00F938  68                 	db	104	;'h'
  2147  00F939  62                 	db	98	;'b'
  2148  00F93A  75                 	db	117	;'u'
  2149  00F93B  74                 	db	116	;'t'
  2150  00F93C  74                 	db	116	;'t'
  2151  00F93D  6F                 	db	111	;'o'
  2152  00F93E  6E                 	db	110	;'n'
  2153  00F93F  73                 	db	115	;'s'
  2154  00F940  0A                 	db	10
  2155  00F941  0D                 	db	13
  2156  00F942  20                 	db	32
  2157  00F943  20                 	db	32
  2158  00F944  20                 	db	32
  2159  00F945  20                 	db	32
  2160  00F946  42                 	db	66	;'B'
  2161  00F947  61                 	db	97	;'a'
  2162  00F948  75                 	db	117	;'u'
  2163  00F949  64                 	db	100	;'d'
  2164  00F94A  20                 	db	32
  2165  00F94B  72                 	db	114	;'r'
  2166  00F94C  61                 	db	97	;'a'
  2167  00F94D  74                 	db	116	;'t'
  2168  00F94E  65                 	db	101	;'e'
  2169  00F94F  3A                 	db	58	;':'
  2170  00F950  20                 	db	32
  2171  00F951  31                 	db	49	;'1'
  2172  00F952  31                 	db	49	;'1'
  2173  00F953  35                 	db	53	;'5'
  2174  00F954  32                 	db	50	;'2'
  2175  00F955  30                 	db	48	;'0'
  2176  00F956  30                 	db	48	;'0'
  2177  00F957  20                 	db	32
  2178  00F958  62                 	db	98	;'b'
  2179  00F959  70                 	db	112	;'p'
  2180  00F95A  73                 	db	115	;'s'
  2181  00F95B  0A                 	db	10
  2182  00F95C  0D                 	db	13
  2183  00F95D  20                 	db	32
  2184  00F95E  20                 	db	32
  2185  00F95F  20                 	db	32
  2186  00F960  20                 	db	32
  2187  00F961  4E                 	db	78	;'N'
  2188  00F962  6F                 	db	111	;'o'
  2189  00F963  20                 	db	32
  2190  00F964  70                 	db	112	;'p'
  2191  00F965  61                 	db	97	;'a'
  2192  00F966  72                 	db	114	;'r'
  2193  00F967  69                 	db	105	;'i'
  2194  00F968  74                 	db	116	;'t'
  2195  00F969  79                 	db	121	;'y'
  2196  00F96A  2C                 	db	44
  2197  00F96B  20                 	db	32
  2198  00F96C  38                 	db	56	;'8'
  2199  00F96D  20                 	db	32
  2200  00F96E  62                 	db	98	;'b'
  2201  00F96F  69                 	db	105	;'i'
  2202  00F970  74                 	db	116	;'t'
  2203  00F971  73                 	db	115	;'s'
  2204  00F972  2C                 	db	44
  2205  00F973  20                 	db	32
  2206  00F974  6E                 	db	110	;'n'
  2207  00F975  6F                 	db	111	;'o'
  2208  00F976  20                 	db	32
  2209  00F977  66                 	db	102	;'f'
  2210  00F978  6C                 	db	108	;'l'
  2211  00F979  6F                 	db	111	;'o'
  2212  00F97A  77                 	db	119	;'w'
  2213  00F97B  20                 	db	32
  2214  00F97C  63                 	db	99	;'c'
  2215  00F97D  6F                 	db	111	;'o'
  2216  00F97E  6E                 	db	110	;'n'
  2217  00F97F  74                 	db	116	;'t'
  2218  00F980  72                 	db	114	;'r'
  2219  00F981  6F                 	db	111	;'o'
  2220  00F982  6C                 	db	108	;'l'
  2221  00F983  2C                 	db	44
  2222  00F984  20                 	db	32
  2223  00F985  31                 	db	49	;'1'
  2224  00F986  20                 	db	32
  2225  00F987  73                 	db	115	;'s'
  2226  00F988  74                 	db	116	;'t'
  2227  00F989  6F                 	db	111	;'o'
  2228  00F98A  70                 	db	112	;'p'
  2229  00F98B  20                 	db	32
  2230  00F98C  62                 	db	98	;'b'
  2231  00F98D  69                 	db	105	;'i'
  2232  00F98E  74                 	db	116	;'t'
  2233  00F98F  0A                 	db	10
  2234  00F990  0D                 	db	13
  2235  00F991  20                 	db	32
  2236  00F992  20                 	db	32
  2237  00F993  20                 	db	32
  2238  00F994  20                 	db	32
  2239  00F995  43                 	db	67	;'C'
  2240  00F996  6F                 	db	111	;'o'
  2241  00F997  6D                 	db	109	;'m'
  2242  00F998  6D                 	db	109	;'m'
  2243  00F999  61                 	db	97	;'a'
  2244  00F99A  6E                 	db	110	;'n'
  2245  00F99B  64                 	db	100	;'d'
  2246  00F99C  73                 	db	115	;'s'
  2247  00F99D  20                 	db	32
  2248  00F99E  61                 	db	97	;'a'
  2249  00F99F  72                 	db	114	;'r'
  2250  00F9A0  65                 	db	101	;'e'
  2251  00F9A1  20                 	db	32
  2252  00F9A2  63                 	db	99	;'c'
  2253  00F9A3  61                 	db	97	;'a'
  2254  00F9A4  73                 	db	115	;'s'
  2255  00F9A5  65                 	db	101	;'e'
  2256  00F9A6  20                 	db	32
  2257  00F9A7  73                 	db	115	;'s'
  2258  00F9A8  65                 	db	101	;'e'
  2259  00F9A9  6E                 	db	110	;'n'
  2260  00F9AA  73                 	db	115	;'s'
  2261  00F9AB  69                 	db	105	;'i'
  2262  00F9AC  74                 	db	116	;'t'
  2263  00F9AD  69                 	db	105	;'i'
  2264  00F9AE  76                 	db	118	;'v'
  2265  00F9AF  65                 	db	101	;'e'
  2266  00F9B0  0A                 	db	10
  2267  00F9B1  0D                 	db	13
  2268  00F9B2  20                 	db	32
  2269  00F9B3  20                 	db	32
  2270  00F9B4  20                 	db	32
  2271  00F9B5  20                 	db	32
  2272  00F9B6  45                 	db	69	;'E'
  2273  00F9B7  6E                 	db	110	;'n'
  2274  00F9B8  74                 	db	116	;'t'
  2275  00F9B9  65                 	db	101	;'e'
  2276  00F9BA  72                 	db	114	;'r'
  2277  00F9BB  20                 	db	32
  2278  00F9BC  61                 	db	97	;'a'
  2279  00F9BD  20                 	db	32
  2280  00F9BE  63                 	db	99	;'c'
  2281  00F9BF  6F                 	db	111	;'o'
  2282  00F9C0  6D                 	db	109	;'m'
  2283  00F9C1  6D                 	db	109	;'m'
  2284  00F9C2  61                 	db	97	;'a'
  2285  00F9C3  6E                 	db	110	;'n'
  2286  00F9C4  64                 	db	100	;'d'
  2287  00F9C5  2C                 	db	44
  2288  00F9C6  20                 	db	32
  2289  00F9C7  6F                 	db	111	;'o'
  2290  00F9C8  72                 	db	114	;'r'
  2291  00F9C9  20                 	db	32
  2292  00F9CA  65                 	db	101	;'e'
  2293  00F9CB  6E                 	db	110	;'n'
  2294  00F9CC  74                 	db	116	;'t'
  2295  00F9CD  65                 	db	101	;'e'
  2296  00F9CE  72                 	db	114	;'r'
  2297  00F9CF  20                 	db	32
  2298  00F9D0  48                 	db	72	;'H'
  2299  00F9D1  65                 	db	101	;'e'
  2300  00F9D2  6C                 	db	108	;'l'
  2301  00F9D3  70                 	db	112	;'p'
  2302  00F9D4  20                 	db	32
  2303  00F9D5  66                 	db	102	;'f'
  2304  00F9D6  6F                 	db	111	;'o'
  2305  00F9D7  72                 	db	114	;'r'
  2306  00F9D8  20                 	db	32
  2307  00F9D9  6C                 	db	108	;'l'
  2308  00F9DA  69                 	db	105	;'i'
  2309  00F9DB  73                 	db	115	;'s'
  2310  00F9DC  74                 	db	116	;'t'
  2311  00F9DD  20                 	db	32
  2312  00F9DE  6F                 	db	111	;'o'
  2313  00F9DF  66                 	db	102	;'f'
  2314  00F9E0  20                 	db	32
  2315  00F9E1  63                 	db	99	;'c'
  2316  00F9E2  6F                 	db	111	;'o'
  2317  00F9E3  6D                 	db	109	;'m'
  2318  00F9E4  6D                 	db	109	;'m'
  2319  00F9E5  61                 	db	97	;'a'
  2320  00F9E6  6E                 	db	110	;'n'
  2321  00F9E7  64                 	db	100	;'d'
  2322  00F9E8  73                 	db	115	;'s'
  2323  00F9E9  0A                 	db	10
  2324  00F9EA  0D                 	db	13
  2325  00F9EB  00                 	db	0
  2326  00F9EC                     STR_79:
  2327  00F9EC  49                 	db	73	;'I'
  2328  00F9ED  66                 	db	102	;'f'
  2329  00F9EE  20                 	db	32
  2330  00F9EF  79                 	db	121	;'y'
  2331  00F9F0  6F                 	db	111	;'o'
  2332  00F9F1  75                 	db	117	;'u'
  2333  00F9F2  27                 	db	39
  2334  00F9F3  64                 	db	100	;'d'
  2335  00F9F4  20                 	db	32
  2336  00F9F5  6C                 	db	108	;'l'
  2337  00F9F6  69                 	db	105	;'i'
  2338  00F9F7  6B                 	db	107	;'k'
  2339  00F9F8  65                 	db	101	;'e'
  2340  00F9F9  20                 	db	32
  2341  00F9FA  74                 	db	116	;'t'
  2342  00F9FB  6F                 	db	111	;'o'
  2343  00F9FC  20                 	db	32
  2344  00F9FD  63                 	db	99	;'c'
  2345  00F9FE  6F                 	db	111	;'o'
  2346  00F9FF  6D                 	db	109	;'m'
  2347  00FA00  70                 	db	112	;'p'
  2348  00FA01  6C                 	db	108	;'l'
  2349  00FA02  65                 	db	101	;'e'
  2350  00FA03  74                 	db	116	;'t'
  2351  00FA04  65                 	db	101	;'e'
  2352  00FA05  6C                 	db	108	;'l'
  2353  00FA06  79                 	db	121	;'y'
  2354  00FA07  20                 	db	32
  2355  00FA08  65                 	db	101	;'e'
  2356  00FA09  6E                 	db	110	;'n'
  2357  00FA0A  61                 	db	97	;'a'
  2358  00FA0B  62                 	db	98	;'b'
  2359  00FA0C  6C                 	db	108	;'l'
  2360  00FA0D  65                 	db	101	;'e'
  2361  00FA0E  20                 	db	32
  2362  00FA0F  6F                 	db	111	;'o'
  2363  00FA10  72                 	db	114	;'r'
  2364  00FA11  20                 	db	32
  2365  00FA12  64                 	db	100	;'d'
  2366  00FA13  69                 	db	105	;'i'
  2367  00FA14  73                 	db	115	;'s'
  2368  00FA15  61                 	db	97	;'a'
  2369  00FA16  62                 	db	98	;'b'
  2370  00FA17  6C                 	db	108	;'l'
  2371  00FA18  65                 	db	101	;'e'
  2372  00FA19  20                 	db	32
  2373  00FA1A  74                 	db	116	;'t'
  2374  00FA1B  68                 	db	104	;'h'
  2375  00FA1C  65                 	db	101	;'e'
  2376  00FA1D  20                 	db	32
  2377  00FA1E  6C                 	db	108	;'l'
  2378  00FA1F  6F                 	db	111	;'o'
  2379  00FA20  61                 	db	97	;'a'
  2380  00FA21  64                 	db	100	;'d'
  2381  00FA22  2C                 	db	44
  2382  00FA23  20                 	db	32
  2383  00FA24  64                 	db	100	;'d'
  2384  00FA25  69                 	db	105	;'i'
  2385  00FA26  73                 	db	115	;'s'
  2386  00FA27  61                 	db	97	;'a'
  2387  00FA28  62                 	db	98	;'b'
  2388  00FA29  6C                 	db	108	;'l'
  2389  00FA2A  65                 	db	101	;'e'
  2390  00FA2B  20                 	db	32
  2391  00FA2C  64                 	db	100	;'d'
  2392  00FA2D  69                 	db	105	;'i'
  2393  00FA2E  6D                 	db	109	;'m'
  2394  00FA2F  6D                 	db	109	;'m'
  2395  00FA30  69                 	db	105	;'i'
  2396  00FA31  6E                 	db	110	;'n'
  2397  00FA32  67                 	db	103	;'g'
  2398  00FA33  20                 	db	32
  2399  00FA34  61                 	db	97	;'a'
  2400  00FA35  6E                 	db	110	;'n'
  2401  00FA36  64                 	db	100	;'d'
  2402  00FA37  20                 	db	32
  2403  00FA38  75                 	db	117	;'u'
  2404  00FA39  73                 	db	115	;'s'
  2405  00FA3A  65                 	db	101	;'e'
  2406  00FA3B  20                 	db	32
  2407  00FA3C  72                 	db	114	;'r'
  2408  00FA3D  65                 	db	101	;'e'
  2409  00FA3E  73                 	db	115	;'s'
  2410  00FA3F  70                 	db	112	;'p'
  2411  00FA40  65                 	db	101	;'e'
  2412  00FA41  63                 	db	99	;'c'
  2413  00FA42  74                 	db	116	;'t'
  2414  00FA43  69                 	db	105	;'i'
  2415  00FA44  76                 	db	118	;'v'
  2416  00FA45  65                 	db	101	;'e'
  2417  00FA46  20                 	db	32
  2418  00FA47  63                 	db	99	;'c'
  2419  00FA48  6F                 	db	111	;'o'
  2420  00FA49  6D                 	db	109	;'m'
  2421  00FA4A  6D                 	db	109	;'m'
  2422  00FA4B  61                 	db	97	;'a'
  2423  00FA4C  6E                 	db	110	;'n'
  2424  00FA4D  64                 	db	100	;'d'
  2425  00FA4E  73                 	db	115	;'s'
  2426  00FA4F  0A                 	db	10
  2427  00FA50  0D                 	db	13
  2428  00FA51  00                 	db	0
  2429  00FA52                     STR_78:
  2430  00FA52  45                 	db	69	;'E'
  2431  00FA53  52                 	db	82	;'R'
  2432  00FA54  52                 	db	82	;'R'
  2433  00FA55  4F                 	db	79	;'O'
  2434  00FA56  52                 	db	82	;'R'
  2435  00FA57  3A                 	db	58	;':'
  2436  00FA58  20                 	db	32
  2437  00FA59  50                 	db	80	;'P'
  2438  00FA5A  6C                 	db	108	;'l'
  2439  00FA5B  65                 	db	101	;'e'
  2440  00FA5C  61                 	db	97	;'a'
  2441  00FA5D  73                 	db	115	;'s'
  2442  00FA5E  65                 	db	101	;'e'
  2443  00FA5F  20                 	db	32
  2444  00FA60  73                 	db	115	;'s'
  2445  00FA61  65                 	db	101	;'e'
  2446  00FA62  74                 	db	116	;'t'
  2447  00FA63  20                 	db	32
  2448  00FA64  64                 	db	100	;'d'
  2449  00FA65  69                 	db	105	;'i'
  2450  00FA66  6D                 	db	109	;'m'
  2451  00FA67  6D                 	db	109	;'m'
  2452  00FA68  69                 	db	105	;'i'
  2453  00FA69  6E                 	db	110	;'n'
  2454  00FA6A  67                 	db	103	;'g'
  2455  00FA6B  20                 	db	32
  2456  00FA6C  70                 	db	112	;'p'
  2457  00FA6D  65                 	db	101	;'e'
  2458  00FA6E  72                 	db	114	;'r'
  2459  00FA6F  63                 	db	99	;'c'
  2460  00FA70  65                 	db	101	;'e'
  2461  00FA71  6E                 	db	110	;'n'
  2462  00FA72  74                 	db	116	;'t'
  2463  00FA73  61                 	db	97	;'a'
  2464  00FA74  67                 	db	103	;'g'
  2465  00FA75  65                 	db	101	;'e'
  2466  00FA76  20                 	db	32
  2467  00FA77  74                 	db	116	;'t'
  2468  00FA78  6F                 	db	111	;'o'
  2469  00FA79  20                 	db	32
  2470  00FA7A  61                 	db	97	;'a'
  2471  00FA7B  6E                 	db	110	;'n'
  2472  00FA7C  20                 	db	32
  2473  00FA7D  69                 	db	105	;'i'
  2474  00FA7E  6E                 	db	110	;'n'
  2475  00FA7F  74                 	db	116	;'t'
  2476  00FA80  65                 	db	101	;'e'
  2477  00FA81  67                 	db	103	;'g'
  2478  00FA82  65                 	db	101	;'e'
  2479  00FA83  72                 	db	114	;'r'
  2480  00FA84  20                 	db	32
  2481  00FA85  67                 	db	103	;'g'
  2482  00FA86  72                 	db	114	;'r'
  2483  00FA87  65                 	db	101	;'e'
  2484  00FA88  61                 	db	97	;'a'
  2485  00FA89  74                 	db	116	;'t'
  2486  00FA8A  65                 	db	101	;'e'
  2487  00FA8B  72                 	db	114	;'r'
  2488  00FA8C  20                 	db	32
  2489  00FA8D  74                 	db	116	;'t'
  2490  00FA8E  68                 	db	104	;'h'
  2491  00FA8F  61                 	db	97	;'a'
  2492  00FA90  6E                 	db	110	;'n'
  2493  00FA91  20                 	db	32
  2494  00FA92  30                 	db	48	;'0'
  2495  00FA93  20                 	db	32
  2496  00FA94  61                 	db	97	;'a'
  2497  00FA95  6E                 	db	110	;'n'
  2498  00FA96  64                 	db	100	;'d'
  2499  00FA97  20                 	db	32
  2500  00FA98  6C                 	db	108	;'l'
  2501  00FA99  65                 	db	101	;'e'
  2502  00FA9A  73                 	db	115	;'s'
  2503  00FA9B  73                 	db	115	;'s'
  2504  00FA9C  20                 	db	32
  2505  00FA9D  74                 	db	116	;'t'
  2506  00FA9E  68                 	db	104	;'h'
  2507  00FA9F  61                 	db	97	;'a'
  2508  00FAA0  6E                 	db	110	;'n'
  2509  00FAA1  20                 	db	32
  2510  00FAA2  31                 	db	49	;'1'
  2511  00FAA3  30                 	db	48	;'0'
  2512  00FAA4  30                 	db	48	;'0'
  2513  00FAA5  0A                 	db	10
  2514  00FAA6  0D                 	db	13
  2515  00FAA7  00                 	db	0
  2516  00FAA8                     STR_83:
  2517  00FAA8  54                 	db	84	;'T'
  2518  00FAA9  68                 	db	104	;'h'
  2519  00FAAA  69                 	db	105	;'i'
  2520  00FAAB  73                 	db	115	;'s'
  2521  00FAAC  20                 	db	32
  2522  00FAAD  63                 	db	99	;'c'
  2523  00FAAE  6F                 	db	111	;'o'
  2524  00FAAF  72                 	db	114	;'r'
  2525  00FAB0  72                 	db	114	;'r'
  2526  00FAB1  65                 	db	101	;'e'
  2527  00FAB2  73                 	db	115	;'s'
  2528  00FAB3  70                 	db	112	;'p'
  2529  00FAB4  6F                 	db	111	;'o'
  2530  00FAB5  6E                 	db	110	;'n'
  2531  00FAB6  64                 	db	100	;'d'
  2532  00FAB7  73                 	db	115	;'s'
  2533  00FAB8  20                 	db	32
  2534  00FAB9  74                 	db	116	;'t'
  2535  00FABA  6F                 	db	111	;'o'
  2536  00FABB  20                 	db	32
  2537  00FABC  61                 	db	97	;'a'
  2538  00FABD  20                 	db	32
  2539  00FABE  31                 	db	49	;'1'
  2540  00FABF  36                 	db	54	;'6'
  2541  00FAC0  20                 	db	32
  2542  00FAC1  62                 	db	98	;'b'
  2543  00FAC2  69                 	db	105	;'i'
  2544  00FAC3  74                 	db	116	;'t'
  2545  00FAC4  20                 	db	32
  2546  00FAC5  74                 	db	116	;'t'
  2547  00FAC6  69                 	db	105	;'i'
  2548  00FAC7  6D                 	db	109	;'m'
  2549  00FAC8  65                 	db	101	;'e'
  2550  00FAC9  72                 	db	114	;'r'
  2551  00FACA  20                 	db	32
  2552  00FACB  70                 	db	112	;'p'
  2553  00FACC  72                 	db	114	;'r'
  2554  00FACD  65                 	db	101	;'e'
  2555  00FACE  2D                 	db	45
  2556  00FACF  6C                 	db	108	;'l'
  2557  00FAD0  6F                 	db	111	;'o'
  2558  00FAD1  61                 	db	97	;'a'
  2559  00FAD2  64                 	db	100	;'d'
  2560  00FAD3  20                 	db	32
  2561  00FAD4  76                 	db	118	;'v'
  2562  00FAD5  61                 	db	97	;'a'
  2563  00FAD6  6C                 	db	108	;'l'
  2564  00FAD7  75                 	db	117	;'u'
  2565  00FAD8  65                 	db	101	;'e'
  2566  00FAD9  20                 	db	32
  2567  00FADA  6F                 	db	111	;'o'
  2568  00FADB  66                 	db	102	;'f'
  2569  00FADC  20                 	db	32
  2570  00FADD  30                 	db	48	;'0'
  2571  00FADE  78                 	db	120	;'x'
  2572  00FADF  25                 	db	37
  2573  00FAE0  58                 	db	88	;'X'
  2574  00FAE1  20                 	db	32
  2575  00FAE2  28                 	db	40
  2576  00FAE3  25                 	db	37
  2577  00FAE4  75                 	db	117	;'u'
  2578  00FAE5  20                 	db	32
  2579  00FAE6  4C                 	db	76	;'L'
  2580  00FAE7  53                 	db	83	;'S'
  2581  00FAE8  42                 	db	66	;'B'
  2582  00FAE9  73                 	db	115	;'s'
  2583  00FAEA  29                 	db	41
  2584  00FAEB  20                 	db	32
  2585  00FAEC  0A                 	db	10
  2586  00FAED  0D                 	db	13
  2587  00FAEE  00                 	db	0
  2588  00FAEF                     STR_82:
  2589  00FAEF  43                 	db	67	;'C'
  2590  00FAF0  61                 	db	97	;'a'
  2591  00FAF1  6C                 	db	108	;'l'
  2592  00FAF2  63                 	db	99	;'c'
  2593  00FAF3  75                 	db	117	;'u'
  2594  00FAF4  6C                 	db	108	;'l'
  2595  00FAF5  61                 	db	97	;'a'
  2596  00FAF6  74                 	db	116	;'t'
  2597  00FAF7  65                 	db	101	;'e'
  2598  00FAF8  64                 	db	100	;'d'
  2599  00FAF9  20                 	db	32
  2600  00FAFA  54                 	db	84	;'T'
  2601  00FAFB  52                 	db	82	;'R'
  2602  00FAFC  49                 	db	73	;'I'
  2603  00FAFD  41                 	db	65	;'A'
  2604  00FAFE  43                 	db	67	;'C'
  2605  00FAFF  20                 	db	32
  2606  00FB00  66                 	db	102	;'f'
  2607  00FB01  69                 	db	105	;'i'
  2608  00FB02  72                 	db	114	;'r'
  2609  00FB03  69                 	db	105	;'i'
  2610  00FB04  6E                 	db	110	;'n'
  2611  00FB05  67                 	db	103	;'g'
  2612  00FB06  20                 	db	32
  2613  00FB07  61                 	db	97	;'a'
  2614  00FB08  6E                 	db	110	;'n'
  2615  00FB09  67                 	db	103	;'g'
  2616  00FB0A  6C                 	db	108	;'l'
  2617  00FB0B  65                 	db	101	;'e'
  2618  00FB0C  20                 	db	32
  2619  00FB0D  69                 	db	105	;'i'
  2620  00FB0E  73                 	db	115	;'s'
  2621  00FB0F  20                 	db	32
  2622  00FB10  25                 	db	37
  2623  00FB11  2E                 	db	46
  2624  00FB12  33                 	db	51	;'3'
  2625  00FB13  66                 	db	102	;'f'
  2626  00FB14  20                 	db	32
  2627  00FB15  72                 	db	114	;'r'
  2628  00FB16  61                 	db	97	;'a'
  2629  00FB17  64                 	db	100	;'d'
  2630  00FB18  69                 	db	105	;'i'
  2631  00FB19  61                 	db	97	;'a'
  2632  00FB1A  6E                 	db	110	;'n'
  2633  00FB1B  73                 	db	115	;'s'
  2634  00FB1C  20                 	db	32
  2635  00FB1D  28                 	db	40
  2636  00FB1E  25                 	db	37
  2637  00FB1F  2E                 	db	46
  2638  00FB20  33                 	db	51	;'3'
  2639  00FB21  66                 	db	102	;'f'
  2640  00FB22  20                 	db	32
  2641  00FB23  64                 	db	100	;'d'
  2642  00FB24  65                 	db	101	;'e'
  2643  00FB25  67                 	db	103	;'g'
  2644  00FB26  72                 	db	114	;'r'
  2645  00FB27  65                 	db	101	;'e'
  2646  00FB28  65                 	db	101	;'e'
  2647  00FB29  73                 	db	115	;'s'
  2648  00FB2A  29                 	db	41
  2649  00FB2B  0A                 	db	10
  2650  00FB2C  0D                 	db	13
  2651  00FB2D  00                 	db	0
  2652  00FB2E                     STR_85:
  2653  00FB2E  44                 	db	68	;'D'
  2654  00FB2F  65                 	db	101	;'e'
  2655  00FB30  76                 	db	118	;'v'
  2656  00FB31  69                 	db	105	;'i'
  2657  00FB32  63                 	db	99	;'c'
  2658  00FB33  65                 	db	101	;'e'
  2659  00FB34  20                 	db	32
  2660  00FB35  6F                 	db	111	;'o'
  2661  00FB36  6E                 	db	110	;'n'
  2662  00FB37  20                 	db	32
  2663  00FB38  74                 	db	116	;'t'
  2664  00FB39  69                 	db	105	;'i'
  2665  00FB3A  6D                 	db	109	;'m'
  2666  00FB3B  65                 	db	101	;'e'
  2667  00FB3C  20                 	db	32
  2668  00FB3D  73                 	db	115	;'s'
  2669  00FB3E  69                 	db	105	;'i'
  2670  00FB3F  6E                 	db	110	;'n'
  2671  00FB40  63                 	db	99	;'c'
  2672  00FB41  65                 	db	101	;'e'
  2673  00FB42  20                 	db	32
  2674  00FB43  6C                 	db	108	;'l'
  2675  00FB44  61                 	db	97	;'a'
  2676  00FB45  73                 	db	115	;'s'
  2677  00FB46  74                 	db	116	;'t'
  2678  00FB47  20                 	db	32
  2679  00FB48  72                 	db	114	;'r'
  2680  00FB49  65                 	db	101	;'e'
  2681  00FB4A  73                 	db	115	;'s'
  2682  00FB4B  65                 	db	101	;'e'
  2683  00FB4C  74                 	db	116	;'t'
  2684  00FB4D  20                 	db	32
  2685  00FB4E  63                 	db	99	;'c'
  2686  00FB4F  6F                 	db	111	;'o'
  2687  00FB50  6E                 	db	110	;'n'
  2688  00FB51  64                 	db	100	;'d'
  2689  00FB52  69                 	db	105	;'i'
  2690  00FB53  74                 	db	116	;'t'
  2691  00FB54  69                 	db	105	;'i'
  2692  00FB55  6F                 	db	111	;'o'
  2693  00FB56  6E                 	db	110	;'n'
  2694  00FB57  20                 	db	32
  2695  00FB58  69                 	db	105	;'i'
  2696  00FB59  73                 	db	115	;'s'
  2697  00FB5A  20                 	db	32
  2698  00FB5B  25                 	db	37
  2699  00FB5C  64                 	db	100	;'d'
  2700  00FB5D  20                 	db	32
  2701  00FB5E  73                 	db	115	;'s'
  2702  00FB5F  65                 	db	101	;'e'
  2703  00FB60  63                 	db	99	;'c'
  2704  00FB61  6F                 	db	111	;'o'
  2705  00FB62  6E                 	db	110	;'n'
  2706  00FB63  64                 	db	100	;'d'
  2707  00FB64  73                 	db	115	;'s'
  2708  00FB65  0A                 	db	10
  2709  00FB66  0D                 	db	13
  2710  00FB67  00                 	db	0
  2711  00FB68                     STR_68:
  2712  00FB68  4F                 	db	79	;'O'
  2713  00FB69  75                 	db	117	;'u'
  2714  00FB6A  74                 	db	116	;'t'
  2715  00FB6B  70                 	db	112	;'p'
  2716  00FB6C  75                 	db	117	;'u'
  2717  00FB6D  74                 	db	116	;'t'
  2718  00FB6E  20                 	db	32
  2719  00FB6F  70                 	db	112	;'p'
  2720  00FB70  6F                 	db	111	;'o'
  2721  00FB71  77                 	db	119	;'w'
  2722  00FB72  65                 	db	101	;'e'
  2723  00FB73  72                 	db	114	;'r'
  2724  00FB74  20                 	db	32
  2725  00FB75  63                 	db	99	;'c'
  2726  00FB76  61                 	db	97	;'a'
  2727  00FB77  6C                 	db	108	;'l'
  2728  00FB78  63                 	db	99	;'c'
  2729  00FB79  75                 	db	117	;'u'
  2730  00FB7A  6C                 	db	108	;'l'
  2731  00FB7B  61                 	db	97	;'a'
  2732  00FB7C  74                 	db	116	;'t'
  2733  00FB7D  65                 	db	101	;'e'
  2734  00FB7E  64                 	db	100	;'d'
  2735  00FB7F  20                 	db	32
  2736  00FB80  61                 	db	97	;'a'
  2737  00FB81  73                 	db	115	;'s'
  2738  00FB82  20                 	db	32
  2739  00FB83  25                 	db	37
  2740  00FB84  2E                 	db	46
  2741  00FB85  33                 	db	51	;'3'
  2742  00FB86  66                 	db	102	;'f'
  2743  00FB87  20                 	db	32
  2744  00FB88  57                 	db	87	;'W'
  2745  00FB89  61                 	db	97	;'a'
  2746  00FB8A  74                 	db	116	;'t'
  2747  00FB8B  74                 	db	116	;'t'
  2748  00FB8C  73                 	db	115	;'s'
  2749  00FB8D  20                 	db	32
  2750  00FB8E  66                 	db	102	;'f'
  2751  00FB8F  72                 	db	114	;'r'
  2752  00FB90  6F                 	db	111	;'o'
  2753  00FB91  6D                 	db	109	;'m'
  2754  00FB92  20                 	db	32
  2755  00FB93  52                 	db	82	;'R'
  2756  00FB94  4D                 	db	77	;'M'
  2757  00FB95  53                 	db	83	;'S'
  2758  00FB96  20                 	db	32
  2759  00FB97  76                 	db	118	;'v'
  2760  00FB98  61                 	db	97	;'a'
  2761  00FB99  6C                 	db	108	;'l'
  2762  00FB9A  75                 	db	117	;'u'
  2763  00FB9B  65                 	db	101	;'e'
  2764  00FB9C  73                 	db	115	;'s'
  2765  00FB9D  0A                 	db	10
  2766  00FB9E  0D                 	db	13
  2767  00FB9F  00                 	db	0
  2768  00FBA0                     STR_58:
  2769  00FBA0  46                 	db	70	;'F'
  2770  00FBA1  69                 	db	105	;'i'
  2771  00FBA2  78                 	db	120	;'x'
  2772  00FBA3  65                 	db	101	;'e'
  2773  00FBA4  64                 	db	100	;'d'
  2774  00FBA5  20                 	db	32
  2775  00FBA6  56                 	db	86	;'V'
  2776  00FBA7  6F                 	db	111	;'o'
  2777  00FBA8  6C                 	db	108	;'l'
  2778  00FBA9  74                 	db	116	;'t'
  2779  00FBAA  61                 	db	97	;'a'
  2780  00FBAB  67                 	db	103	;'g'
  2781  00FBAC  65                 	db	101	;'e'
  2782  00FBAD  20                 	db	32
  2783  00FBAE  52                 	db	82	;'R'
  2784  00FBAF  65                 	db	101	;'e'
  2785  00FBB0  66                 	db	102	;'f'
  2786  00FBB1  65                 	db	101	;'e'
  2787  00FBB2  72                 	db	114	;'r'
  2788  00FBB3  65                 	db	101	;'e'
  2789  00FBB4  6E                 	db	110	;'n'
  2790  00FBB5  63                 	db	99	;'c'
  2791  00FBB6  65                 	db	101	;'e'
  2792  00FBB7  20                 	db	32
  2793  00FBB8  42                 	db	66	;'B'
  2794  00FBB9  75                 	db	117	;'u'
  2795  00FBBA  66                 	db	102	;'f'
  2796  00FBBB  66                 	db	102	;'f'
  2797  00FBBC  65                 	db	101	;'e'
  2798  00FBBD  72                 	db	114	;'r'
  2799  00FBBE  20                 	db	32
  2800  00FBBF  31                 	db	49	;'1'
  2801  00FBC0  20                 	db	32
  2802  00FBC1  6D                 	db	109	;'m'
  2803  00FBC2  65                 	db	101	;'e'
  2804  00FBC3  61                 	db	97	;'a'
  2805  00FBC4  73                 	db	115	;'s'
  2806  00FBC5  75                 	db	117	;'u'
  2807  00FBC6  72                 	db	114	;'r'
  2808  00FBC7  65                 	db	101	;'e'
  2809  00FBC8  64                 	db	100	;'d'
  2810  00FBC9  20                 	db	32
  2811  00FBCA  61                 	db	97	;'a'
  2812  00FBCB  73                 	db	115	;'s'
  2813  00FBCC  20                 	db	32
  2814  00FBCD  25                 	db	37
  2815  00FBCE  66                 	db	102	;'f'
  2816  00FBCF  20                 	db	32
  2817  00FBD0  56                 	db	86	;'V'
  2818  00FBD1  6F                 	db	111	;'o'
  2819  00FBD2  6C                 	db	108	;'l'
  2820  00FBD3  74                 	db	116	;'t'
  2821  00FBD4  73                 	db	115	;'s'
  2822  00FBD5  0A                 	db	10
  2823  00FBD6  0D                 	db	13
  2824  00FBD7  00                 	db	0
  2825  00FBD8                     STR_50:
  2826  00FBD8  4D                 	db	77	;'M'
  2827  00FBD9  61                 	db	97	;'a'
  2828  00FBDA  72                 	db	114	;'r'
  2829  00FBDB  71                 	db	113	;'q'
  2830  00FBDC  75                 	db	117	;'u'
  2831  00FBDD  65                 	db	101	;'e'
  2832  00FBDE  74                 	db	116	;'t'
  2833  00FBDF  74                 	db	116	;'t'
  2834  00FBE0  65                 	db	101	;'e'
  2835  00FBE1  20                 	db	32
  2836  00FBE2  55                 	db	85	;'U'
  2837  00FBE3  6E                 	db	110	;'n'
  2838  00FBE4  69                 	db	105	;'i'
  2839  00FBE5  76                 	db	118	;'v'
  2840  00FBE6  65                 	db	101	;'e'
  2841  00FBE7  72                 	db	114	;'r'
  2842  00FBE8  73                 	db	115	;'s'
  2843  00FBE9  69                 	db	105	;'i'
  2844  00FBEA  74                 	db	116	;'t'
  2845  00FBEB  79                 	db	121	;'y'
  2846  00FBEC  20                 	db	32
  2847  00FBED  45                 	db	69	;'E'
  2848  00FBEE  4C                 	db	76	;'L'
  2849  00FBEF  45                 	db	69	;'E'
  2850  00FBF0  4E                 	db	78	;'N'
  2851  00FBF1  20                 	db	32
  2852  00FBF2  33                 	db	51	;'3'
  2853  00FBF3  30                 	db	48	;'0'
  2854  00FBF4  33                 	db	51	;'3'
  2855  00FBF5  35                 	db	53	;'5'
  2856  00FBF6  20                 	db	32
  2857  00FBF7  46                 	db	70	;'F'
  2858  00FBF8  69                 	db	105	;'i'
  2859  00FBF9  6E                 	db	110	;'n'
  2860  00FBFA  61                 	db	97	;'a'
  2861  00FBFB  6C                 	db	108	;'l'
  2862  00FBFC  20                 	db	32
  2863  00FBFD  50                 	db	80	;'P'
  2864  00FBFE  72                 	db	114	;'r'
  2865  00FBFF  6F                 	db	111	;'o'
  2866  00FC00  6A                 	db	106	;'j'
  2867  00FC01  65                 	db	101	;'e'
  2868  00FC02  63                 	db	99	;'c'
  2869  00FC03  74                 	db	116	;'t'
  2870  00FC04  0A                 	db	10
  2871  00FC05  0D                 	db	13
  2872  00FC06  00                 	db	0
  2873  00FC07                     STR_80:
  2874  00FC07  45                 	db	69	;'E'
  2875  00FC08  6E                 	db	110	;'n'
  2876  00FC09  74                 	db	116	;'t'
  2877  00FC0A  65                 	db	101	;'e'
  2878  00FC0B  72                 	db	114	;'r'
  2879  00FC0C  20                 	db	32
  2880  00FC0D  27                 	db	39
  2881  00FC0E  48                 	db	72	;'H'
  2882  00FC0F  65                 	db	101	;'e'
  2883  00FC10  6C                 	db	108	;'l'
  2884  00FC11  70                 	db	112	;'p'
  2885  00FC12  27                 	db	39
  2886  00FC13  20                 	db	32
  2887  00FC14  66                 	db	102	;'f'
  2888  00FC15  6F                 	db	111	;'o'
  2889  00FC16  72                 	db	114	;'r'
  2890  00FC17  20                 	db	32
  2891  00FC18  6C                 	db	108	;'l'
  2892  00FC19  69                 	db	105	;'i'
  2893  00FC1A  73                 	db	115	;'s'
  2894  00FC1B  74                 	db	116	;'t'
  2895  00FC1C  20                 	db	32
  2896  00FC1D  6F                 	db	111	;'o'
  2897  00FC1E  66                 	db	102	;'f'
  2898  00FC1F  20                 	db	32
  2899  00FC20  61                 	db	97	;'a'
  2900  00FC21  76                 	db	118	;'v'
  2901  00FC22  61                 	db	97	;'a'
  2902  00FC23  69                 	db	105	;'i'
  2903  00FC24  6C                 	db	108	;'l'
  2904  00FC25  61                 	db	97	;'a'
  2905  00FC26  62                 	db	98	;'b'
  2906  00FC27  6C                 	db	108	;'l'
  2907  00FC28  65                 	db	101	;'e'
  2908  00FC29  20                 	db	32
  2909  00FC2A  63                 	db	99	;'c'
  2910  00FC2B  6F                 	db	111	;'o'
  2911  00FC2C  6D                 	db	109	;'m'
  2912  00FC2D  6D                 	db	109	;'m'
  2913  00FC2E  61                 	db	97	;'a'
  2914  00FC2F  6E                 	db	110	;'n'
  2915  00FC30  64                 	db	100	;'d'
  2916  00FC31  73                 	db	115	;'s'
  2917  00FC32  0A                 	db	10
  2918  00FC33  0D                 	db	13
  2919  00FC34  00                 	db	0
  2920  00FC35                     STR_74:
  2921  00FC35  4C                 	db	76	;'L'
  2922  00FC36  6F                 	db	111	;'o'
  2923  00FC37  61                 	db	97	;'a'
  2924  00FC38  64                 	db	100	;'d'
  2925  00FC39  20                 	db	32
  2926  00FC3A  68                 	db	104	;'h'
  2927  00FC3B  61                 	db	97	;'a'
  2928  00FC3C  73                 	db	115	;'s'
  2929  00FC3D  20                 	db	32
  2930  00FC3E  62                 	db	98	;'b'
  2931  00FC3F  65                 	db	101	;'e'
  2932  00FC40  65                 	db	101	;'e'
  2933  00FC41  6E                 	db	110	;'n'
  2934  00FC42  20                 	db	32
  2935  00FC43  65                 	db	101	;'e'
  2936  00FC44  6E                 	db	110	;'n'
  2937  00FC45  61                 	db	97	;'a'
  2938  00FC46  62                 	db	98	;'b'
  2939  00FC47  6C                 	db	108	;'l'
  2940  00FC48  65                 	db	101	;'e'
  2941  00FC49  64                 	db	100	;'d'
  2942  00FC4A  2C                 	db	44
  2943  00FC4B  20                 	db	32
  2944  00FC4C  64                 	db	100	;'d'
  2945  00FC4D  69                 	db	105	;'i'
  2946  00FC4E  6D                 	db	109	;'m'
  2947  00FC4F  6D                 	db	109	;'m'
  2948  00FC50  69                 	db	105	;'i'
  2949  00FC51  6E                 	db	110	;'n'
  2950  00FC52  67                 	db	103	;'g'
  2951  00FC53  20                 	db	32
  2952  00FC54  64                 	db	100	;'d'
  2953  00FC55  69                 	db	105	;'i'
  2954  00FC56  73                 	db	115	;'s'
  2955  00FC57  61                 	db	97	;'a'
  2956  00FC58  62                 	db	98	;'b'
  2957  00FC59  6C                 	db	108	;'l'
  2958  00FC5A  65                 	db	101	;'e'
  2959  00FC5B  64                 	db	100	;'d'
  2960  00FC5C  0A                 	db	10
  2961  00FC5D  0D                 	db	13
  2962  00FC5E  00                 	db	0
  2963  00FC5F                     STR_72:
  2964  00FC5F  54                 	db	84	;'T'
  2965  00FC60  52                 	db	82	;'R'
  2966  00FC61  49                 	db	73	;'I'
  2967  00FC62  41                 	db	65	;'A'
  2968  00FC63  43                 	db	67	;'C'
  2969  00FC64  20                 	db	32
  2970  00FC65  6F                 	db	111	;'o'
  2971  00FC66  75                 	db	117	;'u'
  2972  00FC67  74                 	db	116	;'t'
  2973  00FC68  70                 	db	112	;'p'
  2974  00FC69  75                 	db	117	;'u'
  2975  00FC6A  74                 	db	116	;'t'
  2976  00FC6B  20                 	db	32
  2977  00FC6C  64                 	db	100	;'d'
  2978  00FC6D  69                 	db	105	;'i'
  2979  00FC6E  6D                 	db	109	;'m'
  2980  00FC6F  6D                 	db	109	;'m'
  2981  00FC70  69                 	db	105	;'i'
  2982  00FC71  6E                 	db	110	;'n'
  2983  00FC72  67                 	db	103	;'g'
  2984  00FC73  20                 	db	32
  2985  00FC74  68                 	db	104	;'h'
  2986  00FC75  61                 	db	97	;'a'
  2987  00FC76  73                 	db	115	;'s'
  2988  00FC77  20                 	db	32
  2989  00FC78  62                 	db	98	;'b'
  2990  00FC79  65                 	db	101	;'e'
  2991  00FC7A  65                 	db	101	;'e'
  2992  00FC7B  6E                 	db	110	;'n'
  2993  00FC7C  20                 	db	32
  2994  00FC7D  64                 	db	100	;'d'
  2995  00FC7E  69                 	db	105	;'i'
  2996  00FC7F  73                 	db	115	;'s'
  2997  00FC80  61                 	db	97	;'a'
  2998  00FC81  62                 	db	98	;'b'
  2999  00FC82  6C                 	db	108	;'l'
  3000  00FC83  65                 	db	101	;'e'
  3001  00FC84  64                 	db	100	;'d'
  3002  00FC85  0A                 	db	10
  3003  00FC86  0D                 	db	13
  3004  00FC87  00                 	db	0
  3005  00FC88                     STR_70:
  3006  00FC88  54                 	db	84	;'T'
  3007  00FC89  52                 	db	82	;'R'
  3008  00FC8A  49                 	db	73	;'I'
  3009  00FC8B  41                 	db	65	;'A'
  3010  00FC8C  43                 	db	67	;'C'
  3011  00FC8D  20                 	db	32
  3012  00FC8E  6F                 	db	111	;'o'
  3013  00FC8F  75                 	db	117	;'u'
  3014  00FC90  74                 	db	116	;'t'
  3015  00FC91  70                 	db	112	;'p'
  3016  00FC92  75                 	db	117	;'u'
  3017  00FC93  74                 	db	116	;'t'
  3018  00FC94  20                 	db	32
  3019  00FC95  64                 	db	100	;'d'
  3020  00FC96  69                 	db	105	;'i'
  3021  00FC97  6D                 	db	109	;'m'
  3022  00FC98  6D                 	db	109	;'m'
  3023  00FC99  69                 	db	105	;'i'
  3024  00FC9A  6E                 	db	110	;'n'
  3025  00FC9B  67                 	db	103	;'g'
  3026  00FC9C  20                 	db	32
  3027  00FC9D  68                 	db	104	;'h'
  3028  00FC9E  61                 	db	97	;'a'
  3029  00FC9F  73                 	db	115	;'s'
  3030  00FCA0  20                 	db	32
  3031  00FCA1  62                 	db	98	;'b'
  3032  00FCA2  65                 	db	101	;'e'
  3033  00FCA3  65                 	db	101	;'e'
  3034  00FCA4  6E                 	db	110	;'n'
  3035  00FCA5  20                 	db	32
  3036  00FCA6  65                 	db	101	;'e'
  3037  00FCA7  6E                 	db	110	;'n'
  3038  00FCA8  61                 	db	97	;'a'
  3039  00FCA9  62                 	db	98	;'b'
  3040  00FCAA  6C                 	db	108	;'l'
  3041  00FCAB  65                 	db	101	;'e'
  3042  00FCAC  64                 	db	100	;'d'
  3043  00FCAD  0A                 	db	10
  3044  00FCAE  0D                 	db	13
  3045  00FCAF  00                 	db	0
  3046  00FCB0                     STR_90:
  3047  00FCB0  4D                 	db	77	;'M'
  3048  00FCB1  65                 	db	101	;'e'
  3049  00FCB2  61                 	db	97	;'a'
  3050  00FCB3  73                 	db	115	;'s'
  3051  00FCB4  75                 	db	117	;'u'
  3052  00FCB5  72                 	db	114	;'r'
  3053  00FCB6  65                 	db	101	;'e'
  3054  00FCB7  6D                 	db	109	;'m'
  3055  00FCB8  65                 	db	101	;'e'
  3056  00FCB9  6E                 	db	110	;'n'
  3057  00FCBA  74                 	db	116	;'t'
  3058  00FCBB  73                 	db	115	;'s'
  3059  00FCBC  20                 	db	32
  3060  00FCBD  72                 	db	114	;'r'
  3061  00FCBE  65                 	db	101	;'e'
  3062  00FCBF  73                 	db	115	;'s'
  3063  00FCC0  70                 	db	112	;'p'
  3064  00FCC1  6F                 	db	111	;'o'
  3065  00FCC2  6E                 	db	110	;'n'
  3066  00FCC3  73                 	db	115	;'s'
  3067  00FCC4  65                 	db	101	;'e'
  3068  00FCC5  73                 	db	115	;'s'
  3069  00FCC6  20                 	db	32
  3070  00FCC7  61                 	db	97	;'a'
  3071  00FCC8  70                 	db	112	;'p'
  3072  00FCC9  70                 	db	112	;'p'
  3073  00FCCA  65                 	db	101	;'e'
  3074  00FCCB  61                 	db	97	;'a'
  3075  00FCCC  72                 	db	114	;'r'
  3076  00FCCD  20                 	db	32
  3077  00FCCE  69                 	db	105	;'i'
  3078  00FCCF  6E                 	db	110	;'n'
  3079  00FCD0  20                 	db	32
  3080  00FCD1  63                 	db	99	;'c'
  3081  00FCD2  79                 	db	121	;'y'
  3082  00FCD3  61                 	db	97	;'a'
  3083  00FCD4  6E                 	db	110	;'n'
  3084  00FCD5  0A                 	db	10
  3085  00FCD6  0D                 	db	13
  3086  00FCD7  00                 	db	0
  3087  00FCD8                     STR_60:
  3088  00FCD8  41                 	db	65	;'A'
  3089  00FCD9  56                 	db	86	;'V'
  3090  00FCDA  53                 	db	83	;'S'
  3091  00FCDB  53                 	db	83	;'S'
  3092  00FCDC  20                 	db	32
  3093  00FCDD  6D                 	db	109	;'m'
  3094  00FCDE  65                 	db	101	;'e'
  3095  00FCDF  61                 	db	97	;'a'
  3096  00FCE0  73                 	db	115	;'s'
  3097  00FCE1  75                 	db	117	;'u'
  3098  00FCE2  72                 	db	114	;'r'
  3099  00FCE3  65                 	db	101	;'e'
  3100  00FCE4  64                 	db	100	;'d'
  3101  00FCE5  20                 	db	32
  3102  00FCE6  61                 	db	97	;'a'
  3103  00FCE7  73                 	db	115	;'s'
  3104  00FCE8  20                 	db	32
  3105  00FCE9  25                 	db	37
  3106  00FCEA  2E                 	db	46
  3107  00FCEB  33                 	db	51	;'3'
  3108  00FCEC  66                 	db	102	;'f'
  3109  00FCED  20                 	db	32
  3110  00FCEE  56                 	db	86	;'V'
  3111  00FCEF  6F                 	db	111	;'o'
  3112  00FCF0  6C                 	db	108	;'l'
  3113  00FCF1  74                 	db	116	;'t'
  3114  00FCF2  73                 	db	115	;'s'
  3115  00FCF3  20                 	db	32
  3116  00FCF4  62                 	db	98	;'b'
  3117  00FCF5  79                 	db	121	;'y'
  3118  00FCF6  20                 	db	32
  3119  00FCF7  41                 	db	65	;'A'
  3120  00FCF8  44                 	db	68	;'D'
  3121  00FCF9  43                 	db	67	;'C'
  3122  00FCFA  0A                 	db	10
  3123  00FCFB  0D                 	db	13
  3124  00FCFC  00                 	db	0
  3125  00FCFD                     STR_81:
  3126  00FCFD  44                 	db	68	;'D'
  3127  00FCFE  69                 	db	105	;'i'
  3128  00FCFF  6D                 	db	109	;'m'
  3129  00FD00  6D                 	db	109	;'m'
  3130  00FD01  69                 	db	105	;'i'
  3131  00FD02  6E                 	db	110	;'n'
  3132  00FD03  67                 	db	103	;'g'
  3133  00FD04  20                 	db	32
  3134  00FD05  68                 	db	104	;'h'
  3135  00FD06  61                 	db	97	;'a'
  3136  00FD07  73                 	db	115	;'s'
  3137  00FD08  20                 	db	32
  3138  00FD09  62                 	db	98	;'b'
  3139  00FD0A  65                 	db	101	;'e'
  3140  00FD0B  65                 	db	101	;'e'
  3141  00FD0C  6E                 	db	110	;'n'
  3142  00FD0D  20                 	db	32
  3143  00FD0E  73                 	db	115	;'s'
  3144  00FD0F  65                 	db	101	;'e'
  3145  00FD10  74                 	db	116	;'t'
  3146  00FD11  20                 	db	32
  3147  00FD12  74                 	db	116	;'t'
  3148  00FD13  6F                 	db	111	;'o'
  3149  00FD14  20                 	db	32
  3150  00FD15  25                 	db	37
  3151  00FD16  64                 	db	100	;'d'
  3152  00FD17  20                 	db	32
  3153  00FD18  70                 	db	112	;'p'
  3154  00FD19  65                 	db	101	;'e'
  3155  00FD1A  72                 	db	114	;'r'
  3156  00FD1B  63                 	db	99	;'c'
  3157  00FD1C  65                 	db	101	;'e'
  3158  00FD1D  6E                 	db	110	;'n'
  3159  00FD1E  74                 	db	116	;'t'
  3160  00FD1F  0A                 	db	10
  3161  00FD20  0D                 	db	13
  3162  00FD21  00                 	db	0
  3163  00FD22                     STR_52:
  3164  00FD22  2B                 	db	43
  3165  00FD23  33                 	db	51	;'3'
  3166  00FD24  2E                 	db	46
  3167  00FD25  33                 	db	51	;'3'
  3168  00FD26  56                 	db	86	;'V'
  3169  00FD27  20                 	db	32
  3170  00FD28  72                 	db	114	;'r'
  3171  00FD29  61                 	db	97	;'a'
  3172  00FD2A  69                 	db	105	;'i'
  3173  00FD2B  6C                 	db	108	;'l'
  3174  00FD2C  20                 	db	32
  3175  00FD2D  6D                 	db	109	;'m'
  3176  00FD2E  65                 	db	101	;'e'
  3177  00FD2F  61                 	db	97	;'a'
  3178  00FD30  73                 	db	115	;'s'
  3179  00FD31  75                 	db	117	;'u'
  3180  00FD32  72                 	db	114	;'r'
  3181  00FD33  65                 	db	101	;'e'
  3182  00FD34  64                 	db	100	;'d'
  3183  00FD35  20                 	db	32
  3184  00FD36  61                 	db	97	;'a'
  3185  00FD37  73                 	db	115	;'s'
  3186  00FD38  20                 	db	32
  3187  00FD39  2B                 	db	43
  3188  00FD3A  25                 	db	37
  3189  00FD3B  66                 	db	102	;'f'
  3190  00FD3C  20                 	db	32
  3191  00FD3D  56                 	db	86	;'V'
  3192  00FD3E  6F                 	db	111	;'o'
  3193  00FD3F  6C                 	db	108	;'l'
  3194  00FD40  74                 	db	116	;'t'
  3195  00FD41  73                 	db	115	;'s'
  3196  00FD42  0A                 	db	10
  3197  00FD43  0D                 	db	13
  3198  00FD44  00                 	db	0
  3199  00FD45                     STR_56:
  3200  00FD45  44                 	db	68	;'D'
  3201  00FD46  69                 	db	105	;'i'
  3202  00FD47  65                 	db	101	;'e'
  3203  00FD48  20                 	db	32
  3204  00FD49  54                 	db	84	;'T'
  3205  00FD4A  65                 	db	101	;'e'
  3206  00FD4B  6D                 	db	109	;'m'
  3207  00FD4C  70                 	db	112	;'p'
  3208  00FD4D  65                 	db	101	;'e'
  3209  00FD4E  72                 	db	114	;'r'
  3210  00FD4F  61                 	db	97	;'a'
  3211  00FD50  74                 	db	116	;'t'
  3212  00FD51  75                 	db	117	;'u'
  3213  00FD52  72                 	db	114	;'r'
  3214  00FD53  65                 	db	101	;'e'
  3215  00FD54  20                 	db	32
  3216  00FD55  6D                 	db	109	;'m'
  3217  00FD56  65                 	db	101	;'e'
  3218  00FD57  61                 	db	97	;'a'
  3219  00FD58  73                 	db	115	;'s'
  3220  00FD59  75                 	db	117	;'u'
  3221  00FD5A  72                 	db	114	;'r'
  3222  00FD5B  65                 	db	101	;'e'
  3223  00FD5C  64                 	db	100	;'d'
  3224  00FD5D  20                 	db	32
  3225  00FD5E  61                 	db	97	;'a'
  3226  00FD5F  73                 	db	115	;'s'
  3227  00FD60  20                 	db	32
  3228  00FD61  25                 	db	37
  3229  00FD62  66                 	db	102	;'f'
  3230  00FD63  43                 	db	67	;'C'
  3231  00FD64  0A                 	db	10
  3232  00FD65  0D                 	db	13
  3233  00FD66  00                 	db	0
  3234  00FD67                     STR_64:
  3235  00FD67  52                 	db	82	;'R'
  3236  00FD68  4D                 	db	77	;'M'
  3237  00FD69  53                 	db	83	;'S'
  3238  00FD6A  20                 	db	32
  3239  00FD6B  4F                 	db	79	;'O'
  3240  00FD6C  75                 	db	117	;'u'
  3241  00FD6D  74                 	db	116	;'t'
  3242  00FD6E  70                 	db	112	;'p'
  3243  00FD6F  75                 	db	117	;'u'
  3244  00FD70  74                 	db	116	;'t'
  3245  00FD71  20                 	db	32
  3246  00FD72  43                 	db	67	;'C'
  3247  00FD73  75                 	db	117	;'u'
  3248  00FD74  72                 	db	114	;'r'
  3249  00FD75  72                 	db	114	;'r'
  3250  00FD76  65                 	db	101	;'e'
  3251  00FD77  6E                 	db	110	;'n'
  3252  00FD78  74                 	db	116	;'t'
  3253  00FD79  20                 	db	32
  3254  00FD7A  69                 	db	105	;'i'
  3255  00FD7B  73                 	db	115	;'s'
  3256  00FD7C  20                 	db	32
  3257  00FD7D  25                 	db	37
  3258  00FD7E  2E                 	db	46
  3259  00FD7F  33                 	db	51	;'3'
  3260  00FD80  66                 	db	102	;'f'
  3261  00FD81  20                 	db	32
  3262  00FD82  41                 	db	65	;'A'
  3263  00FD83  72                 	db	114	;'r'
  3264  00FD84  6D                 	db	109	;'m'
  3265  00FD85  73                 	db	115	;'s'
  3266  00FD86  0A                 	db	10
  3267  00FD87  0D                 	db	13
  3268  00FD88  00                 	db	0
  3269  00FD89                     STR_66:
  3270  00FD89  52                 	db	82	;'R'
  3271  00FD8A  4D                 	db	77	;'M'
  3272  00FD8B  53                 	db	83	;'S'
  3273  00FD8C  20                 	db	32
  3274  00FD8D  4F                 	db	79	;'O'
  3275  00FD8E  75                 	db	117	;'u'
  3276  00FD8F  74                 	db	116	;'t'
  3277  00FD90  70                 	db	112	;'p'
  3278  00FD91  75                 	db	117	;'u'
  3279  00FD92  74                 	db	116	;'t'
  3280  00FD93  20                 	db	32
  3281  00FD94  56                 	db	86	;'V'
  3282  00FD95  6F                 	db	111	;'o'
  3283  00FD96  6C                 	db	108	;'l'
  3284  00FD97  74                 	db	116	;'t'
  3285  00FD98  61                 	db	97	;'a'
  3286  00FD99  67                 	db	103	;'g'
  3287  00FD9A  65                 	db	101	;'e'
  3288  00FD9B  20                 	db	32
  3289  00FD9C  69                 	db	105	;'i'
  3290  00FD9D  73                 	db	115	;'s'
  3291  00FD9E  20                 	db	32
  3292  00FD9F  25                 	db	37
  3293  00FDA0  2E                 	db	46
  3294  00FDA1  33                 	db	51	;'3'
  3295  00FDA2  66                 	db	102	;'f'
  3296  00FDA3  20                 	db	32
  3297  00FDA4  56                 	db	86	;'V'
  3298  00FDA5  72                 	db	114	;'r'
  3299  00FDA6  6D                 	db	109	;'m'
  3300  00FDA7  73                 	db	115	;'s'
  3301  00FDA8  0A                 	db	10
  3302  00FDA9  0D                 	db	13
  3303  00FDAA  00                 	db	0
  3304  00FDAB                     STR_54:
  3305  00FDAB  2B                 	db	43
  3306  00FDAC  31                 	db	49	;'1'
  3307  00FDAD  32                 	db	50	;'2'
  3308  00FDAE  56                 	db	86	;'V'
  3309  00FDAF  20                 	db	32
  3310  00FDB0  72                 	db	114	;'r'
  3311  00FDB1  61                 	db	97	;'a'
  3312  00FDB2  69                 	db	105	;'i'
  3313  00FDB3  6C                 	db	108	;'l'
  3314  00FDB4  20                 	db	32
  3315  00FDB5  6D                 	db	109	;'m'
  3316  00FDB6  65                 	db	101	;'e'
  3317  00FDB7  61                 	db	97	;'a'
  3318  00FDB8  73                 	db	115	;'s'
  3319  00FDB9  75                 	db	117	;'u'
  3320  00FDBA  72                 	db	114	;'r'
  3321  00FDBB  65                 	db	101	;'e'
  3322  00FDBC  64                 	db	100	;'d'
  3323  00FDBD  20                 	db	32
  3324  00FDBE  61                 	db	97	;'a'
  3325  00FDBF  73                 	db	115	;'s'
  3326  00FDC0  20                 	db	32
  3327  00FDC1  2B                 	db	43
  3328  00FDC2  25                 	db	37
  3329  00FDC3  66                 	db	102	;'f'
  3330  00FDC4  20                 	db	32
  3331  00FDC5  56                 	db	86	;'V'
  3332  00FDC6  6F                 	db	111	;'o'
  3333  00FDC7  6C                 	db	108	;'l'
  3334  00FDC8  74                 	db	116	;'t'
  3335  00FDC9  73                 	db	115	;'s'
  3336  00FDCA  0A                 	db	10
  3337  00FDCB  0D                 	db	13
  3338  00FDCC  00                 	db	0
  3339  00FDCD                     STR_88:
  3340  00FDCD  48                 	db	72	;'H'
  3341  00FDCE  65                 	db	101	;'e'
  3342  00FDCF  6C                 	db	108	;'l'
  3343  00FDD0  70                 	db	112	;'p'
  3344  00FDD1  20                 	db	32
  3345  00FDD2  6D                 	db	109	;'m'
  3346  00FDD3  65                 	db	101	;'e'
  3347  00FDD4  73                 	db	115	;'s'
  3348  00FDD5  73                 	db	115	;'s'
  3349  00FDD6  61                 	db	97	;'a'
  3350  00FDD7  67                 	db	103	;'g'
  3351  00FDD8  65                 	db	101	;'e'
  3352  00FDD9  73                 	db	115	;'s'
  3353  00FDDA  20                 	db	32
  3354  00FDDB  61                 	db	97	;'a'
  3355  00FDDC  70                 	db	112	;'p'
  3356  00FDDD  70                 	db	112	;'p'
  3357  00FDDE  65                 	db	101	;'e'
  3358  00FDDF  61                 	db	97	;'a'
  3359  00FDE0  72                 	db	114	;'r'
  3360  00FDE1  20                 	db	32
  3361  00FDE2  69                 	db	105	;'i'
  3362  00FDE3  6E                 	db	110	;'n'
  3363  00FDE4  20                 	db	32
  3364  00FDE5  79                 	db	121	;'y'
  3365  00FDE6  65                 	db	101	;'e'
  3366  00FDE7  6C                 	db	108	;'l'
  3367  00FDE8  6C                 	db	108	;'l'
  3368  00FDE9  6F                 	db	111	;'o'
  3369  00FDEA  77                 	db	119	;'w'
  3370  00FDEB  0A                 	db	10
  3371  00FDEC  0D                 	db	13
  3372  00FDED  00                 	db	0
  3373  00FDEE                     STR_62:
  3374  00FDEE  4D                 	db	77	;'M'
  3375  00FDEF  65                 	db	101	;'e'
  3376  00FDF0  61                 	db	97	;'a'
  3377  00FDF1  73                 	db	115	;'s'
  3378  00FDF2  75                 	db	117	;'u'
  3379  00FDF3  72                 	db	114	;'r'
  3380  00FDF4  65                 	db	101	;'e'
  3381  00FDF5  64                 	db	100	;'d'
  3382  00FDF6  20                 	db	32
  3383  00FDF7  43                 	db	67	;'C'
  3384  00FDF8  75                 	db	117	;'u'
  3385  00FDF9  72                 	db	114	;'r'
  3386  00FDFA  72                 	db	114	;'r'
  3387  00FDFB  65                 	db	101	;'e'
  3388  00FDFC  6E                 	db	110	;'n'
  3389  00FDFD  74                 	db	116	;'t'
  3390  00FDFE  20                 	db	32
  3391  00FDFF  69                 	db	105	;'i'
  3392  00FE00  73                 	db	115	;'s'
  3393  00FE01  20                 	db	32
  3394  00FE02  25                 	db	37
  3395  00FE03  2E                 	db	46
  3396  00FE04  33                 	db	51	;'3'
  3397  00FE05  66                 	db	102	;'f'
  3398  00FE06  20                 	db	32
  3399  00FE07  41                 	db	65	;'A'
  3400  00FE08  6D                 	db	109	;'m'
  3401  00FE09  70                 	db	112	;'p'
  3402  00FE0A  73                 	db	115	;'s'
  3403  00FE0B  0A                 	db	10
  3404  00FE0C  0D                 	db	13
  3405  00FE0D  00                 	db	0
  3406  00FE0E                     STR_92:
  3407  00FE0E  55                 	db	85	;'U'
  3408  00FE0F  73                 	db	115	;'s'
  3409  00FE10  65                 	db	101	;'e'
  3410  00FE11  72                 	db	114	;'r'
  3411  00FE12  20                 	db	32
  3412  00FE13  69                 	db	105	;'i'
  3413  00FE14  6E                 	db	110	;'n'
  3414  00FE15  70                 	db	112	;'p'
  3415  00FE16  75                 	db	117	;'u'
  3416  00FE17  74                 	db	116	;'t'
  3417  00FE18  20                 	db	32
  3418  00FE19  61                 	db	97	;'a'
  3419  00FE1A  70                 	db	112	;'p'
  3420  00FE1B  70                 	db	112	;'p'
  3421  00FE1C  65                 	db	101	;'e'
  3422  00FE1D  61                 	db	97	;'a'
  3423  00FE1E  72                 	db	114	;'r'
  3424  00FE1F  73                 	db	115	;'s'
  3425  00FE20  20                 	db	32
  3426  00FE21  69                 	db	105	;'i'
  3427  00FE22  6E                 	db	110	;'n'
  3428  00FE23  20                 	db	32
  3429  00FE24  77                 	db	119	;'w'
  3430  00FE25  68                 	db	104	;'h'
  3431  00FE26  69                 	db	105	;'i'
  3432  00FE27  74                 	db	116	;'t'
  3433  00FE28  65                 	db	101	;'e'
  3434  00FE29  0A                 	db	10
  3435  00FE2A  0D                 	db	13
  3436  00FE2B  00                 	db	0
  3437  00FE2C                     STR_89:
  3438  00FE2C  49                 	db	73	;'I'
  3439  00FE2D  44                 	db	68	;'D'
  3440  00FE2E  4E                 	db	78	;'N'
  3441  00FE2F  20                 	db	32
  3442  00FE30  73                 	db	115	;'s'
  3443  00FE31  74                 	db	116	;'t'
  3444  00FE32  72                 	db	114	;'r'
  3445  00FE33  69                 	db	105	;'i'
  3446  00FE34  6E                 	db	110	;'n'
  3447  00FE35  67                 	db	103	;'g'
  3448  00FE36  20                 	db	32
  3449  00FE37  61                 	db	97	;'a'
  3450  00FE38  70                 	db	112	;'p'
  3451  00FE39  70                 	db	112	;'p'
  3452  00FE3A  65                 	db	101	;'e'
  3453  00FE3B  61                 	db	97	;'a'
  3454  00FE3C  72                 	db	114	;'r'
  3455  00FE3D  73                 	db	115	;'s'
  3456  00FE3E  20                 	db	32
  3457  00FE3F  69                 	db	105	;'i'
  3458  00FE40  6E                 	db	110	;'n'
  3459  00FE41  20                 	db	32
  3460  00FE42  67                 	db	103	;'g'
  3461  00FE43  72                 	db	114	;'r'
  3462  00FE44  65                 	db	101	;'e'
  3463  00FE45  65                 	db	101	;'e'
  3464  00FE46  6E                 	db	110	;'n'
  3465  00FE47  0A                 	db	10
  3466  00FE48  0D                 	db	13
  3467  00FE49  00                 	db	0
  3468  00FE4A                     STR_61:
  3469  00FE4A  4D                 	db	77	;'M'
  3470  00FE4B  65                 	db	101	;'e'
  3471  00FE4C  61                 	db	97	;'a'
  3472  00FE4D  73                 	db	115	;'s'
  3473  00FE4E  75                 	db	117	;'u'
  3474  00FE4F  72                 	db	114	;'r'
  3475  00FE50  65                 	db	101	;'e'
  3476  00FE51  20                 	db	32
  3477  00FE52  44                 	db	68	;'D'
  3478  00FE53  65                 	db	101	;'e'
  3479  00FE54  74                 	db	116	;'t'
  3480  00FE55  65                 	db	101	;'e'
  3481  00FE56  63                 	db	99	;'c'
  3482  00FE57  74                 	db	116	;'t'
  3483  00FE58  65                 	db	101	;'e'
  3484  00FE59  64                 	db	100	;'d'
  3485  00FE5A  20                 	db	32
  3486  00FE5B  43                 	db	67	;'C'
  3487  00FE5C  75                 	db	117	;'u'
  3488  00FE5D  72                 	db	114	;'r'
  3489  00FE5E  72                 	db	114	;'r'
  3490  00FE5F  65                 	db	101	;'e'
  3491  00FE60  6E                 	db	110	;'n'
  3492  00FE61  74                 	db	116	;'t'
  3493  00FE62  3F                 	db	63	;'?'
  3494  00FE63  00                 	db	0
  3495  00FE64                     STR_76:
  3496  00FE64  4C                 	db	76	;'L'
  3497  00FE65  6F                 	db	111	;'o'
  3498  00FE66  61                 	db	97	;'a'
  3499  00FE67  64                 	db	100	;'d'
  3500  00FE68  20                 	db	32
  3501  00FE69  68                 	db	104	;'h'
  3502  00FE6A  61                 	db	97	;'a'
  3503  00FE6B  73                 	db	115	;'s'
  3504  00FE6C  20                 	db	32
  3505  00FE6D  62                 	db	98	;'b'
  3506  00FE6E  65                 	db	101	;'e'
  3507  00FE6F  65                 	db	101	;'e'
  3508  00FE70  6E                 	db	110	;'n'
  3509  00FE71  20                 	db	32
  3510  00FE72  64                 	db	100	;'d'
  3511  00FE73  69                 	db	105	;'i'
  3512  00FE74  73                 	db	115	;'s'
  3513  00FE75  61                 	db	97	;'a'
  3514  00FE76  62                 	db	98	;'b'
  3515  00FE77  6C                 	db	108	;'l'
  3516  00FE78  65                 	db	101	;'e'
  3517  00FE79  64                 	db	100	;'d'
  3518  00FE7A  0A                 	db	10
  3519  00FE7B  0D                 	db	13
  3520  00FE7C  00                 	db	0
  3521  00FE7D                     STR_77:
  3522  00FE7D  53                 	db	83	;'S'
  3523  00FE7E  65                 	db	101	;'e'
  3524  00FE7F  74                 	db	116	;'t'
  3525  00FE80  20                 	db	32
  3526  00FE81  44                 	db	68	;'D'
  3527  00FE82  69                 	db	105	;'i'
  3528  00FE83  6D                 	db	109	;'m'
  3529  00FE84  6D                 	db	109	;'m'
  3530  00FE85  69                 	db	105	;'i'
  3531  00FE86  6E                 	db	110	;'n'
  3532  00FE87  67                 	db	103	;'g'
  3533  00FE88  20                 	db	32
  3534  00FE89  50                 	db	80	;'P'
  3535  00FE8A  65                 	db	101	;'e'
  3536  00FE8B  72                 	db	114	;'r'
  3537  00FE8C  63                 	db	99	;'c'
  3538  00FE8D  65                 	db	101	;'e'
  3539  00FE8E  6E                 	db	110	;'n'
  3540  00FE8F  74                 	db	116	;'t'
  3541  00FE90  61                 	db	97	;'a'
  3542  00FE91  67                 	db	103	;'g'
  3543  00FE92  65                 	db	101	;'e'
  3544  00FE93  3A                 	db	58	;':'
  3545  00FE94  20                 	db	32
  3546  00FE95  00                 	db	0
  3547  00FE96                     STR_91:
  3548  00FE96  45                 	db	69	;'E'
  3549  00FE97  72                 	db	114	;'r'
  3550  00FE98  72                 	db	114	;'r'
  3551  00FE99  6F                 	db	111	;'o'
  3552  00FE9A  72                 	db	114	;'r'
  3553  00FE9B  73                 	db	115	;'s'
  3554  00FE9C  20                 	db	32
  3555  00FE9D  61                 	db	97	;'a'
  3556  00FE9E  70                 	db	112	;'p'
  3557  00FE9F  70                 	db	112	;'p'
  3558  00FEA0  65                 	db	101	;'e'
  3559  00FEA1  61                 	db	97	;'a'
  3560  00FEA2  72                 	db	114	;'r'
  3561  00FEA3  20                 	db	32
  3562  00FEA4  69                 	db	105	;'i'
  3563  00FEA5  6E                 	db	110	;'n'
  3564  00FEA6  20                 	db	32
  3565  00FEA7  72                 	db	114	;'r'
  3566  00FEA8  65                 	db	101	;'e'
  3567  00FEA9  64                 	db	100	;'d'
  3568  00FEAA  0A                 	db	10
  3569  00FEAB  0D                 	db	13
  3570  00FEAC  00                 	db	0
  3571  00FEAD                     STR_65:
  3572  00FEAD  4D                 	db	77	;'M'
  3573  00FEAE  65                 	db	101	;'e'
  3574  00FEAF  61                 	db	97	;'a'
  3575  00FEB0  73                 	db	115	;'s'
  3576  00FEB1  75                 	db	117	;'u'
  3577  00FEB2  72                 	db	114	;'r'
  3578  00FEB3  65                 	db	101	;'e'
  3579  00FEB4  20                 	db	32
  3580  00FEB5  52                 	db	82	;'R'
  3581  00FEB6  4D                 	db	77	;'M'
  3582  00FEB7  53                 	db	83	;'S'
  3583  00FEB8  20                 	db	32
  3584  00FEB9  56                 	db	86	;'V'
  3585  00FEBA  6F                 	db	111	;'o'
  3586  00FEBB  6C                 	db	108	;'l'
  3587  00FEBC  74                 	db	116	;'t'
  3588  00FEBD  61                 	db	97	;'a'
  3589  00FEBE  67                 	db	103	;'g'
  3590  00FEBF  65                 	db	101	;'e'
  3591  00FEC0  3F                 	db	63	;'?'
  3592  00FEC1  00                 	db	0
  3593  00FEC2                     STR_63:
  3594  00FEC2  4D                 	db	77	;'M'
  3595  00FEC3  65                 	db	101	;'e'
  3596  00FEC4  61                 	db	97	;'a'
  3597  00FEC5  73                 	db	115	;'s'
  3598  00FEC6  75                 	db	117	;'u'
  3599  00FEC7  72                 	db	114	;'r'
  3600  00FEC8  65                 	db	101	;'e'
  3601  00FEC9  20                 	db	32
  3602  00FECA  52                 	db	82	;'R'
  3603  00FECB  4D                 	db	77	;'M'
  3604  00FECC  53                 	db	83	;'S'
  3605  00FECD  20                 	db	32
  3606  00FECE  43                 	db	67	;'C'
  3607  00FECF  75                 	db	117	;'u'
  3608  00FED0  72                 	db	114	;'r'
  3609  00FED1  72                 	db	114	;'r'
  3610  00FED2  65                 	db	101	;'e'
  3611  00FED3  6E                 	db	110	;'n'
  3612  00FED4  74                 	db	116	;'t'
  3613  00FED5  3F                 	db	63	;'?'
  3614  00FED6  00                 	db	0
  3615  00FED7                     STR_55:
  3616  00FED7  4D                 	db	77	;'M'
  3617  00FED8  65                 	db	101	;'e'
  3618  00FED9  61                 	db	97	;'a'
  3619  00FEDA  73                 	db	115	;'s'
  3620  00FEDB  75                 	db	117	;'u'
  3621  00FEDC  72                 	db	114	;'r'
  3622  00FEDD  65                 	db	101	;'e'
  3623  00FEDE  20                 	db	32
  3624  00FEDF  44                 	db	68	;'D'
  3625  00FEE0  69                 	db	105	;'i'
  3626  00FEE1  65                 	db	101	;'e'
  3627  00FEE2  20                 	db	32
  3628  00FEE3  54                 	db	84	;'T'
  3629  00FEE4  65                 	db	101	;'e'
  3630  00FEE5  6D                 	db	109	;'m'
  3631  00FEE6  70                 	db	112	;'p'
  3632  00FEE7  3F                 	db	63	;'?'
  3633  00FEE8  00                 	db	0
  3634  00FEE9                     STR_93:
  3635  00FEE9  30                 	db	48	;'0'
  3636  00FEEA  31                 	db	49	;'1'
  3637  00FEEB  32                 	db	50	;'2'
  3638  00FEEC  33                 	db	51	;'3'
  3639  00FEED  34                 	db	52	;'4'
  3640  00FEEE  35                 	db	53	;'5'
  3641  00FEEF  36                 	db	54	;'6'
  3642  00FEF0  37                 	db	55	;'7'
  3643  00FEF1  38                 	db	56	;'8'
  3644  00FEF2  39                 	db	57	;'9'
  3645  00FEF3  41                 	db	65	;'A'
  3646  00FEF4  42                 	db	66	;'B'
  3647  00FEF5  43                 	db	67	;'C'
  3648  00FEF6  44                 	db	68	;'D'
  3649  00FEF7  45                 	db	69	;'E'
  3650  00FEF8  46                 	db	70	;'F'
  3651  00FEF9  00                 	db	0
  3652  00FEFA                     STR_49:
  3653  00FEFA  41                 	db	65	;'A'
  3654  00FEFB  43                 	db	67	;'C'
  3655  00FEFC  20                 	db	32
  3656  00FEFD  50                 	db	80	;'P'
  3657  00FEFE  6F                 	db	111	;'o'
  3658  00FEFF  77                 	db	119	;'w'
  3659  00FF00  65                 	db	101	;'e'
  3660  00FF01  72                 	db	114	;'r'
  3661  00FF02  20                 	db	32
  3662  00FF03  4D                 	db	77	;'M'
  3663  00FF04  65                 	db	101	;'e'
  3664  00FF05  74                 	db	116	;'t'
  3665  00FF06  65                 	db	101	;'e'
  3666  00FF07  72                 	db	114	;'r'
  3667  00FF08  0A                 	db	10
  3668  00FF09  0D                 	db	13
  3669  00FF0A  00                 	db	0
  3670  00FF0B                     STR_51:
  3671  00FF0B  4D                 	db	77	;'M'
  3672  00FF0C  65                 	db	101	;'e'
  3673  00FF0D  61                 	db	97	;'a'
  3674  00FF0E  73                 	db	115	;'s'
  3675  00FF0F  75                 	db	117	;'u'
  3676  00FF10  72                 	db	114	;'r'
  3677  00FF11  65                 	db	101	;'e'
  3678  00FF12  20                 	db	32
  3679  00FF13  50                 	db	80	;'P'
  3680  00FF14  4F                 	db	79	;'O'
  3681  00FF15  53                 	db	83	;'S'
  3682  00FF16  33                 	db	51	;'3'
  3683  00FF17  50                 	db	80	;'P'
  3684  00FF18  33                 	db	51	;'3'
  3685  00FF19  3F                 	db	63	;'?'
  3686  00FF1A  00                 	db	0
  3687  00FF1B                     STR_71:
  3688  00FF1B  44                 	db	68	;'D'
  3689  00FF1C  69                 	db	105	;'i'
  3690  00FF1D  73                 	db	115	;'s'
  3691  00FF1E  61                 	db	97	;'a'
  3692  00FF1F  62                 	db	98	;'b'
  3693  00FF20  6C                 	db	108	;'l'
  3694  00FF21  65                 	db	101	;'e'
  3695  00FF22  20                 	db	32
  3696  00FF23  44                 	db	68	;'D'
  3697  00FF24  69                 	db	105	;'i'
  3698  00FF25  6D                 	db	109	;'m'
  3699  00FF26  6D                 	db	109	;'m'
  3700  00FF27  69                 	db	105	;'i'
  3701  00FF28  6E                 	db	110	;'n'
  3702  00FF29  67                 	db	103	;'g'
  3703  00FF2A  00                 	db	0
  3704  00FF2B                     STR_53:
  3705  00FF2B  4D                 	db	77	;'M'
  3706  00FF2C  65                 	db	101	;'e'
  3707  00FF2D  61                 	db	97	;'a'
  3708  00FF2E  73                 	db	115	;'s'
  3709  00FF2F  75                 	db	117	;'u'
  3710  00FF30  72                 	db	114	;'r'
  3711  00FF31  65                 	db	101	;'e'
  3712  00FF32  20                 	db	32
  3713  00FF33  50                 	db	80	;'P'
  3714  00FF34  4F                 	db	79	;'O'
  3715  00FF35  53                 	db	83	;'S'
  3716  00FF36  31                 	db	49	;'1'
  3717  00FF37  32                 	db	50	;'2'
  3718  00FF38  3F                 	db	63	;'?'
  3719  00FF39  00                 	db	0
  3720  00FF3A                     STR_67:
  3721  00FF3A  4D                 	db	77	;'M'
  3722  00FF3B  65                 	db	101	;'e'
  3723  00FF3C  61                 	db	97	;'a'
  3724  00FF3D  73                 	db	115	;'s'
  3725  00FF3E  75                 	db	117	;'u'
  3726  00FF3F  72                 	db	114	;'r'
  3727  00FF40  65                 	db	101	;'e'
  3728  00FF41  20                 	db	32
  3729  00FF42  50                 	db	80	;'P'
  3730  00FF43  6F                 	db	111	;'o'
  3731  00FF44  77                 	db	119	;'w'
  3732  00FF45  65                 	db	101	;'e'
  3733  00FF46  72                 	db	114	;'r'
  3734  00FF47  3F                 	db	63	;'?'
  3735  00FF48  00                 	db	0
  3736  00FF49                     STR_69:
  3737  00FF49  45                 	db	69	;'E'
  3738  00FF4A  6E                 	db	110	;'n'
  3739  00FF4B  61                 	db	97	;'a'
  3740  00FF4C  62                 	db	98	;'b'
  3741  00FF4D  6C                 	db	108	;'l'
  3742  00FF4E  65                 	db	101	;'e'
  3743  00FF4F  20                 	db	32
  3744  00FF50  44                 	db	68	;'D'
  3745  00FF51  69                 	db	105	;'i'
  3746  00FF52  6D                 	db	109	;'m'
  3747  00FF53  6D                 	db	109	;'m'
  3748  00FF54  69                 	db	105	;'i'
  3749  00FF55  6E                 	db	110	;'n'
  3750  00FF56  67                 	db	103	;'g'
  3751  00FF57  00                 	db	0
  3752  00FF58                     STR_59:
  3753  00FF58  4D                 	db	77	;'M'
  3754  00FF59  65                 	db	101	;'e'
  3755  00FF5A  61                 	db	97	;'a'
  3756  00FF5B  73                 	db	115	;'s'
  3757  00FF5C  75                 	db	117	;'u'
  3758  00FF5D  72                 	db	114	;'r'
  3759  00FF5E  65                 	db	101	;'e'
  3760  00FF5F  20                 	db	32
  3761  00FF60  41                 	db	65	;'A'
  3762  00FF61  56                 	db	86	;'V'
  3763  00FF62  53                 	db	83	;'S'
  3764  00FF63  53                 	db	83	;'S'
  3765  00FF64  3F                 	db	63	;'?'
  3766  00FF65  00                 	db	0
  3767  00FF66                     STR_57:
  3768  00FF66  4D                 	db	77	;'M'
  3769  00FF67  65                 	db	101	;'e'
  3770  00FF68  61                 	db	97	;'a'
  3771  00FF69  73                 	db	115	;'s'
  3772  00FF6A  75                 	db	117	;'u'
  3773  00FF6B  72                 	db	114	;'r'
  3774  00FF6C  65                 	db	101	;'e'
  3775  00FF6D  20                 	db	32
  3776  00FF6E  46                 	db	70	;'F'
  3777  00FF6F  56                 	db	86	;'V'
  3778  00FF70  52                 	db	82	;'R'
  3779  00FF71  3F                 	db	63	;'?'
  3780  00FF72  00                 	db	0
  3781  00FF73                     STR_75:
  3782  00FF73  44                 	db	68	;'D'
  3783  00FF74  69                 	db	105	;'i'
  3784  00FF75  73                 	db	115	;'s'
  3785  00FF76  61                 	db	97	;'a'
  3786  00FF77  62                 	db	98	;'b'
  3787  00FF78  6C                 	db	108	;'l'
  3788  00FF79  65                 	db	101	;'e'
  3789  00FF7A  20                 	db	32
  3790  00FF7B  4C                 	db	76	;'L'
  3791  00FF7C  6F                 	db	111	;'o'
  3792  00FF7D  61                 	db	97	;'a'
  3793  00FF7E  64                 	db	100	;'d'
  3794  00FF7F  00                 	db	0
  3795  00FF80                     STR_73:
  3796  00FF80  45                 	db	69	;'E'
  3797  00FF81  6E                 	db	110	;'n'
  3798  00FF82  61                 	db	97	;'a'
  3799  00FF83  62                 	db	98	;'b'
  3800  00FF84  6C                 	db	108	;'l'
  3801  00FF85  65                 	db	101	;'e'
  3802  00FF86  20                 	db	32
  3803  00FF87  4C                 	db	76	;'L'
  3804  00FF88  6F                 	db	111	;'o'
  3805  00FF89  61                 	db	97	;'a'
  3806  00FF8A  64                 	db	100	;'d'
  3807  00FF8B  00                 	db	0
  3808  00FF8C                     STR_84:
  3809  00FF8C  4F                 	db	79	;'O'
  3810  00FF8D  6E                 	db	110	;'n'
  3811  00FF8E  20                 	db	32
  3812  00FF8F  54                 	db	84	;'T'
  3813  00FF90  69                 	db	105	;'i'
  3814  00FF91  6D                 	db	109	;'m'
  3815  00FF92  65                 	db	101	;'e'
  3816  00FF93  3F                 	db	63	;'?'
  3817  00FF94  00                 	db	0
  3818  00FF95                     STR_47:
  3819  00FF95  2A                 	db	42
  3820  00FF96  49                 	db	73	;'I'
  3821  00FF97  44                 	db	68	;'D'
  3822  00FF98  4E                 	db	78	;'N'
  3823  00FF99  3F                 	db	63	;'?'
  3824  00FF9A  00                 	db	0
  3825  00FF9B                     STR_44:
  3826  00FF9B  43                 	db	67	;'C'
  3827  00FF9C  6C                 	db	108	;'l'
  3828  00FF9D  65                 	db	101	;'e'
  3829  00FF9E  61                 	db	97	;'a'
  3830  00FF9F  72                 	db	114	;'r'
  3831  00FFA0  00                 	db	0
  3832  00FFA1                     STR_41:
  3833  00FFA1  52                 	db	82	;'R'
  3834  00FFA2  65                 	db	101	;'e'
  3835  00FFA3  73                 	db	115	;'s'
  3836  00FFA4  65                 	db	101	;'e'
  3837  00FFA5  74                 	db	116	;'t'
  3838  00FFA6  00                 	db	0
  3839  00FFA7                     STR_86:
  3840  00FFA7  48                 	db	72	;'H'
  3841  00FFA8  65                 	db	101	;'e'
  3842  00FFA9  6C                 	db	108	;'l'
  3843  00FFAA  70                 	db	112	;'p'
  3844  00FFAB  00                 	db	0
  3845  00FFAC                     STR_2:
  3846  00FFAC  1B                 	db	27
  3847  00FFAD  5B                 	db	91	;'['
  3848  00FFAE  32                 	db	50	;'2'
  3849  00FFAF  4A                 	db	74	;'J'
  3850  00FFB0  00                 	db	0
  3851  00FFB1                     STR_48:
  3852  00FFB1  49                 	db	73	;'I'
  3853  00FFB2  44                 	db	68	;'D'
  3854  00FFB3  4E                 	db	78	;'N'
  3855  00FFB4  00                 	db	0
  3856  00FFB5                     STR_3:
  3857  00FFB5  1B                 	db	27
  3858  00FFB6  5B                 	db	91	;'['
  3859  00FFB7  48                 	db	72	;'H'
  3860  00FFB8  00                 	db	0
  3861  00FFB9  1B                 	db	27
  3862  00FFBA  5B                 	db	91	;'['
  3863  00FFBB  73                 	db	115	;'s'
  3864  00FFBC  00                 	db	0
  3865  00FFBD  1B                 	db	27
  3866  00FFBE  5B                 	db	91	;'['
  3867  00FFBF  75                 	db	117	;'u'
  3868  00FFC0  00                 	db	0
  3869  00FFC1                     STR_1:
  3870  00FFC1  1B                 	db	27
  3871  00FFC2  5B                 	db	91	;'['
  3872  00FFC3  4B                 	db	75	;'K'
  3873  00FFC4  00                 	db	0
  3874  00FFC5                     STR_20:
  3875  00FFC5  33                 	db	51	;'3'
  3876  00FFC6  30                 	db	48	;'0'
  3877  00FFC7  00                 	db	0
  3878  00FFC8                     STR_30:
  3879  00FFC8  34                 	db	52	;'4'
  3880  00FFC9  30                 	db	48	;'0'
  3881  00FFCA  00                 	db	0
  3882  00FFCB                     STR_21:
  3883  00FFCB  33                 	db	51	;'3'
  3884  00FFCC  31                 	db	49	;'1'
  3885  00FFCD  00                 	db	0
  3886  00FFCE                     STR_31:
  3887  00FFCE  34                 	db	52	;'4'
  3888  00FFCF  31                 	db	49	;'1'
  3889  00FFD0  00                 	db	0
  3890  00FFD1                     STR_22:
  3891  00FFD1  33                 	db	51	;'3'
  3892  00FFD2  32                 	db	50	;'2'
  3893  00FFD3  00                 	db	0
  3894  00FFD4                     STR_32:
  3895  00FFD4  34                 	db	52	;'4'
  3896  00FFD5  32                 	db	50	;'2'
  3897  00FFD6  00                 	db	0
  3898  00FFD7                     STR_23:
  3899  00FFD7  33                 	db	51	;'3'
  3900  00FFD8  33                 	db	51	;'3'
  3901  00FFD9  00                 	db	0
  3902  00FFDA                     STR_33:
  3903  00FFDA  34                 	db	52	;'4'
  3904  00FFDB  33                 	db	51	;'3'
  3905  00FFDC  00                 	db	0
  3906  00FFDD                     STR_24:
  3907  00FFDD  33                 	db	51	;'3'
  3908  00FFDE  34                 	db	52	;'4'
  3909  00FFDF  00                 	db	0
  3910  00FFE0                     STR_34:
  3911  00FFE0  34                 	db	52	;'4'
  3912  00FFE1  34                 	db	52	;'4'
  3913  00FFE2  00                 	db	0
  3914  00FFE3                     STR_25:
  3915  00FFE3  33                 	db	51	;'3'
  3916  00FFE4  35                 	db	53	;'5'
  3917  00FFE5  00                 	db	0
  3918  00FFE6                     STR_35:
  3919  00FFE6  34                 	db	52	;'4'
  3920  00FFE7  35                 	db	53	;'5'
  3921  00FFE8  00                 	db	0
  3922  00FFE9                     STR_26:
  3923  00FFE9  33                 	db	51	;'3'
  3924  00FFEA  36                 	db	54	;'6'
  3925  00FFEB  00                 	db	0
  3926  00FFEC                     STR_36:
  3927  00FFEC  34                 	db	52	;'4'
  3928  00FFED  36                 	db	54	;'6'
  3929  00FFEE  00                 	db	0
  3930  00FFEF                     STR_27:
  3931  00FFEF  33                 	db	51	;'3'
  3932  00FFF0  37                 	db	55	;'7'
  3933  00FFF1  00                 	db	0
  3934  00FFF2                     STR_37:
  3935  00FFF2  34                 	db	52	;'4'
  3936  00FFF3  37                 	db	55	;'7'
  3937  00FFF4  00                 	db	0
  3938  00FFF5                     STR_11:
  3939  00FFF5  1B                 	db	27
  3940  00FFF6  5B                 	db	91	;'['
  3941  00FFF7  00                 	db	0
  3942  00FFF8                     STR_17:
  3943  00FFF8  38                 	db	56	;'8'
  3944  00FFF9  00                 	db	0
  3945  00FFFA                     STR_19:
  3946  00FFFA  3B                 	db	59	;';'
  3947  00FFFB  00                 	db	0
  3948  00FFFC                     STR_39:
  3949  00FFFC  6D                 	db	109	;'m'
  3950  00FFFD  00                 	db	0
  3951  0000                     
  3952                           ; #config settings
  3953  00FFFE  00                 	db	0	; dummy byte at the end
  3954  0000                     
  3955                           	psect	cinit
  3956  015BBC                     __pcinit:
  3957                           	opt stack 0
  3958  015BBC                     start_initialization:
  3959                           	opt stack 0
  3960  015BBC                     __initialization:
  3961                           	opt stack 0
  3962                           
  3963                           ; Initialize objects allocated to BANK0 (6 bytes)
  3964                           ; load TBLPTR registers with __pidataBANK0
  3965  015BBC  0E32               	movlw	low __pidataBANK0
  3966  015BBE  6EF6               	movwf	tblptrl,c
  3967  015BC0  0E64               	movlw	high __pidataBANK0
  3968  015BC2  6EF7               	movwf	tblptrh,c
  3969  015BC4  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3970  015BC6  6EF8               	movwf	tblptru,c
  3971  015BC8  EE00  F0F1         	lfsr	0,__pdataBANK0
  3972  015BCC  EE10 F006          	lfsr	1,6
  3973  015BD0                     copy_data0:
  3974  015BD0  0009               	tblrd		*+
  3975  015BD2  CFF5 FFEE          	movff	tablat,postinc0
  3976  015BD6  50E5               	movf	postdec1,w,c
  3977  015BD8  50E1               	movf	fsr1l,w,c
  3978  015BDA  E1FA               	bnz	copy_data0
  3979                           
  3980                           ; Clear objects allocated to BANK2 (256 bytes)
  3981  015BDC  EE02  F000         	lfsr	0,__pbssBANK2
  3982  015BE0  EE11 F000          	lfsr	1,256
  3983  015BE4                     clear_0:
  3984  015BE4  6AEE               	clrf	postinc0,c
  3985  015BE6  50E5               	movf	postdec1,w,c
  3986  015BE8  50E1               	movf	fsr1l,w,c
  3987  015BEA  E1FC               	bnz	clear_0
  3988  015BEC  50E2               	movf	fsr1h,w,c
  3989  015BEE  E1FA               	bnz	clear_0
  3990                           
  3991                           ; Clear objects allocated to BANK1 (34 bytes)
  3992  015BF0  EE01  F0B9         	lfsr	0,__pbssBANK1
  3993  015BF4  0E22               	movlw	34
  3994  015BF6                     clear_1:
  3995  015BF6  6AEE               	clrf	postinc0,c
  3996  015BF8  06E8               	decf	wreg,f,c
  3997  015BFA  E1FD               	bnz	clear_1
  3998                           
  3999                           ; Clear objects allocated to BITBANK0 (1 bytes)
  4000  015BFC  0100               	movlb	0
  4001  015BFE  6BF7               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  4002                           
  4003                           ; Clear objects allocated to BANK0 (44 bytes)
  4004  015C00  EE00  F0C5         	lfsr	0,__pbssBANK0
  4005  015C04  0E2C               	movlw	44
  4006  015C06                     clear_2:
  4007  015C06  6AEE               	clrf	postinc0,c
  4008  015C08  06E8               	decf	wreg,f,c
  4009  015C0A  E1FD               	bnz	clear_2
  4010                           
  4011                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  4012  015C0C  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  4013  015C0E                     end_of_initialization:
  4014                           	opt stack 0
  4015  015C0E                     __end_of__initialization:
  4016                           	opt stack 0
  4017  015C0E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4018  015C10  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4019  015C12  0100               	movlb	0
  4020  015C14  EFA2  F0AB         	goto	_main	;jump to C main() function
  4021                           tblptru	equ	0xFF8
  4022                           tblptrh	equ	0xFF7
  4023                           tblptrl	equ	0xFF6
  4024                           tablat	equ	0xFF5
  4025                           postinc0	equ	0xFEE
  4026                           wreg	equ	0xFE8
  4027                           postdec1	equ	0xFE5
  4028                           fsr1h	equ	0xFE2
  4029                           fsr1l	equ	0xFE1
  4030                           
  4031                           	psect	bitbssCOMRAM
  4032  0002F0                     __pbitbssCOMRAM:
  4033                           	opt stack 0
  4034  0002F0                     _load_enable:
  4035                           	opt stack 0
  4036  0002F0                     	ds	1
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           postinc0	equ	0xFEE
  4042                           wreg	equ	0xFE8
  4043                           postdec1	equ	0xFE5
  4044                           fsr1h	equ	0xFE2
  4045                           fsr1l	equ	0xFE1
  4046                           
  4047                           	psect	bitbssBANK0
  4048  0007B8                     __pbitbssBANK0:
  4049                           	opt stack 0
  4050  0007B8                     _eusart2RxStringReady:
  4051                           	opt stack 0
  4052  0007B8                     	ds	1
  4053                           tblptru	equ	0xFF8
  4054                           tblptrh	equ	0xFF7
  4055                           tblptrl	equ	0xFF6
  4056                           tablat	equ	0xFF5
  4057                           postinc0	equ	0xFEE
  4058                           wreg	equ	0xFE8
  4059                           postdec1	equ	0xFE5
  4060                           fsr1h	equ	0xFE2
  4061                           fsr1l	equ	0xFE1
  4062                           
  4063                           	psect	bssBANK0
  4064  0000C5                     __pbssBANK0:
  4065                           	opt stack 0
  4066  0000C5                     _Vrms:
  4067                           	opt stack 0
  4068  0000C5                     	ds	3
  4069  0000C8                     _Irms:
  4070                           	opt stack 0
  4071  0000C8                     	ds	3
  4072  0000CB                     _Imeas:
  4073                           	opt stack 0
  4074  0000CB                     	ds	3
  4075  0000CE                     _Ipk:
  4076                           	opt stack 0
  4077  0000CE                     	ds	3
  4078  0000D1                     _Vpk:
  4079                           	opt stack 0
  4080  0000D1                     	ds	3
  4081  0000D4                     _POS3P3_ADC_Result:
  4082                           	opt stack 0
  4083  0000D4                     	ds	3
  4084  0000D7                     _ADC_Result_Scaling:
  4085                           	opt stack 0
  4086  0000D7                     	ds	3
  4087  0000DA                     _AVSS_ADC_Result:
  4088                           	opt stack 0
  4089  0000DA                     	ds	3
  4090  0000DD                     _ADCC_ADI_InterruptHandler:
  4091                           	opt stack 0
  4092  0000DD                     	ds	3
  4093  0000E0                     _EUSART2_RxDefaultInterruptHandler:
  4094                           	opt stack 0
  4095  0000E0                     	ds	3
  4096  0000E3                     _errno:
  4097                           	opt stack 0
  4098  0000E3                     	ds	2
  4099  0000E5                     _dimming_period:
  4100                           	opt stack 0
  4101  0000E5                     	ds	2
  4102  0000E7                     _background_color:
  4103                           	opt stack 0
  4104  0000E7                     	ds	1
  4105  0000E8                     _foreground_color:
  4106                           	opt stack 0
  4107  0000E8                     	ds	1
  4108  0000E9                     _attribute:
  4109                           	opt stack 0
  4110  0000E9                     	ds	1
  4111  0000EA                     _eusart2RxHead:
  4112                           	opt stack 0
  4113  0000EA                     	ds	1
  4114  0000EB                     _TRIAC_Firing_Angle:
  4115                           	opt stack 0
  4116  0000EB                     	ds	3
  4117  0000EE                     _FVR_ADC_Result:
  4118                           	opt stack 0
  4119  0000EE                     	ds	3
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           postinc0	equ	0xFEE
  4125                           wreg	equ	0xFE8
  4126                           postdec1	equ	0xFE5
  4127                           fsr1h	equ	0xFE2
  4128                           fsr1l	equ	0xFE1
  4129                           
  4130                           	psect	dataBANK0
  4131  0000F1                     __pdataBANK0:
  4132                           	opt stack 0
  4133  0000F1                     _Vpk_const:
  4134                           	opt stack 0
  4135  0000F1                     	ds	3
  4136  0000F4                     _Temp_ADC_Offset:
  4137                           	opt stack 0
  4138  0000F4                     	ds	3
  4139                           tblptru	equ	0xFF8
  4140                           tblptrh	equ	0xFF7
  4141                           tblptrl	equ	0xFF6
  4142                           tablat	equ	0xFF5
  4143                           postinc0	equ	0xFEE
  4144                           wreg	equ	0xFE8
  4145                           postdec1	equ	0xFE5
  4146                           fsr1h	equ	0xFE2
  4147                           fsr1l	equ	0xFE1
  4148                           
  4149                           	psect	bssBANK1
  4150  0001B9                     __pbssBANK1:
  4151                           	opt stack 0
  4152  0001B9                     _on_time:
  4153                           	opt stack 0
  4154  0001B9                     	ds	4
  4155  0001BD                     _Avg_Power:
  4156                           	opt stack 0
  4157  0001BD                     	ds	3
  4158  0001C0                     _Temp_ADC_Result:
  4159                           	opt stack 0
  4160  0001C0                     	ds	3
  4161  0001C3                     _POS12_ADC_Result:
  4162                           	opt stack 0
  4163  0001C3                     	ds	3
  4164  0001C6                     _TMR5_InterruptHandler:
  4165                           	opt stack 0
  4166  0001C6                     	ds	3
  4167  0001C9                     _TMR7_InterruptHandler:
  4168                           	opt stack 0
  4169  0001C9                     	ds	3
  4170  0001CC                     _TMR6_InterruptHandler:
  4171                           	opt stack 0
  4172  0001CC                     	ds	3
  4173  0001CF                     _EUSART2_TxDefaultInterruptHandler:
  4174                           	opt stack 0
  4175  0001CF                     	ds	3
  4176  0001D2                     _timer5ReloadVal:
  4177                           	opt stack 0
  4178  0001D2                     	ds	2
  4179  0001D4                     _timer7ReloadVal:
  4180                           	opt stack 0
  4181  0001D4                     	ds	2
  4182  0001D6                     _eusart2RxCount:
  4183                           	opt stack 0
  4184  0001D6                     	ds	1
  4185  0001D7                     _eusart2RxTail:
  4186                           	opt stack 0
  4187  0001D7                     	ds	1
  4188  0001D8                     _eusart2TxBufferRemaining:
  4189                           	opt stack 0
  4190  0001D8                     	ds	1
  4191  0001D9                     _eusart2TxTail:
  4192                           	opt stack 0
  4193  0001D9                     	ds	1
  4194  0001DA                     _eusart2TxHead:
  4195                           	opt stack 0
  4196  0001DA                     	ds	1
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           postinc0	equ	0xFEE
  4202                           wreg	equ	0xFE8
  4203                           postdec1	equ	0xFE5
  4204                           fsr1h	equ	0xFE2
  4205                           fsr1l	equ	0xFE1
  4206                           
  4207                           	psect	bssBANK2
  4208  000200                     __pbssBANK2:
  4209                           	opt stack 0
  4210  000200                     _eusart2TxBuffer:
  4211                           	opt stack 0
  4212  000200                     	ds	128
  4213  000280                     _eusart2RxBuffer:
  4214                           	opt stack 0
  4215  000280                     	ds	64
  4216  0002C0                     _line:
  4217                           	opt stack 0
  4218  0002C0                     	ds	64
  4219                           tblptru	equ	0xFF8
  4220                           tblptrh	equ	0xFF7
  4221                           tblptrl	equ	0xFF6
  4222                           tablat	equ	0xFF5
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           postdec1	equ	0xFE5
  4226                           fsr1h	equ	0xFE2
  4227                           fsr1l	equ	0xFE1
  4228                           
  4229                           	psect	cstackBANK1
  4230  000100                     __pcstackBANK1:
  4231                           	opt stack 0
  4232  000100                     ??_heartbeatTimerCallback:
  4233  000100                     ADCC_StartConversion@channel:
  4234                           	opt stack 0
  4235  000100                     TMR7_WriteTimer@timerVal:
  4236                           	opt stack 0
  4237                           
  4238                           ; 2 bytes @ 0x0
  4239  000100                     	ds	1
  4240  000101                     
  4241                           ; 1 bytes @ 0x1
  4242  000101                     	ds	1
  4243  000102                     ??_INTERRUPT_InterruptManagerLow:
  4244  000102                     
  4245                           ; 1 bytes @ 0x2
  4246  000102                     	ds	21
  4247  000117                     ??_isdigit:
  4248  000117                     ?_strlen:
  4249                           	opt stack 0
  4250  000117                     ?_strcmp:
  4251                           	opt stack 0
  4252  000117                     ?_strchr:
  4253                           	opt stack 0
  4254  000117                     ?___awmod:
  4255                           	opt stack 0
  4256  000117                     ?___ftpack:
  4257                           	opt stack 0
  4258  000117                     ?__tdiv_to_l_:
  4259                           	opt stack 0
  4260  000117                     ?__div_to_l_:
  4261                           	opt stack 0
  4262  000117                     ?___lldiv:
  4263                           	opt stack 0
  4264  000117                     EUSART2_Read@readValue:
  4265                           	opt stack 0
  4266  000117                     EUSART2_Write@txData:
  4267                           	opt stack 0
  4268  000117                     ___awmod@dividend:
  4269                           	opt stack 0
  4270  000117                     strcat@to:
  4271                           	opt stack 0
  4272  000117                     strcmp@s1:
  4273                           	opt stack 0
  4274  000117                     strlen@s:
  4275                           	opt stack 0
  4276  000117                     strncpy@to:
  4277                           	opt stack 0
  4278  000117                     strchr@ptr:
  4279                           	opt stack 0
  4280  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  4281                           	opt stack 0
  4282  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  4283                           	opt stack 0
  4284  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  4285                           	opt stack 0
  4286  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  4287                           	opt stack 0
  4288  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  4289                           	opt stack 0
  4290  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  4291                           	opt stack 0
  4292  000117                     __div_to_l_@f1:
  4293                           	opt stack 0
  4294  000117                     ___ftpack@arg:
  4295                           	opt stack 0
  4296  000117                     __tdiv_to_l_@f1:
  4297                           	opt stack 0
  4298  000117                     ___ftge@ff1:
  4299                           	opt stack 0
  4300  000117                     ___lldiv@dividend:
  4301                           	opt stack 0
  4302                           
  4303                           ; 4 bytes @ 0x17
  4304  000117                     	ds	1
  4305  000118                     putch@txData:
  4306                           	opt stack 0
  4307  000118                     _isdigit$2501:
  4308                           	opt stack 0
  4309                           
  4310                           ; 1 bytes @ 0x18
  4311  000118                     	ds	1
  4312  000119                     ??_strlen:
  4313  000119                     isdigit@c:
  4314                           	opt stack 0
  4315  000119                     ___awmod@divisor:
  4316                           	opt stack 0
  4317  000119                     strcat@from:
  4318                           	opt stack 0
  4319  000119                     strcmp@s2:
  4320                           	opt stack 0
  4321  000119                     strncpy@from:
  4322                           	opt stack 0
  4323  000119                     strchr@chr:
  4324                           	opt stack 0
  4325                           
  4326                           ; 2 bytes @ 0x19
  4327  000119                     	ds	1
  4328  00011A                     ??_TMR7_Initialize:
  4329  00011A                     ??_TMR5_Initialize:
  4330  00011A                     ___ftpack@exp:
  4331                           	opt stack 0
  4332  00011A                     __div_to_l_@f2:
  4333                           	opt stack 0
  4334  00011A                     __tdiv_to_l_@f2:
  4335                           	opt stack 0
  4336  00011A                     ___ftge@ff2:
  4337                           	opt stack 0
  4338                           
  4339                           ; 3 bytes @ 0x1A
  4340  00011A                     	ds	1
  4341  00011B                     ??_strcmp:
  4342  00011B                     ___awmod@counter:
  4343                           	opt stack 0
  4344  00011B                     ___ftpack@sign:
  4345                           	opt stack 0
  4346  00011B                     strcat@cp:
  4347                           	opt stack 0
  4348  00011B                     strlen@cp:
  4349                           	opt stack 0
  4350  00011B                     strncpy@size:
  4351                           	opt stack 0
  4352  00011B                     ___lldiv@divisor:
  4353                           	opt stack 0
  4354                           
  4355                           ; 4 bytes @ 0x1B
  4356  00011B                     	ds	1
  4357  00011C                     ??___ftpack:
  4358  00011C                     ___awmod@sign:
  4359                           	opt stack 0
  4360  00011C                     strcmp@r:
  4361                           	opt stack 0
  4362                           
  4363                           ; 1 bytes @ 0x1C
  4364  00011C                     	ds	1
  4365  00011D                     ??__tdiv_to_l_:
  4366  00011D                     ??___ftge:
  4367  00011D                     ?_strncmp:
  4368                           	opt stack 0
  4369  00011D                     ?___awdiv:
  4370                           	opt stack 0
  4371  00011D                     ___awdiv@dividend:
  4372                           	opt stack 0
  4373  00011D                     strncpy@cp:
  4374                           	opt stack 0
  4375  00011D                     strncmp@s1:
  4376                           	opt stack 0
  4377  00011D                     __div_to_l_@quot:
  4378                           	opt stack 0
  4379                           
  4380                           ; 4 bytes @ 0x1D
  4381  00011D                     	ds	2
  4382  00011F                     ?___awtoft:
  4383                           	opt stack 0
  4384  00011F                     ?___lltoft:
  4385                           	opt stack 0
  4386  00011F                     ___awdiv@divisor:
  4387                           	opt stack 0
  4388  00011F                     ___awtoft@c:
  4389                           	opt stack 0
  4390  00011F                     strncmp@s2:
  4391                           	opt stack 0
  4392  00011F                     ___lldiv@quotient:
  4393                           	opt stack 0
  4394  00011F                     ___lltoft@c:
  4395                           	opt stack 0
  4396                           
  4397                           ; 4 bytes @ 0x1F
  4398  00011F                     	ds	1
  4399  000120                     __tdiv_to_l_@quot:
  4400                           	opt stack 0
  4401                           
  4402                           ; 4 bytes @ 0x20
  4403  000120                     	ds	1
  4404  000121                     ___awdiv@counter:
  4405                           	opt stack 0
  4406  000121                     __div_to_l_@cntr:
  4407                           	opt stack 0
  4408  000121                     strncmp@len:
  4409                           	opt stack 0
  4410                           
  4411                           ; 2 bytes @ 0x21
  4412  000121                     	ds	1
  4413  000122                     ___awdiv@sign:
  4414                           	opt stack 0
  4415  000122                     ___awtoft@sign:
  4416                           	opt stack 0
  4417  000122                     __div_to_l_@exp1:
  4418                           	opt stack 0
  4419                           
  4420                           ; 1 bytes @ 0x22
  4421  000122                     	ds	1
  4422  000123                     ??_strncmp:
  4423  000123                     ??___lltoft:
  4424  000123                     ?___ftneg:
  4425                           	opt stack 0
  4426  000123                     ___lldiv@counter:
  4427                           	opt stack 0
  4428  000123                     ___awdiv@quotient:
  4429                           	opt stack 0
  4430  000123                     ___ftneg@f1:
  4431                           	opt stack 0
  4432                           
  4433                           ; 3 bytes @ 0x23
  4434  000123                     	ds	1
  4435  000124                     ?___llmod:
  4436                           	opt stack 0
  4437  000124                     __tdiv_to_l_@cntr:
  4438                           	opt stack 0
  4439  000124                     ___llmod@dividend:
  4440                           	opt stack 0
  4441                           
  4442                           ; 4 bytes @ 0x24
  4443  000124                     	ds	1
  4444  000125                     ?___wmul:
  4445                           	opt stack 0
  4446  000125                     __tdiv_to_l_@exp1:
  4447                           	opt stack 0
  4448  000125                     ___wmul@multiplier:
  4449                           	opt stack 0
  4450                           
  4451                           ; 2 bytes @ 0x25
  4452  000125                     	ds	1
  4453  000126                     ?_strstr:
  4454                           	opt stack 0
  4455  000126                     strstr@s1:
  4456                           	opt stack 0
  4457                           
  4458                           ; 2 bytes @ 0x26
  4459  000126                     	ds	1
  4460  000127                     ___lltoft@exp:
  4461                           	opt stack 0
  4462  000127                     ___wmul@multiplicand:
  4463                           	opt stack 0
  4464                           
  4465                           ; 2 bytes @ 0x27
  4466  000127                     	ds	1
  4467  000128                     strstr@s2:
  4468                           	opt stack 0
  4469  000128                     ___llmod@divisor:
  4470                           	opt stack 0
  4471                           
  4472                           ; 4 bytes @ 0x28
  4473  000128                     	ds	1
  4474  000129                     ___wmul@product:
  4475                           	opt stack 0
  4476                           
  4477                           ; 2 bytes @ 0x29
  4478  000129                     	ds	1
  4479  00012A                     
  4480                           ; 1 bytes @ 0x2A
  4481  00012A                     	ds	1
  4482  00012B                     ?_atoi:
  4483                           	opt stack 0
  4484  00012B                     ?___ftadd:
  4485                           	opt stack 0
  4486  00012B                     atoi@s:
  4487                           	opt stack 0
  4488  00012B                     ___ftadd@f1:
  4489                           	opt stack 0
  4490                           
  4491                           ; 3 bytes @ 0x2B
  4492  00012B                     	ds	1
  4493  00012C                     ___llmod@counter:
  4494                           	opt stack 0
  4495                           
  4496                           ; 1 bytes @ 0x2C
  4497  00012C                     	ds	1
  4498  00012D                     ??_atoi:
  4499                           
  4500                           ; 1 bytes @ 0x2D
  4501  00012D                     	ds	1
  4502  00012E                     ___ftadd@f2:
  4503                           	opt stack 0
  4504                           
  4505                           ; 3 bytes @ 0x2E
  4506  00012E                     	ds	1
  4507  00012F                     atoi@sign:
  4508                           	opt stack 0
  4509                           
  4510                           ; 1 bytes @ 0x2F
  4511  00012F                     	ds	1
  4512  000130                     atoi@a:
  4513                           	opt stack 0
  4514                           
  4515                           ; 2 bytes @ 0x30
  4516  000130                     	ds	1
  4517  000131                     ??___ftadd:
  4518                           
  4519                           ; 1 bytes @ 0x31
  4520  000131                     	ds	3
  4521  000134                     ___ftadd@sign:
  4522                           	opt stack 0
  4523                           
  4524                           ; 1 bytes @ 0x34
  4525  000134                     	ds	1
  4526  000135                     ___ftadd@exp2:
  4527                           	opt stack 0
  4528                           
  4529                           ; 1 bytes @ 0x35
  4530  000135                     	ds	1
  4531  000136                     ___ftadd@exp1:
  4532                           	opt stack 0
  4533                           
  4534                           ; 1 bytes @ 0x36
  4535  000136                     	ds	1
  4536  000137                     ?___ftdiv:
  4537                           	opt stack 0
  4538  000137                     ?___ftsub:
  4539                           	opt stack 0
  4540  000137                     ___ftdiv@f1:
  4541                           	opt stack 0
  4542  000137                     ___ftsub@f1:
  4543                           	opt stack 0
  4544                           
  4545                           ; 3 bytes @ 0x37
  4546  000137                     	ds	3
  4547  00013A                     ___ftdiv@f2:
  4548                           	opt stack 0
  4549  00013A                     ___ftsub@f2:
  4550                           	opt stack 0
  4551                           
  4552                           ; 3 bytes @ 0x3A
  4553  00013A                     	ds	3
  4554  00013D                     ??___ftdiv:
  4555  00013D                     
  4556                           ; 1 bytes @ 0x3D
  4557  00013D                     	ds	3
  4558  000140                     ___ftdiv@cntr:
  4559                           	opt stack 0
  4560                           
  4561                           ; 1 bytes @ 0x40
  4562  000140                     	ds	1
  4563  000141                     ___ftdiv@f3:
  4564                           	opt stack 0
  4565                           
  4566                           ; 3 bytes @ 0x41
  4567  000141                     	ds	3
  4568  000144                     ___ftdiv@exp:
  4569                           	opt stack 0
  4570                           
  4571                           ; 1 bytes @ 0x44
  4572  000144                     	ds	1
  4573  000145                     ___ftdiv@sign:
  4574                           	opt stack 0
  4575                           
  4576                           ; 1 bytes @ 0x45
  4577  000145                     	ds	1
  4578  000146                     ?___ftmul:
  4579                           	opt stack 0
  4580  000146                     ___ftmul@f1:
  4581                           	opt stack 0
  4582                           
  4583                           ; 3 bytes @ 0x46
  4584  000146                     	ds	3
  4585  000149                     ___ftmul@f2:
  4586                           	opt stack 0
  4587                           
  4588                           ; 3 bytes @ 0x49
  4589  000149                     	ds	3
  4590  00014C                     ??___ftmul:
  4591                           
  4592                           ; 1 bytes @ 0x4C
  4593  00014C                     	ds	3
  4594  00014F                     ___ftmul@exp:
  4595                           	opt stack 0
  4596                           
  4597                           ; 1 bytes @ 0x4F
  4598  00014F                     	ds	1
  4599  000150                     ___ftmul@f3_as_product:
  4600                           	opt stack 0
  4601                           
  4602                           ; 3 bytes @ 0x50
  4603  000150                     	ds	3
  4604  000153                     ___ftmul@cntr:
  4605                           	opt stack 0
  4606                           
  4607                           ; 1 bytes @ 0x53
  4608  000153                     	ds	1
  4609  000154                     ___ftmul@sign:
  4610                           	opt stack 0
  4611                           
  4612                           ; 1 bytes @ 0x54
  4613  000154                     	ds	1
  4614  000155                     ?_fround:
  4615                           	opt stack 0
  4616  000155                     ?_scale:
  4617                           	opt stack 0
  4618  000155                     ?___fttol:
  4619                           	opt stack 0
  4620  000155                     ___fttol@f1:
  4621                           	opt stack 0
  4622                           
  4623                           ; 3 bytes @ 0x55
  4624  000155                     	ds	3
  4625  000158                     _fround$3144:
  4626                           	opt stack 0
  4627  000158                     _scale$3145:
  4628                           	opt stack 0
  4629                           
  4630                           ; 3 bytes @ 0x58
  4631  000158                     	ds	1
  4632  000159                     ??___fttol:
  4633                           
  4634                           ; 1 bytes @ 0x59
  4635  000159                     	ds	2
  4636  00015B                     scale@scl:
  4637                           	opt stack 0
  4638  00015B                     _fround$3143:
  4639                           	opt stack 0
  4640                           
  4641                           ; 3 bytes @ 0x5B
  4642  00015B                     	ds	3
  4643  00015E                     fround@prec:
  4644                           	opt stack 0
  4645  00015E                     ___fttol@sign1:
  4646                           	opt stack 0
  4647                           
  4648                           ; 1 bytes @ 0x5E
  4649  00015E                     	ds	1
  4650  00015F                     ___fttol@lval:
  4651                           	opt stack 0
  4652                           
  4653                           ; 4 bytes @ 0x5F
  4654  00015F                     	ds	4
  4655  000163                     ___fttol@exp1:
  4656                           	opt stack 0
  4657                           
  4658                           ; 1 bytes @ 0x63
  4659  000163                     	ds	1
  4660  000164                     ?_printf:
  4661                           	opt stack 0
  4662  000164                     printf@f:
  4663                           	opt stack 0
  4664                           
  4665                           ; 2 bytes @ 0x64
  4666  000164                     	ds	8
  4667  00016C                     ??_printf:
  4668                           
  4669                           ; 1 bytes @ 0x6C
  4670  00016C                     	ds	6
  4671  000172                     _printf$3146:
  4672                           	opt stack 0
  4673                           
  4674                           ; 3 bytes @ 0x72
  4675  000172                     	ds	3
  4676  000175                     printf@idx:
  4677                           	opt stack 0
  4678                           
  4679                           ; 1 bytes @ 0x75
  4680  000175                     	ds	1
  4681  000176                     printf@cp:
  4682                           	opt stack 0
  4683                           
  4684                           ; 2 bytes @ 0x76
  4685  000176                     	ds	2
  4686  000178                     printf@len:
  4687                           	opt stack 0
  4688                           
  4689                           ; 2 bytes @ 0x78
  4690  000178                     	ds	2
  4691  00017A                     printf@ap:
  4692                           	opt stack 0
  4693                           
  4694                           ; 2 bytes @ 0x7A
  4695  00017A                     	ds	2
  4696  00017C                     printf@flag:
  4697                           	opt stack 0
  4698                           
  4699                           ; 2 bytes @ 0x7C
  4700  00017C                     	ds	2
  4701  00017E                     printf@exp:
  4702                           	opt stack 0
  4703                           
  4704                           ; 2 bytes @ 0x7E
  4705  00017E                     	ds	2
  4706  000180                     printf@tmpval:
  4707                           	opt stack 0
  4708                           
  4709                           ; 4 bytes @ 0x80
  4710  000180                     	ds	4
  4711  000184                     printf@val:
  4712                           	opt stack 0
  4713                           
  4714                           ; 4 bytes @ 0x84
  4715  000184                     	ds	4
  4716  000188                     printf@fval:
  4717                           	opt stack 0
  4718                           
  4719                           ; 3 bytes @ 0x88
  4720  000188                     	ds	3
  4721  00018B                     printf@prec:
  4722                           	opt stack 0
  4723                           
  4724                           ; 2 bytes @ 0x8B
  4725  00018B                     	ds	2
  4726  00018D                     printf@c:
  4727                           	opt stack 0
  4728                           
  4729                           ; 1 bytes @ 0x8D
  4730  00018D                     	ds	1
  4731  00018E                     terminal_textAttributes@background_color:
  4732                           	opt stack 0
  4733                           
  4734                           ; 1 bytes @ 0x8E
  4735  00018E                     	ds	1
  4736  00018F                     terminal_textAttributes@input_attribute:
  4737                           	opt stack 0
  4738                           
  4739                           ; 1 bytes @ 0x8F
  4740  00018F                     	ds	1
  4741  000190                     terminal_textAttributes@foreground_color:
  4742                           	opt stack 0
  4743                           
  4744                           ; 1 bytes @ 0x90
  4745  000190                     	ds	1
  4746  000191                     terminal_textAttributes@output_buff:
  4747                           	opt stack 0
  4748                           
  4749                           ; 15 bytes @ 0x91
  4750  000191                     	ds	15
  4751  0001A0                     ringBufferLUT@line:
  4752                           	opt stack 0
  4753                           
  4754                           ; 2 bytes @ 0xA0
  4755  0001A0                     	ds	2
  4756  0001A2                     ??_ringBufferLUT:
  4757                           
  4758                           ; 1 bytes @ 0xA2
  4759  0001A2                     	ds	2
  4760  0001A4                     ringBufferLUT@angle_degrees:
  4761                           	opt stack 0
  4762                           
  4763                           ; 3 bytes @ 0xA4
  4764  0001A4                     	ds	3
  4765  0001A7                     ringBufferLUT@arg_buff:
  4766                           	opt stack 0
  4767                           
  4768                           ; 3 bytes @ 0xA7
  4769  0001A7                     	ds	3
  4770  0001AA                     ringBufferLUT@index:
  4771                           	opt stack 0
  4772                           
  4773                           ; 2 bytes @ 0xAA
  4774  0001AA                     	ds	2
  4775  0001AC                     ringBufferLUT@percentage:
  4776                           	opt stack 0
  4777                           
  4778                           ; 2 bytes @ 0xAC
  4779  0001AC                     	ds	2
  4780  0001AE                     ??_terminal_ringBufferPull:
  4781                           
  4782                           ; 1 bytes @ 0xAE
  4783  0001AE                     	ds	3
  4784  0001B1                     terminal_ringBufferPull@charNumber:
  4785                           	opt stack 0
  4786                           
  4787                           ; 2 bytes @ 0xB1
  4788  0001B1                     	ds	2
  4789  0001B3                     terminal_ringBufferPull@index_1976:
  4790                           	opt stack 0
  4791                           
  4792                           ; 2 bytes @ 0xB3
  4793  0001B3                     	ds	2
  4794  0001B5                     terminal_ringBufferPull@index:
  4795                           	opt stack 0
  4796                           
  4797                           ; 2 bytes @ 0xB5
  4798  0001B5                     	ds	2
  4799  0001B7                     ??_main:
  4800                           
  4801                           ; 1 bytes @ 0xB7
  4802  0001B7                     	ds	2
  4803                           tblptru	equ	0xFF8
  4804                           tblptrh	equ	0xFF7
  4805                           tblptrl	equ	0xFF6
  4806                           tablat	equ	0xFF5
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           postdec1	equ	0xFE5
  4810                           fsr1h	equ	0xFE2
  4811                           fsr1l	equ	0xFE1
  4812                           
  4813                           	psect	cstackBANK0
  4814  000060                     __pcstackBANK0:
  4815                           	opt stack 0
  4816  000060                     ?i2___ftsub:
  4817                           	opt stack 0
  4818  000060                     atan@y:
  4819                           	opt stack 0
  4820  000060                     i2___ftsub@f1:
  4821                           	opt stack 0
  4822                           
  4823                           ; 3 bytes @ 0x0
  4824  000060                     	ds	3
  4825  000063                     atan@x:
  4826                           	opt stack 0
  4827  000063                     i2___ftsub@f2:
  4828                           	opt stack 0
  4829                           
  4830                           ; 3 bytes @ 0x3
  4831  000063                     	ds	3
  4832  000066                     ?i2_printf:
  4833                           	opt stack 0
  4834  000066                     ?_sin:
  4835                           	opt stack 0
  4836  000066                     ?_sqrt:
  4837                           	opt stack 0
  4838  000066                     atan@recip:
  4839                           	opt stack 0
  4840  000066                     i2printf@f:
  4841                           	opt stack 0
  4842  000066                     sin@f:
  4843                           	opt stack 0
  4844  000066                     sqrt@a:
  4845                           	opt stack 0
  4846                           
  4847                           ; 3 bytes @ 0x6
  4848  000066                     	ds	1
  4849  000067                     atan@val_squared:
  4850                           	opt stack 0
  4851                           
  4852                           ; 3 bytes @ 0x7
  4853  000067                     	ds	1
  4854  000068                     ??i2_printf:
  4855                           
  4856                           ; 1 bytes @ 0x8
  4857  000068                     	ds	1
  4858  000069                     ??_sqrt:
  4859  000069                     sin@y:
  4860                           	opt stack 0
  4861                           
  4862                           ; 3 bytes @ 0x9
  4863  000069                     	ds	1
  4864  00006A                     atan@val:
  4865                           	opt stack 0
  4866                           
  4867                           ; 3 bytes @ 0xA
  4868  00006A                     	ds	2
  4869  00006C                     sqrt@og:
  4870                           	opt stack 0
  4871  00006C                     _sin$3337:
  4872                           	opt stack 0
  4873                           
  4874                           ; 3 bytes @ 0xC
  4875  00006C                     	ds	2
  4876  00006E                     i2_printf$3341:
  4877                           	opt stack 0
  4878                           
  4879                           ; 3 bytes @ 0xE
  4880  00006E                     	ds	1
  4881  00006F                     sqrt@i:
  4882                           	opt stack 0
  4883  00006F                     sin@x2:
  4884                           	opt stack 0
  4885                           
  4886                           ; 3 bytes @ 0xF
  4887  00006F                     	ds	1
  4888  000070                     sqrt@z:
  4889                           	opt stack 0
  4890                           
  4891                           ; 3 bytes @ 0x10
  4892  000070                     	ds	1
  4893  000071                     i2printf@idx:
  4894                           	opt stack 0
  4895                           
  4896                           ; 1 bytes @ 0x11
  4897  000071                     	ds	1
  4898  000072                     sin@sgn:
  4899                           	opt stack 0
  4900  000072                     i2printf@cp:
  4901                           	opt stack 0
  4902                           
  4903                           ; 2 bytes @ 0x12
  4904  000072                     	ds	1
  4905  000073                     ?_currentMeasuredToPeak:
  4906                           	opt stack 0
  4907  000073                     currentMeasuredToPeak@Measured:
  4908                           	opt stack 0
  4909  000073                     sqrt@q:
  4910                           	opt stack 0
  4911                           
  4912                           ; 3 bytes @ 0x13
  4913  000073                     	ds	1
  4914  000074                     i2printf@len:
  4915                           	opt stack 0
  4916                           
  4917                           ; 2 bytes @ 0x14
  4918  000074                     	ds	2
  4919  000076                     i2printf@ap:
  4920                           	opt stack 0
  4921  000076                     currentMeasuredToPeak@Angle:
  4922                           	opt stack 0
  4923  000076                     sqrt@x:
  4924                           	opt stack 0
  4925                           
  4926                           ; 3 bytes @ 0x16
  4927  000076                     	ds	2
  4928  000078                     i2printf@flag:
  4929                           	opt stack 0
  4930                           
  4931                           ; 2 bytes @ 0x18
  4932  000078                     	ds	1
  4933  000079                     ?_asin:
  4934                           	opt stack 0
  4935  000079                     currentMeasuredToPeak@Peak:
  4936                           	opt stack 0
  4937  000079                     asin@x:
  4938                           	opt stack 0
  4939                           
  4940                           ; 3 bytes @ 0x19
  4941  000079                     	ds	1
  4942  00007A                     i2printf@exp:
  4943                           	opt stack 0
  4944                           
  4945                           ; 2 bytes @ 0x1A
  4946  00007A                     	ds	2
  4947  00007C                     asin@sgn:
  4948                           	opt stack 0
  4949  00007C                     i2printf@tmpval:
  4950                           	opt stack 0
  4951                           
  4952                           ; 4 bytes @ 0x1C
  4953  00007C                     	ds	3
  4954  00007F                     _asin$3333:
  4955                           	opt stack 0
  4956                           
  4957                           ; 3 bytes @ 0x1F
  4958  00007F                     	ds	1
  4959  000080                     i2printf@fval:
  4960                           	opt stack 0
  4961                           
  4962                           ; 3 bytes @ 0x20
  4963  000080                     	ds	2
  4964  000082                     _asin$3336:
  4965                           	opt stack 0
  4966                           
  4967                           ; 3 bytes @ 0x22
  4968  000082                     	ds	1
  4969  000083                     i2printf@val:
  4970                           	opt stack 0
  4971                           
  4972                           ; 4 bytes @ 0x23
  4973  000083                     	ds	2
  4974  000085                     _asin$3335:
  4975                           	opt stack 0
  4976                           
  4977                           ; 3 bytes @ 0x25
  4978  000085                     	ds	2
  4979  000087                     i2printf@prec:
  4980                           	opt stack 0
  4981                           
  4982                           ; 2 bytes @ 0x27
  4983  000087                     	ds	1
  4984  000088                     asin@y:
  4985                           	opt stack 0
  4986                           
  4987                           ; 3 bytes @ 0x28
  4988  000088                     	ds	1
  4989  000089                     i2printf@c:
  4990                           	opt stack 0
  4991                           
  4992                           ; 1 bytes @ 0x29
  4993  000089                     	ds	2
  4994  00008B                     _asin$3334:
  4995                           	opt stack 0
  4996                           
  4997                           ; 3 bytes @ 0x2B
  4998  00008B                     	ds	3
  4999  00008E                     ?_acos:
  5000                           	opt stack 0
  5001  00008E                     acos@x:
  5002                           	opt stack 0
  5003                           
  5004                           ; 3 bytes @ 0x2E
  5005  00008E                     	ds	3
  5006  000091                     _acos$3332:
  5007                           	opt stack 0
  5008                           
  5009                           ; 3 bytes @ 0x31
  5010  000091                     	ds	3
  5011  000094                     ?_peakToRMS:
  5012                           	opt stack 0
  5013  000094                     peakToRMS@Peak:
  5014                           	opt stack 0
  5015                           
  5016                           ; 3 bytes @ 0x34
  5017  000094                     	ds	3
  5018  000097                     peakToRMS@Angle:
  5019                           	opt stack 0
  5020                           
  5021                           ; 3 bytes @ 0x37
  5022  000097                     	ds	3
  5023  00009A                     _peakToRMS$3326:
  5024                           	opt stack 0
  5025                           
  5026                           ; 3 bytes @ 0x3A
  5027  00009A                     	ds	3
  5028  00009D                     _peakToRMS$3327:
  5029                           	opt stack 0
  5030                           
  5031                           ; 3 bytes @ 0x3D
  5032  00009D                     	ds	3
  5033  0000A0                     _peakToRMS$3325:
  5034                           	opt stack 0
  5035                           
  5036                           ; 3 bytes @ 0x40
  5037  0000A0                     	ds	3
  5038  0000A3                     peakToRMS@RMS:
  5039                           	opt stack 0
  5040                           
  5041                           ; 3 bytes @ 0x43
  5042  0000A3                     	ds	3
  5043  0000A6                     _ADC_postProcessingCallback$3329:
  5044                           	opt stack 0
  5045                           
  5046                           ; 3 bytes @ 0x46
  5047  0000A6                     	ds	3
  5048  0000A9                     _ADC_postProcessingCallback$3330:
  5049                           	opt stack 0
  5050                           
  5051                           ; 3 bytes @ 0x49
  5052  0000A9                     	ds	3
  5053  0000AC                     _ADC_postProcessingCallback$3331:
  5054                           	opt stack 0
  5055                           
  5056                           ; 3 bytes @ 0x4C
  5057  0000AC                     	ds	3
  5058  0000AF                     ADC_postProcessingCallback@currentADCChannel:
  5059                           	opt stack 0
  5060                           
  5061                           ; 1 bytes @ 0x4F
  5062  0000AF                     	ds	1
  5063  0000B0                     _ADC_postProcessingCallback$3328:
  5064                           	opt stack 0
  5065                           
  5066                           ; 3 bytes @ 0x50
  5067  0000B0                     	ds	3
  5068  0000B3                     ??_INTERRUPT_InterruptManagerHigh:
  5069                           
  5070                           ; 1 bytes @ 0x53
  5071  0000B3                     	ds	18
  5072                           tblptru	equ	0xFF8
  5073                           tblptrh	equ	0xFF7
  5074                           tblptrl	equ	0xFF6
  5075                           tablat	equ	0xFF5
  5076                           postinc0	equ	0xFEE
  5077                           wreg	equ	0xFE8
  5078                           postdec1	equ	0xFE5
  5079                           fsr1h	equ	0xFE2
  5080                           fsr1l	equ	0xFE1
  5081                           
  5082                           	psect	cstackCOMRAM
  5083  000001                     __pcstackCOMRAM:
  5084                           	opt stack 0
  5085  000001                     ??i2_isdigit:
  5086  000001                     ?_ADCC_GetConversionResult:
  5087                           	opt stack 0
  5088  000001                     ?i2___awmod:
  5089                           	opt stack 0
  5090  000001                     ?i2___ftpack:
  5091                           	opt stack 0
  5092  000001                     ?i2__div_to_l_:
  5093                           	opt stack 0
  5094  000001                     ?i2__tdiv_to_l_:
  5095                           	opt stack 0
  5096  000001                     ?i2___lldiv:
  5097                           	opt stack 0
  5098  000001                     i2EUSART2_Write@txData:
  5099                           	opt stack 0
  5100  000001                     TMR5_WriteTimer@timerVal:
  5101                           	opt stack 0
  5102  000001                     i2___awmod@dividend:
  5103                           	opt stack 0
  5104  000001                     frexp@value:
  5105                           	opt stack 0
  5106  000001                     i2__div_to_l_@f1:
  5107                           	opt stack 0
  5108  000001                     i2___ftpack@arg:
  5109                           	opt stack 0
  5110  000001                     i2__tdiv_to_l_@f1:
  5111                           	opt stack 0
  5112  000001                     i2___lldiv@dividend:
  5113                           	opt stack 0
  5114                           
  5115                           ; 4 bytes @ 0x0
  5116  000001                     	ds	1
  5117  000002                     i2putch@txData:
  5118                           	opt stack 0
  5119  000002                     i2_isdigit$2501:
  5120                           	opt stack 0
  5121                           
  5122                           ; 1 bytes @ 0x1
  5123  000002                     	ds	1
  5124  000003                     ??_ADCC_GetConversionResult:
  5125  000003                     i2isdigit@c:
  5126                           	opt stack 0
  5127  000003                     i2___awmod@divisor:
  5128                           	opt stack 0
  5129                           
  5130                           ; 2 bytes @ 0x2
  5131  000003                     	ds	1
  5132  000004                     i2___ftpack@exp:
  5133                           	opt stack 0
  5134  000004                     frexp@eptr:
  5135                           	opt stack 0
  5136  000004                     i2__div_to_l_@f2:
  5137                           	opt stack 0
  5138  000004                     i2__tdiv_to_l_@f2:
  5139                           	opt stack 0
  5140                           
  5141                           ; 3 bytes @ 0x3
  5142  000004                     	ds	1
  5143  000005                     i2___awmod@counter:
  5144                           	opt stack 0
  5145  000005                     i2___ftpack@sign:
  5146                           	opt stack 0
  5147  000005                     i2___lldiv@divisor:
  5148                           	opt stack 0
  5149                           
  5150                           ; 4 bytes @ 0x4
  5151  000005                     	ds	1
  5152  000006                     ??_frexp:
  5153  000006                     ??i2___ftpack:
  5154  000006                     i2___awmod@sign:
  5155                           	opt stack 0
  5156                           
  5157                           ; 1 bytes @ 0x5
  5158  000006                     	ds	1
  5159  000007                     ??i2__tdiv_to_l_:
  5160  000007                     ?i2___awdiv:
  5161                           	opt stack 0
  5162  000007                     i2___awdiv@dividend:
  5163                           	opt stack 0
  5164  000007                     i2__div_to_l_@quot:
  5165                           	opt stack 0
  5166                           
  5167                           ; 4 bytes @ 0x6
  5168  000007                     	ds	2
  5169  000009                     ?___lwtoft:
  5170                           	opt stack 0
  5171  000009                     ?i2___lltoft:
  5172                           	opt stack 0
  5173  000009                     ___lwtoft@c:
  5174                           	opt stack 0
  5175  000009                     i2___awdiv@divisor:
  5176                           	opt stack 0
  5177  000009                     i2___lldiv@quotient:
  5178                           	opt stack 0
  5179  000009                     i2___lltoft@c:
  5180                           	opt stack 0
  5181                           
  5182                           ; 4 bytes @ 0x8
  5183  000009                     	ds	1
  5184  00000A                     i2__tdiv_to_l_@quot:
  5185                           	opt stack 0
  5186                           
  5187                           ; 4 bytes @ 0x9
  5188  00000A                     	ds	1
  5189  00000B                     i2___awdiv@counter:
  5190                           	opt stack 0
  5191  00000B                     i2__div_to_l_@cntr:
  5192                           	opt stack 0
  5193                           
  5194                           ; 1 bytes @ 0xA
  5195  00000B                     	ds	1
  5196  00000C                     i2___awdiv@sign:
  5197                           	opt stack 0
  5198  00000C                     i2__div_to_l_@exp1:
  5199                           	opt stack 0
  5200                           
  5201                           ; 1 bytes @ 0xB
  5202  00000C                     	ds	1
  5203  00000D                     ??i2___lltoft:
  5204  00000D                     i2___lldiv@counter:
  5205                           	opt stack 0
  5206  00000D                     i2___awdiv@quotient:
  5207                           	opt stack 0
  5208                           
  5209                           ; 2 bytes @ 0xC
  5210  00000D                     	ds	1
  5211  00000E                     ?i2___llmod:
  5212                           	opt stack 0
  5213  00000E                     i2__tdiv_to_l_@cntr:
  5214                           	opt stack 0
  5215  00000E                     i2___llmod@dividend:
  5216                           	opt stack 0
  5217                           
  5218                           ; 4 bytes @ 0xD
  5219  00000E                     	ds	1
  5220  00000F                     ?i2___wmul:
  5221                           	opt stack 0
  5222  00000F                     i2__tdiv_to_l_@exp1:
  5223                           	opt stack 0
  5224  00000F                     i2___wmul@multiplier:
  5225                           	opt stack 0
  5226                           
  5227                           ; 2 bytes @ 0xE
  5228  00000F                     	ds	2
  5229  000011                     i2___lltoft@exp:
  5230                           	opt stack 0
  5231  000011                     i2___wmul@multiplicand:
  5232                           	opt stack 0
  5233                           
  5234                           ; 2 bytes @ 0x10
  5235  000011                     	ds	1
  5236  000012                     i2___llmod@divisor:
  5237                           	opt stack 0
  5238                           
  5239                           ; 4 bytes @ 0x11
  5240  000012                     	ds	1
  5241  000013                     i2___wmul@product:
  5242                           	opt stack 0
  5243                           
  5244                           ; 2 bytes @ 0x12
  5245  000013                     	ds	2
  5246  000015                     ?i2___ftdiv:
  5247                           	opt stack 0
  5248  000015                     i2___ftdiv@f1:
  5249                           	opt stack 0
  5250                           
  5251                           ; 3 bytes @ 0x14
  5252  000015                     	ds	1
  5253  000016                     i2___llmod@counter:
  5254                           	opt stack 0
  5255                           
  5256                           ; 1 bytes @ 0x15
  5257  000016                     	ds	2
  5258  000018                     i2___ftdiv@f2:
  5259                           	opt stack 0
  5260                           
  5261                           ; 3 bytes @ 0x17
  5262  000018                     	ds	3
  5263  00001B                     ??i2___ftdiv:
  5264                           
  5265                           ; 1 bytes @ 0x1A
  5266  00001B                     	ds	3
  5267  00001E                     i2___ftdiv@cntr:
  5268                           	opt stack 0
  5269                           
  5270                           ; 1 bytes @ 0x1D
  5271  00001E                     	ds	1
  5272  00001F                     i2___ftdiv@exp:
  5273                           	opt stack 0
  5274                           
  5275                           ; 1 bytes @ 0x1E
  5276  00001F                     	ds	1
  5277  000020                     i2___ftdiv@f3:
  5278                           	opt stack 0
  5279                           
  5280                           ; 3 bytes @ 0x1F
  5281  000020                     	ds	3
  5282  000023                     i2___ftdiv@sign:
  5283                           	opt stack 0
  5284                           
  5285                           ; 1 bytes @ 0x22
  5286  000023                     	ds	1
  5287  000024                     ?i2___ftneg:
  5288                           	opt stack 0
  5289  000024                     i2___ftneg@f1:
  5290                           	opt stack 0
  5291                           
  5292                           ; 3 bytes @ 0x23
  5293  000024                     	ds	3
  5294  000027                     ?_fabs:
  5295                           	opt stack 0
  5296  000027                     ?i2___ftmul:
  5297                           	opt stack 0
  5298  000027                     fabs@d:
  5299                           	opt stack 0
  5300  000027                     i2___ftmul@f1:
  5301                           	opt stack 0
  5302                           
  5303                           ; 3 bytes @ 0x26
  5304  000027                     	ds	3
  5305  00002A                     i2___ftge@ff1:
  5306                           	opt stack 0
  5307  00002A                     i2___ftmul@f2:
  5308                           	opt stack 0
  5309                           
  5310                           ; 3 bytes @ 0x29
  5311  00002A                     	ds	3
  5312  00002D                     ??i2___ftmul:
  5313  00002D                     i2___ftge@ff2:
  5314                           	opt stack 0
  5315                           
  5316                           ; 3 bytes @ 0x2C
  5317  00002D                     	ds	3
  5318  000030                     ??i2___ftge:
  5319  000030                     i2___ftmul@exp:
  5320                           	opt stack 0
  5321                           
  5322                           ; 1 bytes @ 0x2F
  5323  000030                     	ds	1
  5324  000031                     i2___ftmul@f3_as_product:
  5325                           	opt stack 0
  5326                           
  5327                           ; 3 bytes @ 0x30
  5328  000031                     	ds	3
  5329  000034                     i2___ftmul@cntr:
  5330                           	opt stack 0
  5331                           
  5332                           ; 1 bytes @ 0x33
  5333  000034                     	ds	1
  5334  000035                     i2___ftmul@sign:
  5335                           	opt stack 0
  5336                           
  5337                           ; 1 bytes @ 0x34
  5338  000035                     	ds	1
  5339  000036                     ?i2_fround:
  5340                           	opt stack 0
  5341  000036                     ?i2_scale:
  5342                           	opt stack 0
  5343                           
  5344                           ; 3 bytes @ 0x35
  5345  000036                     	ds	3
  5346  000039                     i2_fround$3339:
  5347                           	opt stack 0
  5348  000039                     i2_scale$3340:
  5349                           	opt stack 0
  5350                           
  5351                           ; 3 bytes @ 0x38
  5352  000039                     	ds	3
  5353  00003C                     i2scale@scl:
  5354                           	opt stack 0
  5355  00003C                     i2_fround$3338:
  5356                           	opt stack 0
  5357                           
  5358                           ; 3 bytes @ 0x3B
  5359  00003C                     	ds	1
  5360  00003D                     ?i2___fttol:
  5361                           	opt stack 0
  5362  00003D                     i2___fttol@f1:
  5363                           	opt stack 0
  5364                           
  5365                           ; 3 bytes @ 0x3C
  5366  00003D                     	ds	2
  5367  00003F                     i2fround@prec:
  5368                           	opt stack 0
  5369                           
  5370                           ; 1 bytes @ 0x3E
  5371  00003F                     	ds	1
  5372  000040                     ?i2___ftadd:
  5373                           	opt stack 0
  5374  000040                     i2___ftadd@f1:
  5375                           	opt stack 0
  5376                           
  5377                           ; 3 bytes @ 0x3F
  5378  000040                     	ds	1
  5379  000041                     ??i2___fttol:
  5380                           
  5381                           ; 1 bytes @ 0x40
  5382  000041                     	ds	2
  5383  000043                     i2___ftadd@f2:
  5384                           	opt stack 0
  5385                           
  5386                           ; 3 bytes @ 0x42
  5387  000043                     	ds	3
  5388  000046                     ??i2___ftadd:
  5389  000046                     i2___fttol@sign1:
  5390                           	opt stack 0
  5391                           
  5392                           ; 1 bytes @ 0x45
  5393  000046                     	ds	1
  5394  000047                     i2___fttol@lval:
  5395                           	opt stack 0
  5396                           
  5397                           ; 4 bytes @ 0x46
  5398  000047                     	ds	2
  5399  000049                     i2___ftadd@sign:
  5400                           	opt stack 0
  5401                           
  5402                           ; 1 bytes @ 0x48
  5403  000049                     	ds	1
  5404  00004A                     i2___ftadd@exp2:
  5405                           	opt stack 0
  5406                           
  5407                           ; 1 bytes @ 0x49
  5408  00004A                     	ds	1
  5409  00004B                     i2___ftadd@exp1:
  5410                           	opt stack 0
  5411  00004B                     i2___fttol@exp1:
  5412                           	opt stack 0
  5413                           
  5414                           ; 1 bytes @ 0x4A
  5415  00004B                     	ds	1
  5416  00004C                     ?_eval_poly:
  5417                           	opt stack 0
  5418  00004C                     ?___altoft:
  5419                           	opt stack 0
  5420  00004C                     eval_poly@x:
  5421                           	opt stack 0
  5422  00004C                     ___altoft@c:
  5423                           	opt stack 0
  5424                           
  5425                           ; 4 bytes @ 0x4B
  5426  00004C                     	ds	3
  5427  00004F                     eval_poly@d:
  5428                           	opt stack 0
  5429                           
  5430                           ; 2 bytes @ 0x4E
  5431  00004F                     	ds	1
  5432  000050                     ??___altoft:
  5433                           
  5434                           ; 1 bytes @ 0x4F
  5435  000050                     	ds	1
  5436  000051                     eval_poly@n:
  5437                           	opt stack 0
  5438                           
  5439                           ; 2 bytes @ 0x50
  5440  000051                     	ds	2
  5441  000053                     ??_eval_poly:
  5442                           
  5443                           ; 1 bytes @ 0x52
  5444  000053                     	ds	1
  5445  000054                     ___altoft@exp:
  5446                           	opt stack 0
  5447                           
  5448                           ; 1 bytes @ 0x53
  5449  000054                     	ds	1
  5450  000055                     ___altoft@sign:
  5451                           	opt stack 0
  5452  000055                     eval_poly@res:
  5453                           	opt stack 0
  5454                           
  5455                           ; 3 bytes @ 0x54
  5456  000055                     	ds	1
  5457  000056                     ?_floor:
  5458                           	opt stack 0
  5459  000056                     floor@x:
  5460                           	opt stack 0
  5461                           
  5462                           ; 3 bytes @ 0x55
  5463  000056                     	ds	2
  5464  000058                     ?_atan:
  5465                           	opt stack 0
  5466  000058                     atan@f:
  5467                           	opt stack 0
  5468                           
  5469                           ; 3 bytes @ 0x57
  5470  000058                     	ds	1
  5471  000059                     floor@i:
  5472                           	opt stack 0
  5473                           
  5474                           ; 3 bytes @ 0x58
  5475  000059                     	ds	2
  5476  00005B                     
  5477                           ; 1 bytes @ 0x5A
  5478  00005B                     	ds	1
  5479  00005C                     floor@expon:
  5480                           	opt stack 0
  5481                           
  5482                           ; 2 bytes @ 0x5B
  5483  00005C                     	ds	2
  5484  00005E                     tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           postinc0	equ	0xFEE
  5489                           wreg	equ	0xFE8
  5490                           postdec1	equ	0xFE5
  5491                           fsr1h	equ	0xFE2
  5492                           fsr1l	equ	0xFE1
  5493                           
  5494                           ; 1 bytes @ 0x5D
  5495 ;;
  5496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5497 ;;
  5498 ;; *************** function _main *****************
  5499 ;; Defined at:
  5500 ;;		line 282 in file "main.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5517 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;Total ram usage:        2 bytes
  5519 ;; Hardware stack levels required when called:   22
  5520 ;; This function calls:
  5521 ;;		_ADCC_SetADIInterruptHandler
  5522 ;;		_SYSTEM_Initialize
  5523 ;;		_TMR6_SetInterruptHandler
  5524 ;;		_TMR7_SetInterruptHandler
  5525 ;;		_terminal_clearTerminal
  5526 ;;		_terminal_ringBufferPull
  5527 ;;		_terminal_setCursorHome
  5528 ;;		_terminal_textAttributesReset
  5529 ;; This function is called by:
  5530 ;;		Startup code after reset
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text0
  5535  015744                     __ptext0:
  5536                           	opt stack 0
  5537  015744                     _main:
  5538                           	opt stack 9
  5539                           
  5540                           ;main.c: 287: _delay((unsigned long)((250)*(64000000/4000.0)));
  5541                           
  5542                           ;incstack = 0
  5543  015744  0E15               	movlw	21
  5544  015746  0101               	movlb	1	; () banked
  5545  015748  6FB8               	movwf	(??_main+1)& (0+255),b
  5546  01574A  0E4B               	movlw	75
  5547  01574C  6FB7               	movwf	??_main& (0+255),b
  5548  01574E  0EBE               	movlw	190
  5549  015750                     u16357:
  5550  015750  2EE8               	decfsz	wreg,f,c
  5551  015752  D7FE               	bra	u16357
  5552  015754  2FB7               	decfsz	??_main& (0+255),f,b
  5553  015756  D7FC               	bra	u16357
  5554  015758  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  5555  01575A  D7FA               	bra	u16357
  5556  01575C  F000               	nop	
  5557                           
  5558                           ;main.c: 290: SYSTEM_Initialize();
  5559  01575E  ECA6  F0B0         	call	_SYSTEM_Initialize	;wreg free
  5560                           
  5561                           ;main.c: 293: LATGbits.LATG0 = 0;
  5562  015762  907F               	bcf	3967,0,c	;volatile
  5563                           
  5564                           ;main.c: 294: LATGbits.LATG1 = 0;
  5565  015764  927F               	bcf	3967,1,c	;volatile
  5566                           
  5567                           ;main.c: 295: load_enable = 0;
  5568  015766  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  5569                           
  5570                           ;main.c: 298: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  5571  015768  0E1E               	movlw	low _heartbeatTimerCallback
  5572  01576A  0101               	movlb	1	; () banked
  5573  01576C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  5574  01576E  0E61               	movlw	high _heartbeatTimerCallback
  5575  015770  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5576  015772  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  5577  015774  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5578  015776  ECE0  F0B1         	call	_TMR6_SetInterruptHandler	;wreg free
  5579                           
  5580                           ;main.c: 301: ADCC_SetADIInterruptHandler(ADC_postProcessingCallback);
  5581  01577A  0E08               	movlw	low _ADC_postProcessingCallback
  5582  01577C  0101               	movlb	1	; () banked
  5583  01577E  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  5584  015780  0E1D               	movlw	high _ADC_postProcessingCallback
  5585  015782  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  5586  015784  0E01               	movlw	low (_ADC_postProcessingCallback shr (0+16))
  5587  015786  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  5588  015788  ECFC  F0B1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  5589                           
  5590                           ;main.c: 304: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  5591  01578C  0E9C               	movlw	low _acquisitionTimerCallback
  5592  01578E  0101               	movlb	1	; () banked
  5593  015790  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  5594  015792  0E5A               	movlw	high _acquisitionTimerCallback
  5595  015794  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5596  015796  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  5597  015798  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5598  01579A  ECD9  F0B1         	call	_TMR7_SetInterruptHandler	;wreg free
  5599                           
  5600                           ;main.c: 307: (INTCONbits.GIEH = 1);
  5601  01579E  8EF2               	bsf	intcon,7,c	;volatile
  5602                           
  5603                           ;main.c: 310: (INTCONbits.GIEL = 1);
  5604  0157A0  8CF2               	bsf	intcon,6,c	;volatile
  5605                           
  5606                           ;main.c: 314: terminal_clearTerminal();
  5607  0157A2  ECCA  F0B1         	call	_terminal_clearTerminal	;wreg free
  5608                           
  5609                           ;main.c: 315: terminal_setCursorHome();
  5610  0157A6  ECBA  F0B1         	call	_terminal_setCursorHome	;wreg free
  5611                           
  5612                           ;main.c: 316: terminal_textAttributesReset();
  5613  0157AA  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  5614  0157AE                     
  5615                           ;main.c: 320: {
  5616                           ;main.c: 323: if (eusart2RxStringReady) {
  5617  0157AE  0100               	movlb	0	; () banked
  5618  0157B0  A1F7               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5619  0157B2  D7FD               	goto	l856
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;main.c: 325: terminal_ringBufferPull();
  5623  0157B4  ECA0  F0A2         	call	_terminal_ringBufferPull	;wreg free
  5624  0157B8  D7FA               	goto	l856
  5625  0157BA                     __end_of_main:
  5626                           	opt stack 0
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           intcon	equ	0xFF2
  5632                           postinc0	equ	0xFEE
  5633                           wreg	equ	0xFE8
  5634                           postdec1	equ	0xFE5
  5635                           fsr1h	equ	0xFE2
  5636                           fsr1l	equ	0xFE1
  5637                           
  5638 ;; *************** function _terminal_setCursorHome *****************
  5639 ;; Defined at:
  5640 ;;		line 85 in file "ring_buffer_interface.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;Total ram usage:        0 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:   18
  5661 ;; This function calls:
  5662 ;;		_printf
  5663 ;; This function is called by:
  5664 ;;		_main
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text1
  5669  016374                     __ptext1:
  5670                           	opt stack 0
  5671  016374                     _terminal_setCursorHome:
  5672                           	opt stack 12
  5673                           
  5674                           ;ring_buffer_interface.c: 86: printf("\033[H");
  5675                           
  5676                           ;incstack = 0
  5677  016374  0EB5               	movlw	low STR_3
  5678  016376  0101               	movlb	1	; () banked
  5679  016378  6F64               	movwf	printf@f& (0+255),b
  5680  01637A  0EFF               	movlw	high STR_3
  5681  01637C  6F65               	movwf	(printf@f+1)& (0+255),b
  5682  01637E  EC00  F080         	call	_printf	;wreg free
  5683  016382  0012               	return		;funcret
  5684  016384                     __end_of_terminal_setCursorHome:
  5685                           	opt stack 0
  5686                           tblptru	equ	0xFF8
  5687                           tblptrh	equ	0xFF7
  5688                           tblptrl	equ	0xFF6
  5689                           tablat	equ	0xFF5
  5690                           intcon	equ	0xFF2
  5691                           postinc0	equ	0xFEE
  5692                           wreg	equ	0xFE8
  5693                           postdec1	equ	0xFE5
  5694                           fsr1h	equ	0xFE2
  5695                           fsr1l	equ	0xFE1
  5696                           
  5697 ;; *************** function _terminal_ringBufferPull *****************
  5698 ;; Defined at:
  5699 ;;		line 12 in file "ring_buffer_interface.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  index           2  179[BANK1 ] int 
  5704 ;;  index           2  181[BANK1 ] int 
  5705 ;;  charNumber      2  177[BANK1 ] int 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5716 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5717 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5718 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5719 ;;Total ram usage:        9 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:   21
  5722 ;; This function calls:
  5723 ;;		_EUSART2_Read
  5724 ;;		_ringBufferLUT
  5725 ;;		_strlen
  5726 ;; This function is called by:
  5727 ;;		_main
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text2
  5732  014540                     __ptext2:
  5733                           	opt stack 0
  5734  014540                     _terminal_ringBufferPull:
  5735                           	opt stack 9
  5736                           
  5737                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  5738                           
  5739                           ;incstack = 0
  5740  014540  C1D6  F1B1         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  5741  014544  0101               	movlb	1	; () banked
  5742  014546  6BB2               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  5743                           
  5744                           ; BSR set to: 1
  5745                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  5746  014548  0E00               	movlw	0
  5747  01454A  6FB6               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  5748  01454C  0E00               	movlw	0
  5749  01454E  6FB5               	movwf	terminal_ringBufferPull@index& (0+255),b
  5750  014550                     l10483:
  5751                           
  5752                           ; BSR set to: 1
  5753  014550  BFB6               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  5754  014552  D006               	goto	l895
  5755  014554  51B6               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5756  014556  E10F               	bnz	l10493
  5757  014558  0E40               	movlw	64
  5758  01455A  5DB5               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  5759  01455C  B0D8               	btfsc	status,0,c
  5760  01455E  D00B               	goto	u12540
  5761  014560                     l895:
  5762                           
  5763                           ; BSR set to: 1
  5764                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  5765                           
  5766                           ; BSR set to: 1
  5767  014560  0EC0               	movlw	low _line
  5768  014562  25B5               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  5769  014564  6ED9               	movwf	fsr2l,c
  5770  014566  0E02               	movlw	high _line
  5771  014568  21B6               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5772  01456A  6EDA               	movwf	fsr2h,c
  5773  01456C  0E00               	movlw	0
  5774  01456E  6EDF               	movwf	indf2,c
  5775                           
  5776                           ; BSR set to: 1
  5777  014570  4BB5               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  5778  014572  2BB6               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  5779  014574  D7ED               	goto	l10483
  5780  014576                     u12540:
  5781  014576                     l10493:
  5782                           
  5783                           ; BSR set to: 1
  5784                           ;ring_buffer_interface.c: 21: }
  5785                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  5786  014576  0E00               	movlw	0
  5787  014578  6FB4               	movwf	(terminal_ringBufferPull@index_1976+1)& (0+255),b
  5788  01457A  0E00               	movlw	0
  5789  01457C  6FB3               	movwf	terminal_ringBufferPull@index_1976& (0+255),b
  5790  01457E  D00E               	goto	l897
  5791  014580                     
  5792                           ; BSR set to: 1
  5793                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  5794                           
  5795                           ; BSR set to: 1
  5796  014580  EC72  F0AF         	call	_EUSART2_Read	;wreg free
  5797  014584  0101               	movlb	1	; () banked
  5798  014586  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5799  014588  0EC0               	movlw	low _line
  5800  01458A  25B3               	addwf	terminal_ringBufferPull@index_1976& (0+255),w,b
  5801  01458C  6ED9               	movwf	fsr2l,c
  5802  01458E  0E02               	movlw	high _line
  5803  014590  21B4               	addwfc	(terminal_ringBufferPull@index_1976+1)& (0+255),w,b
  5804  014592  6EDA               	movwf	fsr2h,c
  5805  014594  C1AE  FFDF         	movff	??_terminal_ringBufferPull,indf2
  5806                           
  5807                           ; BSR set to: 1
  5808  014598  4BB3               	infsnz	terminal_ringBufferPull@index_1976& (0+255),f,b
  5809  01459A  2BB4               	incf	(terminal_ringBufferPull@index_1976+1)& (0+255),f,b
  5810  01459C                     l897:
  5811                           
  5812                           ; BSR set to: 1
  5813                           
  5814                           ; BSR set to: 1
  5815  01459C  51B1               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  5816  01459E  5DB3               	subwf	terminal_ringBufferPull@index_1976& (0+255),w,b
  5817  0145A0  51B4               	movf	(terminal_ringBufferPull@index_1976+1)& (0+255),w,b
  5818  0145A2  0A80               	xorlw	128
  5819  0145A4  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5820  0145A6  51B2               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  5821  0145A8  0A80               	xorlw	128
  5822  0145AA  59AE               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  5823  0145AC  A0D8               	btfss	status,0,c
  5824  0145AE  D7E8               	goto	l898
  5825                           
  5826                           ; BSR set to: 1
  5827                           ;ring_buffer_interface.c: 28: }
  5828                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  5829  0145B0  C0EA  F1D7         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  5830                           
  5831                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  5832                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  5833  0145B4  D017               	goto	l900
  5834  0145B6                     
  5835                           ; BSR set to: 1
  5836                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  5837                           
  5838                           ; BSR set to: 1
  5839  0145B6  0EFF               	movlw	255
  5840  0145B8  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5841  0145BA  0EFF               	movlw	255
  5842  0145BC  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5843  0145BE  0EC0               	movlw	low _line
  5844  0145C0  6F17               	movwf	strlen@s& (0+255),b
  5845  0145C2  0E02               	movlw	high _line
  5846  0145C4  6F18               	movwf	(strlen@s+1)& (0+255),b
  5847  0145C6  EC3A  F0AE         	call	_strlen	;wreg free
  5848  0145CA  0101               	movlb	1	; () banked
  5849  0145CC  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5850  0145CE  2717               	addwf	?_strlen& (0+255),f,b
  5851  0145D0  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5852  0145D2  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5853  0145D4  0EC0               	movlw	low _line
  5854  0145D6  2517               	addwf	?_strlen& (0+255),w,b
  5855  0145D8  6ED9               	movwf	fsr2l,c
  5856  0145DA  0E02               	movlw	high _line
  5857  0145DC  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5858  0145DE  6EDA               	movwf	fsr2h,c
  5859  0145E0  0E00               	movlw	0
  5860  0145E2  6EDF               	movwf	indf2,c
  5861  0145E4                     l900:
  5862                           
  5863                           ; BSR set to: 1
  5864  0145E4  0EFF               	movlw	255
  5865  0145E6  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5866  0145E8  0EFF               	movlw	255
  5867  0145EA  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5868  0145EC  0EC0               	movlw	low _line
  5869  0145EE  6F17               	movwf	strlen@s& (0+255),b
  5870  0145F0  0E02               	movlw	high _line
  5871  0145F2  6F18               	movwf	(strlen@s+1)& (0+255),b
  5872  0145F4  EC3A  F0AE         	call	_strlen	;wreg free
  5873  0145F8  0101               	movlb	1	; () banked
  5874  0145FA  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5875  0145FC  2717               	addwf	?_strlen& (0+255),f,b
  5876  0145FE  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5877  014600  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5878  014602  0EC0               	movlw	low _line
  5879  014604  2517               	addwf	?_strlen& (0+255),w,b
  5880  014606  6ED9               	movwf	fsr2l,c
  5881  014608  0E02               	movlw	high _line
  5882  01460A  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5883  01460C  6EDA               	movwf	fsr2h,c
  5884  01460E  0E0A               	movlw	10
  5885  014610  18DE               	xorwf	postinc2,w,c
  5886  014612  B4D8               	btfsc	status,2,c
  5887  014614  D7D0               	goto	l901
  5888                           
  5889                           ; BSR set to: 1
  5890  014616  0EFF               	movlw	255
  5891  014618  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5892  01461A  0EFF               	movlw	255
  5893  01461C  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5894  01461E  0EC0               	movlw	low _line
  5895  014620  6F17               	movwf	strlen@s& (0+255),b
  5896  014622  0E02               	movlw	high _line
  5897  014624  6F18               	movwf	(strlen@s+1)& (0+255),b
  5898  014626  EC3A  F0AE         	call	_strlen	;wreg free
  5899  01462A  0101               	movlb	1	; () banked
  5900  01462C  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5901  01462E  2717               	addwf	?_strlen& (0+255),f,b
  5902  014630  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5903  014632  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5904  014634  0EC0               	movlw	low _line
  5905  014636  2517               	addwf	?_strlen& (0+255),w,b
  5906  014638  6ED9               	movwf	fsr2l,c
  5907  01463A  0E02               	movlw	high _line
  5908  01463C  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5909  01463E  6EDA               	movwf	fsr2h,c
  5910  014640  0E0D               	movlw	13
  5911  014642  18DE               	xorwf	postinc2,w,c
  5912  014644  B4D8               	btfsc	status,2,c
  5913  014646  D7B7               	goto	l901
  5914                           
  5915                           ; BSR set to: 1
  5916                           ;ring_buffer_interface.c: 40: }
  5917                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  5918  014648  0100               	movlb	0	; () banked
  5919  01464A  91F7               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  5923  01464C  0EC0               	movlw	low _line
  5924  01464E  0101               	movlb	1	; () banked
  5925  014650  6FA0               	movwf	ringBufferLUT@line& (0+255),b
  5926  014652  0E02               	movlw	high _line
  5927  014654  6FA1               	movwf	(ringBufferLUT@line+1)& (0+255),b
  5928  014656  EC2B  F08A         	call	_ringBufferLUT	;wreg free
  5929  01465A  0012               	return		;funcret
  5930  01465C                     __end_of_terminal_ringBufferPull:
  5931                           	opt stack 0
  5932                           tblptru	equ	0xFF8
  5933                           tblptrh	equ	0xFF7
  5934                           tblptrl	equ	0xFF6
  5935                           tablat	equ	0xFF5
  5936                           intcon	equ	0xFF2
  5937                           postinc0	equ	0xFEE
  5938                           wreg	equ	0xFE8
  5939                           postdec1	equ	0xFE5
  5940                           fsr1h	equ	0xFE2
  5941                           fsr1l	equ	0xFE1
  5942                           indf2	equ	0xFDF
  5943                           postinc2	equ	0xFDE
  5944                           fsr2h	equ	0xFDA
  5945                           fsr2l	equ	0xFD9
  5946                           status	equ	0xFD8
  5947                           
  5948 ;; *************** function _ringBufferLUT *****************
  5949 ;; Defined at:
  5950 ;;		line 33 in file "ring_buffer_LUT.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  line            2  160[BANK1 ] PTR unsigned char 
  5953 ;;		 -> line(64), 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  angle_degree    3  164[BANK1 ] PTR unsigned char 
  5956 ;;  index           2  170[BANK1 ] int 
  5957 ;;  arg_buff        3  167[BANK1 ] unsigned char [3]
  5958 ;;  percentage      2  172[BANK1 ] int 
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5968 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5969 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5970 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5971 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;Total ram usage:       14 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:   20
  5975 ;; This function calls:
  5976 ;;		___awtoft
  5977 ;;		___ftadd
  5978 ;;		___ftdiv
  5979 ;;		___ftmul
  5980 ;;		___ftneg
  5981 ;;		___wmul
  5982 ;;		_atoi
  5983 ;;		_printf
  5984 ;;		_strcmp
  5985 ;;		_strstr
  5986 ;;		_terminal_printNewline
  5987 ;;		_terminal_textAttributes
  5988 ;;		_terminal_textAttributesReset
  5989 ;; This function is called by:
  5990 ;;		_terminal_ringBufferPull
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text3
  5995  011456                     __ptext3:
  5996                           	opt stack 0
  5997  011456                     _ringBufferLUT:
  5998                           	opt stack 9
  5999                           
  6000                           ;ring_buffer_LUT.c: 39: if((0 == strcmp(line, "Reset"))) {
  6001                           
  6002                           ;incstack = 0
  6003  011456  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6004  01145A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6005  01145E  0EA1               	movlw	low STR_41
  6006  011460  0101               	movlb	1	; () banked
  6007  011462  6F19               	movwf	strcmp@s2& (0+255),b
  6008  011464  0EFF               	movlw	high STR_41
  6009  011466  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6010  011468  EC91  F0AE         	call	_strcmp	;wreg free
  6011  01146C  0101               	movlb	1	; () banked
  6012  01146E  5117               	movf	?_strcmp& (0+255),w,b
  6013  011470  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6014  011472  A4D8               	btfss	status,2,c
  6015  011474  D00F               	goto	l1012
  6016                           
  6017                           ; BSR set to: 1
  6018                           ;ring_buffer_LUT.c: 42: printf("\033[2J");
  6019  011476  0EAC               	movlw	low STR_2
  6020  011478  6F64               	movwf	printf@f& (0+255),b
  6021  01147A  0EFF               	movlw	high STR_2
  6022  01147C  6F65               	movwf	(printf@f+1)& (0+255),b
  6023  01147E  EC00  F080         	call	_printf	;wreg free
  6024                           
  6025                           ;ring_buffer_LUT.c: 45: printf("\033[H");
  6026  011482  0EB5               	movlw	low STR_3
  6027  011484  0101               	movlb	1	; () banked
  6028  011486  6F64               	movwf	printf@f& (0+255),b
  6029  011488  0EFF               	movlw	high STR_3
  6030  01148A  6F65               	movwf	(printf@f+1)& (0+255),b
  6031  01148C  EC00  F080         	call	_printf	;wreg free
  6032  011490  00FF               	reset		;# 
  6033                           
  6034                           ;ring_buffer_LUT.c: 50: }
  6035  011492  0012               	return	
  6036  011494                     l1012:
  6037                           
  6038                           ;ring_buffer_LUT.c: 53: else if((0 == strcmp(line, "Clear"))) {
  6039  011494  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6040  011498  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6041  01149C  0E9B               	movlw	low STR_44
  6042  01149E  0101               	movlb	1	; () banked
  6043  0114A0  6F19               	movwf	strcmp@s2& (0+255),b
  6044  0114A2  0EFF               	movlw	high STR_44
  6045  0114A4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6046  0114A6  EC91  F0AE         	call	_strcmp	;wreg free
  6047  0114AA  0101               	movlb	1	; () banked
  6048  0114AC  5117               	movf	?_strcmp& (0+255),w,b
  6049  0114AE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6050  0114B0  A4D8               	btfss	status,2,c
  6051  0114B2  D00E               	goto	l1014
  6052                           
  6053                           ; BSR set to: 1
  6054                           ;ring_buffer_LUT.c: 56: printf("\033[2J");
  6055  0114B4  0EAC               	movlw	low STR_2
  6056  0114B6  6F64               	movwf	printf@f& (0+255),b
  6057  0114B8  0EFF               	movlw	high STR_2
  6058  0114BA  6F65               	movwf	(printf@f+1)& (0+255),b
  6059  0114BC  EC00  F080         	call	_printf	;wreg free
  6060                           
  6061                           ;ring_buffer_LUT.c: 59: printf("\033[H");
  6062  0114C0  0EB5               	movlw	low STR_3
  6063  0114C2  0101               	movlb	1	; () banked
  6064  0114C4  6F64               	movwf	printf@f& (0+255),b
  6065  0114C6  0EFF               	movlw	high STR_3
  6066  0114C8  6F65               	movwf	(printf@f+1)& (0+255),b
  6067  0114CA  EC00  F080         	call	_printf	;wreg free
  6068                           
  6069                           ;ring_buffer_LUT.c: 61: }
  6070  0114CE  0012               	return	
  6071  0114D0                     l1014:
  6072                           
  6073                           ;ring_buffer_LUT.c: 64: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  6074  0114D0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6075  0114D4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6076  0114D8  0E95               	movlw	low STR_47
  6077  0114DA  0101               	movlb	1	; () banked
  6078  0114DC  6F19               	movwf	strcmp@s2& (0+255),b
  6079  0114DE  0EFF               	movlw	high STR_47
  6080  0114E0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6081  0114E2  EC91  F0AE         	call	_strcmp	;wreg free
  6082  0114E6  0101               	movlb	1	; () banked
  6083  0114E8  5117               	movf	?_strcmp& (0+255),w,b
  6084  0114EA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6085  0114EC  B4D8               	btfsc	status,2,c
  6086  0114EE  D00F               	goto	u11680
  6087                           
  6088                           ; BSR set to: 1
  6089  0114F0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6090  0114F4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6091  0114F8  0EB1               	movlw	low STR_48
  6092  0114FA  6F19               	movwf	strcmp@s2& (0+255),b
  6093  0114FC  0EFF               	movlw	high STR_48
  6094  0114FE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6095  011500  EC91  F0AE         	call	_strcmp	;wreg free
  6096  011504  0101               	movlb	1	; () banked
  6097  011506  5117               	movf	?_strcmp& (0+255),w,b
  6098  011508  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6099  01150A  A4D8               	btfss	status,2,c
  6100  01150C  D01D               	goto	l1016
  6101  01150E                     u11680:
  6102                           
  6103                           ; BSR set to: 1
  6104                           ;ring_buffer_LUT.c: 67: terminal_printNewline();
  6105                           
  6106                           ; BSR set to: 1
  6107  01150E  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6108                           
  6109                           ;ring_buffer_LUT.c: 69: terminal_textAttributes(GREEN, BLACK, NORMAL);
  6110  011512  0E00               	movlw	0
  6111  011514  0101               	movlb	1	; () banked
  6112  011516  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6113  011518  0E00               	movlw	0
  6114  01151A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6115  01151C  0E02               	movlw	2
  6116  01151E  EC6D  F095         	call	_terminal_textAttributes
  6117                           
  6118                           ;ring_buffer_LUT.c: 71: printf("AC Power Meter\n\r");
  6119  011522  0EFA               	movlw	low STR_49
  6120  011524  0101               	movlb	1	; () banked
  6121  011526  6F64               	movwf	printf@f& (0+255),b
  6122  011528  0EFE               	movlw	high STR_49
  6123  01152A  6F65               	movwf	(printf@f+1)& (0+255),b
  6124  01152C  EC00  F080         	call	_printf	;wreg free
  6125                           
  6126                           ;ring_buffer_LUT.c: 72: printf("Marquette University ELEN 3035 Final Project\n\r");
  6127  011530  0ED8               	movlw	low STR_50
  6128  011532  0101               	movlb	1	; () banked
  6129  011534  6F64               	movwf	printf@f& (0+255),b
  6130  011536  0EFB               	movlw	high STR_50
  6131  011538  6F65               	movwf	(printf@f+1)& (0+255),b
  6132  01153A  EC00  F080         	call	_printf	;wreg free
  6133                           
  6134                           ;ring_buffer_LUT.c: 74: terminal_textAttributesReset();
  6135  01153E  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6136                           
  6137                           ;ring_buffer_LUT.c: 76: terminal_printNewline();
  6138  011542  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6139                           
  6140                           ;ring_buffer_LUT.c: 78: }
  6141  011546  0012               	return	
  6142  011548                     l1016:
  6143                           
  6144                           ;ring_buffer_LUT.c: 81: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  6145  011548  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6146  01154C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6147  011550  0E0B               	movlw	low STR_51
  6148  011552  0101               	movlb	1	; () banked
  6149  011554  6F19               	movwf	strcmp@s2& (0+255),b
  6150  011556  0EFF               	movlw	high STR_51
  6151  011558  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6152  01155A  EC91  F0AE         	call	_strcmp	;wreg free
  6153  01155E  0101               	movlb	1	; () banked
  6154  011560  5117               	movf	?_strcmp& (0+255),w,b
  6155  011562  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6156  011564  A4D8               	btfss	status,2,c
  6157  011566  D01C               	goto	l1020
  6158                           
  6159                           ; BSR set to: 1
  6160                           ;ring_buffer_LUT.c: 84: terminal_printNewline();
  6161  011568  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6162                           
  6163                           ;ring_buffer_LUT.c: 86: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6164  01156C  0E00               	movlw	0
  6165  01156E  0101               	movlb	1	; () banked
  6166  011570  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6167  011572  0E00               	movlw	0
  6168  011574  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6169  011576  0E06               	movlw	6
  6170  011578  EC6D  F095         	call	_terminal_textAttributes
  6171                           
  6172                           ;ring_buffer_LUT.c: 87: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Result
      +                          );
  6173  01157C  0E22               	movlw	low STR_52
  6174  01157E  0101               	movlb	1	; () banked
  6175  011580  6F64               	movwf	printf@f& (0+255),b
  6176  011582  0EFD               	movlw	high STR_52
  6177  011584  6F65               	movwf	(printf@f+1)& (0+255),b
  6178  011586  C0D4  F166         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  6179  01158A  C0D5  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  6180  01158E  C0D6  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  6181  011592  EC00  F080         	call	_printf	;wreg free
  6182                           
  6183                           ;ring_buffer_LUT.c: 89: terminal_textAttributesReset();
  6184  011596  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6185                           
  6186                           ;ring_buffer_LUT.c: 91: terminal_printNewline();
  6187  01159A  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6188                           
  6189                           ;ring_buffer_LUT.c: 94: }
  6190  01159E  0012               	return	
  6191  0115A0                     l1020:
  6192                           
  6193                           ;ring_buffer_LUT.c: 97: else if((0 == strcmp(line, "Measure POS12?"))) {
  6194  0115A0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6195  0115A4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6196  0115A8  0E2B               	movlw	low STR_53
  6197  0115AA  0101               	movlb	1	; () banked
  6198  0115AC  6F19               	movwf	strcmp@s2& (0+255),b
  6199  0115AE  0EFF               	movlw	high STR_53
  6200  0115B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6201  0115B2  EC91  F0AE         	call	_strcmp	;wreg free
  6202  0115B6  0101               	movlb	1	; () banked
  6203  0115B8  5117               	movf	?_strcmp& (0+255),w,b
  6204  0115BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6205  0115BC  A4D8               	btfss	status,2,c
  6206  0115BE  D01C               	goto	l1022
  6207                           
  6208                           ; BSR set to: 1
  6209                           ;ring_buffer_LUT.c: 100: terminal_printNewline();
  6210  0115C0  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6211                           
  6212                           ;ring_buffer_LUT.c: 102: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6213  0115C4  0E00               	movlw	0
  6214  0115C6  0101               	movlb	1	; () banked
  6215  0115C8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6216  0115CA  0E00               	movlw	0
  6217  0115CC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6218  0115CE  0E06               	movlw	6
  6219  0115D0  EC6D  F095         	call	_terminal_textAttributes
  6220                           
  6221                           ;ring_buffer_LUT.c: 103: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  6222  0115D4  0EAB               	movlw	low STR_54
  6223  0115D6  0101               	movlb	1	; () banked
  6224  0115D8  6F64               	movwf	printf@f& (0+255),b
  6225  0115DA  0EFD               	movlw	high STR_54
  6226  0115DC  6F65               	movwf	(printf@f+1)& (0+255),b
  6227  0115DE  C1C3  F166         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  6228  0115E2  C1C4  F167         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  6229  0115E6  C1C5  F168         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  6230  0115EA  EC00  F080         	call	_printf	;wreg free
  6231                           
  6232                           ;ring_buffer_LUT.c: 105: terminal_textAttributesReset();
  6233  0115EE  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6234                           
  6235                           ;ring_buffer_LUT.c: 107: terminal_printNewline();
  6236  0115F2  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6237                           
  6238                           ;ring_buffer_LUT.c: 110: }
  6239  0115F6  0012               	return	
  6240  0115F8                     l1022:
  6241                           
  6242                           ;ring_buffer_LUT.c: 113: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  6243  0115F8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6244  0115FC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6245  011600  0ED7               	movlw	low STR_55
  6246  011602  0101               	movlb	1	; () banked
  6247  011604  6F19               	movwf	strcmp@s2& (0+255),b
  6248  011606  0EFE               	movlw	high STR_55
  6249  011608  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6250  01160A  EC91  F0AE         	call	_strcmp	;wreg free
  6251  01160E  0101               	movlb	1	; () banked
  6252  011610  5117               	movf	?_strcmp& (0+255),w,b
  6253  011612  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6254  011614  A4D8               	btfss	status,2,c
  6255  011616  D01C               	goto	l1024
  6256                           
  6257                           ; BSR set to: 1
  6258                           ;ring_buffer_LUT.c: 116: terminal_printNewline();
  6259  011618  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6260                           
  6261                           ;ring_buffer_LUT.c: 118: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6262  01161C  0E00               	movlw	0
  6263  01161E  0101               	movlb	1	; () banked
  6264  011620  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6265  011622  0E00               	movlw	0
  6266  011624  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6267  011626  0E06               	movlw	6
  6268  011628  EC6D  F095         	call	_terminal_textAttributes
  6269                           
  6270                           ;ring_buffer_LUT.c: 119: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  6271  01162C  0E45               	movlw	low STR_56
  6272  01162E  0101               	movlb	1	; () banked
  6273  011630  6F64               	movwf	printf@f& (0+255),b
  6274  011632  0EFD               	movlw	high STR_56
  6275  011634  6F65               	movwf	(printf@f+1)& (0+255),b
  6276  011636  C1C0  F166         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  6277  01163A  C1C1  F167         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  6278  01163E  C1C2  F168         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  6279  011642  EC00  F080         	call	_printf	;wreg free
  6280                           
  6281                           ;ring_buffer_LUT.c: 121: terminal_textAttributesReset();
  6282  011646  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6283                           
  6284                           ;ring_buffer_LUT.c: 123: terminal_printNewline();
  6285  01164A  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6286                           
  6287                           ;ring_buffer_LUT.c: 126: }
  6288  01164E  0012               	return	
  6289  011650                     l1024:
  6290                           
  6291                           ;ring_buffer_LUT.c: 129: else if((0 == strcmp(line, "Measure FVR?"))) {
  6292  011650  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6293  011654  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6294  011658  0E66               	movlw	low STR_57
  6295  01165A  0101               	movlb	1	; () banked
  6296  01165C  6F19               	movwf	strcmp@s2& (0+255),b
  6297  01165E  0EFF               	movlw	high STR_57
  6298  011660  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6299  011662  EC91  F0AE         	call	_strcmp	;wreg free
  6300  011666  0101               	movlb	1	; () banked
  6301  011668  5117               	movf	?_strcmp& (0+255),w,b
  6302  01166A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6303  01166C  A4D8               	btfss	status,2,c
  6304  01166E  D01C               	goto	l1026
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;ring_buffer_LUT.c: 132: terminal_printNewline();
  6308  011670  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6309                           
  6310                           ;ring_buffer_LUT.c: 134: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6311  011674  0E00               	movlw	0
  6312  011676  0101               	movlb	1	; () banked
  6313  011678  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6314  01167A  0E00               	movlw	0
  6315  01167C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6316  01167E  0E06               	movlw	6
  6317  011680  EC6D  F095         	call	_terminal_textAttributes
  6318                           
  6319                           ;ring_buffer_LUT.c: 135: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  6320  011684  0EA0               	movlw	low STR_58
  6321  011686  0101               	movlb	1	; () banked
  6322  011688  6F64               	movwf	printf@f& (0+255),b
  6323  01168A  0EFB               	movlw	high STR_58
  6324  01168C  6F65               	movwf	(printf@f+1)& (0+255),b
  6325  01168E  C0EE  F166         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  6326  011692  C0EF  F167         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  6327  011696  C0F0  F168         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  6328  01169A  EC00  F080         	call	_printf	;wreg free
  6329                           
  6330                           ;ring_buffer_LUT.c: 137: terminal_textAttributesReset();
  6331  01169E  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6332                           
  6333                           ;ring_buffer_LUT.c: 139: terminal_printNewline();
  6334  0116A2  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6335                           
  6336                           ;ring_buffer_LUT.c: 142: }
  6337  0116A6  0012               	return	
  6338  0116A8                     l1026:
  6339                           
  6340                           ;ring_buffer_LUT.c: 145: else if((0 == strcmp(line, "Measure AVSS?"))) {
  6341  0116A8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6342  0116AC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6343  0116B0  0E58               	movlw	low STR_59
  6344  0116B2  0101               	movlb	1	; () banked
  6345  0116B4  6F19               	movwf	strcmp@s2& (0+255),b
  6346  0116B6  0EFF               	movlw	high STR_59
  6347  0116B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6348  0116BA  EC91  F0AE         	call	_strcmp	;wreg free
  6349  0116BE  0101               	movlb	1	; () banked
  6350  0116C0  5117               	movf	?_strcmp& (0+255),w,b
  6351  0116C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6352  0116C4  A4D8               	btfss	status,2,c
  6353  0116C6  D01C               	goto	l1028
  6354                           
  6355                           ; BSR set to: 1
  6356                           ;ring_buffer_LUT.c: 148: terminal_printNewline();
  6357  0116C8  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6358                           
  6359                           ;ring_buffer_LUT.c: 150: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6360  0116CC  0E00               	movlw	0
  6361  0116CE  0101               	movlb	1	; () banked
  6362  0116D0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6363  0116D2  0E00               	movlw	0
  6364  0116D4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6365  0116D6  0E06               	movlw	6
  6366  0116D8  EC6D  F095         	call	_terminal_textAttributes
  6367                           
  6368                           ;ring_buffer_LUT.c: 151: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  6369  0116DC  0ED8               	movlw	low STR_60
  6370  0116DE  0101               	movlb	1	; () banked
  6371  0116E0  6F64               	movwf	printf@f& (0+255),b
  6372  0116E2  0EFC               	movlw	high STR_60
  6373  0116E4  6F65               	movwf	(printf@f+1)& (0+255),b
  6374  0116E6  C0DA  F166         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  6375  0116EA  C0DB  F167         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  6376  0116EE  C0DC  F168         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  6377  0116F2  EC00  F080         	call	_printf	;wreg free
  6378                           
  6379                           ;ring_buffer_LUT.c: 153: terminal_textAttributesReset();
  6380  0116F6  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6381                           
  6382                           ;ring_buffer_LUT.c: 155: terminal_printNewline();
  6383  0116FA  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6384                           
  6385                           ;ring_buffer_LUT.c: 158: }
  6386  0116FE  0012               	return	
  6387  011700                     l1028:
  6388                           
  6389                           ;ring_buffer_LUT.c: 161: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  6390  011700  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6391  011704  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6392  011708  0E4A               	movlw	low STR_61
  6393  01170A  0101               	movlb	1	; () banked
  6394  01170C  6F19               	movwf	strcmp@s2& (0+255),b
  6395  01170E  0EFE               	movlw	high STR_61
  6396  011710  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6397  011712  EC91  F0AE         	call	_strcmp	;wreg free
  6398  011716  0101               	movlb	1	; () banked
  6399  011718  5117               	movf	?_strcmp& (0+255),w,b
  6400  01171A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6401  01171C  A4D8               	btfss	status,2,c
  6402  01171E  D01C               	goto	l1030
  6403                           
  6404                           ; BSR set to: 1
  6405                           ;ring_buffer_LUT.c: 164: terminal_printNewline();
  6406  011720  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6407                           
  6408                           ;ring_buffer_LUT.c: 166: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6409  011724  0E00               	movlw	0
  6410  011726  0101               	movlb	1	; () banked
  6411  011728  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6412  01172A  0E00               	movlw	0
  6413  01172C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6414  01172E  0E06               	movlw	6
  6415  011730  EC6D  F095         	call	_terminal_textAttributes
  6416                           
  6417                           ;ring_buffer_LUT.c: 167: printf("Measured Current is %.3f Amps\n\r", Imeas);
  6418  011734  0EEE               	movlw	low STR_62
  6419  011736  0101               	movlb	1	; () banked
  6420  011738  6F64               	movwf	printf@f& (0+255),b
  6421  01173A  0EFD               	movlw	high STR_62
  6422  01173C  6F65               	movwf	(printf@f+1)& (0+255),b
  6423  01173E  C0CB  F166         	movff	_Imeas,?_printf+2	;volatile
  6424  011742  C0CC  F167         	movff	_Imeas+1,?_printf+3	;volatile
  6425  011746  C0CD  F168         	movff	_Imeas+2,?_printf+4	;volatile
  6426  01174A  EC00  F080         	call	_printf	;wreg free
  6427                           
  6428                           ;ring_buffer_LUT.c: 169: terminal_textAttributesReset();
  6429  01174E  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6430                           
  6431                           ;ring_buffer_LUT.c: 171: terminal_printNewline();
  6432  011752  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6433                           
  6434                           ;ring_buffer_LUT.c: 173: }
  6435  011756  0012               	return	
  6436  011758                     l1030:
  6437                           
  6438                           ;ring_buffer_LUT.c: 176: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  6439  011758  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6440  01175C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6441  011760  0EC2               	movlw	low STR_63
  6442  011762  0101               	movlb	1	; () banked
  6443  011764  6F19               	movwf	strcmp@s2& (0+255),b
  6444  011766  0EFE               	movlw	high STR_63
  6445  011768  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6446  01176A  EC91  F0AE         	call	_strcmp	;wreg free
  6447  01176E  0101               	movlb	1	; () banked
  6448  011770  5117               	movf	?_strcmp& (0+255),w,b
  6449  011772  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6450  011774  A4D8               	btfss	status,2,c
  6451  011776  D01C               	goto	l1032
  6452                           
  6453                           ; BSR set to: 1
  6454                           ;ring_buffer_LUT.c: 179: terminal_printNewline();
  6455  011778  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6456                           
  6457                           ;ring_buffer_LUT.c: 181: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6458  01177C  0E00               	movlw	0
  6459  01177E  0101               	movlb	1	; () banked
  6460  011780  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6461  011782  0E00               	movlw	0
  6462  011784  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6463  011786  0E06               	movlw	6
  6464  011788  EC6D  F095         	call	_terminal_textAttributes
  6465                           
  6466                           ;ring_buffer_LUT.c: 182: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  6467  01178C  0E67               	movlw	low STR_64
  6468  01178E  0101               	movlb	1	; () banked
  6469  011790  6F64               	movwf	printf@f& (0+255),b
  6470  011792  0EFD               	movlw	high STR_64
  6471  011794  6F65               	movwf	(printf@f+1)& (0+255),b
  6472  011796  C0C8  F166         	movff	_Irms,?_printf+2	;volatile
  6473  01179A  C0C9  F167         	movff	_Irms+1,?_printf+3	;volatile
  6474  01179E  C0CA  F168         	movff	_Irms+2,?_printf+4	;volatile
  6475  0117A2  EC00  F080         	call	_printf	;wreg free
  6476                           
  6477                           ;ring_buffer_LUT.c: 184: terminal_textAttributesReset();
  6478  0117A6  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6479                           
  6480                           ;ring_buffer_LUT.c: 186: terminal_printNewline();
  6481  0117AA  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6482                           
  6483                           ;ring_buffer_LUT.c: 188: }
  6484  0117AE  0012               	return	
  6485  0117B0                     l1032:
  6486                           
  6487                           ;ring_buffer_LUT.c: 191: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  6488  0117B0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6489  0117B4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6490  0117B8  0EAD               	movlw	low STR_65
  6491  0117BA  0101               	movlb	1	; () banked
  6492  0117BC  6F19               	movwf	strcmp@s2& (0+255),b
  6493  0117BE  0EFE               	movlw	high STR_65
  6494  0117C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6495  0117C2  EC91  F0AE         	call	_strcmp	;wreg free
  6496  0117C6  0101               	movlb	1	; () banked
  6497  0117C8  5117               	movf	?_strcmp& (0+255),w,b
  6498  0117CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6499  0117CC  A4D8               	btfss	status,2,c
  6500  0117CE  D01C               	goto	l1034
  6501                           
  6502                           ; BSR set to: 1
  6503                           ;ring_buffer_LUT.c: 194: terminal_printNewline();
  6504  0117D0  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6505                           
  6506                           ;ring_buffer_LUT.c: 196: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6507  0117D4  0E00               	movlw	0
  6508  0117D6  0101               	movlb	1	; () banked
  6509  0117D8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6510  0117DA  0E00               	movlw	0
  6511  0117DC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6512  0117DE  0E06               	movlw	6
  6513  0117E0  EC6D  F095         	call	_terminal_textAttributes
  6514                           
  6515                           ;ring_buffer_LUT.c: 197: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  6516  0117E4  0E89               	movlw	low STR_66
  6517  0117E6  0101               	movlb	1	; () banked
  6518  0117E8  6F64               	movwf	printf@f& (0+255),b
  6519  0117EA  0EFD               	movlw	high STR_66
  6520  0117EC  6F65               	movwf	(printf@f+1)& (0+255),b
  6521  0117EE  C0C5  F166         	movff	_Vrms,?_printf+2	;volatile
  6522  0117F2  C0C6  F167         	movff	_Vrms+1,?_printf+3	;volatile
  6523  0117F6  C0C7  F168         	movff	_Vrms+2,?_printf+4	;volatile
  6524  0117FA  EC00  F080         	call	_printf	;wreg free
  6525                           
  6526                           ;ring_buffer_LUT.c: 199: terminal_textAttributesReset();
  6527  0117FE  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6528                           
  6529                           ;ring_buffer_LUT.c: 201: terminal_printNewline();
  6530  011802  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6531                           
  6532                           ;ring_buffer_LUT.c: 203: }
  6533  011806  0012               	return	
  6534  011808                     l1034:
  6535                           
  6536                           ;ring_buffer_LUT.c: 206: else if ((0 == strcmp(line, "Measure Power?"))) {
  6537  011808  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6538  01180C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6539  011810  0E3A               	movlw	low STR_67
  6540  011812  0101               	movlb	1	; () banked
  6541  011814  6F19               	movwf	strcmp@s2& (0+255),b
  6542  011816  0EFF               	movlw	high STR_67
  6543  011818  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6544  01181A  EC91  F0AE         	call	_strcmp	;wreg free
  6545  01181E  0101               	movlb	1	; () banked
  6546  011820  5117               	movf	?_strcmp& (0+255),w,b
  6547  011822  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6548  011824  A4D8               	btfss	status,2,c
  6549  011826  D01C               	goto	l1036
  6550                           
  6551                           ; BSR set to: 1
  6552                           ;ring_buffer_LUT.c: 209: terminal_printNewline();
  6553  011828  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6554                           
  6555                           ;ring_buffer_LUT.c: 211: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6556  01182C  0E00               	movlw	0
  6557  01182E  0101               	movlb	1	; () banked
  6558  011830  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6559  011832  0E00               	movlw	0
  6560  011834  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6561  011836  0E06               	movlw	6
  6562  011838  EC6D  F095         	call	_terminal_textAttributes
  6563                           
  6564                           ;ring_buffer_LUT.c: 212: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  6565  01183C  0E68               	movlw	low STR_68
  6566  01183E  0101               	movlb	1	; () banked
  6567  011840  6F64               	movwf	printf@f& (0+255),b
  6568  011842  0EFB               	movlw	high STR_68
  6569  011844  6F65               	movwf	(printf@f+1)& (0+255),b
  6570  011846  C1BD  F166         	movff	_Avg_Power,?_printf+2	;volatile
  6571  01184A  C1BE  F167         	movff	_Avg_Power+1,?_printf+3	;volatile
  6572  01184E  C1BF  F168         	movff	_Avg_Power+2,?_printf+4	;volatile
  6573  011852  EC00  F080         	call	_printf	;wreg free
  6574                           
  6575                           ;ring_buffer_LUT.c: 214: terminal_textAttributesReset();
  6576  011856  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6577                           
  6578                           ;ring_buffer_LUT.c: 216: terminal_printNewline();
  6579  01185A  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6580                           
  6581                           ;ring_buffer_LUT.c: 218: }
  6582  01185E  0012               	return	
  6583  011860                     l1036:
  6584                           
  6585                           ;ring_buffer_LUT.c: 221: else if ((0 == strcmp(line, "Enable Dimming"))) {
  6586  011860  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6587  011864  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6588  011868  0E49               	movlw	low STR_69
  6589  01186A  0101               	movlb	1	; () banked
  6590  01186C  6F19               	movwf	strcmp@s2& (0+255),b
  6591  01186E  0EFF               	movlw	high STR_69
  6592  011870  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6593  011872  EC91  F0AE         	call	_strcmp	;wreg free
  6594  011876  0101               	movlb	1	; () banked
  6595  011878  5117               	movf	?_strcmp& (0+255),w,b
  6596  01187A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6597  01187C  A4D8               	btfss	status,2,c
  6598  01187E  D017               	goto	l1038
  6599                           
  6600                           ; BSR set to: 1
  6601                           ;ring_buffer_LUT.c: 224: LATGbits.LATG0 = 0;
  6602  011880  907F               	bcf	3967,0,c	;volatile
  6603                           
  6604                           ; BSR set to: 1
  6605                           ;ring_buffer_LUT.c: 227: terminal_printNewline();
  6606  011882  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6607                           
  6608                           ;ring_buffer_LUT.c: 229: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6609  011886  0E00               	movlw	0
  6610  011888  0101               	movlb	1	; () banked
  6611  01188A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6612  01188C  0E00               	movlw	0
  6613  01188E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6614  011890  0E06               	movlw	6
  6615  011892  EC6D  F095         	call	_terminal_textAttributes
  6616                           
  6617                           ;ring_buffer_LUT.c: 230: printf("TRIAC output dimming has been enabled\n\r");
  6618  011896  0E88               	movlw	low STR_70
  6619  011898  0101               	movlb	1	; () banked
  6620  01189A  6F64               	movwf	printf@f& (0+255),b
  6621  01189C  0EFC               	movlw	high STR_70
  6622  01189E  6F65               	movwf	(printf@f+1)& (0+255),b
  6623  0118A0  EC00  F080         	call	_printf	;wreg free
  6624                           
  6625                           ;ring_buffer_LUT.c: 232: terminal_textAttributesReset();
  6626  0118A4  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6627                           
  6628                           ;ring_buffer_LUT.c: 234: terminal_printNewline();
  6629  0118A8  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6630                           
  6631                           ;ring_buffer_LUT.c: 236: }
  6632  0118AC  0012               	return	
  6633  0118AE                     l1038:
  6634                           
  6635                           ;ring_buffer_LUT.c: 239: else if ((0 == strcmp(line, "Disable Dimming"))) {
  6636  0118AE  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6637  0118B2  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6638  0118B6  0E1B               	movlw	low STR_71
  6639  0118B8  0101               	movlb	1	; () banked
  6640  0118BA  6F19               	movwf	strcmp@s2& (0+255),b
  6641  0118BC  0EFF               	movlw	high STR_71
  6642  0118BE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6643  0118C0  EC91  F0AE         	call	_strcmp	;wreg free
  6644  0118C4  0101               	movlb	1	; () banked
  6645  0118C6  5117               	movf	?_strcmp& (0+255),w,b
  6646  0118C8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6647  0118CA  A4D8               	btfss	status,2,c
  6648  0118CC  D017               	goto	l1040
  6649                           
  6650                           ; BSR set to: 1
  6651                           ;ring_buffer_LUT.c: 242: LATGbits.LATG0 = 1;
  6652  0118CE  807F               	bsf	3967,0,c	;volatile
  6653                           
  6654                           ; BSR set to: 1
  6655                           ;ring_buffer_LUT.c: 245: terminal_printNewline();
  6656  0118D0  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6657                           
  6658                           ;ring_buffer_LUT.c: 247: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6659  0118D4  0E00               	movlw	0
  6660  0118D6  0101               	movlb	1	; () banked
  6661  0118D8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6662  0118DA  0E00               	movlw	0
  6663  0118DC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6664  0118DE  0E06               	movlw	6
  6665  0118E0  EC6D  F095         	call	_terminal_textAttributes
  6666                           
  6667                           ;ring_buffer_LUT.c: 248: printf("TRIAC output dimming has been disabled\n\r");
  6668  0118E4  0E5F               	movlw	low STR_72
  6669  0118E6  0101               	movlb	1	; () banked
  6670  0118E8  6F64               	movwf	printf@f& (0+255),b
  6671  0118EA  0EFC               	movlw	high STR_72
  6672  0118EC  6F65               	movwf	(printf@f+1)& (0+255),b
  6673  0118EE  EC00  F080         	call	_printf	;wreg free
  6674                           
  6675                           ;ring_buffer_LUT.c: 250: terminal_textAttributesReset();
  6676  0118F2  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6677                           
  6678                           ;ring_buffer_LUT.c: 252: terminal_printNewline();
  6679  0118F6  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6680                           
  6681                           ;ring_buffer_LUT.c: 254: }
  6682  0118FA  0012               	return	
  6683  0118FC                     l1040:
  6684                           
  6685                           ;ring_buffer_LUT.c: 257: else if ((0 == strcmp(line, "Enable Load"))) {
  6686  0118FC  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6687  011900  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6688  011904  0E80               	movlw	low STR_73
  6689  011906  0101               	movlb	1	; () banked
  6690  011908  6F19               	movwf	strcmp@s2& (0+255),b
  6691  01190A  0EFF               	movlw	high STR_73
  6692  01190C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6693  01190E  EC91  F0AE         	call	_strcmp	;wreg free
  6694  011912  0101               	movlb	1	; () banked
  6695  011914  5117               	movf	?_strcmp& (0+255),w,b
  6696  011916  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6697  011918  A4D8               	btfss	status,2,c
  6698  01191A  D019               	goto	l1042
  6699                           
  6700                           ; BSR set to: 1
  6701                           ;ring_buffer_LUT.c: 259: LATGbits.LATG0 = 1;
  6702  01191C  807F               	bsf	3967,0,c	;volatile
  6703                           
  6704                           ;ring_buffer_LUT.c: 260: LATGbits.LATG1 = 0;
  6705  01191E  927F               	bcf	3967,1,c	;volatile
  6706                           
  6707                           ;ring_buffer_LUT.c: 261: load_enable = 1;
  6708  011920  805E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  6709                           
  6710                           ; BSR set to: 1
  6711                           ;ring_buffer_LUT.c: 264: terminal_printNewline();
  6712  011922  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6713                           
  6714                           ;ring_buffer_LUT.c: 266: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6715  011926  0E00               	movlw	0
  6716  011928  0101               	movlb	1	; () banked
  6717  01192A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6718  01192C  0E00               	movlw	0
  6719  01192E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6720  011930  0E06               	movlw	6
  6721  011932  EC6D  F095         	call	_terminal_textAttributes
  6722                           
  6723                           ;ring_buffer_LUT.c: 267: printf("Load has been enabled, dimming disabled\n\r");
  6724  011936  0E35               	movlw	low STR_74
  6725  011938  0101               	movlb	1	; () banked
  6726  01193A  6F64               	movwf	printf@f& (0+255),b
  6727  01193C  0EFC               	movlw	high STR_74
  6728  01193E  6F65               	movwf	(printf@f+1)& (0+255),b
  6729  011940  EC00  F080         	call	_printf	;wreg free
  6730                           
  6731                           ;ring_buffer_LUT.c: 269: terminal_textAttributesReset();
  6732  011944  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6733                           
  6734                           ;ring_buffer_LUT.c: 271: terminal_printNewline();
  6735  011948  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6736                           
  6737                           ;ring_buffer_LUT.c: 273: }
  6738  01194C  0012               	return	
  6739  01194E                     l1042:
  6740                           
  6741                           ;ring_buffer_LUT.c: 276: else if ((0 == strcmp(line, "Disable Load"))) {
  6742  01194E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6743  011952  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6744  011956  0E73               	movlw	low STR_75
  6745  011958  0101               	movlb	1	; () banked
  6746  01195A  6F19               	movwf	strcmp@s2& (0+255),b
  6747  01195C  0EFF               	movlw	high STR_75
  6748  01195E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6749  011960  EC91  F0AE         	call	_strcmp	;wreg free
  6750  011964  0101               	movlb	1	; () banked
  6751  011966  5117               	movf	?_strcmp& (0+255),w,b
  6752  011968  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6753  01196A  A4D8               	btfss	status,2,c
  6754  01196C  D019               	goto	l1044
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;ring_buffer_LUT.c: 278: LATGbits.LATG1 = 0;
  6758  01196E  927F               	bcf	3967,1,c	;volatile
  6759                           
  6760                           ;ring_buffer_LUT.c: 279: LATGbits.LATG0 = 0;
  6761  011970  907F               	bcf	3967,0,c	;volatile
  6762                           
  6763                           ;ring_buffer_LUT.c: 280: load_enable = 0;
  6764  011972  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  6765                           
  6766                           ; BSR set to: 1
  6767                           ;ring_buffer_LUT.c: 283: terminal_printNewline();
  6768  011974  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6769                           
  6770                           ;ring_buffer_LUT.c: 285: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6771  011978  0E00               	movlw	0
  6772  01197A  0101               	movlb	1	; () banked
  6773  01197C  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6774  01197E  0E00               	movlw	0
  6775  011980  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6776  011982  0E06               	movlw	6
  6777  011984  EC6D  F095         	call	_terminal_textAttributes
  6778                           
  6779                           ;ring_buffer_LUT.c: 286: printf("Load has been disabled\n\r");
  6780  011988  0E64               	movlw	low STR_76
  6781  01198A  0101               	movlb	1	; () banked
  6782  01198C  6F64               	movwf	printf@f& (0+255),b
  6783  01198E  0EFE               	movlw	high STR_76
  6784  011990  6F65               	movwf	(printf@f+1)& (0+255),b
  6785  011992  EC00  F080         	call	_printf	;wreg free
  6786                           
  6787                           ;ring_buffer_LUT.c: 288: terminal_textAttributesReset();
  6788  011996  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6789                           
  6790                           ;ring_buffer_LUT.c: 290: terminal_printNewline();
  6791  01199A  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6792                           
  6793                           ;ring_buffer_LUT.c: 292: }
  6794  01199E  0012               	return	
  6795  0119A0                     l1044:
  6796                           
  6797                           ;ring_buffer_LUT.c: 295: else if ((strstr(line, "Set Dimming Percentage: "))) {
  6798  0119A0  C1A0  F126         	movff	ringBufferLUT@line,strstr@s1
  6799  0119A4  C1A1  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  6800  0119A8  0E7D               	movlw	low STR_77
  6801  0119AA  0101               	movlb	1	; () banked
  6802  0119AC  6F28               	movwf	strstr@s2& (0+255),b
  6803  0119AE  0EFE               	movlw	high STR_77
  6804  0119B0  6F29               	movwf	(strstr@s2+1)& (0+255),b
  6805  0119B2  ECDC  F0A9         	call	_strstr	;wreg free
  6806  0119B6  0101               	movlb	1	; () banked
  6807  0119B8  5126               	movf	?_strstr& (0+255),w,b
  6808  0119BA  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  6809  0119BC  B4D8               	btfsc	status,2,c
  6810  0119BE  D113               	goto	l1046
  6811                           
  6812                           ; BSR set to: 1
  6813                           ;ring_buffer_LUT.c: 298: char arg_buff[3];
  6814                           ;ring_buffer_LUT.c: 301: for (int index = 0; index < 3; index++) {
  6815  0119C0  0E00               	movlw	0
  6816  0119C2  6FAB               	movwf	(ringBufferLUT@index+1)& (0+255),b
  6817  0119C4  0E00               	movlw	0
  6818  0119C6  6FAA               	movwf	ringBufferLUT@index& (0+255),b
  6819  0119C8                     l10079:
  6820                           
  6821                           ; BSR set to: 1
  6822  0119C8  BFAB               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  6823  0119CA  D006               	goto	l1047
  6824  0119CC  51AB               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  6825  0119CE  E11B               	bnz	l10089
  6826  0119D0  0E03               	movlw	3
  6827  0119D2  5DAA               	subwf	ringBufferLUT@index& (0+255),w,b
  6828  0119D4  B0D8               	btfsc	status,0,c
  6829  0119D6  D017               	goto	u11840
  6830  0119D8                     l1047:
  6831                           
  6832                           ; BSR set to: 1
  6833                           ;ring_buffer_LUT.c: 303: arg_buff[index] = line[index + 24];
  6834                           
  6835                           ; BSR set to: 1
  6836  0119D8  0E18               	movlw	24
  6837  0119DA  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  6838  0119DC  6FA2               	movwf	??_ringBufferLUT& (0+255),b
  6839  0119DE  0E00               	movlw	0
  6840  0119E0  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6841  0119E2  6FA3               	movwf	(??_ringBufferLUT+1)& (0+255),b
  6842  0119E4  51A2               	movf	??_ringBufferLUT& (0+255),w,b
  6843  0119E6  25A0               	addwf	ringBufferLUT@line& (0+255),w,b
  6844  0119E8  6ED9               	movwf	fsr2l,c
  6845  0119EA  51A3               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  6846  0119EC  21A1               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  6847  0119EE  6EDA               	movwf	fsr2h,c
  6848  0119F0  0EA7               	movlw	low ringBufferLUT@arg_buff
  6849  0119F2  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  6850  0119F4  6EE1               	movwf	fsr1l,c
  6851  0119F6  0E01               	movlw	high ringBufferLUT@arg_buff
  6852  0119F8  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6853  0119FA  6EE2               	movwf	fsr1h,c
  6854  0119FC  CFDF FFE7          	movff	indf2,indf1
  6855                           
  6856                           ; BSR set to: 1
  6857  011A00  4BAA               	infsnz	ringBufferLUT@index& (0+255),f,b
  6858  011A02  2BAB               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  6859  011A04  D7E1               	goto	l10079
  6860  011A06                     u11840:
  6861  011A06                     l10089:
  6862                           
  6863                           ; BSR set to: 1
  6864                           ;ring_buffer_LUT.c: 305: }
  6865                           ;ring_buffer_LUT.c: 307: int percentage = atoi(arg_buff);
  6866  011A06  0EA7               	movlw	low ringBufferLUT@arg_buff
  6867  011A08  6F2B               	movwf	atoi@s& (0+255),b
  6868  011A0A  0E01               	movlw	high ringBufferLUT@arg_buff
  6869  011A0C  6F2C               	movwf	(atoi@s+1)& (0+255),b
  6870  011A0E  ECDC  F0A6         	call	_atoi	;wreg free
  6871  011A12  C12B  F1AC         	movff	?_atoi,ringBufferLUT@percentage
  6872  011A16  C12C  F1AD         	movff	?_atoi+1,ringBufferLUT@percentage+1
  6873                           
  6874                           ;ring_buffer_LUT.c: 310: if ( (percentage >= 100) ||
  6875                           ;ring_buffer_LUT.c: 311: (percentage <= 0)) {
  6876  011A1A  0101               	movlb	1	; () banked
  6877  011A1C  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6878  011A1E  D006               	goto	u11850
  6879  011A20  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6880  011A22  E10B               	bnz	l10095
  6881  011A24  0E64               	movlw	100
  6882  011A26  5DAC               	subwf	ringBufferLUT@percentage& (0+255),w,b
  6883  011A28  B0D8               	btfsc	status,0,c
  6884  011A2A  D007               	goto	u11860
  6885  011A2C                     u11850:
  6886                           
  6887                           ; BSR set to: 1
  6888  011A2C  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6889  011A2E  D005               	goto	u11860
  6890  011A30  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6891  011A32  E12F               	bnz	l10097
  6892  011A34  05AC               	decf	ringBufferLUT@percentage& (0+255),w,b
  6893  011A36  B0D8               	btfsc	status,0,c
  6894  011A38  D02C               	goto	l1049
  6895  011A3A                     u11860:
  6896  011A3A                     l10095:
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;ring_buffer_LUT.c: 314: terminal_printNewline();
  6900  011A3A  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6901                           
  6902                           ;ring_buffer_LUT.c: 316: terminal_textAttributes(RED, BLACK, NORMAL);
  6903  011A3E  0E00               	movlw	0
  6904  011A40  0101               	movlb	1	; () banked
  6905  011A42  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6906  011A44  0E00               	movlw	0
  6907  011A46  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6908  011A48  0E01               	movlw	1
  6909  011A4A  EC6D  F095         	call	_terminal_textAttributes
  6910                           
  6911                           ;ring_buffer_LUT.c: 317: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  6912  011A4E  0E52               	movlw	low STR_78
  6913  011A50  0101               	movlb	1	; () banked
  6914  011A52  6F64               	movwf	printf@f& (0+255),b
  6915  011A54  0EFA               	movlw	high STR_78
  6916  011A56  6F65               	movwf	(printf@f+1)& (0+255),b
  6917  011A58  EC00  F080         	call	_printf	;wreg free
  6918                           
  6919                           ;ring_buffer_LUT.c: 319: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6920  011A5C  0E00               	movlw	0
  6921  011A5E  0101               	movlb	1	; () banked
  6922  011A60  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6923  011A62  0E00               	movlw	0
  6924  011A64  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6925  011A66  0E03               	movlw	3
  6926  011A68  EC6D  F095         	call	_terminal_textAttributes
  6927                           
  6928                           ;ring_buffer_LUT.c: 320: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  6929  011A6C  0EEC               	movlw	low STR_79
  6930  011A6E  0101               	movlb	1	; () banked
  6931  011A70  6F64               	movwf	printf@f& (0+255),b
  6932  011A72  0EF9               	movlw	high STR_79
  6933  011A74  6F65               	movwf	(printf@f+1)& (0+255),b
  6934  011A76  EC00  F080         	call	_printf	;wreg free
  6935                           
  6936                           ;ring_buffer_LUT.c: 321: printf("Enter 'Help' for list of available commands\n\r");
  6937  011A7A  0E07               	movlw	low STR_80
  6938  011A7C  0101               	movlb	1	; () banked
  6939  011A7E  6F64               	movwf	printf@f& (0+255),b
  6940  011A80  0EFC               	movlw	high STR_80
  6941  011A82  6F65               	movwf	(printf@f+1)& (0+255),b
  6942  011A84  EC00  F080         	call	_printf	;wreg free
  6943                           
  6944                           ;ring_buffer_LUT.c: 323: terminal_textAttributesReset();
  6945  011A88  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6946                           
  6947                           ;ring_buffer_LUT.c: 325: terminal_printNewline();
  6948  011A8C  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  6949                           
  6950                           ;ring_buffer_LUT.c: 327: }
  6951  011A90  0012               	return	
  6952  011A92                     l1049:
  6953  011A92                     l10097:
  6954                           
  6955                           ;ring_buffer_LUT.c: 330: else {
  6956                           ;ring_buffer_LUT.c: 333: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  6957  011A92  0E00               	movlw	0
  6958  011A94  0101               	movlb	1	; () banked
  6959  011A96  6F3A               	movwf	___ftdiv@f2& (0+255),b
  6960  011A98  0EC8               	movlw	200
  6961  011A9A  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  6962  011A9C  0E42               	movlw	66
  6963  011A9E  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  6964  011AA0  0E00               	movlw	0
  6965  011AA2  6F2E               	movwf	___ftadd@f2& (0+255),b
  6966  011AA4  0EC8               	movlw	200
  6967  011AA6  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  6968  011AA8  0E42               	movlw	66
  6969  011AAA  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  6970  011AAC  C1AC  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  6971  011AB0  C1AD  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  6972  011AB4  ECD6  F0AF         	call	___awtoft	;wreg free
  6973  011AB8  C11F  F123         	movff	?___awtoft,___ftneg@f1
  6974  011ABC  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  6975  011AC0  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  6976  011AC4  ECF7  F0B0         	call	___ftneg	;wreg free
  6977  011AC8  C123  F12B         	movff	?___ftneg,___ftadd@f1
  6978  011ACC  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  6979  011AD0  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  6980  011AD4  ECCE  F09D         	call	___ftadd	;wreg free
  6981  011AD8  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  6982  011ADC  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  6983  011AE0  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  6984  011AE4  EC19  F0A5         	call	___ftdiv	;wreg free
  6985  011AE8  C137  F146         	movff	?___ftdiv,___ftmul@f1
  6986  011AEC  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  6987  011AF0  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  6988  011AF4  0E10               	movlw	16
  6989  011AF6  0101               	movlb	1	; () banked
  6990  011AF8  6F49               	movwf	___ftmul@f2& (0+255),b
  6991  011AFA  0E49               	movlw	73
  6992  011AFC  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6993  011AFE  0E40               	movlw	64
  6994  011B00  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6995  011B02  ECAA  F0A3         	call	___ftmul	;wreg free
  6996  011B06  C146  F0EB         	movff	?___ftmul,_TRIAC_Firing_Angle	;volatile
  6997  011B0A  C147  F0EC         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1	;volatile
  6998  011B0E  C148  F0ED         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2	;volatile
  6999                           
  7000                           ;ring_buffer_LUT.c: 334: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  7001  011B12  C0EB  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1	;volatile
  7002  011B16  C0EC  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1	;volatile
  7003  011B1A  C0ED  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2	;volatile
  7004  011B1E  0E2F               	movlw	47
  7005  011B20  0101               	movlb	1	; () banked
  7006  011B22  6F49               	movwf	___ftmul@f2& (0+255),b
  7007  011B24  0E65               	movlw	101
  7008  011B26  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  7009  011B28  0E42               	movlw	66
  7010  011B2A  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  7011  011B2C  ECAA  F0A3         	call	___ftmul	;wreg free
  7012  011B30  C146  F1A4         	movff	?___ftmul,ringBufferLUT@angle_degrees
  7013  011B34  C147  F1A5         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  7014  011B38  C148  F1A6         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  7015                           
  7016                           ;ring_buffer_LUT.c: 335: dimming_period = (100 - percentage) * (0xFFFF / 100);
  7017  011B3C  C1AC  F1A2         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  7018  011B40  C1AD  F1A3         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  7019  011B44  0101               	movlb	1	; () banked
  7020  011B46  1FA2               	comf	??_ringBufferLUT& (0+255),f,b
  7021  011B48  1FA3               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  7022  011B4A  4BA2               	infsnz	??_ringBufferLUT& (0+255),f,b
  7023  011B4C  2BA3               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  7024  011B4E  0E64               	movlw	100
  7025  011B50  25A2               	addwf	??_ringBufferLUT& (0+255),w,b
  7026  011B52  6F25               	movwf	___wmul@multiplier& (0+255),b
  7027  011B54  0E00               	movlw	0
  7028  011B56  21A3               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  7029  011B58  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  7030  011B5A  0E02               	movlw	2
  7031  011B5C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7032  011B5E  0E8F               	movlw	143
  7033  011B60  6F27               	movwf	___wmul@multiplicand& (0+255),b
  7034  011B62  ECBB  F0B0         	call	___wmul	;wreg free
  7035  011B66  C125  F0E5         	movff	?___wmul,_dimming_period	;volatile
  7036  011B6A  C126  F0E6         	movff	?___wmul+1,_dimming_period+1	;volatile
  7037                           
  7038                           ;ring_buffer_LUT.c: 338: terminal_printNewline();
  7039  011B6E  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  7040                           
  7041                           ;ring_buffer_LUT.c: 340: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7042  011B72  0E00               	movlw	0
  7043  011B74  0101               	movlb	1	; () banked
  7044  011B76  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7045  011B78  0E00               	movlw	0
  7046  011B7A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7047  011B7C  0E06               	movlw	6
  7048  011B7E  EC6D  F095         	call	_terminal_textAttributes
  7049                           
  7050                           ;ring_buffer_LUT.c: 341: printf("Dimming has been set to %d percent\n\r", percentage);
  7051  011B82  0EFD               	movlw	low STR_81
  7052  011B84  0101               	movlb	1	; () banked
  7053  011B86  6F64               	movwf	printf@f& (0+255),b
  7054  011B88  0EFC               	movlw	high STR_81
  7055  011B8A  6F65               	movwf	(printf@f+1)& (0+255),b
  7056  011B8C  C1AC  F166         	movff	ringBufferLUT@percentage,?_printf+2
  7057  011B90  C1AD  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  7058  011B94  EC00  F080         	call	_printf	;wreg free
  7059                           
  7060                           ;ring_buffer_LUT.c: 342: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  7061  011B98  0EEF               	movlw	low STR_82
  7062  011B9A  0101               	movlb	1	; () banked
  7063  011B9C  6F64               	movwf	printf@f& (0+255),b
  7064  011B9E  0EFA               	movlw	high STR_82
  7065  011BA0  6F65               	movwf	(printf@f+1)& (0+255),b
  7066  011BA2  C0EB  F166         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  7067  011BA6  C0EC  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  7068  011BAA  C0ED  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  7069  011BAE  C1A4  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  7070  011BB2  C1A5  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  7071  011BB6  C1A6  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  7072  011BBA  EC00  F080         	call	_printf	;wreg free
  7073                           
  7074                           ;ring_buffer_LUT.c: 343: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  7075  011BBE  0EA8               	movlw	low STR_83
  7076  011BC0  0101               	movlb	1	; () banked
  7077  011BC2  6F64               	movwf	printf@f& (0+255),b
  7078  011BC4  0EFA               	movlw	high STR_83
  7079  011BC6  6F65               	movwf	(printf@f+1)& (0+255),b
  7080  011BC8  C0E5  F166         	movff	_dimming_period,?_printf+2	;volatile
  7081  011BCC  C0E6  F167         	movff	_dimming_period+1,?_printf+3	;volatile
  7082  011BD0  C0E5  F168         	movff	_dimming_period,?_printf+4	;volatile
  7083  011BD4  C0E6  F169         	movff	_dimming_period+1,?_printf+5	;volatile
  7084  011BD8  EC00  F080         	call	_printf	;wreg free
  7085                           
  7086                           ;ring_buffer_LUT.c: 345: terminal_textAttributesReset();
  7087  011BDC  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  7088                           
  7089                           ;ring_buffer_LUT.c: 347: terminal_printNewline();
  7090  011BE0  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  7091                           
  7092                           ;ring_buffer_LUT.c: 349: }
  7093                           ;ring_buffer_LUT.c: 351: }
  7094  011BE4  0012               	return	
  7095  011BE6                     l1046:
  7096                           
  7097                           ;ring_buffer_LUT.c: 354: else if((0 == strcmp(line, "On Time?"))) {
  7098  011BE6  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7099  011BEA  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7100  011BEE  0E8C               	movlw	low STR_84
  7101  011BF0  0101               	movlb	1	; () banked
  7102  011BF2  6F19               	movwf	strcmp@s2& (0+255),b
  7103  011BF4  0EFF               	movlw	high STR_84
  7104  011BF6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7105  011BF8  EC91  F0AE         	call	_strcmp	;wreg free
  7106  011BFC  0101               	movlb	1	; () banked
  7107  011BFE  5117               	movf	?_strcmp& (0+255),w,b
  7108  011C00  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7109  011C02  A4D8               	btfss	status,2,c
  7110  011C04  D01E               	goto	l1054
  7111                           
  7112                           ; BSR set to: 1
  7113                           ;ring_buffer_LUT.c: 357: terminal_printNewline();
  7114  011C06  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  7115                           
  7116                           ;ring_buffer_LUT.c: 359: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7117  011C0A  0E00               	movlw	0
  7118  011C0C  0101               	movlb	1	; () banked
  7119  011C0E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7120  011C10  0E00               	movlw	0
  7121  011C12  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7122  011C14  0E06               	movlw	6
  7123  011C16  EC6D  F095         	call	_terminal_textAttributes
  7124                           
  7125                           ;ring_buffer_LUT.c: 360: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", on_time);
  7126  011C1A  0E2E               	movlw	low STR_85
  7127  011C1C  0101               	movlb	1	; () banked
  7128  011C1E  6F64               	movwf	printf@f& (0+255),b
  7129  011C20  0EFB               	movlw	high STR_85
  7130  011C22  6F65               	movwf	(printf@f+1)& (0+255),b
  7131  011C24  C1B9  F166         	movff	_on_time,?_printf+2	;volatile
  7132  011C28  C1BA  F167         	movff	_on_time+1,?_printf+3	;volatile
  7133  011C2C  C1BB  F168         	movff	_on_time+2,?_printf+4	;volatile
  7134  011C30  C1BC  F169         	movff	_on_time+3,?_printf+5	;volatile
  7135  011C34  EC00  F080         	call	_printf	;wreg free
  7136                           
  7137                           ;ring_buffer_LUT.c: 362: terminal_textAttributesReset();
  7138  011C38  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  7139                           
  7140                           ;ring_buffer_LUT.c: 364: terminal_printNewline();
  7141  011C3C  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  7142                           
  7143                           ;ring_buffer_LUT.c: 367: }
  7144  011C40  0012               	return	
  7145  011C42                     l1054:
  7146                           
  7147                           ;ring_buffer_LUT.c: 372: else if((0 == strcmp(line, "Help"))) {
  7148  011C42  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7149  011C46  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7150  011C4A  0EA7               	movlw	low STR_86
  7151  011C4C  0101               	movlb	1	; () banked
  7152  011C4E  6F19               	movwf	strcmp@s2& (0+255),b
  7153  011C50  0EFF               	movlw	high STR_86
  7154  011C52  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7155  011C54  EC91  F0AE         	call	_strcmp	;wreg free
  7156  011C58  0101               	movlb	1	; () banked
  7157  011C5A  5117               	movf	?_strcmp& (0+255),w,b
  7158  011C5C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7159  011C5E  A4D8               	btfss	status,2,c
  7160  011C60  0012               	return	
  7161                           
  7162                           ; BSR set to: 1
  7163                           ;ring_buffer_LUT.c: 375: terminal_printNewline();
  7164  011C62  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  7165                           
  7166                           ;ring_buffer_LUT.c: 377: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  7167  011C66  0E00               	movlw	0
  7168  011C68  0101               	movlb	1	; () banked
  7169  011C6A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7170  011C6C  0E00               	movlw	0
  7171  011C6E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7172  011C70  0E03               	movlw	3
  7173  011C72  EC6D  F095         	call	_terminal_textAttributes
  7174                           
  7175                           ;ring_buffer_LUT.c: 378: printf("List of supported commands:\n\r"
  7176                           ;ring_buffer_LUT.c: 379: "Housekeeping Commands:\n\r"
  7177                           ;ring_buffer_LUT.c: 380: "   Reset: Clears the terminal and resets the micro\n\r"
  7178                           ;ring_buffer_LUT.c: 381: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  7179                           ;ring_buffer_LUT.c: 382: "   *IDN?: Returns device identification\n\r"
  7180                           ;ring_buffer_LUT.c: 383: "   On Time?: Returns device on time since last device reset\n\
      +                          r"
  7181                           ;ring_buffer_LUT.c: 384: "   Help: This message, lists commands\n\r\n\r"
  7182  011C76  0EFB               	movlw	low STR_87
  7183  011C78  0101               	movlb	1	; () banked
  7184  011C7A  6F64               	movwf	printf@f& (0+255),b
  7185  011C7C  0EF2               	movlw	high STR_87
  7186  011C7E  6F65               	movwf	(printf@f+1)& (0+255),b
  7187  011C80  EC00  F080         	call	_printf	;wreg free
  7188                           
  7189                           ;ring_buffer_LUT.c: 404: terminal_printNewline();
  7190  011C84  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  7191                           
  7192                           ;ring_buffer_LUT.c: 405: printf("Help messages appear in yellow\n\r");
  7193  011C88  0ECD               	movlw	low STR_88
  7194  011C8A  0101               	movlb	1	; () banked
  7195  011C8C  6F64               	movwf	printf@f& (0+255),b
  7196  011C8E  0EFD               	movlw	high STR_88
  7197  011C90  6F65               	movwf	(printf@f+1)& (0+255),b
  7198  011C92  EC00  F080         	call	_printf	;wreg free
  7199                           
  7200                           ;ring_buffer_LUT.c: 407: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7201  011C96  0E00               	movlw	0
  7202  011C98  0101               	movlb	1	; () banked
  7203  011C9A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7204  011C9C  0E00               	movlw	0
  7205  011C9E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7206  011CA0  0E02               	movlw	2
  7207  011CA2  EC6D  F095         	call	_terminal_textAttributes
  7208                           
  7209                           ;ring_buffer_LUT.c: 408: printf("IDN string appears in green\n\r");
  7210  011CA6  0E2C               	movlw	low STR_89
  7211  011CA8  0101               	movlb	1	; () banked
  7212  011CAA  6F64               	movwf	printf@f& (0+255),b
  7213  011CAC  0EFE               	movlw	high STR_89
  7214  011CAE  6F65               	movwf	(printf@f+1)& (0+255),b
  7215  011CB0  EC00  F080         	call	_printf	;wreg free
  7216                           
  7217                           ;ring_buffer_LUT.c: 409: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7218  011CB4  0E00               	movlw	0
  7219  011CB6  0101               	movlb	1	; () banked
  7220  011CB8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7221  011CBA  0E00               	movlw	0
  7222  011CBC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7223  011CBE  0E06               	movlw	6
  7224  011CC0  EC6D  F095         	call	_terminal_textAttributes
  7225                           
  7226                           ;ring_buffer_LUT.c: 410: printf("Measurements responses appear in cyan\n\r");
  7227  011CC4  0EB0               	movlw	low STR_90
  7228  011CC6  0101               	movlb	1	; () banked
  7229  011CC8  6F64               	movwf	printf@f& (0+255),b
  7230  011CCA  0EFC               	movlw	high STR_90
  7231  011CCC  6F65               	movwf	(printf@f+1)& (0+255),b
  7232  011CCE  EC00  F080         	call	_printf	;wreg free
  7233                           
  7234                           ;ring_buffer_LUT.c: 411: terminal_textAttributes(RED, BLACK, NORMAL);
  7235  011CD2  0E00               	movlw	0
  7236  011CD4  0101               	movlb	1	; () banked
  7237  011CD6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7238  011CD8  0E00               	movlw	0
  7239  011CDA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7240  011CDC  0E01               	movlw	1
  7241  011CDE  EC6D  F095         	call	_terminal_textAttributes
  7242                           
  7243                           ;ring_buffer_LUT.c: 412: printf("Errors appear in red\n\r");
  7244  011CE2  0E96               	movlw	low STR_91
  7245  011CE4  0101               	movlb	1	; () banked
  7246  011CE6  6F64               	movwf	printf@f& (0+255),b
  7247  011CE8  0EFE               	movlw	high STR_91
  7248  011CEA  6F65               	movwf	(printf@f+1)& (0+255),b
  7249  011CEC  EC00  F080         	call	_printf	;wreg free
  7250                           
  7251                           ;ring_buffer_LUT.c: 413: terminal_textAttributesReset();
  7252  011CF0  ECA8  F0B1         	call	_terminal_textAttributesReset	;wreg free
  7253                           
  7254                           ;ring_buffer_LUT.c: 414: printf("User input appears in white\n\r");
  7255  011CF4  0E0E               	movlw	low STR_92
  7256  011CF6  0101               	movlb	1	; () banked
  7257  011CF8  6F64               	movwf	printf@f& (0+255),b
  7258  011CFA  0EFE               	movlw	high STR_92
  7259  011CFC  6F65               	movwf	(printf@f+1)& (0+255),b
  7260  011CFE  EC00  F080         	call	_printf	;wreg free
  7261                           
  7262                           ;ring_buffer_LUT.c: 417: terminal_printNewline();
  7263  011D02  ECC2  F0B1         	call	_terminal_printNewline	;wreg free
  7264  011D06  0012               	return	
  7265  011D08                     __end_of_ringBufferLUT:
  7266                           	opt stack 0
  7267                           tblptru	equ	0xFF8
  7268                           tblptrh	equ	0xFF7
  7269                           tblptrl	equ	0xFF6
  7270                           tablat	equ	0xFF5
  7271                           intcon	equ	0xFF2
  7272                           postinc0	equ	0xFEE
  7273                           wreg	equ	0xFE8
  7274                           indf1	equ	0xFE7
  7275                           postdec1	equ	0xFE5
  7276                           fsr1h	equ	0xFE2
  7277                           fsr1l	equ	0xFE1
  7278                           indf2	equ	0xFDF
  7279                           postinc2	equ	0xFDE
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function _terminal_textAttributesReset *****************
  7285 ;; Defined at:
  7286 ;;		line 223 in file "ring_buffer_interface.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7304 ;;Total ram usage:        0 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:   19
  7307 ;; This function calls:
  7308 ;;		_terminal_textAttributes
  7309 ;; This function is called by:
  7310 ;;		_main
  7311 ;;		_ringBufferLUT
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text4
  7316  016350                     __ptext4:
  7317                           	opt stack 0
  7318  016350                     _terminal_textAttributesReset:
  7319                           	opt stack 11
  7320                           
  7321                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  7322                           
  7323                           ;incstack = 0
  7324  016350  0E00               	movlw	0
  7325  016352  0101               	movlb	1	; () banked
  7326  016354  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7327  016356  0E00               	movlw	0
  7328  016358  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7329  01635A  0E07               	movlw	7
  7330  01635C  EC6D  F095         	call	_terminal_textAttributes
  7331  016360  0012               	return		;funcret
  7332  016362                     __end_of_terminal_textAttributesReset:
  7333                           	opt stack 0
  7334                           tblptru	equ	0xFF8
  7335                           tblptrh	equ	0xFF7
  7336                           tblptrl	equ	0xFF6
  7337                           tablat	equ	0xFF5
  7338                           intcon	equ	0xFF2
  7339                           postinc0	equ	0xFEE
  7340                           wreg	equ	0xFE8
  7341                           indf1	equ	0xFE7
  7342                           postdec1	equ	0xFE5
  7343                           fsr1h	equ	0xFE2
  7344                           fsr1l	equ	0xFE1
  7345                           indf2	equ	0xFDF
  7346                           postinc2	equ	0xFDE
  7347                           fsr2h	equ	0xFDA
  7348                           fsr2l	equ	0xFD9
  7349                           status	equ	0xFD8
  7350                           
  7351 ;; *************** function _terminal_textAttributes *****************
  7352 ;; Defined at:
  7353 ;;		line 115 in file "ring_buffer_interface.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  foreground_c    1    wreg     enum E17839
  7356 ;;  background_c    1  142[BANK1 ] enum E17839
  7357 ;;  input_attrib    1  143[BANK1 ] enum E17831
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  foreground_c    1  144[BANK1 ] enum E17839
  7360 ;;  output_buff    15  145[BANK1 ] unsigned char [15]
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7370 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7374 ;;Total ram usage:       18 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:   18
  7377 ;; This function calls:
  7378 ;;		_printf
  7379 ;;		_strcat
  7380 ;;		_strncpy
  7381 ;; This function is called by:
  7382 ;;		_terminal_textAttributesReset
  7383 ;;		_ringBufferLUT
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text5
  7388  012ADA                     __ptext5:
  7389                           	opt stack 0
  7390  012ADA                     _terminal_textAttributes:
  7391                           	opt stack 11
  7392                           
  7393                           ;incstack = 0
  7394                           ;terminal_textAttributes@foreground_color stored from wreg
  7395  012ADA  0101               	movlb	1	; () banked
  7396  012ADC  6F90               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  7397                           
  7398                           ;ring_buffer_interface.c: 119: char output_buff[15];
  7399                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  7400  012ADE  0E91               	movlw	low terminal_textAttributes@output_buff
  7401  012AE0  0101               	movlb	1	; () banked
  7402  012AE2  6F17               	movwf	strncpy@to& (0+255),b
  7403  012AE4  0E01               	movlw	high terminal_textAttributes@output_buff
  7404  012AE6  6F18               	movwf	(strncpy@to+1)& (0+255),b
  7405  012AE8  0EF5               	movlw	low STR_11
  7406  012AEA  6F19               	movwf	strncpy@from& (0+255),b
  7407  012AEC  0EFF               	movlw	high STR_11
  7408  012AEE  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  7409  012AF0  0E00               	movlw	0
  7410  012AF2  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  7411  012AF4  0E0F               	movlw	15
  7412  012AF6  6F1B               	movwf	strncpy@size& (0+255),b
  7413  012AF8  EC4E  F0AC         	call	_strncpy	;wreg free
  7414                           
  7415                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  7416  012AFC  D054               	goto	l924
  7417  012AFE                     
  7418                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  7419  012AFE  0E91               	movlw	low terminal_textAttributes@output_buff
  7420  012B00  0101               	movlb	1	; () banked
  7421  012B02  6F17               	movwf	strcat@to& (0+255),b
  7422  012B04  0E01               	movlw	high terminal_textAttributes@output_buff
  7423  012B06  6F18               	movwf	(strcat@to+1)& (0+255),b
  7424  012B08  0EC6               	movlw	low (STR_20+1)
  7425  012B0A  6F19               	movwf	strcat@from& (0+255),b
  7426  012B0C  0EFF               	movlw	high (STR_20+1)
  7427  012B0E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7428  012B10  ECE0  F0AE         	call	_strcat	;wreg free
  7429                           
  7430                           ;ring_buffer_interface.c: 127: break;
  7431  012B14  D05D               	goto	l926
  7432  012B16                     
  7433                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  7434  012B16  0E91               	movlw	low terminal_textAttributes@output_buff
  7435  012B18  0101               	movlb	1	; () banked
  7436  012B1A  6F17               	movwf	strcat@to& (0+255),b
  7437  012B1C  0E01               	movlw	high terminal_textAttributes@output_buff
  7438  012B1E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7439  012B20  0ECC               	movlw	low (STR_21+1)
  7440  012B22  6F19               	movwf	strcat@from& (0+255),b
  7441  012B24  0EFF               	movlw	high (STR_21+1)
  7442  012B26  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7443  012B28  ECE0  F0AE         	call	_strcat	;wreg free
  7444                           
  7445                           ;ring_buffer_interface.c: 130: break;
  7446  012B2C  D051               	goto	l926
  7447  012B2E                     
  7448                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  7449  012B2E  0E91               	movlw	low terminal_textAttributes@output_buff
  7450  012B30  0101               	movlb	1	; () banked
  7451  012B32  6F17               	movwf	strcat@to& (0+255),b
  7452  012B34  0E01               	movlw	high terminal_textAttributes@output_buff
  7453  012B36  6F18               	movwf	(strcat@to+1)& (0+255),b
  7454  012B38  0EDE               	movlw	low (STR_24+1)
  7455  012B3A  6F19               	movwf	strcat@from& (0+255),b
  7456  012B3C  0EFF               	movlw	high (STR_24+1)
  7457  012B3E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7458  012B40  ECE0  F0AE         	call	_strcat	;wreg free
  7459                           
  7460                           ;ring_buffer_interface.c: 133: break;
  7461  012B44  D045               	goto	l926
  7462  012B46                     
  7463                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  7464  012B46  0E91               	movlw	low terminal_textAttributes@output_buff
  7465  012B48  0101               	movlb	1	; () banked
  7466  012B4A  6F17               	movwf	strcat@to& (0+255),b
  7467  012B4C  0E01               	movlw	high terminal_textAttributes@output_buff
  7468  012B4E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7469  012B50  0EE4               	movlw	low (STR_25+1)
  7470  012B52  6F19               	movwf	strcat@from& (0+255),b
  7471  012B54  0EFF               	movlw	high (STR_25+1)
  7472  012B56  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7473  012B58  ECE0  F0AE         	call	_strcat	;wreg free
  7474                           
  7475                           ;ring_buffer_interface.c: 136: break;
  7476  012B5C  D039               	goto	l926
  7477  012B5E                     
  7478                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  7479  012B5E  0E91               	movlw	low terminal_textAttributes@output_buff
  7480  012B60  0101               	movlb	1	; () banked
  7481  012B62  6F17               	movwf	strcat@to& (0+255),b
  7482  012B64  0E01               	movlw	high terminal_textAttributes@output_buff
  7483  012B66  6F18               	movwf	(strcat@to+1)& (0+255),b
  7484  012B68  0EF0               	movlw	low (STR_27+1)
  7485  012B6A  6F19               	movwf	strcat@from& (0+255),b
  7486  012B6C  0EFF               	movlw	high (STR_27+1)
  7487  012B6E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7488  012B70  ECE0  F0AE         	call	_strcat	;wreg free
  7489                           
  7490                           ;ring_buffer_interface.c: 139: break;
  7491  012B74  D02D               	goto	l926
  7492  012B76                     
  7493                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  7494  012B76  0E91               	movlw	low terminal_textAttributes@output_buff
  7495  012B78  0101               	movlb	1	; () banked
  7496  012B7A  6F17               	movwf	strcat@to& (0+255),b
  7497  012B7C  0E01               	movlw	high terminal_textAttributes@output_buff
  7498  012B7E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7499  012B80  0EF8               	movlw	low STR_17
  7500  012B82  6F19               	movwf	strcat@from& (0+255),b
  7501  012B84  0EFF               	movlw	high STR_17
  7502  012B86  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7503  012B88  ECE0  F0AE         	call	_strcat	;wreg free
  7504                           
  7505                           ;ring_buffer_interface.c: 142: break;
  7506  012B8C  D021               	goto	l926
  7507  012B8E                     
  7508                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  7509  012B8E  0E91               	movlw	low terminal_textAttributes@output_buff
  7510  012B90  0101               	movlb	1	; () banked
  7511  012B92  6F17               	movwf	strcat@to& (0+255),b
  7512  012B94  0E01               	movlw	high terminal_textAttributes@output_buff
  7513  012B96  6F18               	movwf	(strcat@to+1)& (0+255),b
  7514  012B98  0EC6               	movlw	low (STR_20+1)
  7515  012B9A  6F19               	movwf	strcat@from& (0+255),b
  7516  012B9C  0EFF               	movlw	high (STR_20+1)
  7517  012B9E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7518  012BA0  ECE0  F0AE         	call	_strcat	;wreg free
  7519                           
  7520                           ;ring_buffer_interface.c: 147: }
  7521                           
  7522                           ;ring_buffer_interface.c: 146: break;
  7523  012BA4  D015               	goto	l926
  7524  012BA6                     l924:
  7525  012BA6  0101               	movlb	1	; () banked
  7526  012BA8  518F               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  7527                           
  7528                           ; Switch size 1, requested type "space"
  7529                           ; Number of cases is 6, Range of values is 0 to 5
  7530                           ; switch strategies available:
  7531                           ; Name         Instructions Cycles
  7532                           ; simple_byte           19    10 (average)
  7533                           ;	Chosen strategy is simple_byte
  7534  012BAA  0A00               	xorlw	0	; case 0
  7535  012BAC  B4D8               	btfsc	status,2,c
  7536  012BAE  D7A7               	goto	l925
  7537  012BB0  0A01               	xorlw	1	; case 1
  7538  012BB2  B4D8               	btfsc	status,2,c
  7539  012BB4  D7B0               	goto	l927
  7540  012BB6  0A03               	xorlw	3	; case 2
  7541  012BB8  B4D8               	btfsc	status,2,c
  7542  012BBA  D7B9               	goto	l928
  7543  012BBC  0A01               	xorlw	1	; case 3
  7544  012BBE  B4D8               	btfsc	status,2,c
  7545  012BC0  D7C2               	goto	l929
  7546  012BC2  0A07               	xorlw	7	; case 4
  7547  012BC4  B4D8               	btfsc	status,2,c
  7548  012BC6  D7CB               	goto	l930
  7549  012BC8  0A01               	xorlw	1	; case 5
  7550  012BCA  B4D8               	btfsc	status,2,c
  7551  012BCC  D7D4               	goto	l931
  7552  012BCE  D7DF               	goto	l932
  7553  012BD0                     l926:
  7554                           
  7555                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  7556                           
  7557                           ; BSR set to: 1
  7558  012BD0  0E91               	movlw	low terminal_textAttributes@output_buff
  7559  012BD2  0101               	movlb	1	; () banked
  7560  012BD4  6F17               	movwf	strcat@to& (0+255),b
  7561  012BD6  0E01               	movlw	high terminal_textAttributes@output_buff
  7562  012BD8  6F18               	movwf	(strcat@to+1)& (0+255),b
  7563  012BDA  0EFA               	movlw	low STR_19
  7564  012BDC  6F19               	movwf	strcat@from& (0+255),b
  7565  012BDE  0EFF               	movlw	high STR_19
  7566  012BE0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7567  012BE2  ECE0  F0AE         	call	_strcat	;wreg free
  7568                           
  7569                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  7570  012BE6  D06C               	goto	l933
  7571  012BE8                     
  7572                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  7573  012BE8  0E91               	movlw	low terminal_textAttributes@output_buff
  7574  012BEA  0101               	movlb	1	; () banked
  7575  012BEC  6F17               	movwf	strcat@to& (0+255),b
  7576  012BEE  0E01               	movlw	high terminal_textAttributes@output_buff
  7577  012BF0  6F18               	movwf	(strcat@to+1)& (0+255),b
  7578  012BF2  0EC5               	movlw	low STR_20
  7579  012BF4  6F19               	movwf	strcat@from& (0+255),b
  7580  012BF6  0EFF               	movlw	high STR_20
  7581  012BF8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7582  012BFA  ECE0  F0AE         	call	_strcat	;wreg free
  7583                           
  7584                           ;ring_buffer_interface.c: 155: break;
  7585  012BFE  D07B               	goto	l935
  7586  012C00                     
  7587                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  7588  012C00  0E91               	movlw	low terminal_textAttributes@output_buff
  7589  012C02  0101               	movlb	1	; () banked
  7590  012C04  6F17               	movwf	strcat@to& (0+255),b
  7591  012C06  0E01               	movlw	high terminal_textAttributes@output_buff
  7592  012C08  6F18               	movwf	(strcat@to+1)& (0+255),b
  7593  012C0A  0ECB               	movlw	low STR_21
  7594  012C0C  6F19               	movwf	strcat@from& (0+255),b
  7595  012C0E  0EFF               	movlw	high STR_21
  7596  012C10  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7597  012C12  ECE0  F0AE         	call	_strcat	;wreg free
  7598                           
  7599                           ;ring_buffer_interface.c: 158: break;
  7600  012C16  D06F               	goto	l935
  7601  012C18                     
  7602                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  7603  012C18  0E91               	movlw	low terminal_textAttributes@output_buff
  7604  012C1A  0101               	movlb	1	; () banked
  7605  012C1C  6F17               	movwf	strcat@to& (0+255),b
  7606  012C1E  0E01               	movlw	high terminal_textAttributes@output_buff
  7607  012C20  6F18               	movwf	(strcat@to+1)& (0+255),b
  7608  012C22  0ED1               	movlw	low STR_22
  7609  012C24  6F19               	movwf	strcat@from& (0+255),b
  7610  012C26  0EFF               	movlw	high STR_22
  7611  012C28  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7612  012C2A  ECE0  F0AE         	call	_strcat	;wreg free
  7613                           
  7614                           ;ring_buffer_interface.c: 161: break;
  7615  012C2E  D063               	goto	l935
  7616  012C30                     
  7617                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  7618  012C30  0E91               	movlw	low terminal_textAttributes@output_buff
  7619  012C32  0101               	movlb	1	; () banked
  7620  012C34  6F17               	movwf	strcat@to& (0+255),b
  7621  012C36  0E01               	movlw	high terminal_textAttributes@output_buff
  7622  012C38  6F18               	movwf	(strcat@to+1)& (0+255),b
  7623  012C3A  0ED7               	movlw	low STR_23
  7624  012C3C  6F19               	movwf	strcat@from& (0+255),b
  7625  012C3E  0EFF               	movlw	high STR_23
  7626  012C40  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7627  012C42  ECE0  F0AE         	call	_strcat	;wreg free
  7628                           
  7629                           ;ring_buffer_interface.c: 164: break;
  7630  012C46  D057               	goto	l935
  7631  012C48                     
  7632                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  7633  012C48  0E91               	movlw	low terminal_textAttributes@output_buff
  7634  012C4A  0101               	movlb	1	; () banked
  7635  012C4C  6F17               	movwf	strcat@to& (0+255),b
  7636  012C4E  0E01               	movlw	high terminal_textAttributes@output_buff
  7637  012C50  6F18               	movwf	(strcat@to+1)& (0+255),b
  7638  012C52  0EDD               	movlw	low STR_24
  7639  012C54  6F19               	movwf	strcat@from& (0+255),b
  7640  012C56  0EFF               	movlw	high STR_24
  7641  012C58  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7642  012C5A  ECE0  F0AE         	call	_strcat	;wreg free
  7643                           
  7644                           ;ring_buffer_interface.c: 167: break;
  7645  012C5E  D04B               	goto	l935
  7646  012C60                     
  7647                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  7648  012C60  0E91               	movlw	low terminal_textAttributes@output_buff
  7649  012C62  0101               	movlb	1	; () banked
  7650  012C64  6F17               	movwf	strcat@to& (0+255),b
  7651  012C66  0E01               	movlw	high terminal_textAttributes@output_buff
  7652  012C68  6F18               	movwf	(strcat@to+1)& (0+255),b
  7653  012C6A  0EE3               	movlw	low STR_25
  7654  012C6C  6F19               	movwf	strcat@from& (0+255),b
  7655  012C6E  0EFF               	movlw	high STR_25
  7656  012C70  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7657  012C72  ECE0  F0AE         	call	_strcat	;wreg free
  7658                           
  7659                           ;ring_buffer_interface.c: 170: break;
  7660  012C76  D03F               	goto	l935
  7661  012C78                     
  7662                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  7663  012C78  0E91               	movlw	low terminal_textAttributes@output_buff
  7664  012C7A  0101               	movlb	1	; () banked
  7665  012C7C  6F17               	movwf	strcat@to& (0+255),b
  7666  012C7E  0E01               	movlw	high terminal_textAttributes@output_buff
  7667  012C80  6F18               	movwf	(strcat@to+1)& (0+255),b
  7668  012C82  0EE9               	movlw	low STR_26
  7669  012C84  6F19               	movwf	strcat@from& (0+255),b
  7670  012C86  0EFF               	movlw	high STR_26
  7671  012C88  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7672  012C8A  ECE0  F0AE         	call	_strcat	;wreg free
  7673                           
  7674                           ;ring_buffer_interface.c: 173: break;
  7675  012C8E  D033               	goto	l935
  7676  012C90                     
  7677                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  7678  012C90  0E91               	movlw	low terminal_textAttributes@output_buff
  7679  012C92  0101               	movlb	1	; () banked
  7680  012C94  6F17               	movwf	strcat@to& (0+255),b
  7681  012C96  0E01               	movlw	high terminal_textAttributes@output_buff
  7682  012C98  6F18               	movwf	(strcat@to+1)& (0+255),b
  7683  012C9A  0EEF               	movlw	low STR_27
  7684  012C9C  6F19               	movwf	strcat@from& (0+255),b
  7685  012C9E  0EFF               	movlw	high STR_27
  7686  012CA0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7687  012CA2  ECE0  F0AE         	call	_strcat	;wreg free
  7688                           
  7689                           ;ring_buffer_interface.c: 176: break;
  7690  012CA6  D027               	goto	l935
  7691  012CA8                     
  7692                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  7693  012CA8  0E91               	movlw	low terminal_textAttributes@output_buff
  7694  012CAA  0101               	movlb	1	; () banked
  7695  012CAC  6F17               	movwf	strcat@to& (0+255),b
  7696  012CAE  0E01               	movlw	high terminal_textAttributes@output_buff
  7697  012CB0  6F18               	movwf	(strcat@to+1)& (0+255),b
  7698  012CB2  0EEF               	movlw	low STR_27
  7699  012CB4  6F19               	movwf	strcat@from& (0+255),b
  7700  012CB6  0EFF               	movlw	high STR_27
  7701  012CB8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7702  012CBA  ECE0  F0AE         	call	_strcat	;wreg free
  7703                           
  7704                           ;ring_buffer_interface.c: 181: }
  7705                           
  7706                           ;ring_buffer_interface.c: 180: break;
  7707  012CBE  D01B               	goto	l935
  7708  012CC0                     l933:
  7709  012CC0  0101               	movlb	1	; () banked
  7710  012CC2  5190               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  7711                           
  7712                           ; Switch size 1, requested type "space"
  7713                           ; Number of cases is 8, Range of values is 0 to 7
  7714                           ; switch strategies available:
  7715                           ; Name         Instructions Cycles
  7716                           ; simple_byte           25    13 (average)
  7717                           ;	Chosen strategy is simple_byte
  7718  012CC4  0A00               	xorlw	0	; case 0
  7719  012CC6  B4D8               	btfsc	status,2,c
  7720  012CC8  D78F               	goto	l934
  7721  012CCA  0A01               	xorlw	1	; case 1
  7722  012CCC  B4D8               	btfsc	status,2,c
  7723  012CCE  D798               	goto	l936
  7724  012CD0  0A03               	xorlw	3	; case 2
  7725  012CD2  B4D8               	btfsc	status,2,c
  7726  012CD4  D7A1               	goto	l937
  7727  012CD6  0A01               	xorlw	1	; case 3
  7728  012CD8  B4D8               	btfsc	status,2,c
  7729  012CDA  D7AA               	goto	l938
  7730  012CDC  0A07               	xorlw	7	; case 4
  7731  012CDE  B4D8               	btfsc	status,2,c
  7732  012CE0  D7B3               	goto	l939
  7733  012CE2  0A01               	xorlw	1	; case 5
  7734  012CE4  B4D8               	btfsc	status,2,c
  7735  012CE6  D7BC               	goto	l940
  7736  012CE8  0A03               	xorlw	3	; case 6
  7737  012CEA  B4D8               	btfsc	status,2,c
  7738  012CEC  D7C5               	goto	l941
  7739  012CEE  0A01               	xorlw	1	; case 7
  7740  012CF0  B4D8               	btfsc	status,2,c
  7741  012CF2  D7CE               	goto	l942
  7742  012CF4  D7D9               	goto	l943
  7743  012CF6                     l935:
  7744                           
  7745                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  7746                           
  7747                           ; BSR set to: 1
  7748  012CF6  0E91               	movlw	low terminal_textAttributes@output_buff
  7749  012CF8  0101               	movlb	1	; () banked
  7750  012CFA  6F17               	movwf	strcat@to& (0+255),b
  7751  012CFC  0E01               	movlw	high terminal_textAttributes@output_buff
  7752  012CFE  6F18               	movwf	(strcat@to+1)& (0+255),b
  7753  012D00  0EFA               	movlw	low STR_19
  7754  012D02  6F19               	movwf	strcat@from& (0+255),b
  7755  012D04  0EFF               	movlw	high STR_19
  7756  012D06  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7757  012D08  ECE0  F0AE         	call	_strcat	;wreg free
  7758                           
  7759                           ;ring_buffer_interface.c: 185: switch (background_color) {
  7760  012D0C  D06C               	goto	l944
  7761  012D0E                     
  7762                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  7763  012D0E  0E91               	movlw	low terminal_textAttributes@output_buff
  7764  012D10  0101               	movlb	1	; () banked
  7765  012D12  6F17               	movwf	strcat@to& (0+255),b
  7766  012D14  0E01               	movlw	high terminal_textAttributes@output_buff
  7767  012D16  6F18               	movwf	(strcat@to+1)& (0+255),b
  7768  012D18  0EC8               	movlw	low STR_30
  7769  012D1A  6F19               	movwf	strcat@from& (0+255),b
  7770  012D1C  0EFF               	movlw	high STR_30
  7771  012D1E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7772  012D20  ECE0  F0AE         	call	_strcat	;wreg free
  7773                           
  7774                           ;ring_buffer_interface.c: 189: break;
  7775  012D24  D07B               	goto	l946
  7776  012D26                     
  7777                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  7778  012D26  0E91               	movlw	low terminal_textAttributes@output_buff
  7779  012D28  0101               	movlb	1	; () banked
  7780  012D2A  6F17               	movwf	strcat@to& (0+255),b
  7781  012D2C  0E01               	movlw	high terminal_textAttributes@output_buff
  7782  012D2E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7783  012D30  0ECE               	movlw	low STR_31
  7784  012D32  6F19               	movwf	strcat@from& (0+255),b
  7785  012D34  0EFF               	movlw	high STR_31
  7786  012D36  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7787  012D38  ECE0  F0AE         	call	_strcat	;wreg free
  7788                           
  7789                           ;ring_buffer_interface.c: 192: break;
  7790  012D3C  D06F               	goto	l946
  7791  012D3E                     
  7792                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  7793  012D3E  0E91               	movlw	low terminal_textAttributes@output_buff
  7794  012D40  0101               	movlb	1	; () banked
  7795  012D42  6F17               	movwf	strcat@to& (0+255),b
  7796  012D44  0E01               	movlw	high terminal_textAttributes@output_buff
  7797  012D46  6F18               	movwf	(strcat@to+1)& (0+255),b
  7798  012D48  0ED4               	movlw	low STR_32
  7799  012D4A  6F19               	movwf	strcat@from& (0+255),b
  7800  012D4C  0EFF               	movlw	high STR_32
  7801  012D4E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7802  012D50  ECE0  F0AE         	call	_strcat	;wreg free
  7803                           
  7804                           ;ring_buffer_interface.c: 195: break;
  7805  012D54  D063               	goto	l946
  7806  012D56                     
  7807                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  7808  012D56  0E91               	movlw	low terminal_textAttributes@output_buff
  7809  012D58  0101               	movlb	1	; () banked
  7810  012D5A  6F17               	movwf	strcat@to& (0+255),b
  7811  012D5C  0E01               	movlw	high terminal_textAttributes@output_buff
  7812  012D5E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7813  012D60  0EDA               	movlw	low STR_33
  7814  012D62  6F19               	movwf	strcat@from& (0+255),b
  7815  012D64  0EFF               	movlw	high STR_33
  7816  012D66  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7817  012D68  ECE0  F0AE         	call	_strcat	;wreg free
  7818                           
  7819                           ;ring_buffer_interface.c: 198: break;
  7820  012D6C  D057               	goto	l946
  7821  012D6E                     
  7822                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  7823  012D6E  0E91               	movlw	low terminal_textAttributes@output_buff
  7824  012D70  0101               	movlb	1	; () banked
  7825  012D72  6F17               	movwf	strcat@to& (0+255),b
  7826  012D74  0E01               	movlw	high terminal_textAttributes@output_buff
  7827  012D76  6F18               	movwf	(strcat@to+1)& (0+255),b
  7828  012D78  0EE0               	movlw	low STR_34
  7829  012D7A  6F19               	movwf	strcat@from& (0+255),b
  7830  012D7C  0EFF               	movlw	high STR_34
  7831  012D7E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7832  012D80  ECE0  F0AE         	call	_strcat	;wreg free
  7833                           
  7834                           ;ring_buffer_interface.c: 201: break;
  7835  012D84  D04B               	goto	l946
  7836  012D86                     
  7837                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  7838  012D86  0E91               	movlw	low terminal_textAttributes@output_buff
  7839  012D88  0101               	movlb	1	; () banked
  7840  012D8A  6F17               	movwf	strcat@to& (0+255),b
  7841  012D8C  0E01               	movlw	high terminal_textAttributes@output_buff
  7842  012D8E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7843  012D90  0EE6               	movlw	low STR_35
  7844  012D92  6F19               	movwf	strcat@from& (0+255),b
  7845  012D94  0EFF               	movlw	high STR_35
  7846  012D96  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7847  012D98  ECE0  F0AE         	call	_strcat	;wreg free
  7848                           
  7849                           ;ring_buffer_interface.c: 204: break;
  7850  012D9C  D03F               	goto	l946
  7851  012D9E                     
  7852                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  7853  012D9E  0E91               	movlw	low terminal_textAttributes@output_buff
  7854  012DA0  0101               	movlb	1	; () banked
  7855  012DA2  6F17               	movwf	strcat@to& (0+255),b
  7856  012DA4  0E01               	movlw	high terminal_textAttributes@output_buff
  7857  012DA6  6F18               	movwf	(strcat@to+1)& (0+255),b
  7858  012DA8  0EEC               	movlw	low STR_36
  7859  012DAA  6F19               	movwf	strcat@from& (0+255),b
  7860  012DAC  0EFF               	movlw	high STR_36
  7861  012DAE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7862  012DB0  ECE0  F0AE         	call	_strcat	;wreg free
  7863                           
  7864                           ;ring_buffer_interface.c: 207: break;
  7865  012DB4  D033               	goto	l946
  7866  012DB6                     
  7867                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  7868  012DB6  0E91               	movlw	low terminal_textAttributes@output_buff
  7869  012DB8  0101               	movlb	1	; () banked
  7870  012DBA  6F17               	movwf	strcat@to& (0+255),b
  7871  012DBC  0E01               	movlw	high terminal_textAttributes@output_buff
  7872  012DBE  6F18               	movwf	(strcat@to+1)& (0+255),b
  7873  012DC0  0EF2               	movlw	low STR_37
  7874  012DC2  6F19               	movwf	strcat@from& (0+255),b
  7875  012DC4  0EFF               	movlw	high STR_37
  7876  012DC6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7877  012DC8  ECE0  F0AE         	call	_strcat	;wreg free
  7878                           
  7879                           ;ring_buffer_interface.c: 210: break;
  7880  012DCC  D027               	goto	l946
  7881  012DCE                     
  7882                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  7883  012DCE  0E91               	movlw	low terminal_textAttributes@output_buff
  7884  012DD0  0101               	movlb	1	; () banked
  7885  012DD2  6F17               	movwf	strcat@to& (0+255),b
  7886  012DD4  0E01               	movlw	high terminal_textAttributes@output_buff
  7887  012DD6  6F18               	movwf	(strcat@to+1)& (0+255),b
  7888  012DD8  0EF2               	movlw	low STR_37
  7889  012DDA  6F19               	movwf	strcat@from& (0+255),b
  7890  012DDC  0EFF               	movlw	high STR_37
  7891  012DDE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7892  012DE0  ECE0  F0AE         	call	_strcat	;wreg free
  7893                           
  7894                           ;ring_buffer_interface.c: 215: }
  7895                           
  7896                           ;ring_buffer_interface.c: 214: break;
  7897  012DE4  D01B               	goto	l946
  7898  012DE6                     l944:
  7899  012DE6  0101               	movlb	1	; () banked
  7900  012DE8  518E               	movf	terminal_textAttributes@background_color& (0+255),w,b
  7901                           
  7902                           ; Switch size 1, requested type "space"
  7903                           ; Number of cases is 8, Range of values is 0 to 7
  7904                           ; switch strategies available:
  7905                           ; Name         Instructions Cycles
  7906                           ; simple_byte           25    13 (average)
  7907                           ;	Chosen strategy is simple_byte
  7908  012DEA  0A00               	xorlw	0	; case 0
  7909  012DEC  B4D8               	btfsc	status,2,c
  7910  012DEE  D78F               	goto	l945
  7911  012DF0  0A01               	xorlw	1	; case 1
  7912  012DF2  B4D8               	btfsc	status,2,c
  7913  012DF4  D798               	goto	l947
  7914  012DF6  0A03               	xorlw	3	; case 2
  7915  012DF8  B4D8               	btfsc	status,2,c
  7916  012DFA  D7A1               	goto	l948
  7917  012DFC  0A01               	xorlw	1	; case 3
  7918  012DFE  B4D8               	btfsc	status,2,c
  7919  012E00  D7AA               	goto	l949
  7920  012E02  0A07               	xorlw	7	; case 4
  7921  012E04  B4D8               	btfsc	status,2,c
  7922  012E06  D7B3               	goto	l950
  7923  012E08  0A01               	xorlw	1	; case 5
  7924  012E0A  B4D8               	btfsc	status,2,c
  7925  012E0C  D7BC               	goto	l951
  7926  012E0E  0A03               	xorlw	3	; case 6
  7927  012E10  B4D8               	btfsc	status,2,c
  7928  012E12  D7C5               	goto	l952
  7929  012E14  0A01               	xorlw	1	; case 7
  7930  012E16  B4D8               	btfsc	status,2,c
  7931  012E18  D7CE               	goto	l953
  7932  012E1A  D7D9               	goto	l954
  7933  012E1C                     l946:
  7934                           
  7935                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  7936                           
  7937                           ; BSR set to: 1
  7938  012E1C  0E91               	movlw	low terminal_textAttributes@output_buff
  7939  012E1E  0101               	movlb	1	; () banked
  7940  012E20  6F17               	movwf	strcat@to& (0+255),b
  7941  012E22  0E01               	movlw	high terminal_textAttributes@output_buff
  7942  012E24  6F18               	movwf	(strcat@to+1)& (0+255),b
  7943  012E26  0EFC               	movlw	low STR_39
  7944  012E28  6F19               	movwf	strcat@from& (0+255),b
  7945  012E2A  0EFF               	movlw	high STR_39
  7946  012E2C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7947  012E2E  ECE0  F0AE         	call	_strcat	;wreg free
  7948                           
  7949                           ;ring_buffer_interface.c: 219: printf(output_buff);
  7950  012E32  0E91               	movlw	low terminal_textAttributes@output_buff
  7951  012E34  0101               	movlb	1	; () banked
  7952  012E36  6F64               	movwf	printf@f& (0+255),b
  7953  012E38  0E01               	movlw	high terminal_textAttributes@output_buff
  7954  012E3A  6F65               	movwf	(printf@f+1)& (0+255),b
  7955  012E3C  EC00  F080         	call	_printf	;wreg free
  7956  012E40  0012               	return		;funcret
  7957  012E42                     __end_of_terminal_textAttributes:
  7958                           	opt stack 0
  7959                           tblptru	equ	0xFF8
  7960                           tblptrh	equ	0xFF7
  7961                           tblptrl	equ	0xFF6
  7962                           tablat	equ	0xFF5
  7963                           intcon	equ	0xFF2
  7964                           postinc0	equ	0xFEE
  7965                           wreg	equ	0xFE8
  7966                           indf1	equ	0xFE7
  7967                           postdec1	equ	0xFE5
  7968                           fsr1h	equ	0xFE2
  7969                           fsr1l	equ	0xFE1
  7970                           indf2	equ	0xFDF
  7971                           postinc2	equ	0xFDE
  7972                           fsr2h	equ	0xFDA
  7973                           fsr2l	equ	0xFD9
  7974                           status	equ	0xFD8
  7975                           
  7976 ;; *************** function _strncpy *****************
  7977 ;; Defined at:
  7978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7981 ;;		 -> terminal_textAttributes@output_buff(15), 
  7982 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7983 ;;		 -> STR_11(3), 
  7984 ;;  size            2   27[BANK1 ] unsigned int 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  cp              2   29[BANK1 ] PTR unsigned char 
  7987 ;;		 -> terminal_textAttributes@output_buff(15), 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  2   23[BANK1 ] PTR unsigned char 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7997 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7998 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8000 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8001 ;;Total ram usage:        8 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:   14
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_terminal_textAttributes
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text6
  8012  01589C                     __ptext6:
  8013                           	opt stack 0
  8014  01589C                     _strncpy:
  8015                           	opt stack 14
  8016                           
  8017                           ;incstack = 0
  8018  01589C  C117  F11D         	movff	strncpy@to,strncpy@cp
  8019  0158A0  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
  8020  0158A4  D018               	goto	l1890
  8021  0158A6  0101               	movlb	1	; () banked
  8022  0158A8  071B               	decf	strncpy@size& (0+255),f,b
  8023  0158AA  A0D8               	btfss	status,0,c
  8024  0158AC  071C               	decf	(strncpy@size+1)& (0+255),f,b
  8025                           
  8026                           ; BSR set to: 1
  8027  0158AE  C119  FFF6         	movff	strncpy@from,tblptrl
  8028  0158B2  C11A  FFF7         	movff	strncpy@from+1,tblptrh
  8029  0158B6  4B19               	infsnz	strncpy@from& (0+255),f,b
  8030  0158B8  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
  8031  0158BA                     	if	0	;tblptru may be non-zero
  8032  0158BA                     	endif
  8033  0158BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8034  0158BA  0E00               	movlw	low (__mediumconst shr (0+16))
  8035  0158BC  6EF8               	movwf	tblptru,c
  8036  0158BE                     	endif
  8037  0158BE  C11D  FFD9         	movff	strncpy@cp,fsr2l
  8038  0158C2  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  8039  0158C6  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  8040  0158C8  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  8041  0158CA  0008               	tblrd		*
  8042  0158CC  CFF5 FFDF          	movff	tablat,indf2
  8043  0158D0  50DF               	movf	indf2,w,c
  8044  0158D2  B4D8               	btfsc	status,2,c
  8045  0158D4  D00E               	goto	l1892
  8046  0158D6                     l1890:
  8047                           
  8048                           ; BSR set to: 1
  8049                           
  8050                           ; BSR set to: 1
  8051  0158D6  0101               	movlb	1	; () banked
  8052  0158D8  511B               	movf	strncpy@size& (0+255),w,b
  8053  0158DA  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
  8054  0158DC  B4D8               	btfsc	status,2,c
  8055  0158DE  D009               	goto	l1892
  8056  0158E0  D7E2               	goto	l1889
  8057  0158E2                     l9081:
  8058                           
  8059                           ; BSR set to: 1
  8060  0158E2  C11D  FFD9         	movff	strncpy@cp,fsr2l
  8061  0158E6  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  8062  0158EA  0E00               	movlw	0
  8063  0158EC  6EDF               	movwf	indf2,c
  8064                           
  8065                           ; BSR set to: 1
  8066  0158EE  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  8067  0158F0  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  8068  0158F2                     l1892:
  8069                           
  8070                           ; BSR set to: 1
  8071                           
  8072                           ; BSR set to: 1
  8073  0158F2  071B               	decf	strncpy@size& (0+255),f,b
  8074  0158F4  A0D8               	btfss	status,0,c
  8075  0158F6  071C               	decf	(strncpy@size+1)& (0+255),f,b
  8076  0158F8  291B               	incf	strncpy@size& (0+255),w,b
  8077  0158FA  E1F3               	bnz	l9081
  8078  0158FC  291C               	incf	(strncpy@size+1)& (0+255),w,b
  8079  0158FE  B4D8               	btfsc	status,2,c
  8080  015900  0012               	return	
  8081  015902  D7EF               	goto	l1893
  8082  015904                     __end_of_strncpy:
  8083                           	opt stack 0
  8084                           tblptru	equ	0xFF8
  8085                           tblptrh	equ	0xFF7
  8086                           tblptrl	equ	0xFF6
  8087                           tablat	equ	0xFF5
  8088                           intcon	equ	0xFF2
  8089                           postinc0	equ	0xFEE
  8090                           wreg	equ	0xFE8
  8091                           indf1	equ	0xFE7
  8092                           postdec1	equ	0xFE5
  8093                           fsr1h	equ	0xFE2
  8094                           fsr1l	equ	0xFE1
  8095                           indf2	equ	0xFDF
  8096                           postinc2	equ	0xFDE
  8097                           fsr2h	equ	0xFDA
  8098                           fsr2l	equ	0xFD9
  8099                           status	equ	0xFD8
  8100                           
  8101 ;; *************** function _strcat *****************
  8102 ;; Defined at:
  8103 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  to              2   23[BANK1 ] PTR unsigned char 
  8106 ;;		 -> terminal_textAttributes@output_buff(15), 
  8107 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  8108 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  8109 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  8110 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  8111 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  8112 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  8113 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  8114 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  8117 ;;		 -> terminal_textAttributes@output_buff(15), 
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  2   23[BANK1 ] PTR unsigned char 
  8120 ;; Registers used:
  8121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8127 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8128 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8130 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8131 ;;Total ram usage:        6 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:   14
  8134 ;; This function calls:
  8135 ;;		Nothing
  8136 ;; This function is called by:
  8137 ;;		_terminal_textAttributes
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text7
  8142  015DC0                     __ptext7:
  8143                           	opt stack 0
  8144  015DC0                     _strcat:
  8145                           	opt stack 14
  8146                           
  8147                           ; BSR set to: 1
  8148                           ;incstack = 0
  8149  015DC0  C117  F11B         	movff	strcat@to,strcat@cp
  8150  015DC4  C118  F11C         	movff	strcat@to+1,strcat@cp+1
  8151  015DC8  D003               	goto	l1865
  8152  015DCA  0101               	movlb	1	; () banked
  8153  015DCC  4B1B               	infsnz	strcat@cp& (0+255),f,b
  8154  015DCE  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  8155  015DD0                     l1865:
  8156                           
  8157                           ; BSR set to: 1
  8158  015DD0  C11B  FFD9         	movff	strcat@cp,fsr2l
  8159  015DD4  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  8160  015DD8  50DF               	movf	indf2,w,c
  8161  015DDA  B4D8               	btfsc	status,2,c
  8162  015DDC  D006               	goto	l1868
  8163  015DDE  D7F5               	goto	l1866
  8164  015DE0  0101               	movlb	1	; () banked
  8165  015DE2  4B1B               	infsnz	strcat@cp& (0+255),f,b
  8166  015DE4  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  8167  015DE6  4B19               	infsnz	strcat@from& (0+255),f,b
  8168  015DE8  2B1A               	incf	(strcat@from+1)& (0+255),f,b
  8169  015DEA                     l1868:
  8170                           
  8171                           ; BSR set to: 1
  8172  015DEA  C119  FFF6         	movff	strcat@from,tblptrl
  8173  015DEE  C11A  FFF7         	movff	strcat@from+1,tblptrh
  8174  015DF2                     	if	0	;tblptru may be non-zero
  8175  015DF2                     	endif
  8176  015DF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8177  015DF2  0E00               	movlw	low (__mediumconst shr (0+16))
  8178  015DF4  6EF8               	movwf	tblptru,c
  8179  015DF6                     	endif
  8180  015DF6  C11B  FFD9         	movff	strcat@cp,fsr2l
  8181  015DFA  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  8182  015DFE  0008               	tblrd		*
  8183  015E00  CFF5 FFDF          	movff	tablat,indf2
  8184  015E04  50DF               	movf	indf2,w,c
  8185  015E06  B4D8               	btfsc	status,2,c
  8186  015E08  0012               	return	
  8187  015E0A  D7EA               	goto	l1869
  8188  015E0C                     __end_of_strcat:
  8189                           	opt stack 0
  8190                           tblptru	equ	0xFF8
  8191                           tblptrh	equ	0xFF7
  8192                           tblptrl	equ	0xFF6
  8193                           tablat	equ	0xFF5
  8194                           intcon	equ	0xFF2
  8195                           postinc0	equ	0xFEE
  8196                           wreg	equ	0xFE8
  8197                           indf1	equ	0xFE7
  8198                           postdec1	equ	0xFE5
  8199                           fsr1h	equ	0xFE2
  8200                           fsr1l	equ	0xFE1
  8201                           indf2	equ	0xFDF
  8202                           postinc2	equ	0xFDE
  8203                           fsr2h	equ	0xFDA
  8204                           fsr2l	equ	0xFD9
  8205                           status	equ	0xFD8
  8206                           
  8207 ;; *************** function _terminal_printNewline *****************
  8208 ;; Defined at:
  8209 ;;		line 230 in file "ring_buffer_interface.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8227 ;;Total ram usage:        0 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:   18
  8230 ;; This function calls:
  8231 ;;		_printf
  8232 ;; This function is called by:
  8233 ;;		_ringBufferLUT
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text8
  8238  016384                     __ptext8:
  8239                           	opt stack 0
  8240  016384                     _terminal_printNewline:
  8241                           	opt stack 10
  8242                           
  8243                           ;ring_buffer_interface.c: 232: printf("\n\r");
  8244                           
  8245                           ;incstack = 0
  8246  016384  0EEC               	movlw	low (STR_83+68)
  8247  016386  0101               	movlb	1	; () banked
  8248  016388  6F64               	movwf	printf@f& (0+255),b
  8249  01638A  0EFA               	movlw	high (STR_83+68)
  8250  01638C  6F65               	movwf	(printf@f+1)& (0+255),b
  8251  01638E  EC00  F080         	call	_printf	;wreg free
  8252  016392  0012               	return		;funcret
  8253  016394                     __end_of_terminal_printNewline:
  8254                           	opt stack 0
  8255                           tblptru	equ	0xFF8
  8256                           tblptrh	equ	0xFF7
  8257                           tblptrl	equ	0xFF6
  8258                           tablat	equ	0xFF5
  8259                           intcon	equ	0xFF2
  8260                           postinc0	equ	0xFEE
  8261                           wreg	equ	0xFE8
  8262                           indf1	equ	0xFE7
  8263                           postdec1	equ	0xFE5
  8264                           fsr1h	equ	0xFE2
  8265                           fsr1l	equ	0xFE1
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           fsr2h	equ	0xFDA
  8269                           fsr2l	equ	0xFD9
  8270                           status	equ	0xFD8
  8271                           
  8272 ;; *************** function _strstr *****************
  8273 ;; Defined at:
  8274 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
  8277 ;;		 -> NULL(0), line(64), 
  8278 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
  8279 ;;		 -> STR_77(25), 
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;		None
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  2   38[BANK1 ] PTR unsigned char 
  8284 ;; Registers used:
  8285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8291 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;Total ram usage:        4 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; Hardware stack levels required when called:   15
  8298 ;; This function calls:
  8299 ;;		_strchr
  8300 ;;		_strlen
  8301 ;;		_strncmp
  8302 ;; This function is called by:
  8303 ;;		_ringBufferLUT
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           	psect	text9
  8308  0153B8                     __ptext9:
  8309                           	opt stack 0
  8310  0153B8                     _strstr:
  8311                           	opt stack 13
  8312                           
  8313                           ;incstack = 0
  8314  0153B8  D034               	goto	l1904
  8315  0153BA  C126  F11D         	movff	strstr@s1,strncmp@s1
  8316  0153BE  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
  8317  0153C2  C128  F11F         	movff	strstr@s2,strncmp@s2
  8318  0153C6  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
  8319  0153CA  C128  F117         	movff	strstr@s2,strlen@s
  8320  0153CE  C129  F118         	movff	strstr@s2+1,strlen@s+1
  8321  0153D2  EC3A  F0AE         	call	_strlen	;wreg free
  8322  0153D6  C117  F121         	movff	?_strlen,strncmp@len
  8323  0153DA  C118  F122         	movff	?_strlen+1,strncmp@len+1
  8324  0153DE  EC4C  F0A9         	call	_strncmp	;wreg free
  8325  0153E2  0101               	movlb	1	; () banked
  8326  0153E4  511D               	movf	?_strncmp& (0+255),w,b
  8327  0153E6  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8328  0153E8  A4D8               	btfss	status,2,c
  8329  0153EA  D005               	goto	l1906
  8330                           
  8331                           ; BSR set to: 1
  8332  0153EC  C126  F126         	movff	strstr@s1,?_strstr
  8333  0153F0  C127  F127         	movff	strstr@s1+1,?_strstr+1
  8334                           
  8335                           ; BSR set to: 1
  8336  0153F4  0012               	return	
  8337  0153F6                     l1906:
  8338                           
  8339                           ; BSR set to: 1
  8340                           
  8341                           ; BSR set to: 1
  8342  0153F6  0E01               	movlw	1
  8343  0153F8  2526               	addwf	strstr@s1& (0+255),w,b
  8344  0153FA  6F17               	movwf	strchr@ptr& (0+255),b
  8345  0153FC  0E00               	movlw	0
  8346  0153FE  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
  8347  015400  6F18               	movwf	(strchr@ptr+1)& (0+255),b
  8348  015402  C128  FFF6         	movff	strstr@s2,tblptrl
  8349  015406  C129  FFF7         	movff	strstr@s2+1,tblptrh
  8350  01540A                     	if	0	;tblptru may be non-zero
  8351  01540A                     	endif
  8352  01540A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8353  01540A  0E00               	movlw	low (__mediumconst shr (0+16))
  8354  01540C  6EF8               	movwf	tblptru,c
  8355  01540E                     	endif
  8356  01540E  0008               	tblrd		*
  8357  015410  50F5               	movf	tablat,w,c
  8358  015412  6F19               	movwf	strchr@chr& (0+255),b
  8359  015414  6B1A               	clrf	(strchr@chr+1)& (0+255),b
  8360  015416  ECF3  F0AF         	call	_strchr	;wreg free
  8361  01541A  C117  F126         	movff	?_strchr,strstr@s1
  8362  01541E  C118  F127         	movff	?_strchr+1,strstr@s1+1
  8363  015422                     l1904:
  8364  015422  0101               	movlb	1	; () banked
  8365  015424  5126               	movf	strstr@s1& (0+255),w,b
  8366  015426  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
  8367  015428  B4D8               	btfsc	status,2,c
  8368  01542A  D007               	goto	u11140
  8369                           
  8370                           ; BSR set to: 1
  8371  01542C  C126  FFD9         	movff	strstr@s1,fsr2l
  8372  015430  C127  FFDA         	movff	strstr@s1+1,fsr2h
  8373  015434  50DF               	movf	indf2,w,c
  8374  015436  A4D8               	btfss	status,2,c
  8375  015438  D7C0               	goto	l1905
  8376  01543A                     u11140:
  8377                           
  8378                           ; BSR set to: 1
  8379                           
  8380                           ; BSR set to: 1
  8381                           
  8382                           ; BSR set to: 1
  8383  01543A  0E00               	movlw	0
  8384  01543C  6F26               	movwf	?_strstr& (0+255),b
  8385  01543E  0E00               	movlw	0
  8386  015440  6F27               	movwf	(?_strstr+1)& (0+255),b
  8387  015442  0012               	return	
  8388  015444                     __end_of_strstr:
  8389                           	opt stack 0
  8390                           tblptru	equ	0xFF8
  8391                           tblptrh	equ	0xFF7
  8392                           tblptrl	equ	0xFF6
  8393                           tablat	equ	0xFF5
  8394                           intcon	equ	0xFF2
  8395                           postinc0	equ	0xFEE
  8396                           wreg	equ	0xFE8
  8397                           indf1	equ	0xFE7
  8398                           postdec1	equ	0xFE5
  8399                           fsr1h	equ	0xFE2
  8400                           fsr1l	equ	0xFE1
  8401                           indf2	equ	0xFDF
  8402                           postinc2	equ	0xFDE
  8403                           fsr2h	equ	0xFDA
  8404                           fsr2l	equ	0xFD9
  8405                           status	equ	0xFD8
  8406                           
  8407 ;; *************** function _strncmp *****************
  8408 ;; Defined at:
  8409 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
  8412 ;;		 -> NULL(0), line(64), 
  8413 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
  8414 ;;		 -> STR_77(25), 
  8415 ;;  len             2   33[BANK1 ] unsigned int 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;		None
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  2   29[BANK1 ] int 
  8420 ;; Registers used:
  8421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8427 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8429 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8430 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8431 ;;Total ram usage:        9 bytes
  8432 ;; Hardware stack levels used:    1
  8433 ;; Hardware stack levels required when called:   14
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_strstr
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text10
  8442  015298                     __ptext10:
  8443                           	opt stack 0
  8444  015298                     _strncmp:
  8445                           	opt stack 13
  8446                           
  8447                           ; BSR set to: 1
  8448                           ;incstack = 0
  8449  015298  D039               	goto	l1963
  8450  01529A                     l9285:
  8451  01529A  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8452  01529E  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8453  0152A2  50DF               	movf	indf2,w,c
  8454  0152A4  B4D8               	btfsc	status,2,c
  8455  0152A6  D012               	goto	u10910
  8456  0152A8  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8457  0152AC  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8458  0152B0  50DF               	movf	indf2,w,c
  8459  0152B2  0101               	movlb	1	; () banked
  8460  0152B4  6F23               	movwf	??_strncmp& (0+255),b
  8461  0152B6  C11F  FFF6         	movff	strncmp@s2,tblptrl
  8462  0152BA  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  8463  0152BE                     	if	0	;tblptru may be non-zero
  8464  0152BE                     	endif
  8465  0152BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8466  0152BE  0E00               	movlw	low (__mediumconst shr (0+16))
  8467  0152C0  6EF8               	movwf	tblptru,c
  8468  0152C2                     	endif
  8469  0152C2  0008               	tblrd		*
  8470  0152C4  50F5               	movf	tablat,w,c
  8471  0152C6  1923               	xorwf	??_strncmp& (0+255),w,b
  8472  0152C8  B4D8               	btfsc	status,2,c
  8473  0152CA  D01C               	goto	l1965
  8474  0152CC                     u10910:
  8475                           
  8476                           ; BSR set to: 1
  8477  0152CC  C11F  FFF6         	movff	strncmp@s2,tblptrl
  8478  0152D0  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  8479  0152D4                     	if	0	;tblptru may be non-zero
  8480  0152D4                     	endif
  8481  0152D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8482  0152D4  0E00               	movlw	low (__mediumconst shr (0+16))
  8483  0152D6  6EF8               	movwf	tblptru,c
  8484  0152D8                     	endif
  8485  0152D8  0008               	tblrd		*
  8486  0152DA  50F5               	movf	tablat,w,c
  8487  0152DC  0101               	movlb	1	; () banked
  8488  0152DE  6F23               	movwf	??_strncmp& (0+255),b
  8489  0152E0  6B24               	clrf	(??_strncmp+1)& (0+255),b
  8490  0152E2  1F23               	comf	??_strncmp& (0+255),f,b
  8491  0152E4  1F24               	comf	(??_strncmp+1)& (0+255),f,b
  8492  0152E6  4B23               	infsnz	??_strncmp& (0+255),f,b
  8493  0152E8  2B24               	incf	(??_strncmp+1)& (0+255),f,b
  8494  0152EA  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8495  0152EE  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8496  0152F2  50DF               	movf	indf2,w,c
  8497  0152F4  6F25               	movwf	(??_strncmp+2)& (0+255),b
  8498  0152F6  5125               	movf	(??_strncmp+2)& (0+255),w,b
  8499  0152F8  2523               	addwf	??_strncmp& (0+255),w,b
  8500  0152FA  6F1D               	movwf	?_strncmp& (0+255),b
  8501  0152FC  0E00               	movlw	0
  8502  0152FE  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
  8503  015300  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  8504                           
  8505                           ; BSR set to: 1
  8506  015302  0012               	return	
  8507  015304                     l1965:
  8508                           
  8509                           ; BSR set to: 1
  8510                           
  8511                           ; BSR set to: 1
  8512  015304  4B1D               	infsnz	strncmp@s1& (0+255),f,b
  8513  015306  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
  8514  015308  4B1F               	infsnz	strncmp@s2& (0+255),f,b
  8515  01530A  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
  8516  01530C                     l1963:
  8517                           
  8518                           ; BSR set to: 1
  8519  01530C  0101               	movlb	1	; () banked
  8520  01530E  0721               	decf	strncmp@len& (0+255),f,b
  8521  015310  A0D8               	btfss	status,0,c
  8522  015312  0722               	decf	(strncmp@len+1)& (0+255),f,b
  8523  015314  2921               	incf	strncmp@len& (0+255),w,b
  8524  015316  E1C1               	bnz	l9285
  8525  015318  2922               	incf	(strncmp@len+1)& (0+255),w,b
  8526  01531A  A4D8               	btfss	status,2,c
  8527  01531C  D7BE               	goto	l1964
  8528                           
  8529                           ; BSR set to: 1
  8530                           
  8531                           ; BSR set to: 1
  8532  01531E  0E00               	movlw	0
  8533  015320  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  8534  015322  0E00               	movlw	0
  8535  015324  6F1D               	movwf	?_strncmp& (0+255),b
  8536  015326  0012               	return	
  8537  015328                     __end_of_strncmp:
  8538                           	opt stack 0
  8539                           tblptru	equ	0xFF8
  8540                           tblptrh	equ	0xFF7
  8541                           tblptrl	equ	0xFF6
  8542                           tablat	equ	0xFF5
  8543                           intcon	equ	0xFF2
  8544                           postinc0	equ	0xFEE
  8545                           wreg	equ	0xFE8
  8546                           indf1	equ	0xFE7
  8547                           postdec1	equ	0xFE5
  8548                           fsr1h	equ	0xFE2
  8549                           fsr1l	equ	0xFE1
  8550                           indf2	equ	0xFDF
  8551                           postinc2	equ	0xFDE
  8552                           fsr2h	equ	0xFDA
  8553                           fsr2l	equ	0xFD9
  8554                           status	equ	0xFD8
  8555                           
  8556 ;; *************** function _strlen *****************
  8557 ;; Defined at:
  8558 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  s               2   23[BANK1 ] PTR const unsigned char 
  8561 ;;		 -> STR_77(25), line(64), 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
  8564 ;;		 -> STR_77(25), line(64), 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  2   23[BANK1 ] unsigned int 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8574 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;Total ram usage:        6 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:   14
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		_terminal_ringBufferPull
  8585 ;;		_strstr
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text11
  8590  015C74                     __ptext11:
  8591                           	opt stack 0
  8592  015C74                     _strlen:
  8593                           	opt stack 15
  8594                           
  8595                           ; BSR set to: 1
  8596                           ;incstack = 0
  8597  015C74  C117  F11B         	movff	strlen@s,strlen@cp
  8598  015C78  C118  F11C         	movff	strlen@s+1,strlen@cp+1
  8599  015C7C  D003               	goto	l1882
  8600  015C7E  0101               	movlb	1	; () banked
  8601  015C80  4B1B               	infsnz	strlen@cp& (0+255),f,b
  8602  015C82  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
  8603  015C84                     l1882:
  8604                           
  8605                           ; BSR set to: 1
  8606  015C84  C11B  FFF6         	movff	strlen@cp,tblptrl
  8607  015C88  C11C  FFF7         	movff	strlen@cp+1,tblptrh
  8608  015C8C  0E00               	movlw	low (__mediumconst shr (0+16))
  8609  015C8E  6EF8               	movwf	tblptru,c
  8610  015C90  0E0D               	movlw	(high __ramtop+-1)
  8611  015C92  64F7               	cpfsgt	tblptrh,c
  8612  015C94  D003               	bra	u10887
  8613  015C96  0008               	tblrd		*
  8614  015C98  50F5               	movf	tablat,w,c
  8615  015C9A  D005               	bra	u10880
  8616  015C9C                     u10887:
  8617  015C9C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8618  015CA0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8619  015CA4  50E7               	movf	indf1,w,c
  8620  015CA6                     u10880:
  8621  015CA6  0900               	iorlw	0
  8622  015CA8  A4D8               	btfss	status,2,c
  8623  015CAA  D7E9               	goto	l1883
  8624  015CAC  C117  F119         	movff	strlen@s,??_strlen
  8625  015CB0  C118  F11A         	movff	strlen@s+1,??_strlen+1
  8626  015CB4  0101               	movlb	1	; () banked
  8627  015CB6  1F19               	comf	??_strlen& (0+255),f,b
  8628  015CB8  1F1A               	comf	(??_strlen+1)& (0+255),f,b
  8629  015CBA  4B19               	infsnz	??_strlen& (0+255),f,b
  8630  015CBC  2B1A               	incf	(??_strlen+1)& (0+255),f,b
  8631  015CBE  511B               	movf	strlen@cp& (0+255),w,b
  8632  015CC0  2519               	addwf	??_strlen& (0+255),w,b
  8633  015CC2  6F17               	movwf	?_strlen& (0+255),b
  8634  015CC4  511C               	movf	(strlen@cp+1)& (0+255),w,b
  8635  015CC6  211A               	addwfc	(??_strlen+1)& (0+255),w,b
  8636  015CC8  6F18               	movwf	(?_strlen+1)& (0+255),b
  8637  015CCA  0012               	return	
  8638  015CCC                     __end_of_strlen:
  8639                           	opt stack 0
  8640                           tblptru	equ	0xFF8
  8641                           tblptrh	equ	0xFF7
  8642                           tblptrl	equ	0xFF6
  8643                           tablat	equ	0xFF5
  8644                           intcon	equ	0xFF2
  8645                           postinc0	equ	0xFEE
  8646                           wreg	equ	0xFE8
  8647                           indf1	equ	0xFE7
  8648                           postdec1	equ	0xFE5
  8649                           fsr1h	equ	0xFE2
  8650                           fsr1l	equ	0xFE1
  8651                           indf2	equ	0xFDF
  8652                           postinc2	equ	0xFDE
  8653                           fsr2h	equ	0xFDA
  8654                           fsr2l	equ	0xFD9
  8655                           status	equ	0xFD8
  8656                           
  8657 ;; *************** function _strchr *****************
  8658 ;; Defined at:
  8659 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
  8662 ;;		 -> NULL(0), line(64), 
  8663 ;;  chr             2   25[BANK1 ] int 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;		None
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  2   23[BANK1 ] PTR unsigned char 
  8668 ;; Registers used:
  8669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 0/0
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8675 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8677 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8678 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;Total ram usage:        5 bytes
  8680 ;; Hardware stack levels used:    1
  8681 ;; Hardware stack levels required when called:   14
  8682 ;; This function calls:
  8683 ;;		Nothing
  8684 ;; This function is called by:
  8685 ;;		_strstr
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text12
  8690  015FE6                     __ptext12:
  8691                           	opt stack 0
  8692  015FE6                     _strchr:
  8693                           	opt stack 13
  8694                           
  8695                           ; BSR set to: 1
  8696                           ;incstack = 0
  8697  015FE6  C117  FFD9         	movff	strchr@ptr,fsr2l
  8698  015FEA  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8699  015FEE  0101               	movlb	1	; () banked
  8700  015FF0  5119               	movf	strchr@chr& (0+255),w,b
  8701  015FF2  18DE               	xorwf	postinc2,w,c
  8702  015FF4  A4D8               	btfss	status,2,c
  8703  015FF6  D005               	goto	l1958
  8704                           
  8705                           ; BSR set to: 1
  8706  015FF8  C117  F117         	movff	strchr@ptr,?_strchr
  8707  015FFC  C118  F118         	movff	strchr@ptr+1,?_strchr+1
  8708                           
  8709                           ; BSR set to: 1
  8710  016000  0012               	return	
  8711  016002                     l1958:
  8712                           
  8713                           ; BSR set to: 1
  8714                           
  8715                           ; BSR set to: 1
  8716  016002  C117  FFD9         	movff	strchr@ptr,fsr2l
  8717  016006  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8718  01600A  4B17               	infsnz	strchr@ptr& (0+255),f,b
  8719  01600C  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
  8720  01600E  50DF               	movf	indf2,w,c
  8721  016010  A4D8               	btfss	status,2,c
  8722  016012  D7E9               	goto	_strchr
  8723                           
  8724                           ; BSR set to: 1
  8725                           
  8726                           ; BSR set to: 1
  8727  016014  0E00               	movlw	0
  8728  016016  6F17               	movwf	?_strchr& (0+255),b
  8729  016018  0E00               	movlw	0
  8730  01601A  6F18               	movwf	(?_strchr+1)& (0+255),b
  8731  01601C  0012               	return	
  8732  01601E                     __end_of_strchr:
  8733                           	opt stack 0
  8734                           tblptru	equ	0xFF8
  8735                           tblptrh	equ	0xFF7
  8736                           tblptrl	equ	0xFF6
  8737                           tablat	equ	0xFF5
  8738                           intcon	equ	0xFF2
  8739                           postinc0	equ	0xFEE
  8740                           wreg	equ	0xFE8
  8741                           indf1	equ	0xFE7
  8742                           postdec1	equ	0xFE5
  8743                           fsr1h	equ	0xFE2
  8744                           fsr1l	equ	0xFE1
  8745                           indf2	equ	0xFDF
  8746                           postinc2	equ	0xFDE
  8747                           fsr2h	equ	0xFDA
  8748                           fsr2l	equ	0xFD9
  8749                           status	equ	0xFD8
  8750                           
  8751 ;; *************** function _strcmp *****************
  8752 ;; Defined at:
  8753 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
  8756 ;;		 -> line(64), 
  8757 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
  8758 ;;		 -> STR_86(5), STR_84(9), STR_75(13), STR_73(12), 
  8759 ;;		 -> STR_71(16), STR_69(15), STR_67(15), STR_65(21), 
  8760 ;;		 -> STR_63(21), STR_61(26), STR_59(14), STR_57(13), 
  8761 ;;		 -> STR_55(18), STR_53(15), STR_51(16), STR_48(4), 
  8762 ;;		 -> STR_47(6), STR_44(6), STR_41(6), 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;  r               1   28[BANK1 ] char 
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  2   23[BANK1 ] int 
  8767 ;; Registers used:
  8768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8774 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;Total ram usage:        6 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; Hardware stack levels required when called:   14
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_ringBufferLUT
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text13
  8789  015D22                     __ptext13:
  8790                           	opt stack 0
  8791  015D22                     _strcmp:
  8792                           	opt stack 14
  8793                           
  8794                           ; BSR set to: 1
  8795                           ;incstack = 0
  8796  015D22  D005               	goto	l1874
  8797  015D24  0101               	movlb	1	; () banked
  8798  015D26  4B17               	infsnz	strcmp@s1& (0+255),f,b
  8799  015D28  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
  8800  015D2A  4B19               	infsnz	strcmp@s2& (0+255),f,b
  8801  015D2C  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
  8802  015D2E                     l1874:
  8803                           
  8804                           ; BSR set to: 1
  8805  015D2E  C117  FFD9         	movff	strcmp@s1,fsr2l
  8806  015D32  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8807  015D36  50DF               	movf	indf2,w,c
  8808  015D38  0101               	movlb	1	; () banked
  8809  015D3A  6F1B               	movwf	??_strcmp& (0+255),b
  8810  015D3C  C119  FFF6         	movff	strcmp@s2,tblptrl
  8811  015D40  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
  8812  015D44                     	if	0	;tblptru may be non-zero
  8813  015D44                     	endif
  8814  015D44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8815  015D44  0E00               	movlw	low (__mediumconst shr (0+16))
  8816  015D46  6EF8               	movwf	tblptru,c
  8817  015D48                     	endif
  8818  015D48  0008               	tblrd		*
  8819  015D4A  50F5               	movf	tablat,w,c
  8820  015D4C  0800               	sublw	0
  8821  015D4E  251B               	addwf	??_strcmp& (0+255),w,b
  8822  015D50  6F1C               	movwf	strcmp@r& (0+255),b
  8823  015D52  511C               	movf	strcmp@r& (0+255),w,b
  8824  015D54  A4D8               	btfss	status,2,c
  8825  015D56  D007               	goto	u11110
  8826                           
  8827                           ; BSR set to: 1
  8828  015D58  C117  FFD9         	movff	strcmp@s1,fsr2l
  8829  015D5C  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8830  015D60  50DF               	movf	indf2,w,c
  8831  015D62  A4D8               	btfss	status,2,c
  8832  015D64  D7DF               	goto	l1875
  8833  015D66                     u11110:
  8834                           
  8835                           ; BSR set to: 1
  8836                           
  8837                           ; BSR set to: 1
  8838                           
  8839                           ; BSR set to: 1
  8840  015D66  511C               	movf	strcmp@r& (0+255),w,b
  8841  015D68  6F17               	movwf	?_strcmp& (0+255),b
  8842  015D6A  6B18               	clrf	(?_strcmp+1)& (0+255),b
  8843  015D6C  BF17               	btfsc	?_strcmp& (0+255),7,b
  8844  015D6E  0718               	decf	(?_strcmp+1)& (0+255),f,b
  8845  015D70  0012               	return	
  8846  015D72                     __end_of_strcmp:
  8847                           	opt stack 0
  8848                           tblptru	equ	0xFF8
  8849                           tblptrh	equ	0xFF7
  8850                           tblptrl	equ	0xFF6
  8851                           tablat	equ	0xFF5
  8852                           intcon	equ	0xFF2
  8853                           postinc0	equ	0xFEE
  8854                           wreg	equ	0xFE8
  8855                           indf1	equ	0xFE7
  8856                           postdec1	equ	0xFE5
  8857                           fsr1h	equ	0xFE2
  8858                           fsr1l	equ	0xFE1
  8859                           indf2	equ	0xFDF
  8860                           postinc2	equ	0xFDE
  8861                           fsr2h	equ	0xFDA
  8862                           fsr2l	equ	0xFD9
  8863                           status	equ	0xFD8
  8864                           
  8865 ;; *************** function _atoi *****************
  8866 ;; Defined at:
  8867 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;  s               2   43[BANK1 ] PTR const unsigned char 
  8870 ;;		 -> ringBufferLUT@arg_buff(3), 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;  a               2   48[BANK1 ] int 
  8873 ;;  sign            1   47[BANK1 ] unsigned char 
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  2   43[BANK1 ] int 
  8876 ;; Registers used:
  8877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8883 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8884 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8885 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8886 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8887 ;;Total ram usage:        7 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; Hardware stack levels required when called:   15
  8890 ;; This function calls:
  8891 ;;		___wmul
  8892 ;;		_isdigit
  8893 ;; This function is called by:
  8894 ;;		_ringBufferLUT
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           	psect	text14
  8899  014DB8                     __ptext14:
  8900                           	opt stack 0
  8901  014DB8                     _atoi:
  8902                           	opt stack 13
  8903                           
  8904                           ; BSR set to: 1
  8905                           ;incstack = 0
  8906  014DB8  D003               	goto	l1387
  8907  014DBA  0101               	movlb	1	; () banked
  8908  014DBC  4B2B               	infsnz	atoi@s& (0+255),f,b
  8909  014DBE  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8910  014DC0                     l1387:
  8911                           
  8912                           ; BSR set to: 1
  8913  014DC0  C12B  FFD9         	movff	atoi@s,fsr2l
  8914  014DC4  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8915  014DC8  0E20               	movlw	32
  8916  014DCA  18DE               	xorwf	postinc2,w,c
  8917  014DCC  B4D8               	btfsc	status,2,c
  8918  014DCE  D7F5               	goto	l1388
  8919  014DD0  C12B  FFD9         	movff	atoi@s,fsr2l
  8920  014DD4  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8921  014DD8  0E09               	movlw	9
  8922  014DDA  18DE               	xorwf	postinc2,w,c
  8923  014DDC  B4D8               	btfsc	status,2,c
  8924  014DDE  D7ED               	goto	l1388
  8925  014DE0  0E00               	movlw	0
  8926  014DE2  0101               	movlb	1	; () banked
  8927  014DE4  6F31               	movwf	(atoi@a+1)& (0+255),b
  8928  014DE6  0E00               	movlw	0
  8929  014DE8  6F30               	movwf	atoi@a& (0+255),b
  8930  014DEA  0E00               	movlw	0
  8931  014DEC  6F2F               	movwf	atoi@sign& (0+255),b
  8932                           
  8933                           ; BSR set to: 1
  8934  014DEE  C12B  FFD9         	movff	atoi@s,fsr2l
  8935  014DF2  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8936  014DF6  0E2D               	movlw	45
  8937  014DF8  18DE               	xorwf	postinc2,w,c
  8938  014DFA  A4D8               	btfss	status,2,c
  8939  014DFC  D002               	goto	l1390
  8940                           
  8941                           ; BSR set to: 1
  8942  014DFE  2B2F               	incf	atoi@sign& (0+255),f,b
  8943  014E00  D026               	goto	l9513
  8944  014E02                     l1390:
  8945                           
  8946                           ; BSR set to: 1
  8947                           
  8948                           ; BSR set to: 1
  8949  014E02  C12B  FFD9         	movff	atoi@s,fsr2l
  8950  014E06  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8951  014E0A  0E2B               	movlw	43
  8952  014E0C  18DE               	xorwf	postinc2,w,c
  8953  014E0E  A4D8               	btfss	status,2,c
  8954  014E10  D020               	goto	l1393
  8955  014E12  D01D               	goto	l9513
  8956  014E14                     
  8957                           ; BSR set to: 1
  8958  014E14  C130  F125         	movff	atoi@a,___wmul@multiplier
  8959  014E18  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
  8960  014E1C  0E00               	movlw	0
  8961  014E1E  0101               	movlb	1	; () banked
  8962  014E20  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8963  014E22  0E0A               	movlw	10
  8964  014E24  6F27               	movwf	___wmul@multiplicand& (0+255),b
  8965  014E26  ECBB  F0B0         	call	___wmul	;wreg free
  8966  014E2A  C12B  FFD9         	movff	atoi@s,fsr2l
  8967  014E2E  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8968  014E32  50DF               	movf	indf2,w,c
  8969  014E34  0101               	movlb	1	; () banked
  8970  014E36  6F2D               	movwf	??_atoi& (0+255),b
  8971  014E38  6B2E               	clrf	(??_atoi+1)& (0+255),b
  8972  014E3A  5125               	movf	?___wmul& (0+255),w,b
  8973  014E3C  272D               	addwf	??_atoi& (0+255),f,b
  8974  014E3E  5126               	movf	(?___wmul+1)& (0+255),w,b
  8975  014E40  232E               	addwfc	(??_atoi+1)& (0+255),f,b
  8976  014E42  0ED0               	movlw	208
  8977  014E44  252D               	addwf	??_atoi& (0+255),w,b
  8978  014E46  6F30               	movwf	atoi@a& (0+255),b
  8979  014E48  0EFF               	movlw	255
  8980  014E4A  212E               	addwfc	(??_atoi+1)& (0+255),w,b
  8981  014E4C  6F31               	movwf	(atoi@a+1)& (0+255),b
  8982  014E4E                     l9513:
  8983                           
  8984                           ; BSR set to: 1
  8985  014E4E  4B2B               	infsnz	atoi@s& (0+255),f,b
  8986  014E50  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8987  014E52                     l1393:
  8988                           
  8989                           ; BSR set to: 1
  8990                           
  8991                           ; BSR set to: 1
  8992  014E52  C12B  FFD9         	movff	atoi@s,fsr2l
  8993  014E56  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8994  014E5A  50DF               	movf	indf2,w,c
  8995  014E5C  EC54  F0B1         	call	_isdigit
  8996  014E60  B0D8               	btfsc	status,0,c
  8997  014E62  D7D8               	goto	l1394
  8998  014E64  0101               	movlb	1	; () banked
  8999  014E66  512F               	movf	atoi@sign& (0+255),w,b
  9000  014E68  B4D8               	btfsc	status,2,c
  9001  014E6A  D00D               	goto	l1396
  9002                           
  9003                           ; BSR set to: 1
  9004  014E6C  C130  F12D         	movff	atoi@a,??_atoi
  9005  014E70  C131  F12E         	movff	atoi@a+1,??_atoi+1
  9006  014E74  1F2D               	comf	??_atoi& (0+255),f,b
  9007  014E76  1F2E               	comf	(??_atoi+1)& (0+255),f,b
  9008  014E78  4B2D               	infsnz	??_atoi& (0+255),f,b
  9009  014E7A  2B2E               	incf	(??_atoi+1)& (0+255),f,b
  9010  014E7C  C12D  F12B         	movff	??_atoi,?_atoi
  9011  014E80  C12E  F12C         	movff	??_atoi+1,?_atoi+1
  9012  014E84  0012               	return	
  9013  014E86                     l1396:
  9014                           
  9015                           ; BSR set to: 1
  9016  014E86  C130  F12B         	movff	atoi@a,?_atoi
  9017  014E8A  C131  F12C         	movff	atoi@a+1,?_atoi+1
  9018                           
  9019                           ; BSR set to: 1
  9020  014E8E  0012               	return		;funcret
  9021  014E90                     __end_of_atoi:
  9022                           	opt stack 0
  9023                           tblptru	equ	0xFF8
  9024                           tblptrh	equ	0xFF7
  9025                           tblptrl	equ	0xFF6
  9026                           tablat	equ	0xFF5
  9027                           intcon	equ	0xFF2
  9028                           postinc0	equ	0xFEE
  9029                           wreg	equ	0xFE8
  9030                           indf1	equ	0xFE7
  9031                           postdec1	equ	0xFE5
  9032                           fsr1h	equ	0xFE2
  9033                           fsr1l	equ	0xFE1
  9034                           indf2	equ	0xFDF
  9035                           postinc2	equ	0xFDE
  9036                           fsr2h	equ	0xFDA
  9037                           fsr2l	equ	0xFD9
  9038                           status	equ	0xFD8
  9039                           
  9040 ;; *************** function ___ftdiv *****************
  9041 ;; Defined at:
  9042 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  f1              3   55[BANK1 ] float 
  9045 ;;  f2              3   58[BANK1 ] float 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  f3              3   65[BANK1 ] float 
  9048 ;;  sign            1   69[BANK1 ] unsigned char 
  9049 ;;  exp             1   68[BANK1 ] unsigned char 
  9050 ;;  cntr            1   64[BANK1 ] unsigned char 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  3   55[BANK1 ] float 
  9053 ;; Registers used:
  9054 ;;		wreg, status,2, status,0, cstack
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9060 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9064 ;;Total ram usage:       15 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:   15
  9067 ;; This function calls:
  9068 ;;		___ftpack
  9069 ;; This function is called by:
  9070 ;;		_ringBufferLUT
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text15
  9075  014A32                     __ptext15:
  9076                           	opt stack 0
  9077  014A32                     ___ftdiv:
  9078                           	opt stack 13
  9079                           
  9080                           ; BSR set to: 1
  9081                           ;incstack = 0
  9082  014A32  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
  9083  014A36  0101               	movlb	1	; () banked
  9084  014A38  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  9085  014A3A  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  9086  014A3C  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9087  014A3E  373D               	rlcf	??___ftdiv& (0+255),f,b
  9088  014A40  E301               	bnc	u11211
  9089  014A42  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  9090  014A44                     u11211:
  9091  014A44  513D               	movf	??___ftdiv& (0+255),w,b
  9092  014A46  6F44               	movwf	___ftdiv@exp& (0+255),b
  9093  014A48  5144               	movf	___ftdiv@exp& (0+255),w,b
  9094  014A4A  A4D8               	btfss	status,2,c
  9095  014A4C  D007               	goto	l1546
  9096                           
  9097                           ; BSR set to: 1
  9098  014A4E  0E00               	movlw	0
  9099  014A50  6F37               	movwf	?___ftdiv& (0+255),b
  9100  014A52  0E00               	movlw	0
  9101  014A54  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  9102  014A56  0E00               	movlw	0
  9103  014A58  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  9104                           
  9105                           ; BSR set to: 1
  9106  014A5A  0012               	return	
  9107  014A5C                     l1546:
  9108                           
  9109                           ; BSR set to: 1
  9110                           
  9111                           ; BSR set to: 1
  9112  014A5C  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
  9113  014A60  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  9114  014A62  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  9115  014A64  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9116  014A66  373D               	rlcf	??___ftdiv& (0+255),f,b
  9117  014A68  E301               	bnc	u11231
  9118  014A6A  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  9119  014A6C                     u11231:
  9120  014A6C  513D               	movf	??___ftdiv& (0+255),w,b
  9121  014A6E  6F45               	movwf	___ftdiv@sign& (0+255),b
  9122  014A70  5145               	movf	___ftdiv@sign& (0+255),w,b
  9123  014A72  A4D8               	btfss	status,2,c
  9124  014A74  D007               	goto	l1548
  9125                           
  9126                           ; BSR set to: 1
  9127  014A76  0E00               	movlw	0
  9128  014A78  6F37               	movwf	?___ftdiv& (0+255),b
  9129  014A7A  0E00               	movlw	0
  9130  014A7C  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  9131  014A7E  0E00               	movlw	0
  9132  014A80  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  9133                           
  9134                           ; BSR set to: 1
  9135  014A82  0012               	return	
  9136  014A84                     l1548:
  9137                           
  9138                           ; BSR set to: 1
  9139                           
  9140                           ; BSR set to: 1
  9141  014A84  0E00               	movlw	0
  9142  014A86  6F41               	movwf	___ftdiv@f3& (0+255),b
  9143  014A88  0E00               	movlw	0
  9144  014A8A  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
  9145  014A8C  0E00               	movlw	0
  9146  014A8E  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
  9147                           
  9148                           ; BSR set to: 1
  9149  014A90  5145               	movf	___ftdiv@sign& (0+255),w,b
  9150  014A92  0F89               	addlw	137
  9151  014A94  5F44               	subwf	___ftdiv@exp& (0+255),f,b
  9152                           
  9153                           ; BSR set to: 1
  9154  014A96  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
  9155                           
  9156                           ; BSR set to: 1
  9157  014A9A  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9158  014A9C  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
  9159                           
  9160                           ; BSR set to: 1
  9161  014A9E  0E80               	movlw	128
  9162  014AA0  1745               	andwf	___ftdiv@sign& (0+255),f,b
  9163                           
  9164                           ; BSR set to: 1
  9165  014AA2  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9166                           
  9167                           ; BSR set to: 1
  9168  014AA4  0EFF               	movlw	255
  9169  014AA6  1737               	andwf	___ftdiv@f1& (0+255),f,b
  9170  014AA8  0EFF               	movlw	255
  9171  014AAA  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9172  014AAC  0E00               	movlw	0
  9173  014AAE  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9174                           
  9175                           ; BSR set to: 1
  9176  014AB0  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9177                           
  9178                           ; BSR set to: 1
  9179  014AB2  0EFF               	movlw	255
  9180  014AB4  173A               	andwf	___ftdiv@f2& (0+255),f,b
  9181  014AB6  0EFF               	movlw	255
  9182  014AB8  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9183  014ABA  0E00               	movlw	0
  9184  014ABC  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9185                           
  9186                           ; BSR set to: 1
  9187  014ABE  0E18               	movlw	24
  9188  014AC0  6F40               	movwf	___ftdiv@cntr& (0+255),b
  9189  014AC2                     
  9190                           ; BSR set to: 1
  9191                           
  9192                           ; BSR set to: 1
  9193  014AC2  90D8               	bcf	status,0,c
  9194  014AC4  3741               	rlcf	___ftdiv@f3& (0+255),f,b
  9195  014AC6  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9196  014AC8  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9197                           
  9198                           ; BSR set to: 1
  9199  014ACA  513A               	movf	___ftdiv@f2& (0+255),w,b
  9200  014ACC  5D37               	subwf	___ftdiv@f1& (0+255),w,b
  9201  014ACE  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9202  014AD0  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9203  014AD2  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9204  014AD4  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9205  014AD6  A0D8               	btfss	status,0,c
  9206  014AD8  D007               	goto	l1550
  9207                           
  9208                           ; BSR set to: 1
  9209  014ADA  513A               	movf	___ftdiv@f2& (0+255),w,b
  9210  014ADC  5F37               	subwf	___ftdiv@f1& (0+255),f,b
  9211  014ADE  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9212  014AE0  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9213  014AE2  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9214  014AE4  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9215                           
  9216                           ; BSR set to: 1
  9217  014AE6  8141               	bsf	___ftdiv@f3& (0+255),0,b
  9218  014AE8                     l1550:
  9219                           
  9220                           ; BSR set to: 1
  9221  014AE8  90D8               	bcf	status,0,c
  9222  014AEA  3737               	rlcf	___ftdiv@f1& (0+255),f,b
  9223  014AEC  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9224  014AEE  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9225                           
  9226                           ; BSR set to: 1
  9227  014AF0  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
  9228  014AF2  D7E7               	goto	l1549
  9229                           
  9230                           ; BSR set to: 1
  9231                           
  9232                           ; BSR set to: 1
  9233  014AF4  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
  9234  014AF8  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9235  014AFC  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9236  014B00  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
  9237  014B04  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
  9238  014B08  ECAE  F0A7         	call	___ftpack	;wreg free
  9239  014B0C  C117  F137         	movff	?___ftpack,?___ftdiv
  9240  014B10  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
  9241  014B14  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
  9242  014B18  0012               	return	
  9243  014B1A                     __end_of___ftdiv:
  9244                           	opt stack 0
  9245                           tblptru	equ	0xFF8
  9246                           tblptrh	equ	0xFF7
  9247                           tblptrl	equ	0xFF6
  9248                           tablat	equ	0xFF5
  9249                           intcon	equ	0xFF2
  9250                           postinc0	equ	0xFEE
  9251                           wreg	equ	0xFE8
  9252                           indf1	equ	0xFE7
  9253                           postdec1	equ	0xFE5
  9254                           fsr1h	equ	0xFE2
  9255                           fsr1l	equ	0xFE1
  9256                           indf2	equ	0xFDF
  9257                           postinc2	equ	0xFDE
  9258                           fsr2h	equ	0xFDA
  9259                           fsr2l	equ	0xFD9
  9260                           status	equ	0xFD8
  9261                           
  9262 ;; *************** function ___awtoft *****************
  9263 ;; Defined at:
  9264 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  c               2   31[BANK1 ] int 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;  sign            1   34[BANK1 ] unsigned char 
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  3   31[BANK1 ] float 
  9271 ;; Registers used:
  9272 ;;		wreg, status,2, status,0, cstack
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9278 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9279 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9281 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9282 ;;Total ram usage:        4 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; Hardware stack levels required when called:   15
  9285 ;; This function calls:
  9286 ;;		___ftpack
  9287 ;; This function is called by:
  9288 ;;		_ringBufferLUT
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text16
  9293  015FAC                     __ptext16:
  9294                           	opt stack 0
  9295  015FAC                     ___awtoft:
  9296                           	opt stack 13
  9297                           
  9298                           ;incstack = 0
  9299  015FAC  0E00               	movlw	0
  9300  015FAE  0101               	movlb	1	; () banked
  9301  015FB0  6F22               	movwf	___awtoft@sign& (0+255),b
  9302                           
  9303                           ; BSR set to: 1
  9304  015FB2  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
  9305  015FB4  D006               	goto	l1434
  9306                           
  9307                           ; BSR set to: 1
  9308  015FB6  6D1F               	negf	___awtoft@c& (0+255),b
  9309  015FB8  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
  9310  015FBA  B0D8               	btfsc	status,0,c
  9311  015FBC  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
  9312                           
  9313                           ; BSR set to: 1
  9314  015FBE  0E01               	movlw	1
  9315  015FC0  6F22               	movwf	___awtoft@sign& (0+255),b
  9316  015FC2                     l1434:
  9317                           
  9318                           ; BSR set to: 1
  9319                           
  9320                           ; BSR set to: 1
  9321  015FC2  C11F  F117         	movff	___awtoft@c,___ftpack@arg
  9322  015FC6  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
  9323  015FCA  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
  9324  015FCC  0E8E               	movlw	142
  9325  015FCE  6F1A               	movwf	___ftpack@exp& (0+255),b
  9326  015FD0  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
  9327  015FD4  ECAE  F0A7         	call	___ftpack	;wreg free
  9328  015FD8  C117  F11F         	movff	?___ftpack,?___awtoft
  9329  015FDC  C118  F120         	movff	?___ftpack+1,?___awtoft+1
  9330  015FE0  C119  F121         	movff	?___ftpack+2,?___awtoft+2
  9331  015FE4  0012               	return	
  9332  015FE6                     __end_of___awtoft:
  9333                           	opt stack 0
  9334                           tblptru	equ	0xFF8
  9335                           tblptrh	equ	0xFF7
  9336                           tblptrl	equ	0xFF6
  9337                           tablat	equ	0xFF5
  9338                           intcon	equ	0xFF2
  9339                           postinc0	equ	0xFEE
  9340                           wreg	equ	0xFE8
  9341                           indf1	equ	0xFE7
  9342                           postdec1	equ	0xFE5
  9343                           fsr1h	equ	0xFE2
  9344                           fsr1l	equ	0xFE1
  9345                           indf2	equ	0xFDF
  9346                           postinc2	equ	0xFDE
  9347                           fsr2h	equ	0xFDA
  9348                           fsr2l	equ	0xFD9
  9349                           status	equ	0xFD8
  9350                           
  9351 ;; *************** function _EUSART2_Read *****************
  9352 ;; Defined at:
  9353 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;		None
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;  readValue       1   23[BANK1 ] unsigned char 
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      unsigned char 
  9360 ;; Registers used:
  9361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9368 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9370 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9371 ;;Total ram usage:        1 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:   14
  9374 ;; This function calls:
  9375 ;;		Nothing
  9376 ;; This function is called by:
  9377 ;;		_terminal_ringBufferPull
  9378 ;;		_getch
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           	psect	text17
  9383  015EE4                     __ptext17:
  9384                           	opt stack 0
  9385  015EE4                     _EUSART2_Read:
  9386                           	opt stack 15
  9387                           
  9388                           ;eusart2.c: 132: uint8_t readValue = 0;
  9389                           
  9390                           ;incstack = 0
  9391  015EE4  0E00               	movlw	0
  9392  015EE6  0101               	movlb	1	; () banked
  9393  015EE8  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  9394                           
  9395                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  9396  015EEA  D001               	goto	l367
  9397  015EEC                     l368:
  9398                           
  9399                           ; BSR set to: 1
  9400  015EEC  0004               	clrwdt		;# 
  9401  015EEE                     l367:
  9402  015EEE  0101               	movlb	1	; () banked
  9403  015EF0  51D6               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  9404  015EF2  B4D8               	btfsc	status,2,c
  9405  015EF4  D7FB               	goto	l368
  9406                           
  9407                           ; BSR set to: 1
  9408                           ;eusart2.c: 137: }
  9409                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  9410                           
  9411                           ; BSR set to: 1
  9412  015EF6  51D7               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  9413  015EF8  0D01               	mullw	1
  9414  015EFA  0E80               	movlw	low _eusart2RxBuffer
  9415  015EFC  24F3               	addwf	prodl,w,c
  9416  015EFE  6ED9               	movwf	fsr2l,c
  9417  015F00  0E02               	movlw	high _eusart2RxBuffer
  9418  015F02  20F4               	addwfc	prodh,w,c
  9419  015F04  6EDA               	movwf	fsr2h,c
  9420  015F06  50DF               	movf	indf2,w,c
  9421  015F08  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  9422                           
  9423                           ; BSR set to: 1
  9424  015F0A  2BD7               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  9425                           
  9426                           ; BSR set to: 1
  9427                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  9428  015F0C  0E3F               	movlw	63
  9429  015F0E  65D7               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  9430  015F10  D002               	goto	l370
  9431                           
  9432                           ; BSR set to: 1
  9433                           ;eusart2.c: 141: {
  9434                           ;eusart2.c: 142: eusart2RxTail = 0;
  9435  015F12  0E00               	movlw	0
  9436  015F14  6FD7               	movwf	_eusart2RxTail& (0+255),b	;volatile
  9437  015F16                     l370:
  9438                           
  9439                           ; BSR set to: 1
  9440                           ;eusart2.c: 143: }
  9441                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  9442                           
  9443                           ; BSR set to: 1
  9444  015F16  010E               	movlb	14	; () banked
  9445  015F18  9F2C               	bcf	44,7,b	;volatile
  9446                           
  9447                           ; BSR set to: 14
  9448                           ;eusart2.c: 145: eusart2RxCount--;
  9449  015F1A  0101               	movlb	1	; () banked
  9450  015F1C  07D6               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  9451                           
  9452                           ; BSR set to: 1
  9453                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  9454  015F1E  010E               	movlb	14	; () banked
  9455  015F20  8F2C               	bsf	44,7,b	;volatile
  9456                           
  9457                           ; BSR set to: 14
  9458                           ;eusart2.c: 148: return readValue;
  9459  015F22  0101               	movlb	1	; () banked
  9460  015F24  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
  9461  015F26  0012               	return	
  9462  015F28                     __end_of_EUSART2_Read:
  9463                           	opt stack 0
  9464                           tblptru	equ	0xFF8
  9465                           tblptrh	equ	0xFF7
  9466                           tblptrl	equ	0xFF6
  9467                           tablat	equ	0xFF5
  9468                           prodh	equ	0xFF4
  9469                           prodl	equ	0xFF3
  9470                           intcon	equ	0xFF2
  9471                           postinc0	equ	0xFEE
  9472                           wreg	equ	0xFE8
  9473                           indf1	equ	0xFE7
  9474                           postdec1	equ	0xFE5
  9475                           fsr1h	equ	0xFE2
  9476                           fsr1l	equ	0xFE1
  9477                           indf2	equ	0xFDF
  9478                           postinc2	equ	0xFDE
  9479                           fsr2h	equ	0xFDA
  9480                           fsr2l	equ	0xFD9
  9481                           status	equ	0xFD8
  9482                           
  9483 ;; *************** function _terminal_clearTerminal *****************
  9484 ;; Defined at:
  9485 ;;		line 80 in file "ring_buffer_interface.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9503 ;;Total ram usage:        0 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:   18
  9506 ;; This function calls:
  9507 ;;		_printf
  9508 ;; This function is called by:
  9509 ;;		_main
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text18
  9514  016394                     __ptext18:
  9515                           	opt stack 0
  9516  016394                     _terminal_clearTerminal:
  9517                           	opt stack 12
  9518                           
  9519                           ;ring_buffer_interface.c: 81: printf("\033[2J");
  9520                           
  9521                           ; BSR set to: 1
  9522                           ;incstack = 0
  9523  016394  0EAC               	movlw	low STR_2
  9524  016396  0101               	movlb	1	; () banked
  9525  016398  6F64               	movwf	printf@f& (0+255),b
  9526  01639A  0EFF               	movlw	high STR_2
  9527  01639C  6F65               	movwf	(printf@f+1)& (0+255),b
  9528  01639E  EC00  F080         	call	_printf	;wreg free
  9529  0163A2  0012               	return		;funcret
  9530  0163A4                     __end_of_terminal_clearTerminal:
  9531                           	opt stack 0
  9532                           tblptru	equ	0xFF8
  9533                           tblptrh	equ	0xFF7
  9534                           tblptrl	equ	0xFF6
  9535                           tablat	equ	0xFF5
  9536                           prodh	equ	0xFF4
  9537                           prodl	equ	0xFF3
  9538                           intcon	equ	0xFF2
  9539                           postinc0	equ	0xFEE
  9540                           wreg	equ	0xFE8
  9541                           indf1	equ	0xFE7
  9542                           postdec1	equ	0xFE5
  9543                           fsr1h	equ	0xFE2
  9544                           fsr1l	equ	0xFE1
  9545                           indf2	equ	0xFDF
  9546                           postinc2	equ	0xFDE
  9547                           fsr2h	equ	0xFDA
  9548                           fsr2l	equ	0xFD9
  9549                           status	equ	0xFD8
  9550                           
  9551 ;; *************** function _printf *****************
  9552 ;; Defined at:
  9553 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  f               2  100[BANK1 ] PTR const unsigned char 
  9556 ;;		 -> STR_92(30), STR_91(23), STR_90(40), STR_89(30), 
  9557 ;;		 -> STR_88(33), STR_87(1405), STR_85(58), STR_83(71), 
  9558 ;;		 -> STR_82(63), STR_81(37), STR_80(46), STR_79(102), 
  9559 ;;		 -> STR_78(86), STR_76(25), STR_74(42), STR_72(41), 
  9560 ;;		 -> STR_70(40), STR_68(56), STR_66(34), STR_64(34), 
  9561 ;;		 -> STR_62(32), STR_60(37), STR_58(56), STR_56(34), 
  9562 ;;		 -> STR_54(34), STR_52(35), STR_50(47), STR_49(17), 
  9563 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
  9564 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
  9565 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
  9566 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  idx             1  117[BANK1 ] unsigned char 
  9569 ;;  val             4  132[BANK1 ] unsigned long 
  9570 ;;  tmpval          4  128[BANK1 ] struct .
  9571 ;;  fval            3  136[BANK1 ] struct .
  9572 ;;  prec            2  139[BANK1 ] int 
  9573 ;;  exp             2  126[BANK1 ] int 
  9574 ;;  flag            2  124[BANK1 ] unsigned short 
  9575 ;;  ap              2  122[BANK1 ] PTR void [1]
  9576 ;;		 -> ?i2_printf(2), ?_printf(2), 
  9577 ;;  len             2  120[BANK1 ] unsigned int 
  9578 ;;  cp              2  118[BANK1 ] PTR const unsigned char 
  9579 ;;		 -> printf@c(1), 
  9580 ;;  width           2    0        int 
  9581 ;;  c               1  141[BANK1 ] char 
  9582 ;;  d               1    0        unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  2  100[BANK1 ] int 
  9585 ;; Registers used:
  9586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9592 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9593 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9594 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9595 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9596 ;;Total ram usage:       42 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:   17
  9599 ;; This function calls:
  9600 ;;		___awdiv
  9601 ;;		___ftadd
  9602 ;;		___ftge
  9603 ;;		___ftmul
  9604 ;;		___ftneg
  9605 ;;		___ftsub
  9606 ;;		___fttol
  9607 ;;		___lldiv
  9608 ;;		___llmod
  9609 ;;		___lltoft
  9610 ;;		___wmul
  9611 ;;		__div_to_l_
  9612 ;;		__tdiv_to_l_
  9613 ;;		_fround
  9614 ;;		_isdigit
  9615 ;;		_putch
  9616 ;;		_scale
  9617 ;; This function is called by:
  9618 ;;		_terminal_clearTerminal
  9619 ;;		_terminal_setCursorHome
  9620 ;;		_terminal_textAttributes
  9621 ;;		_terminal_printNewline
  9622 ;;		_ringBufferLUT
  9623 ;;		_terminal_printResetMessage
  9624 ;;		_terminal_clearLine
  9625 ;;		_terminal_saveCursor
  9626 ;;		_terminal_returnCursor
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text19
  9631  010000                     __ptext19:
  9632                           	opt stack 0
  9633  010000                     _printf:
  9634                           	opt stack 11
  9635                           
  9636                           ;doprnt.c: 466: va_list ap;
  9637                           ;doprnt.c: 499: signed char c;
  9638                           ;doprnt.c: 501: int width;
  9639                           ;doprnt.c: 504: int prec;
  9640                           ;doprnt.c: 508: unsigned short flag;
  9641                           ;doprnt.c: 515: char d;
  9642                           ;doprnt.c: 516: double fval;
  9643                           ;doprnt.c: 517: int exp;
  9644                           ;doprnt.c: 523: union {
  9645                           ;doprnt.c: 524: unsigned long vd;
  9646                           ;doprnt.c: 525: double integ;
  9647                           ;doprnt.c: 526: } tmpval;
  9648                           ;doprnt.c: 528: unsigned long val;
  9649                           ;doprnt.c: 529: unsigned len;
  9650                           ;doprnt.c: 530: const char * cp;
  9651                           ;doprnt.c: 533: *ap = __va_start();
  9652                           
  9653                           ;incstack = 0
  9654  010000  0E66               	movlw	low (?_printf+2)
  9655  010002  0101               	movlb	1	; () banked
  9656  010004  6F7A               	movwf	printf@ap& (0+255),b
  9657  010006  0E01               	movlw	high (?_printf+2)
  9658  010008  6F7B               	movwf	(printf@ap+1)& (0+255),b
  9659                           
  9660                           ;doprnt.c: 536: while(c = *f++) {
  9661  01000A  EFF8  F084         	goto	u10670
  9662  01000E                     
  9663                           ; BSR set to: 1
  9664                           ;doprnt.c: 538: if(c != '%')
  9665                           
  9666                           ; BSR set to: 1
  9667  01000E  0E25               	movlw	37
  9668  010010  198D               	xorwf	printf@c& (0+255),w,b
  9669  010012  B4D8               	btfsc	status,2,c
  9670  010014  D005               	goto	l1098
  9671                           
  9672                           ; BSR set to: 1
  9673                           ;doprnt.c: 540: {
  9674                           ;doprnt.c: 541: (putch(c) );
  9675  010016  518D               	movf	printf@c& (0+255),w,b
  9676  010018  ECD2  F0B1         	call	_putch
  9677                           
  9678                           ;doprnt.c: 542: continue;
  9679  01001C  EFF8  F084         	goto	u10670
  9680  010020                     l1098:
  9681                           
  9682                           ;doprnt.c: 543: }
  9683                           ;doprnt.c: 548: flag = 0;
  9684  010020  0E00               	movlw	0
  9685  010022  0101               	movlb	1	; () banked
  9686  010024  6F7D               	movwf	(printf@flag+1)& (0+255),b
  9687  010026  0E00               	movlw	0
  9688  010028  6F7C               	movwf	printf@flag& (0+255),b
  9689                           
  9690                           ; BSR set to: 1
  9691                           ;doprnt.c: 611: if(*f == '.') {
  9692  01002A  C164  FFF6         	movff	printf@f,tblptrl
  9693  01002E  C165  FFF7         	movff	printf@f+1,tblptrh
  9694  010032  0E00               	movlw	low (__mediumconst shr (0+16))
  9695  010034  6EF8               	movwf	tblptru,c
  9696  010036  0E0D               	movlw	(high __ramtop+-1)
  9697  010038  64F7               	cpfsgt	tblptrh,c
  9698  01003A  D003               	bra	u10217
  9699  01003C  0008               	tblrd		*
  9700  01003E  50F5               	movf	tablat,w,c
  9701  010040  D005               	bra	u10210
  9702  010042                     u10217:
  9703  010042  CFF6 FFE1          	movff	tblptrl,fsr1l
  9704  010046  CFF7 FFE2          	movff	tblptrh,fsr1h
  9705  01004A  50E7               	movf	indf1,w,c
  9706  01004C                     u10210:
  9707  01004C  0A2E               	xorlw	46
  9708  01004E  A4D8               	btfss	status,2,c
  9709  010050  D049               	goto	l1099
  9710                           
  9711                           ;doprnt.c: 612: flag |= 0x4000;
  9712  010052  0101               	movlb	1	; () banked
  9713  010054  8D7D               	bsf	(printf@flag+1)& (0+255),6,b
  9714                           
  9715                           ;doprnt.c: 613: f++;
  9716  010056  4B64               	infsnz	printf@f& (0+255),f,b
  9717  010058  2B65               	incf	(printf@f+1)& (0+255),f,b
  9718                           
  9719                           ; BSR set to: 1
  9720                           ;doprnt.c: 620: {
  9721                           ;doprnt.c: 621: prec = 0;
  9722  01005A  0E00               	movlw	0
  9723  01005C  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9724  01005E  0E00               	movlw	0
  9725  010060  6F8B               	movwf	printf@prec& (0+255),b
  9726                           
  9727                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9728  010062  D02A               	goto	l1100
  9729  010064                     
  9730                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9731                           
  9732                           ; BSR set to: 1
  9733  010064  C18B  F125         	movff	printf@prec,___wmul@multiplier
  9734  010068  C18C  F126         	movff	printf@prec+1,___wmul@multiplier+1
  9735  01006C  0E00               	movlw	0
  9736  01006E  0101               	movlb	1	; () banked
  9737  010070  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9738  010072  0E0A               	movlw	10
  9739  010074  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9740  010076  ECBB  F0B0         	call	___wmul	;wreg free
  9741  01007A  C164  FFF6         	movff	printf@f,tblptrl
  9742  01007E  C165  FFF7         	movff	printf@f+1,tblptrh
  9743  010082  0E00               	movlw	low (__mediumconst shr (0+16))
  9744  010084  6EF8               	movwf	tblptru,c
  9745  010086  0E0D               	movlw	(high __ramtop+-1)
  9746  010088  64F7               	cpfsgt	tblptrh,c
  9747  01008A  D003               	bra	u10237
  9748  01008C  0008               	tblrd		*
  9749  01008E  50F5               	movf	tablat,w,c
  9750  010090  D005               	bra	u10230
  9751  010092                     u10237:
  9752  010092  CFF6 FFE1          	movff	tblptrl,fsr1l
  9753  010096  CFF7 FFE2          	movff	tblptrh,fsr1h
  9754  01009A  50E7               	movf	indf1,w,c
  9755  01009C                     u10230:
  9756  01009C  0101               	movlb	1	; () banked
  9757  01009E  6F6C               	movwf	??_printf& (0+255),b
  9758  0100A0  516C               	movf	??_printf& (0+255),w,b
  9759  0100A2  2725               	addwf	?___wmul& (0+255),f,b
  9760  0100A4  0E00               	movlw	0
  9761  0100A6  2326               	addwfc	(?___wmul+1)& (0+255),f,b
  9762  0100A8  0ED0               	movlw	208
  9763  0100AA  2525               	addwf	?___wmul& (0+255),w,b
  9764  0100AC  6F8B               	movwf	printf@prec& (0+255),b
  9765  0100AE  0EFF               	movlw	255
  9766  0100B0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
  9767  0100B2  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9768                           
  9769                           ; BSR set to: 1
  9770  0100B4  4B64               	infsnz	printf@f& (0+255),f,b
  9771  0100B6  2B65               	incf	(printf@f+1)& (0+255),f,b
  9772  0100B8                     l1100:
  9773                           
  9774                           ; BSR set to: 1
  9775                           
  9776                           ; BSR set to: 1
  9777  0100B8  C164  FFF6         	movff	printf@f,tblptrl
  9778  0100BC  C165  FFF7         	movff	printf@f+1,tblptrh
  9779  0100C0  0E00               	movlw	low (__mediumconst shr (0+16))
  9780  0100C2  6EF8               	movwf	tblptru,c
  9781  0100C4  0E0D               	movlw	(high __ramtop+-1)
  9782  0100C6  64F7               	cpfsgt	tblptrh,c
  9783  0100C8  D003               	bra	u10247
  9784  0100CA  0008               	tblrd		*
  9785  0100CC  50F5               	movf	tablat,w,c
  9786  0100CE  D005               	bra	u10240
  9787  0100D0                     u10247:
  9788  0100D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9789  0100D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9790  0100D8  50E7               	movf	indf1,w,c
  9791  0100DA                     u10240:
  9792  0100DA  EC54  F0B1         	call	_isdigit
  9793  0100DE  A0D8               	btfss	status,0,c
  9794  0100E0  D03B               	goto	l1104
  9795  0100E2  D7C0               	goto	l1101
  9796  0100E4                     l1099:
  9797                           
  9798                           ;doprnt.c: 626: prec = 0;
  9799  0100E4  0E00               	movlw	0
  9800  0100E6  0101               	movlb	1	; () banked
  9801  0100E8  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9802  0100EA  0E00               	movlw	0
  9803  0100EC  6F8B               	movwf	printf@prec& (0+255),b
  9804                           
  9805                           ; BSR set to: 1
  9806                           ;doprnt.c: 628: flag |= 0x1000;
  9807  0100EE  897D               	bsf	(printf@flag+1)& (0+255),4,b
  9808                           
  9809                           ; BSR set to: 1
  9810                           ;doprnt.c: 630: }
  9811                           ;doprnt.c: 635: switch(c = *f++) {
  9812  0100F0  D033               	goto	l1104
  9813  0100F2                     
  9814                           ; BSR set to: 1
  9815                           ;doprnt.c: 663: flag |= 0x400;
  9816                           
  9817                           ; BSR set to: 1
  9818  0100F2  857D               	bsf	(printf@flag+1)& (0+255),2,b
  9819                           
  9820                           ; BSR set to: 1
  9821                           ;doprnt.c: 698: case 'i':
  9822                           ;doprnt.c: 699: break;
  9823                           
  9824                           ; BSR set to: 1
  9825                           
  9826                           ;doprnt.c: 697: case 'd':
  9827                           
  9828                           ;doprnt.c: 664: break;
  9829  0100F4  D062               	goto	l1108
  9830  0100F6                     
  9831                           ; BSR set to: 1
  9832                           ;doprnt.c: 718: case 'x':
  9833                           ;doprnt.c: 721: flag |= 0x80;
  9834                           
  9835                           ; BSR set to: 1
  9836                           
  9837                           ; BSR set to: 1
  9838  0100F6  8F7C               	bsf	printf@flag& (0+255),7,b
  9839                           
  9840                           ;doprnt.c: 723: break;
  9841  0100F8  D060               	goto	l1108
  9842  0100FA                     
  9843                           ; BSR set to: 1
  9844                           ;doprnt.c: 753: if(prec && prec < len)
  9845                           
  9846                           ; BSR set to: 1
  9847  0100FA  518B               	movf	printf@prec& (0+255),w,b
  9848  0100FC  118C               	iorwf	(printf@prec+1)& (0+255),w,b
  9849  0100FE  B4D8               	btfsc	status,2,c
  9850  010100  D015               	goto	l1115
  9851                           
  9852                           ; BSR set to: 1
  9853  010102  5178               	movf	printf@len& (0+255),w,b
  9854  010104  5D8B               	subwf	printf@prec& (0+255),w,b
  9855  010106  5179               	movf	(printf@len+1)& (0+255),w,b
  9856  010108  598C               	subwfb	(printf@prec+1)& (0+255),w,b
  9857  01010A  B0D8               	btfsc	status,0,c
  9858  01010C  D00F               	goto	l1115
  9859                           
  9860                           ; BSR set to: 1
  9861                           ;doprnt.c: 754: len = prec;
  9862  01010E  C18B  F178         	movff	printf@prec,printf@len
  9863  010112  C18C  F179         	movff	printf@prec+1,printf@len+1
  9864                           
  9865                           ; BSR set to: 1
  9866                           ;doprnt.c: 767: while(len--)
  9867  010116  D00A               	goto	l1115
  9868  010118                     l8837:
  9869                           
  9870                           ; BSR set to: 1
  9871                           ;doprnt.c: 768: (putch(*cp++) );
  9872  010118  C176  FFD9         	movff	printf@cp,fsr2l
  9873  01011C  C177  FFDA         	movff	printf@cp+1,fsr2h
  9874  010120  50DF               	movf	indf2,w,c
  9875  010122  ECD2  F0B1         	call	_putch
  9876  010126  0101               	movlb	1	; () banked
  9877  010128  4B76               	infsnz	printf@cp& (0+255),f,b
  9878  01012A  2B77               	incf	(printf@cp+1)& (0+255),f,b
  9879  01012C                     l1115:
  9880                           
  9881                           ; BSR set to: 1
  9882                           
  9883                           ; BSR set to: 1
  9884  01012C  0778               	decf	printf@len& (0+255),f,b
  9885  01012E  A0D8               	btfss	status,0,c
  9886  010130  0779               	decf	(printf@len+1)& (0+255),f,b
  9887  010132  2978               	incf	printf@len& (0+255),w,b
  9888  010134  E1F1               	bnz	l8837
  9889  010136  2979               	incf	(printf@len+1)& (0+255),w,b
  9890  010138  B4D8               	btfsc	status,2,c
  9891  01013A  EFF8  F084         	goto	u10670
  9892  01013E  D7EC               	goto	l1116
  9893  010140                     
  9894                           ; BSR set to: 1
  9895                           ;doprnt.c: 805: cp = (char *)&c;
  9896                           
  9897                           ; BSR set to: 1
  9898  010140  0E8D               	movlw	low printf@c
  9899  010142  6F76               	movwf	printf@cp& (0+255),b
  9900  010144  0E01               	movlw	high printf@c
  9901  010146  6F77               	movwf	(printf@cp+1)& (0+255),b
  9902                           
  9903                           ; BSR set to: 1
  9904                           ;doprnt.c: 806: len = 1;
  9905  010148  0E00               	movlw	0
  9906  01014A  6F79               	movwf	(printf@len+1)& (0+255),b
  9907  01014C  0E01               	movlw	1
  9908  01014E  6F78               	movwf	printf@len& (0+255),b
  9909                           
  9910                           ;doprnt.c: 807: goto dostring;
  9911  010150  D7D4               	goto	l1113
  9912  010152                     
  9913                           ; BSR set to: 1
  9914                           ;doprnt.c: 818: flag |= 0xC0;
  9915                           
  9916                           ; BSR set to: 1
  9917  010152  0EC0               	movlw	192
  9918  010154  137C               	iorwf	printf@flag& (0+255),f,b
  9919                           
  9920                           ; BSR set to: 1
  9921                           ;doprnt.c: 822: }
  9922                           
  9923                           ;doprnt.c: 819: break;
  9924  010156  D031               	goto	l1108
  9925  010158                     l1104:
  9926                           
  9927                           ; BSR set to: 1
  9928  010158  0101               	movlb	1	; () banked
  9929  01015A  5164               	movf	printf@f& (0+255),w,b
  9930  01015C  6F6C               	movwf	??_printf& (0+255),b
  9931  01015E  5165               	movf	(printf@f+1)& (0+255),w,b
  9932  010160  6F6D               	movwf	(??_printf+1)& (0+255),b
  9933  010162  4B64               	infsnz	printf@f& (0+255),f,b
  9934  010164  2B65               	incf	(printf@f+1)& (0+255),f,b
  9935  010166  C16C  FFF6         	movff	??_printf,tblptrl
  9936  01016A  C16D  FFF7         	movff	??_printf+1,tblptrh
  9937  01016E  0E00               	movlw	low (__mediumconst shr (0+16))
  9938  010170  6EF8               	movwf	tblptru,c
  9939  010172  0E0D               	movlw	(high __ramtop+-1)
  9940  010174  64F7               	cpfsgt	tblptrh,c
  9941  010176  D003               	bra	u10297
  9942  010178  0008               	tblrd		*
  9943  01017A  50F5               	movf	tablat,w,c
  9944  01017C  D005               	bra	u10290
  9945  01017E                     u10297:
  9946  01017E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9947  010182  CFF7 FFE2          	movff	tblptrh,fsr1h
  9948  010186  50E7               	movf	indf1,w,c
  9949  010188                     u10290:
  9950  010188  0101               	movlb	1	; () banked
  9951  01018A  6F8D               	movwf	printf@c& (0+255),b
  9952  01018C  518D               	movf	printf@c& (0+255),w,b
  9953                           
  9954                           ; Switch size 1, requested type "space"
  9955                           ; Number of cases is 7, Range of values is 0 to 120
  9956                           ; switch strategies available:
  9957                           ; Name         Instructions Cycles
  9958                           ; simple_byte           22    12 (average)
  9959                           ;	Chosen strategy is simple_byte
  9960  01018E  0A00               	xorlw	0	; case 0
  9961  010190  B4D8               	btfsc	status,2,c
  9962  010192  0012               	return	
  9963  010194  0A58               	xorlw	88	; case 88
  9964  010196  B4D8               	btfsc	status,2,c
  9965  010198  D7AE               	goto	l1111
  9966  01019A  0A3C               	xorlw	60	; case 100
  9967  01019C  B4D8               	btfsc	status,2,c
  9968  01019E  D00D               	goto	l1108
  9969  0101A0  0A02               	xorlw	2	; case 102
  9970  0101A2  B4D8               	btfsc	status,2,c
  9971  0101A4  D7A6               	goto	l1107
  9972  0101A6  0A0F               	xorlw	15	; case 105
  9973  0101A8  B4D8               	btfsc	status,2,c
  9974  0101AA  D007               	goto	l1108
  9975  0101AC  0A1C               	xorlw	28	; case 117
  9976  0101AE  B4D8               	btfsc	status,2,c
  9977  0101B0  D7D0               	goto	l1119
  9978  0101B2  0A0D               	xorlw	13	; case 120
  9979  0101B4  B4D8               	btfsc	status,2,c
  9980  0101B6  D79F               	goto	l1111
  9981  0101B8  D7C3               	goto	l1118
  9982  0101BA                     l1108:
  9983                           
  9984                           ; BSR set to: 1
  9985                           ;doprnt.c: 825: if(flag & (0x700)) {
  9986                           
  9987                           ; BSR set to: 1
  9988  0101BA  0E07               	movlw	7
  9989  0101BC  157D               	andwf	(printf@flag+1)& (0+255),w,b
  9990  0101BE  B4D8               	btfsc	status,2,c
  9991  0101C0  D2C1               	goto	l1120
  9992                           
  9993                           ; BSR set to: 1
  9994                           ;doprnt.c: 827: if(flag & 0x1000)
  9995  0101C2  A97D               	btfss	(printf@flag+1)& (0+255),4,b
  9996  0101C4  D004               	goto	l1121
  9997                           
  9998                           ; BSR set to: 1
  9999                           ;doprnt.c: 829: prec = 6;
 10000  0101C6  0E00               	movlw	0
 10001  0101C8  6F8C               	movwf	(printf@prec+1)& (0+255),b
 10002  0101CA  0E06               	movlw	6
 10003  0101CC  6F8B               	movwf	printf@prec& (0+255),b
 10004  0101CE                     l1121:
 10005                           
 10006                           ; BSR set to: 1
 10007                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10008                           
 10009                           ; BSR set to: 1
 10010  0101CE  C17A  FFD9         	movff	printf@ap,fsr2l
 10011  0101D2  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10012  0101D6  CFDE F188          	movff	postinc2,printf@fval
 10013  0101DA  CFDE F189          	movff	postinc2,printf@fval+1
 10014  0101DE  CFDD F18A          	movff	postdec2,printf@fval+2
 10015                           
 10016                           ; BSR set to: 1
 10017  0101E2  0E03               	movlw	3
 10018  0101E4  277A               	addwf	printf@ap& (0+255),f,b
 10019  0101E6  0E00               	movlw	0
 10020  0101E8  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;doprnt.c: 831: if(fval < 0.0) {
 10024  0101EA  AF8A               	btfss	(printf@fval+2)& (0+255),7,b
 10025  0101EC  D011               	goto	l1122
 10026                           
 10027                           ; BSR set to: 1
 10028                           ;doprnt.c: 832: fval = -fval;
 10029  0101EE  C188  F123         	movff	printf@fval,___ftneg@f1
 10030  0101F2  C189  F124         	movff	printf@fval+1,___ftneg@f1+1
 10031  0101F6  C18A  F125         	movff	printf@fval+2,___ftneg@f1+2
 10032  0101FA  ECF7  F0B0         	call	___ftneg	;wreg free
 10033  0101FE  C123  F188         	movff	?___ftneg,printf@fval
 10034  010202  C124  F189         	movff	?___ftneg+1,printf@fval+1
 10035  010206  C125  F18A         	movff	?___ftneg+2,printf@fval+2
 10036                           
 10037                           ;doprnt.c: 833: flag |= 0x03;
 10038  01020A  0E03               	movlw	3
 10039  01020C  0101               	movlb	1	; () banked
 10040  01020E  137C               	iorwf	printf@flag& (0+255),f,b
 10041  010210                     l1122:
 10042                           
 10043                           ; BSR set to: 1
 10044                           ;doprnt.c: 834: }
 10045                           ;doprnt.c: 835: exp = 0;
 10046                           
 10047                           ; BSR set to: 1
 10048  010210  0E00               	movlw	0
 10049  010212  6F7F               	movwf	(printf@exp+1)& (0+255),b
 10050  010214  0E00               	movlw	0
 10051  010216  6F7E               	movwf	printf@exp& (0+255),b
 10052                           
 10053                           ; BSR set to: 1
 10054                           ;doprnt.c: 836: if( fval!=0) {
 10055  010218  5188               	movf	printf@fval& (0+255),w,b
 10056  01021A  1189               	iorwf	(printf@fval+1)& (0+255),w,b
 10057  01021C  118A               	iorwf	(printf@fval+2)& (0+255),w,b
 10058  01021E  B4D8               	btfsc	status,2,c
 10059  010220  D088               	goto	l1127
 10060                           
 10061                           ; BSR set to: 1
 10062                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 10063  010222  0E82               	movlw	130
 10064  010224  6F6C               	movwf	??_printf& (0+255),b
 10065  010226  0EFF               	movlw	255
 10066  010228  6F6D               	movwf	(??_printf+1)& (0+255),b
 10067  01022A  C188  F16E         	movff	printf@fval,??_printf+2
 10068  01022E  C189  F16F         	movff	printf@fval+1,??_printf+3
 10069  010232  C18A  F170         	movff	printf@fval+2,??_printf+4
 10070  010236  C18B  F171         	movff	printf@fval+3,??_printf+5
 10071  01023A  0E10               	movlw	16
 10072  01023C  D005               	goto	u10340
 10073  01023E                     u10345:
 10074  01023E  90D8               	bcf	status,0,c
 10075  010240  3371               	rrcf	(??_printf+5)& (0+255),f,b
 10076  010242  3370               	rrcf	(??_printf+4)& (0+255),f,b
 10077  010244  336F               	rrcf	(??_printf+3)& (0+255),f,b
 10078  010246  336E               	rrcf	(??_printf+2)& (0+255),f,b
 10079  010248                     u10340:
 10080  010248  2EE8               	decfsz	wreg,f,c
 10081  01024A  D7F9               	goto	u10345
 10082  01024C  516E               	movf	(??_printf+2)& (0+255),w,b
 10083  01024E  256C               	addwf	??_printf& (0+255),w,b
 10084  010250  6F7E               	movwf	printf@exp& (0+255),b
 10085  010252  0E00               	movlw	0
 10086  010254  216D               	addwfc	(??_printf+1)& (0+255),w,b
 10087  010256  6F7F               	movwf	(printf@exp+1)& (0+255),b
 10088                           
 10089                           ; BSR set to: 1
 10090                           ;doprnt.c: 838: exp--;
 10091  010258  077E               	decf	printf@exp& (0+255),f,b
 10092  01025A  A0D8               	btfss	status,0,c
 10093  01025C  077F               	decf	(printf@exp+1)& (0+255),f,b
 10094                           
 10095                           ; BSR set to: 1
 10096                           ;doprnt.c: 839: exp *= 3;
 10097  01025E  C17E  F125         	movff	printf@exp,___wmul@multiplier
 10098  010262  C17F  F126         	movff	printf@exp+1,___wmul@multiplier+1
 10099  010266  0E00               	movlw	0
 10100  010268  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10101  01026A  0E03               	movlw	3
 10102  01026C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10103  01026E  ECBB  F0B0         	call	___wmul	;wreg free
 10104  010272  C125  F17E         	movff	?___wmul,printf@exp
 10105  010276  C126  F17F         	movff	?___wmul+1,printf@exp+1
 10106                           
 10107                           ;doprnt.c: 840: exp /= 10;
 10108  01027A  C17E  F11D         	movff	printf@exp,___awdiv@dividend
 10109  01027E  C17F  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 10110  010282  0E00               	movlw	0
 10111  010284  0101               	movlb	1	; () banked
 10112  010286  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10113  010288  0E0A               	movlw	10
 10114  01028A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10115  01028C  EC22  F0AA         	call	___awdiv	;wreg free
 10116  010290  C11D  F17E         	movff	?___awdiv,printf@exp
 10117  010294  C11E  F17F         	movff	?___awdiv+1,printf@exp+1
 10118                           
 10119                           ;doprnt.c: 841: if(exp < 0)
 10120  010298  0101               	movlb	1	; () banked
 10121  01029A  AF7F               	btfss	(printf@exp+1)& (0+255),7,b
 10122  01029C  D003               	goto	l1124
 10123                           
 10124                           ; BSR set to: 1
 10125                           ;doprnt.c: 842: exp--;
 10126  01029E  077E               	decf	printf@exp& (0+255),f,b
 10127  0102A0  A0D8               	btfss	status,0,c
 10128  0102A2  077F               	decf	(printf@exp+1)& (0+255),f,b
 10129  0102A4                     l1124:
 10130                           
 10131                           ; BSR set to: 1
 10132                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 10133                           
 10134                           ; BSR set to: 1
 10135  0102A4  517E               	movf	printf@exp& (0+255),w,b
 10136  0102A6  0800               	sublw	0
 10137  0102A8  EC05  F091         	call	_scale
 10138  0102AC  C155  F180         	movff	?_scale,printf@tmpval
 10139  0102B0  C156  F181         	movff	?_scale+1,printf@tmpval+1
 10140  0102B4  C157  F182         	movff	?_scale+2,printf@tmpval+2
 10141                           
 10142                           ;doprnt.c: 847: tmpval.integ *= fval;
 10143  0102B8  C180  F146         	movff	printf@tmpval,___ftmul@f1
 10144  0102BC  C181  F147         	movff	printf@tmpval+1,___ftmul@f1+1
 10145  0102C0  C182  F148         	movff	printf@tmpval+2,___ftmul@f1+2
 10146  0102C4  C188  F149         	movff	printf@fval,___ftmul@f2
 10147  0102C8  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 10148  0102CC  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 10149  0102D0  ECAA  F0A3         	call	___ftmul	;wreg free
 10150  0102D4  C146  F180         	movff	?___ftmul,printf@tmpval
 10151  0102D8  C147  F181         	movff	?___ftmul+1,printf@tmpval+1
 10152  0102DC  C148  F182         	movff	?___ftmul+2,printf@tmpval+2
 10153                           
 10154                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 10155  0102E0  C180  F117         	movff	printf@tmpval,___ftge@ff1
 10156  0102E4  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 10157  0102E8  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 10158  0102EC  0E00               	movlw	0
 10159  0102EE  0101               	movlb	1	; () banked
 10160  0102F0  6F1A               	movwf	___ftge@ff2& (0+255),b
 10161  0102F2  0E80               	movlw	128
 10162  0102F4  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 10163  0102F6  0E3F               	movlw	63
 10164  0102F8  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 10165  0102FA  EC03  F0A9         	call	___ftge	;wreg free
 10166  0102FE  0101               	movlb	1	; () banked
 10167  010300  B0D8               	btfsc	status,0,c
 10168  010302  D004               	goto	l1125
 10169                           
 10170                           ; BSR set to: 1
 10171                           ;doprnt.c: 849: exp--;
 10172  010304  077E               	decf	printf@exp& (0+255),f,b
 10173  010306  A0D8               	btfss	status,0,c
 10174  010308  077F               	decf	(printf@exp+1)& (0+255),f,b
 10175  01030A  D013               	goto	l1127
 10176  01030C                     l1125:
 10177                           
 10178                           ; BSR set to: 1
 10179                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 10180                           
 10181                           ; BSR set to: 1
 10182  01030C  C180  F117         	movff	printf@tmpval,___ftge@ff1
 10183  010310  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 10184  010314  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 10185  010318  0E00               	movlw	0
 10186  01031A  6F1A               	movwf	___ftge@ff2& (0+255),b
 10187  01031C  0E20               	movlw	32
 10188  01031E  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 10189  010320  0E41               	movlw	65
 10190  010322  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 10191  010324  EC03  F0A9         	call	___ftge	;wreg free
 10192  010328  0101               	movlb	1	; () banked
 10193  01032A  A0D8               	btfss	status,0,c
 10194  01032C  D002               	goto	l1127
 10195                           
 10196                           ; BSR set to: 1
 10197                           ;doprnt.c: 851: exp++;
 10198  01032E  4B7E               	infsnz	printf@exp& (0+255),f,b
 10199  010330  2B7F               	incf	(printf@exp+1)& (0+255),f,b
 10200  010332                     l1127:
 10201                           
 10202                           ; BSR set to: 1
 10203                           ;doprnt.c: 852: }
 10204                           ;doprnt.c: 1112: if(prec <= 12)
 10205                           
 10206                           ; BSR set to: 1
 10207                           
 10208                           ; BSR set to: 1
 10209                           
 10210                           ; BSR set to: 1
 10211  010332  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 10212  010334  D006               	goto	u10380
 10213  010336  518C               	movf	(printf@prec+1)& (0+255),w,b
 10214  010338  E11B               	bnz	l8901
 10215  01033A  0E0D               	movlw	13
 10216  01033C  5D8B               	subwf	printf@prec& (0+255),w,b
 10217  01033E  B0D8               	btfsc	status,0,c
 10218  010340  D017               	goto	l1128
 10219  010342                     u10380:
 10220                           
 10221                           ; BSR set to: 1
 10222                           ;doprnt.c: 1113: fval += fround(prec);
 10223  010342  C188  F12B         	movff	printf@fval,___ftadd@f1
 10224  010346  C189  F12C         	movff	printf@fval+1,___ftadd@f1+1
 10225  01034A  C18A  F12D         	movff	printf@fval+2,___ftadd@f1+2
 10226  01034E  518B               	movf	printf@prec& (0+255),w,b
 10227  010350  EC21  F097         	call	_fround
 10228  010354  C155  F12E         	movff	?_fround,___ftadd@f2
 10229  010358  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
 10230  01035C  C157  F130         	movff	?_fround+2,___ftadd@f2+2
 10231  010360  ECCE  F09D         	call	___ftadd	;wreg free
 10232  010364  C12B  F188         	movff	?___ftadd,printf@fval
 10233  010368  C12C  F189         	movff	?___ftadd+1,printf@fval+1
 10234  01036C  C12D  F18A         	movff	?___ftadd+2,printf@fval+2
 10235  010370                     l1128:
 10236  010370                     l8901:
 10237                           
 10238                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 10239  010370  0101               	movlb	1	; () banked
 10240  010372  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 10241  010374  D006               	goto	u10390
 10242  010376  517F               	movf	(printf@exp+1)& (0+255),w,b
 10243  010378  E11F               	bnz	l8909
 10244  01037A  0E0A               	movlw	10
 10245  01037C  5D7E               	subwf	printf@exp& (0+255),w,b
 10246  01037E  B0D8               	btfsc	status,0,c
 10247  010380  D01B               	goto	u10420
 10248  010382                     u10390:
 10249                           
 10250                           ; BSR set to: 1
 10251  010382  5188               	movf	printf@fval& (0+255),w,b
 10252  010384  1189               	iorwf	(printf@fval+1)& (0+255),w,b
 10253  010386  118A               	iorwf	(printf@fval+2)& (0+255),w,b
 10254  010388  B4D8               	btfsc	status,2,c
 10255  01038A  D054               	goto	l1129
 10256                           
 10257                           ; BSR set to: 1
 10258  01038C  C188  F155         	movff	printf@fval,___fttol@f1
 10259  010390  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 10260  010394  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 10261  010398  EC2E  F0A3         	call	___fttol	;wreg free
 10262  01039C  0101               	movlb	1	; () banked
 10263  01039E  5155               	movf	?___fttol& (0+255),w,b
 10264  0103A0  1156               	iorwf	(?___fttol+1)& (0+255),w,b
 10265  0103A2  1157               	iorwf	(?___fttol+2)& (0+255),w,b
 10266  0103A4  1158               	iorwf	(?___fttol+3)& (0+255),w,b
 10267  0103A6  B4D8               	btfsc	status,2,c
 10268                           
 10269                           ; BSR set to: 1
 10270  0103A8  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 10271  0103AA  D044               	goto	l1129
 10272  0103AC  517F               	movf	(printf@exp+1)& (0+255),w,b
 10273  0103AE  E104               	bnz	l8909
 10274  0103B0  0E02               	movlw	2
 10275  0103B2  5D7E               	subwf	printf@exp& (0+255),w,b
 10276  0103B4  A0D8               	btfss	status,0,c
 10277  0103B6  D03E               	goto	l1129
 10278  0103B8                     u10420:
 10279  0103B8                     l8909:
 10280                           
 10281                           ; BSR set to: 1
 10282                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 10283  0103B8  C180  F117         	movff	printf@tmpval,___ftge@ff1
 10284  0103BC  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 10285  0103C0  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 10286  0103C4  0E70               	movlw	112
 10287  0103C6  6F1A               	movwf	___ftge@ff2& (0+255),b
 10288  0103C8  0E89               	movlw	137
 10289  0103CA  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 10290  0103CC  0E40               	movlw	64
 10291  0103CE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 10292  0103D0  EC03  F0A9         	call	___ftge	;wreg free
 10293  0103D4  0101               	movlb	1	; () banked
 10294  0103D6  B0D8               	btfsc	status,0,c
 10295  0103D8  D002               	goto	l1132
 10296                           
 10297                           ; BSR set to: 1
 10298                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10299  0103DA  0EF7               	movlw	247
 10300  0103DC  D001               	goto	L1
 10301  0103DE                     l1132:
 10302                           
 10303                           ; BSR set to: 1
 10304                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10305                           
 10306                           ; BSR set to: 1
 10307  0103DE  0EF8               	movlw	248
 10308  0103E0                     L1:
 10309  0103E0  277E               	addwf	printf@exp& (0+255),f,b
 10310  0103E2  0EFF               	movlw	255
 10311  0103E4  237F               	addwfc	(printf@exp+1)& (0+255),f,b
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;doprnt.c: 1124: }
 10315                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 10316                           
 10317                           ; BSR set to: 1
 10318  0103E6  517E               	movf	printf@exp& (0+255),w,b
 10319  0103E8  EC05  F091         	call	_scale
 10320  0103EC  C155  F180         	movff	?_scale,printf@tmpval
 10321  0103F0  C156  F181         	movff	?_scale+1,printf@tmpval+1
 10322  0103F4  C157  F182         	movff	?_scale+2,printf@tmpval+2
 10323                           
 10324                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 10325  0103F8  C188  F117         	movff	printf@fval,__tdiv_to_l_@f1
 10326  0103FC  C189  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
 10327  010400  C18A  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
 10328  010404  C180  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
 10329  010408  C181  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
 10330  01040C  C182  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
 10331  010410  EC44  F0A0         	call	__tdiv_to_l_	;wreg free
 10332  010414  C117  F184         	movff	?__tdiv_to_l_,printf@val
 10333  010418  C118  F185         	movff	?__tdiv_to_l_+1,printf@val+1
 10334  01041C  C119  F186         	movff	?__tdiv_to_l_+2,printf@val+2
 10335  010420  C11A  F187         	movff	?__tdiv_to_l_+3,printf@val+3
 10336                           
 10337                           ;doprnt.c: 1129: fval = 0.0;
 10338  010424  0E00               	movlw	0
 10339  010426  0101               	movlb	1	; () banked
 10340  010428  6F88               	movwf	printf@fval& (0+255),b
 10341  01042A  0E00               	movlw	0
 10342  01042C  6F89               	movwf	(printf@fval+1)& (0+255),b
 10343  01042E  0E00               	movlw	0
 10344  010430  6F8A               	movwf	(printf@fval+2)& (0+255),b
 10345                           
 10346                           ;doprnt.c: 1130: } else {
 10347  010432  D033               	goto	l1138
 10348  010434                     l1129:
 10349                           
 10350                           ; BSR set to: 1
 10351                           ;doprnt.c: 1131: val = (unsigned long)fval;
 10352                           
 10353                           ; BSR set to: 1
 10354  010434  C188  F155         	movff	printf@fval,___fttol@f1
 10355  010438  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 10356  01043C  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 10357  010440  EC2E  F0A3         	call	___fttol	;wreg free
 10358  010444  C155  F184         	movff	?___fttol,printf@val
 10359  010448  C156  F185         	movff	?___fttol+1,printf@val+1
 10360  01044C  C157  F186         	movff	?___fttol+2,printf@val+2
 10361  010450  C158  F187         	movff	?___fttol+3,printf@val+3
 10362                           
 10363                           ;doprnt.c: 1132: fval -= (double)val;
 10364  010454  C188  F137         	movff	printf@fval,___ftsub@f1
 10365  010458  C189  F138         	movff	printf@fval+1,___ftsub@f1+1
 10366  01045C  C18A  F139         	movff	printf@fval+2,___ftsub@f1+2
 10367  010460  C184  F11F         	movff	printf@val,___lltoft@c
 10368  010464  C185  F120         	movff	printf@val+1,___lltoft@c+1
 10369  010468  C186  F121         	movff	printf@val+2,___lltoft@c+2
 10370  01046C  C187  F122         	movff	printf@val+3,___lltoft@c+3
 10371  010470  ECAF  F0AD         	call	___lltoft	;wreg free
 10372  010474  C11F  F13A         	movff	?___lltoft,___ftsub@f2
 10373  010478  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
 10374  01047C  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
 10375  010480  EC94  F0AF         	call	___ftsub	;wreg free
 10376  010484  C137  F188         	movff	?___ftsub,printf@fval
 10377  010488  C138  F189         	movff	?___ftsub+1,printf@fval+1
 10378  01048C  C139  F18A         	movff	?___ftsub+2,printf@fval+2
 10379                           
 10380                           ;doprnt.c: 1133: exp = 0;
 10381  010490  0E00               	movlw	0
 10382  010492  0101               	movlb	1	; () banked
 10383  010494  6F7F               	movwf	(printf@exp+1)& (0+255),b
 10384  010496  0E00               	movlw	0
 10385  010498  6F7E               	movwf	printf@exp& (0+255),b
 10386  01049A                     l1138:
 10387                           
 10388                           ; BSR set to: 1
 10389                           ;doprnt.c: 1134: }
 10390                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10391                           
 10392                           ; BSR set to: 1
 10393  01049A  0E01               	movlw	1
 10394  01049C  6F8D               	movwf	printf@c& (0+255),b
 10395  01049E                     l8929:
 10396                           
 10397                           ; BSR set to: 1
 10398  01049E  0E0A               	movlw	10
 10399  0104A0  198D               	xorwf	printf@c& (0+255),w,b
 10400  0104A2  B4D8               	btfsc	status,2,c
 10401  0104A4  D01B               	goto	u10460
 10402                           
 10403                           ; BSR set to: 1
 10404                           ;doprnt.c: 1137: if(val < dpowers[c])
 10405                           
 10406                           ; BSR set to: 1
 10407                           
 10408                           ; BSR set to: 1
 10409  0104A6  518D               	movf	printf@c& (0+255),w,b
 10410  0104A8  0D04               	mullw	4
 10411  0104AA  0E29               	movlw	low _dpowers
 10412  0104AC  24F3               	addwf	prodl,w,c
 10413  0104AE  6EF6               	movwf	tblptrl,c
 10414  0104B0  0EF2               	movlw	high _dpowers
 10415  0104B2  20F4               	addwfc	prodh,w,c
 10416  0104B4  6EF7               	movwf	tblptrh,c
 10417  0104B6                     	if	1	;There are 3 active tblptr bytes
 10418  0104B6  6AF8               	clrf	tblptru,c
 10419  0104B8  0E00               	movlw	low (__mediumconst shr (0+16))
 10420  0104BA  22F8               	addwfc	tblptru,f,c
 10421  0104BC                     	endif
 10422  0104BC  0009               	tblrd		*+
 10423  0104BE  50F5               	movf	tablat,w,c
 10424  0104C0  5D84               	subwf	printf@val& (0+255),w,b
 10425  0104C2  0009               	tblrd		*+
 10426  0104C4  50F5               	movf	tablat,w,c
 10427  0104C6  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10428  0104C8  0009               	tblrd		*+
 10429  0104CA  50F5               	movf	tablat,w,c
 10430  0104CC  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10431  0104CE  0009               	tblrd		*+
 10432  0104D0  50F5               	movf	tablat,w,c
 10433  0104D2  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10434  0104D4  A0D8               	btfss	status,0,c
 10435  0104D6  D002               	goto	u10460
 10436                           
 10437                           ; BSR set to: 1
 10438                           
 10439                           ; BSR set to: 1
 10440                           
 10441                           ; BSR set to: 1
 10442                           ;doprnt.c: 1138: break;
 10443  0104D8  2B8D               	incf	printf@c& (0+255),f,b
 10444  0104DA  D7E1               	goto	l8929
 10445  0104DC                     u10460:
 10446                           
 10447                           ; BSR set to: 1
 10448                           ;doprnt.c: 1175: {
 10449                           ;doprnt.c: 1188: if(flag & 0x03)
 10450                           
 10451                           ; BSR set to: 1
 10452  0104DC  0E03               	movlw	3
 10453  0104DE  157C               	andwf	printf@flag& (0+255),w,b
 10454  0104E0  6F6C               	movwf	??_printf& (0+255),b
 10455  0104E2  0E00               	movlw	0
 10456  0104E4  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10457  0104E6  6F6D               	movwf	(??_printf+1)& (0+255),b
 10458  0104E8  516C               	movf	??_printf& (0+255),w,b
 10459  0104EA  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10460  0104EC  B4D8               	btfsc	status,2,c
 10461  0104EE  D04E               	goto	l1143
 10462                           
 10463                           ; BSR set to: 1
 10464                           ;doprnt.c: 1190: (putch('-') );
 10465  0104F0  0E2D               	movlw	45
 10466  0104F2  ECD2  F0B1         	call	_putch
 10467                           
 10468                           ;doprnt.c: 1195: }
 10469                           ;doprnt.c: 1196: while(c--) {
 10470  0104F6  D04A               	goto	l1143
 10471  0104F8                     
 10472                           ;doprnt.c: 1200: {
 10473                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 10474  0104F8  C184  F117         	movff	printf@val,___lldiv@dividend
 10475  0104FC  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10476  010500  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10477  010504  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10478  010508  0101               	movlb	1	; () banked
 10479  01050A  518D               	movf	printf@c& (0+255),w,b
 10480  01050C  0D04               	mullw	4
 10481  01050E  0E29               	movlw	low _dpowers
 10482  010510  24F3               	addwf	prodl,w,c
 10483  010512  6EF6               	movwf	tblptrl,c
 10484  010514  0EF2               	movlw	high _dpowers
 10485  010516  20F4               	addwfc	prodh,w,c
 10486  010518  6EF7               	movwf	tblptrh,c
 10487  01051A                     	if	1	;There are 3 active tblptr bytes
 10488  01051A  6AF8               	clrf	tblptru,c
 10489  01051C  0E00               	movlw	low (__mediumconst shr (0+16))
 10490  01051E  22F8               	addwfc	tblptru,f,c
 10491  010520                     	endif
 10492  010520  0009               	tblrd		*+
 10493  010522  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10494  010526  0009               	tblrd		*+
 10495  010528  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10496  01052C  0009               	tblrd		*+
 10497  01052E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10498  010532  000A               	tblrd		*-
 10499  010534  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10500  010538  EC65  F0AA         	call	___lldiv	;wreg free
 10501  01053C  C117  F180         	movff	?___lldiv,printf@tmpval
 10502  010540  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 10503  010544  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 10504  010548  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 10505                           
 10506                           ;doprnt.c: 1202: tmpval.vd %= 10;
 10507  01054C  C180  F124         	movff	printf@tmpval,___llmod@dividend
 10508  010550  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 10509  010554  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 10510  010558  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 10511  01055C  0E0A               	movlw	10
 10512  01055E  0101               	movlb	1	; () banked
 10513  010560  6F28               	movwf	___llmod@divisor& (0+255),b
 10514  010562  0E00               	movlw	0
 10515  010564  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10516  010566  0E00               	movlw	0
 10517  010568  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10518  01056A  0E00               	movlw	0
 10519  01056C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10520  01056E  EC82  F0AC         	call	___llmod	;wreg free
 10521  010572  C124  F180         	movff	?___llmod,printf@tmpval
 10522  010576  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 10523  01057A  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 10524  01057E  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 10525                           
 10526                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 10527  010582  0101               	movlb	1	; () banked
 10528  010584  5180               	movf	printf@tmpval& (0+255),w,b
 10529  010586  0F30               	addlw	48
 10530  010588  ECD2  F0B1         	call	_putch
 10531  01058C                     l1143:
 10532  01058C  0101               	movlb	1	; () banked
 10533  01058E  078D               	decf	printf@c& (0+255),f,b
 10534  010590  298D               	incf	printf@c& (0+255),w,b
 10535  010592  B4D8               	btfsc	status,2,c
 10536  010594  D008               	goto	l1146
 10537  010596  D7B0               	goto	l1144
 10538  010598                     l8953:
 10539                           
 10540                           ; BSR set to: 1
 10541                           ;doprnt.c: 1208: (putch('0') );
 10542  010598  0E30               	movlw	48
 10543  01059A  ECD2  F0B1         	call	_putch
 10544                           
 10545                           ;doprnt.c: 1209: exp--;
 10546  01059E  0101               	movlb	1	; () banked
 10547  0105A0  077E               	decf	printf@exp& (0+255),f,b
 10548  0105A2  A0D8               	btfss	status,0,c
 10549  0105A4  077F               	decf	(printf@exp+1)& (0+255),f,b
 10550  0105A6                     l1146:
 10551                           
 10552                           ; BSR set to: 1
 10553                           
 10554                           ; BSR set to: 1
 10555  0105A6  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 10556  0105A8  D005               	goto	u10490
 10557  0105AA  517F               	movf	(printf@exp+1)& (0+255),w,b
 10558  0105AC  E1F5               	bnz	l8953
 10559  0105AE  057E               	decf	printf@exp& (0+255),w,b
 10560  0105B0  B0D8               	btfsc	status,0,c
 10561  0105B2  D7F2               	goto	l1147
 10562  0105B4                     u10490:
 10563                           
 10564                           ; BSR set to: 1
 10565                           ;doprnt.c: 1210: }
 10566                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10567                           
 10568                           ; BSR set to: 1
 10569  0105B4  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 10570  0105B6  D009               	goto	l1149
 10571  0105B8  518C               	movf	(printf@prec+1)& (0+255),w,b
 10572  0105BA  E104               	bnz	u10500
 10573  0105BC  0E09               	movlw	9
 10574  0105BE  5D8B               	subwf	printf@prec& (0+255),w,b
 10575  0105C0  A0D8               	btfss	status,0,c
 10576  0105C2  D003               	goto	l1149
 10577  0105C4                     u10500:
 10578                           
 10579                           ; BSR set to: 1
 10580                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 10581  0105C4  0E08               	movlw	8
 10582  0105C6  6F8D               	movwf	printf@c& (0+255),b
 10583  0105C8  D002               	goto	l1150
 10584  0105CA                     l1149:
 10585                           
 10586                           ; BSR set to: 1
 10587                           ;doprnt.c: 1213: else
 10588                           ;doprnt.c: 1214: c = prec;
 10589  0105CA  C18B  F18D         	movff	printf@prec,printf@c
 10590  0105CE                     l1150:
 10591                           
 10592                           ; BSR set to: 1
 10593                           ;doprnt.c: 1215: prec -= c;
 10594                           
 10595                           ; BSR set to: 1
 10596  0105CE  518D               	movf	printf@c& (0+255),w,b
 10597  0105D0  5F8B               	subwf	printf@prec& (0+255),f,b
 10598  0105D2  0E00               	movlw	0
 10599  0105D4  BF8D               	btfsc	printf@c& (0+255),7,b
 10600  0105D6  0EFF               	movlw	255
 10601  0105D8  5B8C               	subwfb	(printf@prec+1)& (0+255),f,b
 10602                           
 10603                           ; BSR set to: 1
 10604                           ;doprnt.c: 1219: if(c)
 10605  0105DA  518D               	movf	printf@c& (0+255),w,b
 10606  0105DC  B4D8               	btfsc	status,2,c
 10607  0105DE  D003               	goto	l1151
 10608                           
 10609                           ; BSR set to: 1
 10610                           ;doprnt.c: 1221: (putch('.') );
 10611  0105E0  0E2E               	movlw	46
 10612  0105E2  ECD2  F0B1         	call	_putch
 10613  0105E6                     l1151:
 10614                           
 10615                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10616  0105E6  0101               	movlb	1	; () banked
 10617  0105E8  518D               	movf	printf@c& (0+255),w,b
 10618  0105EA  EC05  F091         	call	_scale
 10619  0105EE  C155  F172         	movff	?_scale,_printf$3146
 10620  0105F2  C156  F173         	movff	?_scale+1,_printf$3146+1
 10621  0105F6  C157  F174         	movff	?_scale+2,_printf$3146+2
 10622                           
 10623                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10624  0105FA  C188  F149         	movff	printf@fval,___ftmul@f2
 10625  0105FE  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 10626  010602  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 10627  010606  C172  F146         	movff	_printf$3146,___ftmul@f1
 10628  01060A  C173  F147         	movff	_printf$3146+1,___ftmul@f1+1
 10629  01060E  C174  F148         	movff	_printf$3146+2,___ftmul@f1+2
 10630  010612  ECAA  F0A3         	call	___ftmul	;wreg free
 10631  010616  C146  F155         	movff	?___ftmul,___fttol@f1
 10632  01061A  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
 10633  01061E  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
 10634  010622  EC2E  F0A3         	call	___fttol	;wreg free
 10635  010626  C155  F184         	movff	?___fttol,printf@val
 10636  01062A  C156  F185         	movff	?___fttol+1,printf@val+1
 10637  01062E  C157  F186         	movff	?___fttol+2,printf@val+2
 10638  010632  C158  F187         	movff	?___fttol+3,printf@val+3
 10639                           
 10640                           ;doprnt.c: 1228: while(c--) {
 10641  010636  D074               	goto	l1152
 10642  010638                     
 10643                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 10644  010638  C184  F117         	movff	printf@val,___lldiv@dividend
 10645  01063C  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10646  010640  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10647  010644  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10648  010648  0101               	movlb	1	; () banked
 10649  01064A  518D               	movf	printf@c& (0+255),w,b
 10650  01064C  0D04               	mullw	4
 10651  01064E  0E29               	movlw	low _dpowers
 10652  010650  24F3               	addwf	prodl,w,c
 10653  010652  6EF6               	movwf	tblptrl,c
 10654  010654  0EF2               	movlw	high _dpowers
 10655  010656  20F4               	addwfc	prodh,w,c
 10656  010658  6EF7               	movwf	tblptrh,c
 10657  01065A                     	if	1	;There are 3 active tblptr bytes
 10658  01065A  6AF8               	clrf	tblptru,c
 10659  01065C  0E00               	movlw	low (__mediumconst shr (0+16))
 10660  01065E  22F8               	addwfc	tblptru,f,c
 10661  010660                     	endif
 10662  010660  0009               	tblrd		*+
 10663  010662  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10664  010666  0009               	tblrd		*+
 10665  010668  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10666  01066C  0009               	tblrd		*+
 10667  01066E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10668  010672  000A               	tblrd		*-
 10669  010674  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10670  010678  EC65  F0AA         	call	___lldiv	;wreg free
 10671  01067C  C117  F180         	movff	?___lldiv,printf@tmpval
 10672  010680  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 10673  010684  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 10674  010688  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 10675                           
 10676                           ;doprnt.c: 1230: tmpval.vd %= 10;
 10677  01068C  C180  F124         	movff	printf@tmpval,___llmod@dividend
 10678  010690  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 10679  010694  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 10680  010698  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 10681  01069C  0E0A               	movlw	10
 10682  01069E  0101               	movlb	1	; () banked
 10683  0106A0  6F28               	movwf	___llmod@divisor& (0+255),b
 10684  0106A2  0E00               	movlw	0
 10685  0106A4  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10686  0106A6  0E00               	movlw	0
 10687  0106A8  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10688  0106AA  0E00               	movlw	0
 10689  0106AC  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10690  0106AE  EC82  F0AC         	call	___llmod	;wreg free
 10691  0106B2  C124  F180         	movff	?___llmod,printf@tmpval
 10692  0106B6  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 10693  0106BA  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 10694  0106BE  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 10695                           
 10696                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 10697  0106C2  0101               	movlb	1	; () banked
 10698  0106C4  5180               	movf	printf@tmpval& (0+255),w,b
 10699  0106C6  0F30               	addlw	48
 10700  0106C8  ECD2  F0B1         	call	_putch
 10701                           
 10702                           ;doprnt.c: 1232: val %= dpowers[c];
 10703  0106CC  C184  F124         	movff	printf@val,___llmod@dividend
 10704  0106D0  C185  F125         	movff	printf@val+1,___llmod@dividend+1
 10705  0106D4  C186  F126         	movff	printf@val+2,___llmod@dividend+2
 10706  0106D8  C187  F127         	movff	printf@val+3,___llmod@dividend+3
 10707  0106DC  0101               	movlb	1	; () banked
 10708  0106DE  518D               	movf	printf@c& (0+255),w,b
 10709  0106E0  0D04               	mullw	4
 10710  0106E2  0E29               	movlw	low _dpowers
 10711  0106E4  24F3               	addwf	prodl,w,c
 10712  0106E6  6EF6               	movwf	tblptrl,c
 10713  0106E8  0EF2               	movlw	high _dpowers
 10714  0106EA  20F4               	addwfc	prodh,w,c
 10715  0106EC  6EF7               	movwf	tblptrh,c
 10716  0106EE                     	if	1	;There are 3 active tblptr bytes
 10717  0106EE  6AF8               	clrf	tblptru,c
 10718  0106F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10719  0106F2  22F8               	addwfc	tblptru,f,c
 10720  0106F4                     	endif
 10721  0106F4  0009               	tblrd		*+
 10722  0106F6  CFF5 F128          	movff	tablat,___llmod@divisor
 10723  0106FA  0009               	tblrd		*+
 10724  0106FC  CFF5 F129          	movff	tablat,___llmod@divisor+1
 10725  010700  0009               	tblrd		*+
 10726  010702  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 10727  010706  000A               	tblrd		*-
 10728  010708  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 10729  01070C  EC82  F0AC         	call	___llmod	;wreg free
 10730  010710  C124  F184         	movff	?___llmod,printf@val
 10731  010714  C125  F185         	movff	?___llmod+1,printf@val+1
 10732  010718  C126  F186         	movff	?___llmod+2,printf@val+2
 10733  01071C  C127  F187         	movff	?___llmod+3,printf@val+3
 10734  010720                     l1152:
 10735  010720  0101               	movlb	1	; () banked
 10736  010722  078D               	decf	printf@c& (0+255),f,b
 10737  010724  298D               	incf	printf@c& (0+255),w,b
 10738  010726  B4D8               	btfsc	status,2,c
 10739  010728  D008               	goto	l1155
 10740  01072A  D786               	goto	l1153
 10741  01072C                     
 10742                           ; BSR set to: 1
 10743                           ;doprnt.c: 1236: (putch('0') );
 10744                           
 10745                           ; BSR set to: 1
 10746  01072C  0E30               	movlw	48
 10747  01072E  ECD2  F0B1         	call	_putch
 10748                           
 10749                           ;doprnt.c: 1237: prec--;
 10750  010732  0101               	movlb	1	; () banked
 10751  010734  078B               	decf	printf@prec& (0+255),f,b
 10752  010736  A0D8               	btfss	status,0,c
 10753  010738  078C               	decf	(printf@prec+1)& (0+255),f,b
 10754  01073A                     l1155:
 10755                           
 10756                           ; BSR set to: 1
 10757                           
 10758                           ; BSR set to: 1
 10759  01073A  518B               	movf	printf@prec& (0+255),w,b
 10760  01073C  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 10761  01073E  B4D8               	btfsc	status,2,c
 10762  010740  D157               	goto	u10670
 10763  010742  D7F4               	goto	l1156
 10764  010744                     l1120:
 10765                           
 10766                           ; BSR set to: 1
 10767                           ;doprnt.c: 1246: }
 10768                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 10769                           
 10770                           ; BSR set to: 1
 10771  010744  0EC0               	movlw	192
 10772  010746  157C               	andwf	printf@flag& (0+255),w,b
 10773  010748  6F6C               	movwf	??_printf& (0+255),b
 10774  01074A  0E00               	movlw	0
 10775  01074C  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10776  01074E  6F6D               	movwf	(??_printf+1)& (0+255),b
 10777  010750  516C               	movf	??_printf& (0+255),w,b
 10778  010752  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10779  010754  A4D8               	btfss	status,2,c
 10780  010756  D01E               	goto	l1158
 10781                           
 10782                           ; BSR set to: 1
 10783                           ;doprnt.c: 1253: {
 10784                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10785  010758  C17A  FFD9         	movff	printf@ap,fsr2l
 10786  01075C  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10787  010760  CFDE F184          	movff	postinc2,printf@val
 10788  010764  CFDD F185          	movff	postdec2,printf@val+1
 10789  010768  0E00               	movlw	0
 10790  01076A  BF85               	btfsc	(printf@val+1)& (0+255),7,b
 10791  01076C  0EFF               	movlw	-1
 10792  01076E  6F86               	movwf	(printf@val+2)& (0+255),b
 10793  010770  6F87               	movwf	(printf@val+3)& (0+255),b
 10794                           
 10795                           ; BSR set to: 1
 10796  010772  0E02               	movlw	2
 10797  010774  277A               	addwf	printf@ap& (0+255),f,b
 10798  010776  0E00               	movlw	0
 10799  010778  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10800                           
 10801                           ; BSR set to: 1
 10802                           ;doprnt.c: 1261: if((long)val < 0) {
 10803  01077A  AF87               	btfss	(printf@val+3)& (0+255),7,b
 10804  01077C  D01D               	goto	l1160
 10805                           
 10806                           ; BSR set to: 1
 10807                           ;doprnt.c: 1262: flag |= 0x03;
 10808  01077E  0E03               	movlw	3
 10809  010780  137C               	iorwf	printf@flag& (0+255),f,b
 10810                           
 10811                           ; BSR set to: 1
 10812                           ;doprnt.c: 1263: val = -val;
 10813  010782  1F87               	comf	(printf@val+3)& (0+255),f,b
 10814  010784  1F86               	comf	(printf@val+2)& (0+255),f,b
 10815  010786  1F85               	comf	(printf@val+1)& (0+255),f,b
 10816  010788  6D84               	negf	printf@val& (0+255),b
 10817  01078A  0E00               	movlw	0
 10818  01078C  2385               	addwfc	(printf@val+1)& (0+255),f,b
 10819  01078E  2386               	addwfc	(printf@val+2)& (0+255),f,b
 10820  010790  2387               	addwfc	(printf@val+3)& (0+255),f,b
 10821                           
 10822                           ; BSR set to: 1
 10823                           ;doprnt.c: 1264: }
 10824                           ;doprnt.c: 1266: }
 10825  010792  D012               	goto	l1160
 10826  010794                     l1158:
 10827                           
 10828                           ; BSR set to: 1
 10829                           ;doprnt.c: 1268: else
 10830                           ;doprnt.c: 1273: {
 10831                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10832                           
 10833                           ; BSR set to: 1
 10834  010794  C17A  FFD9         	movff	printf@ap,fsr2l
 10835  010798  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10836  01079C  CFDE F16C          	movff	postinc2,??_printf
 10837  0107A0  CFDD F16D          	movff	postdec2,??_printf+1
 10838  0107A4  C16C  F184         	movff	??_printf,printf@val
 10839  0107A8  C16D  F185         	movff	??_printf+1,printf@val+1
 10840  0107AC  6B86               	clrf	(printf@val+2)& (0+255),b
 10841  0107AE  6B87               	clrf	(printf@val+3)& (0+255),b
 10842                           
 10843                           ; BSR set to: 1
 10844  0107B0  0E02               	movlw	2
 10845  0107B2  277A               	addwf	printf@ap& (0+255),f,b
 10846  0107B4  0E00               	movlw	0
 10847  0107B6  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10848  0107B8                     l1160:
 10849                           
 10850                           ; BSR set to: 1
 10851                           ;doprnt.c: 1287: }
 10852                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 10853                           
 10854                           ; BSR set to: 1
 10855  0107B8  518B               	movf	printf@prec& (0+255),w,b
 10856  0107BA  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 10857  0107BC  A4D8               	btfss	status,2,c
 10858  0107BE  D04B               	goto	l1162
 10859                           
 10860                           ; BSR set to: 1
 10861  0107C0  5184               	movf	printf@val& (0+255),w,b
 10862  0107C2  1185               	iorwf	(printf@val+1)& (0+255),w,b
 10863  0107C4  1186               	iorwf	(printf@val+2)& (0+255),w,b
 10864  0107C6  1187               	iorwf	(printf@val+3)& (0+255),w,b
 10865  0107C8  A4D8               	btfss	status,2,c
 10866  0107CA  D045               	goto	l1162
 10867                           
 10868                           ; BSR set to: 1
 10869                           ;doprnt.c: 1291: prec++;
 10870  0107CC  4B8B               	infsnz	printf@prec& (0+255),f,b
 10871  0107CE  2B8C               	incf	(printf@prec+1)& (0+255),f,b
 10872                           
 10873                           ; BSR set to: 1
 10874                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 10875  0107D0  D042               	goto	l1162
 10876  0107D2                     
 10877                           ; BSR set to: 1
 10878                           ;doprnt.c: 1302: case 0xC0:
 10879                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10880                           
 10881                           ; BSR set to: 1
 10882                           
 10883                           ; BSR set to: 1
 10884  0107D2  0E01               	movlw	1
 10885  0107D4  6F8D               	movwf	printf@c& (0+255),b
 10886  0107D6                     l9013:
 10887                           
 10888                           ; BSR set to: 1
 10889  0107D6  0E0A               	movlw	10
 10890  0107D8  198D               	xorwf	printf@c& (0+255),w,b
 10891  0107DA  B4D8               	btfsc	status,2,c
 10892  0107DC  D047               	goto	l1168
 10893                           
 10894                           ; BSR set to: 1
 10895                           ;doprnt.c: 1306: if(val < dpowers[c])
 10896                           
 10897                           ; BSR set to: 1
 10898                           
 10899                           ; BSR set to: 1
 10900  0107DE  518D               	movf	printf@c& (0+255),w,b
 10901  0107E0  0D04               	mullw	4
 10902  0107E2  0E29               	movlw	low _dpowers
 10903  0107E4  24F3               	addwf	prodl,w,c
 10904  0107E6  6EF6               	movwf	tblptrl,c
 10905  0107E8  0EF2               	movlw	high _dpowers
 10906  0107EA  20F4               	addwfc	prodh,w,c
 10907  0107EC  6EF7               	movwf	tblptrh,c
 10908  0107EE                     	if	1	;There are 3 active tblptr bytes
 10909  0107EE  6AF8               	clrf	tblptru,c
 10910  0107F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10911  0107F2  22F8               	addwfc	tblptru,f,c
 10912  0107F4                     	endif
 10913  0107F4  0009               	tblrd		*+
 10914  0107F6  50F5               	movf	tablat,w,c
 10915  0107F8  5D84               	subwf	printf@val& (0+255),w,b
 10916  0107FA  0009               	tblrd		*+
 10917  0107FC  50F5               	movf	tablat,w,c
 10918  0107FE  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10919  010800  0009               	tblrd		*+
 10920  010802  50F5               	movf	tablat,w,c
 10921  010804  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10922  010806  0009               	tblrd		*+
 10923  010808  50F5               	movf	tablat,w,c
 10924  01080A  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10925  01080C  A0D8               	btfss	status,0,c
 10926  01080E  D02E               	goto	l1168
 10927                           
 10928                           ; BSR set to: 1
 10929                           
 10930                           ; BSR set to: 1
 10931                           
 10932                           ; BSR set to: 1
 10933                           ;doprnt.c: 1307: break;
 10934  010810  2B8D               	incf	printf@c& (0+255),f,b
 10935  010812  D7E1               	goto	l9013
 10936  010814                     
 10937                           ; BSR set to: 1
 10938                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 10939                           
 10940                           ; BSR set to: 1
 10941  010814  0E01               	movlw	1
 10942  010816  6F8D               	movwf	printf@c& (0+255),b
 10943  010818                     l9027:
 10944                           
 10945                           ; BSR set to: 1
 10946  010818  0E08               	movlw	8
 10947  01081A  198D               	xorwf	printf@c& (0+255),w,b
 10948  01081C  B4D8               	btfsc	status,2,c
 10949  01081E  D026               	goto	l1168
 10950                           
 10951                           ; BSR set to: 1
 10952                           ;doprnt.c: 1317: if(val < hexpowers[c])
 10953                           
 10954                           ; BSR set to: 1
 10955                           
 10956                           ; BSR set to: 1
 10957  010820  518D               	movf	printf@c& (0+255),w,b
 10958  010822  0D04               	mullw	4
 10959  010824  0E9F               	movlw	low _hexpowers
 10960  010826  24F3               	addwf	prodl,w,c
 10961  010828  6EF6               	movwf	tblptrl,c
 10962  01082A  0EF2               	movlw	high _hexpowers
 10963  01082C  20F4               	addwfc	prodh,w,c
 10964  01082E  6EF7               	movwf	tblptrh,c
 10965  010830                     	if	1	;There are 3 active tblptr bytes
 10966  010830  6AF8               	clrf	tblptru,c
 10967  010832  0E00               	movlw	low (__mediumconst shr (0+16))
 10968  010834  22F8               	addwfc	tblptru,f,c
 10969  010836                     	endif
 10970  010836  0009               	tblrd		*+
 10971  010838  50F5               	movf	tablat,w,c
 10972  01083A  5D84               	subwf	printf@val& (0+255),w,b
 10973  01083C  0009               	tblrd		*+
 10974  01083E  50F5               	movf	tablat,w,c
 10975  010840  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10976  010842  0009               	tblrd		*+
 10977  010844  50F5               	movf	tablat,w,c
 10978  010846  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10979  010848  0009               	tblrd		*+
 10980  01084A  50F5               	movf	tablat,w,c
 10981  01084C  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10982  01084E  A0D8               	btfss	status,0,c
 10983  010850  D00D               	goto	l1168
 10984                           
 10985                           ; BSR set to: 1
 10986                           
 10987                           ; BSR set to: 1
 10988                           
 10989                           ; BSR set to: 1
 10990                           ;doprnt.c: 1318: break;
 10991  010852  2B8D               	incf	printf@c& (0+255),f,b
 10992  010854  D7E1               	goto	l9027
 10993  010856                     l1162:
 10994                           
 10995                           ; BSR set to: 1
 10996                           
 10997                           ; BSR set to: 1
 10998  010856  517C               	movf	printf@flag& (0+255),w,b
 10999  010858  0BC0               	andlw	192
 11000                           
 11001                           ; Switch size 1, requested type "space"
 11002                           ; Number of cases is 3, Range of values is 0 to 192
 11003                           ; switch strategies available:
 11004                           ; Name         Instructions Cycles
 11005                           ; simple_byte           10     6 (average)
 11006                           ;	Chosen strategy is simple_byte
 11007  01085A  0A00               	xorlw	0	; case 0
 11008  01085C  B4D8               	btfsc	status,2,c
 11009  01085E  D7B9               	goto	l1163
 11010  010860  0A80               	xorlw	128	; case 128
 11011  010862  B4D8               	btfsc	status,2,c
 11012  010864  D7D7               	goto	l1169
 11013  010866  0A40               	xorlw	64	; case 192
 11014  010868  B4D8               	btfsc	status,2,c
 11015  01086A  D7B3               	goto	l1163
 11016  01086C                     l1168:
 11017                           
 11018                           ; BSR set to: 1
 11019                           ;doprnt.c: 1339: if(c < prec)
 11020                           
 11021                           ; BSR set to: 1
 11022  01086C  0E80               	movlw	128
 11023  01086E  BF8D               	btfsc	printf@c& (0+255),7,b
 11024  010870  0E7F               	movlw	127
 11025  010872  6F6C               	movwf	??_printf& (0+255),b
 11026  010874  518B               	movf	printf@prec& (0+255),w,b
 11027  010876  5D8D               	subwf	printf@c& (0+255),w,b
 11028  010878  518C               	movf	(printf@prec+1)& (0+255),w,b
 11029  01087A  0A80               	xorlw	128
 11030  01087C  596C               	subwfb	??_printf& (0+255),w,b
 11031  01087E  B0D8               	btfsc	status,0,c
 11032  010880  D003               	goto	l1173
 11033                           
 11034                           ; BSR set to: 1
 11035                           ;doprnt.c: 1340: c = prec;
 11036  010882  C18B  F18D         	movff	printf@prec,printf@c
 11037  010886  D010               	goto	l1175
 11038  010888                     l1173:
 11039                           
 11040                           ; BSR set to: 1
 11041                           ;doprnt.c: 1341: else if(prec < c)
 11042                           
 11043                           ; BSR set to: 1
 11044  010888  518C               	movf	(printf@prec+1)& (0+255),w,b
 11045  01088A  0A80               	xorlw	128
 11046  01088C  6F6C               	movwf	??_printf& (0+255),b
 11047  01088E  518D               	movf	printf@c& (0+255),w,b
 11048  010890  5D8B               	subwf	printf@prec& (0+255),w,b
 11049  010892  0E80               	movlw	128
 11050  010894  BF8D               	btfsc	printf@c& (0+255),7,b
 11051  010896  0E7F               	movlw	127
 11052  010898  596C               	subwfb	??_printf& (0+255),w,b
 11053  01089A  B0D8               	btfsc	status,0,c
 11054  01089C  D005               	goto	l1175
 11055                           
 11056                           ; BSR set to: 1
 11057                           ;doprnt.c: 1342: prec = c;
 11058  01089E  518D               	movf	printf@c& (0+255),w,b
 11059  0108A0  6F8B               	movwf	printf@prec& (0+255),b
 11060  0108A2  6B8C               	clrf	(printf@prec+1)& (0+255),b
 11061  0108A4  BF8B               	btfsc	printf@prec& (0+255),7,b
 11062  0108A6  078C               	decf	(printf@prec+1)& (0+255),f,b
 11063  0108A8                     l1175:
 11064                           
 11065                           ; BSR set to: 1
 11066                           ;doprnt.c: 1422: {
 11067                           ;doprnt.c: 1438: if(flag & 0x03)
 11068                           
 11069                           ; BSR set to: 1
 11070                           
 11071                           ; BSR set to: 1
 11072  0108A8  0E03               	movlw	3
 11073  0108AA  157C               	andwf	printf@flag& (0+255),w,b
 11074  0108AC  6F6C               	movwf	??_printf& (0+255),b
 11075  0108AE  0E00               	movlw	0
 11076  0108B0  157D               	andwf	(printf@flag+1)& (0+255),w,b
 11077  0108B2  6F6D               	movwf	(??_printf+1)& (0+255),b
 11078  0108B4  516C               	movf	??_printf& (0+255),w,b
 11079  0108B6  116D               	iorwf	(??_printf+1)& (0+255),w,b
 11080  0108B8  B4D8               	btfsc	status,2,c
 11081  0108BA  D091               	goto	l1177
 11082                           
 11083                           ; BSR set to: 1
 11084                           ;doprnt.c: 1439: (putch('-') );
 11085  0108BC  0E2D               	movlw	45
 11086  0108BE  ECD2  F0B1         	call	_putch
 11087                           
 11088                           ;doprnt.c: 1469: }
 11089                           ;doprnt.c: 1474: while(prec--) {
 11090  0108C2  D08D               	goto	l1177
 11091  0108C4                     
 11092                           ;doprnt.c: 1486: case 0xC0:
 11093                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11094  0108C4  C18B  F16C         	movff	printf@prec,??_printf
 11095  0108C8  C18C  F16D         	movff	printf@prec+1,??_printf+1
 11096  0108CC  0101               	movlb	1	; () banked
 11097  0108CE  90D8               	bcf	status,0,c
 11098  0108D0  376C               	rlcf	??_printf& (0+255),f,b
 11099  0108D2  376D               	rlcf	(??_printf+1)& (0+255),f,b
 11100  0108D4  90D8               	bcf	status,0,c
 11101  0108D6  376C               	rlcf	??_printf& (0+255),f,b
 11102  0108D8  376D               	rlcf	(??_printf+1)& (0+255),f,b
 11103  0108DA  0E29               	movlw	low _dpowers
 11104  0108DC  256C               	addwf	??_printf& (0+255),w,b
 11105  0108DE  6EF6               	movwf	tblptrl,c
 11106  0108E0  0EF2               	movlw	high _dpowers
 11107  0108E2  216D               	addwfc	(??_printf+1)& (0+255),w,b
 11108  0108E4  6EF7               	movwf	tblptrh,c
 11109  0108E6                     	if	1	;There are 3 active tblptr bytes
 11110  0108E6  6AF8               	clrf	tblptru,c
 11111  0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11112  0108EA  22F8               	addwfc	tblptru,f,c
 11113  0108EC                     	endif
 11114  0108EC  0009               	tblrd		*+
 11115  0108EE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 11116  0108F2  0009               	tblrd		*+
 11117  0108F4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 11118  0108F8  0009               	tblrd		*+
 11119  0108FA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 11120  0108FE  000A               	tblrd		*-
 11121  010900  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 11122  010904  C184  F117         	movff	printf@val,___lldiv@dividend
 11123  010908  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 11124  01090C  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 11125  010910  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 11126  010914  EC65  F0AA         	call	___lldiv	;wreg free
 11127  010918  C117  F124         	movff	?___lldiv,___llmod@dividend
 11128  01091C  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 11129  010920  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 11130  010924  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 11131  010928  0E0A               	movlw	10
 11132  01092A  0101               	movlb	1	; () banked
 11133  01092C  6F28               	movwf	___llmod@divisor& (0+255),b
 11134  01092E  0E00               	movlw	0
 11135  010930  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 11136  010932  0E00               	movlw	0
 11137  010934  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 11138  010936  0E00               	movlw	0
 11139  010938  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 11140  01093A  EC82  F0AC         	call	___llmod	;wreg free
 11141  01093E  0101               	movlb	1	; () banked
 11142  010940  5124               	movf	?___llmod& (0+255),w,b
 11143  010942  0F30               	addlw	48
 11144  010944  6F8D               	movwf	printf@c& (0+255),b
 11145                           
 11146                           ;doprnt.c: 1491: break;
 11147  010946  D048               	goto	l1182
 11148  010948                     
 11149                           ; BSR set to: 1
 11150                           ;doprnt.c: 1499: {
 11151                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11152                           
 11153                           ; BSR set to: 1
 11154  010948  C184  F117         	movff	printf@val,___lldiv@dividend
 11155  01094C  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 11156  010950  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 11157  010954  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 11158  010958  C18B  F16C         	movff	printf@prec,??_printf
 11159  01095C  C18C  F16D         	movff	printf@prec+1,??_printf+1
 11160  010960  90D8               	bcf	status,0,c
 11161  010962  376C               	rlcf	??_printf& (0+255),f,b
 11162  010964  376D               	rlcf	(??_printf+1)& (0+255),f,b
 11163  010966  90D8               	bcf	status,0,c
 11164  010968  376C               	rlcf	??_printf& (0+255),f,b
 11165  01096A  376D               	rlcf	(??_printf+1)& (0+255),f,b
 11166  01096C  0E9F               	movlw	low _hexpowers
 11167  01096E  256C               	addwf	??_printf& (0+255),w,b
 11168  010970  6EF6               	movwf	tblptrl,c
 11169  010972  0EF2               	movlw	high _hexpowers
 11170  010974  216D               	addwfc	(??_printf+1)& (0+255),w,b
 11171  010976  6EF7               	movwf	tblptrh,c
 11172  010978                     	if	1	;There are 3 active tblptr bytes
 11173  010978  6AF8               	clrf	tblptru,c
 11174  01097A  0E00               	movlw	low (__mediumconst shr (0+16))
 11175  01097C  22F8               	addwfc	tblptru,f,c
 11176  01097E                     	endif
 11177  01097E  0009               	tblrd		*+
 11178  010980  CFF5 F11B          	movff	tablat,___lldiv@divisor
 11179  010984  0009               	tblrd		*+
 11180  010986  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 11181  01098A  0009               	tblrd		*+
 11182  01098C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 11183  010990  000A               	tblrd		*-
 11184  010992  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 11185  010996  EC65  F0AA         	call	___lldiv	;wreg free
 11186  01099A  0101               	movlb	1	; () banked
 11187  01099C  5117               	movf	?___lldiv& (0+255),w,b
 11188  01099E  0B0F               	andlw	15
 11189  0109A0  6F75               	movwf	printf@idx& (0+255),b
 11190                           
 11191                           ; BSR set to: 1
 11192                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 11193  0109A2  5175               	movf	printf@idx& (0+255),w,b
 11194  0109A4  0D01               	mullw	1
 11195  0109A6  0EE9               	movlw	low STR_93
 11196  0109A8  24F3               	addwf	prodl,w,c
 11197  0109AA  6EF6               	movwf	tblptrl,c
 11198  0109AC  0EFE               	movlw	high STR_93
 11199  0109AE  20F4               	addwfc	prodh,w,c
 11200  0109B0  6EF7               	movwf	tblptrh,c
 11201  0109B2                     	if	1	;There are 3 active tblptr bytes
 11202  0109B2  6AF8               	clrf	tblptru,c
 11203  0109B4  0E00               	movlw	low (__mediumconst shr (0+16))
 11204  0109B6  22F8               	addwfc	tblptru,f,c
 11205  0109B8                     	endif
 11206  0109B8  0008               	tblrd		*
 11207  0109BA  CFF5 F18D          	movff	tablat,printf@c
 11208                           
 11209                           ; BSR set to: 1
 11210                           ;doprnt.c: 1523: }
 11211                           
 11212                           ;doprnt.c: 1508: }
 11213                           ;doprnt.c: 1510: break;
 11214  0109BE  D00C               	goto	l1182
 11215  0109C0                     l9063:
 11216  0109C0  0101               	movlb	1	; () banked
 11217  0109C2  517C               	movf	printf@flag& (0+255),w,b
 11218  0109C4  0BC0               	andlw	192
 11219                           
 11220                           ; Switch size 1, requested type "space"
 11221                           ; Number of cases is 3, Range of values is 0 to 192
 11222                           ; switch strategies available:
 11223                           ; Name         Instructions Cycles
 11224                           ; simple_byte           10     6 (average)
 11225                           ;	Chosen strategy is simple_byte
 11226  0109C6  0A00               	xorlw	0	; case 0
 11227  0109C8  B4D8               	btfsc	status,2,c
 11228  0109CA  D77C               	goto	l1180
 11229  0109CC  0A80               	xorlw	128	; case 128
 11230  0109CE  B4D8               	btfsc	status,2,c
 11231  0109D0  D7BB               	goto	l1183
 11232  0109D2  0A40               	xorlw	64	; case 192
 11233  0109D4  B4D8               	btfsc	status,2,c
 11234  0109D6  D776               	goto	l1180
 11235  0109D8                     l1182:
 11236                           
 11237                           ; BSR set to: 1
 11238                           ;doprnt.c: 1524: (putch(c) );
 11239                           
 11240                           ; BSR set to: 1
 11241  0109D8  518D               	movf	printf@c& (0+255),w,b
 11242  0109DA  ECD2  F0B1         	call	_putch
 11243  0109DE                     l1177:
 11244  0109DE  0101               	movlb	1	; () banked
 11245  0109E0  078B               	decf	printf@prec& (0+255),f,b
 11246  0109E2  A0D8               	btfss	status,0,c
 11247  0109E4  078C               	decf	(printf@prec+1)& (0+255),f,b
 11248  0109E6  298B               	incf	printf@prec& (0+255),w,b
 11249  0109E8  E1EB               	bnz	l9063
 11250  0109EA  298C               	incf	(printf@prec+1)& (0+255),w,b
 11251  0109EC  A4D8               	btfss	status,2,c
 11252  0109EE  D7E8               	goto	l1179
 11253  0109F0                     u10670:
 11254                           
 11255                           ; BSR set to: 1
 11256                           
 11257                           ; BSR set to: 1
 11258  0109F0  0101               	movlb	1	; () banked
 11259  0109F2  5164               	movf	printf@f& (0+255),w,b
 11260  0109F4  6F6C               	movwf	??_printf& (0+255),b
 11261  0109F6  5165               	movf	(printf@f+1)& (0+255),w,b
 11262  0109F8  6F6D               	movwf	(??_printf+1)& (0+255),b
 11263  0109FA  4B64               	infsnz	printf@f& (0+255),f,b
 11264  0109FC  2B65               	incf	(printf@f+1)& (0+255),f,b
 11265  0109FE  C16C  FFF6         	movff	??_printf,tblptrl
 11266  010A02  C16D  FFF7         	movff	??_printf+1,tblptrh
 11267  010A06  0E00               	movlw	low (__mediumconst shr (0+16))
 11268  010A08  6EF8               	movwf	tblptru,c
 11269  010A0A  0E0D               	movlw	(high __ramtop+-1)
 11270  010A0C  64F7               	cpfsgt	tblptrh,c
 11271  010A0E  D003               	bra	u10687
 11272  010A10  0008               	tblrd		*
 11273  010A12  50F5               	movf	tablat,w,c
 11274  010A14  D005               	bra	u10680
 11275  010A16                     u10687:
 11276  010A16  CFF6 FFE1          	movff	tblptrl,fsr1l
 11277  010A1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11278  010A1E  50E7               	movf	indf1,w,c
 11279  010A20                     u10680:
 11280  010A20  0101               	movlb	1	; () banked
 11281  010A22  6F8D               	movwf	printf@c& (0+255),b
 11282  010A24  518D               	movf	printf@c& (0+255),w,b
 11283  010A26  B4D8               	btfsc	status,2,c
 11284  010A28  0012               	return	
 11285  010A2A  EF07  F080         	goto	l1097
 11286  010A2E                     __end_of_printf:
 11287                           	opt stack 0
 11288                           tblptru	equ	0xFF8
 11289                           tblptrh	equ	0xFF7
 11290                           tblptrl	equ	0xFF6
 11291                           tablat	equ	0xFF5
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           postinc0	equ	0xFEE
 11296                           wreg	equ	0xFE8
 11297                           indf1	equ	0xFE7
 11298                           postdec1	equ	0xFE5
 11299                           fsr1h	equ	0xFE2
 11300                           fsr1l	equ	0xFE1
 11301                           indf2	equ	0xFDF
 11302                           postinc2	equ	0xFDE
 11303                           postdec2	equ	0xFDD
 11304                           fsr2h	equ	0xFDA
 11305                           fsr2l	equ	0xFD9
 11306                           status	equ	0xFD8
 11307                           
 11308 ;; *************** function _scale *****************
 11309 ;; Defined at:
 11310 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  scl             1    wreg     char 
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;  scl             1   91[BANK1 ] char 
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  3   85[BANK1 ] char 
 11317 ;; Registers used:
 11318 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11324 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11325 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11328 ;;Total ram usage:        7 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:   16
 11331 ;; This function calls:
 11332 ;;		___awdiv
 11333 ;;		___awmod
 11334 ;;		___ftmul
 11335 ;;		___wmul
 11336 ;; This function is called by:
 11337 ;;		_printf
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text20
 11342  01220A                     __ptext20:
 11343                           	opt stack 0
 11344  01220A                     _scale:
 11345                           	opt stack 11
 11346                           
 11347                           ; BSR set to: 1
 11348                           ;incstack = 0
 11349                           ;scale@scl stored from wreg
 11350  01220A  0101               	movlb	1	; () banked
 11351  01220C  6F5B               	movwf	scale@scl& (0+255),b
 11352                           
 11353                           ;doprnt.c: 428: if(scl < 0) {
 11354  01220E  0101               	movlb	1	; () banked
 11355  012210  AF5B               	btfss	scale@scl& (0+255),7,b
 11356  012212  D11E               	goto	l1086
 11357                           
 11358                           ; BSR set to: 1
 11359                           ;doprnt.c: 429: scl = -scl;
 11360  012214  6D5B               	negf	scale@scl& (0+255),b
 11361                           
 11362                           ;doprnt.c: 430: if(scl>=110)
 11363  012216  515B               	movf	scale@scl& (0+255),w,b
 11364  012218  0A80               	xorlw	128
 11365  01221A  0F12               	addlw	-238
 11366  01221C  A0D8               	btfss	status,0,c
 11367  01221E  D0A0               	goto	l1087
 11368                           
 11369                           ; BSR set to: 1
 11370                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11371  012220  0E00               	movlw	0
 11372  012222  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11373  012224  0E03               	movlw	3
 11374  012226  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11375  012228  0E00               	movlw	0
 11376  01222A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11377  01222C  0E0A               	movlw	10
 11378  01222E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11379  012230  0E00               	movlw	0
 11380  012232  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11381  012234  0E64               	movlw	100
 11382  012236  6F19               	movwf	___awmod@divisor& (0+255),b
 11383  012238  515B               	movf	scale@scl& (0+255),w,b
 11384  01223A  6F17               	movwf	___awmod@dividend& (0+255),b
 11385  01223C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11386  01223E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11387  012240  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11388  012242  ECDD  F0AB         	call	___awmod	;wreg free
 11389  012246  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11390  01224A  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11391  01224E  EC22  F0AA         	call	___awdiv	;wreg free
 11392  012252  0E09               	movlw	9
 11393  012254  0101               	movlb	1	; () banked
 11394  012256  251D               	addwf	?___awdiv& (0+255),w,b
 11395  012258  6F25               	movwf	___wmul@multiplier& (0+255),b
 11396  01225A  0E00               	movlw	0
 11397  01225C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11398  01225E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11399  012260  ECBB  F0B0         	call	___wmul	;wreg free
 11400  012264  0E78               	movlw	low __npowers_
 11401  012266  0101               	movlb	1	; () banked
 11402  012268  2525               	addwf	?___wmul& (0+255),w,b
 11403  01226A  6EF6               	movwf	tblptrl,c
 11404  01226C  0EF2               	movlw	high __npowers_
 11405  01226E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11406  012270  6EF7               	movwf	tblptrh,c
 11407  012272                     	if	1	;There are 3 active tblptr bytes
 11408  012272  6AF8               	clrf	tblptru,c
 11409  012274  0E00               	movlw	low (__mediumconst shr (0+16))
 11410  012276  22F8               	addwfc	tblptru,f,c
 11411  012278                     	endif
 11412  012278  0009               	tblrd		*+
 11413  01227A  CFF5 F149          	movff	tablat,___ftmul@f2
 11414  01227E  0009               	tblrd		*+
 11415  012280  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11416  012284  000A               	tblrd		*-
 11417  012286  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11418  01228A  0E00               	movlw	0
 11419  01228C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11420  01228E  0E64               	movlw	100
 11421  012290  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11422  012292  515B               	movf	scale@scl& (0+255),w,b
 11423  012294  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11424  012296  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11425  012298  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11426  01229A  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11427  01229C  EC22  F0AA         	call	___awdiv	;wreg free
 11428  0122A0  0E12               	movlw	18
 11429  0122A2  0101               	movlb	1	; () banked
 11430  0122A4  251D               	addwf	?___awdiv& (0+255),w,b
 11431  0122A6  6F25               	movwf	___wmul@multiplier& (0+255),b
 11432  0122A8  0E00               	movlw	0
 11433  0122AA  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11434  0122AC  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11435  0122AE  0E00               	movlw	0
 11436  0122B0  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11437  0122B2  0E03               	movlw	3
 11438  0122B4  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11439  0122B6  ECBB  F0B0         	call	___wmul	;wreg free
 11440  0122BA  0E78               	movlw	low __npowers_
 11441  0122BC  0101               	movlb	1	; () banked
 11442  0122BE  2525               	addwf	?___wmul& (0+255),w,b
 11443  0122C0  6EF6               	movwf	tblptrl,c
 11444  0122C2  0EF2               	movlw	high __npowers_
 11445  0122C4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11446  0122C6  6EF7               	movwf	tblptrh,c
 11447  0122C8                     	if	1	;There are 3 active tblptr bytes
 11448  0122C8  6AF8               	clrf	tblptru,c
 11449  0122CA  0E00               	movlw	low (__mediumconst shr (0+16))
 11450  0122CC  22F8               	addwfc	tblptru,f,c
 11451  0122CE                     	endif
 11452  0122CE  0009               	tblrd		*+
 11453  0122D0  CFF5 F146          	movff	tablat,___ftmul@f1
 11454  0122D4  0009               	tblrd		*+
 11455  0122D6  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11456  0122DA  000A               	tblrd		*-
 11457  0122DC  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11458  0122E0  ECAA  F0A3         	call	___ftmul	;wreg free
 11459  0122E4  C146  F158         	movff	?___ftmul,_scale$3145
 11460  0122E8  C147  F159         	movff	?___ftmul+1,_scale$3145+1
 11461  0122EC  C148  F15A         	movff	?___ftmul+2,_scale$3145+2
 11462                           
 11463                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11464  0122F0  C158  F146         	movff	_scale$3145,___ftmul@f1
 11465  0122F4  C159  F147         	movff	_scale$3145+1,___ftmul@f1+1
 11466  0122F8  C15A  F148         	movff	_scale$3145+2,___ftmul@f1+2
 11467  0122FC  0E00               	movlw	0
 11468  0122FE  0101               	movlb	1	; () banked
 11469  012300  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11470  012302  0E03               	movlw	3
 11471  012304  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11472  012306  0E00               	movlw	0
 11473  012308  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11474  01230A  0E0A               	movlw	10
 11475  01230C  6F19               	movwf	___awmod@divisor& (0+255),b
 11476  01230E  515B               	movf	scale@scl& (0+255),w,b
 11477  012310  6F17               	movwf	___awmod@dividend& (0+255),b
 11478  012312  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11479  012314  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11480  012316  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11481  012318  ECDD  F0AB         	call	___awmod	;wreg free
 11482  01231C  C117  F125         	movff	?___awmod,___wmul@multiplier
 11483  012320  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11484  012324  ECBB  F0B0         	call	___wmul	;wreg free
 11485  012328  0E78               	movlw	low __npowers_
 11486  01232A  0101               	movlb	1	; () banked
 11487  01232C  2525               	addwf	?___wmul& (0+255),w,b
 11488  01232E  6EF6               	movwf	tblptrl,c
 11489  012330  0EF2               	movlw	high __npowers_
 11490  012332  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11491  012334  6EF7               	movwf	tblptrh,c
 11492  012336                     	if	1	;There are 3 active tblptr bytes
 11493  012336  6AF8               	clrf	tblptru,c
 11494  012338  0E00               	movlw	low (__mediumconst shr (0+16))
 11495  01233A  22F8               	addwfc	tblptru,f,c
 11496  01233C                     	endif
 11497  01233C  0009               	tblrd		*+
 11498  01233E  CFF5 F149          	movff	tablat,___ftmul@f2
 11499  012342  0009               	tblrd		*+
 11500  012344  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11501  012348  000A               	tblrd		*-
 11502  01234A  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11503  01234E  ECAA  F0A3         	call	___ftmul	;wreg free
 11504  012352  C146  F155         	movff	?___ftmul,?_scale
 11505  012356  C147  F156         	movff	?___ftmul+1,?_scale+1
 11506  01235A  C148  F157         	movff	?___ftmul+2,?_scale+2
 11507  01235E  0012               	return	
 11508  012360                     l1087:
 11509                           
 11510                           ;doprnt.c: 432: else if(scl > 10)
 11511  012360  0101               	movlb	1	; () banked
 11512  012362  515B               	movf	scale@scl& (0+255),w,b
 11513  012364  0A80               	xorlw	128
 11514  012366  0F75               	addlw	-139
 11515  012368  A0D8               	btfss	status,0,c
 11516  01236A  D05C               	goto	l1090
 11517                           
 11518                           ; BSR set to: 1
 11519                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 11520  01236C  0E00               	movlw	0
 11521  01236E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11522  012370  0E0A               	movlw	10
 11523  012372  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11524  012374  515B               	movf	scale@scl& (0+255),w,b
 11525  012376  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11526  012378  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11527  01237A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11528  01237C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11529  01237E  EC22  F0AA         	call	___awdiv	;wreg free
 11530  012382  0E09               	movlw	9
 11531  012384  0101               	movlb	1	; () banked
 11532  012386  251D               	addwf	?___awdiv& (0+255),w,b
 11533  012388  6F25               	movwf	___wmul@multiplier& (0+255),b
 11534  01238A  0E00               	movlw	0
 11535  01238C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11536  01238E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11537  012390  0E00               	movlw	0
 11538  012392  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11539  012394  0E03               	movlw	3
 11540  012396  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11541  012398  ECBB  F0B0         	call	___wmul	;wreg free
 11542  01239C  0E78               	movlw	low __npowers_
 11543  01239E  0101               	movlb	1	; () banked
 11544  0123A0  2525               	addwf	?___wmul& (0+255),w,b
 11545  0123A2  6EF6               	movwf	tblptrl,c
 11546  0123A4  0EF2               	movlw	high __npowers_
 11547  0123A6  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11548  0123A8  6EF7               	movwf	tblptrh,c
 11549  0123AA                     	if	1	;There are 3 active tblptr bytes
 11550  0123AA  6AF8               	clrf	tblptru,c
 11551  0123AC  0E00               	movlw	low (__mediumconst shr (0+16))
 11552  0123AE  22F8               	addwfc	tblptru,f,c
 11553  0123B0                     	endif
 11554  0123B0  0009               	tblrd		*+
 11555  0123B2  CFF5 F146          	movff	tablat,___ftmul@f1
 11556  0123B6  0009               	tblrd		*+
 11557  0123B8  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11558  0123BC  000A               	tblrd		*-
 11559  0123BE  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11560  0123C2  0E00               	movlw	0
 11561  0123C4  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11562  0123C6  0E03               	movlw	3
 11563  0123C8  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11564  0123CA  0E00               	movlw	0
 11565  0123CC  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11566  0123CE  0E0A               	movlw	10
 11567  0123D0  6F19               	movwf	___awmod@divisor& (0+255),b
 11568  0123D2  515B               	movf	scale@scl& (0+255),w,b
 11569  0123D4  6F17               	movwf	___awmod@dividend& (0+255),b
 11570  0123D6  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11571  0123D8  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11572  0123DA  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11573  0123DC  ECDD  F0AB         	call	___awmod	;wreg free
 11574  0123E0  C117  F125         	movff	?___awmod,___wmul@multiplier
 11575  0123E4  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11576  0123E8  ECBB  F0B0         	call	___wmul	;wreg free
 11577  0123EC  0E78               	movlw	low __npowers_
 11578  0123EE  0101               	movlb	1	; () banked
 11579  0123F0  2525               	addwf	?___wmul& (0+255),w,b
 11580  0123F2  6EF6               	movwf	tblptrl,c
 11581  0123F4  0EF2               	movlw	high __npowers_
 11582  0123F6  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11583  0123F8  6EF7               	movwf	tblptrh,c
 11584  0123FA                     	if	1	;There are 3 active tblptr bytes
 11585  0123FA  6AF8               	clrf	tblptru,c
 11586  0123FC  0E00               	movlw	low (__mediumconst shr (0+16))
 11587  0123FE  22F8               	addwfc	tblptru,f,c
 11588  012400                     	endif
 11589  012400  0009               	tblrd		*+
 11590  012402  CFF5 F149          	movff	tablat,___ftmul@f2
 11591  012406  0009               	tblrd		*+
 11592  012408  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11593  01240C  000A               	tblrd		*-
 11594  01240E  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11595  012412  ECAA  F0A3         	call	___ftmul	;wreg free
 11596  012416  C146  F155         	movff	?___ftmul,?_scale
 11597  01241A  C147  F156         	movff	?___ftmul+1,?_scale+1
 11598  01241E  C148  F157         	movff	?___ftmul+2,?_scale+2
 11599  012422  0012               	return	
 11600  012424                     l1090:
 11601                           
 11602                           ;doprnt.c: 434: return _npowers_[scl];
 11603  012424  0101               	movlb	1	; () banked
 11604  012426  515B               	movf	scale@scl& (0+255),w,b
 11605  012428  0D03               	mullw	3
 11606  01242A  0E78               	movlw	low __npowers_
 11607  01242C  24F3               	addwf	prodl,w,c
 11608  01242E  6EF6               	movwf	tblptrl,c
 11609  012430  0EF2               	movlw	high __npowers_
 11610  012432  20F4               	addwfc	prodh,w,c
 11611  012434  6EF7               	movwf	tblptrh,c
 11612  012436                     	if	1	;There are 3 active tblptr bytes
 11613  012436  6AF8               	clrf	tblptru,c
 11614  012438  0E00               	movlw	low (__mediumconst shr (0+16))
 11615  01243A  22F8               	addwfc	tblptru,f,c
 11616  01243C                     	endif
 11617  01243C  0009               	tblrd		*+
 11618  01243E  CFF5 F155          	movff	tablat,?_scale
 11619  012442  0009               	tblrd		*+
 11620  012444  CFF5 F156          	movff	tablat,?_scale+1
 11621  012448  000A               	tblrd		*-
 11622  01244A  CFF5 F157          	movff	tablat,?_scale+2
 11623                           
 11624                           ; BSR set to: 1
 11625  01244E  0012               	return	
 11626  012450                     l1086:
 11627                           
 11628                           ; BSR set to: 1
 11629                           ;doprnt.c: 435: }
 11630                           ;doprnt.c: 436: if(scl>=110)
 11631                           
 11632                           ; BSR set to: 1
 11633  012450  515B               	movf	scale@scl& (0+255),w,b
 11634  012452  0A80               	xorlw	128
 11635  012454  0F12               	addlw	-238
 11636  012456  A0D8               	btfss	status,0,c
 11637  012458  D0A0               	goto	l1091
 11638                           
 11639                           ; BSR set to: 1
 11640                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11641  01245A  0E00               	movlw	0
 11642  01245C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11643  01245E  0E03               	movlw	3
 11644  012460  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11645  012462  0E00               	movlw	0
 11646  012464  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11647  012466  0E0A               	movlw	10
 11648  012468  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11649  01246A  0E00               	movlw	0
 11650  01246C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11651  01246E  0E64               	movlw	100
 11652  012470  6F19               	movwf	___awmod@divisor& (0+255),b
 11653  012472  515B               	movf	scale@scl& (0+255),w,b
 11654  012474  6F17               	movwf	___awmod@dividend& (0+255),b
 11655  012476  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11656  012478  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11657  01247A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11658  01247C  ECDD  F0AB         	call	___awmod	;wreg free
 11659  012480  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11660  012484  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11661  012488  EC22  F0AA         	call	___awdiv	;wreg free
 11662  01248C  0E09               	movlw	9
 11663  01248E  0101               	movlb	1	; () banked
 11664  012490  251D               	addwf	?___awdiv& (0+255),w,b
 11665  012492  6F25               	movwf	___wmul@multiplier& (0+255),b
 11666  012494  0E00               	movlw	0
 11667  012496  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11668  012498  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11669  01249A  ECBB  F0B0         	call	___wmul	;wreg free
 11670  01249E  0E51               	movlw	low __powers_
 11671  0124A0  0101               	movlb	1	; () banked
 11672  0124A2  2525               	addwf	?___wmul& (0+255),w,b
 11673  0124A4  6EF6               	movwf	tblptrl,c
 11674  0124A6  0EF2               	movlw	high __powers_
 11675  0124A8  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11676  0124AA  6EF7               	movwf	tblptrh,c
 11677  0124AC                     	if	1	;There are 3 active tblptr bytes
 11678  0124AC  6AF8               	clrf	tblptru,c
 11679  0124AE  0E00               	movlw	low (__mediumconst shr (0+16))
 11680  0124B0  22F8               	addwfc	tblptru,f,c
 11681  0124B2                     	endif
 11682  0124B2  0009               	tblrd		*+
 11683  0124B4  CFF5 F149          	movff	tablat,___ftmul@f2
 11684  0124B8  0009               	tblrd		*+
 11685  0124BA  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11686  0124BE  000A               	tblrd		*-
 11687  0124C0  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11688  0124C4  0E00               	movlw	0
 11689  0124C6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11690  0124C8  0E64               	movlw	100
 11691  0124CA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11692  0124CC  515B               	movf	scale@scl& (0+255),w,b
 11693  0124CE  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11694  0124D0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11695  0124D2  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11696  0124D4  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11697  0124D6  EC22  F0AA         	call	___awdiv	;wreg free
 11698  0124DA  0E12               	movlw	18
 11699  0124DC  0101               	movlb	1	; () banked
 11700  0124DE  251D               	addwf	?___awdiv& (0+255),w,b
 11701  0124E0  6F25               	movwf	___wmul@multiplier& (0+255),b
 11702  0124E2  0E00               	movlw	0
 11703  0124E4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11704  0124E6  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11705  0124E8  0E00               	movlw	0
 11706  0124EA  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11707  0124EC  0E03               	movlw	3
 11708  0124EE  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11709  0124F0  ECBB  F0B0         	call	___wmul	;wreg free
 11710  0124F4  0E51               	movlw	low __powers_
 11711  0124F6  0101               	movlb	1	; () banked
 11712  0124F8  2525               	addwf	?___wmul& (0+255),w,b
 11713  0124FA  6EF6               	movwf	tblptrl,c
 11714  0124FC  0EF2               	movlw	high __powers_
 11715  0124FE  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11716  012500  6EF7               	movwf	tblptrh,c
 11717  012502                     	if	1	;There are 3 active tblptr bytes
 11718  012502  6AF8               	clrf	tblptru,c
 11719  012504  0E00               	movlw	low (__mediumconst shr (0+16))
 11720  012506  22F8               	addwfc	tblptru,f,c
 11721  012508                     	endif
 11722  012508  0009               	tblrd		*+
 11723  01250A  CFF5 F146          	movff	tablat,___ftmul@f1
 11724  01250E  0009               	tblrd		*+
 11725  012510  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11726  012514  000A               	tblrd		*-
 11727  012516  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11728  01251A  ECAA  F0A3         	call	___ftmul	;wreg free
 11729  01251E  C146  F158         	movff	?___ftmul,_scale$3145
 11730  012522  C147  F159         	movff	?___ftmul+1,_scale$3145+1
 11731  012526  C148  F15A         	movff	?___ftmul+2,_scale$3145+2
 11732                           
 11733                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11734  01252A  C158  F146         	movff	_scale$3145,___ftmul@f1
 11735  01252E  C159  F147         	movff	_scale$3145+1,___ftmul@f1+1
 11736  012532  C15A  F148         	movff	_scale$3145+2,___ftmul@f1+2
 11737  012536  0E00               	movlw	0
 11738  012538  0101               	movlb	1	; () banked
 11739  01253A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11740  01253C  0E03               	movlw	3
 11741  01253E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11742  012540  0E00               	movlw	0
 11743  012542  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11744  012544  0E0A               	movlw	10
 11745  012546  6F19               	movwf	___awmod@divisor& (0+255),b
 11746  012548  515B               	movf	scale@scl& (0+255),w,b
 11747  01254A  6F17               	movwf	___awmod@dividend& (0+255),b
 11748  01254C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11749  01254E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11750  012550  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11751  012552  ECDD  F0AB         	call	___awmod	;wreg free
 11752  012556  C117  F125         	movff	?___awmod,___wmul@multiplier
 11753  01255A  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11754  01255E  ECBB  F0B0         	call	___wmul	;wreg free
 11755  012562  0E51               	movlw	low __powers_
 11756  012564  0101               	movlb	1	; () banked
 11757  012566  2525               	addwf	?___wmul& (0+255),w,b
 11758  012568  6EF6               	movwf	tblptrl,c
 11759  01256A  0EF2               	movlw	high __powers_
 11760  01256C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11761  01256E  6EF7               	movwf	tblptrh,c
 11762  012570                     	if	1	;There are 3 active tblptr bytes
 11763  012570  6AF8               	clrf	tblptru,c
 11764  012572  0E00               	movlw	low (__mediumconst shr (0+16))
 11765  012574  22F8               	addwfc	tblptru,f,c
 11766  012576                     	endif
 11767  012576  0009               	tblrd		*+
 11768  012578  CFF5 F149          	movff	tablat,___ftmul@f2
 11769  01257C  0009               	tblrd		*+
 11770  01257E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11771  012582  000A               	tblrd		*-
 11772  012584  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11773  012588  ECAA  F0A3         	call	___ftmul	;wreg free
 11774  01258C  C146  F155         	movff	?___ftmul,?_scale
 11775  012590  C147  F156         	movff	?___ftmul+1,?_scale+1
 11776  012594  C148  F157         	movff	?___ftmul+2,?_scale+2
 11777  012598  0012               	return	
 11778  01259A                     l1091:
 11779                           
 11780                           ;doprnt.c: 438: else if(scl > 10)
 11781  01259A  0101               	movlb	1	; () banked
 11782  01259C  515B               	movf	scale@scl& (0+255),w,b
 11783  01259E  0A80               	xorlw	128
 11784  0125A0  0F75               	addlw	-139
 11785  0125A2  A0D8               	btfss	status,0,c
 11786  0125A4  D05C               	goto	l1093
 11787                           
 11788                           ; BSR set to: 1
 11789                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 11790  0125A6  0E00               	movlw	0
 11791  0125A8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11792  0125AA  0E0A               	movlw	10
 11793  0125AC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11794  0125AE  515B               	movf	scale@scl& (0+255),w,b
 11795  0125B0  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11796  0125B2  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11797  0125B4  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11798  0125B6  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11799  0125B8  EC22  F0AA         	call	___awdiv	;wreg free
 11800  0125BC  0E09               	movlw	9
 11801  0125BE  0101               	movlb	1	; () banked
 11802  0125C0  251D               	addwf	?___awdiv& (0+255),w,b
 11803  0125C2  6F25               	movwf	___wmul@multiplier& (0+255),b
 11804  0125C4  0E00               	movlw	0
 11805  0125C6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11806  0125C8  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11807  0125CA  0E00               	movlw	0
 11808  0125CC  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11809  0125CE  0E03               	movlw	3
 11810  0125D0  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11811  0125D2  ECBB  F0B0         	call	___wmul	;wreg free
 11812  0125D6  0E51               	movlw	low __powers_
 11813  0125D8  0101               	movlb	1	; () banked
 11814  0125DA  2525               	addwf	?___wmul& (0+255),w,b
 11815  0125DC  6EF6               	movwf	tblptrl,c
 11816  0125DE  0EF2               	movlw	high __powers_
 11817  0125E0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11818  0125E2  6EF7               	movwf	tblptrh,c
 11819  0125E4                     	if	1	;There are 3 active tblptr bytes
 11820  0125E4  6AF8               	clrf	tblptru,c
 11821  0125E6  0E00               	movlw	low (__mediumconst shr (0+16))
 11822  0125E8  22F8               	addwfc	tblptru,f,c
 11823  0125EA                     	endif
 11824  0125EA  0009               	tblrd		*+
 11825  0125EC  CFF5 F146          	movff	tablat,___ftmul@f1
 11826  0125F0  0009               	tblrd		*+
 11827  0125F2  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11828  0125F6  000A               	tblrd		*-
 11829  0125F8  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11830  0125FC  0E00               	movlw	0
 11831  0125FE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11832  012600  0E03               	movlw	3
 11833  012602  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11834  012604  0E00               	movlw	0
 11835  012606  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11836  012608  0E0A               	movlw	10
 11837  01260A  6F19               	movwf	___awmod@divisor& (0+255),b
 11838  01260C  515B               	movf	scale@scl& (0+255),w,b
 11839  01260E  6F17               	movwf	___awmod@dividend& (0+255),b
 11840  012610  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11841  012612  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11842  012614  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11843  012616  ECDD  F0AB         	call	___awmod	;wreg free
 11844  01261A  C117  F125         	movff	?___awmod,___wmul@multiplier
 11845  01261E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11846  012622  ECBB  F0B0         	call	___wmul	;wreg free
 11847  012626  0E51               	movlw	low __powers_
 11848  012628  0101               	movlb	1	; () banked
 11849  01262A  2525               	addwf	?___wmul& (0+255),w,b
 11850  01262C  6EF6               	movwf	tblptrl,c
 11851  01262E  0EF2               	movlw	high __powers_
 11852  012630  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11853  012632  6EF7               	movwf	tblptrh,c
 11854  012634                     	if	1	;There are 3 active tblptr bytes
 11855  012634  6AF8               	clrf	tblptru,c
 11856  012636  0E00               	movlw	low (__mediumconst shr (0+16))
 11857  012638  22F8               	addwfc	tblptru,f,c
 11858  01263A                     	endif
 11859  01263A  0009               	tblrd		*+
 11860  01263C  CFF5 F149          	movff	tablat,___ftmul@f2
 11861  012640  0009               	tblrd		*+
 11862  012642  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11863  012646  000A               	tblrd		*-
 11864  012648  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11865  01264C  ECAA  F0A3         	call	___ftmul	;wreg free
 11866  012650  C146  F155         	movff	?___ftmul,?_scale
 11867  012654  C147  F156         	movff	?___ftmul+1,?_scale+1
 11868  012658  C148  F157         	movff	?___ftmul+2,?_scale+2
 11869  01265C  0012               	return	
 11870  01265E                     l1093:
 11871                           
 11872                           ;doprnt.c: 440: return _powers_[scl];
 11873  01265E  0101               	movlb	1	; () banked
 11874  012660  515B               	movf	scale@scl& (0+255),w,b
 11875  012662  0D03               	mullw	3
 11876  012664  0E51               	movlw	low __powers_
 11877  012666  24F3               	addwf	prodl,w,c
 11878  012668  6EF6               	movwf	tblptrl,c
 11879  01266A  0EF2               	movlw	high __powers_
 11880  01266C  20F4               	addwfc	prodh,w,c
 11881  01266E  6EF7               	movwf	tblptrh,c
 11882  012670                     	if	1	;There are 3 active tblptr bytes
 11883  012670  6AF8               	clrf	tblptru,c
 11884  012672  0E00               	movlw	low (__mediumconst shr (0+16))
 11885  012674  22F8               	addwfc	tblptru,f,c
 11886  012676                     	endif
 11887  012676  0009               	tblrd		*+
 11888  012678  CFF5 F155          	movff	tablat,?_scale
 11889  01267C  0009               	tblrd		*+
 11890  01267E  CFF5 F156          	movff	tablat,?_scale+1
 11891  012682  000A               	tblrd		*-
 11892  012684  CFF5 F157          	movff	tablat,?_scale+2
 11893  012688  0012               	return	
 11894  01268A                     __end_of_scale:
 11895                           	opt stack 0
 11896                           tblptru	equ	0xFF8
 11897                           tblptrh	equ	0xFF7
 11898                           tblptrl	equ	0xFF6
 11899                           tablat	equ	0xFF5
 11900                           prodh	equ	0xFF4
 11901                           prodl	equ	0xFF3
 11902                           intcon	equ	0xFF2
 11903                           postinc0	equ	0xFEE
 11904                           wreg	equ	0xFE8
 11905                           indf1	equ	0xFE7
 11906                           postdec1	equ	0xFE5
 11907                           fsr1h	equ	0xFE2
 11908                           fsr1l	equ	0xFE1
 11909                           indf2	equ	0xFDF
 11910                           postinc2	equ	0xFDE
 11911                           postdec2	equ	0xFDD
 11912                           fsr2h	equ	0xFDA
 11913                           fsr2l	equ	0xFD9
 11914                           status	equ	0xFD8
 11915                           
 11916 ;; *************** function _putch *****************
 11917 ;; Defined at:
 11918 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  txData          1    wreg     unsigned char 
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;  txData          1   24[BANK1 ] unsigned char 
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      void 
 11925 ;; Registers used:
 11926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11933 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11935 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11936 ;;Total ram usage:        1 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; Hardware stack levels required when called:   15
 11939 ;; This function calls:
 11940 ;;		_EUSART2_Write
 11941 ;; This function is called by:
 11942 ;;		_printf
 11943 ;; This function uses a non-reentrant model
 11944 ;;
 11945                           
 11946                           	psect	text21
 11947  0163A4                     __ptext21:
 11948                           	opt stack 0
 11949  0163A4                     _putch:
 11950                           	opt stack 12
 11951                           
 11952                           ;incstack = 0
 11953                           ;putch@txData stored from wreg
 11954  0163A4  0101               	movlb	1	; () banked
 11955  0163A6  6F18               	movwf	putch@txData& (0+255),b
 11956                           
 11957                           ;eusart2.c: 182: EUSART2_Write(txData);
 11958  0163A8  0101               	movlb	1	; () banked
 11959  0163AA  5118               	movf	putch@txData& (0+255),w,b
 11960  0163AC  EC2B  F0AF         	call	_EUSART2_Write
 11961  0163B0  0012               	return		;funcret
 11962  0163B2                     __end_of_putch:
 11963                           	opt stack 0
 11964                           tblptru	equ	0xFF8
 11965                           tblptrh	equ	0xFF7
 11966                           tblptrl	equ	0xFF6
 11967                           tablat	equ	0xFF5
 11968                           prodh	equ	0xFF4
 11969                           prodl	equ	0xFF3
 11970                           intcon	equ	0xFF2
 11971                           postinc0	equ	0xFEE
 11972                           wreg	equ	0xFE8
 11973                           indf1	equ	0xFE7
 11974                           postdec1	equ	0xFE5
 11975                           fsr1h	equ	0xFE2
 11976                           fsr1l	equ	0xFE1
 11977                           indf2	equ	0xFDF
 11978                           postinc2	equ	0xFDE
 11979                           postdec2	equ	0xFDD
 11980                           fsr2h	equ	0xFDA
 11981                           fsr2l	equ	0xFD9
 11982                           status	equ	0xFD8
 11983                           
 11984 ;; *************** function _EUSART2_Write *****************
 11985 ;; Defined at:
 11986 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 11987 ;; Parameters:    Size  Location     Type
 11988 ;;  txData          1    wreg     unsigned char 
 11989 ;; Auto vars:     Size  Location     Type
 11990 ;;  txData          1   23[BANK1 ] unsigned char 
 11991 ;; Return value:  Size  Location     Type
 11992 ;;                  1    wreg      void 
 11993 ;; Registers used:
 11994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11995 ;; Tracked objects:
 11996 ;;		On entry : 0/0
 11997 ;;		On exit  : 0/0
 11998 ;;		Unchanged: 0/0
 11999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12001 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12003 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12004 ;;Total ram usage:        1 bytes
 12005 ;; Hardware stack levels used:    1
 12006 ;; Hardware stack levels required when called:   14
 12007 ;; This function calls:
 12008 ;;		Nothing
 12009 ;; This function is called by:
 12010 ;;		_putch
 12011 ;; This function uses a non-reentrant model
 12012 ;;
 12013                           
 12014                           	psect	text22
 12015  015E56                     __ptext22:
 12016                           	opt stack 0
 12017  015E56                     _EUSART2_Write:
 12018                           	opt stack 12
 12019                           
 12020                           ;incstack = 0
 12021                           ;EUSART2_Write@txData stored from wreg
 12022  015E56  0101               	movlb	1	; () banked
 12023  015E58  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 12024                           
 12025                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 12026  015E5A  D001               	goto	l374
 12027  015E5C                     l375:
 12028                           
 12029                           ; BSR set to: 1
 12030  015E5C  0004               	clrwdt		;# 
 12031  015E5E                     l374:
 12032  015E5E  0101               	movlb	1	; () banked
 12033  015E60  51D8               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 12034  015E62  B4D8               	btfsc	status,2,c
 12035  015E64  D7FB               	goto	l375
 12036                           
 12037                           ; BSR set to: 1
 12038                           ;eusart2.c: 156: }
 12039                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 12040  015E66  010E               	movlb	14	; () banked
 12041  015E68  BD2C               	btfsc	44,6,b	;volatile
 12042  015E6A  D003               	goto	l377
 12043                           
 12044                           ; BSR set to: 14
 12045                           ;eusart2.c: 159: {
 12046                           ;eusart2.c: 160: TX2REG = txData;
 12047  015E6C  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 12048                           
 12049                           ;eusart2.c: 161: }
 12050  015E70  D013               	goto	l378
 12051  015E72                     l377:
 12052                           
 12053                           ; BSR set to: 14
 12054                           ;eusart2.c: 162: else
 12055                           ;eusart2.c: 163: {
 12056                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 12057  015E72  9D2C               	bcf	44,6,b	;volatile
 12058                           
 12059                           ; BSR set to: 14
 12060                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 12061  015E74  0101               	movlb	1	; () banked
 12062  015E76  51DA               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 12063  015E78  0D01               	mullw	1
 12064  015E7A  0E00               	movlw	low _eusart2TxBuffer
 12065  015E7C  24F3               	addwf	prodl,w,c
 12066  015E7E  6ED9               	movwf	fsr2l,c
 12067  015E80  0E02               	movlw	high _eusart2TxBuffer
 12068  015E82  20F4               	addwfc	prodh,w,c
 12069  015E84  6EDA               	movwf	fsr2h,c
 12070  015E86  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 12071                           
 12072                           ; BSR set to: 1
 12073  015E8A  2BDA               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 12074                           
 12075                           ; BSR set to: 1
 12076                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 12077  015E8C  0E7F               	movlw	127
 12078  015E8E  65DA               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 12079  015E90  D002               	goto	l379
 12080                           
 12081                           ; BSR set to: 1
 12082                           ;eusart2.c: 167: {
 12083                           ;eusart2.c: 168: eusart2TxHead = 0;
 12084  015E92  0E00               	movlw	0
 12085  015E94  6FDA               	movwf	_eusart2TxHead& (0+255),b	;volatile
 12086  015E96                     l379:
 12087                           
 12088                           ; BSR set to: 1
 12089                           ;eusart2.c: 169: }
 12090                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 12091                           
 12092                           ; BSR set to: 1
 12093  015E96  07D8               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 12094  015E98                     l378:
 12095                           
 12096                           ;eusart2.c: 171: }
 12097                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 12098                           
 12099                           ; BSR set to: 1
 12100  015E98  010E               	movlb	14	; () banked
 12101  015E9A  8D2C               	bsf	44,6,b	;volatile
 12102                           
 12103                           ; BSR set to: 14
 12104  015E9C  0012               	return		;funcret
 12105  015E9E                     __end_of_EUSART2_Write:
 12106                           	opt stack 0
 12107                           tblptru	equ	0xFF8
 12108                           tblptrh	equ	0xFF7
 12109                           tblptrl	equ	0xFF6
 12110                           tablat	equ	0xFF5
 12111                           prodh	equ	0xFF4
 12112                           prodl	equ	0xFF3
 12113                           intcon	equ	0xFF2
 12114                           postinc0	equ	0xFEE
 12115                           wreg	equ	0xFE8
 12116                           indf1	equ	0xFE7
 12117                           postdec1	equ	0xFE5
 12118                           fsr1h	equ	0xFE2
 12119                           fsr1l	equ	0xFE1
 12120                           indf2	equ	0xFDF
 12121                           postinc2	equ	0xFDE
 12122                           postdec2	equ	0xFDD
 12123                           fsr2h	equ	0xFDA
 12124                           fsr2l	equ	0xFD9
 12125                           status	equ	0xFD8
 12126                           
 12127 ;; *************** function _isdigit *****************
 12128 ;; Defined at:
 12129 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;  c               1    wreg     unsigned char 
 12132 ;; Auto vars:     Size  Location     Type
 12133 ;;  c               1   25[BANK1 ] unsigned char 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;		None               void
 12136 ;; Registers used:
 12137 ;;		wreg, status,2, status,0
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12144 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12145 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12146 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12147 ;;Total ram usage:        3 bytes
 12148 ;; Hardware stack levels used:    1
 12149 ;; Hardware stack levels required when called:   14
 12150 ;; This function calls:
 12151 ;;		Nothing
 12152 ;; This function is called by:
 12153 ;;		_printf
 12154 ;;		_atoi
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158                           	psect	text23
 12159  0162A8                     __ptext23:
 12160                           	opt stack 0
 12161  0162A8                     _isdigit:
 12162                           	opt stack 13
 12163                           
 12164                           ; BSR set to: 14
 12165                           ;incstack = 0
 12166                           ;isdigit@c stored from wreg
 12167  0162A8  0101               	movlb	1	; () banked
 12168  0162AA  6F19               	movwf	isdigit@c& (0+255),b
 12169  0162AC  0E00               	movlw	0
 12170  0162AE  0101               	movlb	1	; () banked
 12171  0162B0  6F18               	movwf	_isdigit$2501& (0+255),b
 12172                           
 12173                           ; BSR set to: 1
 12174  0162B2  0E3A               	movlw	58
 12175  0162B4  6119               	cpfslt	isdigit@c& (0+255),b
 12176  0162B6  D005               	goto	l1614
 12177                           
 12178                           ; BSR set to: 1
 12179  0162B8  0E2F               	movlw	47
 12180  0162BA  6519               	cpfsgt	isdigit@c& (0+255),b
 12181  0162BC  D002               	goto	l1614
 12182                           
 12183                           ; BSR set to: 1
 12184  0162BE  0E01               	movlw	1
 12185  0162C0  6F18               	movwf	_isdigit$2501& (0+255),b
 12186  0162C2                     l1614:
 12187                           
 12188                           ; BSR set to: 1
 12189                           
 12190                           ; BSR set to: 1
 12191  0162C2  C118  F117         	movff	_isdigit$2501,??_isdigit
 12192  0162C6  3117               	rrcf	??_isdigit& (0+255),w,b
 12193  0162C8  0012               	return	
 12194  0162CA                     __end_of_isdigit:
 12195                           	opt stack 0
 12196                           tblptru	equ	0xFF8
 12197                           tblptrh	equ	0xFF7
 12198                           tblptrl	equ	0xFF6
 12199                           tablat	equ	0xFF5
 12200                           prodh	equ	0xFF4
 12201                           prodl	equ	0xFF3
 12202                           intcon	equ	0xFF2
 12203                           postinc0	equ	0xFEE
 12204                           wreg	equ	0xFE8
 12205                           indf1	equ	0xFE7
 12206                           postdec1	equ	0xFE5
 12207                           fsr1h	equ	0xFE2
 12208                           fsr1l	equ	0xFE1
 12209                           indf2	equ	0xFDF
 12210                           postinc2	equ	0xFDE
 12211                           postdec2	equ	0xFDD
 12212                           fsr2h	equ	0xFDA
 12213                           fsr2l	equ	0xFD9
 12214                           status	equ	0xFD8
 12215                           
 12216 ;; *************** function _fround *****************
 12217 ;; Defined at:
 12218 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;  prec            1    wreg     unsigned char 
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;  prec            1   94[BANK1 ] unsigned char 
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  3   85[BANK1 ] unsigned char 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12232 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12233 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12235 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12236 ;;Total ram usage:       10 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:   16
 12239 ;; This function calls:
 12240 ;;		___awdiv
 12241 ;;		___awmod
 12242 ;;		___ftmul
 12243 ;;		___wmul
 12244 ;; This function is called by:
 12245 ;;		_printf
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249                           	psect	text24
 12250  012E42                     __ptext24:
 12251                           	opt stack 0
 12252  012E42                     _fround:
 12253                           	opt stack 11
 12254                           
 12255                           ; BSR set to: 1
 12256                           ;incstack = 0
 12257                           ;fround@prec stored from wreg
 12258  012E42  0101               	movlb	1	; () banked
 12259  012E44  6F5E               	movwf	fround@prec& (0+255),b
 12260                           
 12261                           ;doprnt.c: 413: if(prec>=110)
 12262  012E46  0E6D               	movlw	109
 12263  012E48  0101               	movlb	1	; () banked
 12264  012E4A  655E               	cpfsgt	fround@prec& (0+255),b
 12265  012E4C  D0AF               	goto	l1080
 12266                           
 12267                           ; BSR set to: 1
 12268                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12269  012E4E  0E00               	movlw	0
 12270  012E50  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12271  012E52  0E03               	movlw	3
 12272  012E54  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12273  012E56  0E00               	movlw	0
 12274  012E58  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12275  012E5A  0E0A               	movlw	10
 12276  012E5C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12277  012E5E  0E00               	movlw	0
 12278  012E60  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12279  012E62  0E64               	movlw	100
 12280  012E64  6F19               	movwf	___awmod@divisor& (0+255),b
 12281  012E66  C15E  F117         	movff	fround@prec,___awmod@dividend
 12282  012E6A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12283  012E6C  ECDD  F0AB         	call	___awmod	;wreg free
 12284  012E70  C117  F11D         	movff	?___awmod,___awdiv@dividend
 12285  012E74  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 12286  012E78  EC22  F0AA         	call	___awdiv	;wreg free
 12287  012E7C  0E09               	movlw	9
 12288  012E7E  0101               	movlb	1	; () banked
 12289  012E80  251D               	addwf	?___awdiv& (0+255),w,b
 12290  012E82  6F25               	movwf	___wmul@multiplier& (0+255),b
 12291  012E84  0E00               	movlw	0
 12292  012E86  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12293  012E88  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12294  012E8A  ECBB  F0B0         	call	___wmul	;wreg free
 12295  012E8E  0E78               	movlw	low __npowers_
 12296  012E90  0101               	movlb	1	; () banked
 12297  012E92  2525               	addwf	?___wmul& (0+255),w,b
 12298  012E94  6EF6               	movwf	tblptrl,c
 12299  012E96  0EF2               	movlw	high __npowers_
 12300  012E98  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12301  012E9A  6EF7               	movwf	tblptrh,c
 12302  012E9C                     	if	1	;There are 3 active tblptr bytes
 12303  012E9C  6AF8               	clrf	tblptru,c
 12304  012E9E  0E00               	movlw	low (__mediumconst shr (0+16))
 12305  012EA0  22F8               	addwfc	tblptru,f,c
 12306  012EA2                     	endif
 12307  012EA2  0009               	tblrd		*+
 12308  012EA4  CFF5 F149          	movff	tablat,___ftmul@f2
 12309  012EA8  0009               	tblrd		*+
 12310  012EAA  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12311  012EAE  000A               	tblrd		*-
 12312  012EB0  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12313  012EB4  0E00               	movlw	0
 12314  012EB6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12315  012EB8  0E64               	movlw	100
 12316  012EBA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12317  012EBC  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 12318  012EC0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12319  012EC2  EC22  F0AA         	call	___awdiv	;wreg free
 12320  012EC6  0E12               	movlw	18
 12321  012EC8  0101               	movlb	1	; () banked
 12322  012ECA  251D               	addwf	?___awdiv& (0+255),w,b
 12323  012ECC  6F25               	movwf	___wmul@multiplier& (0+255),b
 12324  012ECE  0E00               	movlw	0
 12325  012ED0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12326  012ED2  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12327  012ED4  0E00               	movlw	0
 12328  012ED6  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12329  012ED8  0E03               	movlw	3
 12330  012EDA  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12331  012EDC  ECBB  F0B0         	call	___wmul	;wreg free
 12332  012EE0  0E78               	movlw	low __npowers_
 12333  012EE2  0101               	movlb	1	; () banked
 12334  012EE4  2525               	addwf	?___wmul& (0+255),w,b
 12335  012EE6  6EF6               	movwf	tblptrl,c
 12336  012EE8  0EF2               	movlw	high __npowers_
 12337  012EEA  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12338  012EEC  6EF7               	movwf	tblptrh,c
 12339  012EEE                     	if	1	;There are 3 active tblptr bytes
 12340  012EEE  6AF8               	clrf	tblptru,c
 12341  012EF0  0E00               	movlw	low (__mediumconst shr (0+16))
 12342  012EF2  22F8               	addwfc	tblptru,f,c
 12343  012EF4                     	endif
 12344  012EF4  0009               	tblrd		*+
 12345  012EF6  CFF5 F146          	movff	tablat,___ftmul@f1
 12346  012EFA  0009               	tblrd		*+
 12347  012EFC  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12348  012F00  000A               	tblrd		*-
 12349  012F02  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12350  012F06  ECAA  F0A3         	call	___ftmul	;wreg free
 12351  012F0A  C146  F15B         	movff	?___ftmul,_fround$3143
 12352  012F0E  C147  F15C         	movff	?___ftmul+1,_fround$3143+1
 12353  012F12  C148  F15D         	movff	?___ftmul+2,_fround$3143+2
 12354                           
 12355                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12356  012F16  0E00               	movlw	0
 12357  012F18  0101               	movlb	1	; () banked
 12358  012F1A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12359  012F1C  0E03               	movlw	3
 12360  012F1E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12361  012F20  0E00               	movlw	0
 12362  012F22  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12363  012F24  0E0A               	movlw	10
 12364  012F26  6F19               	movwf	___awmod@divisor& (0+255),b
 12365  012F28  C15E  F117         	movff	fround@prec,___awmod@dividend
 12366  012F2C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12367  012F2E  ECDD  F0AB         	call	___awmod	;wreg free
 12368  012F32  C117  F125         	movff	?___awmod,___wmul@multiplier
 12369  012F36  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12370  012F3A  ECBB  F0B0         	call	___wmul	;wreg free
 12371  012F3E  0E78               	movlw	low __npowers_
 12372  012F40  0101               	movlb	1	; () banked
 12373  012F42  2525               	addwf	?___wmul& (0+255),w,b
 12374  012F44  6EF6               	movwf	tblptrl,c
 12375  012F46  0EF2               	movlw	high __npowers_
 12376  012F48  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12377  012F4A  6EF7               	movwf	tblptrh,c
 12378  012F4C                     	if	1	;There are 3 active tblptr bytes
 12379  012F4C  6AF8               	clrf	tblptru,c
 12380  012F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 12381  012F50  22F8               	addwfc	tblptru,f,c
 12382  012F52                     	endif
 12383  012F52  0009               	tblrd		*+
 12384  012F54  CFF5 F149          	movff	tablat,___ftmul@f2
 12385  012F58  0009               	tblrd		*+
 12386  012F5A  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12387  012F5E  000A               	tblrd		*-
 12388  012F60  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12389  012F64  C15B  F146         	movff	_fround$3143,___ftmul@f1
 12390  012F68  C15C  F147         	movff	_fround$3143+1,___ftmul@f1+1
 12391  012F6C  C15D  F148         	movff	_fround$3143+2,___ftmul@f1+2
 12392  012F70  ECAA  F0A3         	call	___ftmul	;wreg free
 12393  012F74  C146  F158         	movff	?___ftmul,_fround$3144
 12394  012F78  C147  F159         	movff	?___ftmul+1,_fround$3144+1
 12395  012F7C  C148  F15A         	movff	?___ftmul+2,_fround$3144+2
 12396                           
 12397                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12398  012F80  C158  F146         	movff	_fround$3144,___ftmul@f1
 12399  012F84  C159  F147         	movff	_fround$3144+1,___ftmul@f1+1
 12400  012F88  C15A  F148         	movff	_fround$3144+2,___ftmul@f1+2
 12401  012F8C  0E00               	movlw	0
 12402  012F8E  0101               	movlb	1	; () banked
 12403  012F90  6F49               	movwf	___ftmul@f2& (0+255),b
 12404  012F92  0E00               	movlw	0
 12405  012F94  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12406  012F96  0E3F               	movlw	63
 12407  012F98  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12408  012F9A  ECAA  F0A3         	call	___ftmul	;wreg free
 12409  012F9E  C146  F155         	movff	?___ftmul,?_fround
 12410  012FA2  C147  F156         	movff	?___ftmul+1,?_fround+1
 12411  012FA6  C148  F157         	movff	?___ftmul+2,?_fround+2
 12412  012FAA  0012               	return	
 12413  012FAC                     l1080:
 12414                           
 12415                           ;doprnt.c: 415: else if(prec > 10)
 12416  012FAC  0E0A               	movlw	10
 12417  012FAE  0101               	movlb	1	; () banked
 12418  012FB0  655E               	cpfsgt	fround@prec& (0+255),b
 12419  012FB2  D06D               	goto	l1083
 12420                           
 12421                           ; BSR set to: 1
 12422                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12423  012FB4  0E00               	movlw	0
 12424  012FB6  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12425  012FB8  0E03               	movlw	3
 12426  012FBA  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12427  012FBC  0E00               	movlw	0
 12428  012FBE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12429  012FC0  0E0A               	movlw	10
 12430  012FC2  6F19               	movwf	___awmod@divisor& (0+255),b
 12431  012FC4  C15E  F117         	movff	fround@prec,___awmod@dividend
 12432  012FC8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12433  012FCA  ECDD  F0AB         	call	___awmod	;wreg free
 12434  012FCE  C117  F125         	movff	?___awmod,___wmul@multiplier
 12435  012FD2  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12436  012FD6  ECBB  F0B0         	call	___wmul	;wreg free
 12437  012FDA  0E78               	movlw	low __npowers_
 12438  012FDC  0101               	movlb	1	; () banked
 12439  012FDE  2525               	addwf	?___wmul& (0+255),w,b
 12440  012FE0  6EF6               	movwf	tblptrl,c
 12441  012FE2  0EF2               	movlw	high __npowers_
 12442  012FE4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12443  012FE6  6EF7               	movwf	tblptrh,c
 12444  012FE8                     	if	1	;There are 3 active tblptr bytes
 12445  012FE8  6AF8               	clrf	tblptru,c
 12446  012FEA  0E00               	movlw	low (__mediumconst shr (0+16))
 12447  012FEC  22F8               	addwfc	tblptru,f,c
 12448  012FEE                     	endif
 12449  012FEE  0009               	tblrd		*+
 12450  012FF0  CFF5 F149          	movff	tablat,___ftmul@f2
 12451  012FF4  0009               	tblrd		*+
 12452  012FF6  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12453  012FFA  000A               	tblrd		*-
 12454  012FFC  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12455  013000  0E00               	movlw	0
 12456  013002  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12457  013004  0E0A               	movlw	10
 12458  013006  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12459  013008  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 12460  01300C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12461  01300E  EC22  F0AA         	call	___awdiv	;wreg free
 12462  013012  0E09               	movlw	9
 12463  013014  0101               	movlb	1	; () banked
 12464  013016  251D               	addwf	?___awdiv& (0+255),w,b
 12465  013018  6F25               	movwf	___wmul@multiplier& (0+255),b
 12466  01301A  0E00               	movlw	0
 12467  01301C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12468  01301E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12469  013020  0E00               	movlw	0
 12470  013022  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12471  013024  0E03               	movlw	3
 12472  013026  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12473  013028  ECBB  F0B0         	call	___wmul	;wreg free
 12474  01302C  0E78               	movlw	low __npowers_
 12475  01302E  0101               	movlb	1	; () banked
 12476  013030  2525               	addwf	?___wmul& (0+255),w,b
 12477  013032  6EF6               	movwf	tblptrl,c
 12478  013034  0EF2               	movlw	high __npowers_
 12479  013036  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12480  013038  6EF7               	movwf	tblptrh,c
 12481  01303A                     	if	1	;There are 3 active tblptr bytes
 12482  01303A  6AF8               	clrf	tblptru,c
 12483  01303C  0E00               	movlw	low (__mediumconst shr (0+16))
 12484  01303E  22F8               	addwfc	tblptru,f,c
 12485  013040                     	endif
 12486  013040  0009               	tblrd		*+
 12487  013042  CFF5 F146          	movff	tablat,___ftmul@f1
 12488  013046  0009               	tblrd		*+
 12489  013048  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12490  01304C  000A               	tblrd		*-
 12491  01304E  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12492  013052  ECAA  F0A3         	call	___ftmul	;wreg free
 12493  013056  C146  F15B         	movff	?___ftmul,_fround$3143
 12494  01305A  C147  F15C         	movff	?___ftmul+1,_fround$3143+1
 12495  01305E  C148  F15D         	movff	?___ftmul+2,_fround$3143+2
 12496                           
 12497                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12498  013062  C15B  F146         	movff	_fround$3143,___ftmul@f1
 12499  013066  C15C  F147         	movff	_fround$3143+1,___ftmul@f1+1
 12500  01306A  C15D  F148         	movff	_fround$3143+2,___ftmul@f1+2
 12501  01306E  0E00               	movlw	0
 12502  013070  0101               	movlb	1	; () banked
 12503  013072  6F49               	movwf	___ftmul@f2& (0+255),b
 12504  013074  0E00               	movlw	0
 12505  013076  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12506  013078  0E3F               	movlw	63
 12507  01307A  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12508  01307C  ECAA  F0A3         	call	___ftmul	;wreg free
 12509  013080  C146  F155         	movff	?___ftmul,?_fround
 12510  013084  C147  F156         	movff	?___ftmul+1,?_fround+1
 12511  013088  C148  F157         	movff	?___ftmul+2,?_fround+2
 12512  01308C  0012               	return	
 12513  01308E                     l1083:
 12514                           
 12515                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 12516  01308E  0101               	movlb	1	; () banked
 12517  013090  515E               	movf	fround@prec& (0+255),w,b
 12518  013092  0D03               	mullw	3
 12519  013094  0E78               	movlw	low __npowers_
 12520  013096  24F3               	addwf	prodl,w,c
 12521  013098  6EF6               	movwf	tblptrl,c
 12522  01309A  0EF2               	movlw	high __npowers_
 12523  01309C  20F4               	addwfc	prodh,w,c
 12524  01309E  6EF7               	movwf	tblptrh,c
 12525  0130A0                     	if	1	;There are 3 active tblptr bytes
 12526  0130A0  6AF8               	clrf	tblptru,c
 12527  0130A2  0E00               	movlw	low (__mediumconst shr (0+16))
 12528  0130A4  22F8               	addwfc	tblptru,f,c
 12529  0130A6                     	endif
 12530  0130A6  0009               	tblrd		*+
 12531  0130A8  CFF5 F146          	movff	tablat,___ftmul@f1
 12532  0130AC  0009               	tblrd		*+
 12533  0130AE  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12534  0130B2  000A               	tblrd		*-
 12535  0130B4  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12536  0130B8  0E00               	movlw	0
 12537  0130BA  6F49               	movwf	___ftmul@f2& (0+255),b
 12538  0130BC  0E00               	movlw	0
 12539  0130BE  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12540  0130C0  0E3F               	movlw	63
 12541  0130C2  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12542  0130C4  ECAA  F0A3         	call	___ftmul	;wreg free
 12543  0130C8  C146  F155         	movff	?___ftmul,?_fround
 12544  0130CC  C147  F156         	movff	?___ftmul+1,?_fround+1
 12545  0130D0  C148  F157         	movff	?___ftmul+2,?_fround+2
 12546  0130D4  0012               	return	
 12547  0130D6                     __end_of_fround:
 12548                           	opt stack 0
 12549                           tblptru	equ	0xFF8
 12550                           tblptrh	equ	0xFF7
 12551                           tblptrl	equ	0xFF6
 12552                           tablat	equ	0xFF5
 12553                           prodh	equ	0xFF4
 12554                           prodl	equ	0xFF3
 12555                           intcon	equ	0xFF2
 12556                           postinc0	equ	0xFEE
 12557                           wreg	equ	0xFE8
 12558                           indf1	equ	0xFE7
 12559                           postdec1	equ	0xFE5
 12560                           fsr1h	equ	0xFE2
 12561                           fsr1l	equ	0xFE1
 12562                           indf2	equ	0xFDF
 12563                           postinc2	equ	0xFDE
 12564                           postdec2	equ	0xFDD
 12565                           fsr2h	equ	0xFDA
 12566                           fsr2l	equ	0xFD9
 12567                           status	equ	0xFD8
 12568                           
 12569 ;; *************** function ___wmul *****************
 12570 ;; Defined at:
 12571 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;  multiplier      2   37[BANK1 ] unsigned int 
 12574 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;  product         2   41[BANK1 ] unsigned int 
 12577 ;; Return value:  Size  Location     Type
 12578 ;;                  2   37[BANK1 ] unsigned int 
 12579 ;; Registers used:
 12580 ;;		wreg, status,2, status,0, prodl, prodh
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/0
 12583 ;;		On exit  : 0/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12586 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12587 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12589 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12590 ;;Total ram usage:        6 bytes
 12591 ;; Hardware stack levels used:    1
 12592 ;; Hardware stack levels required when called:   14
 12593 ;; This function calls:
 12594 ;;		Nothing
 12595 ;; This function is called by:
 12596 ;;		_ringBufferLUT
 12597 ;;		_fround
 12598 ;;		_scale
 12599 ;;		_printf
 12600 ;;		_atoi
 12601 ;; This function uses a non-reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text25
 12605  016176                     __ptext25:
 12606                           	opt stack 0
 12607  016176                     ___wmul:
 12608                           	opt stack 12
 12609                           
 12610                           ;incstack = 0
 12611  016176  0101               	movlb	1	; () banked
 12612  016178  5125               	movf	___wmul@multiplier& (0+255),w,b
 12613  01617A  0327               	mulwf	___wmul@multiplicand& (0+255),b
 12614  01617C  CFF3 F129          	movff	prodl,___wmul@product
 12615  016180  CFF4 F12A          	movff	prodh,___wmul@product+1
 12616  016184  5125               	movf	___wmul@multiplier& (0+255),w,b
 12617  016186  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12618  016188  50F3               	movf	prodl,w,c
 12619  01618A  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 12620  01618C  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12621  01618E  0327               	mulwf	___wmul@multiplicand& (0+255),b
 12622  016190  50F3               	movf	prodl,w,c
 12623  016192  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 12624                           
 12625                           ; BSR set to: 1
 12626  016194  C129  F125         	movff	___wmul@product,?___wmul
 12627  016198  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 12628  01619C  0012               	return	
 12629  01619E                     __end_of___wmul:
 12630                           	opt stack 0
 12631                           tblptru	equ	0xFF8
 12632                           tblptrh	equ	0xFF7
 12633                           tblptrl	equ	0xFF6
 12634                           tablat	equ	0xFF5
 12635                           prodh	equ	0xFF4
 12636                           prodl	equ	0xFF3
 12637                           intcon	equ	0xFF2
 12638                           postinc0	equ	0xFEE
 12639                           wreg	equ	0xFE8
 12640                           indf1	equ	0xFE7
 12641                           postdec1	equ	0xFE5
 12642                           fsr1h	equ	0xFE2
 12643                           fsr1l	equ	0xFE1
 12644                           indf2	equ	0xFDF
 12645                           postinc2	equ	0xFDE
 12646                           postdec2	equ	0xFDD
 12647                           fsr2h	equ	0xFDA
 12648                           fsr2l	equ	0xFD9
 12649                           status	equ	0xFD8
 12650                           
 12651 ;; *************** function ___ftmul *****************
 12652 ;; Defined at:
 12653 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;  f1              3   70[BANK1 ] float 
 12656 ;;  f2              3   73[BANK1 ] float 
 12657 ;; Auto vars:     Size  Location     Type
 12658 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 12659 ;;  sign            1   84[BANK1 ] unsigned char 
 12660 ;;  cntr            1   83[BANK1 ] unsigned char 
 12661 ;;  exp             1   79[BANK1 ] unsigned char 
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  3   70[BANK1 ] float 
 12664 ;; Registers used:
 12665 ;;		wreg, status,2, status,0, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12671 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12672 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12673 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12674 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12675 ;;Total ram usage:       15 bytes
 12676 ;; Hardware stack levels used:    1
 12677 ;; Hardware stack levels required when called:   15
 12678 ;; This function calls:
 12679 ;;		___ftpack
 12680 ;; This function is called by:
 12681 ;;		_ringBufferLUT
 12682 ;;		_fround
 12683 ;;		_scale
 12684 ;;		_printf
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           	psect	text26
 12689  014754                     __ptext26:
 12690                           	opt stack 0
 12691  014754                     ___ftmul:
 12692                           	opt stack 11
 12693                           
 12694                           ; BSR set to: 1
 12695                           ;incstack = 0
 12696  014754  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 12697  014758  0101               	movlb	1	; () banked
 12698  01475A  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 12699  01475C  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 12700  01475E  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 12701  014760  374C               	rlcf	??___ftmul& (0+255),f,b
 12702  014762  E301               	bnc	u9281
 12703  014764  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 12704  014766                     u9281:
 12705  014766  514C               	movf	??___ftmul& (0+255),w,b
 12706  014768  6F4F               	movwf	___ftmul@exp& (0+255),b
 12707  01476A  514F               	movf	___ftmul@exp& (0+255),w,b
 12708  01476C  A4D8               	btfss	status,2,c
 12709  01476E  D007               	goto	l1578
 12710                           
 12711                           ; BSR set to: 1
 12712  014770  0E00               	movlw	0
 12713  014772  6F46               	movwf	?___ftmul& (0+255),b
 12714  014774  0E00               	movlw	0
 12715  014776  6F47               	movwf	(?___ftmul+1)& (0+255),b
 12716  014778  0E00               	movlw	0
 12717  01477A  6F48               	movwf	(?___ftmul+2)& (0+255),b
 12718                           
 12719                           ; BSR set to: 1
 12720  01477C  0012               	return	
 12721  01477E                     l1578:
 12722                           
 12723                           ; BSR set to: 1
 12724                           
 12725                           ; BSR set to: 1
 12726  01477E  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 12727  014782  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 12728  014784  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 12729  014786  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 12730  014788  374C               	rlcf	??___ftmul& (0+255),f,b
 12731  01478A  E301               	bnc	u9301
 12732  01478C  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 12733  01478E                     u9301:
 12734  01478E  514C               	movf	??___ftmul& (0+255),w,b
 12735  014790  6F54               	movwf	___ftmul@sign& (0+255),b
 12736  014792  5154               	movf	___ftmul@sign& (0+255),w,b
 12737  014794  A4D8               	btfss	status,2,c
 12738  014796  D007               	goto	l1580
 12739                           
 12740                           ; BSR set to: 1
 12741  014798  0E00               	movlw	0
 12742  01479A  6F46               	movwf	?___ftmul& (0+255),b
 12743  01479C  0E00               	movlw	0
 12744  01479E  6F47               	movwf	(?___ftmul+1)& (0+255),b
 12745  0147A0  0E00               	movlw	0
 12746  0147A2  6F48               	movwf	(?___ftmul+2)& (0+255),b
 12747                           
 12748                           ; BSR set to: 1
 12749  0147A4  0012               	return	
 12750  0147A6                     l1580:
 12751                           
 12752                           ; BSR set to: 1
 12753                           
 12754                           ; BSR set to: 1
 12755  0147A6  5154               	movf	___ftmul@sign& (0+255),w,b
 12756  0147A8  0F7B               	addlw	123
 12757  0147AA  274F               	addwf	___ftmul@exp& (0+255),f,b
 12758                           
 12759                           ; BSR set to: 1
 12760  0147AC  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 12761  0147B0  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12762  0147B2  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 12763  0147B4  0E80               	movlw	128
 12764  0147B6  1754               	andwf	___ftmul@sign& (0+255),f,b
 12765                           
 12766                           ; BSR set to: 1
 12767  0147B8  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 12768                           
 12769                           ; BSR set to: 1
 12770  0147BA  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 12771                           
 12772                           ; BSR set to: 1
 12773  0147BC  0EFF               	movlw	255
 12774  0147BE  1749               	andwf	___ftmul@f2& (0+255),f,b
 12775  0147C0  0EFF               	movlw	255
 12776  0147C2  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 12777  0147C4  0E00               	movlw	0
 12778  0147C6  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 12779                           
 12780                           ; BSR set to: 1
 12781  0147C8  0E00               	movlw	0
 12782  0147CA  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 12783  0147CC  0E00               	movlw	0
 12784  0147CE  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 12785  0147D0  0E00               	movlw	0
 12786  0147D2  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 12787                           
 12788                           ; BSR set to: 1
 12789  0147D4  0E07               	movlw	7
 12790  0147D6  6F53               	movwf	___ftmul@cntr& (0+255),b
 12791  0147D8                     
 12792                           ; BSR set to: 1
 12793                           
 12794                           ; BSR set to: 1
 12795  0147D8  A146               	btfss	___ftmul@f1& (0+255),0,b
 12796  0147DA  D006               	goto	l1582
 12797                           
 12798                           ; BSR set to: 1
 12799  0147DC  5149               	movf	___ftmul@f2& (0+255),w,b
 12800  0147DE  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12801  0147E0  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 12802  0147E2  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12803  0147E4  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12804  0147E6  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12805  0147E8                     l1582:
 12806                           
 12807                           ; BSR set to: 1
 12808                           
 12809                           ; BSR set to: 1
 12810  0147E8  90D8               	bcf	status,0,c
 12811  0147EA  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12812  0147EC  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12813  0147EE  3346               	rrcf	___ftmul@f1& (0+255),f,b
 12814  0147F0  90D8               	bcf	status,0,c
 12815  0147F2  3749               	rlcf	___ftmul@f2& (0+255),f,b
 12816  0147F4  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 12817  0147F6  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 12818                           
 12819                           ; BSR set to: 1
 12820  0147F8  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 12821  0147FA  D7EE               	goto	l1581
 12822                           
 12823                           ; BSR set to: 1
 12824                           
 12825                           ; BSR set to: 1
 12826  0147FC  0E09               	movlw	9
 12827  0147FE  6F53               	movwf	___ftmul@cntr& (0+255),b
 12828  014800                     
 12829                           ; BSR set to: 1
 12830                           
 12831                           ; BSR set to: 1
 12832  014800  A146               	btfss	___ftmul@f1& (0+255),0,b
 12833  014802  D006               	goto	l1585
 12834                           
 12835                           ; BSR set to: 1
 12836  014804  5149               	movf	___ftmul@f2& (0+255),w,b
 12837  014806  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12838  014808  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 12839  01480A  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12840  01480C  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12841  01480E  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12842  014810                     l1585:
 12843                           
 12844                           ; BSR set to: 1
 12845                           
 12846                           ; BSR set to: 1
 12847  014810  90D8               	bcf	status,0,c
 12848  014812  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12849  014814  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12850  014816  3346               	rrcf	___ftmul@f1& (0+255),f,b
 12851  014818  90D8               	bcf	status,0,c
 12852  01481A  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 12853  01481C  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 12854  01481E  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 12855                           
 12856                           ; BSR set to: 1
 12857  014820  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 12858  014822  D7EE               	goto	l1584
 12859                           
 12860                           ; BSR set to: 1
 12861                           
 12862                           ; BSR set to: 1
 12863  014824  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 12864  014828  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 12865  01482C  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 12866  014830  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 12867  014834  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 12868  014838  ECAE  F0A7         	call	___ftpack	;wreg free
 12869  01483C  C117  F146         	movff	?___ftpack,?___ftmul
 12870  014840  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 12871  014844  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 12872  014848  0012               	return	
 12873  01484A                     __end_of___ftmul:
 12874                           	opt stack 0
 12875                           tblptru	equ	0xFF8
 12876                           tblptrh	equ	0xFF7
 12877                           tblptrl	equ	0xFF6
 12878                           tablat	equ	0xFF5
 12879                           prodh	equ	0xFF4
 12880                           prodl	equ	0xFF3
 12881                           intcon	equ	0xFF2
 12882                           postinc0	equ	0xFEE
 12883                           wreg	equ	0xFE8
 12884                           indf1	equ	0xFE7
 12885                           postdec1	equ	0xFE5
 12886                           fsr1h	equ	0xFE2
 12887                           fsr1l	equ	0xFE1
 12888                           indf2	equ	0xFDF
 12889                           postinc2	equ	0xFDE
 12890                           postdec2	equ	0xFDD
 12891                           fsr2h	equ	0xFDA
 12892                           fsr2l	equ	0xFD9
 12893                           status	equ	0xFD8
 12894                           
 12895 ;; *************** function ___awmod *****************
 12896 ;; Defined at:
 12897 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;  dividend        2   23[BANK1 ] int 
 12900 ;;  divisor         2   25[BANK1 ] int 
 12901 ;; Auto vars:     Size  Location     Type
 12902 ;;  sign            1   28[BANK1 ] unsigned char 
 12903 ;;  counter         1   27[BANK1 ] unsigned char 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  2   23[BANK1 ] int 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2, status,0
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12913 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12914 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12916 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12917 ;;Total ram usage:        6 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:   14
 12920 ;; This function calls:
 12921 ;;		Nothing
 12922 ;; This function is called by:
 12923 ;;		_fround
 12924 ;;		_scale
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928                           	psect	text27
 12929  0157BA                     __ptext27:
 12930                           	opt stack 0
 12931  0157BA                     ___awmod:
 12932                           	opt stack 12
 12933                           
 12934                           ;incstack = 0
 12935  0157BA  0E00               	movlw	0
 12936  0157BC  0101               	movlb	1	; () banked
 12937  0157BE  6F1C               	movwf	___awmod@sign& (0+255),b
 12938                           
 12939                           ; BSR set to: 1
 12940  0157C0  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12941  0157C2  D006               	goto	l1419
 12942                           
 12943                           ; BSR set to: 1
 12944  0157C4  6D17               	negf	___awmod@dividend& (0+255),b
 12945  0157C6  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 12946  0157C8  B0D8               	btfsc	status,0,c
 12947  0157CA  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 12948                           
 12949                           ; BSR set to: 1
 12950  0157CC  0E01               	movlw	1
 12951  0157CE  6F1C               	movwf	___awmod@sign& (0+255),b
 12952  0157D0                     l1419:
 12953                           
 12954                           ; BSR set to: 1
 12955                           
 12956                           ; BSR set to: 1
 12957  0157D0  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12958  0157D2  D004               	goto	l1420
 12959                           
 12960                           ; BSR set to: 1
 12961  0157D4  6D19               	negf	___awmod@divisor& (0+255),b
 12962  0157D6  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 12963  0157D8  B0D8               	btfsc	status,0,c
 12964  0157DA  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 12965  0157DC                     l1420:
 12966                           
 12967                           ; BSR set to: 1
 12968                           
 12969                           ; BSR set to: 1
 12970  0157DC  5119               	movf	___awmod@divisor& (0+255),w,b
 12971  0157DE  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12972  0157E0  B4D8               	btfsc	status,2,c
 12973  0157E2  D018               	goto	l1427
 12974                           
 12975                           ; BSR set to: 1
 12976  0157E4  0E01               	movlw	1
 12977  0157E6  6F1B               	movwf	___awmod@counter& (0+255),b
 12978  0157E8  D004               	goto	l1422
 12979  0157EA                     
 12980                           ; BSR set to: 1
 12981                           
 12982                           ; BSR set to: 1
 12983  0157EA  90D8               	bcf	status,0,c
 12984  0157EC  3719               	rlcf	___awmod@divisor& (0+255),f,b
 12985  0157EE  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12986  0157F0  2B1B               	incf	___awmod@counter& (0+255),f,b
 12987  0157F2                     l1422:
 12988                           
 12989                           ; BSR set to: 1
 12990                           
 12991                           ; BSR set to: 1
 12992  0157F2  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12993  0157F4  D7FA               	goto	l1423
 12994  0157F6                     u9450:
 12995                           
 12996                           ; BSR set to: 1
 12997                           
 12998                           ; BSR set to: 1
 12999                           
 13000                           ; BSR set to: 1
 13001  0157F6  5119               	movf	___awmod@divisor& (0+255),w,b
 13002  0157F8  5D17               	subwf	___awmod@dividend& (0+255),w,b
 13003  0157FA  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 13004  0157FC  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13005  0157FE  A0D8               	btfss	status,0,c
 13006  015800  D004               	goto	l1426
 13007                           
 13008                           ; BSR set to: 1
 13009  015802  5119               	movf	___awmod@divisor& (0+255),w,b
 13010  015804  5F17               	subwf	___awmod@dividend& (0+255),f,b
 13011  015806  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 13012  015808  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13013  01580A                     l1426:
 13014                           
 13015                           ; BSR set to: 1
 13016                           
 13017                           ; BSR set to: 1
 13018  01580A  90D8               	bcf	status,0,c
 13019  01580C  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13020  01580E  3319               	rrcf	___awmod@divisor& (0+255),f,b
 13021                           
 13022                           ; BSR set to: 1
 13023  015810  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 13024  015812  D7F1               	goto	u9450
 13025  015814                     l1427:
 13026                           
 13027                           ; BSR set to: 1
 13028                           
 13029                           ; BSR set to: 1
 13030                           
 13031                           ; BSR set to: 1
 13032  015814  511C               	movf	___awmod@sign& (0+255),w,b
 13033  015816  B4D8               	btfsc	status,2,c
 13034  015818  D004               	goto	l1428
 13035                           
 13036                           ; BSR set to: 1
 13037  01581A  6D17               	negf	___awmod@dividend& (0+255),b
 13038  01581C  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 13039  01581E  B0D8               	btfsc	status,0,c
 13040  015820  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 13041  015822                     l1428:
 13042                           
 13043                           ; BSR set to: 1
 13044                           
 13045                           ; BSR set to: 1
 13046  015822  C117  F117         	movff	___awmod@dividend,?___awmod
 13047  015826  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 13048  01582A  0012               	return	
 13049  01582C                     __end_of___awmod:
 13050                           	opt stack 0
 13051                           tblptru	equ	0xFF8
 13052                           tblptrh	equ	0xFF7
 13053                           tblptrl	equ	0xFF6
 13054                           tablat	equ	0xFF5
 13055                           prodh	equ	0xFF4
 13056                           prodl	equ	0xFF3
 13057                           intcon	equ	0xFF2
 13058                           postinc0	equ	0xFEE
 13059                           wreg	equ	0xFE8
 13060                           indf1	equ	0xFE7
 13061                           postdec1	equ	0xFE5
 13062                           fsr1h	equ	0xFE2
 13063                           fsr1l	equ	0xFE1
 13064                           indf2	equ	0xFDF
 13065                           postinc2	equ	0xFDE
 13066                           postdec2	equ	0xFDD
 13067                           fsr2h	equ	0xFDA
 13068                           fsr2l	equ	0xFD9
 13069                           status	equ	0xFD8
 13070                           
 13071 ;; *************** function ___awdiv *****************
 13072 ;; Defined at:
 13073 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;  dividend        2   29[BANK1 ] int 
 13076 ;;  divisor         2   31[BANK1 ] int 
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;  quotient        2   35[BANK1 ] int 
 13079 ;;  sign            1   34[BANK1 ] unsigned char 
 13080 ;;  counter         1   33[BANK1 ] unsigned char 
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  2   29[BANK1 ] int 
 13083 ;; Registers used:
 13084 ;;		wreg, status,2, status,0
 13085 ;; Tracked objects:
 13086 ;;		On entry : 0/0
 13087 ;;		On exit  : 0/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13090 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13091 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13093 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13094 ;;Total ram usage:        8 bytes
 13095 ;; Hardware stack levels used:    1
 13096 ;; Hardware stack levels required when called:   14
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_fround
 13101 ;;		_scale
 13102 ;;		_printf
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           	psect	text28
 13107  015444                     __ptext28:
 13108                           	opt stack 0
 13109  015444                     ___awdiv:
 13110                           	opt stack 12
 13111                           
 13112                           ; BSR set to: 1
 13113                           ;incstack = 0
 13114  015444  0E00               	movlw	0
 13115  015446  0101               	movlb	1	; () banked
 13116  015448  6F22               	movwf	___awdiv@sign& (0+255),b
 13117                           
 13118                           ; BSR set to: 1
 13119  01544A  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13120  01544C  D006               	goto	l1406
 13121                           
 13122                           ; BSR set to: 1
 13123  01544E  6D1F               	negf	___awdiv@divisor& (0+255),b
 13124  015450  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13125  015452  B0D8               	btfsc	status,0,c
 13126  015454  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13127                           
 13128                           ; BSR set to: 1
 13129  015456  0E01               	movlw	1
 13130  015458  6F22               	movwf	___awdiv@sign& (0+255),b
 13131  01545A                     l1406:
 13132                           
 13133                           ; BSR set to: 1
 13134                           
 13135                           ; BSR set to: 1
 13136  01545A  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13137  01545C  D006               	goto	l1407
 13138                           
 13139                           ; BSR set to: 1
 13140  01545E  6D1D               	negf	___awdiv@dividend& (0+255),b
 13141  015460  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13142  015462  B0D8               	btfsc	status,0,c
 13143  015464  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13144                           
 13145                           ; BSR set to: 1
 13146  015466  0E01               	movlw	1
 13147  015468  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 13148  01546A                     l1407:
 13149                           
 13150                           ; BSR set to: 1
 13151                           
 13152                           ; BSR set to: 1
 13153  01546A  0E00               	movlw	0
 13154  01546C  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 13155  01546E  0E00               	movlw	0
 13156  015470  6F23               	movwf	___awdiv@quotient& (0+255),b
 13157                           
 13158                           ; BSR set to: 1
 13159  015472  511F               	movf	___awdiv@divisor& (0+255),w,b
 13160  015474  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13161  015476  B4D8               	btfsc	status,2,c
 13162  015478  D01C               	goto	l1414
 13163                           
 13164                           ; BSR set to: 1
 13165  01547A  0E01               	movlw	1
 13166  01547C  6F21               	movwf	___awdiv@counter& (0+255),b
 13167  01547E  D004               	goto	l1409
 13168  015480                     
 13169                           ; BSR set to: 1
 13170                           
 13171                           ; BSR set to: 1
 13172  015480  90D8               	bcf	status,0,c
 13173  015482  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 13174  015484  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13175  015486  2B21               	incf	___awdiv@counter& (0+255),f,b
 13176  015488                     l1409:
 13177                           
 13178                           ; BSR set to: 1
 13179                           
 13180                           ; BSR set to: 1
 13181  015488  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13182  01548A  D7FA               	goto	l1410
 13183  01548C                     u9390:
 13184                           
 13185                           ; BSR set to: 1
 13186                           
 13187                           ; BSR set to: 1
 13188                           
 13189                           ; BSR set to: 1
 13190  01548C  90D8               	bcf	status,0,c
 13191  01548E  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 13192  015490  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13193                           
 13194                           ; BSR set to: 1
 13195  015492  511F               	movf	___awdiv@divisor& (0+255),w,b
 13196  015494  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 13197  015496  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13198  015498  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13199  01549A  A0D8               	btfss	status,0,c
 13200  01549C  D005               	goto	l1413
 13201                           
 13202                           ; BSR set to: 1
 13203  01549E  511F               	movf	___awdiv@divisor& (0+255),w,b
 13204  0154A0  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 13205  0154A2  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13206  0154A4  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13207                           
 13208                           ; BSR set to: 1
 13209  0154A6  8123               	bsf	___awdiv@quotient& (0+255),0,b
 13210  0154A8                     l1413:
 13211                           
 13212                           ; BSR set to: 1
 13213                           
 13214                           ; BSR set to: 1
 13215  0154A8  90D8               	bcf	status,0,c
 13216  0154AA  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13217  0154AC  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 13218                           
 13219                           ; BSR set to: 1
 13220  0154AE  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 13221  0154B0  D7ED               	goto	u9390
 13222  0154B2                     l1414:
 13223                           
 13224                           ; BSR set to: 1
 13225                           
 13226                           ; BSR set to: 1
 13227                           
 13228                           ; BSR set to: 1
 13229  0154B2  5122               	movf	___awdiv@sign& (0+255),w,b
 13230  0154B4  B4D8               	btfsc	status,2,c
 13231  0154B6  D004               	goto	l1415
 13232                           
 13233                           ; BSR set to: 1
 13234  0154B8  6D23               	negf	___awdiv@quotient& (0+255),b
 13235  0154BA  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13236  0154BC  B0D8               	btfsc	status,0,c
 13237  0154BE  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13238  0154C0                     l1415:
 13239                           
 13240                           ; BSR set to: 1
 13241                           
 13242                           ; BSR set to: 1
 13243  0154C0  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 13244  0154C4  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 13245  0154C8  0012               	return	
 13246  0154CA                     __end_of___awdiv:
 13247                           	opt stack 0
 13248                           tblptru	equ	0xFF8
 13249                           tblptrh	equ	0xFF7
 13250                           tblptrl	equ	0xFF6
 13251                           tablat	equ	0xFF5
 13252                           prodh	equ	0xFF4
 13253                           prodl	equ	0xFF3
 13254                           intcon	equ	0xFF2
 13255                           postinc0	equ	0xFEE
 13256                           wreg	equ	0xFE8
 13257                           indf1	equ	0xFE7
 13258                           postdec1	equ	0xFE5
 13259                           fsr1h	equ	0xFE2
 13260                           fsr1l	equ	0xFE1
 13261                           indf2	equ	0xFDF
 13262                           postinc2	equ	0xFDE
 13263                           postdec2	equ	0xFDD
 13264                           fsr2h	equ	0xFDA
 13265                           fsr2l	equ	0xFD9
 13266                           status	equ	0xFD8
 13267                           
 13268 ;; *************** function __tdiv_to_l_ *****************
 13269 ;; Defined at:
 13270 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 13271 ;; Parameters:    Size  Location     Type
 13272 ;;  f1              3   23[BANK1 ] float 
 13273 ;;  f2              3   26[BANK1 ] float 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;  quot            4   32[BANK1 ] unsigned long 
 13276 ;;  exp1            1   37[BANK1 ] unsigned char 
 13277 ;;  cntr            1   36[BANK1 ] unsigned char 
 13278 ;; Return value:  Size  Location     Type
 13279 ;;                  4   23[BANK1 ] unsigned long 
 13280 ;; Registers used:
 13281 ;;		wreg, status,2, status,0
 13282 ;; Tracked objects:
 13283 ;;		On entry : 0/0
 13284 ;;		On exit  : 0/0
 13285 ;;		Unchanged: 0/0
 13286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13287 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13288 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13289 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13290 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13291 ;;Total ram usage:       15 bytes
 13292 ;; Hardware stack levels used:    1
 13293 ;; Hardware stack levels required when called:   14
 13294 ;; This function calls:
 13295 ;;		Nothing
 13296 ;; This function is called by:
 13297 ;;		_printf
 13298 ;; This function uses a non-reentrant model
 13299 ;;
 13300                           
 13301                           	psect	text29
 13302  014088                     __ptext29:
 13303                           	opt stack 0
 13304  014088                     __tdiv_to_l_:
 13305                           	opt stack 13
 13306                           
 13307                           ; BSR set to: 1
 13308                           ;incstack = 0
 13309  014088  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13310  01408C  0101               	movlb	1	; () banked
 13311  01408E  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13312  014090  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13313  014092  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13314  014094  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13315  014096  E301               	bnc	u9681
 13316  014098  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13317  01409A                     u9681:
 13318  01409A  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 13319  01409C  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 13320  01409E  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13321  0140A0  A4D8               	btfss	status,2,c
 13322  0140A2  D009               	goto	l1554
 13323                           
 13324                           ; BSR set to: 1
 13325  0140A4  0E00               	movlw	0
 13326  0140A6  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13327  0140A8  0E00               	movlw	0
 13328  0140AA  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13329  0140AC  0E00               	movlw	0
 13330  0140AE  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13331  0140B0  0E00               	movlw	0
 13332  0140B2  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13333                           
 13334                           ; BSR set to: 1
 13335  0140B4  0012               	return	
 13336  0140B6                     l1554:
 13337                           
 13338                           ; BSR set to: 1
 13339                           
 13340                           ; BSR set to: 1
 13341  0140B6  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 13342  0140BA  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13343  0140BC  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13344  0140BE  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13345  0140C0  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13346  0140C2  E301               	bnc	u9701
 13347  0140C4  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13348  0140C6                     u9701:
 13349  0140C6  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 13350  0140C8  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13351  0140CA  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13352  0140CC  A4D8               	btfss	status,2,c
 13353  0140CE  D009               	goto	l1556
 13354                           
 13355                           ; BSR set to: 1
 13356  0140D0  0E00               	movlw	0
 13357  0140D2  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13358  0140D4  0E00               	movlw	0
 13359  0140D6  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13360  0140D8  0E00               	movlw	0
 13361  0140DA  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13362  0140DC  0E00               	movlw	0
 13363  0140DE  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13364                           
 13365                           ; BSR set to: 1
 13366  0140E0  0012               	return	
 13367  0140E2                     l1556:
 13368                           
 13369                           ; BSR set to: 1
 13370                           
 13371                           ; BSR set to: 1
 13372  0140E2  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 13373                           
 13374                           ; BSR set to: 1
 13375  0140E4  0EFF               	movlw	255
 13376  0140E6  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 13377  0140E8  0EFF               	movlw	255
 13378  0140EA  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13379  0140EC  0E00               	movlw	0
 13380  0140EE  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13381  0140F0  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 13382                           
 13383                           ; BSR set to: 1
 13384  0140F2  0EFF               	movlw	255
 13385  0140F4  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 13386  0140F6  0EFF               	movlw	255
 13387  0140F8  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 13388  0140FA  0E00               	movlw	0
 13389  0140FC  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 13390                           
 13391                           ; BSR set to: 1
 13392  0140FE  0E00               	movlw	0
 13393  014100  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 13394  014102  0E00               	movlw	0
 13395  014104  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 13396  014106  0E00               	movlw	0
 13397  014108  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 13398  01410A  0E00               	movlw	0
 13399  01410C  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 13400                           
 13401                           ; BSR set to: 1
 13402  01410E  0E7F               	movlw	127
 13403  014110  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13404                           
 13405                           ; BSR set to: 1
 13406  014112  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13407  014114  0F98               	addlw	152
 13408  014116  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13409                           
 13410                           ; BSR set to: 1
 13411  014118  0E18               	movlw	24
 13412  01411A  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13413  01411C                     l1557:
 13414                           
 13415                           ; BSR set to: 1
 13416  01411C  90D8               	bcf	status,0,c
 13417  01411E  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13418  014120  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13419  014122  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13420  014124  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13421                           
 13422                           ; BSR set to: 1
 13423  014126  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13424  014128  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 13425  01412A  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13426  01412C  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13427  01412E  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13428  014130  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 13429  014132  A0D8               	btfss	status,0,c
 13430  014134  D007               	goto	l1558
 13431                           
 13432                           ; BSR set to: 1
 13433  014136  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13434  014138  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 13435  01413A  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13436  01413C  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13437  01413E  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13438  014140  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13439                           
 13440                           ; BSR set to: 1
 13441  014142  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 13442  014144                     l1558:
 13443                           
 13444                           ; BSR set to: 1
 13445  014144  90D8               	bcf	status,0,c
 13446  014146  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 13447  014148  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13448  01414A  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13449                           
 13450                           ; BSR set to: 1
 13451  01414C  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 13452  01414E  D7E6               	goto	l1557
 13453                           
 13454                           ; BSR set to: 1
 13455                           
 13456                           ; BSR set to: 1
 13457  014150  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 13458  014152  D016               	goto	l1560
 13459                           
 13460                           ; BSR set to: 1
 13461  014154  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13462  014156  0A80               	xorlw	128
 13463  014158  0F97               	addlw	151
 13464  01415A  B0D8               	btfsc	status,0,c
 13465  01415C  D009               	goto	l1561
 13466                           
 13467                           ; BSR set to: 1
 13468  01415E  0E00               	movlw	0
 13469  014160  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13470  014162  0E00               	movlw	0
 13471  014164  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13472  014166  0E00               	movlw	0
 13473  014168  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13474  01416A  0E00               	movlw	0
 13475  01416C  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13476                           
 13477                           ; BSR set to: 1
 13478  01416E  0012               	return	
 13479  014170                     l1561:
 13480                           
 13481                           ; BSR set to: 1
 13482                           
 13483                           ; BSR set to: 1
 13484                           
 13485                           ; BSR set to: 1
 13486  014170  90D8               	bcf	status,0,c
 13487  014172  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13488  014174  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13489  014176  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13490  014178  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 13491                           
 13492                           ; BSR set to: 1
 13493  01417A  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 13494  01417C  D7F9               	goto	l1561
 13495                           
 13496                           ; BSR set to: 1
 13497  01417E  D015               	goto	u9760
 13498  014180                     l1560:
 13499                           
 13500                           ; BSR set to: 1
 13501                           
 13502                           ; BSR set to: 1
 13503  014180  0E17               	movlw	23
 13504  014182  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 13505  014184  D00F               	goto	l1566
 13506                           
 13507                           ; BSR set to: 1
 13508  014186  0E00               	movlw	0
 13509  014188  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13510  01418A  0E00               	movlw	0
 13511  01418C  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13512  01418E  0E00               	movlw	0
 13513  014190  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13514  014192  0E00               	movlw	0
 13515  014194  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13516                           
 13517                           ; BSR set to: 1
 13518  014196  0012               	return	
 13519  014198                     
 13520                           ; BSR set to: 1
 13521                           
 13522                           ; BSR set to: 1
 13523  014198  90D8               	bcf	status,0,c
 13524  01419A  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13525  01419C  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13526  01419E  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13527  0141A0  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13528  0141A2  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 13529  0141A4                     l1566:
 13530                           
 13531                           ; BSR set to: 1
 13532                           
 13533                           ; BSR set to: 1
 13534  0141A4  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13535  0141A6  A4D8               	btfss	status,2,c
 13536  0141A8  D7F7               	goto	l1567
 13537  0141AA                     u9760:
 13538                           
 13539                           ; BSR set to: 1
 13540                           
 13541                           ; BSR set to: 1
 13542  0141AA  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 13543  0141AE  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 13544  0141B2  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 13545  0141B6  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 13546                           
 13547                           ; BSR set to: 1
 13548  0141BA  0012               	return		;funcret
 13549  0141BC                     __end_of__tdiv_to_l_:
 13550                           	opt stack 0
 13551                           tblptru	equ	0xFF8
 13552                           tblptrh	equ	0xFF7
 13553                           tblptrl	equ	0xFF6
 13554                           tablat	equ	0xFF5
 13555                           prodh	equ	0xFF4
 13556                           prodl	equ	0xFF3
 13557                           intcon	equ	0xFF2
 13558                           postinc0	equ	0xFEE
 13559                           wreg	equ	0xFE8
 13560                           indf1	equ	0xFE7
 13561                           postdec1	equ	0xFE5
 13562                           fsr1h	equ	0xFE2
 13563                           fsr1l	equ	0xFE1
 13564                           indf2	equ	0xFDF
 13565                           postinc2	equ	0xFDE
 13566                           postdec2	equ	0xFDD
 13567                           fsr2h	equ	0xFDA
 13568                           fsr2l	equ	0xFD9
 13569                           status	equ	0xFD8
 13570                           
 13571 ;; *************** function __div_to_l_ *****************
 13572 ;; Defined at:
 13573 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 13574 ;; Parameters:    Size  Location     Type
 13575 ;;  f1              3   23[BANK1 ] unsigned long 
 13576 ;;  f2              3   26[BANK1 ] unsigned long 
 13577 ;; Auto vars:     Size  Location     Type
 13578 ;;  quot            4   29[BANK1 ] unsigned long 
 13579 ;;  exp1            1   34[BANK1 ] unsigned char 
 13580 ;;  cntr            1   33[BANK1 ] unsigned char 
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  4   23[BANK1 ] unsigned long 
 13583 ;; Registers used:
 13584 ;;		wreg, status,2, status,0
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13590 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13591 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13593 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13594 ;;Total ram usage:       12 bytes
 13595 ;; Hardware stack levels used:    1
 13596 ;; Hardware stack levels required when called:   14
 13597 ;; This function calls:
 13598 ;;		Nothing
 13599 ;; This function is called by:
 13600 ;;		_printf
 13601 ;; This function uses a non-reentrant model
 13602 ;;
 13603                           
 13604                           	psect	text30
 13605  0142EE                     __ptext30:
 13606                           	opt stack 0
 13607  0142EE                     __div_to_l_:
 13608                           	opt stack 13
 13609                           
 13610                           ; BSR set to: 1
 13611                           ;incstack = 0
 13612  0142EE  0101               	movlb	1	; () banked
 13613  0142F0  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 13614  0142F2  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 13615  0142F4  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 13616  0142F6  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13617  0142F8  A4D8               	btfss	status,2,c
 13618  0142FA  D009               	goto	l1450
 13619                           
 13620                           ; BSR set to: 1
 13621  0142FC  0E00               	movlw	0
 13622  0142FE  6F17               	movwf	?__div_to_l_& (0+255),b
 13623  014300  0E00               	movlw	0
 13624  014302  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13625  014304  0E00               	movlw	0
 13626  014306  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13627  014308  0E00               	movlw	0
 13628  01430A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13629                           
 13630                           ; BSR set to: 1
 13631  01430C  0012               	return	
 13632  01430E                     l1450:
 13633                           
 13634                           ; BSR set to: 1
 13635                           
 13636                           ; BSR set to: 1
 13637  01430E  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 13638  014310  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 13639  014312  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 13640  014314  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 13641  014316  A4D8               	btfss	status,2,c
 13642  014318  D009               	goto	l1452
 13643                           
 13644                           ; BSR set to: 1
 13645  01431A  0E00               	movlw	0
 13646  01431C  6F17               	movwf	?__div_to_l_& (0+255),b
 13647  01431E  0E00               	movlw	0
 13648  014320  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13649  014322  0E00               	movlw	0
 13650  014324  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13651  014326  0E00               	movlw	0
 13652  014328  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13653                           
 13654                           ; BSR set to: 1
 13655  01432A  0012               	return	
 13656  01432C                     l1452:
 13657                           
 13658                           ; BSR set to: 1
 13659                           
 13660                           ; BSR set to: 1
 13661  01432C  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 13662                           
 13663                           ; BSR set to: 1
 13664  01432E  0EFF               	movlw	255
 13665  014330  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 13666  014332  0EFF               	movlw	255
 13667  014334  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 13668  014336  0EFF               	movlw	255
 13669  014338  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 13670  01433A  0E00               	movlw	0
 13671  01433C  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 13672                           
 13673                           ; BSR set to: 1
 13674  01433E  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 13675  014340  0EFF               	movlw	255
 13676  014342  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 13677  014344  0EFF               	movlw	255
 13678  014346  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 13679  014348  0EFF               	movlw	255
 13680  01434A  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 13681  01434C  0E00               	movlw	0
 13682  01434E  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 13683                           
 13684                           ; BSR set to: 1
 13685  014350  0E00               	movlw	0
 13686  014352  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 13687  014354  0E00               	movlw	0
 13688  014356  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 13689  014358  0E00               	movlw	0
 13690  01435A  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 13691  01435C  0E00               	movlw	0
 13692  01435E  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 13693                           
 13694                           ; BSR set to: 1
 13695  014360  0E7F               	movlw	127
 13696  014362  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 13697                           
 13698                           ; BSR set to: 1
 13699  014364  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 13700  014366  0FA0               	addlw	160
 13701  014368  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 13702                           
 13703                           ; BSR set to: 1
 13704  01436A  0E20               	movlw	32
 13705  01436C  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 13706  01436E                     
 13707                           ; BSR set to: 1
 13708                           
 13709                           ; BSR set to: 1
 13710  01436E  90D8               	bcf	status,0,c
 13711  014370  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 13712  014372  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13713  014374  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13714  014376  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13715                           
 13716                           ; BSR set to: 1
 13717  014378  511A               	movf	__div_to_l_@f2& (0+255),w,b
 13718  01437A  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 13719  01437C  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13720  01437E  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 13721  014380  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13722  014382  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 13723  014384  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13724  014386  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 13725  014388  A0D8               	btfss	status,0,c
 13726  01438A  D009               	goto	l1454
 13727                           
 13728                           ; BSR set to: 1
 13729  01438C  511A               	movf	__div_to_l_@f2& (0+255),w,b
 13730  01438E  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 13731  014390  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13732  014392  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 13733  014394  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13734  014396  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 13735  014398  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13736  01439A  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 13737                           
 13738                           ; BSR set to: 1
 13739  01439C  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 13740  01439E                     l1454:
 13741                           
 13742                           ; BSR set to: 1
 13743                           
 13744                           ; BSR set to: 1
 13745  01439E  90D8               	bcf	status,0,c
 13746  0143A0  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 13747  0143A2  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 13748  0143A4  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 13749  0143A6  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 13750                           
 13751                           ; BSR set to: 1
 13752  0143A8  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 13753  0143AA  D7E1               	goto	l1453
 13754                           
 13755                           ; BSR set to: 1
 13756                           
 13757                           ; BSR set to: 1
 13758  0143AC  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 13759  0143AE  D016               	goto	l1456
 13760                           
 13761                           ; BSR set to: 1
 13762  0143B0  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13763  0143B2  0A80               	xorlw	128
 13764  0143B4  0F9F               	addlw	159
 13765  0143B6  B0D8               	btfsc	status,0,c
 13766  0143B8  D009               	goto	l1457
 13767                           
 13768                           ; BSR set to: 1
 13769  0143BA  0E00               	movlw	0
 13770  0143BC  6F17               	movwf	?__div_to_l_& (0+255),b
 13771  0143BE  0E00               	movlw	0
 13772  0143C0  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13773  0143C2  0E00               	movlw	0
 13774  0143C4  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13775  0143C6  0E00               	movlw	0
 13776  0143C8  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13777                           
 13778                           ; BSR set to: 1
 13779  0143CA  0012               	return	
 13780  0143CC                     l1457:
 13781                           
 13782                           ; BSR set to: 1
 13783                           
 13784                           ; BSR set to: 1
 13785                           
 13786                           ; BSR set to: 1
 13787  0143CC  90D8               	bcf	status,0,c
 13788  0143CE  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 13789  0143D0  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 13790  0143D2  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 13791  0143D4  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 13792                           
 13793                           ; BSR set to: 1
 13794  0143D6  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 13795  0143D8  D7F9               	goto	l1457
 13796                           
 13797                           ; BSR set to: 1
 13798  0143DA  D015               	goto	u9830
 13799  0143DC                     l1456:
 13800                           
 13801                           ; BSR set to: 1
 13802                           
 13803                           ; BSR set to: 1
 13804  0143DC  0E1F               	movlw	31
 13805  0143DE  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 13806  0143E0  D00F               	goto	l1462
 13807                           
 13808                           ; BSR set to: 1
 13809  0143E2  0E00               	movlw	0
 13810  0143E4  6F17               	movwf	?__div_to_l_& (0+255),b
 13811  0143E6  0E00               	movlw	0
 13812  0143E8  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13813  0143EA  0E00               	movlw	0
 13814  0143EC  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13815  0143EE  0E00               	movlw	0
 13816  0143F0  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13817                           
 13818                           ; BSR set to: 1
 13819  0143F2  0012               	return	
 13820  0143F4                     
 13821                           ; BSR set to: 1
 13822                           
 13823                           ; BSR set to: 1
 13824  0143F4  90D8               	bcf	status,0,c
 13825  0143F6  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 13826  0143F8  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13827  0143FA  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13828  0143FC  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13829  0143FE  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 13830  014400                     l1462:
 13831                           
 13832                           ; BSR set to: 1
 13833                           
 13834                           ; BSR set to: 1
 13835  014400  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13836  014402  A4D8               	btfss	status,2,c
 13837  014404  D7F7               	goto	l1463
 13838  014406                     u9830:
 13839                           
 13840                           ; BSR set to: 1
 13841                           
 13842                           ; BSR set to: 1
 13843  014406  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 13844  01440A  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 13845  01440E  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 13846  014412  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 13847                           
 13848                           ; BSR set to: 1
 13849  014416  0012               	return		;funcret
 13850  014418                     __end_of__div_to_l_:
 13851                           	opt stack 0
 13852                           tblptru	equ	0xFF8
 13853                           tblptrh	equ	0xFF7
 13854                           tblptrl	equ	0xFF6
 13855                           tablat	equ	0xFF5
 13856                           prodh	equ	0xFF4
 13857                           prodl	equ	0xFF3
 13858                           intcon	equ	0xFF2
 13859                           postinc0	equ	0xFEE
 13860                           wreg	equ	0xFE8
 13861                           indf1	equ	0xFE7
 13862                           postdec1	equ	0xFE5
 13863                           fsr1h	equ	0xFE2
 13864                           fsr1l	equ	0xFE1
 13865                           indf2	equ	0xFDF
 13866                           postinc2	equ	0xFDE
 13867                           postdec2	equ	0xFDD
 13868                           fsr2h	equ	0xFDA
 13869                           fsr2l	equ	0xFD9
 13870                           status	equ	0xFD8
 13871                           
 13872 ;; *************** function ___lltoft *****************
 13873 ;; Defined at:
 13874 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;  c               4   31[BANK1 ] unsigned long 
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;  exp             1   39[BANK1 ] unsigned char 
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  3   31[BANK1 ] float 
 13881 ;; Registers used:
 13882 ;;		wreg, status,2, status,0, cstack
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13888 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13889 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13890 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13891 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13892 ;;Total ram usage:        9 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:   15
 13895 ;; This function calls:
 13896 ;;		___ftpack
 13897 ;; This function is called by:
 13898 ;;		_printf
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           	psect	text31
 13903  015B5E                     __ptext31:
 13904                           	opt stack 0
 13905  015B5E                     ___lltoft:
 13906                           	opt stack 12
 13907                           
 13908                           ; BSR set to: 1
 13909                           ;incstack = 0
 13910  015B5E  0E8E               	movlw	142
 13911  015B60  0101               	movlb	1	; () banked
 13912  015B62  6F27               	movwf	___lltoft@exp& (0+255),b
 13913  015B64  D006               	goto	l1661
 13914  015B66                     
 13915                           ; BSR set to: 1
 13916                           
 13917                           ; BSR set to: 1
 13918  015B66  90D8               	bcf	status,0,c
 13919  015B68  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 13920  015B6A  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 13921  015B6C  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 13922  015B6E  331F               	rrcf	___lltoft@c& (0+255),f,b
 13923  015B70  2B27               	incf	___lltoft@exp& (0+255),f,b
 13924  015B72                     l1661:
 13925                           
 13926                           ; BSR set to: 1
 13927                           
 13928                           ; BSR set to: 1
 13929  015B72  0E00               	movlw	0
 13930  015B74  151F               	andwf	___lltoft@c& (0+255),w,b
 13931  015B76  6F23               	movwf	??___lltoft& (0+255),b
 13932  015B78  0E00               	movlw	0
 13933  015B7A  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 13934  015B7C  6F24               	movwf	(??___lltoft+1)& (0+255),b
 13935  015B7E  0E00               	movlw	0
 13936  015B80  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 13937  015B82  6F25               	movwf	(??___lltoft+2)& (0+255),b
 13938  015B84  0EFF               	movlw	255
 13939  015B86  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 13940  015B88  6F26               	movwf	(??___lltoft+3)& (0+255),b
 13941  015B8A  5123               	movf	??___lltoft& (0+255),w,b
 13942  015B8C  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 13943  015B8E  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 13944  015B90  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 13945  015B92  A4D8               	btfss	status,2,c
 13946  015B94  D7E8               	goto	l1662
 13947                           
 13948                           ; BSR set to: 1
 13949                           
 13950                           ; BSR set to: 1
 13951  015B96  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 13952  015B9A  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 13953  015B9E  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 13954  015BA2  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 13955  015BA6  0E00               	movlw	0
 13956  015BA8  6F1B               	movwf	___ftpack@sign& (0+255),b
 13957  015BAA  ECAE  F0A7         	call	___ftpack	;wreg free
 13958  015BAE  C117  F11F         	movff	?___ftpack,?___lltoft
 13959  015BB2  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 13960  015BB6  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 13961  015BBA  0012               	return	
 13962  015BBC                     __end_of___lltoft:
 13963                           	opt stack 0
 13964                           tblptru	equ	0xFF8
 13965                           tblptrh	equ	0xFF7
 13966                           tblptrl	equ	0xFF6
 13967                           tablat	equ	0xFF5
 13968                           prodh	equ	0xFF4
 13969                           prodl	equ	0xFF3
 13970                           intcon	equ	0xFF2
 13971                           postinc0	equ	0xFEE
 13972                           wreg	equ	0xFE8
 13973                           indf1	equ	0xFE7
 13974                           postdec1	equ	0xFE5
 13975                           fsr1h	equ	0xFE2
 13976                           fsr1l	equ	0xFE1
 13977                           indf2	equ	0xFDF
 13978                           postinc2	equ	0xFDE
 13979                           postdec2	equ	0xFDD
 13980                           fsr2h	equ	0xFDA
 13981                           fsr2l	equ	0xFD9
 13982                           status	equ	0xFD8
 13983                           
 13984 ;; *************** function ___llmod *****************
 13985 ;; Defined at:
 13986 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;  dividend        4   36[BANK1 ] unsigned long 
 13989 ;;  divisor         4   40[BANK1 ] unsigned long 
 13990 ;; Auto vars:     Size  Location     Type
 13991 ;;  counter         1   44[BANK1 ] unsigned char 
 13992 ;; Return value:  Size  Location     Type
 13993 ;;                  4   36[BANK1 ] unsigned long 
 13994 ;; Registers used:
 13995 ;;		wreg, status,2, status,0
 13996 ;; Tracked objects:
 13997 ;;		On entry : 0/0
 13998 ;;		On exit  : 0/0
 13999 ;;		Unchanged: 0/0
 14000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14001 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14002 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14004 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14005 ;;Total ram usage:        9 bytes
 14006 ;; Hardware stack levels used:    1
 14007 ;; Hardware stack levels required when called:   14
 14008 ;; This function calls:
 14009 ;;		Nothing
 14010 ;; This function is called by:
 14011 ;;		_printf
 14012 ;; This function uses a non-reentrant model
 14013 ;;
 14014                           
 14015                           	psect	text32
 14016  015904                     __ptext32:
 14017                           	opt stack 0
 14018  015904                     ___llmod:
 14019                           	opt stack 13
 14020                           
 14021                           ;incstack = 0
 14022  015904  0101               	movlb	1	; () banked
 14023  015906  5128               	movf	___llmod@divisor& (0+255),w,b
 14024  015908  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14025  01590A  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14026  01590C  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14027  01590E  B4D8               	btfsc	status,2,c
 14028  015910  D024               	goto	l1655
 14029                           
 14030                           ; BSR set to: 1
 14031  015912  0E01               	movlw	1
 14032  015914  6F2C               	movwf	___llmod@counter& (0+255),b
 14033  015916  D006               	goto	l1650
 14034  015918                     
 14035                           ; BSR set to: 1
 14036                           
 14037                           ; BSR set to: 1
 14038  015918  90D8               	bcf	status,0,c
 14039  01591A  3728               	rlcf	___llmod@divisor& (0+255),f,b
 14040  01591C  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14041  01591E  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14042  015920  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14043  015922  2B2C               	incf	___llmod@counter& (0+255),f,b
 14044  015924                     l1650:
 14045                           
 14046                           ; BSR set to: 1
 14047                           
 14048                           ; BSR set to: 1
 14049  015924  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14050  015926  D7F8               	goto	l1651
 14051  015928                     u10090:
 14052                           
 14053                           ; BSR set to: 1
 14054                           
 14055                           ; BSR set to: 1
 14056                           
 14057                           ; BSR set to: 1
 14058  015928  5128               	movf	___llmod@divisor& (0+255),w,b
 14059  01592A  5D24               	subwf	___llmod@dividend& (0+255),w,b
 14060  01592C  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 14061  01592E  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14062  015930  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 14063  015932  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14064  015934  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 14065  015936  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14066  015938  A0D8               	btfss	status,0,c
 14067  01593A  D008               	goto	l1654
 14068                           
 14069                           ; BSR set to: 1
 14070  01593C  5128               	movf	___llmod@divisor& (0+255),w,b
 14071  01593E  5F24               	subwf	___llmod@dividend& (0+255),f,b
 14072  015940  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 14073  015942  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14074  015944  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 14075  015946  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14076  015948  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 14077  01594A  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14078  01594C                     l1654:
 14079                           
 14080                           ; BSR set to: 1
 14081                           
 14082                           ; BSR set to: 1
 14083  01594C  90D8               	bcf	status,0,c
 14084  01594E  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14085  015950  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14086  015952  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14087  015954  3328               	rrcf	___llmod@divisor& (0+255),f,b
 14088                           
 14089                           ; BSR set to: 1
 14090  015956  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 14091  015958  D7E7               	goto	u10090
 14092  01595A                     l1655:
 14093                           
 14094                           ; BSR set to: 1
 14095                           
 14096                           ; BSR set to: 1
 14097  01595A  C124  F124         	movff	___llmod@dividend,?___llmod
 14098  01595E  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 14099  015962  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 14100  015966  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 14101                           
 14102                           ; BSR set to: 1
 14103  01596A  0012               	return		;funcret
 14104  01596C                     __end_of___llmod:
 14105                           	opt stack 0
 14106                           tblptru	equ	0xFF8
 14107                           tblptrh	equ	0xFF7
 14108                           tblptrl	equ	0xFF6
 14109                           tablat	equ	0xFF5
 14110                           prodh	equ	0xFF4
 14111                           prodl	equ	0xFF3
 14112                           intcon	equ	0xFF2
 14113                           postinc0	equ	0xFEE
 14114                           wreg	equ	0xFE8
 14115                           indf1	equ	0xFE7
 14116                           postdec1	equ	0xFE5
 14117                           fsr1h	equ	0xFE2
 14118                           fsr1l	equ	0xFE1
 14119                           indf2	equ	0xFDF
 14120                           postinc2	equ	0xFDE
 14121                           postdec2	equ	0xFDD
 14122                           fsr2h	equ	0xFDA
 14123                           fsr2l	equ	0xFD9
 14124                           status	equ	0xFD8
 14125                           
 14126 ;; *************** function ___lldiv *****************
 14127 ;; Defined at:
 14128 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;  dividend        4   23[BANK1 ] unsigned long 
 14131 ;;  divisor         4   27[BANK1 ] unsigned long 
 14132 ;; Auto vars:     Size  Location     Type
 14133 ;;  quotient        4   31[BANK1 ] unsigned long 
 14134 ;;  counter         1   35[BANK1 ] unsigned char 
 14135 ;; Return value:  Size  Location     Type
 14136 ;;                  4   23[BANK1 ] unsigned long 
 14137 ;; Registers used:
 14138 ;;		wreg, status,2, status,0
 14139 ;; Tracked objects:
 14140 ;;		On entry : 0/0
 14141 ;;		On exit  : 0/0
 14142 ;;		Unchanged: 0/0
 14143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14144 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14145 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14147 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14148 ;;Total ram usage:       13 bytes
 14149 ;; Hardware stack levels used:    1
 14150 ;; Hardware stack levels required when called:   14
 14151 ;; This function calls:
 14152 ;;		Nothing
 14153 ;; This function is called by:
 14154 ;;		_printf
 14155 ;; This function uses a non-reentrant model
 14156 ;;
 14157                           
 14158                           	psect	text33
 14159  0154CA                     __ptext33:
 14160                           	opt stack 0
 14161  0154CA                     ___lldiv:
 14162                           	opt stack 13
 14163                           
 14164                           ; BSR set to: 1
 14165                           ;incstack = 0
 14166  0154CA  0E00               	movlw	0
 14167  0154CC  0101               	movlb	1	; () banked
 14168  0154CE  6F1F               	movwf	___lldiv@quotient& (0+255),b
 14169  0154D0  0E00               	movlw	0
 14170  0154D2  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 14171  0154D4  0E00               	movlw	0
 14172  0154D6  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 14173  0154D8  0E00               	movlw	0
 14174  0154DA  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 14175                           
 14176                           ; BSR set to: 1
 14177  0154DC  511B               	movf	___lldiv@divisor& (0+255),w,b
 14178  0154DE  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14179  0154E0  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14180  0154E2  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14181  0154E4  B4D8               	btfsc	status,2,c
 14182  0154E6  D02A               	goto	l1645
 14183                           
 14184                           ; BSR set to: 1
 14185  0154E8  0E01               	movlw	1
 14186  0154EA  6F23               	movwf	___lldiv@counter& (0+255),b
 14187  0154EC  D006               	goto	l1640
 14188  0154EE                     
 14189                           ; BSR set to: 1
 14190                           
 14191                           ; BSR set to: 1
 14192  0154EE  90D8               	bcf	status,0,c
 14193  0154F0  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 14194  0154F2  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14195  0154F4  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14196  0154F6  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14197  0154F8  2B23               	incf	___lldiv@counter& (0+255),f,b
 14198  0154FA                     l1640:
 14199                           
 14200                           ; BSR set to: 1
 14201                           
 14202                           ; BSR set to: 1
 14203  0154FA  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14204  0154FC  D7F8               	goto	l1641
 14205  0154FE                     u10060:
 14206                           
 14207                           ; BSR set to: 1
 14208                           
 14209                           ; BSR set to: 1
 14210                           
 14211                           ; BSR set to: 1
 14212  0154FE  90D8               	bcf	status,0,c
 14213  015500  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 14214  015502  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14215  015504  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14216  015506  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14217                           
 14218                           ; BSR set to: 1
 14219  015508  511B               	movf	___lldiv@divisor& (0+255),w,b
 14220  01550A  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 14221  01550C  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14222  01550E  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14223  015510  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14224  015512  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14225  015514  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14226  015516  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14227  015518  A0D8               	btfss	status,0,c
 14228  01551A  D009               	goto	l1644
 14229                           
 14230                           ; BSR set to: 1
 14231  01551C  511B               	movf	___lldiv@divisor& (0+255),w,b
 14232  01551E  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 14233  015520  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14234  015522  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14235  015524  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14236  015526  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14237  015528  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14238  01552A  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14239                           
 14240                           ; BSR set to: 1
 14241  01552C  811F               	bsf	___lldiv@quotient& (0+255),0,b
 14242  01552E                     l1644:
 14243                           
 14244                           ; BSR set to: 1
 14245                           
 14246                           ; BSR set to: 1
 14247  01552E  90D8               	bcf	status,0,c
 14248  015530  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14249  015532  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14250  015534  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14251  015536  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 14252                           
 14253                           ; BSR set to: 1
 14254  015538  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 14255  01553A  D7E1               	goto	u10060
 14256  01553C                     l1645:
 14257                           
 14258                           ; BSR set to: 1
 14259                           
 14260                           ; BSR set to: 1
 14261  01553C  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 14262  015540  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 14263  015544  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 14264  015548  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 14265                           
 14266                           ; BSR set to: 1
 14267  01554C  0012               	return		;funcret
 14268  01554E                     __end_of___lldiv:
 14269                           	opt stack 0
 14270                           tblptru	equ	0xFF8
 14271                           tblptrh	equ	0xFF7
 14272                           tblptrl	equ	0xFF6
 14273                           tablat	equ	0xFF5
 14274                           prodh	equ	0xFF4
 14275                           prodl	equ	0xFF3
 14276                           intcon	equ	0xFF2
 14277                           postinc0	equ	0xFEE
 14278                           wreg	equ	0xFE8
 14279                           indf1	equ	0xFE7
 14280                           postdec1	equ	0xFE5
 14281                           fsr1h	equ	0xFE2
 14282                           fsr1l	equ	0xFE1
 14283                           indf2	equ	0xFDF
 14284                           postinc2	equ	0xFDE
 14285                           postdec2	equ	0xFDD
 14286                           fsr2h	equ	0xFDA
 14287                           fsr2l	equ	0xFD9
 14288                           status	equ	0xFD8
 14289                           
 14290 ;; *************** function ___fttol *****************
 14291 ;; Defined at:
 14292 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;  f1              3   85[BANK1 ] float 
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;  lval            4   95[BANK1 ] unsigned long 
 14297 ;;  exp1            1   99[BANK1 ] unsigned char 
 14298 ;;  sign1           1   94[BANK1 ] unsigned char 
 14299 ;; Return value:  Size  Location     Type
 14300 ;;                  4   85[BANK1 ] long 
 14301 ;; Registers used:
 14302 ;;		wreg, status,2, status,0
 14303 ;; Tracked objects:
 14304 ;;		On entry : 0/0
 14305 ;;		On exit  : 0/0
 14306 ;;		Unchanged: 0/0
 14307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14308 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14309 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14310 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14311 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14312 ;;Total ram usage:       15 bytes
 14313 ;; Hardware stack levels used:    1
 14314 ;; Hardware stack levels required when called:   14
 14315 ;; This function calls:
 14316 ;;		Nothing
 14317 ;; This function is called by:
 14318 ;;		_printf
 14319 ;; This function uses a non-reentrant model
 14320 ;;
 14321                           
 14322                           	psect	text34
 14323  01465C                     __ptext34:
 14324                           	opt stack 0
 14325  01465C                     ___fttol:
 14326                           	opt stack 13
 14327                           
 14328                           ; BSR set to: 1
 14329                           ;incstack = 0
 14330  01465C  C157  F159         	movff	___fttol@f1+2,??___fttol
 14331  014660  0101               	movlb	1	; () banked
 14332  014662  6B5A               	clrf	(??___fttol+1)& (0+255),b
 14333  014664  6B5B               	clrf	(??___fttol+2)& (0+255),b
 14334  014666  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 14335  014668  3759               	rlcf	??___fttol& (0+255),f,b
 14336  01466A  E301               	bnc	u9971
 14337  01466C  815A               	bsf	(??___fttol+1)& (0+255),0,b
 14338  01466E                     u9971:
 14339  01466E  5159               	movf	??___fttol& (0+255),w,b
 14340  014670  6F63               	movwf	___fttol@exp1& (0+255),b
 14341  014672  5163               	movf	___fttol@exp1& (0+255),w,b
 14342  014674  A4D8               	btfss	status,2,c
 14343  014676  D009               	goto	l1599
 14344                           
 14345                           ; BSR set to: 1
 14346  014678  0E00               	movlw	0
 14347  01467A  6F55               	movwf	?___fttol& (0+255),b
 14348  01467C  0E00               	movlw	0
 14349  01467E  6F56               	movwf	(?___fttol+1)& (0+255),b
 14350  014680  0E00               	movlw	0
 14351  014682  6F57               	movwf	(?___fttol+2)& (0+255),b
 14352  014684  0E00               	movlw	0
 14353  014686  6F58               	movwf	(?___fttol+3)& (0+255),b
 14354                           
 14355                           ; BSR set to: 1
 14356  014688  0012               	return	
 14357  01468A                     l1599:
 14358                           
 14359                           ; BSR set to: 1
 14360                           
 14361                           ; BSR set to: 1
 14362  01468A  0E17               	movlw	23
 14363  01468C  6F59               	movwf	??___fttol& (0+255),b
 14364  01468E  C155  F15A         	movff	___fttol@f1,??___fttol+1
 14365  014692  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 14366  014696  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 14367  01469A  2959               	incf	??___fttol& (0+255),w,b
 14368  01469C  6F5D               	movwf	(??___fttol+4)& (0+255),b
 14369  01469E  D004               	goto	u9990
 14370  0146A0                     u9995:
 14371  0146A0  90D8               	bcf	status,0,c
 14372  0146A2  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 14373  0146A4  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 14374  0146A6  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 14375  0146A8                     u9990:
 14376  0146A8  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 14377  0146AA  D7FA               	goto	u9995
 14378  0146AC  0101               	movlb	1	; () banked
 14379  0146AE  515A               	movf	(??___fttol+1)& (0+255),w,b
 14380  0146B0  6F5E               	movwf	___fttol@sign1& (0+255),b
 14381                           
 14382                           ; BSR set to: 1
 14383  0146B2  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 14384                           
 14385                           ; BSR set to: 1
 14386  0146B4  0EFF               	movlw	255
 14387  0146B6  1755               	andwf	___fttol@f1& (0+255),f,b
 14388  0146B8  0EFF               	movlw	255
 14389  0146BA  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 14390  0146BC  0E00               	movlw	0
 14391  0146BE  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 14392                           
 14393                           ; BSR set to: 1
 14394  0146C0  5155               	movf	___fttol@f1& (0+255),w,b
 14395  0146C2  6F5F               	movwf	___fttol@lval& (0+255),b
 14396  0146C4  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 14397  0146C6  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 14398  0146C8  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 14399  0146CA  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 14400  0146CC  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 14401                           
 14402                           ; BSR set to: 1
 14403  0146CE  0E8E               	movlw	142
 14404  0146D0  5F63               	subwf	___fttol@exp1& (0+255),f,b
 14405                           
 14406                           ; BSR set to: 1
 14407  0146D2  AF63               	btfss	___fttol@exp1& (0+255),7,b
 14408  0146D4  D016               	goto	l1601
 14409                           
 14410                           ; BSR set to: 1
 14411  0146D6  5163               	movf	___fttol@exp1& (0+255),w,b
 14412  0146D8  0A80               	xorlw	128
 14413  0146DA  0F8F               	addlw	143
 14414  0146DC  B0D8               	btfsc	status,0,c
 14415  0146DE  D009               	goto	l1602
 14416                           
 14417                           ; BSR set to: 1
 14418  0146E0  0E00               	movlw	0
 14419  0146E2  6F55               	movwf	?___fttol& (0+255),b
 14420  0146E4  0E00               	movlw	0
 14421  0146E6  6F56               	movwf	(?___fttol+1)& (0+255),b
 14422  0146E8  0E00               	movlw	0
 14423  0146EA  6F57               	movwf	(?___fttol+2)& (0+255),b
 14424  0146EC  0E00               	movlw	0
 14425  0146EE  6F58               	movwf	(?___fttol+3)& (0+255),b
 14426                           
 14427                           ; BSR set to: 1
 14428  0146F0  0012               	return	
 14429  0146F2                     l1602:
 14430                           
 14431                           ; BSR set to: 1
 14432                           
 14433                           ; BSR set to: 1
 14434                           
 14435                           ; BSR set to: 1
 14436  0146F2  90D8               	bcf	status,0,c
 14437  0146F4  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 14438  0146F6  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 14439  0146F8  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 14440  0146FA  335F               	rrcf	___fttol@lval& (0+255),f,b
 14441                           
 14442                           ; BSR set to: 1
 14443  0146FC  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 14444  0146FE  D7F9               	goto	l1602
 14445                           
 14446                           ; BSR set to: 1
 14447  014700  D015               	goto	u10030
 14448  014702                     l1601:
 14449                           
 14450                           ; BSR set to: 1
 14451                           
 14452                           ; BSR set to: 1
 14453  014702  0E17               	movlw	23
 14454  014704  6563               	cpfsgt	___fttol@exp1& (0+255),b
 14455  014706  D00F               	goto	l1607
 14456                           
 14457                           ; BSR set to: 1
 14458  014708  0E00               	movlw	0
 14459  01470A  6F55               	movwf	?___fttol& (0+255),b
 14460  01470C  0E00               	movlw	0
 14461  01470E  6F56               	movwf	(?___fttol+1)& (0+255),b
 14462  014710  0E00               	movlw	0
 14463  014712  6F57               	movwf	(?___fttol+2)& (0+255),b
 14464  014714  0E00               	movlw	0
 14465  014716  6F58               	movwf	(?___fttol+3)& (0+255),b
 14466                           
 14467                           ; BSR set to: 1
 14468  014718  0012               	return	
 14469  01471A                     
 14470                           ; BSR set to: 1
 14471                           
 14472                           ; BSR set to: 1
 14473  01471A  90D8               	bcf	status,0,c
 14474  01471C  375F               	rlcf	___fttol@lval& (0+255),f,b
 14475  01471E  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 14476  014720  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 14477  014722  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 14478  014724  0763               	decf	___fttol@exp1& (0+255),f,b
 14479  014726                     l1607:
 14480                           
 14481                           ; BSR set to: 1
 14482                           
 14483                           ; BSR set to: 1
 14484  014726  5163               	movf	___fttol@exp1& (0+255),w,b
 14485  014728  A4D8               	btfss	status,2,c
 14486  01472A  D7F7               	goto	l1608
 14487  01472C                     u10030:
 14488                           
 14489                           ; BSR set to: 1
 14490                           
 14491                           ; BSR set to: 1
 14492                           
 14493                           ; BSR set to: 1
 14494  01472C  515E               	movf	___fttol@sign1& (0+255),w,b
 14495  01472E  B4D8               	btfsc	status,2,c
 14496  014730  D008               	goto	l1610
 14497                           
 14498                           ; BSR set to: 1
 14499  014732  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 14500  014734  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 14501  014736  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 14502  014738  6D5F               	negf	___fttol@lval& (0+255),b
 14503  01473A  0E00               	movlw	0
 14504  01473C  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 14505  01473E  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 14506  014740  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 14507  014742                     l1610:
 14508                           
 14509                           ; BSR set to: 1
 14510                           
 14511                           ; BSR set to: 1
 14512  014742  C15F  F155         	movff	___fttol@lval,?___fttol
 14513  014746  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 14514  01474A  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 14515  01474E  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 14516  014752  0012               	return	
 14517  014754                     __end_of___fttol:
 14518                           	opt stack 0
 14519                           tblptru	equ	0xFF8
 14520                           tblptrh	equ	0xFF7
 14521                           tblptrl	equ	0xFF6
 14522                           tablat	equ	0xFF5
 14523                           prodh	equ	0xFF4
 14524                           prodl	equ	0xFF3
 14525                           intcon	equ	0xFF2
 14526                           postinc0	equ	0xFEE
 14527                           wreg	equ	0xFE8
 14528                           indf1	equ	0xFE7
 14529                           postdec1	equ	0xFE5
 14530                           fsr1h	equ	0xFE2
 14531                           fsr1l	equ	0xFE1
 14532                           indf2	equ	0xFDF
 14533                           postinc2	equ	0xFDE
 14534                           postdec2	equ	0xFDD
 14535                           fsr2h	equ	0xFDA
 14536                           fsr2l	equ	0xFD9
 14537                           status	equ	0xFD8
 14538                           
 14539 ;; *************** function ___ftsub *****************
 14540 ;; Defined at:
 14541 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 14542 ;; Parameters:    Size  Location     Type
 14543 ;;  f1              3   55[BANK1 ] float 
 14544 ;;  f2              3   58[BANK1 ] float 
 14545 ;; Auto vars:     Size  Location     Type
 14546 ;;		None
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  3   55[BANK1 ] float 
 14549 ;; Registers used:
 14550 ;;		wreg, status,2, status,0, cstack
 14551 ;; Tracked objects:
 14552 ;;		On entry : 0/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14556 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14559 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14560 ;;Total ram usage:        6 bytes
 14561 ;; Hardware stack levels used:    1
 14562 ;; Hardware stack levels required when called:   16
 14563 ;; This function calls:
 14564 ;;		___ftadd
 14565 ;; This function is called by:
 14566 ;;		_printf
 14567 ;; This function uses a non-reentrant model
 14568 ;;
 14569                           
 14570                           	psect	text35
 14571  015F28                     __ptext35:
 14572                           	opt stack 0
 14573  015F28                     ___ftsub:
 14574                           	opt stack 11
 14575                           
 14576                           ; BSR set to: 1
 14577                           ;incstack = 0
 14578  015F28  0101               	movlb	1	; () banked
 14579  015F2A  513A               	movf	___ftsub@f2& (0+255),w,b
 14580  015F2C  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 14581  015F2E  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 14582  015F30  B4D8               	btfsc	status,2,c
 14583  015F32  D006               	goto	l1595
 14584                           
 14585                           ; BSR set to: 1
 14586  015F34  0E00               	movlw	0
 14587  015F36  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 14588  015F38  0E00               	movlw	0
 14589  015F3A  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 14590  015F3C  0E80               	movlw	128
 14591  015F3E  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 14592  015F40                     l1595:
 14593                           
 14594                           ; BSR set to: 1
 14595                           
 14596                           ; BSR set to: 1
 14597  015F40  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 14598  015F44  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 14599  015F48  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 14600  015F4C  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 14601  015F50  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 14602  015F54  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 14603  015F58  ECCE  F09D         	call	___ftadd	;wreg free
 14604  015F5C  C12B  F137         	movff	?___ftadd,?___ftsub
 14605  015F60  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 14606  015F64  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 14607  015F68  0012               	return	
 14608  015F6A                     __end_of___ftsub:
 14609                           	opt stack 0
 14610                           tblptru	equ	0xFF8
 14611                           tblptrh	equ	0xFF7
 14612                           tblptrl	equ	0xFF6
 14613                           tablat	equ	0xFF5
 14614                           prodh	equ	0xFF4
 14615                           prodl	equ	0xFF3
 14616                           intcon	equ	0xFF2
 14617                           postinc0	equ	0xFEE
 14618                           wreg	equ	0xFE8
 14619                           indf1	equ	0xFE7
 14620                           postdec1	equ	0xFE5
 14621                           fsr1h	equ	0xFE2
 14622                           fsr1l	equ	0xFE1
 14623                           indf2	equ	0xFDF
 14624                           postinc2	equ	0xFDE
 14625                           postdec2	equ	0xFDD
 14626                           fsr2h	equ	0xFDA
 14627                           fsr2l	equ	0xFD9
 14628                           status	equ	0xFD8
 14629                           
 14630 ;; *************** function ___ftadd *****************
 14631 ;; Defined at:
 14632 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 14633 ;; Parameters:    Size  Location     Type
 14634 ;;  f1              3   43[BANK1 ] float 
 14635 ;;  f2              3   46[BANK1 ] float 
 14636 ;; Auto vars:     Size  Location     Type
 14637 ;;  exp1            1   54[BANK1 ] unsigned char 
 14638 ;;  exp2            1   53[BANK1 ] unsigned char 
 14639 ;;  sign            1   52[BANK1 ] unsigned char 
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  3   43[BANK1 ] float 
 14642 ;; Registers used:
 14643 ;;		wreg, status,2, status,0, cstack
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14649 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14650 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14651 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14652 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14653 ;;Total ram usage:       12 bytes
 14654 ;; Hardware stack levels used:    1
 14655 ;; Hardware stack levels required when called:   15
 14656 ;; This function calls:
 14657 ;;		___ftpack
 14658 ;; This function is called by:
 14659 ;;		_ringBufferLUT
 14660 ;;		_printf
 14661 ;;		___ftsub
 14662 ;; This function uses a non-reentrant model
 14663 ;;
 14664                           
 14665                           	psect	text36
 14666  013B9C                     __ptext36:
 14667                           	opt stack 0
 14668  013B9C                     ___ftadd:
 14669                           	opt stack 11
 14670                           
 14671                           ;incstack = 0
 14672  013B9C  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 14673  013BA0  0101               	movlb	1	; () banked
 14674  013BA2  6B32               	clrf	(??___ftadd+1)& (0+255),b
 14675  013BA4  6B33               	clrf	(??___ftadd+2)& (0+255),b
 14676  013BA6  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14677  013BA8  3731               	rlcf	??___ftadd& (0+255),f,b
 14678  013BAA  E301               	bnc	u9071
 14679  013BAC  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 14680  013BAE                     u9071:
 14681  013BAE  5131               	movf	??___ftadd& (0+255),w,b
 14682  013BB0  6F36               	movwf	___ftadd@exp1& (0+255),b
 14683  013BB2  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 14684  013BB6  6B32               	clrf	(??___ftadd+1)& (0+255),b
 14685  013BB8  6B33               	clrf	(??___ftadd+2)& (0+255),b
 14686  013BBA  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14687  013BBC  3731               	rlcf	??___ftadd& (0+255),f,b
 14688  013BBE  E301               	bnc	u9081
 14689  013BC0  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 14690  013BC2                     u9081:
 14691  013BC2  5131               	movf	??___ftadd& (0+255),w,b
 14692  013BC4  6F35               	movwf	___ftadd@exp2& (0+255),b
 14693                           
 14694                           ; BSR set to: 1
 14695  013BC6  5136               	movf	___ftadd@exp1& (0+255),w,b
 14696  013BC8  B4D8               	btfsc	status,2,c
 14697  013BCA  D00B               	goto	u9110
 14698                           
 14699                           ; BSR set to: 1
 14700  013BCC  5135               	movf	___ftadd@exp2& (0+255),w,b
 14701  013BCE  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 14702  013BD0  B0D8               	btfsc	status,0,c
 14703  013BD2  D00E               	goto	l1513
 14704                           
 14705                           ; BSR set to: 1
 14706  013BD4  5136               	movf	___ftadd@exp1& (0+255),w,b
 14707  013BD6  0800               	sublw	0
 14708  013BD8  2535               	addwf	___ftadd@exp2& (0+255),w,b
 14709  013BDA  6F31               	movwf	??___ftadd& (0+255),b
 14710  013BDC  0E18               	movlw	24
 14711  013BDE  6531               	cpfsgt	??___ftadd& (0+255),b
 14712  013BE0  D007               	goto	l1513
 14713  013BE2                     u9110:
 14714                           
 14715                           ; BSR set to: 1
 14716  013BE2  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 14717  013BE6  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 14718  013BEA  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 14719  013BEE  0012               	return	
 14720  013BF0                     l1513:
 14721                           
 14722                           ; BSR set to: 1
 14723                           
 14724                           ; BSR set to: 1
 14725  013BF0  5135               	movf	___ftadd@exp2& (0+255),w,b
 14726  013BF2  B4D8               	btfsc	status,2,c
 14727  013BF4  D00B               	goto	u9140
 14728                           
 14729                           ; BSR set to: 1
 14730  013BF6  5136               	movf	___ftadd@exp1& (0+255),w,b
 14731  013BF8  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 14732  013BFA  B0D8               	btfsc	status,0,c
 14733  013BFC  D00E               	goto	l1517
 14734                           
 14735                           ; BSR set to: 1
 14736  013BFE  5135               	movf	___ftadd@exp2& (0+255),w,b
 14737  013C00  0800               	sublw	0
 14738  013C02  2536               	addwf	___ftadd@exp1& (0+255),w,b
 14739  013C04  6F31               	movwf	??___ftadd& (0+255),b
 14740  013C06  0E18               	movlw	24
 14741  013C08  6531               	cpfsgt	??___ftadd& (0+255),b
 14742  013C0A  D007               	goto	l1517
 14743  013C0C                     u9140:
 14744                           
 14745                           ; BSR set to: 1
 14746  013C0C  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 14747  013C10  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 14748  013C14  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 14749  013C18  0012               	return	
 14750  013C1A                     l1517:
 14751                           
 14752                           ; BSR set to: 1
 14753                           
 14754                           ; BSR set to: 1
 14755  013C1A  0E06               	movlw	6
 14756  013C1C  6F34               	movwf	___ftadd@sign& (0+255),b
 14757                           
 14758                           ; BSR set to: 1
 14759  013C1E  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14760                           
 14761                           ; BSR set to: 1
 14762  013C20  8F34               	bsf	___ftadd@sign& (0+255),7,b
 14763                           
 14764                           ; BSR set to: 1
 14765                           
 14766                           ; BSR set to: 1
 14767  013C22  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14768                           
 14769                           ; BSR set to: 1
 14770  013C24  8D34               	bsf	___ftadd@sign& (0+255),6,b
 14771                           
 14772                           ; BSR set to: 1
 14773  013C26  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14774                           
 14775                           ; BSR set to: 1
 14776  013C28  0EFF               	movlw	255
 14777  013C2A  172B               	andwf	___ftadd@f1& (0+255),f,b
 14778  013C2C  0EFF               	movlw	255
 14779  013C2E  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14780  013C30  0E00               	movlw	0
 14781  013C32  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14782  013C34  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14783                           
 14784                           ; BSR set to: 1
 14785  013C36  0EFF               	movlw	255
 14786  013C38  172E               	andwf	___ftadd@f2& (0+255),f,b
 14787  013C3A  0EFF               	movlw	255
 14788  013C3C  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14789  013C3E  0E00               	movlw	0
 14790  013C40  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14791                           
 14792                           ; BSR set to: 1
 14793  013C42  5135               	movf	___ftadd@exp2& (0+255),w,b
 14794  013C44  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 14795  013C46  B0D8               	btfsc	status,0,c
 14796  013C48  D01B               	goto	l1522
 14797  013C4A                     u9170:
 14798                           
 14799                           ; BSR set to: 1
 14800                           
 14801                           ; BSR set to: 1
 14802  013C4A  90D8               	bcf	status,0,c
 14803  013C4C  372E               	rlcf	___ftadd@f2& (0+255),f,b
 14804  013C4E  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14805  013C50  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14806  013C52  0735               	decf	___ftadd@exp2& (0+255),f,b
 14807                           
 14808                           ; BSR set to: 1
 14809  013C54  5136               	movf	___ftadd@exp1& (0+255),w,b
 14810  013C56  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 14811  013C58  B4D8               	btfsc	status,2,c
 14812  013C5A  D00D               	goto	l1527
 14813                           
 14814                           ; BSR set to: 1
 14815  013C5C  0734               	decf	___ftadd@sign& (0+255),f,b
 14816  013C5E  C134  F131         	movff	___ftadd@sign,??___ftadd
 14817  013C62  0E07               	movlw	7
 14818  013C64  1731               	andwf	??___ftadd& (0+255),f,b
 14819  013C66  B4D8               	btfsc	status,2,c
 14820  013C68  D006               	goto	l1527
 14821  013C6A  D7EF               	goto	u9170
 14822  013C6C                     
 14823                           ; BSR set to: 1
 14824                           
 14825                           ; BSR set to: 1
 14826  013C6C  90D8               	bcf	status,0,c
 14827  013C6E  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14828  013C70  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14829  013C72  332B               	rrcf	___ftadd@f1& (0+255),f,b
 14830  013C74  2B36               	incf	___ftadd@exp1& (0+255),f,b
 14831  013C76                     l1527:
 14832                           
 14833                           ; BSR set to: 1
 14834                           
 14835                           ; BSR set to: 1
 14836  013C76  5135               	movf	___ftadd@exp2& (0+255),w,b
 14837  013C78  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 14838  013C7A  B4D8               	btfsc	status,2,c
 14839  013C7C  D01F               	goto	u9240
 14840  013C7E  D7F6               	goto	l1528
 14841  013C80                     l1522:
 14842                           
 14843                           ; BSR set to: 1
 14844                           
 14845                           ; BSR set to: 1
 14846  013C80  5136               	movf	___ftadd@exp1& (0+255),w,b
 14847  013C82  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 14848  013C84  B0D8               	btfsc	status,0,c
 14849  013C86  D01A               	goto	u9240
 14850  013C88                     u9210:
 14851                           
 14852                           ; BSR set to: 1
 14853                           
 14854                           ; BSR set to: 1
 14855  013C88  90D8               	bcf	status,0,c
 14856  013C8A  372B               	rlcf	___ftadd@f1& (0+255),f,b
 14857  013C8C  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14858  013C8E  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14859  013C90  0736               	decf	___ftadd@exp1& (0+255),f,b
 14860                           
 14861                           ; BSR set to: 1
 14862  013C92  5136               	movf	___ftadd@exp1& (0+255),w,b
 14863  013C94  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 14864  013C96  B4D8               	btfsc	status,2,c
 14865  013C98  D00D               	goto	l1536
 14866                           
 14867                           ; BSR set to: 1
 14868  013C9A  0734               	decf	___ftadd@sign& (0+255),f,b
 14869  013C9C  C134  F131         	movff	___ftadd@sign,??___ftadd
 14870  013CA0  0E07               	movlw	7
 14871  013CA2  1731               	andwf	??___ftadd& (0+255),f,b
 14872  013CA4  B4D8               	btfsc	status,2,c
 14873  013CA6  D006               	goto	l1536
 14874  013CA8  D7EF               	goto	u9210
 14875  013CAA                     
 14876                           ; BSR set to: 1
 14877                           
 14878                           ; BSR set to: 1
 14879  013CAA  90D8               	bcf	status,0,c
 14880  013CAC  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14881  013CAE  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14882  013CB0  332E               	rrcf	___ftadd@f2& (0+255),f,b
 14883  013CB2  2B35               	incf	___ftadd@exp2& (0+255),f,b
 14884  013CB4                     l1536:
 14885                           
 14886                           ; BSR set to: 1
 14887                           
 14888                           ; BSR set to: 1
 14889  013CB4  5135               	movf	___ftadd@exp2& (0+255),w,b
 14890  013CB6  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 14891  013CB8  A4D8               	btfss	status,2,c
 14892  013CBA  D7F7               	goto	l1537
 14893  013CBC                     u9240:
 14894                           
 14895                           ; BSR set to: 1
 14896                           
 14897                           ; BSR set to: 1
 14898                           
 14899                           ; BSR set to: 1
 14900  013CBC  AF34               	btfss	___ftadd@sign& (0+255),7,b
 14901  013CBE  D00C               	goto	l1539
 14902                           
 14903                           ; BSR set to: 1
 14904  013CC0  0EFF               	movlw	255
 14905  013CC2  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 14906  013CC4  0EFF               	movlw	255
 14907  013CC6  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14908  013CC8  0EFF               	movlw	255
 14909  013CCA  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14910  013CCC  0E01               	movlw	1
 14911  013CCE  272B               	addwf	___ftadd@f1& (0+255),f,b
 14912  013CD0  0E00               	movlw	0
 14913  013CD2  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14914  013CD4  0E00               	movlw	0
 14915  013CD6  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14916  013CD8                     l1539:
 14917                           
 14918                           ; BSR set to: 1
 14919  013CD8  AD34               	btfss	___ftadd@sign& (0+255),6,b
 14920  013CDA  D00C               	goto	l1540
 14921                           
 14922                           ; BSR set to: 1
 14923  013CDC  0EFF               	movlw	255
 14924  013CDE  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 14925  013CE0  0EFF               	movlw	255
 14926  013CE2  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14927  013CE4  0EFF               	movlw	255
 14928  013CE6  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14929  013CE8  0E01               	movlw	1
 14930  013CEA  272E               	addwf	___ftadd@f2& (0+255),f,b
 14931  013CEC  0E00               	movlw	0
 14932  013CEE  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14933  013CF0  0E00               	movlw	0
 14934  013CF2  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14935  013CF4                     l1540:
 14936                           
 14937                           ; BSR set to: 1
 14938                           
 14939                           ; BSR set to: 1
 14940  013CF4  0E00               	movlw	0
 14941  013CF6  6F34               	movwf	___ftadd@sign& (0+255),b
 14942                           
 14943                           ; BSR set to: 1
 14944  013CF8  512B               	movf	___ftadd@f1& (0+255),w,b
 14945  013CFA  272E               	addwf	___ftadd@f2& (0+255),f,b
 14946  013CFC  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14947  013CFE  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14948  013D00  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14949  013D02  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14950                           
 14951                           ; BSR set to: 1
 14952  013D04  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14953  013D06  D00E               	goto	l1541
 14954                           
 14955                           ; BSR set to: 1
 14956  013D08  0EFF               	movlw	255
 14957  013D0A  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 14958  013D0C  0EFF               	movlw	255
 14959  013D0E  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14960  013D10  0EFF               	movlw	255
 14961  013D12  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14962  013D14  0E01               	movlw	1
 14963  013D16  272E               	addwf	___ftadd@f2& (0+255),f,b
 14964  013D18  0E00               	movlw	0
 14965  013D1A  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14966  013D1C  0E00               	movlw	0
 14967  013D1E  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14968                           
 14969                           ; BSR set to: 1
 14970  013D20  0E01               	movlw	1
 14971  013D22  6F34               	movwf	___ftadd@sign& (0+255),b
 14972  013D24                     l1541:
 14973                           
 14974                           ; BSR set to: 1
 14975                           
 14976                           ; BSR set to: 1
 14977  013D24  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 14978  013D28  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 14979  013D2C  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 14980  013D30  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 14981  013D34  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 14982  013D38  ECAE  F0A7         	call	___ftpack	;wreg free
 14983  013D3C  C117  F12B         	movff	?___ftpack,?___ftadd
 14984  013D40  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 14985  013D44  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 14986  013D48  0012               	return	
 14987  013D4A                     __end_of___ftadd:
 14988                           	opt stack 0
 14989                           tblptru	equ	0xFF8
 14990                           tblptrh	equ	0xFF7
 14991                           tblptrl	equ	0xFF6
 14992                           tablat	equ	0xFF5
 14993                           prodh	equ	0xFF4
 14994                           prodl	equ	0xFF3
 14995                           intcon	equ	0xFF2
 14996                           postinc0	equ	0xFEE
 14997                           wreg	equ	0xFE8
 14998                           indf1	equ	0xFE7
 14999                           postdec1	equ	0xFE5
 15000                           fsr1h	equ	0xFE2
 15001                           fsr1l	equ	0xFE1
 15002                           indf2	equ	0xFDF
 15003                           postinc2	equ	0xFDE
 15004                           postdec2	equ	0xFDD
 15005                           fsr2h	equ	0xFDA
 15006                           fsr2l	equ	0xFD9
 15007                           status	equ	0xFD8
 15008                           
 15009 ;; *************** function ___ftpack *****************
 15010 ;; Defined at:
 15011 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;  arg             3   23[BANK1 ] unsigned um
 15014 ;;  exp             1   26[BANK1 ] unsigned char 
 15015 ;;  sign            1   27[BANK1 ] unsigned char 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  3   23[BANK1 ] float 
 15020 ;; Registers used:
 15021 ;;		wreg, status,2, status,0
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15027 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15029 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15030 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15031 ;;Total ram usage:        8 bytes
 15032 ;; Hardware stack levels used:    1
 15033 ;; Hardware stack levels required when called:   14
 15034 ;; This function calls:
 15035 ;;		Nothing
 15036 ;; This function is called by:
 15037 ;;		___awtoft
 15038 ;;		___ftadd
 15039 ;;		___ftdiv
 15040 ;;		___ftmul
 15041 ;;		___lltoft
 15042 ;; This function uses a non-reentrant model
 15043 ;;
 15044                           
 15045                           	psect	text37
 15046  014F5C                     __ptext37:
 15047                           	opt stack 0
 15048  014F5C                     ___ftpack:
 15049                           	opt stack 11
 15050                           
 15051                           ;incstack = 0
 15052  014F5C  0101               	movlb	1	; () banked
 15053  014F5E  511A               	movf	___ftpack@exp& (0+255),w,b
 15054  014F60  B4D8               	btfsc	status,2,c
 15055  014F62  D005               	goto	u8690
 15056                           
 15057                           ; BSR set to: 1
 15058  014F64  5117               	movf	___ftpack@arg& (0+255),w,b
 15059  014F66  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15060  014F68  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15061  014F6A  A4D8               	btfss	status,2,c
 15062  014F6C  D00C               	goto	l1482
 15063  014F6E                     u8690:
 15064                           
 15065                           ; BSR set to: 1
 15066                           
 15067                           ; BSR set to: 1
 15068  014F6E  0E00               	movlw	0
 15069  014F70  6F17               	movwf	?___ftpack& (0+255),b
 15070  014F72  0E00               	movlw	0
 15071  014F74  6F18               	movwf	(?___ftpack+1)& (0+255),b
 15072  014F76  0E00               	movlw	0
 15073  014F78  6F19               	movwf	(?___ftpack+2)& (0+255),b
 15074                           
 15075                           ; BSR set to: 1
 15076  014F7A  0012               	return	
 15077  014F7C                     
 15078                           ; BSR set to: 1
 15079                           
 15080                           ; BSR set to: 1
 15081  014F7C  2B1A               	incf	___ftpack@exp& (0+255),f,b
 15082  014F7E  90D8               	bcf	status,0,c
 15083  014F80  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15084  014F82  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15085  014F84  3317               	rrcf	___ftpack@arg& (0+255),f,b
 15086  014F86                     l1482:
 15087                           
 15088                           ; BSR set to: 1
 15089                           
 15090                           ; BSR set to: 1
 15091  014F86  0E00               	movlw	0
 15092  014F88  1517               	andwf	___ftpack@arg& (0+255),w,b
 15093  014F8A  6F1C               	movwf	??___ftpack& (0+255),b
 15094  014F8C  0E00               	movlw	0
 15095  014F8E  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15096  014F90  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 15097  014F92  0EFE               	movlw	254
 15098  014F94  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15099  014F96  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 15100  014F98  511C               	movf	??___ftpack& (0+255),w,b
 15101  014F9A  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 15102  014F9C  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 15103  014F9E  B4D8               	btfsc	status,2,c
 15104  014FA0  D00C               	goto	l1485
 15105  014FA2  D7EC               	goto	l1483
 15106  014FA4                     
 15107                           ; BSR set to: 1
 15108                           
 15109                           ; BSR set to: 1
 15110  014FA4  2B1A               	incf	___ftpack@exp& (0+255),f,b
 15111                           
 15112                           ; BSR set to: 1
 15113  014FA6  0E01               	movlw	1
 15114  014FA8  2717               	addwf	___ftpack@arg& (0+255),f,b
 15115  014FAA  0E00               	movlw	0
 15116  014FAC  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15117  014FAE  0E00               	movlw	0
 15118  014FB0  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15119  014FB2  90D8               	bcf	status,0,c
 15120  014FB4  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15121  014FB6  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15122  014FB8  3317               	rrcf	___ftpack@arg& (0+255),f,b
 15123  014FBA                     l1485:
 15124                           
 15125                           ; BSR set to: 1
 15126                           
 15127                           ; BSR set to: 1
 15128  014FBA  0E00               	movlw	0
 15129  014FBC  1517               	andwf	___ftpack@arg& (0+255),w,b
 15130  014FBE  6F1C               	movwf	??___ftpack& (0+255),b
 15131  014FC0  0E00               	movlw	0
 15132  014FC2  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15133  014FC4  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 15134  014FC6  0EFF               	movlw	255
 15135  014FC8  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15136  014FCA  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 15137  014FCC  511C               	movf	??___ftpack& (0+255),w,b
 15138  014FCE  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 15139  014FD0  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 15140  014FD2  B4D8               	btfsc	status,2,c
 15141  014FD4  D006               	goto	l1488
 15142  014FD6  D7E6               	goto	l1486
 15143  014FD8                     
 15144                           ; BSR set to: 1
 15145                           
 15146                           ; BSR set to: 1
 15147  014FD8  071A               	decf	___ftpack@exp& (0+255),f,b
 15148  014FDA  90D8               	bcf	status,0,c
 15149  014FDC  3717               	rlcf	___ftpack@arg& (0+255),f,b
 15150  014FDE  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15151  014FE0  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15152  014FE2                     l1488:
 15153                           
 15154                           ; BSR set to: 1
 15155                           
 15156                           ; BSR set to: 1
 15157  014FE2  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15158  014FE4  D003               	goto	u8730
 15159                           
 15160                           ; BSR set to: 1
 15161  014FE6  0E02               	movlw	2
 15162  014FE8  611A               	cpfslt	___ftpack@exp& (0+255),b
 15163  014FEA  D7F6               	goto	l1489
 15164  014FEC                     u8730:
 15165                           
 15166                           ; BSR set to: 1
 15167                           
 15168                           ; BSR set to: 1
 15169  014FEC  A11A               	btfss	___ftpack@exp& (0+255),0,b
 15170                           
 15171                           ; BSR set to: 1
 15172  014FEE  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15173                           
 15174                           ; BSR set to: 1
 15175                           
 15176                           ; BSR set to: 1
 15177  014FF0  90D8               	bcf	status,0,c
 15178  014FF2  331A               	rrcf	___ftpack@exp& (0+255),f,b
 15179  014FF4  511A               	movf	___ftpack@exp& (0+255),w,b
 15180  014FF6  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15181                           
 15182                           ; BSR set to: 1
 15183  014FF8  511B               	movf	___ftpack@sign& (0+255),w,b
 15184  014FFA  A4D8               	btfss	status,2,c
 15185                           
 15186                           ; BSR set to: 1
 15187  014FFC  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15188                           
 15189                           ; BSR set to: 1
 15190                           
 15191                           ; BSR set to: 1
 15192  014FFE  C117  F117         	movff	___ftpack@arg,?___ftpack
 15193  015002  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 15194  015006  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 15195  01500A  0012               	return	
 15196  01500C                     __end_of___ftpack:
 15197                           	opt stack 0
 15198                           tblptru	equ	0xFF8
 15199                           tblptrh	equ	0xFF7
 15200                           tblptrl	equ	0xFF6
 15201                           tablat	equ	0xFF5
 15202                           prodh	equ	0xFF4
 15203                           prodl	equ	0xFF3
 15204                           intcon	equ	0xFF2
 15205                           postinc0	equ	0xFEE
 15206                           wreg	equ	0xFE8
 15207                           indf1	equ	0xFE7
 15208                           postdec1	equ	0xFE5
 15209                           fsr1h	equ	0xFE2
 15210                           fsr1l	equ	0xFE1
 15211                           indf2	equ	0xFDF
 15212                           postinc2	equ	0xFDE
 15213                           postdec2	equ	0xFDD
 15214                           fsr2h	equ	0xFDA
 15215                           fsr2l	equ	0xFD9
 15216                           status	equ	0xFD8
 15217                           
 15218 ;; *************** function ___ftneg *****************
 15219 ;; Defined at:
 15220 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;  f1              3   35[BANK1 ] float 
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  3   35[BANK1 ] float 
 15227 ;; Registers used:
 15228 ;;		wreg, status,2, status,0
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15234 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15237 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15238 ;;Total ram usage:        3 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:   14
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		_ringBufferLUT
 15245 ;;		_printf
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text38
 15250  0161EE                     __ptext38:
 15251                           	opt stack 0
 15252  0161EE                     ___ftneg:
 15253                           	opt stack 13
 15254                           
 15255                           ; BSR set to: 1
 15256                           ;incstack = 0
 15257  0161EE  0101               	movlb	1	; () banked
 15258  0161F0  5123               	movf	___ftneg@f1& (0+255),w,b
 15259  0161F2  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15260  0161F4  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 15261  0161F6  B4D8               	btfsc	status,2,c
 15262  0161F8  D006               	goto	l1589
 15263                           
 15264                           ; BSR set to: 1
 15265  0161FA  0E00               	movlw	0
 15266  0161FC  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 15267  0161FE  0E00               	movlw	0
 15268  016200  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15269  016202  0E80               	movlw	128
 15270  016204  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15271  016206                     l1589:
 15272                           
 15273                           ; BSR set to: 1
 15274  016206  C123  F123         	movff	___ftneg@f1,?___ftneg
 15275  01620A  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 15276  01620E  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 15277                           
 15278                           ; BSR set to: 1
 15279  016212  0012               	return		;funcret
 15280  016214                     __end_of___ftneg:
 15281                           	opt stack 0
 15282                           tblptru	equ	0xFF8
 15283                           tblptrh	equ	0xFF7
 15284                           tblptrl	equ	0xFF6
 15285                           tablat	equ	0xFF5
 15286                           prodh	equ	0xFF4
 15287                           prodl	equ	0xFF3
 15288                           intcon	equ	0xFF2
 15289                           postinc0	equ	0xFEE
 15290                           wreg	equ	0xFE8
 15291                           indf1	equ	0xFE7
 15292                           postdec1	equ	0xFE5
 15293                           fsr1h	equ	0xFE2
 15294                           fsr1l	equ	0xFE1
 15295                           indf2	equ	0xFDF
 15296                           postinc2	equ	0xFDE
 15297                           postdec2	equ	0xFDD
 15298                           fsr2h	equ	0xFDA
 15299                           fsr2l	equ	0xFD9
 15300                           status	equ	0xFD8
 15301                           
 15302 ;; *************** function ___ftge *****************
 15303 ;; Defined at:
 15304 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 15305 ;; Parameters:    Size  Location     Type
 15306 ;;  ff1             3   23[BANK1 ] float 
 15307 ;;  ff2             3   26[BANK1 ] float 
 15308 ;; Auto vars:     Size  Location     Type
 15309 ;;		None
 15310 ;; Return value:  Size  Location     Type
 15311 ;;		None               void
 15312 ;; Registers used:
 15313 ;;		wreg, status,2, status,0
 15314 ;; Tracked objects:
 15315 ;;		On entry : 0/0
 15316 ;;		On exit  : 0/0
 15317 ;;		Unchanged: 0/0
 15318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15319 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15321 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15322 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15323 ;;Total ram usage:        9 bytes
 15324 ;; Hardware stack levels used:    1
 15325 ;; Hardware stack levels required when called:   14
 15326 ;; This function calls:
 15327 ;;		Nothing
 15328 ;; This function is called by:
 15329 ;;		_printf
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           	psect	text39
 15334  015206                     __ptext39:
 15335                           	opt stack 0
 15336  015206                     ___ftge:
 15337                           	opt stack 13
 15338                           
 15339                           ; BSR set to: 1
 15340                           ;incstack = 0
 15341  015206  0101               	movlb	1	; () banked
 15342  015208  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 15343  01520A  D016               	goto	l1571
 15344                           
 15345                           ; BSR set to: 1
 15346  01520C  C117  F11D         	movff	___ftge@ff1,??___ftge
 15347  015210  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 15348  015214  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 15349  015218  1F1D               	comf	??___ftge& (0+255),f,b
 15350  01521A  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 15351  01521C  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 15352  01521E  2B1D               	incf	??___ftge& (0+255),f,b
 15353  015220  0E00               	movlw	0
 15354  015222  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 15355  015224  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 15356  015226  0E00               	movlw	0
 15357  015228  251D               	addwf	??___ftge& (0+255),w,b
 15358  01522A  6F17               	movwf	___ftge@ff1& (0+255),b
 15359  01522C  0E00               	movlw	0
 15360  01522E  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 15361  015230  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 15362  015232  0E80               	movlw	128
 15363  015234  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 15364  015236  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 15365  015238                     l1571:
 15366                           
 15367                           ; BSR set to: 1
 15368                           
 15369                           ; BSR set to: 1
 15370  015238  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 15371  01523A  D016               	goto	l1572
 15372                           
 15373                           ; BSR set to: 1
 15374  01523C  C11A  F11D         	movff	___ftge@ff2,??___ftge
 15375  015240  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 15376  015244  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 15377  015248  1F1D               	comf	??___ftge& (0+255),f,b
 15378  01524A  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 15379  01524C  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 15380  01524E  2B1D               	incf	??___ftge& (0+255),f,b
 15381  015250  0E00               	movlw	0
 15382  015252  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 15383  015254  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 15384  015256  0E00               	movlw	0
 15385  015258  251D               	addwf	??___ftge& (0+255),w,b
 15386  01525A  6F1A               	movwf	___ftge@ff2& (0+255),b
 15387  01525C  0E00               	movlw	0
 15388  01525E  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 15389  015260  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 15390  015262  0E80               	movlw	128
 15391  015264  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 15392  015266  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 15393  015268                     l1572:
 15394                           
 15395                           ; BSR set to: 1
 15396                           
 15397                           ; BSR set to: 1
 15398  015268  0E00               	movlw	0
 15399  01526A  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 15400  01526C  0E00               	movlw	0
 15401  01526E  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 15402  015270  0E80               	movlw	128
 15403  015272  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 15404                           
 15405                           ; BSR set to: 1
 15406  015274  0E00               	movlw	0
 15407  015276  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 15408  015278  0E00               	movlw	0
 15409  01527A  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 15410  01527C  0E80               	movlw	128
 15411  01527E  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 15412  015280  511A               	movf	___ftge@ff2& (0+255),w,b
 15413  015282  5D17               	subwf	___ftge@ff1& (0+255),w,b
 15414  015284  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 15415  015286  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 15416  015288  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 15417  01528A  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 15418  01528C  B0D8               	btfsc	status,0,c
 15419  01528E  D002               	goto	l7853
 15420                           
 15421                           ; BSR set to: 1
 15422  015290  90D8               	bcf	status,0,c
 15423  015292  0012               	return	
 15424  015294                     l7853:
 15425                           
 15426                           ; BSR set to: 1
 15427                           
 15428                           ; BSR set to: 1
 15429  015294  80D8               	bsf	status,0,c
 15430                           
 15431                           ; BSR set to: 1
 15432  015296  0012               	return	
 15433  015298                     __end_of___ftge:
 15434                           	opt stack 0
 15435                           tblptru	equ	0xFF8
 15436                           tblptrh	equ	0xFF7
 15437                           tblptrl	equ	0xFF6
 15438                           tablat	equ	0xFF5
 15439                           prodh	equ	0xFF4
 15440                           prodl	equ	0xFF3
 15441                           intcon	equ	0xFF2
 15442                           postinc0	equ	0xFEE
 15443                           wreg	equ	0xFE8
 15444                           indf1	equ	0xFE7
 15445                           postdec1	equ	0xFE5
 15446                           fsr1h	equ	0xFE2
 15447                           fsr1l	equ	0xFE1
 15448                           indf2	equ	0xFDF
 15449                           postinc2	equ	0xFDE
 15450                           postdec2	equ	0xFDD
 15451                           fsr2h	equ	0xFDA
 15452                           fsr2l	equ	0xFD9
 15453                           status	equ	0xFD8
 15454                           
 15455 ;; *************** function _SYSTEM_Initialize *****************
 15456 ;; Defined at:
 15457 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15458 ;; Parameters:    Size  Location     Type
 15459 ;;		None
 15460 ;; Auto vars:     Size  Location     Type
 15461 ;;		None
 15462 ;; Return value:  Size  Location     Type
 15463 ;;                  1    wreg      void 
 15464 ;; Registers used:
 15465 ;;		wreg, status,2, status,0, cstack
 15466 ;; Tracked objects:
 15467 ;;		On entry : 0/0
 15468 ;;		On exit  : 0/0
 15469 ;;		Unchanged: 0/0
 15470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15475 ;;Total ram usage:        0 bytes
 15476 ;; Hardware stack levels used:    1
 15477 ;; Hardware stack levels required when called:   16
 15478 ;; This function calls:
 15479 ;;		_ADCC_Initialize
 15480 ;;		_EUSART2_Initialize
 15481 ;;		_FVR_Initialize
 15482 ;;		_INTERRUPT_Initialize
 15483 ;;		_OSCILLATOR_Initialize
 15484 ;;		_PIN_MANAGER_Initialize
 15485 ;;		_PMD_Initialize
 15486 ;;		_TMR5_Initialize
 15487 ;;		_TMR6_Initialize
 15488 ;;		_TMR7_Initialize
 15489 ;; This function is called by:
 15490 ;;		_main
 15491 ;; This function uses a non-reentrant model
 15492 ;;
 15493                           
 15494                           	psect	text40
 15495  01614C                     __ptext40:
 15496                           	opt stack 0
 15497  01614C                     _SYSTEM_Initialize:
 15498                           	opt stack 14
 15499                           
 15500                           ;mcc.c: 52: INTERRUPT_Initialize();
 15501                           
 15502                           ; BSR set to: 1
 15503                           ;incstack = 0
 15504  01614C  ECB1  F0B1         	call	_INTERRUPT_Initialize	;wreg free
 15505                           
 15506                           ;mcc.c: 53: PMD_Initialize();
 15507  016150  EC74  F0B1         	call	_PMD_Initialize	;wreg free
 15508                           
 15509                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 15510  016154  ECB2  F0A8         	call	_PIN_MANAGER_Initialize	;wreg free
 15511                           
 15512                           ;mcc.c: 55: OSCILLATOR_Initialize();
 15513  016158  EC82  F0B1         	call	_OSCILLATOR_Initialize	;wreg free
 15514                           
 15515                           ;mcc.c: 56: FVR_Initialize();
 15516  01615C  EC15  F0B2         	call	_FVR_Initialize	;wreg free
 15517                           
 15518                           ;mcc.c: 57: TMR7_Initialize();
 15519  016160  ECB9  F0AE         	call	_TMR7_Initialize	;wreg free
 15520                           
 15521                           ;mcc.c: 58: TMR6_Initialize();
 15522  016164  EC5E  F0B0         	call	_TMR6_Initialize	;wreg free
 15523                           
 15524                           ;mcc.c: 59: ADCC_Initialize();
 15525  016168  EC1C  F0AD         	call	_ADCC_Initialize	;wreg free
 15526                           
 15527                           ;mcc.c: 60: TMR5_Initialize();
 15528  01616C  EC06  F0AF         	call	_TMR5_Initialize	;wreg free
 15529                           
 15530                           ;mcc.c: 61: EUSART2_Initialize();
 15531  016170  ECB6  F0AC         	call	_EUSART2_Initialize	;wreg free
 15532  016174  0012               	return		;funcret
 15533  016176                     __end_of_SYSTEM_Initialize:
 15534                           	opt stack 0
 15535                           tblptru	equ	0xFF8
 15536                           tblptrh	equ	0xFF7
 15537                           tblptrl	equ	0xFF6
 15538                           tablat	equ	0xFF5
 15539                           prodh	equ	0xFF4
 15540                           prodl	equ	0xFF3
 15541                           intcon	equ	0xFF2
 15542                           postinc0	equ	0xFEE
 15543                           wreg	equ	0xFE8
 15544                           indf1	equ	0xFE7
 15545                           postdec1	equ	0xFE5
 15546                           fsr1h	equ	0xFE2
 15547                           fsr1l	equ	0xFE1
 15548                           indf2	equ	0xFDF
 15549                           postinc2	equ	0xFDE
 15550                           postdec2	equ	0xFDD
 15551                           fsr2h	equ	0xFDA
 15552                           fsr2l	equ	0xFD9
 15553                           status	equ	0xFD8
 15554                           
 15555 ;; *************** function _TMR7_Initialize *****************
 15556 ;; Defined at:
 15557 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 15558 ;; Parameters:    Size  Location     Type
 15559 ;;		None
 15560 ;; Auto vars:     Size  Location     Type
 15561 ;;		None
 15562 ;; Return value:  Size  Location     Type
 15563 ;;                  1    wreg      void 
 15564 ;; Registers used:
 15565 ;;		wreg, status,2, status,0, cstack
 15566 ;; Tracked objects:
 15567 ;;		On entry : 0/0
 15568 ;;		On exit  : 0/0
 15569 ;;		Unchanged: 0/0
 15570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15573 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15574 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15575 ;;Total ram usage:        2 bytes
 15576 ;; Hardware stack levels used:    1
 15577 ;; Hardware stack levels required when called:   15
 15578 ;; This function calls:
 15579 ;;		_TMR7_SetInterruptHandler
 15580 ;; This function is called by:
 15581 ;;		_SYSTEM_Initialize
 15582 ;; This function uses a non-reentrant model
 15583 ;;
 15584                           
 15585                           	psect	text41
 15586  015D72                     __ptext41:
 15587                           	opt stack 0
 15588  015D72                     _TMR7_Initialize:
 15589                           	opt stack 14
 15590                           
 15591                           ;tmr7.c: 69: T7GCON = 0x00;
 15592                           
 15593                           ;incstack = 0
 15594  015D72  0E00               	movlw	0
 15595  015D74  010F               	movlb	15	; () banked
 15596  015D76  6F31               	movwf	49,b	;volatile
 15597                           
 15598                           ;tmr7.c: 72: T7GATE = 0x00;
 15599  015D78  0E00               	movlw	0
 15600  015D7A  6F32               	movwf	50,b	;volatile
 15601                           
 15602                           ;tmr7.c: 75: T7CLK = 0x03;
 15603  015D7C  0E03               	movlw	3
 15604  015D7E  6F33               	movwf	51,b	;volatile
 15605                           
 15606                           ;tmr7.c: 78: TMR7H = 0x3C;
 15607  015D80  0E3C               	movlw	60
 15608  015D82  6F2F               	movwf	47,b	;volatile
 15609                           
 15610                           ;tmr7.c: 81: TMR7L = 0xB0;
 15611  015D84  0EB0               	movlw	176
 15612  015D86  6F2E               	movwf	46,b	;volatile
 15613                           
 15614                           ; BSR set to: 15
 15615                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 15616  015D88  512E               	movf	46,w,b	;volatile
 15617  015D8A  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 15618  015D8E  0101               	movlb	1	; () banked
 15619  015D90  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 15620  015D92  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 15621  015D96  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 15622  015D98  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 15623  015D9A  6FD4               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 15624  015D9C  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 15625  015D9E  6FD5               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 15626                           
 15627                           ; BSR set to: 1
 15628                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 15629  015DA0  010E               	movlb	14	; () banked
 15630  015DA2  9D38               	bcf	56,6,b	;volatile
 15631                           
 15632                           ; BSR set to: 14
 15633                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 15634  015DA4  8D2E               	bsf	46,6,b	;volatile
 15635                           
 15636                           ; BSR set to: 14
 15637                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 15638  015DA6  0E38               	movlw	low _TMR7_DefaultInterruptHandler
 15639  015DA8  0101               	movlb	1	; () banked
 15640  015DAA  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15641  015DAC  0E64               	movlw	high _TMR7_DefaultInterruptHandler
 15642  015DAE  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15643  015DB0  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 15644  015DB2  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15645  015DB4  ECD9  F0B1         	call	_TMR7_SetInterruptHandler	;wreg free
 15646                           
 15647                           ;tmr7.c: 96: T7CON = 0x31;
 15648  015DB8  0E31               	movlw	49
 15649  015DBA  010F               	movlb	15	; () banked
 15650  015DBC  6F30               	movwf	48,b	;volatile
 15651                           
 15652                           ; BSR set to: 15
 15653  015DBE  0012               	return		;funcret
 15654  015DC0                     __end_of_TMR7_Initialize:
 15655                           	opt stack 0
 15656                           tblptru	equ	0xFF8
 15657                           tblptrh	equ	0xFF7
 15658                           tblptrl	equ	0xFF6
 15659                           tablat	equ	0xFF5
 15660                           prodh	equ	0xFF4
 15661                           prodl	equ	0xFF3
 15662                           intcon	equ	0xFF2
 15663                           postinc0	equ	0xFEE
 15664                           wreg	equ	0xFE8
 15665                           indf1	equ	0xFE7
 15666                           postdec1	equ	0xFE5
 15667                           fsr1h	equ	0xFE2
 15668                           fsr1l	equ	0xFE1
 15669                           indf2	equ	0xFDF
 15670                           postinc2	equ	0xFDE
 15671                           postdec2	equ	0xFDD
 15672                           fsr2h	equ	0xFDA
 15673                           fsr2l	equ	0xFD9
 15674                           status	equ	0xFD8
 15675                           
 15676 ;; *************** function _TMR7_SetInterruptHandler *****************
 15677 ;; Defined at:
 15678 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15681 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 15682 ;; Auto vars:     Size  Location     Type
 15683 ;;		None
 15684 ;; Return value:  Size  Location     Type
 15685 ;;                  1    wreg      void 
 15686 ;; Registers used:
 15687 ;;		wreg, status,2, status,0
 15688 ;; Tracked objects:
 15689 ;;		On entry : 0/0
 15690 ;;		On exit  : 0/0
 15691 ;;		Unchanged: 0/0
 15692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15693 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15696 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15697 ;;Total ram usage:        3 bytes
 15698 ;; Hardware stack levels used:    1
 15699 ;; Hardware stack levels required when called:   14
 15700 ;; This function calls:
 15701 ;;		Nothing
 15702 ;; This function is called by:
 15703 ;;		_TMR7_Initialize
 15704 ;;		_main
 15705 ;; This function uses a non-reentrant model
 15706 ;;
 15707                           
 15708                           	psect	text42
 15709  0163B2                     __ptext42:
 15710                           	opt stack 0
 15711  0163B2                     _TMR7_SetInterruptHandler:
 15712                           	opt stack 16
 15713                           
 15714                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 15715                           
 15716                           ; BSR set to: 15
 15717                           ;incstack = 0
 15718  0163B2  C117  F1C9         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 15719  0163B6  C118  F1CA         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 15720  0163BA  C119  F1CB         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 15721  0163BE  0012               	return		;funcret
 15722  0163C0                     __end_of_TMR7_SetInterruptHandler:
 15723                           	opt stack 0
 15724                           tblptru	equ	0xFF8
 15725                           tblptrh	equ	0xFF7
 15726                           tblptrl	equ	0xFF6
 15727                           tablat	equ	0xFF5
 15728                           prodh	equ	0xFF4
 15729                           prodl	equ	0xFF3
 15730                           intcon	equ	0xFF2
 15731                           postinc0	equ	0xFEE
 15732                           wreg	equ	0xFE8
 15733                           indf1	equ	0xFE7
 15734                           postdec1	equ	0xFE5
 15735                           fsr1h	equ	0xFE2
 15736                           fsr1l	equ	0xFE1
 15737                           indf2	equ	0xFDF
 15738                           postinc2	equ	0xFDE
 15739                           postdec2	equ	0xFDD
 15740                           fsr2h	equ	0xFDA
 15741                           fsr2l	equ	0xFD9
 15742                           status	equ	0xFD8
 15743                           
 15744 ;; *************** function _TMR6_Initialize *****************
 15745 ;; Defined at:
 15746 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 15747 ;; Parameters:    Size  Location     Type
 15748 ;;		None
 15749 ;; Auto vars:     Size  Location     Type
 15750 ;;		None
 15751 ;; Return value:  Size  Location     Type
 15752 ;;                  1    wreg      void 
 15753 ;; Registers used:
 15754 ;;		wreg, status,2, status,0, cstack
 15755 ;; Tracked objects:
 15756 ;;		On entry : 0/0
 15757 ;;		On exit  : 0/0
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15764 ;;Total ram usage:        0 bytes
 15765 ;; Hardware stack levels used:    1
 15766 ;; Hardware stack levels required when called:   15
 15767 ;; This function calls:
 15768 ;;		_TMR6_SetInterruptHandler
 15769 ;; This function is called by:
 15770 ;;		_SYSTEM_Initialize
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774                           	psect	text43
 15775  0160BC                     __ptext43:
 15776                           	opt stack 0
 15777  0160BC                     _TMR6_Initialize:
 15778                           	opt stack 14
 15779                           
 15780                           ;tmr6.c: 69: T6CLKCON = 0x04;
 15781                           
 15782                           ;incstack = 0
 15783  0160BC  0E04               	movlw	4
 15784  0160BE  6EB3               	movwf	4019,c	;volatile
 15785                           
 15786                           ;tmr6.c: 72: T6HLT = 0x20;
 15787  0160C0  0E20               	movlw	32
 15788  0160C2  6EB2               	movwf	4018,c	;volatile
 15789                           
 15790                           ;tmr6.c: 75: T6RST = 0x00;
 15791  0160C4  0E00               	movlw	0
 15792  0160C6  6EB4               	movwf	4020,c	;volatile
 15793                           
 15794                           ;tmr6.c: 78: T6PR = 0xF1;
 15795  0160C8  0EF1               	movlw	241
 15796  0160CA  6EB0               	movwf	4016,c	;volatile
 15797                           
 15798                           ;tmr6.c: 81: T6TMR = 0x00;
 15799  0160CC  0E00               	movlw	0
 15800  0160CE  6EAF               	movwf	4015,c	;volatile
 15801                           
 15802                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 15803  0160D0  010E               	movlb	14	; () banked
 15804  0160D2  9B38               	bcf	56,5,b	;volatile
 15805                           
 15806                           ; BSR set to: 14
 15807                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 15808  0160D4  8B2E               	bsf	46,5,b	;volatile
 15809                           
 15810                           ; BSR set to: 14
 15811                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 15812  0160D6  0E3A               	movlw	low _TMR6_DefaultInterruptHandler
 15813  0160D8  0101               	movlb	1	; () banked
 15814  0160DA  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 15815  0160DC  0E64               	movlw	high _TMR6_DefaultInterruptHandler
 15816  0160DE  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15817  0160E0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 15818  0160E2  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15819  0160E4  ECE0  F0B1         	call	_TMR6_SetInterruptHandler	;wreg free
 15820                           
 15821                           ;tmr6.c: 93: T6CON = 0xBF;
 15822  0160E8  0EBF               	movlw	191
 15823  0160EA  6EB1               	movwf	4017,c	;volatile
 15824  0160EC  0012               	return		;funcret
 15825  0160EE                     __end_of_TMR6_Initialize:
 15826                           	opt stack 0
 15827                           tblptru	equ	0xFF8
 15828                           tblptrh	equ	0xFF7
 15829                           tblptrl	equ	0xFF6
 15830                           tablat	equ	0xFF5
 15831                           prodh	equ	0xFF4
 15832                           prodl	equ	0xFF3
 15833                           intcon	equ	0xFF2
 15834                           postinc0	equ	0xFEE
 15835                           wreg	equ	0xFE8
 15836                           indf1	equ	0xFE7
 15837                           postdec1	equ	0xFE5
 15838                           fsr1h	equ	0xFE2
 15839                           fsr1l	equ	0xFE1
 15840                           indf2	equ	0xFDF
 15841                           postinc2	equ	0xFDE
 15842                           postdec2	equ	0xFDD
 15843                           fsr2h	equ	0xFDA
 15844                           fsr2l	equ	0xFD9
 15845                           status	equ	0xFD8
 15846                           
 15847 ;; *************** function _TMR6_SetInterruptHandler *****************
 15848 ;; Defined at:
 15849 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 15850 ;; Parameters:    Size  Location     Type
 15851 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15852 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 15853 ;; Auto vars:     Size  Location     Type
 15854 ;;		None
 15855 ;; Return value:  Size  Location     Type
 15856 ;;                  1    wreg      void 
 15857 ;; Registers used:
 15858 ;;		wreg, status,2, status,0
 15859 ;; Tracked objects:
 15860 ;;		On entry : 0/0
 15861 ;;		On exit  : 0/0
 15862 ;;		Unchanged: 0/0
 15863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15864 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15867 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15868 ;;Total ram usage:        3 bytes
 15869 ;; Hardware stack levels used:    1
 15870 ;; Hardware stack levels required when called:   14
 15871 ;; This function calls:
 15872 ;;		Nothing
 15873 ;; This function is called by:
 15874 ;;		_TMR6_Initialize
 15875 ;;		_main
 15876 ;; This function uses a non-reentrant model
 15877 ;;
 15878                           
 15879                           	psect	text44
 15880  0163C0                     __ptext44:
 15881                           	opt stack 0
 15882  0163C0                     _TMR6_SetInterruptHandler:
 15883                           	opt stack 16
 15884                           
 15885                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 15886                           
 15887                           ;incstack = 0
 15888  0163C0  C117  F1CC         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 15889  0163C4  C118  F1CD         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 15890  0163C8  C119  F1CE         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 15891  0163CC  0012               	return		;funcret
 15892  0163CE                     __end_of_TMR6_SetInterruptHandler:
 15893                           	opt stack 0
 15894                           tblptru	equ	0xFF8
 15895                           tblptrh	equ	0xFF7
 15896                           tblptrl	equ	0xFF6
 15897                           tablat	equ	0xFF5
 15898                           prodh	equ	0xFF4
 15899                           prodl	equ	0xFF3
 15900                           intcon	equ	0xFF2
 15901                           postinc0	equ	0xFEE
 15902                           wreg	equ	0xFE8
 15903                           indf1	equ	0xFE7
 15904                           postdec1	equ	0xFE5
 15905                           fsr1h	equ	0xFE2
 15906                           fsr1l	equ	0xFE1
 15907                           indf2	equ	0xFDF
 15908                           postinc2	equ	0xFDE
 15909                           postdec2	equ	0xFDD
 15910                           fsr2h	equ	0xFDA
 15911                           fsr2l	equ	0xFD9
 15912                           status	equ	0xFD8
 15913                           
 15914 ;; *************** function _TMR5_Initialize *****************
 15915 ;; Defined at:
 15916 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 15917 ;; Parameters:    Size  Location     Type
 15918 ;;		None
 15919 ;; Auto vars:     Size  Location     Type
 15920 ;;		None
 15921 ;; Return value:  Size  Location     Type
 15922 ;;                  1    wreg      void 
 15923 ;; Registers used:
 15924 ;;		wreg, status,2, status,0, cstack
 15925 ;; Tracked objects:
 15926 ;;		On entry : 0/0
 15927 ;;		On exit  : 0/0
 15928 ;;		Unchanged: 0/0
 15929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15932 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15933 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15934 ;;Total ram usage:        2 bytes
 15935 ;; Hardware stack levels used:    1
 15936 ;; Hardware stack levels required when called:   15
 15937 ;; This function calls:
 15938 ;;		_TMR5_SetInterruptHandler
 15939 ;; This function is called by:
 15940 ;;		_SYSTEM_Initialize
 15941 ;; This function uses a non-reentrant model
 15942 ;;
 15943                           
 15944                           	psect	text45
 15945  015E0C                     __ptext45:
 15946                           	opt stack 0
 15947  015E0C                     _TMR5_Initialize:
 15948                           	opt stack 14
 15949                           
 15950                           ;tmr5.c: 69: T5GCON = 0x00;
 15951                           
 15952                           ;incstack = 0
 15953  015E0C  0E00               	movlw	0
 15954  015E0E  6EC4               	movwf	4036,c	;volatile
 15955                           
 15956                           ;tmr5.c: 72: T5GATE = 0x00;
 15957  015E10  0E00               	movlw	0
 15958  015E12  6EC5               	movwf	4037,c	;volatile
 15959                           
 15960                           ;tmr5.c: 75: T5CLK = 0x01;
 15961  015E14  0E01               	movlw	1
 15962  015E16  6EC6               	movwf	4038,c	;volatile
 15963                           
 15964                           ;tmr5.c: 78: TMR5H = 0x00;
 15965  015E18  0E00               	movlw	0
 15966  015E1A  6EC2               	movwf	4034,c	;volatile
 15967                           
 15968                           ;tmr5.c: 81: TMR5L = 0x00;
 15969  015E1C  0E00               	movlw	0
 15970  015E1E  6EC1               	movwf	4033,c	;volatile
 15971                           
 15972                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 15973  015E20  50C1               	movf	4033,w,c	;volatile
 15974  015E22  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 15975  015E26  0101               	movlb	1	; () banked
 15976  015E28  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 15977  015E2A  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 15978  015E2E  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 15979  015E30  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 15980  015E32  6FD2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 15981  015E34  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 15982  015E36  6FD3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 15983                           
 15984                           ; BSR set to: 1
 15985                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 15986  015E38  010E               	movlb	14	; () banked
 15987  015E3A  9938               	bcf	56,4,b	;volatile
 15988                           
 15989                           ; BSR set to: 14
 15990                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 15991  015E3C  892E               	bsf	46,4,b	;volatile
 15992                           
 15993                           ; BSR set to: 14
 15994                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 15995  015E3E  0E3C               	movlw	low _TMR5_DefaultInterruptHandler
 15996  015E40  0101               	movlb	1	; () banked
 15997  015E42  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15998  015E44  0E64               	movlw	high _TMR5_DefaultInterruptHandler
 15999  015E46  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16000  015E48  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 16001  015E4A  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16002  015E4C  ECE7  F0B1         	call	_TMR5_SetInterruptHandler	;wreg free
 16003                           
 16004                           ;tmr5.c: 96: T5CON = 0x13;
 16005  015E50  0E13               	movlw	19
 16006  015E52  6EC3               	movwf	4035,c	;volatile
 16007  015E54  0012               	return		;funcret
 16008  015E56                     __end_of_TMR5_Initialize:
 16009                           	opt stack 0
 16010                           tblptru	equ	0xFF8
 16011                           tblptrh	equ	0xFF7
 16012                           tblptrl	equ	0xFF6
 16013                           tablat	equ	0xFF5
 16014                           prodh	equ	0xFF4
 16015                           prodl	equ	0xFF3
 16016                           intcon	equ	0xFF2
 16017                           postinc0	equ	0xFEE
 16018                           wreg	equ	0xFE8
 16019                           indf1	equ	0xFE7
 16020                           postdec1	equ	0xFE5
 16021                           fsr1h	equ	0xFE2
 16022                           fsr1l	equ	0xFE1
 16023                           indf2	equ	0xFDF
 16024                           postinc2	equ	0xFDE
 16025                           postdec2	equ	0xFDD
 16026                           fsr2h	equ	0xFDA
 16027                           fsr2l	equ	0xFD9
 16028                           status	equ	0xFD8
 16029                           
 16030 ;; *************** function _TMR5_SetInterruptHandler *****************
 16031 ;; Defined at:
 16032 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 16033 ;; Parameters:    Size  Location     Type
 16034 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 16035 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 16036 ;; Auto vars:     Size  Location     Type
 16037 ;;		None
 16038 ;; Return value:  Size  Location     Type
 16039 ;;                  1    wreg      void 
 16040 ;; Registers used:
 16041 ;;		wreg, status,2, status,0
 16042 ;; Tracked objects:
 16043 ;;		On entry : 0/0
 16044 ;;		On exit  : 0/0
 16045 ;;		Unchanged: 0/0
 16046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16047 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16050 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16051 ;;Total ram usage:        3 bytes
 16052 ;; Hardware stack levels used:    1
 16053 ;; Hardware stack levels required when called:   14
 16054 ;; This function calls:
 16055 ;;		Nothing
 16056 ;; This function is called by:
 16057 ;;		_TMR5_Initialize
 16058 ;; This function uses a non-reentrant model
 16059 ;;
 16060                           
 16061                           	psect	text46
 16062  0163CE                     __ptext46:
 16063                           	opt stack 0
 16064  0163CE                     _TMR5_SetInterruptHandler:
 16065                           	opt stack 14
 16066                           
 16067                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 16068                           
 16069                           ;incstack = 0
 16070  0163CE  C117  F1C6         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 16071  0163D2  C118  F1C7         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 16072  0163D6  C119  F1C8         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 16073  0163DA  0012               	return		;funcret
 16074  0163DC                     __end_of_TMR5_SetInterruptHandler:
 16075                           	opt stack 0
 16076                           tblptru	equ	0xFF8
 16077                           tblptrh	equ	0xFF7
 16078                           tblptrl	equ	0xFF6
 16079                           tablat	equ	0xFF5
 16080                           prodh	equ	0xFF4
 16081                           prodl	equ	0xFF3
 16082                           intcon	equ	0xFF2
 16083                           postinc0	equ	0xFEE
 16084                           wreg	equ	0xFE8
 16085                           indf1	equ	0xFE7
 16086                           postdec1	equ	0xFE5
 16087                           fsr1h	equ	0xFE2
 16088                           fsr1l	equ	0xFE1
 16089                           indf2	equ	0xFDF
 16090                           postinc2	equ	0xFDE
 16091                           postdec2	equ	0xFDD
 16092                           fsr2h	equ	0xFDA
 16093                           fsr2l	equ	0xFD9
 16094                           status	equ	0xFD8
 16095                           
 16096 ;; *************** function _PMD_Initialize *****************
 16097 ;; Defined at:
 16098 ;;		line 82 in file "mcc_generated_files/mcc.c"
 16099 ;; Parameters:    Size  Location     Type
 16100 ;;		None
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;		None
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  1    wreg      void 
 16105 ;; Registers used:
 16106 ;;		wreg, status,2
 16107 ;; Tracked objects:
 16108 ;;		On entry : 0/0
 16109 ;;		On exit  : 0/0
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16116 ;;Total ram usage:        0 bytes
 16117 ;; Hardware stack levels used:    1
 16118 ;; Hardware stack levels required when called:   14
 16119 ;; This function calls:
 16120 ;;		Nothing
 16121 ;; This function is called by:
 16122 ;;		_SYSTEM_Initialize
 16123 ;; This function uses a non-reentrant model
 16124 ;;
 16125                           
 16126                           	psect	text47
 16127  0162E8                     __ptext47:
 16128                           	opt stack 0
 16129  0162E8                     _PMD_Initialize:
 16130                           	opt stack 15
 16131                           
 16132                           ;mcc.c: 85: PMD0 = 0x00;
 16133                           
 16134                           ;incstack = 0
 16135  0162E8  0E00               	movlw	0
 16136  0162EA  010E               	movlb	14	; () banked
 16137  0162EC  6F4C               	movwf	76,b	;volatile
 16138                           
 16139                           ;mcc.c: 87: PMD1 = 0x00;
 16140  0162EE  0E00               	movlw	0
 16141  0162F0  6F4D               	movwf	77,b	;volatile
 16142                           
 16143                           ;mcc.c: 89: PMD2 = 0x00;
 16144  0162F2  0E00               	movlw	0
 16145  0162F4  6F4E               	movwf	78,b	;volatile
 16146                           
 16147                           ;mcc.c: 91: PMD3 = 0x00;
 16148  0162F6  0E00               	movlw	0
 16149  0162F8  6F4F               	movwf	79,b	;volatile
 16150                           
 16151                           ;mcc.c: 93: PMD4 = 0x00;
 16152  0162FA  0E00               	movlw	0
 16153  0162FC  6F50               	movwf	80,b	;volatile
 16154                           
 16155                           ;mcc.c: 95: PMD5 = 0x00;
 16156  0162FE  0E00               	movlw	0
 16157  016300  6F51               	movwf	81,b	;volatile
 16158                           
 16159                           ; BSR set to: 14
 16160  016302  0012               	return		;funcret
 16161  016304                     __end_of_PMD_Initialize:
 16162                           	opt stack 0
 16163                           tblptru	equ	0xFF8
 16164                           tblptrh	equ	0xFF7
 16165                           tblptrl	equ	0xFF6
 16166                           tablat	equ	0xFF5
 16167                           prodh	equ	0xFF4
 16168                           prodl	equ	0xFF3
 16169                           intcon	equ	0xFF2
 16170                           postinc0	equ	0xFEE
 16171                           wreg	equ	0xFE8
 16172                           indf1	equ	0xFE7
 16173                           postdec1	equ	0xFE5
 16174                           fsr1h	equ	0xFE2
 16175                           fsr1l	equ	0xFE1
 16176                           indf2	equ	0xFDF
 16177                           postinc2	equ	0xFDE
 16178                           postdec2	equ	0xFDD
 16179                           fsr2h	equ	0xFDA
 16180                           fsr2l	equ	0xFD9
 16181                           status	equ	0xFD8
 16182                           
 16183 ;; *************** function _PIN_MANAGER_Initialize *****************
 16184 ;; Defined at:
 16185 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16186 ;; Parameters:    Size  Location     Type
 16187 ;;		None
 16188 ;; Auto vars:     Size  Location     Type
 16189 ;;		None
 16190 ;; Return value:  Size  Location     Type
 16191 ;;                  1    wreg      void 
 16192 ;; Registers used:
 16193 ;;		wreg, status,2
 16194 ;; Tracked objects:
 16195 ;;		On entry : 0/0
 16196 ;;		On exit  : 0/0
 16197 ;;		Unchanged: 0/0
 16198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16203 ;;Total ram usage:        0 bytes
 16204 ;; Hardware stack levels used:    1
 16205 ;; Hardware stack levels required when called:   14
 16206 ;; This function calls:
 16207 ;;		Nothing
 16208 ;; This function is called by:
 16209 ;;		_SYSTEM_Initialize
 16210 ;; This function uses a non-reentrant model
 16211 ;;
 16212                           
 16213                           	psect	text48
 16214  015164                     __ptext48:
 16215                           	opt stack 0
 16216  015164                     _PIN_MANAGER_Initialize:
 16217                           	opt stack 15
 16218                           
 16219                           ;pin_manager.c: 62: LATE = 0x00;
 16220                           
 16221                           ; BSR set to: 14
 16222                           ;incstack = 0
 16223  015164  0E00               	movlw	0
 16224  015166  6E7D               	movwf	3965,c	;volatile
 16225                           
 16226                           ;pin_manager.c: 63: LATD = 0x00;
 16227  015168  0E00               	movlw	0
 16228  01516A  6E7C               	movwf	3964,c	;volatile
 16229                           
 16230                           ;pin_manager.c: 64: LATA = 0x00;
 16231  01516C  0E00               	movlw	0
 16232  01516E  6E79               	movwf	3961,c	;volatile
 16233                           
 16234                           ;pin_manager.c: 65: LATF = 0x00;
 16235  015170  0E00               	movlw	0
 16236  015172  6E7E               	movwf	3966,c	;volatile
 16237                           
 16238                           ;pin_manager.c: 66: LATB = 0x00;
 16239  015174  0E00               	movlw	0
 16240  015176  6E7A               	movwf	3962,c	;volatile
 16241                           
 16242                           ;pin_manager.c: 67: LATG = 0x00;
 16243  015178  0E00               	movlw	0
 16244  01517A  6E7F               	movwf	3967,c	;volatile
 16245                           
 16246                           ;pin_manager.c: 68: LATC = 0x00;
 16247  01517C  0E00               	movlw	0
 16248  01517E  6E7B               	movwf	3963,c	;volatile
 16249                           
 16250                           ;pin_manager.c: 69: LATH = 0x00;
 16251  015180  0E00               	movlw	0
 16252  015182  6E80               	movwf	3968,c	;volatile
 16253                           
 16254                           ;pin_manager.c: 74: TRISE = 0xFF;
 16255  015184  6885               	setf	3973,c	;volatile
 16256                           
 16257                           ;pin_manager.c: 75: TRISF = 0xF0;
 16258  015186  0EF0               	movlw	240
 16259  015188  6E86               	movwf	3974,c	;volatile
 16260                           
 16261                           ;pin_manager.c: 76: TRISA = 0xFF;
 16262  01518A  6881               	setf	3969,c	;volatile
 16263                           
 16264                           ;pin_manager.c: 77: TRISG = 0x5C;
 16265  01518C  0E5C               	movlw	92
 16266  01518E  6E87               	movwf	3975,c	;volatile
 16267                           
 16268                           ;pin_manager.c: 78: TRISB = 0xFF;
 16269  015190  6882               	setf	3970,c	;volatile
 16270                           
 16271                           ;pin_manager.c: 79: TRISH = 0x0F;
 16272  015192  0E0F               	movlw	15
 16273  015194  6E88               	movwf	3976,c	;volatile
 16274                           
 16275                           ;pin_manager.c: 80: TRISC = 0xFF;
 16276  015196  6883               	setf	3971,c	;volatile
 16277                           
 16278                           ;pin_manager.c: 81: TRISD = 0xFF;
 16279  015198  6884               	setf	3972,c	;volatile
 16280                           
 16281                           ;pin_manager.c: 86: ANSELD = 0xFF;
 16282  01519A  010E               	movlb	14	; () banked
 16283  01519C  69A7               	setf	167,b	;volatile
 16284                           
 16285                           ; BSR set to: 14
 16286                           ;pin_manager.c: 87: ANSELB = 0xFF;
 16287  01519E  699A               	setf	154,b	;volatile
 16288                           
 16289                           ; BSR set to: 14
 16290                           ;pin_manager.c: 88: ANSELE = 0xFF;
 16291  0151A0  69AF               	setf	175,b	;volatile
 16292                           
 16293                           ;pin_manager.c: 89: ANSELG = 0x3C;
 16294  0151A2  0E3C               	movlw	60
 16295  0151A4  6FBC               	movwf	188,b	;volatile
 16296                           
 16297                           ;pin_manager.c: 90: ANSELF = 0xF0;
 16298  0151A6  0EF0               	movlw	240
 16299  0151A8  6FB4               	movwf	180,b	;volatile
 16300                           
 16301                           ; BSR set to: 14
 16302                           ;pin_manager.c: 91: ANSELA = 0xFF;
 16303  0151AA  6992               	setf	146,b	;volatile
 16304                           
 16305                           ;pin_manager.c: 96: WPUD = 0x00;
 16306  0151AC  0E00               	movlw	0
 16307  0151AE  6FA6               	movwf	166,b	;volatile
 16308                           
 16309                           ;pin_manager.c: 97: WPUF = 0x00;
 16310  0151B0  0E00               	movlw	0
 16311  0151B2  6FB3               	movwf	179,b	;volatile
 16312                           
 16313                           ;pin_manager.c: 98: WPUE = 0x00;
 16314  0151B4  0E00               	movlw	0
 16315  0151B6  6FAE               	movwf	174,b	;volatile
 16316                           
 16317                           ;pin_manager.c: 99: WPUB = 0x00;
 16318  0151B8  0E00               	movlw	0
 16319  0151BA  6F99               	movwf	153,b	;volatile
 16320                           
 16321                           ;pin_manager.c: 100: WPUG = 0x00;
 16322  0151BC  0E00               	movlw	0
 16323  0151BE  6FBB               	movwf	187,b	;volatile
 16324                           
 16325                           ;pin_manager.c: 101: WPUA = 0x00;
 16326  0151C0  0E00               	movlw	0
 16327  0151C2  6F91               	movwf	145,b	;volatile
 16328                           
 16329                           ;pin_manager.c: 102: WPUC = 0x00;
 16330  0151C4  0E00               	movlw	0
 16331  0151C6  6FA1               	movwf	161,b	;volatile
 16332                           
 16333                           ;pin_manager.c: 103: WPUH = 0x00;
 16334  0151C8  0E00               	movlw	0
 16335  0151CA  6FC0               	movwf	192,b	;volatile
 16336                           
 16337                           ;pin_manager.c: 108: ODCONE = 0x00;
 16338  0151CC  0E00               	movlw	0
 16339  0151CE  6FAD               	movwf	173,b	;volatile
 16340                           
 16341                           ;pin_manager.c: 109: ODCONF = 0x01;
 16342  0151D0  0E01               	movlw	1
 16343  0151D2  6FB2               	movwf	178,b	;volatile
 16344                           
 16345                           ;pin_manager.c: 110: ODCONA = 0x00;
 16346  0151D4  0E00               	movlw	0
 16347  0151D6  6F90               	movwf	144,b	;volatile
 16348                           
 16349                           ;pin_manager.c: 111: ODCONG = 0x00;
 16350  0151D8  0E00               	movlw	0
 16351  0151DA  6FBA               	movwf	186,b	;volatile
 16352                           
 16353                           ;pin_manager.c: 112: ODCONB = 0x00;
 16354  0151DC  0E00               	movlw	0
 16355  0151DE  6F98               	movwf	152,b	;volatile
 16356                           
 16357                           ;pin_manager.c: 113: ODCONH = 0x00;
 16358  0151E0  0E00               	movlw	0
 16359  0151E2  6FBF               	movwf	191,b	;volatile
 16360                           
 16361                           ;pin_manager.c: 114: ODCONC = 0x00;
 16362  0151E4  0E00               	movlw	0
 16363  0151E6  6FA0               	movwf	160,b	;volatile
 16364                           
 16365                           ;pin_manager.c: 115: ODCOND = 0x00;
 16366  0151E8  0E00               	movlw	0
 16367  0151EA  6FA5               	movwf	165,b	;volatile
 16368                           
 16369                           ; BSR set to: 14
 16370                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 16371  0151EC  698F               	setf	143,b	;volatile
 16372                           
 16373                           ; BSR set to: 14
 16374                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 16375  0151EE  6997               	setf	151,b	;volatile
 16376                           
 16377                           ; BSR set to: 14
 16378                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 16379  0151F0  699F               	setf	159,b	;volatile
 16380                           
 16381                           ; BSR set to: 14
 16382                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 16383  0151F2  69A4               	setf	164,b	;volatile
 16384                           
 16385                           ; BSR set to: 14
 16386                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 16387  0151F4  69AC               	setf	172,b	;volatile
 16388                           
 16389                           ; BSR set to: 14
 16390                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 16391  0151F6  69B1               	setf	177,b	;volatile
 16392                           
 16393                           ; BSR set to: 14
 16394                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 16395  0151F8  69B9               	setf	185,b	;volatile
 16396                           
 16397                           ; BSR set to: 14
 16398                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 16399  0151FA  69BE               	setf	190,b	;volatile
 16400                           
 16401                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 16402  0151FC  0E0E               	movlw	14
 16403  0151FE  6F89               	movwf	137,b	;volatile
 16404                           
 16405                           ;pin_manager.c: 137: RX2PPS = 0x36;
 16406  015200  0E36               	movlw	54
 16407  015202  6F11               	movwf	17,b	;volatile
 16408                           
 16409                           ; BSR set to: 14
 16410  015204  0012               	return		;funcret
 16411  015206                     __end_of_PIN_MANAGER_Initialize:
 16412                           	opt stack 0
 16413                           tblptru	equ	0xFF8
 16414                           tblptrh	equ	0xFF7
 16415                           tblptrl	equ	0xFF6
 16416                           tablat	equ	0xFF5
 16417                           prodh	equ	0xFF4
 16418                           prodl	equ	0xFF3
 16419                           intcon	equ	0xFF2
 16420                           postinc0	equ	0xFEE
 16421                           wreg	equ	0xFE8
 16422                           indf1	equ	0xFE7
 16423                           postdec1	equ	0xFE5
 16424                           fsr1h	equ	0xFE2
 16425                           fsr1l	equ	0xFE1
 16426                           indf2	equ	0xFDF
 16427                           postinc2	equ	0xFDE
 16428                           postdec2	equ	0xFDD
 16429                           fsr2h	equ	0xFDA
 16430                           fsr2l	equ	0xFD9
 16431                           status	equ	0xFD8
 16432                           
 16433 ;; *************** function _OSCILLATOR_Initialize *****************
 16434 ;; Defined at:
 16435 ;;		line 64 in file "mcc_generated_files/mcc.c"
 16436 ;; Parameters:    Size  Location     Type
 16437 ;;		None
 16438 ;; Auto vars:     Size  Location     Type
 16439 ;;		None
 16440 ;; Return value:  Size  Location     Type
 16441 ;;                  1    wreg      void 
 16442 ;; Registers used:
 16443 ;;		wreg, status,2
 16444 ;; Tracked objects:
 16445 ;;		On entry : 0/0
 16446 ;;		On exit  : 0/0
 16447 ;;		Unchanged: 0/0
 16448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16453 ;;Total ram usage:        0 bytes
 16454 ;; Hardware stack levels used:    1
 16455 ;; Hardware stack levels required when called:   14
 16456 ;; This function calls:
 16457 ;;		Nothing
 16458 ;; This function is called by:
 16459 ;;		_SYSTEM_Initialize
 16460 ;; This function uses a non-reentrant model
 16461 ;;
 16462                           
 16463                           	psect	text49
 16464  016304                     __ptext49:
 16465                           	opt stack 0
 16466  016304                     _OSCILLATOR_Initialize:
 16467                           	opt stack 15
 16468                           
 16469                           ;mcc.c: 67: OSCCON1 = 0x20;
 16470                           
 16471                           ; BSR set to: 14
 16472                           ;incstack = 0
 16473  016304  0E20               	movlw	32
 16474  016306  010E               	movlb	14	; () banked
 16475  016308  6F43               	movwf	67,b	;volatile
 16476                           
 16477                           ;mcc.c: 69: OSCCON3 = 0x00;
 16478  01630A  0E00               	movlw	0
 16479  01630C  6F45               	movwf	69,b	;volatile
 16480                           
 16481                           ;mcc.c: 71: OSCEN = 0x00;
 16482  01630E  0E00               	movlw	0
 16483  016310  6F47               	movwf	71,b	;volatile
 16484                           
 16485                           ;mcc.c: 73: OSCFRQ = 0x02;
 16486  016312  0E02               	movlw	2
 16487  016314  6F49               	movwf	73,b	;volatile
 16488                           
 16489                           ;mcc.c: 75: OSCTUNE = 0x00;
 16490  016316  0E00               	movlw	0
 16491  016318  6F48               	movwf	72,b	;volatile
 16492  01631A                     
 16493                           ; BSR set to: 14
 16494                           
 16495                           ; BSR set to: 14
 16496                           ;mcc.c: 78: {
 16497  01631A  B146               	btfsc	70,0,b	;volatile
 16498  01631C  0012               	return	
 16499  01631E  D7FD               	goto	l55
 16500  016320                     __end_of_OSCILLATOR_Initialize:
 16501                           	opt stack 0
 16502                           tblptru	equ	0xFF8
 16503                           tblptrh	equ	0xFF7
 16504                           tblptrl	equ	0xFF6
 16505                           tablat	equ	0xFF5
 16506                           prodh	equ	0xFF4
 16507                           prodl	equ	0xFF3
 16508                           intcon	equ	0xFF2
 16509                           postinc0	equ	0xFEE
 16510                           wreg	equ	0xFE8
 16511                           indf1	equ	0xFE7
 16512                           postdec1	equ	0xFE5
 16513                           fsr1h	equ	0xFE2
 16514                           fsr1l	equ	0xFE1
 16515                           indf2	equ	0xFDF
 16516                           postinc2	equ	0xFDE
 16517                           postdec2	equ	0xFDD
 16518                           fsr2h	equ	0xFDA
 16519                           fsr2l	equ	0xFD9
 16520                           status	equ	0xFD8
 16521                           
 16522 ;; *************** function _INTERRUPT_Initialize *****************
 16523 ;; Defined at:
 16524 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16525 ;; Parameters:    Size  Location     Type
 16526 ;;		None
 16527 ;; Auto vars:     Size  Location     Type
 16528 ;;		None
 16529 ;; Return value:  Size  Location     Type
 16530 ;;                  1    wreg      void 
 16531 ;; Registers used:
 16532 ;;		None
 16533 ;; Tracked objects:
 16534 ;;		On entry : 0/0
 16535 ;;		On exit  : 0/0
 16536 ;;		Unchanged: 0/0
 16537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16542 ;;Total ram usage:        0 bytes
 16543 ;; Hardware stack levels used:    1
 16544 ;; Hardware stack levels required when called:   14
 16545 ;; This function calls:
 16546 ;;		Nothing
 16547 ;; This function is called by:
 16548 ;;		_SYSTEM_Initialize
 16549 ;; This function uses a non-reentrant model
 16550 ;;
 16551                           
 16552                           	psect	text50
 16553  016362                     __ptext50:
 16554                           	opt stack 0
 16555  016362                     _INTERRUPT_Initialize:
 16556                           	opt stack 15
 16557                           
 16558                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 16559                           
 16560                           ; BSR set to: 14
 16561                           ;incstack = 0
 16562  016362  8AF2               	bsf	intcon,5,c	;volatile
 16563                           
 16564                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 16565  016364  010E               	movlb	14	; () banked
 16566  016366  8F22               	bsf	34,7,b	;volatile
 16567                           
 16568                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 16569  016368  8924               	bsf	36,4,b	;volatile
 16570                           
 16571                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 16572  01636A  8120               	bsf	32,0,b	;volatile
 16573                           
 16574                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 16575  01636C  9B24               	bcf	36,5,b	;volatile
 16576                           
 16577                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 16578  01636E  9D22               	bcf	34,6,b	;volatile
 16579                           
 16580                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 16581  016370  9D24               	bcf	36,6,b	;volatile
 16582                           
 16583                           ; BSR set to: 14
 16584  016372  0012               	return		;funcret
 16585  016374                     __end_of_INTERRUPT_Initialize:
 16586                           	opt stack 0
 16587                           tblptru	equ	0xFF8
 16588                           tblptrh	equ	0xFF7
 16589                           tblptrl	equ	0xFF6
 16590                           tablat	equ	0xFF5
 16591                           prodh	equ	0xFF4
 16592                           prodl	equ	0xFF3
 16593                           intcon	equ	0xFF2
 16594                           postinc0	equ	0xFEE
 16595                           wreg	equ	0xFE8
 16596                           indf1	equ	0xFE7
 16597                           postdec1	equ	0xFE5
 16598                           fsr1h	equ	0xFE2
 16599                           fsr1l	equ	0xFE1
 16600                           indf2	equ	0xFDF
 16601                           postinc2	equ	0xFDE
 16602                           postdec2	equ	0xFDD
 16603                           fsr2h	equ	0xFDA
 16604                           fsr2l	equ	0xFD9
 16605                           status	equ	0xFD8
 16606                           
 16607 ;; *************** function _FVR_Initialize *****************
 16608 ;; Defined at:
 16609 ;;		line 58 in file "mcc_generated_files/fvr.c"
 16610 ;; Parameters:    Size  Location     Type
 16611 ;;		None
 16612 ;; Auto vars:     Size  Location     Type
 16613 ;;		None
 16614 ;; Return value:  Size  Location     Type
 16615 ;;                  1    wreg      void 
 16616 ;; Registers used:
 16617 ;;		wreg, status,2
 16618 ;; Tracked objects:
 16619 ;;		On entry : 0/0
 16620 ;;		On exit  : 0/0
 16621 ;;		Unchanged: 0/0
 16622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16627 ;;Total ram usage:        0 bytes
 16628 ;; Hardware stack levels used:    1
 16629 ;; Hardware stack levels required when called:   14
 16630 ;; This function calls:
 16631 ;;		Nothing
 16632 ;; This function is called by:
 16633 ;;		_SYSTEM_Initialize
 16634 ;; This function uses a non-reentrant model
 16635 ;;
 16636                           
 16637                           	psect	text51
 16638  01642A                     __ptext51:
 16639                           	opt stack 0
 16640  01642A                     _FVR_Initialize:
 16641                           	opt stack 15
 16642                           
 16643                           ;fvr.c: 61: FVRCON = 0xA6;
 16644                           
 16645                           ; BSR set to: 14
 16646                           ;incstack = 0
 16647  01642A  0EA6               	movlw	166
 16648  01642C  010E               	movlb	14	; () banked
 16649  01642E  6FC4               	movwf	196,b	;volatile
 16650                           
 16651                           ; BSR set to: 14
 16652  016430  0012               	return		;funcret
 16653  016432                     __end_of_FVR_Initialize:
 16654                           	opt stack 0
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodh	equ	0xFF4
 16660                           prodl	equ	0xFF3
 16661                           intcon	equ	0xFF2
 16662                           postinc0	equ	0xFEE
 16663                           wreg	equ	0xFE8
 16664                           indf1	equ	0xFE7
 16665                           postdec1	equ	0xFE5
 16666                           fsr1h	equ	0xFE2
 16667                           fsr1l	equ	0xFE1
 16668                           indf2	equ	0xFDF
 16669                           postinc2	equ	0xFDE
 16670                           postdec2	equ	0xFDD
 16671                           fsr2h	equ	0xFDA
 16672                           fsr2l	equ	0xFD9
 16673                           status	equ	0xFD8
 16674                           
 16675 ;; *************** function _EUSART2_Initialize *****************
 16676 ;; Defined at:
 16677 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;		None
 16680 ;; Auto vars:     Size  Location     Type
 16681 ;;		None
 16682 ;; Return value:  Size  Location     Type
 16683 ;;                  1    wreg      void 
 16684 ;; Registers used:
 16685 ;;		wreg, status,2, status,0, cstack
 16686 ;; Tracked objects:
 16687 ;;		On entry : 0/0
 16688 ;;		On exit  : 0/0
 16689 ;;		Unchanged: 0/0
 16690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16695 ;;Total ram usage:        0 bytes
 16696 ;; Hardware stack levels used:    1
 16697 ;; Hardware stack levels required when called:   15
 16698 ;; This function calls:
 16699 ;;		_EUSART2_SetRxInterruptHandler
 16700 ;;		_EUSART2_SetTxInterruptHandler
 16701 ;; This function is called by:
 16702 ;;		_SYSTEM_Initialize
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           	psect	text52
 16707  01596C                     __ptext52:
 16708                           	opt stack 0
 16709  01596C                     _EUSART2_Initialize:
 16710                           	opt stack 14
 16711                           
 16712                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 16713                           
 16714                           ; BSR set to: 14
 16715                           ;incstack = 0
 16716  01596C  010E               	movlb	14	; () banked
 16717  01596E  9F2C               	bcf	44,7,b	;volatile
 16718                           
 16719                           ; BSR set to: 14
 16720                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 16721  015970  0EBA               	movlw	low _EUSART2_Receive_ISR
 16722  015972  0101               	movlb	1	; () banked
 16723  015974  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 16724  015976  0E50               	movlw	high _EUSART2_Receive_ISR
 16725  015978  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 16726  01597A  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 16727  01597C  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 16728  01597E  ECF5  F0B1         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 16729                           
 16730                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 16731  015982  010E               	movlb	14	; () banked
 16732  015984  9D2C               	bcf	44,6,b	;volatile
 16733                           
 16734                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 16735  015986  0E1E               	movlw	low _EUSART2_Transmit_ISR
 16736  015988  0101               	movlb	1	; () banked
 16737  01598A  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 16738  01598C  0E60               	movlw	high _EUSART2_Transmit_ISR
 16739  01598E  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 16740  015990  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 16741  015992  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 16742  015994  ECEE  F0B1         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 16743                           
 16744                           ;eusart2.c: 87: BAUD2CON = 0x08;
 16745  015998  0E08               	movlw	8
 16746  01599A  010E               	movlb	14	; () banked
 16747  01599C  6FF7               	movwf	247,b	;volatile
 16748                           
 16749                           ; BSR set to: 14
 16750                           ;eusart2.c: 90: RC2STA = 0x90;
 16751  01599E  0E90               	movlw	144
 16752  0159A0  6FF5               	movwf	245,b	;volatile
 16753                           
 16754                           ; BSR set to: 14
 16755                           ;eusart2.c: 93: TX2STA = 0x24;
 16756  0159A2  0E24               	movlw	36
 16757  0159A4  6FF6               	movwf	246,b	;volatile
 16758                           
 16759                           ; BSR set to: 14
 16760                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 16761  0159A6  0E8A               	movlw	138
 16762  0159A8  6FF3               	movwf	243,b	;volatile
 16763                           
 16764                           ; BSR set to: 14
 16765                           ;eusart2.c: 99: SP2BRGH = 0x00;
 16766  0159AA  0E00               	movlw	0
 16767  0159AC  6FF4               	movwf	244,b	;volatile
 16768                           
 16769                           ; BSR set to: 14
 16770                           ;eusart2.c: 103: eusart2TxHead = 0;
 16771  0159AE  0E00               	movlw	0
 16772  0159B0  0101               	movlb	1	; () banked
 16773  0159B2  6FDA               	movwf	_eusart2TxHead& (0+255),b	;volatile
 16774                           
 16775                           ; BSR set to: 1
 16776                           ;eusart2.c: 104: eusart2TxTail = 0;
 16777  0159B4  0E00               	movlw	0
 16778  0159B6  6FD9               	movwf	_eusart2TxTail& (0+255),b	;volatile
 16779                           
 16780                           ; BSR set to: 1
 16781                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 16782  0159B8  0E80               	movlw	128
 16783  0159BA  6FD8               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 16784                           
 16785                           ; BSR set to: 1
 16786                           ;eusart2.c: 107: eusart2RxHead = 0;
 16787  0159BC  0E00               	movlw	0
 16788  0159BE  0100               	movlb	0	; () banked
 16789  0159C0  6FEA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 16790                           
 16791                           ; BSR set to: 0
 16792                           ;eusart2.c: 108: eusart2RxTail = 0;
 16793  0159C2  0E00               	movlw	0
 16794  0159C4  0101               	movlb	1	; () banked
 16795  0159C6  6FD7               	movwf	_eusart2RxTail& (0+255),b	;volatile
 16796                           
 16797                           ; BSR set to: 1
 16798                           ;eusart2.c: 109: eusart2RxCount = 0;
 16799  0159C8  0E00               	movlw	0
 16800  0159CA  6FD6               	movwf	_eusart2RxCount& (0+255),b	;volatile
 16801                           
 16802                           ; BSR set to: 1
 16803                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 16804  0159CC  010E               	movlb	14	; () banked
 16805  0159CE  8F2C               	bsf	44,7,b	;volatile
 16806                           
 16807                           ; BSR set to: 14
 16808  0159D0  0012               	return		;funcret
 16809  0159D2                     __end_of_EUSART2_Initialize:
 16810                           	opt stack 0
 16811                           tblptru	equ	0xFF8
 16812                           tblptrh	equ	0xFF7
 16813                           tblptrl	equ	0xFF6
 16814                           tablat	equ	0xFF5
 16815                           prodh	equ	0xFF4
 16816                           prodl	equ	0xFF3
 16817                           intcon	equ	0xFF2
 16818                           postinc0	equ	0xFEE
 16819                           wreg	equ	0xFE8
 16820                           indf1	equ	0xFE7
 16821                           postdec1	equ	0xFE5
 16822                           fsr1h	equ	0xFE2
 16823                           fsr1l	equ	0xFE1
 16824                           indf2	equ	0xFDF
 16825                           postinc2	equ	0xFDE
 16826                           postdec2	equ	0xFDD
 16827                           fsr2h	equ	0xFDA
 16828                           fsr2l	equ	0xFD9
 16829                           status	equ	0xFD8
 16830                           
 16831 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 16832 ;; Defined at:
 16833 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 16834 ;; Parameters:    Size  Location     Type
 16835 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 16836 ;;		 -> EUSART2_Transmit_ISR(1), 
 16837 ;; Auto vars:     Size  Location     Type
 16838 ;;		None
 16839 ;; Return value:  Size  Location     Type
 16840 ;;                  1    wreg      void 
 16841 ;; Registers used:
 16842 ;;		wreg, status,2, status,0
 16843 ;; Tracked objects:
 16844 ;;		On entry : 0/0
 16845 ;;		On exit  : 0/0
 16846 ;;		Unchanged: 0/0
 16847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16848 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16851 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16852 ;;Total ram usage:        3 bytes
 16853 ;; Hardware stack levels used:    1
 16854 ;; Hardware stack levels required when called:   14
 16855 ;; This function calls:
 16856 ;;		Nothing
 16857 ;; This function is called by:
 16858 ;;		_EUSART2_Initialize
 16859 ;; This function uses a non-reentrant model
 16860 ;;
 16861                           
 16862                           	psect	text53
 16863  0163DC                     __ptext53:
 16864                           	opt stack 0
 16865  0163DC                     _EUSART2_SetTxInterruptHandler:
 16866                           	opt stack 14
 16867                           
 16868                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 16869                           
 16870                           ; BSR set to: 14
 16871                           ;incstack = 0
 16872  0163DC  C117  F1CF         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 16873  0163E0  C118  F1D0         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 16874  0163E4  C119  F1D1         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 16875  0163E8  0012               	return		;funcret
 16876  0163EA                     __end_of_EUSART2_SetTxInterruptHandler:
 16877                           	opt stack 0
 16878                           tblptru	equ	0xFF8
 16879                           tblptrh	equ	0xFF7
 16880                           tblptrl	equ	0xFF6
 16881                           tablat	equ	0xFF5
 16882                           prodh	equ	0xFF4
 16883                           prodl	equ	0xFF3
 16884                           intcon	equ	0xFF2
 16885                           postinc0	equ	0xFEE
 16886                           wreg	equ	0xFE8
 16887                           indf1	equ	0xFE7
 16888                           postdec1	equ	0xFE5
 16889                           fsr1h	equ	0xFE2
 16890                           fsr1l	equ	0xFE1
 16891                           indf2	equ	0xFDF
 16892                           postinc2	equ	0xFDE
 16893                           postdec2	equ	0xFDD
 16894                           fsr2h	equ	0xFDA
 16895                           fsr2l	equ	0xFD9
 16896                           status	equ	0xFD8
 16897                           
 16898 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 16899 ;; Defined at:
 16900 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 16901 ;; Parameters:    Size  Location     Type
 16902 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 16903 ;;		 -> EUSART2_Receive_ISR(1), 
 16904 ;; Auto vars:     Size  Location     Type
 16905 ;;		None
 16906 ;; Return value:  Size  Location     Type
 16907 ;;                  1    wreg      void 
 16908 ;; Registers used:
 16909 ;;		wreg, status,2, status,0
 16910 ;; Tracked objects:
 16911 ;;		On entry : 0/0
 16912 ;;		On exit  : 0/0
 16913 ;;		Unchanged: 0/0
 16914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16915 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16918 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16919 ;;Total ram usage:        3 bytes
 16920 ;; Hardware stack levels used:    1
 16921 ;; Hardware stack levels required when called:   14
 16922 ;; This function calls:
 16923 ;;		Nothing
 16924 ;; This function is called by:
 16925 ;;		_EUSART2_Initialize
 16926 ;; This function uses a non-reentrant model
 16927 ;;
 16928                           
 16929                           	psect	text54
 16930  0163EA                     __ptext54:
 16931                           	opt stack 0
 16932  0163EA                     _EUSART2_SetRxInterruptHandler:
 16933                           	opt stack 14
 16934                           
 16935                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 16936                           
 16937                           ;incstack = 0
 16938  0163EA  C117  F0E0         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 16939  0163EE  C118  F0E1         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 16940  0163F2  C119  F0E2         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 16941  0163F6  0012               	return		;funcret
 16942  0163F8                     __end_of_EUSART2_SetRxInterruptHandler:
 16943                           	opt stack 0
 16944                           tblptru	equ	0xFF8
 16945                           tblptrh	equ	0xFF7
 16946                           tblptrl	equ	0xFF6
 16947                           tablat	equ	0xFF5
 16948                           prodh	equ	0xFF4
 16949                           prodl	equ	0xFF3
 16950                           intcon	equ	0xFF2
 16951                           postinc0	equ	0xFEE
 16952                           wreg	equ	0xFE8
 16953                           indf1	equ	0xFE7
 16954                           postdec1	equ	0xFE5
 16955                           fsr1h	equ	0xFE2
 16956                           fsr1l	equ	0xFE1
 16957                           indf2	equ	0xFDF
 16958                           postinc2	equ	0xFDE
 16959                           postdec2	equ	0xFDD
 16960                           fsr2h	equ	0xFDA
 16961                           fsr2l	equ	0xFD9
 16962                           status	equ	0xFD8
 16963                           
 16964 ;; *************** function _ADCC_Initialize *****************
 16965 ;; Defined at:
 16966 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16967 ;; Parameters:    Size  Location     Type
 16968 ;;		None
 16969 ;; Auto vars:     Size  Location     Type
 16970 ;;		None
 16971 ;; Return value:  Size  Location     Type
 16972 ;;                  1    wreg      void 
 16973 ;; Registers used:
 16974 ;;		wreg, status,2, status,0, cstack
 16975 ;; Tracked objects:
 16976 ;;		On entry : 0/0
 16977 ;;		On exit  : 0/0
 16978 ;;		Unchanged: 0/0
 16979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16984 ;;Total ram usage:        0 bytes
 16985 ;; Hardware stack levels used:    1
 16986 ;; Hardware stack levels required when called:   15
 16987 ;; This function calls:
 16988 ;;		_ADCC_SetADIInterruptHandler
 16989 ;; This function is called by:
 16990 ;;		_SYSTEM_Initialize
 16991 ;; This function uses a non-reentrant model
 16992 ;;
 16993                           
 16994                           	psect	text55
 16995  015A38                     __ptext55:
 16996                           	opt stack 0
 16997  015A38                     _ADCC_Initialize:
 16998                           	opt stack 14
 16999                           
 17000                           ;adcc.c: 67: ADLTHL = 0x00;
 17001                           
 17002                           ;incstack = 0
 17003  015A38  0E00               	movlw	0
 17004  015A3A  6E6A               	movwf	3946,c	;volatile
 17005                           
 17006                           ;adcc.c: 69: ADLTHH = 0x00;
 17007  015A3C  0E00               	movlw	0
 17008  015A3E  6E6B               	movwf	3947,c	;volatile
 17009                           
 17010                           ;adcc.c: 71: ADUTHL = 0x00;
 17011  015A40  0E00               	movlw	0
 17012  015A42  6E6C               	movwf	3948,c	;volatile
 17013                           
 17014                           ;adcc.c: 73: ADUTHH = 0x00;
 17015  015A44  0E00               	movlw	0
 17016  015A46  6E6D               	movwf	3949,c	;volatile
 17017                           
 17018                           ;adcc.c: 75: ADSTPTL = 0x00;
 17019  015A48  0E00               	movlw	0
 17020  015A4A  6E68               	movwf	3944,c	;volatile
 17021                           
 17022                           ;adcc.c: 77: ADSTPTH = 0x00;
 17023  015A4C  0E00               	movlw	0
 17024  015A4E  6E69               	movwf	3945,c	;volatile
 17025                           
 17026                           ;adcc.c: 79: ADRPT = 0x00;
 17027  015A50  0E00               	movlw	0
 17028  015A52  6E66               	movwf	3942,c	;volatile
 17029                           
 17030                           ;adcc.c: 81: ADPCH = 0x00;
 17031  015A54  0E00               	movlw	0
 17032  015A56  010F               	movlb	15	; () banked
 17033  015A58  6F5F               	movwf	95,b	;volatile
 17034                           
 17035                           ;adcc.c: 83: ADCAP = 0x00;
 17036  015A5A  0E00               	movlw	0
 17037  015A5C  6F5D               	movwf	93,b	;volatile
 17038                           
 17039                           ;adcc.c: 85: ADCON1 = 0x00;
 17040  015A5E  0E00               	movlw	0
 17041  015A60  6F59               	movwf	89,b	;volatile
 17042                           
 17043                           ;adcc.c: 87: ADCON2 = 0x04;
 17044  015A62  0E04               	movlw	4
 17045  015A64  6F5A               	movwf	90,b	;volatile
 17046                           
 17047                           ;adcc.c: 89: ADCON3 = 0x00;
 17048  015A66  0E00               	movlw	0
 17049  015A68  6F5B               	movwf	91,b	;volatile
 17050                           
 17051                           ;adcc.c: 91: ADSTAT = 0x00;
 17052  015A6A  0E00               	movlw	0
 17053  015A6C  6E65               	movwf	3941,c	;volatile
 17054                           
 17055                           ;adcc.c: 93: ADREF = 0x12;
 17056  015A6E  0E12               	movlw	18
 17057  015A70  6F58               	movwf	88,b	;volatile
 17058                           
 17059                           ;adcc.c: 95: ADACT = 0x00;
 17060  015A72  0E00               	movlw	0
 17061  015A74  6F56               	movwf	86,b	;volatile
 17062                           
 17063                           ;adcc.c: 97: ADCLK = 0x00;
 17064  015A76  0E00               	movlw	0
 17065  015A78  6F57               	movwf	87,b	;volatile
 17066                           
 17067                           ;adcc.c: 99: ADCON0 = 0x94;
 17068  015A7A  0E94               	movlw	148
 17069  015A7C  6E60               	movwf	3936,c	;volatile
 17070                           
 17071                           ;adcc.c: 101: ADACQ = 0x00;
 17072  015A7E  0E00               	movlw	0
 17073  015A80  6F5C               	movwf	92,b	;volatile
 17074                           
 17075                           ; BSR set to: 15
 17076                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 17077  015A82  010E               	movlb	14	; () banked
 17078  015A84  9134               	bcf	52,0,b	;volatile
 17079                           
 17080                           ; BSR set to: 14
 17081                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 17082  015A86  812A               	bsf	42,0,b	;volatile
 17083                           
 17084                           ; BSR set to: 14
 17085                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 17086  015A88  0E3E               	movlw	low _ADCC_DefaultInterruptHandler
 17087  015A8A  0101               	movlb	1	; () banked
 17088  015A8C  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 17089  015A8E  0E64               	movlw	high _ADCC_DefaultInterruptHandler
 17090  015A90  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 17091  015A92  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17092  015A94  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 17093  015A96  ECFC  F0B1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 17094  015A9A  0012               	return		;funcret
 17095  015A9C                     __end_of_ADCC_Initialize:
 17096                           	opt stack 0
 17097                           tblptru	equ	0xFF8
 17098                           tblptrh	equ	0xFF7
 17099                           tblptrl	equ	0xFF6
 17100                           tablat	equ	0xFF5
 17101                           prodh	equ	0xFF4
 17102                           prodl	equ	0xFF3
 17103                           intcon	equ	0xFF2
 17104                           postinc0	equ	0xFEE
 17105                           wreg	equ	0xFE8
 17106                           indf1	equ	0xFE7
 17107                           postdec1	equ	0xFE5
 17108                           fsr1h	equ	0xFE2
 17109                           fsr1l	equ	0xFE1
 17110                           indf2	equ	0xFDF
 17111                           postinc2	equ	0xFDE
 17112                           postdec2	equ	0xFDD
 17113                           fsr2h	equ	0xFDA
 17114                           fsr2l	equ	0xFD9
 17115                           status	equ	0xFD8
 17116                           
 17117 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 17118 ;; Defined at:
 17119 ;;		line 306 in file "mcc_generated_files/adcc.c"
 17120 ;; Parameters:    Size  Location     Type
 17121 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 17122 ;;		 -> ADC_postProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 17123 ;; Auto vars:     Size  Location     Type
 17124 ;;		None
 17125 ;; Return value:  Size  Location     Type
 17126 ;;                  1    wreg      void 
 17127 ;; Registers used:
 17128 ;;		wreg, status,2, status,0
 17129 ;; Tracked objects:
 17130 ;;		On entry : 0/0
 17131 ;;		On exit  : 0/0
 17132 ;;		Unchanged: 0/0
 17133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17134 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17137 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17138 ;;Total ram usage:        3 bytes
 17139 ;; Hardware stack levels used:    1
 17140 ;; Hardware stack levels required when called:   14
 17141 ;; This function calls:
 17142 ;;		Nothing
 17143 ;; This function is called by:
 17144 ;;		_ADCC_Initialize
 17145 ;;		_main
 17146 ;; This function uses a non-reentrant model
 17147 ;;
 17148                           
 17149                           	psect	text56
 17150  0163F8                     __ptext56:
 17151                           	opt stack 0
 17152  0163F8                     _ADCC_SetADIInterruptHandler:
 17153                           	opt stack 14
 17154                           
 17155                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 17156                           
 17157                           ;incstack = 0
 17158  0163F8  C117  F0DD         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 17159  0163FC  C118  F0DE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 17160  016400  C119  F0DF         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 17161  016404  0012               	return		;funcret
 17162  016406                     __end_of_ADCC_SetADIInterruptHandler:
 17163                           	opt stack 0
 17164                           tblptru	equ	0xFF8
 17165                           tblptrh	equ	0xFF7
 17166                           tblptrl	equ	0xFF6
 17167                           tablat	equ	0xFF5
 17168                           prodh	equ	0xFF4
 17169                           prodl	equ	0xFF3
 17170                           intcon	equ	0xFF2
 17171                           postinc0	equ	0xFEE
 17172                           wreg	equ	0xFE8
 17173                           indf1	equ	0xFE7
 17174                           postdec1	equ	0xFE5
 17175                           fsr1h	equ	0xFE2
 17176                           fsr1l	equ	0xFE1
 17177                           indf2	equ	0xFDF
 17178                           postinc2	equ	0xFDE
 17179                           postdec2	equ	0xFDD
 17180                           fsr2h	equ	0xFDA
 17181                           fsr2l	equ	0xFD9
 17182                           status	equ	0xFD8
 17183                           
 17184 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 17185 ;; Defined at:
 17186 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;		None
 17189 ;; Auto vars:     Size  Location     Type
 17190 ;;		None
 17191 ;; Return value:  Size  Location     Type
 17192 ;;                  1    wreg      void 
 17193 ;; Registers used:
 17194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17195 ;; Tracked objects:
 17196 ;;		On entry : 0/0
 17197 ;;		On exit  : 0/0
 17198 ;;		Unchanged: 0/0
 17199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17202 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17203 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17204 ;;Total ram usage:       21 bytes
 17205 ;; Hardware stack levels used:    1
 17206 ;; Hardware stack levels required when called:   13
 17207 ;; This function calls:
 17208 ;;		Absolute function
 17209 ;;		_EUSART2_Transmit_ISR
 17210 ;;		_TMR6_ISR
 17211 ;;		_TMR7_ISR
 17212 ;; This function is called by:
 17213 ;;		Interrupt level 1
 17214 ;; This function uses a non-reentrant model
 17215 ;;
 17216                           
 17217                           	psect	intcodelo
 17218  000018                     __pintcodelo:
 17219                           	opt stack 0
 17220  000018                     _INTERRUPT_InterruptManagerLow:
 17221                           	opt stack 9
 17222                           
 17223                           ;incstack = 0
 17224  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17225  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 17226  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 17227  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 17228  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 17229  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 17230  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 17231  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 17232  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 17233  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 17234  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 17235  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 17236  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 17237  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 17238  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 17239  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 17240  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 17241  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 17242  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 17243  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 17244  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 17245  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 17246                           
 17247                           ;interrupt_manager.c: 104: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 17248  00006E  010E               	movlb	14	; () banked
 17249  000070  BB2E               	btfsc	46,5,b	;volatile
 17250                           
 17251                           ; BSR set to: 14
 17252  000072  AB38               	btfss	56,5,b	;volatile
 17253  000074  D003               	goto	i1l213
 17254                           
 17255                           ; BSR set to: 14
 17256                           ;interrupt_manager.c: 105: {
 17257                           ;interrupt_manager.c: 106: TMR6_ISR();
 17258  000076  ECCF  F0B0         	call	_TMR6_ISR	;wreg free
 17259                           
 17260                           ;interrupt_manager.c: 107: }
 17261  00007A  D015               	goto	i1l217
 17262  00007C                     i1l213:
 17263                           
 17264                           ; BSR set to: 14
 17265                           ;interrupt_manager.c: 108: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 17266  00007C  BD2C               	btfsc	44,6,b	;volatile
 17267                           
 17268                           ; BSR set to: 14
 17269  00007E  AD36               	btfss	54,6,b	;volatile
 17270  000080  D00D               	goto	i1l215
 17271                           
 17272                           ; BSR set to: 14
 17273                           ;interrupt_manager.c: 109: {
 17274                           ;interrupt_manager.c: 110: EUSART2_TxDefaultInterruptHandler();
 17275  000082  D801               	call	i1u1631_28
 17276  000084  D010               	goto	i1l217
 17277  000086                     i1u1631_28:
 17278  000086  0005               	push	
 17279  000088  6EFA               	movwf	pclath,c
 17280  00008A  0101               	movlb	1	; () banked
 17281  00008C  51CF               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 17282  00008E  6EFD               	movwf	tosl,c
 17283  000090  51D0               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 17284  000092  6EFE               	movwf	tosh,c
 17285  000094  51D1               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 17286  000096  6EFF               	movwf	tosu,c
 17287  000098  50FA               	movf	pclath,w,c
 17288  00009A  0012               	return		;indir
 17289  00009C                     i1l215:
 17290                           
 17291                           ; BSR set to: 14
 17292                           ;interrupt_manager.c: 112: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 17293  00009C  BD2E               	btfsc	46,6,b	;volatile
 17294                           
 17295                           ; BSR set to: 14
 17296  00009E  AD38               	btfss	56,6,b	;volatile
 17297  0000A0  D002               	goto	i1l217
 17298                           
 17299                           ; BSR set to: 14
 17300                           ;interrupt_manager.c: 113: {
 17301                           ;interrupt_manager.c: 114: TMR7_ISR();
 17302  0000A2  EC2A  F0B0         	call	_TMR7_ISR	;wreg free
 17303  0000A6                     i1l217:
 17304                           
 17305                           ;interrupt_manager.c: 116: else
 17306                           ;interrupt_manager.c: 117: {
 17307  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 17308  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 17309  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 17310  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 17311  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 17312  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 17313  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 17314  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 17315  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 17316  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 17317  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 17318  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 17319  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 17320  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 17321  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 17322  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 17323  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 17324  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 17325  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 17326  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 17327  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 17328  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17329  0000FC  0010               	retfie	
 17330  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 17331                           	opt stack 0
 17332                           tosu	equ	0xFFF
 17333                           tosh	equ	0xFFE
 17334                           tosl	equ	0xFFD
 17335                           pclatu	equ	0xFFB
 17336                           pclath	equ	0xFFA
 17337                           tblptru	equ	0xFF8
 17338                           tblptrh	equ	0xFF7
 17339                           tblptrl	equ	0xFF6
 17340                           tablat	equ	0xFF5
 17341                           prodh	equ	0xFF4
 17342                           prodl	equ	0xFF3
 17343                           intcon	equ	0xFF2
 17344                           postinc0	equ	0xFEE
 17345                           fsr0h	equ	0xFEA
 17346                           fsr0l	equ	0xFE9
 17347                           wreg	equ	0xFE8
 17348                           indf1	equ	0xFE7
 17349                           postdec1	equ	0xFE5
 17350                           fsr1h	equ	0xFE2
 17351                           fsr1l	equ	0xFE1
 17352                           bsr	equ	0xFE0
 17353                           indf2	equ	0xFDF
 17354                           postinc2	equ	0xFDE
 17355                           postdec2	equ	0xFDD
 17356                           fsr2h	equ	0xFDA
 17357                           fsr2l	equ	0xFD9
 17358                           status	equ	0xFD8
 17359                           
 17360 ;; *************** function _TMR7_ISR *****************
 17361 ;; Defined at:
 17362 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 17363 ;; Parameters:    Size  Location     Type
 17364 ;;		None
 17365 ;; Auto vars:     Size  Location     Type
 17366 ;;		None
 17367 ;; Return value:  Size  Location     Type
 17368 ;;                  1    wreg      void 
 17369 ;; Registers used:
 17370 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17371 ;; Tracked objects:
 17372 ;;		On entry : 0/0
 17373 ;;		On exit  : 0/0
 17374 ;;		Unchanged: 0/0
 17375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17380 ;;Total ram usage:        0 bytes
 17381 ;; Hardware stack levels used:    1
 17382 ;; Hardware stack levels required when called:   12
 17383 ;; This function calls:
 17384 ;;		Absolute function
 17385 ;;		_TMR7_DefaultInterruptHandler
 17386 ;;		_TMR7_WriteTimer
 17387 ;;		_acquisitionTimerCallback
 17388 ;; This function is called by:
 17389 ;;		_INTERRUPT_InterruptManagerLow
 17390 ;; This function uses a non-reentrant model
 17391 ;;
 17392                           
 17393                           	psect	text58
 17394  016054                     __ptext58:
 17395                           	opt stack 0
 17396  016054                     _TMR7_ISR:
 17397                           	opt stack 9
 17398                           
 17399                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 17400                           
 17401                           ;incstack = 0
 17402  016054  010E               	movlb	14	; () banked
 17403  016056  9D38               	bcf	56,6,b	;volatile
 17404                           
 17405                           ; BSR set to: 14
 17406                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 17407  016058  C1D4  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 17408  01605C  C1D5  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 17409  016060  EC0A  F0B1         	call	_TMR7_WriteTimer	;wreg free
 17410                           
 17411                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 17412  016064  0101               	movlb	1	; () banked
 17413  016066  51C9               	movf	_TMR7_InterruptHandler& (0+255),w,b
 17414  016068  11CA               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 17415  01606A  11CB               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 17416  01606C  B4D8               	btfsc	status,2,c
 17417  01606E  0012               	return	
 17418                           
 17419                           ; BSR set to: 1
 17420                           ;tmr7.c: 172: {
 17421                           ;tmr7.c: 173: TMR7_InterruptHandler();
 17422  016070  D801               	call	i1u1613_28
 17423  016072  0012               	return	
 17424  016074                     i1u1613_28:
 17425  016074  0005               	push	
 17426  016076  6EFA               	movwf	pclath,c
 17427  016078  51C9               	movf	_TMR7_InterruptHandler& (0+255),w,b
 17428  01607A  6EFD               	movwf	tosl,c
 17429  01607C  51CA               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 17430  01607E  6EFE               	movwf	tosh,c
 17431  016080  51CB               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 17432  016082  6EFF               	movwf	tosu,c
 17433  016084  50FA               	movf	pclath,w,c
 17434  016086  0012               	return		;indir
 17435  016088                     __end_of_TMR7_ISR:
 17436                           	opt stack 0
 17437                           tosu	equ	0xFFF
 17438                           tosh	equ	0xFFE
 17439                           tosl	equ	0xFFD
 17440                           pclatu	equ	0xFFB
 17441                           pclath	equ	0xFFA
 17442                           tblptru	equ	0xFF8
 17443                           tblptrh	equ	0xFF7
 17444                           tblptrl	equ	0xFF6
 17445                           tablat	equ	0xFF5
 17446                           prodh	equ	0xFF4
 17447                           prodl	equ	0xFF3
 17448                           intcon	equ	0xFF2
 17449                           postinc0	equ	0xFEE
 17450                           fsr0h	equ	0xFEA
 17451                           fsr0l	equ	0xFE9
 17452                           wreg	equ	0xFE8
 17453                           indf1	equ	0xFE7
 17454                           postdec1	equ	0xFE5
 17455                           fsr1h	equ	0xFE2
 17456                           fsr1l	equ	0xFE1
 17457                           bsr	equ	0xFE0
 17458                           indf2	equ	0xFDF
 17459                           postinc2	equ	0xFDE
 17460                           postdec2	equ	0xFDD
 17461                           fsr2h	equ	0xFDA
 17462                           fsr2l	equ	0xFD9
 17463                           status	equ	0xFD8
 17464                           
 17465 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 17466 ;; Defined at:
 17467 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 17468 ;; Parameters:    Size  Location     Type
 17469 ;;		None
 17470 ;; Auto vars:     Size  Location     Type
 17471 ;;		None
 17472 ;; Return value:  Size  Location     Type
 17473 ;;                  1    wreg      void 
 17474 ;; Registers used:
 17475 ;;		None
 17476 ;; Tracked objects:
 17477 ;;		On entry : 0/0
 17478 ;;		On exit  : 0/0
 17479 ;;		Unchanged: 0/0
 17480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17485 ;;Total ram usage:        0 bytes
 17486 ;; Hardware stack levels used:    1
 17487 ;; Hardware stack levels required when called:   10
 17488 ;; This function calls:
 17489 ;;		Nothing
 17490 ;; This function is called by:
 17491 ;;		_TMR7_Initialize
 17492 ;;		_TMR7_ISR
 17493 ;; This function uses a non-reentrant model
 17494 ;;
 17495                           
 17496                           	psect	text59
 17497  016438                     __ptext59:
 17498                           	opt stack 0
 17499  016438                     _TMR7_DefaultInterruptHandler:
 17500                           	opt stack 10
 17501                           
 17502                           ;incstack = 0
 17503  016438  0012               	return		;funcret
 17504  01643A                     __end_of_TMR7_DefaultInterruptHandler:
 17505                           	opt stack 0
 17506                           tosu	equ	0xFFF
 17507                           tosh	equ	0xFFE
 17508                           tosl	equ	0xFFD
 17509                           pclatu	equ	0xFFB
 17510                           pclath	equ	0xFFA
 17511                           tblptru	equ	0xFF8
 17512                           tblptrh	equ	0xFF7
 17513                           tblptrl	equ	0xFF6
 17514                           tablat	equ	0xFF5
 17515                           prodh	equ	0xFF4
 17516                           prodl	equ	0xFF3
 17517                           intcon	equ	0xFF2
 17518                           postinc0	equ	0xFEE
 17519                           fsr0h	equ	0xFEA
 17520                           fsr0l	equ	0xFE9
 17521                           wreg	equ	0xFE8
 17522                           indf1	equ	0xFE7
 17523                           postdec1	equ	0xFE5
 17524                           fsr1h	equ	0xFE2
 17525                           fsr1l	equ	0xFE1
 17526                           bsr	equ	0xFE0
 17527                           indf2	equ	0xFDF
 17528                           postinc2	equ	0xFDE
 17529                           postdec2	equ	0xFDD
 17530                           fsr2h	equ	0xFDA
 17531                           fsr2l	equ	0xFD9
 17532                           status	equ	0xFD8
 17533                           
 17534 ;; *************** function _acquisitionTimerCallback *****************
 17535 ;; Defined at:
 17536 ;;		line 235 in file "main.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;		None
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;		None
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  1    wreg      void 
 17543 ;; Registers used:
 17544 ;;		wreg, status,2, cstack
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17554 ;;Total ram usage:        0 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:   11
 17557 ;; This function calls:
 17558 ;;		_ADCC_IsConversionDone
 17559 ;;		_ADCC_StartConversion
 17560 ;; This function is called by:
 17561 ;;		_main
 17562 ;;		_TMR7_ISR
 17563 ;; This function uses a non-reentrant model
 17564 ;;
 17565                           
 17566                           	psect	text60
 17567  015A9C                     __ptext60:
 17568                           	opt stack 0
 17569  015A9C                     _acquisitionTimerCallback:
 17570                           	opt stack 9
 17571                           
 17572                           ;main.c: 238: ADCC_StartConversion(channel_VSS);
 17573                           
 17574                           ;incstack = 0
 17575  015A9C  0E3C               	movlw	60
 17576  015A9E  EC03  F0B2         	call	_ADCC_StartConversion
 17577  015AA2  EC0A  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17578  015AA6  0900               	iorlw	0
 17579  015AA8  B4D8               	btfsc	status,2,c
 17580  015AAA  D7FB               	goto	i1l834
 17581                           
 17582                           ;main.c: 245: ADCC_StartConversion(channel_FVR_buf1);
 17583  015AAC  0E3F               	movlw	63
 17584  015AAE  EC03  F0B2         	call	_ADCC_StartConversion
 17585  015AB2  EC0A  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17586  015AB6  0900               	iorlw	0
 17587  015AB8  B4D8               	btfsc	status,2,c
 17588  015ABA  D7FB               	goto	i1l837
 17589                           
 17590                           ;main.c: 251: ADCC_StartConversion(POS3P3_ADC);
 17591  015ABC  0E22               	movlw	34
 17592  015ABE  EC03  F0B2         	call	_ADCC_StartConversion
 17593  015AC2  EC0A  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17594  015AC6  0900               	iorlw	0
 17595  015AC8  B4D8               	btfsc	status,2,c
 17596  015ACA  D7FB               	goto	i1l840
 17597                           
 17598                           ;main.c: 257: ADCC_StartConversion(ISNS_ADC);
 17599  015ACC  0E00               	movlw	0
 17600  015ACE  EC03  F0B2         	call	_ADCC_StartConversion
 17601  015AD2  EC0A  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17602  015AD6  0900               	iorlw	0
 17603  015AD8  B4D8               	btfsc	status,2,c
 17604  015ADA  D7FB               	goto	i1l843
 17605                           
 17606                           ;main.c: 263: ADCC_StartConversion(POS12_ADC);
 17607  015ADC  0E04               	movlw	4
 17608  015ADE  EC03  F0B2         	call	_ADCC_StartConversion
 17609  015AE2  EC0A  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17610  015AE6  0900               	iorlw	0
 17611  015AE8  B4D8               	btfsc	status,2,c
 17612  015AEA  D7FB               	goto	i1l846
 17613                           
 17614                           ;main.c: 269: ADCC_StartConversion(channel_Temp);
 17615  015AEC  0E3D               	movlw	61
 17616  015AEE  EC03  F0B2         	call	_ADCC_StartConversion
 17617  015AF2  EC0A  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17618  015AF6  0900               	iorlw	0
 17619  015AF8  A4D8               	btfss	status,2,c
 17620  015AFA  0012               	return	
 17621  015AFC  D7FA               	goto	i1l849
 17622  015AFE                     __end_of_acquisitionTimerCallback:
 17623                           	opt stack 0
 17624                           tosu	equ	0xFFF
 17625                           tosh	equ	0xFFE
 17626                           tosl	equ	0xFFD
 17627                           pclatu	equ	0xFFB
 17628                           pclath	equ	0xFFA
 17629                           tblptru	equ	0xFF8
 17630                           tblptrh	equ	0xFF7
 17631                           tblptrl	equ	0xFF6
 17632                           tablat	equ	0xFF5
 17633                           prodh	equ	0xFF4
 17634                           prodl	equ	0xFF3
 17635                           intcon	equ	0xFF2
 17636                           postinc0	equ	0xFEE
 17637                           fsr0h	equ	0xFEA
 17638                           fsr0l	equ	0xFE9
 17639                           wreg	equ	0xFE8
 17640                           indf1	equ	0xFE7
 17641                           postdec1	equ	0xFE5
 17642                           fsr1h	equ	0xFE2
 17643                           fsr1l	equ	0xFE1
 17644                           bsr	equ	0xFE0
 17645                           indf2	equ	0xFDF
 17646                           postinc2	equ	0xFDE
 17647                           postdec2	equ	0xFDD
 17648                           fsr2h	equ	0xFDA
 17649                           fsr2l	equ	0xFD9
 17650                           status	equ	0xFD8
 17651                           
 17652 ;; *************** function _ADCC_StartConversion *****************
 17653 ;; Defined at:
 17654 ;;		line 112 in file "mcc_generated_files/adcc.c"
 17655 ;; Parameters:    Size  Location     Type
 17656 ;;  channel         1    wreg     enum E17310
 17657 ;; Auto vars:     Size  Location     Type
 17658 ;;  channel         1    0[BANK1 ] enum E17310
 17659 ;; Return value:  Size  Location     Type
 17660 ;;                  1    wreg      void 
 17661 ;; Registers used:
 17662 ;;		wreg
 17663 ;; Tracked objects:
 17664 ;;		On entry : 0/0
 17665 ;;		On exit  : 0/0
 17666 ;;		Unchanged: 0/0
 17667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17669 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17671 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17672 ;;Total ram usage:        1 bytes
 17673 ;; Hardware stack levels used:    1
 17674 ;; Hardware stack levels required when called:   10
 17675 ;; This function calls:
 17676 ;;		Nothing
 17677 ;; This function is called by:
 17678 ;;		_acquisitionTimerCallback
 17679 ;; This function uses a non-reentrant model
 17680 ;;
 17681                           
 17682                           	psect	text61
 17683  016406                     __ptext61:
 17684                           	opt stack 0
 17685  016406                     _ADCC_StartConversion:
 17686                           	opt stack 9
 17687                           
 17688                           ;incstack = 0
 17689                           ;ADCC_StartConversion@channel stored from wreg
 17690  016406  0101               	movlb	1	; () banked
 17691  016408  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 17692                           
 17693                           ;adcc.c: 115: ADPCH = channel;
 17694  01640A  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 17695                           
 17696                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 17697  01640E  8E60               	bsf	3936,7,c	;volatile
 17698                           
 17699                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 17700  016410  8060               	bsf	3936,0,c	;volatile
 17701  016412  0012               	return		;funcret
 17702  016414                     __end_of_ADCC_StartConversion:
 17703                           	opt stack 0
 17704                           tosu	equ	0xFFF
 17705                           tosh	equ	0xFFE
 17706                           tosl	equ	0xFFD
 17707                           pclatu	equ	0xFFB
 17708                           pclath	equ	0xFFA
 17709                           tblptru	equ	0xFF8
 17710                           tblptrh	equ	0xFF7
 17711                           tblptrl	equ	0xFF6
 17712                           tablat	equ	0xFF5
 17713                           prodh	equ	0xFF4
 17714                           prodl	equ	0xFF3
 17715                           intcon	equ	0xFF2
 17716                           postinc0	equ	0xFEE
 17717                           fsr0h	equ	0xFEA
 17718                           fsr0l	equ	0xFE9
 17719                           wreg	equ	0xFE8
 17720                           indf1	equ	0xFE7
 17721                           postdec1	equ	0xFE5
 17722                           fsr1h	equ	0xFE2
 17723                           fsr1l	equ	0xFE1
 17724                           bsr	equ	0xFE0
 17725                           indf2	equ	0xFDF
 17726                           postinc2	equ	0xFDE
 17727                           postdec2	equ	0xFDD
 17728                           fsr2h	equ	0xFDA
 17729                           fsr2l	equ	0xFD9
 17730                           status	equ	0xFD8
 17731                           
 17732 ;; *************** function _ADCC_IsConversionDone *****************
 17733 ;; Defined at:
 17734 ;;		line 124 in file "mcc_generated_files/adcc.c"
 17735 ;; Parameters:    Size  Location     Type
 17736 ;;		None
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;		None
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  1    wreg      unsigned char 
 17741 ;; Registers used:
 17742 ;;		wreg
 17743 ;; Tracked objects:
 17744 ;;		On entry : 0/0
 17745 ;;		On exit  : 0/0
 17746 ;;		Unchanged: 0/0
 17747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17752 ;;Total ram usage:        0 bytes
 17753 ;; Hardware stack levels used:    1
 17754 ;; Hardware stack levels required when called:   10
 17755 ;; This function calls:
 17756 ;;		Nothing
 17757 ;; This function is called by:
 17758 ;;		_acquisitionTimerCallback
 17759 ;; This function uses a non-reentrant model
 17760 ;;
 17761                           
 17762                           	psect	text62
 17763  016414                     __ptext62:
 17764                           	opt stack 0
 17765  016414                     _ADCC_IsConversionDone:
 17766                           	opt stack 9
 17767                           
 17768                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 17769                           
 17770                           ;incstack = 0
 17771  016414  B060               	btfsc	3936,0,c	;volatile
 17772  016416  D002               	goto	i1u683_20
 17773  016418  0E01               	movlw	1
 17774  01641A  0012               	return	
 17775  01641C                     i1u683_20:
 17776  01641C  0E00               	movlw	0
 17777  01641E  0012               	return	
 17778  016420                     __end_of_ADCC_IsConversionDone:
 17779                           	opt stack 0
 17780                           tosu	equ	0xFFF
 17781                           tosh	equ	0xFFE
 17782                           tosl	equ	0xFFD
 17783                           pclatu	equ	0xFFB
 17784                           pclath	equ	0xFFA
 17785                           tblptru	equ	0xFF8
 17786                           tblptrh	equ	0xFF7
 17787                           tblptrl	equ	0xFF6
 17788                           tablat	equ	0xFF5
 17789                           prodh	equ	0xFF4
 17790                           prodl	equ	0xFF3
 17791                           intcon	equ	0xFF2
 17792                           postinc0	equ	0xFEE
 17793                           fsr0h	equ	0xFEA
 17794                           fsr0l	equ	0xFE9
 17795                           wreg	equ	0xFE8
 17796                           indf1	equ	0xFE7
 17797                           postdec1	equ	0xFE5
 17798                           fsr1h	equ	0xFE2
 17799                           fsr1l	equ	0xFE1
 17800                           bsr	equ	0xFE0
 17801                           indf2	equ	0xFDF
 17802                           postinc2	equ	0xFDE
 17803                           postdec2	equ	0xFDD
 17804                           fsr2h	equ	0xFDA
 17805                           fsr2l	equ	0xFD9
 17806                           status	equ	0xFD8
 17807                           
 17808 ;; *************** function _TMR7_WriteTimer *****************
 17809 ;; Defined at:
 17810 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 17811 ;; Parameters:    Size  Location     Type
 17812 ;;  timerVal        2    0[BANK1 ] unsigned int 
 17813 ;; Auto vars:     Size  Location     Type
 17814 ;;		None
 17815 ;; Return value:  Size  Location     Type
 17816 ;;                  1    wreg      void 
 17817 ;; Registers used:
 17818 ;;		wreg, status,2
 17819 ;; Tracked objects:
 17820 ;;		On entry : 0/0
 17821 ;;		On exit  : 0/0
 17822 ;;		Unchanged: 0/0
 17823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17824 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17827 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17828 ;;Total ram usage:        2 bytes
 17829 ;; Hardware stack levels used:    1
 17830 ;; Hardware stack levels required when called:   10
 17831 ;; This function calls:
 17832 ;;		Nothing
 17833 ;; This function is called by:
 17834 ;;		_TMR7_ISR
 17835 ;;		_TMR7_Reload
 17836 ;; This function uses a non-reentrant model
 17837 ;;
 17838                           
 17839                           	psect	text63
 17840  016214                     __ptext63:
 17841                           	opt stack 0
 17842  016214                     _TMR7_WriteTimer:
 17843                           	opt stack 10
 17844                           
 17845                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 17846                           
 17847                           ;incstack = 0
 17848  016214  010F               	movlb	15	; () banked
 17849  016216  A530               	btfss	48,2,b	;volatile
 17850  016218  D009               	goto	i1l626
 17851                           
 17852                           ; BSR set to: 15
 17853                           ;tmr7.c: 130: {
 17854                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 17855  01621A  9130               	bcf	48,0,b	;volatile
 17856                           
 17857                           ; BSR set to: 15
 17858                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 17859  01621C  0101               	movlb	1	; () banked
 17860  01621E  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 17861  016220  010F               	movlb	15	; () banked
 17862  016222  6F2F               	movwf	47,b	;volatile
 17863                           
 17864                           ; BSR set to: 15
 17865                           ;tmr7.c: 136: TMR7L = timerVal;
 17866  016224  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 17867                           
 17868                           ; BSR set to: 15
 17869                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 17870  016228  8130               	bsf	48,0,b	;volatile
 17871                           
 17872                           ;tmr7.c: 140: }
 17873  01622A  0012               	return	
 17874  01622C                     i1l626:
 17875                           
 17876                           ; BSR set to: 15
 17877                           ;tmr7.c: 141: else
 17878                           ;tmr7.c: 142: {
 17879                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 17880                           
 17881                           ; BSR set to: 15
 17882  01622C  0101               	movlb	1	; () banked
 17883  01622E  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 17884  016230  010F               	movlb	15	; () banked
 17885  016232  6F2F               	movwf	47,b	;volatile
 17886                           
 17887                           ; BSR set to: 15
 17888                           ;tmr7.c: 145: TMR7L = timerVal;
 17889  016234  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 17890  016238  0012               	return	
 17891  01623A                     __end_of_TMR7_WriteTimer:
 17892                           	opt stack 0
 17893                           tosu	equ	0xFFF
 17894                           tosh	equ	0xFFE
 17895                           tosl	equ	0xFFD
 17896                           pclatu	equ	0xFFB
 17897                           pclath	equ	0xFFA
 17898                           tblptru	equ	0xFF8
 17899                           tblptrh	equ	0xFF7
 17900                           tblptrl	equ	0xFF6
 17901                           tablat	equ	0xFF5
 17902                           prodh	equ	0xFF4
 17903                           prodl	equ	0xFF3
 17904                           intcon	equ	0xFF2
 17905                           postinc0	equ	0xFEE
 17906                           fsr0h	equ	0xFEA
 17907                           fsr0l	equ	0xFE9
 17908                           wreg	equ	0xFE8
 17909                           indf1	equ	0xFE7
 17910                           postdec1	equ	0xFE5
 17911                           fsr1h	equ	0xFE2
 17912                           fsr1l	equ	0xFE1
 17913                           bsr	equ	0xFE0
 17914                           indf2	equ	0xFDF
 17915                           postinc2	equ	0xFDE
 17916                           postdec2	equ	0xFDD
 17917                           fsr2h	equ	0xFDA
 17918                           fsr2l	equ	0xFD9
 17919                           status	equ	0xFD8
 17920                           
 17921 ;; *************** function _TMR6_ISR *****************
 17922 ;; Defined at:
 17923 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 17924 ;; Parameters:    Size  Location     Type
 17925 ;;		None
 17926 ;; Auto vars:     Size  Location     Type
 17927 ;;		None
 17928 ;; Return value:  Size  Location     Type
 17929 ;;                  1    wreg      void 
 17930 ;; Registers used:
 17931 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17932 ;; Tracked objects:
 17933 ;;		On entry : 0/0
 17934 ;;		On exit  : 0/0
 17935 ;;		Unchanged: 0/0
 17936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17941 ;;Total ram usage:        0 bytes
 17942 ;; Hardware stack levels used:    1
 17943 ;; Hardware stack levels required when called:   11
 17944 ;; This function calls:
 17945 ;;		Absolute function
 17946 ;;		_TMR6_DefaultInterruptHandler
 17947 ;;		_heartbeatTimerCallback
 17948 ;; This function is called by:
 17949 ;;		_INTERRUPT_InterruptManagerLow
 17950 ;; This function uses a non-reentrant model
 17951 ;;
 17952                           
 17953                           	psect	text64
 17954  01619E                     __ptext64:
 17955                           	opt stack 0
 17956  01619E                     _TMR6_ISR:
 17957                           	opt stack 10
 17958                           
 17959                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 17960                           
 17961                           ; BSR set to: 15
 17962                           ;incstack = 0
 17963  01619E  010E               	movlb	14	; () banked
 17964  0161A0  9B38               	bcf	56,5,b	;volatile
 17965                           
 17966                           ; BSR set to: 14
 17967                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 17968  0161A2  0101               	movlb	1	; () banked
 17969  0161A4  51CC               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17970  0161A6  11CD               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17971  0161A8  11CE               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17972  0161AA  B4D8               	btfsc	status,2,c
 17973  0161AC  0012               	return	
 17974                           
 17975                           ; BSR set to: 1
 17976                           ;tmr6.c: 172: {
 17977                           ;tmr6.c: 173: TMR6_InterruptHandler();
 17978  0161AE  D801               	call	i1u1611_28
 17979  0161B0  0012               	return	
 17980  0161B2                     i1u1611_28:
 17981  0161B2  0005               	push	
 17982  0161B4  6EFA               	movwf	pclath,c
 17983  0161B6  51CC               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17984  0161B8  6EFD               	movwf	tosl,c
 17985  0161BA  51CD               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17986  0161BC  6EFE               	movwf	tosh,c
 17987  0161BE  51CE               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17988  0161C0  6EFF               	movwf	tosu,c
 17989  0161C2  50FA               	movf	pclath,w,c
 17990  0161C4  0012               	return		;indir
 17991  0161C6                     __end_of_TMR6_ISR:
 17992                           	opt stack 0
 17993                           tosu	equ	0xFFF
 17994                           tosh	equ	0xFFE
 17995                           tosl	equ	0xFFD
 17996                           pclatu	equ	0xFFB
 17997                           pclath	equ	0xFFA
 17998                           tblptru	equ	0xFF8
 17999                           tblptrh	equ	0xFF7
 18000                           tblptrl	equ	0xFF6
 18001                           tablat	equ	0xFF5
 18002                           prodh	equ	0xFF4
 18003                           prodl	equ	0xFF3
 18004                           intcon	equ	0xFF2
 18005                           postinc0	equ	0xFEE
 18006                           fsr0h	equ	0xFEA
 18007                           fsr0l	equ	0xFE9
 18008                           wreg	equ	0xFE8
 18009                           indf1	equ	0xFE7
 18010                           postdec1	equ	0xFE5
 18011                           fsr1h	equ	0xFE2
 18012                           fsr1l	equ	0xFE1
 18013                           bsr	equ	0xFE0
 18014                           indf2	equ	0xFDF
 18015                           postinc2	equ	0xFDE
 18016                           postdec2	equ	0xFDD
 18017                           fsr2h	equ	0xFDA
 18018                           fsr2l	equ	0xFD9
 18019                           status	equ	0xFD8
 18020                           
 18021 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 18022 ;; Defined at:
 18023 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 18024 ;; Parameters:    Size  Location     Type
 18025 ;;		None
 18026 ;; Auto vars:     Size  Location     Type
 18027 ;;		None
 18028 ;; Return value:  Size  Location     Type
 18029 ;;                  1    wreg      void 
 18030 ;; Registers used:
 18031 ;;		None
 18032 ;; Tracked objects:
 18033 ;;		On entry : 0/0
 18034 ;;		On exit  : 0/0
 18035 ;;		Unchanged: 0/0
 18036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18041 ;;Total ram usage:        0 bytes
 18042 ;; Hardware stack levels used:    1
 18043 ;; Hardware stack levels required when called:   10
 18044 ;; This function calls:
 18045 ;;		Nothing
 18046 ;; This function is called by:
 18047 ;;		_TMR6_Initialize
 18048 ;;		_TMR6_ISR
 18049 ;; This function uses a non-reentrant model
 18050 ;;
 18051                           
 18052                           	psect	text65
 18053  01643A                     __ptext65:
 18054                           	opt stack 0
 18055  01643A                     _TMR6_DefaultInterruptHandler:
 18056                           	opt stack 10
 18057                           
 18058                           ;incstack = 0
 18059  01643A  0012               	return		;funcret
 18060  01643C                     __end_of_TMR6_DefaultInterruptHandler:
 18061                           	opt stack 0
 18062                           tosu	equ	0xFFF
 18063                           tosh	equ	0xFFE
 18064                           tosl	equ	0xFFD
 18065                           pclatu	equ	0xFFB
 18066                           pclath	equ	0xFFA
 18067                           tblptru	equ	0xFF8
 18068                           tblptrh	equ	0xFF7
 18069                           tblptrl	equ	0xFF6
 18070                           tablat	equ	0xFF5
 18071                           prodh	equ	0xFF4
 18072                           prodl	equ	0xFF3
 18073                           intcon	equ	0xFF2
 18074                           postinc0	equ	0xFEE
 18075                           fsr0h	equ	0xFEA
 18076                           fsr0l	equ	0xFE9
 18077                           wreg	equ	0xFE8
 18078                           indf1	equ	0xFE7
 18079                           postdec1	equ	0xFE5
 18080                           fsr1h	equ	0xFE2
 18081                           fsr1l	equ	0xFE1
 18082                           bsr	equ	0xFE0
 18083                           indf2	equ	0xFDF
 18084                           postinc2	equ	0xFDE
 18085                           postdec2	equ	0xFDD
 18086                           fsr2h	equ	0xFDA
 18087                           fsr2l	equ	0xFD9
 18088                           status	equ	0xFD8
 18089                           
 18090 ;; *************** function _heartbeatTimerCallback *****************
 18091 ;; Defined at:
 18092 ;;		line 126 in file "main.c"
 18093 ;; Parameters:    Size  Location     Type
 18094 ;;		None
 18095 ;; Auto vars:     Size  Location     Type
 18096 ;;		None
 18097 ;; Return value:  Size  Location     Type
 18098 ;;                  1    wreg      void 
 18099 ;; Registers used:
 18100 ;;		wreg, status,2, status,0
 18101 ;; Tracked objects:
 18102 ;;		On entry : 0/0
 18103 ;;		On exit  : 0/0
 18104 ;;		Unchanged: 0/0
 18105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18108 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18109 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18110 ;;Total ram usage:        1 bytes
 18111 ;; Hardware stack levels used:    1
 18112 ;; Hardware stack levels required when called:   10
 18113 ;; This function calls:
 18114 ;;		Nothing
 18115 ;; This function is called by:
 18116 ;;		_main
 18117 ;;		_TMR6_ISR
 18118 ;; This function uses a non-reentrant model
 18119 ;;
 18120                           
 18121                           	psect	text66
 18122  01611E                     __ptext66:
 18123                           	opt stack 0
 18124  01611E                     _heartbeatTimerCallback:
 18125                           	opt stack 10
 18126                           
 18127                           ;main.c: 129: LATFbits.LATF2 = !LATFbits.LATF2;
 18128                           
 18129                           ;incstack = 0
 18130  01611E  B47E               	btfsc	3966,2,c	;volatile
 18131  016120  D004               	goto	i1u739_20
 18132  016122  0101               	movlb	1	; () banked
 18133  016124  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 18134  016126  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 18135  016128  D002               	goto	i1u740_28
 18136  01612A                     i1u739_20:
 18137  01612A  0101               	movlb	1	; () banked
 18138  01612C  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 18139  01612E                     i1u740_28:
 18140  01612E  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 18141  016130  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 18142  016132  507E               	movf	3966,w,c	;volatile
 18143  016134  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 18144  016136  0BFB               	andlw	-5
 18145  016138  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 18146  01613A  6E7E               	movwf	3966,c	;volatile
 18147                           
 18148                           ;main.c: 132: on_time++;
 18149  01613C  0E01               	movlw	1
 18150  01613E  27B9               	addwf	_on_time& (0+255),f,b	;volatile
 18151  016140  0E00               	movlw	0
 18152  016142  23BA               	addwfc	(_on_time+1)& (0+255),f,b	;volatile
 18153  016144  23BB               	addwfc	(_on_time+2)& (0+255),f,b	;volatile
 18154  016146  23BC               	addwfc	(_on_time+3)& (0+255),f,b	;volatile
 18155  016148  0004               	clrwdt		;# 
 18156  01614A  0012               	return		;funcret
 18157  01614C                     __end_of_heartbeatTimerCallback:
 18158                           	opt stack 0
 18159                           tosu	equ	0xFFF
 18160                           tosh	equ	0xFFE
 18161                           tosl	equ	0xFFD
 18162                           pclatu	equ	0xFFB
 18163                           pclath	equ	0xFFA
 18164                           tblptru	equ	0xFF8
 18165                           tblptrh	equ	0xFF7
 18166                           tblptrl	equ	0xFF6
 18167                           tablat	equ	0xFF5
 18168                           prodh	equ	0xFF4
 18169                           prodl	equ	0xFF3
 18170                           intcon	equ	0xFF2
 18171                           postinc0	equ	0xFEE
 18172                           fsr0h	equ	0xFEA
 18173                           fsr0l	equ	0xFE9
 18174                           wreg	equ	0xFE8
 18175                           indf1	equ	0xFE7
 18176                           postdec1	equ	0xFE5
 18177                           fsr1h	equ	0xFE2
 18178                           fsr1l	equ	0xFE1
 18179                           bsr	equ	0xFE0
 18180                           indf2	equ	0xFDF
 18181                           postinc2	equ	0xFDE
 18182                           postdec2	equ	0xFDD
 18183                           fsr2h	equ	0xFDA
 18184                           fsr2l	equ	0xFD9
 18185                           status	equ	0xFD8
 18186                           
 18187 ;; *************** function _EUSART2_Transmit_ISR *****************
 18188 ;; Defined at:
 18189 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 18190 ;; Parameters:    Size  Location     Type
 18191 ;;		None
 18192 ;; Auto vars:     Size  Location     Type
 18193 ;;		None
 18194 ;; Return value:  Size  Location     Type
 18195 ;;                  1    wreg      void 
 18196 ;; Registers used:
 18197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18198 ;; Tracked objects:
 18199 ;;		On entry : 0/0
 18200 ;;		On exit  : 0/0
 18201 ;;		Unchanged: 0/0
 18202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18207 ;;Total ram usage:        0 bytes
 18208 ;; Hardware stack levels used:    1
 18209 ;; Hardware stack levels required when called:   10
 18210 ;; This function calls:
 18211 ;;		Nothing
 18212 ;; This function is called by:
 18213 ;;		_EUSART2_Initialize
 18214 ;;		_INTERRUPT_InterruptManagerLow
 18215 ;; This function uses a non-reentrant model
 18216 ;;
 18217                           
 18218                           	psect	text67
 18219  01601E                     __ptext67:
 18220                           	opt stack 0
 18221  01601E                     _EUSART2_Transmit_ISR:
 18222                           	opt stack 11
 18223                           
 18224                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 18225                           
 18226                           ;incstack = 0
 18227  01601E  0E80               	movlw	128
 18228  016020  0101               	movlb	1	; () banked
 18229  016022  61D8               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 18230  016024  D014               	goto	i1l389
 18231                           
 18232                           ; BSR set to: 1
 18233                           ;eusart2.c: 190: {
 18234                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 18235  016026  51D9               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 18236  016028  0D01               	mullw	1
 18237  01602A  0E00               	movlw	low _eusart2TxBuffer
 18238  01602C  24F3               	addwf	prodl,w,c
 18239  01602E  6ED9               	movwf	fsr2l,c
 18240  016030  0E02               	movlw	high _eusart2TxBuffer
 18241  016032  20F4               	addwfc	prodh,w,c
 18242  016034  6EDA               	movwf	fsr2h,c
 18243  016036  50DF               	movf	indf2,w,c
 18244  016038  010E               	movlb	14	; () banked
 18245  01603A  6FF2               	movwf	242,b	;volatile
 18246                           
 18247                           ; BSR set to: 14
 18248  01603C  0101               	movlb	1	; () banked
 18249  01603E  2BD9               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 18250                           
 18251                           ; BSR set to: 1
 18252                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 18253  016040  0E7F               	movlw	127
 18254  016042  65D9               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 18255  016044  D002               	goto	i1l390
 18256                           
 18257                           ; BSR set to: 1
 18258                           ;eusart2.c: 193: {
 18259                           ;eusart2.c: 194: eusart2TxTail = 0;
 18260  016046  0E00               	movlw	0
 18261  016048  6FD9               	movwf	_eusart2TxTail& (0+255),b	;volatile
 18262  01604A                     i1l390:
 18263                           
 18264                           ; BSR set to: 1
 18265                           ;eusart2.c: 195: }
 18266                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 18267                           
 18268                           ; BSR set to: 1
 18269  01604A  2BD8               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 18270                           
 18271                           ;eusart2.c: 197: }
 18272  01604C  0012               	return	
 18273  01604E                     i1l389:
 18274                           
 18275                           ; BSR set to: 1
 18276                           ;eusart2.c: 198: else
 18277                           ;eusart2.c: 199: {
 18278                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 18279  01604E  010E               	movlb	14	; () banked
 18280  016050  9D2C               	bcf	44,6,b	;volatile
 18281  016052  0012               	return	
 18282  016054                     __end_of_EUSART2_Transmit_ISR:
 18283                           	opt stack 0
 18284                           tosu	equ	0xFFF
 18285                           tosh	equ	0xFFE
 18286                           tosl	equ	0xFFD
 18287                           pclatu	equ	0xFFB
 18288                           pclath	equ	0xFFA
 18289                           tblptru	equ	0xFF8
 18290                           tblptrh	equ	0xFF7
 18291                           tblptrl	equ	0xFF6
 18292                           tablat	equ	0xFF5
 18293                           prodh	equ	0xFF4
 18294                           prodl	equ	0xFF3
 18295                           intcon	equ	0xFF2
 18296                           postinc0	equ	0xFEE
 18297                           fsr0h	equ	0xFEA
 18298                           fsr0l	equ	0xFE9
 18299                           wreg	equ	0xFE8
 18300                           indf1	equ	0xFE7
 18301                           postdec1	equ	0xFE5
 18302                           fsr1h	equ	0xFE2
 18303                           fsr1l	equ	0xFE1
 18304                           bsr	equ	0xFE0
 18305                           indf2	equ	0xFDF
 18306                           postinc2	equ	0xFDE
 18307                           postdec2	equ	0xFDD
 18308                           fsr2h	equ	0xFDA
 18309                           fsr2l	equ	0xFD9
 18310                           status	equ	0xFD8
 18311                           
 18312 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 18313 ;; Defined at:
 18314 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 18315 ;; Parameters:    Size  Location     Type
 18316 ;;		None
 18317 ;; Auto vars:     Size  Location     Type
 18318 ;;		None
 18319 ;; Return value:  Size  Location     Type
 18320 ;;                  1    wreg      void 
 18321 ;; Registers used:
 18322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18323 ;; Tracked objects:
 18324 ;;		On entry : 0/0
 18325 ;;		On exit  : 0/0
 18326 ;;		Unchanged: 0/0
 18327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18330 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18331 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18332 ;;Total ram usage:       18 bytes
 18333 ;; Hardware stack levels used:    1
 18334 ;; Hardware stack levels required when called:    9
 18335 ;; This function calls:
 18336 ;;		Absolute function
 18337 ;;		_ADCC_ISR
 18338 ;;		_EUSART2_Receive_ISR
 18339 ;;		_TMR5_ISR
 18340 ;; This function is called by:
 18341 ;;		Interrupt level 2
 18342 ;; This function uses a non-reentrant model
 18343 ;;
 18344                           
 18345                           	psect	intcode
 18346  000008                     __pintcode:
 18347                           	opt stack 0
 18348  000008                     _INTERRUPT_InterruptManagerHigh:
 18349                           	opt stack 9
 18350                           
 18351                           ;incstack = 0
 18352  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18353  00000A  EF48  F0A7         	goto	int_func
 18354                           tosu	equ	0xFFF
 18355                           tosh	equ	0xFFE
 18356                           tosl	equ	0xFFD
 18357                           pclatu	equ	0xFFB
 18358                           pclath	equ	0xFFA
 18359                           tblptru	equ	0xFF8
 18360                           tblptrh	equ	0xFF7
 18361                           tblptrl	equ	0xFF6
 18362                           tablat	equ	0xFF5
 18363                           prodh	equ	0xFF4
 18364                           prodl	equ	0xFF3
 18365                           intcon	equ	0xFF2
 18366                           postinc0	equ	0xFEE
 18367                           fsr0h	equ	0xFEA
 18368                           fsr0l	equ	0xFE9
 18369                           wreg	equ	0xFE8
 18370                           indf1	equ	0xFE7
 18371                           postdec1	equ	0xFE5
 18372                           fsr1h	equ	0xFE2
 18373                           fsr1l	equ	0xFE1
 18374                           bsr	equ	0xFE0
 18375                           indf2	equ	0xFDF
 18376                           postinc2	equ	0xFDE
 18377                           postdec2	equ	0xFDD
 18378                           fsr2h	equ	0xFDA
 18379                           fsr2l	equ	0xFD9
 18380                           status	equ	0xFD8
 18381                           
 18382                           	psect	intcode_body
 18383  014E90                     __pintcode_body:
 18384                           	opt stack 9
 18385  014E90                     int_func:
 18386                           	opt stack 9
 18387  014E90  CFFA F0B3          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 18388  014E94  CFFB F0B4          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 18389  014E98  CFE9 F0B5          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 18390  014E9C  CFEA F0B6          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 18391  014EA0  CFE1 F0B7          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 18392  014EA4  CFE2 F0B8          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 18393  014EA8  CFD9 F0B9          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 18394  014EAC  CFDA F0BA          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 18395  014EB0  CFF3 F0BB          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 18396  014EB4  CFF4 F0BC          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 18397  014EB8  CFF6 F0BD          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 18398  014EBC  CFF7 F0BE          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 18399  014EC0  CFF8 F0BF          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 18400  014EC4  CFF5 F0C0          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 18401  014EC8  C05F  F0C1         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 18402  014ECC  C060  F0C2         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 18403  014ED0  C061  F0C3         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 18404  014ED4  C062  F0C4         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 18405                           
 18406                           ;interrupt_manager.c: 83: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 18407  014ED8  010E               	movlb	14	; () banked
 18408  014EDA  BF2C               	btfsc	44,7,b	;volatile
 18409                           
 18410                           ; BSR set to: 14
 18411  014EDC  AF36               	btfss	54,7,b	;volatile
 18412  014EDE  D00D               	goto	i2l202
 18413                           
 18414                           ; BSR set to: 14
 18415                           ;interrupt_manager.c: 84: {
 18416                           ;interrupt_manager.c: 85: EUSART2_RxDefaultInterruptHandler();
 18417  014EE0  D801               	call	i2u1622_48
 18418  014EE2  D016               	goto	i2l206
 18419  014EE4                     i2u1622_48:
 18420  014EE4  0005               	push	
 18421  014EE6  6EFA               	movwf	pclath,c
 18422  014EE8  0100               	movlb	0	; () banked
 18423  014EEA  51E0               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 18424  014EEC  6EFD               	movwf	tosl,c
 18425  014EEE  51E1               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 18426  014EF0  6EFE               	movwf	tosh,c
 18427  014EF2  51E2               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 18428  014EF4  6EFF               	movwf	tosu,c
 18429  014EF6  50FA               	movf	pclath,w,c
 18430  014EF8  0012               	return		;indir
 18431  014EFA                     i2l202:
 18432                           
 18433                           ; BSR set to: 14
 18434                           ;interrupt_manager.c: 87: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 18435  014EFA  B92E               	btfsc	46,4,b	;volatile
 18436                           
 18437                           ; BSR set to: 14
 18438  014EFC  A938               	btfss	56,4,b	;volatile
 18439  014EFE  D003               	goto	i2l204
 18440                           
 18441                           ; BSR set to: 14
 18442                           ;interrupt_manager.c: 88: {
 18443                           ;interrupt_manager.c: 89: TMR5_ISR();
 18444  014F00  EC44  F0B0         	call	_TMR5_ISR	;wreg free
 18445                           
 18446                           ;interrupt_manager.c: 90: }
 18447  014F04  D005               	goto	i2l206
 18448  014F06                     i2l204:
 18449                           
 18450                           ; BSR set to: 14
 18451                           ;interrupt_manager.c: 91: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 18452  014F06  B12A               	btfsc	42,0,b	;volatile
 18453                           
 18454                           ; BSR set to: 14
 18455  014F08  A134               	btfss	52,0,b	;volatile
 18456  014F0A  D002               	goto	i2l206
 18457                           
 18458                           ; BSR set to: 14
 18459                           ;interrupt_manager.c: 92: {
 18460                           ;interrupt_manager.c: 93: ADCC_ISR();
 18461  014F0C  ECE3  F0B0         	call	_ADCC_ISR	;wreg free
 18462  014F10                     i2l206:
 18463                           
 18464                           ;interrupt_manager.c: 95: else
 18465                           ;interrupt_manager.c: 96: {
 18466  014F10  C0C4  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 18467  014F14  C0C3  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 18468  014F18  C0C2  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 18469  014F1C  C0C1  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 18470  014F20  C0C0  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 18471  014F24  C0BF  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 18472  014F28  C0BE  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 18473  014F2C  C0BD  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 18474  014F30  C0BC  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 18475  014F34  C0BB  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 18476  014F38  C0BA  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 18477  014F3C  C0B9  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 18478  014F40  C0B8  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 18479  014F44  C0B7  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 18480  014F48  C0B6  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 18481  014F4C  C0B5  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 18482  014F50  C0B4  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 18483  014F54  C0B3  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 18484  014F58  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18485  014F5A  0011               	retfie		f
 18486  014F5C                     __end_of_INTERRUPT_InterruptManagerHigh:
 18487                           	opt stack 0
 18488                           tosu	equ	0xFFF
 18489                           tosh	equ	0xFFE
 18490                           tosl	equ	0xFFD
 18491                           pclatu	equ	0xFFB
 18492                           pclath	equ	0xFFA
 18493                           tblptru	equ	0xFF8
 18494                           tblptrh	equ	0xFF7
 18495                           tblptrl	equ	0xFF6
 18496                           tablat	equ	0xFF5
 18497                           prodh	equ	0xFF4
 18498                           prodl	equ	0xFF3
 18499                           intcon	equ	0xFF2
 18500                           postinc0	equ	0xFEE
 18501                           fsr0h	equ	0xFEA
 18502                           fsr0l	equ	0xFE9
 18503                           wreg	equ	0xFE8
 18504                           indf1	equ	0xFE7
 18505                           postdec1	equ	0xFE5
 18506                           fsr1h	equ	0xFE2
 18507                           fsr1l	equ	0xFE1
 18508                           bsr	equ	0xFE0
 18509                           indf2	equ	0xFDF
 18510                           postinc2	equ	0xFDE
 18511                           postdec2	equ	0xFDD
 18512                           fsr2h	equ	0xFDA
 18513                           fsr2l	equ	0xFD9
 18514                           status	equ	0xFD8
 18515                           
 18516 ;; *************** function _TMR5_ISR *****************
 18517 ;; Defined at:
 18518 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;		None
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;		None
 18523 ;; Return value:  Size  Location     Type
 18524 ;;                  1    wreg      void 
 18525 ;; Registers used:
 18526 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/0
 18529 ;;		On exit  : 0/0
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18536 ;;Total ram usage:        0 bytes
 18537 ;; Hardware stack levels used:    1
 18538 ;; Hardware stack levels required when called:    1
 18539 ;; This function calls:
 18540 ;;		Absolute function
 18541 ;;		_TMR5_DefaultInterruptHandler
 18542 ;;		_TMR5_WriteTimer
 18543 ;; This function is called by:
 18544 ;;		_INTERRUPT_InterruptManagerHigh
 18545 ;; This function uses a non-reentrant model
 18546 ;;
 18547                           
 18548                           	psect	text69
 18549  016088                     __ptext69:
 18550                           	opt stack 0
 18551  016088                     _TMR5_ISR:
 18552                           	opt stack 16
 18553                           
 18554                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 18555                           
 18556                           ;incstack = 0
 18557  016088  010E               	movlb	14	; () banked
 18558  01608A  9938               	bcf	56,4,b	;volatile
 18559                           
 18560                           ; BSR set to: 14
 18561                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 18562  01608C  C1D2  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 18563  016090  C1D3  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 18564  016094  EC90  F0B1         	call	_TMR5_WriteTimer	;wreg free
 18565                           
 18566                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 18567  016098  0101               	movlb	1	; () banked
 18568  01609A  51C6               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18569  01609C  11C7               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18570  01609E  11C8               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18571  0160A0  B4D8               	btfsc	status,2,c
 18572  0160A2  0012               	return	
 18573                           
 18574                           ; BSR set to: 1
 18575                           ;tmr5.c: 172: {
 18576                           ;tmr5.c: 173: TMR5_InterruptHandler();
 18577  0160A4  D801               	call	i2u1607_48
 18578  0160A6  0012               	return	
 18579  0160A8                     i2u1607_48:
 18580  0160A8  0005               	push	
 18581  0160AA  6EFA               	movwf	pclath,c
 18582  0160AC  51C6               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18583  0160AE  6EFD               	movwf	tosl,c
 18584  0160B0  51C7               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18585  0160B2  6EFE               	movwf	tosh,c
 18586  0160B4  51C8               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18587  0160B6  6EFF               	movwf	tosu,c
 18588  0160B8  50FA               	movf	pclath,w,c
 18589  0160BA  0012               	return		;indir
 18590  0160BC                     __end_of_TMR5_ISR:
 18591                           	opt stack 0
 18592                           tosu	equ	0xFFF
 18593                           tosh	equ	0xFFE
 18594                           tosl	equ	0xFFD
 18595                           pclatu	equ	0xFFB
 18596                           pclath	equ	0xFFA
 18597                           tblptru	equ	0xFF8
 18598                           tblptrh	equ	0xFF7
 18599                           tblptrl	equ	0xFF6
 18600                           tablat	equ	0xFF5
 18601                           prodh	equ	0xFF4
 18602                           prodl	equ	0xFF3
 18603                           intcon	equ	0xFF2
 18604                           postinc0	equ	0xFEE
 18605                           fsr0h	equ	0xFEA
 18606                           fsr0l	equ	0xFE9
 18607                           wreg	equ	0xFE8
 18608                           indf1	equ	0xFE7
 18609                           postdec1	equ	0xFE5
 18610                           fsr1h	equ	0xFE2
 18611                           fsr1l	equ	0xFE1
 18612                           bsr	equ	0xFE0
 18613                           indf2	equ	0xFDF
 18614                           postinc2	equ	0xFDE
 18615                           postdec2	equ	0xFDD
 18616                           fsr2h	equ	0xFDA
 18617                           fsr2l	equ	0xFD9
 18618                           status	equ	0xFD8
 18619                           
 18620 ;; *************** function _TMR5_WriteTimer *****************
 18621 ;; Defined at:
 18622 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 18623 ;; Parameters:    Size  Location     Type
 18624 ;;  timerVal        2    0[COMRAM] unsigned int 
 18625 ;; Auto vars:     Size  Location     Type
 18626 ;;		None
 18627 ;; Return value:  Size  Location     Type
 18628 ;;                  1    wreg      void 
 18629 ;; Registers used:
 18630 ;;		wreg, status,2
 18631 ;; Tracked objects:
 18632 ;;		On entry : 0/0
 18633 ;;		On exit  : 0/0
 18634 ;;		Unchanged: 0/0
 18635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18640 ;;Total ram usage:        2 bytes
 18641 ;; Hardware stack levels used:    1
 18642 ;; This function calls:
 18643 ;;		Nothing
 18644 ;; This function is called by:
 18645 ;;		_TMR5_ISR
 18646 ;;		_TMR5_Reload
 18647 ;; This function uses a non-reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text70
 18651  016320                     __ptext70:
 18652                           	opt stack 0
 18653  016320                     _TMR5_WriteTimer:
 18654                           	opt stack 16
 18655                           
 18656                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 18657                           
 18658                           ;incstack = 0
 18659  016320  A4C3               	btfss	4035,2,c	;volatile
 18660  016322  D007               	goto	i2l700
 18661                           
 18662                           ;tmr5.c: 130: {
 18663                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 18664  016324  90C3               	bcf	4035,0,c	;volatile
 18665                           
 18666                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 18667  016326  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 18668  016328  6EC2               	movwf	4034,c	;volatile
 18669                           
 18670                           ;tmr5.c: 136: TMR5L = timerVal;
 18671  01632A  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 18672                           
 18673                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 18674  01632E  80C3               	bsf	4035,0,c	;volatile
 18675                           
 18676                           ;tmr5.c: 140: }
 18677  016330  0012               	return	
 18678  016332                     i2l700:
 18679                           
 18680                           ;tmr5.c: 141: else
 18681                           ;tmr5.c: 142: {
 18682                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 18683  016332  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 18684  016334  6EC2               	movwf	4034,c	;volatile
 18685                           
 18686                           ;tmr5.c: 145: TMR5L = timerVal;
 18687  016336  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 18688  01633A  0012               	return	
 18689  01633C                     __end_of_TMR5_WriteTimer:
 18690                           	opt stack 0
 18691                           tosu	equ	0xFFF
 18692                           tosh	equ	0xFFE
 18693                           tosl	equ	0xFFD
 18694                           pclatu	equ	0xFFB
 18695                           pclath	equ	0xFFA
 18696                           tblptru	equ	0xFF8
 18697                           tblptrh	equ	0xFF7
 18698                           tblptrl	equ	0xFF6
 18699                           tablat	equ	0xFF5
 18700                           prodh	equ	0xFF4
 18701                           prodl	equ	0xFF3
 18702                           intcon	equ	0xFF2
 18703                           postinc0	equ	0xFEE
 18704                           fsr0h	equ	0xFEA
 18705                           fsr0l	equ	0xFE9
 18706                           wreg	equ	0xFE8
 18707                           indf1	equ	0xFE7
 18708                           postdec1	equ	0xFE5
 18709                           fsr1h	equ	0xFE2
 18710                           fsr1l	equ	0xFE1
 18711                           bsr	equ	0xFE0
 18712                           indf2	equ	0xFDF
 18713                           postinc2	equ	0xFDE
 18714                           postdec2	equ	0xFDD
 18715                           fsr2h	equ	0xFDA
 18716                           fsr2l	equ	0xFD9
 18717                           status	equ	0xFD8
 18718                           
 18719 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 18720 ;; Defined at:
 18721 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 18722 ;; Parameters:    Size  Location     Type
 18723 ;;		None
 18724 ;; Auto vars:     Size  Location     Type
 18725 ;;		None
 18726 ;; Return value:  Size  Location     Type
 18727 ;;                  1    wreg      void 
 18728 ;; Registers used:
 18729 ;;		None
 18730 ;; Tracked objects:
 18731 ;;		On entry : 0/0
 18732 ;;		On exit  : 0/0
 18733 ;;		Unchanged: 0/0
 18734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18739 ;;Total ram usage:        0 bytes
 18740 ;; Hardware stack levels used:    1
 18741 ;; This function calls:
 18742 ;;		Nothing
 18743 ;; This function is called by:
 18744 ;;		_TMR5_Initialize
 18745 ;;		_TMR5_ISR
 18746 ;; This function uses a non-reentrant model
 18747 ;;
 18748                           
 18749                           	psect	text71
 18750  01643C                     __ptext71:
 18751                           	opt stack 0
 18752  01643C                     _TMR5_DefaultInterruptHandler:
 18753                           	opt stack 16
 18754                           
 18755                           ;incstack = 0
 18756  01643C  0012               	return		;funcret
 18757  01643E                     __end_of_TMR5_DefaultInterruptHandler:
 18758                           	opt stack 0
 18759                           tosu	equ	0xFFF
 18760                           tosh	equ	0xFFE
 18761                           tosl	equ	0xFFD
 18762                           pclatu	equ	0xFFB
 18763                           pclath	equ	0xFFA
 18764                           tblptru	equ	0xFF8
 18765                           tblptrh	equ	0xFF7
 18766                           tblptrl	equ	0xFF6
 18767                           tablat	equ	0xFF5
 18768                           prodh	equ	0xFF4
 18769                           prodl	equ	0xFF3
 18770                           intcon	equ	0xFF2
 18771                           postinc0	equ	0xFEE
 18772                           fsr0h	equ	0xFEA
 18773                           fsr0l	equ	0xFE9
 18774                           wreg	equ	0xFE8
 18775                           indf1	equ	0xFE7
 18776                           postdec1	equ	0xFE5
 18777                           fsr1h	equ	0xFE2
 18778                           fsr1l	equ	0xFE1
 18779                           bsr	equ	0xFE0
 18780                           indf2	equ	0xFDF
 18781                           postinc2	equ	0xFDE
 18782                           postdec2	equ	0xFDD
 18783                           fsr2h	equ	0xFDA
 18784                           fsr2l	equ	0xFD9
 18785                           status	equ	0xFD8
 18786                           
 18787 ;; *************** function _EUSART2_Receive_ISR *****************
 18788 ;; Defined at:
 18789 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 18790 ;; Parameters:    Size  Location     Type
 18791 ;;		None
 18792 ;; Auto vars:     Size  Location     Type
 18793 ;;		None
 18794 ;; Return value:  Size  Location     Type
 18795 ;;                  1    wreg      void 
 18796 ;; Registers used:
 18797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18798 ;; Tracked objects:
 18799 ;;		On entry : 0/0
 18800 ;;		On exit  : 0/0
 18801 ;;		Unchanged: 0/0
 18802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18807 ;;Total ram usage:        0 bytes
 18808 ;; Hardware stack levels used:    1
 18809 ;; Hardware stack levels required when called:    4
 18810 ;; This function calls:
 18811 ;;		i2_printf
 18812 ;; This function is called by:
 18813 ;;		_EUSART2_Initialize
 18814 ;;		_INTERRUPT_InterruptManagerHigh
 18815 ;; This function uses a non-reentrant model
 18816 ;;
 18817                           
 18818                           	psect	text72
 18819  0150BA                     __ptext72:
 18820                           	opt stack 0
 18821  0150BA                     _EUSART2_Receive_ISR:
 18822                           	opt stack 13
 18823                           
 18824                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 18825                           
 18826                           ;incstack = 0
 18827  0150BA  010E               	movlb	14	; () banked
 18828  0150BC  A3F5               	btfss	245,1,b	;volatile
 18829  0150BE  D002               	goto	i2l395
 18830                           
 18831                           ; BSR set to: 14
 18832                           ;eusart2.c: 208: {
 18833                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 18834  0150C0  99F5               	bcf	245,4,b	;volatile
 18835                           
 18836                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 18837  0150C2  89F5               	bsf	245,4,b	;volatile
 18838  0150C4                     i2l395:
 18839                           
 18840                           ; BSR set to: 14
 18841                           ;eusart2.c: 213: }
 18842                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 18843                           
 18844                           ; BSR set to: 14
 18845  0150C4  0100               	movlb	0	; () banked
 18846  0150C6  51EA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18847  0150C8  0D01               	mullw	1
 18848  0150CA  0E80               	movlw	low _eusart2RxBuffer
 18849  0150CC  24F3               	addwf	prodl,w,c
 18850  0150CE  6ED9               	movwf	fsr2l,c
 18851  0150D0  0E02               	movlw	high _eusart2RxBuffer
 18852  0150D2  20F4               	addwfc	prodh,w,c
 18853  0150D4  6EDA               	movwf	fsr2h,c
 18854  0150D6  CEF1 FFDF          	movff	3825,indf2	;volatile
 18855                           
 18856                           ; BSR set to: 0
 18857  0150DA  2BEA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 18858                           
 18859                           ; BSR set to: 0
 18860                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 18861  0150DC  0E3F               	movlw	63
 18862  0150DE  65EA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 18863  0150E0  D002               	goto	i2l396
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;eusart2.c: 218: {
 18867                           ;eusart2.c: 219: eusart2RxHead = 0;
 18868  0150E2  0E00               	movlw	0
 18869  0150E4  6FEA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 18870  0150E6                     i2l396:
 18871                           
 18872                           ; BSR set to: 0
 18873                           ;eusart2.c: 220: }
 18874                           ;eusart2.c: 221: eusart2RxCount++;
 18875                           
 18876                           ; BSR set to: 0
 18877  0150E6  0101               	movlb	1	; () banked
 18878  0150E8  2BD6               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 18879                           
 18880                           ; BSR set to: 1
 18881                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 18882  0150EA  0E0A               	movlw	10
 18883  0150EC  010E               	movlb	14	; () banked
 18884  0150EE  19F1               	xorwf	241,w,b	;volatile
 18885  0150F0  B4D8               	btfsc	status,2,c
 18886  0150F2  D004               	goto	i2u1617_40
 18887                           
 18888                           ; BSR set to: 14
 18889  0150F4  0E0D               	movlw	13
 18890  0150F6  19F1               	xorwf	241,w,b	;volatile
 18891  0150F8  A4D8               	btfss	status,2,c
 18892  0150FA  D006               	goto	i2l397
 18893  0150FC                     i2u1617_40:
 18894                           
 18895                           ; BSR set to: 14
 18896                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 18897  0150FC  0100               	movlb	0	; () banked
 18898  0150FE  81F7               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;eusart2.c: 232: RC2REG = 0;
 18902  015100  0E00               	movlw	0
 18903  015102  010E               	movlb	14	; () banked
 18904  015104  6FF1               	movwf	241,b	;volatile
 18905                           
 18906                           ;eusart2.c: 234: }
 18907  015106  D002               	goto	i2l400
 18908  015108                     i2l397:
 18909                           
 18910                           ; BSR set to: 14
 18911                           ;eusart2.c: 236: else {
 18912                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 18913  015108  0100               	movlb	0	; () banked
 18914  01510A  91F7               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 18915  01510C                     i2l400:
 18916                           
 18917                           ;eusart2.c: 240: }
 18918                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 18919                           
 18920                           ; BSR set to: 0
 18921  01510C  0E08               	movlw	8
 18922  01510E  010E               	movlb	14	; () banked
 18923  015110  19F1               	xorwf	241,w,b	;volatile
 18924  015112  A4D8               	btfss	status,2,c
 18925  015114  0012               	return	
 18926                           
 18927                           ; BSR set to: 14
 18928                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 18929  015116  0100               	movlb	0	; () banked
 18930  015118  51EA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18931  01511A  0D01               	mullw	1
 18932  01511C  0E80               	movlw	low _eusart2RxBuffer
 18933  01511E  24F3               	addwf	prodl,w,c
 18934  015120  6ED9               	movwf	fsr2l,c
 18935  015122  0E02               	movlw	high _eusart2RxBuffer
 18936  015124  20F4               	addwfc	prodh,w,c
 18937  015126  6EDA               	movwf	fsr2h,c
 18938  015128  0E00               	movlw	0
 18939  01512A  6EDF               	movwf	indf2,c
 18940                           
 18941                           ; BSR set to: 0
 18942                           ;eusart2.c: 246: eusart2RxHead--;
 18943  01512C  07EA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;eusart2.c: 249: printf("\033[K");
 18947  01512E  0EC1               	movlw	low STR_1
 18948  015130  6F66               	movwf	i2printf@f& (0+255),b
 18949  015132  0EFF               	movlw	high STR_1
 18950  015134  6F67               	movwf	(i2printf@f+1)& (0+255),b
 18951  015136  EC17  F085         	call	i2_printf	;wreg free
 18952                           
 18953                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 18954  01513A  0101               	movlb	1	; () banked
 18955  01513C  51D7               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 18956  01513E  0100               	movlb	0	; () banked
 18957  015140  19EA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 18958  015142  B4D8               	btfsc	status,2,c
 18959  015144  D00B               	goto	i2l402
 18960                           
 18961                           ; BSR set to: 0
 18962                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 18963  015146  51EA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18964  015148  0D01               	mullw	1
 18965  01514A  0E80               	movlw	low _eusart2RxBuffer
 18966  01514C  24F3               	addwf	prodl,w,c
 18967  01514E  6ED9               	movwf	fsr2l,c
 18968  015150  0E02               	movlw	high _eusart2RxBuffer
 18969  015152  20F4               	addwfc	prodh,w,c
 18970  015154  6EDA               	movwf	fsr2h,c
 18971  015156  0E00               	movlw	0
 18972  015158  6EDF               	movwf	indf2,c
 18973                           
 18974                           ; BSR set to: 0
 18975                           ;eusart2.c: 254: eusart2RxHead--;
 18976  01515A  07EA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 18977  01515C                     i2l402:
 18978                           
 18979                           ; BSR set to: 0
 18980                           ;eusart2.c: 256: }
 18981                           ;eusart2.c: 258: RC2REG = 0;
 18982                           
 18983                           ; BSR set to: 0
 18984  01515C  0E00               	movlw	0
 18985  01515E  010E               	movlb	14	; () banked
 18986  015160  6FF1               	movwf	241,b	;volatile
 18987  015162  0012               	return	
 18988  015164                     __end_of_EUSART2_Receive_ISR:
 18989                           	opt stack 0
 18990                           tosu	equ	0xFFF
 18991                           tosh	equ	0xFFE
 18992                           tosl	equ	0xFFD
 18993                           pclatu	equ	0xFFB
 18994                           pclath	equ	0xFFA
 18995                           tblptru	equ	0xFF8
 18996                           tblptrh	equ	0xFF7
 18997                           tblptrl	equ	0xFF6
 18998                           tablat	equ	0xFF5
 18999                           prodh	equ	0xFF4
 19000                           prodl	equ	0xFF3
 19001                           intcon	equ	0xFF2
 19002                           postinc0	equ	0xFEE
 19003                           fsr0h	equ	0xFEA
 19004                           fsr0l	equ	0xFE9
 19005                           wreg	equ	0xFE8
 19006                           indf1	equ	0xFE7
 19007                           postdec1	equ	0xFE5
 19008                           fsr1h	equ	0xFE2
 19009                           fsr1l	equ	0xFE1
 19010                           bsr	equ	0xFE0
 19011                           indf2	equ	0xFDF
 19012                           postinc2	equ	0xFDE
 19013                           postdec2	equ	0xFDD
 19014                           fsr2h	equ	0xFDA
 19015                           fsr2l	equ	0xFD9
 19016                           status	equ	0xFD8
 19017                           
 19018 ;; *************** function i2_printf *****************
 19019 ;; Defined at:
 19020 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19021 ;; Parameters:    Size  Location     Type
 19022 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 19023 ;;		 -> STR_92(30), STR_91(23), STR_90(40), STR_89(30), 
 19024 ;;		 -> STR_88(33), STR_87(1405), STR_85(58), STR_83(71), 
 19025 ;;		 -> STR_82(63), STR_81(37), STR_80(46), STR_79(102), 
 19026 ;;		 -> STR_78(86), STR_76(25), STR_74(42), STR_72(41), 
 19027 ;;		 -> STR_70(40), STR_68(56), STR_66(34), STR_64(34), 
 19028 ;;		 -> STR_62(32), STR_60(37), STR_58(56), STR_56(34), 
 19029 ;;		 -> STR_54(34), STR_52(35), STR_50(47), STR_49(17), 
 19030 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 19031 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 19032 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 19033 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 19034 ;; Auto vars:     Size  Location     Type
 19035 ;;  printf          4   35[BANK0 ] unsigned long 
 19036 ;;  printf          4   28[BANK0 ] struct .
 19037 ;;  printf          3   32[BANK0 ] struct .
 19038 ;;  printf          2   39[BANK0 ] int 
 19039 ;;  printf          2   26[BANK0 ] int 
 19040 ;;  printf          2   24[BANK0 ] unsigned short 
 19041 ;;  printf          2   22[BANK0 ] PTR void [1]
 19042 ;;		 -> ?i2_printf(2), ?_printf(2), 
 19043 ;;  printf          2   20[BANK0 ] unsigned int 
 19044 ;;  printf          2   18[BANK0 ] PTR const unsigned char 
 19045 ;;		 -> printf@c(1), 
 19046 ;;  printf          2    0        int 
 19047 ;;  printf          1   41[BANK0 ] char 
 19048 ;;  printf          1   17[BANK0 ] unsigned char 
 19049 ;;  printf          1    0        unsigned char 
 19050 ;; Return value:  Size  Location     Type
 19051 ;;                  2    6[BANK0 ] int 
 19052 ;; Registers used:
 19053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19054 ;; Tracked objects:
 19055 ;;		On entry : 0/0
 19056 ;;		On exit  : 0/0
 19057 ;;		Unchanged: 0/0
 19058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19060 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19061 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19062 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19063 ;;Total ram usage:       36 bytes
 19064 ;; Hardware stack levels used:    1
 19065 ;; Hardware stack levels required when called:    3
 19066 ;; This function calls:
 19067 ;;		i2___awdiv
 19068 ;;		i2___ftadd
 19069 ;;		i2___ftge
 19070 ;;		i2___ftmul
 19071 ;;		i2___ftneg
 19072 ;;		i2___ftsub
 19073 ;;		i2___fttol
 19074 ;;		i2___lldiv
 19075 ;;		i2___llmod
 19076 ;;		i2___lltoft
 19077 ;;		i2___wmul
 19078 ;;		i2__div_to_l_
 19079 ;;		i2__tdiv_to_l_
 19080 ;;		i2_fround
 19081 ;;		i2_isdigit
 19082 ;;		i2_putch
 19083 ;;		i2_scale
 19084 ;; This function is called by:
 19085 ;;		_EUSART2_Receive_ISR
 19086 ;; This function uses a non-reentrant model
 19087 ;;
 19088                           
 19089                           	psect	text73
 19090  010A2E                     __ptext73:
 19091                           	opt stack 0
 19092  010A2E                     i2_printf:
 19093                           	opt stack 13
 19094                           
 19095                           ;doprnt.c: 466: va_list ap;
 19096                           ;doprnt.c: 499: signed char c;
 19097                           ;doprnt.c: 501: int width;
 19098                           ;doprnt.c: 504: int prec;
 19099                           ;doprnt.c: 508: unsigned short flag;
 19100                           ;doprnt.c: 515: char d;
 19101                           ;doprnt.c: 516: double fval;
 19102                           ;doprnt.c: 517: int exp;
 19103                           ;doprnt.c: 523: union {
 19104                           ;doprnt.c: 524: unsigned long vd;
 19105                           ;doprnt.c: 525: double integ;
 19106                           ;doprnt.c: 526: } tmpval;
 19107                           ;doprnt.c: 528: unsigned long val;
 19108                           ;doprnt.c: 529: unsigned len;
 19109                           ;doprnt.c: 530: const char * cp;
 19110                           ;doprnt.c: 533: *ap = __va_start();
 19111                           
 19112                           ; BSR set to: 14
 19113                           ;incstack = 0
 19114  010A2E  0E68               	movlw	low (?i2_printf+2)
 19115  010A30  0100               	movlb	0	; () banked
 19116  010A32  6F76               	movwf	i2printf@ap& (0+255),b
 19117  010A34  0E00               	movlw	high (?i2_printf+2)
 19118  010A36  6F77               	movwf	(i2printf@ap+1)& (0+255),b
 19119                           
 19120                           ;doprnt.c: 536: while(c = *f++) {
 19121  010A38  EF0C  F08A         	goto	i2u1603_40
 19122  010A3C                     
 19123                           ; BSR set to: 0
 19124                           ;doprnt.c: 538: if(c != '%')
 19125                           
 19126                           ; BSR set to: 0
 19127  010A3C  0E25               	movlw	37
 19128  010A3E  1989               	xorwf	i2printf@c& (0+255),w,b
 19129  010A40  B4D8               	btfsc	status,2,c
 19130  010A42  D005               	goto	i2l1098
 19131                           
 19132                           ; BSR set to: 0
 19133                           ;doprnt.c: 540: {
 19134                           ;doprnt.c: 541: (putch(c) );
 19135  010A44  5189               	movf	i2printf@c& (0+255),w,b
 19136  010A46  EC10  F0B2         	call	i2_putch
 19137                           
 19138                           ;doprnt.c: 542: continue;
 19139  010A4A  EF0C  F08A         	goto	i2u1603_40
 19140  010A4E                     i2l1098:
 19141                           
 19142                           ;doprnt.c: 543: }
 19143                           ;doprnt.c: 548: flag = 0;
 19144  010A4E  0E00               	movlw	0
 19145  010A50  0100               	movlb	0	; () banked
 19146  010A52  6F79               	movwf	(i2printf@flag+1)& (0+255),b
 19147  010A54  0E00               	movlw	0
 19148  010A56  6F78               	movwf	i2printf@flag& (0+255),b
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;doprnt.c: 611: if(*f == '.') {
 19152  010A58  C066  FFF6         	movff	i2printf@f,tblptrl
 19153  010A5C  C067  FFF7         	movff	i2printf@f+1,tblptrh
 19154  010A60  0E00               	movlw	low (__mediumconst shr (0+16))
 19155  010A62  6EF8               	movwf	tblptru,c
 19156  010A64  0E0D               	movlw	(high __ramtop+-1)
 19157  010A66  64F7               	cpfsgt	tblptrh,c
 19158  010A68  D003               	bra	i2u1557_47
 19159  010A6A  0008               	tblrd		*
 19160  010A6C  50F5               	movf	tablat,w,c
 19161  010A6E  D005               	bra	i2u1557_40
 19162  010A70                     i2u1557_47:
 19163  010A70  CFF6 FFE1          	movff	tblptrl,fsr1l
 19164  010A74  CFF7 FFE2          	movff	tblptrh,fsr1h
 19165  010A78  50E7               	movf	indf1,w,c
 19166  010A7A                     i2u1557_40:
 19167  010A7A  0A2E               	xorlw	46
 19168  010A7C  A4D8               	btfss	status,2,c
 19169  010A7E  D048               	goto	i2l1099
 19170                           
 19171                           ;doprnt.c: 612: flag |= 0x4000;
 19172  010A80  0100               	movlb	0	; () banked
 19173  010A82  8D79               	bsf	(i2printf@flag+1)& (0+255),6,b
 19174                           
 19175                           ;doprnt.c: 613: f++;
 19176  010A84  4B66               	infsnz	i2printf@f& (0+255),f,b
 19177  010A86  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19178                           
 19179                           ; BSR set to: 0
 19180                           ;doprnt.c: 620: {
 19181                           ;doprnt.c: 621: prec = 0;
 19182  010A88  0E00               	movlw	0
 19183  010A8A  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19184  010A8C  0E00               	movlw	0
 19185  010A8E  6F87               	movwf	i2printf@prec& (0+255),b
 19186                           
 19187                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 19188  010A90  D029               	goto	i2l1100
 19189  010A92                     
 19190                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 19191                           
 19192                           ; BSR set to: 0
 19193  010A92  C087  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 19194  010A96  C088  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 19195  010A9A  0E00               	movlw	0
 19196  010A9C  6E12               	movwf	i2___wmul@multiplicand+1,c
 19197  010A9E  0E0A               	movlw	10
 19198  010AA0  6E11               	movwf	i2___wmul@multiplicand,c
 19199  010AA2  EC1D  F0B1         	call	i2___wmul	;wreg free
 19200  010AA6  C066  FFF6         	movff	i2printf@f,tblptrl
 19201  010AAA  C067  FFF7         	movff	i2printf@f+1,tblptrh
 19202  010AAE  0E00               	movlw	low (__mediumconst shr (0+16))
 19203  010AB0  6EF8               	movwf	tblptru,c
 19204  010AB2  0E0D               	movlw	(high __ramtop+-1)
 19205  010AB4  64F7               	cpfsgt	tblptrh,c
 19206  010AB6  D003               	bra	i2u1559_47
 19207  010AB8  0008               	tblrd		*
 19208  010ABA  50F5               	movf	tablat,w,c
 19209  010ABC  D005               	bra	i2u1559_40
 19210  010ABE                     i2u1559_47:
 19211  010ABE  CFF6 FFE1          	movff	tblptrl,fsr1l
 19212  010AC2  CFF7 FFE2          	movff	tblptrh,fsr1h
 19213  010AC6  50E7               	movf	indf1,w,c
 19214  010AC8                     i2u1559_40:
 19215  010AC8  0100               	movlb	0	; () banked
 19216  010ACA  6F68               	movwf	??i2_printf& (0+255),b
 19217  010ACC  5168               	movf	??i2_printf& (0+255),w,b
 19218  010ACE  260F               	addwf	?i2___wmul,f,c
 19219  010AD0  0E00               	movlw	0
 19220  010AD2  2210               	addwfc	?i2___wmul+1,f,c
 19221  010AD4  0ED0               	movlw	208
 19222  010AD6  240F               	addwf	?i2___wmul,w,c
 19223  010AD8  6F87               	movwf	i2printf@prec& (0+255),b
 19224  010ADA  0EFF               	movlw	255
 19225  010ADC  2010               	addwfc	?i2___wmul+1,w,c
 19226  010ADE  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19227                           
 19228                           ; BSR set to: 0
 19229  010AE0  4B66               	infsnz	i2printf@f& (0+255),f,b
 19230  010AE2  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19231  010AE4                     i2l1100:
 19232                           
 19233                           ; BSR set to: 0
 19234                           
 19235                           ; BSR set to: 0
 19236  010AE4  C066  FFF6         	movff	i2printf@f,tblptrl
 19237  010AE8  C067  FFF7         	movff	i2printf@f+1,tblptrh
 19238  010AEC  0E00               	movlw	low (__mediumconst shr (0+16))
 19239  010AEE  6EF8               	movwf	tblptru,c
 19240  010AF0  0E0D               	movlw	(high __ramtop+-1)
 19241  010AF2  64F7               	cpfsgt	tblptrh,c
 19242  010AF4  D003               	bra	i2u1560_47
 19243  010AF6  0008               	tblrd		*
 19244  010AF8  50F5               	movf	tablat,w,c
 19245  010AFA  D005               	bra	i2u1560_40
 19246  010AFC                     i2u1560_47:
 19247  010AFC  CFF6 FFE1          	movff	tblptrl,fsr1l
 19248  010B00  CFF7 FFE2          	movff	tblptrh,fsr1h
 19249  010B04  50E7               	movf	indf1,w,c
 19250  010B06                     i2u1560_40:
 19251  010B06  EC65  F0B1         	call	i2_isdigit
 19252  010B0A  A0D8               	btfss	status,0,c
 19253  010B0C  D03B               	goto	i2l1104
 19254  010B0E  D7C1               	goto	i2l1101
 19255  010B10                     i2l1099:
 19256                           
 19257                           ;doprnt.c: 626: prec = 0;
 19258  010B10  0E00               	movlw	0
 19259  010B12  0100               	movlb	0	; () banked
 19260  010B14  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19261  010B16  0E00               	movlw	0
 19262  010B18  6F87               	movwf	i2printf@prec& (0+255),b
 19263                           
 19264                           ; BSR set to: 0
 19265                           ;doprnt.c: 628: flag |= 0x1000;
 19266  010B1A  8979               	bsf	(i2printf@flag+1)& (0+255),4,b
 19267                           
 19268                           ; BSR set to: 0
 19269                           ;doprnt.c: 630: }
 19270                           ;doprnt.c: 635: switch(c = *f++) {
 19271  010B1C  D033               	goto	i2l1104
 19272  010B1E                     
 19273                           ; BSR set to: 0
 19274                           ;doprnt.c: 663: flag |= 0x400;
 19275                           
 19276                           ; BSR set to: 0
 19277  010B1E  8579               	bsf	(i2printf@flag+1)& (0+255),2,b
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;doprnt.c: 698: case 'i':
 19281                           ;doprnt.c: 699: break;
 19282                           
 19283                           ; BSR set to: 0
 19284                           
 19285                           ;doprnt.c: 697: case 'd':
 19286                           
 19287                           ;doprnt.c: 664: break;
 19288  010B20  D062               	goto	i2l1108
 19289  010B22                     
 19290                           ; BSR set to: 0
 19291                           ;doprnt.c: 718: case 'x':
 19292                           ;doprnt.c: 721: flag |= 0x80;
 19293                           
 19294                           ; BSR set to: 0
 19295                           
 19296                           ; BSR set to: 0
 19297  010B22  8F78               	bsf	i2printf@flag& (0+255),7,b
 19298                           
 19299                           ;doprnt.c: 723: break;
 19300  010B24  D060               	goto	i2l1108
 19301  010B26                     
 19302                           ; BSR set to: 0
 19303                           ;doprnt.c: 753: if(prec && prec < len)
 19304                           
 19305                           ; BSR set to: 0
 19306  010B26  5187               	movf	i2printf@prec& (0+255),w,b
 19307  010B28  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19308  010B2A  B4D8               	btfsc	status,2,c
 19309  010B2C  D015               	goto	i2l1115
 19310                           
 19311                           ; BSR set to: 0
 19312  010B2E  5174               	movf	i2printf@len& (0+255),w,b
 19313  010B30  5D87               	subwf	i2printf@prec& (0+255),w,b
 19314  010B32  5175               	movf	(i2printf@len+1)& (0+255),w,b
 19315  010B34  5988               	subwfb	(i2printf@prec+1)& (0+255),w,b
 19316  010B36  B0D8               	btfsc	status,0,c
 19317  010B38  D00F               	goto	i2l1115
 19318                           
 19319                           ; BSR set to: 0
 19320                           ;doprnt.c: 754: len = prec;
 19321  010B3A  C087  F074         	movff	i2printf@prec,i2printf@len
 19322  010B3E  C088  F075         	movff	i2printf@prec+1,i2printf@len+1
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;doprnt.c: 767: while(len--)
 19326  010B42  D00A               	goto	i2l1115
 19327  010B44                     i2l12429:
 19328                           
 19329                           ; BSR set to: 0
 19330                           ;doprnt.c: 768: (putch(*cp++) );
 19331  010B44  C072  FFD9         	movff	i2printf@cp,fsr2l
 19332  010B48  C073  FFDA         	movff	i2printf@cp+1,fsr2h
 19333  010B4C  50DF               	movf	indf2,w,c
 19334  010B4E  EC10  F0B2         	call	i2_putch
 19335  010B52  0100               	movlb	0	; () banked
 19336  010B54  4B72               	infsnz	i2printf@cp& (0+255),f,b
 19337  010B56  2B73               	incf	(i2printf@cp+1)& (0+255),f,b
 19338  010B58                     i2l1115:
 19339                           
 19340                           ; BSR set to: 0
 19341                           
 19342                           ; BSR set to: 0
 19343  010B58  0774               	decf	i2printf@len& (0+255),f,b
 19344  010B5A  A0D8               	btfss	status,0,c
 19345  010B5C  0775               	decf	(i2printf@len+1)& (0+255),f,b
 19346  010B5E  2974               	incf	i2printf@len& (0+255),w,b
 19347  010B60  E1F1               	bnz	i2l12429
 19348  010B62  2975               	incf	(i2printf@len+1)& (0+255),w,b
 19349  010B64  B4D8               	btfsc	status,2,c
 19350  010B66  EF0C  F08A         	goto	i2u1603_40
 19351  010B6A  D7EC               	goto	i2l1116
 19352  010B6C                     
 19353                           ; BSR set to: 0
 19354                           ;doprnt.c: 805: cp = (char *)&c;
 19355                           
 19356                           ; BSR set to: 0
 19357  010B6C  0E89               	movlw	low i2printf@c
 19358  010B6E  6F72               	movwf	i2printf@cp& (0+255),b
 19359  010B70  0E00               	movlw	high i2printf@c
 19360  010B72  6F73               	movwf	(i2printf@cp+1)& (0+255),b
 19361                           
 19362                           ; BSR set to: 0
 19363                           ;doprnt.c: 806: len = 1;
 19364  010B74  0E00               	movlw	0
 19365  010B76  6F75               	movwf	(i2printf@len+1)& (0+255),b
 19366  010B78  0E01               	movlw	1
 19367  010B7A  6F74               	movwf	i2printf@len& (0+255),b
 19368                           
 19369                           ;doprnt.c: 807: goto dostring;
 19370  010B7C  D7D4               	goto	i2l1113
 19371  010B7E                     
 19372                           ; BSR set to: 0
 19373                           ;doprnt.c: 818: flag |= 0xC0;
 19374                           
 19375                           ; BSR set to: 0
 19376  010B7E  0EC0               	movlw	192
 19377  010B80  1378               	iorwf	i2printf@flag& (0+255),f,b
 19378                           
 19379                           ; BSR set to: 0
 19380                           ;doprnt.c: 822: }
 19381                           
 19382                           ;doprnt.c: 819: break;
 19383  010B82  D031               	goto	i2l1108
 19384  010B84                     i2l1104:
 19385                           
 19386                           ; BSR set to: 0
 19387  010B84  0100               	movlb	0	; () banked
 19388  010B86  5166               	movf	i2printf@f& (0+255),w,b
 19389  010B88  6F68               	movwf	??i2_printf& (0+255),b
 19390  010B8A  5167               	movf	(i2printf@f+1)& (0+255),w,b
 19391  010B8C  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19392  010B8E  4B66               	infsnz	i2printf@f& (0+255),f,b
 19393  010B90  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19394  010B92  C068  FFF6         	movff	??i2_printf,tblptrl
 19395  010B96  C069  FFF7         	movff	??i2_printf+1,tblptrh
 19396  010B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 19397  010B9C  6EF8               	movwf	tblptru,c
 19398  010B9E  0E0D               	movlw	(high __ramtop+-1)
 19399  010BA0  64F7               	cpfsgt	tblptrh,c
 19400  010BA2  D003               	bra	i2u1565_47
 19401  010BA4  0008               	tblrd		*
 19402  010BA6  50F5               	movf	tablat,w,c
 19403  010BA8  D005               	bra	i2u1565_40
 19404  010BAA                     i2u1565_47:
 19405  010BAA  CFF6 FFE1          	movff	tblptrl,fsr1l
 19406  010BAE  CFF7 FFE2          	movff	tblptrh,fsr1h
 19407  010BB2  50E7               	movf	indf1,w,c
 19408  010BB4                     i2u1565_40:
 19409  010BB4  0100               	movlb	0	; () banked
 19410  010BB6  6F89               	movwf	i2printf@c& (0+255),b
 19411  010BB8  5189               	movf	i2printf@c& (0+255),w,b
 19412                           
 19413                           ; Switch size 1, requested type "space"
 19414                           ; Number of cases is 7, Range of values is 0 to 120
 19415                           ; switch strategies available:
 19416                           ; Name         Instructions Cycles
 19417                           ; simple_byte           22    12 (average)
 19418                           ;	Chosen strategy is simple_byte
 19419  010BBA  0A00               	xorlw	0	; case 0
 19420  010BBC  B4D8               	btfsc	status,2,c
 19421  010BBE  0012               	return	
 19422  010BC0  0A58               	xorlw	88	; case 88
 19423  010BC2  B4D8               	btfsc	status,2,c
 19424  010BC4  D7AE               	goto	i2l1111
 19425  010BC6  0A3C               	xorlw	60	; case 100
 19426  010BC8  B4D8               	btfsc	status,2,c
 19427  010BCA  D00D               	goto	i2l1108
 19428  010BCC  0A02               	xorlw	2	; case 102
 19429  010BCE  B4D8               	btfsc	status,2,c
 19430  010BD0  D7A6               	goto	i2l1107
 19431  010BD2  0A0F               	xorlw	15	; case 105
 19432  010BD4  B4D8               	btfsc	status,2,c
 19433  010BD6  D007               	goto	i2l1108
 19434  010BD8  0A1C               	xorlw	28	; case 117
 19435  010BDA  B4D8               	btfsc	status,2,c
 19436  010BDC  D7D0               	goto	i2l1119
 19437  010BDE  0A0D               	xorlw	13	; case 120
 19438  010BE0  B4D8               	btfsc	status,2,c
 19439  010BE2  D79F               	goto	i2l1111
 19440  010BE4  D7C3               	goto	i2l1118
 19441  010BE6                     i2l1108:
 19442                           
 19443                           ; BSR set to: 0
 19444                           ;doprnt.c: 825: if(flag & (0x700)) {
 19445                           
 19446                           ; BSR set to: 0
 19447  010BE6  0E07               	movlw	7
 19448  010BE8  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19449  010BEA  B4D8               	btfsc	status,2,c
 19450  010BEC  D2C0               	goto	i2l1120
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;doprnt.c: 827: if(flag & 0x1000)
 19454  010BEE  A979               	btfss	(i2printf@flag+1)& (0+255),4,b
 19455  010BF0  D004               	goto	i2l1121
 19456                           
 19457                           ; BSR set to: 0
 19458                           ;doprnt.c: 829: prec = 6;
 19459  010BF2  0E00               	movlw	0
 19460  010BF4  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19461  010BF6  0E06               	movlw	6
 19462  010BF8  6F87               	movwf	i2printf@prec& (0+255),b
 19463  010BFA                     i2l1121:
 19464                           
 19465                           ; BSR set to: 0
 19466                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 19467                           
 19468                           ; BSR set to: 0
 19469  010BFA  C076  FFD9         	movff	i2printf@ap,fsr2l
 19470  010BFE  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 19471  010C02  CFDE F080          	movff	postinc2,i2printf@fval
 19472  010C06  CFDE F081          	movff	postinc2,i2printf@fval+1
 19473  010C0A  CFDD F082          	movff	postdec2,i2printf@fval+2
 19474                           
 19475                           ; BSR set to: 0
 19476  010C0E  0E03               	movlw	3
 19477  010C10  2776               	addwf	i2printf@ap& (0+255),f,b
 19478  010C12  0E00               	movlw	0
 19479  010C14  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;doprnt.c: 831: if(fval < 0.0) {
 19483  010C16  AF82               	btfss	(i2printf@fval+2)& (0+255),7,b
 19484  010C18  D011               	goto	i2l1122
 19485                           
 19486                           ; BSR set to: 0
 19487                           ;doprnt.c: 832: fval = -fval;
 19488  010C1A  C080  F024         	movff	i2printf@fval,i2___ftneg@f1
 19489  010C1E  C081  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 19490  010C22  C082  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 19491  010C26  EC30  F0B1         	call	i2___ftneg	;wreg free
 19492  010C2A  C024  F080         	movff	?i2___ftneg,i2printf@fval
 19493  010C2E  C025  F081         	movff	?i2___ftneg+1,i2printf@fval+1
 19494  010C32  C026  F082         	movff	?i2___ftneg+2,i2printf@fval+2
 19495                           
 19496                           ;doprnt.c: 833: flag |= 0x03;
 19497  010C36  0E03               	movlw	3
 19498  010C38  0100               	movlb	0	; () banked
 19499  010C3A  1378               	iorwf	i2printf@flag& (0+255),f,b
 19500  010C3C                     i2l1122:
 19501                           
 19502                           ; BSR set to: 0
 19503                           ;doprnt.c: 834: }
 19504                           ;doprnt.c: 835: exp = 0;
 19505                           
 19506                           ; BSR set to: 0
 19507  010C3C  0E00               	movlw	0
 19508  010C3E  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19509  010C40  0E00               	movlw	0
 19510  010C42  6F7A               	movwf	i2printf@exp& (0+255),b
 19511                           
 19512                           ; BSR set to: 0
 19513                           ;doprnt.c: 836: if( fval!=0) {
 19514  010C44  5180               	movf	i2printf@fval& (0+255),w,b
 19515  010C46  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 19516  010C48  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 19517  010C4A  B4D8               	btfsc	status,2,c
 19518  010C4C  D086               	goto	i2l1127
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 19522  010C4E  0E82               	movlw	130
 19523  010C50  6F68               	movwf	??i2_printf& (0+255),b
 19524  010C52  0EFF               	movlw	255
 19525  010C54  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19526  010C56  C080  F06A         	movff	i2printf@fval,??i2_printf+2
 19527  010C5A  C081  F06B         	movff	i2printf@fval+1,??i2_printf+3
 19528  010C5E  C082  F06C         	movff	i2printf@fval+2,??i2_printf+4
 19529  010C62  C083  F06D         	movff	i2printf@fval+3,??i2_printf+5
 19530  010C66  0E10               	movlw	16
 19531  010C68  D005               	goto	i2u1570_40
 19532  010C6A                     i2u1570_45:
 19533  010C6A  90D8               	bcf	status,0,c
 19534  010C6C  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 19535  010C6E  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 19536  010C70  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 19537  010C72  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 19538  010C74                     i2u1570_40:
 19539  010C74  2EE8               	decfsz	wreg,f,c
 19540  010C76  D7F9               	goto	i2u1570_45
 19541  010C78  516A               	movf	(??i2_printf+2)& (0+255),w,b
 19542  010C7A  2568               	addwf	??i2_printf& (0+255),w,b
 19543  010C7C  6F7A               	movwf	i2printf@exp& (0+255),b
 19544  010C7E  0E00               	movlw	0
 19545  010C80  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 19546  010C82  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;doprnt.c: 838: exp--;
 19550  010C84  077A               	decf	i2printf@exp& (0+255),f,b
 19551  010C86  A0D8               	btfss	status,0,c
 19552  010C88  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19553                           
 19554                           ; BSR set to: 0
 19555                           ;doprnt.c: 839: exp *= 3;
 19556  010C8A  C07A  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 19557  010C8E  C07B  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 19558  010C92  0E00               	movlw	0
 19559  010C94  6E12               	movwf	i2___wmul@multiplicand+1,c
 19560  010C96  0E03               	movlw	3
 19561  010C98  6E11               	movwf	i2___wmul@multiplicand,c
 19562  010C9A  EC1D  F0B1         	call	i2___wmul	;wreg free
 19563  010C9E  C00F  F07A         	movff	?i2___wmul,i2printf@exp
 19564  010CA2  C010  F07B         	movff	?i2___wmul+1,i2printf@exp+1
 19565                           
 19566                           ;doprnt.c: 840: exp /= 10;
 19567  010CA6  C07A  F007         	movff	i2printf@exp,i2___awdiv@dividend
 19568  010CAA  C07B  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 19569  010CAE  0E00               	movlw	0
 19570  010CB0  6E0A               	movwf	i2___awdiv@divisor+1,c
 19571  010CB2  0E0A               	movlw	10
 19572  010CB4  6E09               	movwf	i2___awdiv@divisor,c
 19573  010CB6  ECA7  F0AA         	call	i2___awdiv	;wreg free
 19574  010CBA  C007  F07A         	movff	?i2___awdiv,i2printf@exp
 19575  010CBE  C008  F07B         	movff	?i2___awdiv+1,i2printf@exp+1
 19576                           
 19577                           ;doprnt.c: 841: if(exp < 0)
 19578  010CC2  0100               	movlb	0	; () banked
 19579  010CC4  AF7B               	btfss	(i2printf@exp+1)& (0+255),7,b
 19580  010CC6  D003               	goto	i2l1124
 19581                           
 19582                           ; BSR set to: 0
 19583                           ;doprnt.c: 842: exp--;
 19584  010CC8  077A               	decf	i2printf@exp& (0+255),f,b
 19585  010CCA  A0D8               	btfss	status,0,c
 19586  010CCC  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19587  010CCE                     i2l1124:
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 19591                           
 19592                           ; BSR set to: 0
 19593  010CCE  517A               	movf	i2printf@exp& (0+255),w,b
 19594  010CD0  0800               	sublw	0
 19595  010CD2  EC45  F093         	call	i2_scale
 19596  010CD6  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 19597  010CDA  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 19598  010CDE  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 19599                           
 19600                           ;doprnt.c: 847: tmpval.integ *= fval;
 19601  010CE2  C07C  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 19602  010CE6  C07D  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 19603  010CEA  C07E  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 19604  010CEE  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 19605  010CF2  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 19606  010CF6  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 19607  010CFA  EC9F  F0A4         	call	i2___ftmul	;wreg free
 19608  010CFE  C027  F07C         	movff	?i2___ftmul,i2printf@tmpval
 19609  010D02  C028  F07D         	movff	?i2___ftmul+1,i2printf@tmpval+1
 19610  010D06  C029  F07E         	movff	?i2___ftmul+2,i2printf@tmpval+2
 19611                           
 19612                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 19613  010D0A  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19614  010D0E  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19615  010D12  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19616  010D16  0E00               	movlw	0
 19617  010D18  6E2D               	movwf	i2___ftge@ff2,c
 19618  010D1A  0E80               	movlw	128
 19619  010D1C  6E2E               	movwf	i2___ftge@ff2+1,c
 19620  010D1E  0E3F               	movlw	63
 19621  010D20  6E2F               	movwf	i2___ftge@ff2+2,c
 19622  010D22  EC94  F0A9         	call	i2___ftge	;wreg free
 19623  010D26  B0D8               	btfsc	status,0,c
 19624  010D28  D005               	goto	i2l1125
 19625                           
 19626                           ;doprnt.c: 849: exp--;
 19627  010D2A  0100               	movlb	0	; () banked
 19628  010D2C  077A               	decf	i2printf@exp& (0+255),f,b
 19629  010D2E  A0D8               	btfss	status,0,c
 19630  010D30  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19631  010D32  D013               	goto	i2l1127
 19632  010D34                     i2l1125:
 19633                           
 19634                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 19635                           
 19636                           ; BSR set to: 0
 19637  010D34  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19638  010D38  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19639  010D3C  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19640  010D40  0E00               	movlw	0
 19641  010D42  6E2D               	movwf	i2___ftge@ff2,c
 19642  010D44  0E20               	movlw	32
 19643  010D46  6E2E               	movwf	i2___ftge@ff2+1,c
 19644  010D48  0E41               	movlw	65
 19645  010D4A  6E2F               	movwf	i2___ftge@ff2+2,c
 19646  010D4C  EC94  F0A9         	call	i2___ftge	;wreg free
 19647  010D50  A0D8               	btfss	status,0,c
 19648  010D52  D003               	goto	i2l1127
 19649                           
 19650                           ;doprnt.c: 851: exp++;
 19651  010D54  0100               	movlb	0	; () banked
 19652  010D56  4B7A               	infsnz	i2printf@exp& (0+255),f,b
 19653  010D58  2B7B               	incf	(i2printf@exp+1)& (0+255),f,b
 19654  010D5A                     i2l1127:
 19655                           
 19656                           ;doprnt.c: 852: }
 19657                           ;doprnt.c: 1112: if(prec <= 12)
 19658                           
 19659                           ; BSR set to: 0
 19660                           
 19661                           ; BSR set to: 0
 19662                           
 19663                           ; BSR set to: 0
 19664  010D5A  0100               	movlb	0	; () banked
 19665  010D5C  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 19666  010D5E  D006               	goto	i2u1574_40
 19667  010D60  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 19668  010D62  E11B               	bnz	i2l12493
 19669  010D64  0E0D               	movlw	13
 19670  010D66  5D87               	subwf	i2printf@prec& (0+255),w,b
 19671  010D68  B0D8               	btfsc	status,0,c
 19672  010D6A  D017               	goto	i2l1128
 19673  010D6C                     i2u1574_40:
 19674                           
 19675                           ; BSR set to: 0
 19676                           ;doprnt.c: 1113: fval += fround(prec);
 19677  010D6C  C080  F040         	movff	i2printf@fval,i2___ftadd@f1
 19678  010D70  C081  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 19679  010D74  C082  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 19680  010D78  5187               	movf	i2printf@prec& (0+255),w,b
 19681  010D7A  EC6B  F098         	call	i2_fround
 19682  010D7E  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 19683  010D82  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 19684  010D86  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 19685  010D8A  ECA5  F09E         	call	i2___ftadd	;wreg free
 19686  010D8E  C040  F080         	movff	?i2___ftadd,i2printf@fval
 19687  010D92  C041  F081         	movff	?i2___ftadd+1,i2printf@fval+1
 19688  010D96  C042  F082         	movff	?i2___ftadd+2,i2printf@fval+2
 19689  010D9A                     i2l1128:
 19690  010D9A                     i2l12493:
 19691                           
 19692                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 19693  010D9A  0100               	movlb	0	; () banked
 19694  010D9C  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19695  010D9E  D006               	goto	i2u1575_40
 19696  010DA0  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19697  010DA2  E120               	bnz	i2l12501
 19698  010DA4  0E0A               	movlw	10
 19699  010DA6  5D7A               	subwf	i2printf@exp& (0+255),w,b
 19700  010DA8  B0D8               	btfsc	status,0,c
 19701  010DAA  D01C               	goto	i2u1578_40
 19702  010DAC                     i2u1575_40:
 19703                           
 19704                           ; BSR set to: 0
 19705  010DAC  5180               	movf	i2printf@fval& (0+255),w,b
 19706  010DAE  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 19707  010DB0  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 19708  010DB2  B4D8               	btfsc	status,2,c
 19709  010DB4  D056               	goto	i2l1129
 19710                           
 19711                           ; BSR set to: 0
 19712  010DB6  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 19713  010DBA  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 19714  010DBE  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 19715  010DC2  EC25  F0A4         	call	i2___fttol	;wreg free
 19716  010DC6  503D               	movf	?i2___fttol,w,c
 19717  010DC8  103E               	iorwf	?i2___fttol+1,w,c
 19718  010DCA  103F               	iorwf	?i2___fttol+2,w,c
 19719  010DCC  1040               	iorwf	?i2___fttol+3,w,c
 19720  010DCE  A4D8               	btfss	status,2,c
 19721  010DD0  D048               	goto	i2l1129
 19722  010DD2  0100               	movlb	0	; () banked
 19723  010DD4  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19724  010DD6  D045               	goto	i2l1129
 19725  010DD8  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19726  010DDA  E104               	bnz	i2l12501
 19727  010DDC  0E02               	movlw	2
 19728  010DDE  5D7A               	subwf	i2printf@exp& (0+255),w,b
 19729  010DE0  A0D8               	btfss	status,0,c
 19730  010DE2  D03F               	goto	i2l1129
 19731  010DE4                     i2u1578_40:
 19732  010DE4                     i2l12501:
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 19736  010DE4  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19737  010DE8  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19738  010DEC  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19739  010DF0  0E70               	movlw	112
 19740  010DF2  6E2D               	movwf	i2___ftge@ff2,c
 19741  010DF4  0E89               	movlw	137
 19742  010DF6  6E2E               	movwf	i2___ftge@ff2+1,c
 19743  010DF8  0E40               	movlw	64
 19744  010DFA  6E2F               	movwf	i2___ftge@ff2+2,c
 19745  010DFC  EC94  F0A9         	call	i2___ftge	;wreg free
 19746  010E00  B0D8               	btfsc	status,0,c
 19747  010E02  D003               	goto	i2l1132
 19748                           
 19749                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 19750  010E04  0100               	movlb	0	; () banked
 19751  010E06  0EF7               	movlw	247
 19752  010E08  D002               	goto	L2
 19753  010E0A                     i2l1132:
 19754                           
 19755                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 19756                           
 19757                           ; BSR set to: 0
 19758  010E0A  0100               	movlb	0	; () banked
 19759  010E0C  0EF8               	movlw	248
 19760  010E0E                     L2:
 19761  010E0E  277A               	addwf	i2printf@exp& (0+255),f,b
 19762  010E10  0EFF               	movlw	255
 19763  010E12  237B               	addwfc	(i2printf@exp+1)& (0+255),f,b
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;doprnt.c: 1124: }
 19767                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 19768                           
 19769                           ; BSR set to: 0
 19770  010E14  517A               	movf	i2printf@exp& (0+255),w,b
 19771  010E16  EC45  F093         	call	i2_scale
 19772  010E1A  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 19773  010E1E  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 19774  010E22  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 19775                           
 19776                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 19777  010E26  C080  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 19778  010E2A  C081  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 19779  010E2E  C082  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 19780  010E32  C07C  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 19781  010E36  C07D  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 19782  010E3A  C07E  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 19783  010E3E  ECDE  F0A0         	call	i2__tdiv_to_l_	;wreg free
 19784  010E42  C001  F083         	movff	?i2__tdiv_to_l_,i2printf@val
 19785  010E46  C002  F084         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 19786  010E4A  C003  F085         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 19787  010E4E  C004  F086         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 19788                           
 19789                           ;doprnt.c: 1129: fval = 0.0;
 19790  010E52  0E00               	movlw	0
 19791  010E54  0100               	movlb	0	; () banked
 19792  010E56  6F80               	movwf	i2printf@fval& (0+255),b
 19793  010E58  0E00               	movlw	0
 19794  010E5A  6F81               	movwf	(i2printf@fval+1)& (0+255),b
 19795  010E5C  0E00               	movlw	0
 19796  010E5E  6F82               	movwf	(i2printf@fval+2)& (0+255),b
 19797                           
 19798                           ;doprnt.c: 1130: } else {
 19799  010E60  D033               	goto	i2l1138
 19800  010E62                     i2l1129:
 19801                           
 19802                           ;doprnt.c: 1131: val = (unsigned long)fval;
 19803                           
 19804                           ; BSR set to: 0
 19805  010E62  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 19806  010E66  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 19807  010E6A  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 19808  010E6E  EC25  F0A4         	call	i2___fttol	;wreg free
 19809  010E72  C03D  F083         	movff	?i2___fttol,i2printf@val
 19810  010E76  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 19811  010E7A  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 19812  010E7E  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 19813                           
 19814                           ;doprnt.c: 1132: fval -= (double)val;
 19815  010E82  C080  F060         	movff	i2printf@fval,i2___ftsub@f1
 19816  010E86  C081  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 19817  010E8A  C082  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 19818  010E8E  C083  F009         	movff	i2printf@val,i2___lltoft@c
 19819  010E92  C084  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 19820  010E96  C085  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 19821  010E9A  C086  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 19822  010E9E  EC0C  F0AE         	call	i2___lltoft	;wreg free
 19823  010EA2  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 19824  010EA6  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 19825  010EAA  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 19826  010EAE  ECB5  F0AF         	call	i2___ftsub	;wreg free
 19827  010EB2  C060  F080         	movff	?i2___ftsub,i2printf@fval
 19828  010EB6  C061  F081         	movff	?i2___ftsub+1,i2printf@fval+1
 19829  010EBA  C062  F082         	movff	?i2___ftsub+2,i2printf@fval+2
 19830                           
 19831                           ;doprnt.c: 1133: exp = 0;
 19832  010EBE  0E00               	movlw	0
 19833  010EC0  0100               	movlb	0	; () banked
 19834  010EC2  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19835  010EC4  0E00               	movlw	0
 19836  010EC6  6F7A               	movwf	i2printf@exp& (0+255),b
 19837  010EC8                     i2l1138:
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;doprnt.c: 1134: }
 19841                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 19842                           
 19843                           ; BSR set to: 0
 19844  010EC8  0E01               	movlw	1
 19845  010ECA  6F89               	movwf	i2printf@c& (0+255),b
 19846  010ECC                     i2l12521:
 19847                           
 19848                           ; BSR set to: 0
 19849  010ECC  0E0A               	movlw	10
 19850  010ECE  1989               	xorwf	i2printf@c& (0+255),w,b
 19851  010ED0  B4D8               	btfsc	status,2,c
 19852  010ED2  D01B               	goto	i2u1582_40
 19853                           
 19854                           ; BSR set to: 0
 19855                           ;doprnt.c: 1137: if(val < dpowers[c])
 19856                           
 19857                           ; BSR set to: 0
 19858                           
 19859                           ; BSR set to: 0
 19860  010ED4  5189               	movf	i2printf@c& (0+255),w,b
 19861  010ED6  0D04               	mullw	4
 19862  010ED8  0E29               	movlw	low _dpowers
 19863  010EDA  24F3               	addwf	prodl,w,c
 19864  010EDC  6EF6               	movwf	tblptrl,c
 19865  010EDE  0EF2               	movlw	high _dpowers
 19866  010EE0  20F4               	addwfc	prodh,w,c
 19867  010EE2  6EF7               	movwf	tblptrh,c
 19868  010EE4                     	if	1	;There are 3 active tblptr bytes
 19869  010EE4  6AF8               	clrf	tblptru,c
 19870  010EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 19871  010EE8  22F8               	addwfc	tblptru,f,c
 19872  010EEA                     	endif
 19873  010EEA  0009               	tblrd		*+
 19874  010EEC  50F5               	movf	tablat,w,c
 19875  010EEE  5D83               	subwf	i2printf@val& (0+255),w,b
 19876  010EF0  0009               	tblrd		*+
 19877  010EF2  50F5               	movf	tablat,w,c
 19878  010EF4  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 19879  010EF6  0009               	tblrd		*+
 19880  010EF8  50F5               	movf	tablat,w,c
 19881  010EFA  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 19882  010EFC  0009               	tblrd		*+
 19883  010EFE  50F5               	movf	tablat,w,c
 19884  010F00  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 19885  010F02  A0D8               	btfss	status,0,c
 19886  010F04  D002               	goto	i2u1582_40
 19887                           
 19888                           ; BSR set to: 0
 19889                           
 19890                           ; BSR set to: 0
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;doprnt.c: 1138: break;
 19894  010F06  2B89               	incf	i2printf@c& (0+255),f,b
 19895  010F08  D7E1               	goto	i2l12521
 19896  010F0A                     i2u1582_40:
 19897                           
 19898                           ; BSR set to: 0
 19899                           ;doprnt.c: 1175: {
 19900                           ;doprnt.c: 1188: if(flag & 0x03)
 19901                           
 19902                           ; BSR set to: 0
 19903  010F0A  0E03               	movlw	3
 19904  010F0C  1578               	andwf	i2printf@flag& (0+255),w,b
 19905  010F0E  6F68               	movwf	??i2_printf& (0+255),b
 19906  010F10  0E00               	movlw	0
 19907  010F12  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19908  010F14  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19909  010F16  5168               	movf	??i2_printf& (0+255),w,b
 19910  010F18  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 19911  010F1A  B4D8               	btfsc	status,2,c
 19912  010F1C  D04D               	goto	i2l1143
 19913                           
 19914                           ; BSR set to: 0
 19915                           ;doprnt.c: 1190: (putch('-') );
 19916  010F1E  0E2D               	movlw	45
 19917  010F20  EC10  F0B2         	call	i2_putch
 19918                           
 19919                           ;doprnt.c: 1195: }
 19920                           ;doprnt.c: 1196: while(c--) {
 19921  010F24  D049               	goto	i2l1143
 19922  010F26                     
 19923                           ;doprnt.c: 1200: {
 19924                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 19925  010F26  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 19926  010F2A  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19927  010F2E  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19928  010F32  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19929  010F36  0100               	movlb	0	; () banked
 19930  010F38  5189               	movf	i2printf@c& (0+255),w,b
 19931  010F3A  0D04               	mullw	4
 19932  010F3C  0E29               	movlw	low _dpowers
 19933  010F3E  24F3               	addwf	prodl,w,c
 19934  010F40  6EF6               	movwf	tblptrl,c
 19935  010F42  0EF2               	movlw	high _dpowers
 19936  010F44  20F4               	addwfc	prodh,w,c
 19937  010F46  6EF7               	movwf	tblptrh,c
 19938  010F48                     	if	1	;There are 3 active tblptr bytes
 19939  010F48  6AF8               	clrf	tblptru,c
 19940  010F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 19941  010F4C  22F8               	addwfc	tblptru,f,c
 19942  010F4E                     	endif
 19943  010F4E  0009               	tblrd		*+
 19944  010F50  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19945  010F54  0009               	tblrd		*+
 19946  010F56  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19947  010F5A  0009               	tblrd		*+
 19948  010F5C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19949  010F60  000A               	tblrd		*-
 19950  010F62  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19951  010F66  ECE9  F0AA         	call	i2___lldiv	;wreg free
 19952  010F6A  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 19953  010F6E  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 19954  010F72  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 19955  010F76  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 19956                           
 19957                           ;doprnt.c: 1202: tmpval.vd %= 10;
 19958  010F7A  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 19959  010F7E  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 19960  010F82  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 19961  010F86  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 19962  010F8A  0E0A               	movlw	10
 19963  010F8C  6E12               	movwf	i2___llmod@divisor,c
 19964  010F8E  0E00               	movlw	0
 19965  010F90  6E13               	movwf	i2___llmod@divisor+1,c
 19966  010F92  0E00               	movlw	0
 19967  010F94  6E14               	movwf	i2___llmod@divisor+2,c
 19968  010F96  0E00               	movlw	0
 19969  010F98  6E15               	movwf	i2___llmod@divisor+3,c
 19970  010F9A  ECE9  F0AC         	call	i2___llmod	;wreg free
 19971  010F9E  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 19972  010FA2  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 19973  010FA6  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 19974  010FAA  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 19975                           
 19976                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 19977  010FAE  0100               	movlb	0	; () banked
 19978  010FB0  517C               	movf	i2printf@tmpval& (0+255),w,b
 19979  010FB2  0F30               	addlw	48
 19980  010FB4  EC10  F0B2         	call	i2_putch
 19981  010FB8                     i2l1143:
 19982  010FB8  0100               	movlb	0	; () banked
 19983  010FBA  0789               	decf	i2printf@c& (0+255),f,b
 19984  010FBC  2989               	incf	i2printf@c& (0+255),w,b
 19985  010FBE  B4D8               	btfsc	status,2,c
 19986  010FC0  D008               	goto	i2l1146
 19987  010FC2  D7B1               	goto	i2l1144
 19988  010FC4                     i2l12545:
 19989                           
 19990                           ; BSR set to: 0
 19991                           ;doprnt.c: 1208: (putch('0') );
 19992  010FC4  0E30               	movlw	48
 19993  010FC6  EC10  F0B2         	call	i2_putch
 19994                           
 19995                           ;doprnt.c: 1209: exp--;
 19996  010FCA  0100               	movlb	0	; () banked
 19997  010FCC  077A               	decf	i2printf@exp& (0+255),f,b
 19998  010FCE  A0D8               	btfss	status,0,c
 19999  010FD0  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 20000  010FD2                     i2l1146:
 20001                           
 20002                           ; BSR set to: 0
 20003                           
 20004                           ; BSR set to: 0
 20005  010FD2  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 20006  010FD4  D005               	goto	i2u1585_40
 20007  010FD6  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 20008  010FD8  E1F5               	bnz	i2l12545
 20009  010FDA  057A               	decf	i2printf@exp& (0+255),w,b
 20010  010FDC  B0D8               	btfsc	status,0,c
 20011  010FDE  D7F2               	goto	i2l1147
 20012  010FE0                     i2u1585_40:
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;doprnt.c: 1210: }
 20016                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 20017                           
 20018                           ; BSR set to: 0
 20019  010FE0  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 20020  010FE2  D009               	goto	i2l1149
 20021  010FE4  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 20022  010FE6  E104               	bnz	i2u1586_40
 20023  010FE8  0E09               	movlw	9
 20024  010FEA  5D87               	subwf	i2printf@prec& (0+255),w,b
 20025  010FEC  A0D8               	btfss	status,0,c
 20026  010FEE  D003               	goto	i2l1149
 20027  010FF0                     i2u1586_40:
 20028                           
 20029                           ; BSR set to: 0
 20030                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 20031  010FF0  0E08               	movlw	8
 20032  010FF2  6F89               	movwf	i2printf@c& (0+255),b
 20033  010FF4  D002               	goto	i2l1150
 20034  010FF6                     i2l1149:
 20035                           
 20036                           ; BSR set to: 0
 20037                           ;doprnt.c: 1213: else
 20038                           ;doprnt.c: 1214: c = prec;
 20039  010FF6  C087  F089         	movff	i2printf@prec,i2printf@c
 20040  010FFA                     i2l1150:
 20041                           
 20042                           ; BSR set to: 0
 20043                           ;doprnt.c: 1215: prec -= c;
 20044                           
 20045                           ; BSR set to: 0
 20046  010FFA  5189               	movf	i2printf@c& (0+255),w,b
 20047  010FFC  5F87               	subwf	i2printf@prec& (0+255),f,b
 20048  010FFE  0E00               	movlw	0
 20049  011000  BF89               	btfsc	i2printf@c& (0+255),7,b
 20050  011002  0EFF               	movlw	255
 20051  011004  5B88               	subwfb	(i2printf@prec+1)& (0+255),f,b
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;doprnt.c: 1219: if(c)
 20055  011006  5189               	movf	i2printf@c& (0+255),w,b
 20056  011008  B4D8               	btfsc	status,2,c
 20057  01100A  D003               	goto	i2l1151
 20058                           
 20059                           ; BSR set to: 0
 20060                           ;doprnt.c: 1221: (putch('.') );
 20061  01100C  0E2E               	movlw	46
 20062  01100E  EC10  F0B2         	call	i2_putch
 20063  011012                     i2l1151:
 20064                           
 20065                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 20066  011012  0100               	movlb	0	; () banked
 20067  011014  5189               	movf	i2printf@c& (0+255),w,b
 20068  011016  EC45  F093         	call	i2_scale
 20069  01101A  C036  F06E         	movff	?i2_scale,i2_printf$3341
 20070  01101E  C037  F06F         	movff	?i2_scale+1,i2_printf$3341+1
 20071  011022  C038  F070         	movff	?i2_scale+2,i2_printf$3341+2
 20072                           
 20073                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 20074  011026  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 20075  01102A  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 20076  01102E  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 20077  011032  C06E  F027         	movff	i2_printf$3341,i2___ftmul@f1
 20078  011036  C06F  F028         	movff	i2_printf$3341+1,i2___ftmul@f1+1
 20079  01103A  C070  F029         	movff	i2_printf$3341+2,i2___ftmul@f1+2
 20080  01103E  EC9F  F0A4         	call	i2___ftmul	;wreg free
 20081  011042  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 20082  011046  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 20083  01104A  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 20084  01104E  EC25  F0A4         	call	i2___fttol	;wreg free
 20085  011052  C03D  F083         	movff	?i2___fttol,i2printf@val
 20086  011056  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 20087  01105A  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 20088  01105E  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 20089                           
 20090                           ;doprnt.c: 1228: while(c--) {
 20091  011062  D073               	goto	i2l1152
 20092  011064                     
 20093                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 20094  011064  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20095  011068  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20096  01106C  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20097  011070  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20098  011074  0100               	movlb	0	; () banked
 20099  011076  5189               	movf	i2printf@c& (0+255),w,b
 20100  011078  0D04               	mullw	4
 20101  01107A  0E29               	movlw	low _dpowers
 20102  01107C  24F3               	addwf	prodl,w,c
 20103  01107E  6EF6               	movwf	tblptrl,c
 20104  011080  0EF2               	movlw	high _dpowers
 20105  011082  20F4               	addwfc	prodh,w,c
 20106  011084  6EF7               	movwf	tblptrh,c
 20107  011086                     	if	1	;There are 3 active tblptr bytes
 20108  011086  6AF8               	clrf	tblptru,c
 20109  011088  0E00               	movlw	low (__mediumconst shr (0+16))
 20110  01108A  22F8               	addwfc	tblptru,f,c
 20111  01108C                     	endif
 20112  01108C  0009               	tblrd		*+
 20113  01108E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20114  011092  0009               	tblrd		*+
 20115  011094  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20116  011098  0009               	tblrd		*+
 20117  01109A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20118  01109E  000A               	tblrd		*-
 20119  0110A0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20120  0110A4  ECE9  F0AA         	call	i2___lldiv	;wreg free
 20121  0110A8  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 20122  0110AC  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 20123  0110B0  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 20124  0110B4  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 20125                           
 20126                           ;doprnt.c: 1230: tmpval.vd %= 10;
 20127  0110B8  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 20128  0110BC  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 20129  0110C0  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 20130  0110C4  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 20131  0110C8  0E0A               	movlw	10
 20132  0110CA  6E12               	movwf	i2___llmod@divisor,c
 20133  0110CC  0E00               	movlw	0
 20134  0110CE  6E13               	movwf	i2___llmod@divisor+1,c
 20135  0110D0  0E00               	movlw	0
 20136  0110D2  6E14               	movwf	i2___llmod@divisor+2,c
 20137  0110D4  0E00               	movlw	0
 20138  0110D6  6E15               	movwf	i2___llmod@divisor+3,c
 20139  0110D8  ECE9  F0AC         	call	i2___llmod	;wreg free
 20140  0110DC  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 20141  0110E0  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 20142  0110E4  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 20143  0110E8  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 20144                           
 20145                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 20146  0110EC  0100               	movlb	0	; () banked
 20147  0110EE  517C               	movf	i2printf@tmpval& (0+255),w,b
 20148  0110F0  0F30               	addlw	48
 20149  0110F2  EC10  F0B2         	call	i2_putch
 20150                           
 20151                           ;doprnt.c: 1232: val %= dpowers[c];
 20152  0110F6  C083  F00E         	movff	i2printf@val,i2___llmod@dividend
 20153  0110FA  C084  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 20154  0110FE  C085  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 20155  011102  C086  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 20156  011106  0100               	movlb	0	; () banked
 20157  011108  5189               	movf	i2printf@c& (0+255),w,b
 20158  01110A  0D04               	mullw	4
 20159  01110C  0E29               	movlw	low _dpowers
 20160  01110E  24F3               	addwf	prodl,w,c
 20161  011110  6EF6               	movwf	tblptrl,c
 20162  011112  0EF2               	movlw	high _dpowers
 20163  011114  20F4               	addwfc	prodh,w,c
 20164  011116  6EF7               	movwf	tblptrh,c
 20165  011118                     	if	1	;There are 3 active tblptr bytes
 20166  011118  6AF8               	clrf	tblptru,c
 20167  01111A  0E00               	movlw	low (__mediumconst shr (0+16))
 20168  01111C  22F8               	addwfc	tblptru,f,c
 20169  01111E                     	endif
 20170  01111E  0009               	tblrd		*+
 20171  011120  CFF5 F012          	movff	tablat,i2___llmod@divisor
 20172  011124  0009               	tblrd		*+
 20173  011126  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 20174  01112A  0009               	tblrd		*+
 20175  01112C  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 20176  011130  000A               	tblrd		*-
 20177  011132  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 20178  011136  ECE9  F0AC         	call	i2___llmod	;wreg free
 20179  01113A  C00E  F083         	movff	?i2___llmod,i2printf@val
 20180  01113E  C00F  F084         	movff	?i2___llmod+1,i2printf@val+1
 20181  011142  C010  F085         	movff	?i2___llmod+2,i2printf@val+2
 20182  011146  C011  F086         	movff	?i2___llmod+3,i2printf@val+3
 20183  01114A                     i2l1152:
 20184  01114A  0100               	movlb	0	; () banked
 20185  01114C  0789               	decf	i2printf@c& (0+255),f,b
 20186  01114E  2989               	incf	i2printf@c& (0+255),w,b
 20187  011150  B4D8               	btfsc	status,2,c
 20188  011152  D008               	goto	i2l1155
 20189  011154  D787               	goto	i2l1153
 20190  011156                     
 20191                           ; BSR set to: 0
 20192                           ;doprnt.c: 1236: (putch('0') );
 20193                           
 20194                           ; BSR set to: 0
 20195  011156  0E30               	movlw	48
 20196  011158  EC10  F0B2         	call	i2_putch
 20197                           
 20198                           ;doprnt.c: 1237: prec--;
 20199  01115C  0100               	movlb	0	; () banked
 20200  01115E  0787               	decf	i2printf@prec& (0+255),f,b
 20201  011160  A0D8               	btfss	status,0,c
 20202  011162  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20203  011164                     i2l1155:
 20204                           
 20205                           ; BSR set to: 0
 20206                           
 20207                           ; BSR set to: 0
 20208  011164  5187               	movf	i2printf@prec& (0+255),w,b
 20209  011166  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 20210  011168  B4D8               	btfsc	status,2,c
 20211  01116A  D156               	goto	i2u1603_40
 20212  01116C  D7F4               	goto	i2l1156
 20213  01116E                     i2l1120:
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;doprnt.c: 1246: }
 20217                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 20218                           
 20219                           ; BSR set to: 0
 20220  01116E  0EC0               	movlw	192
 20221  011170  1578               	andwf	i2printf@flag& (0+255),w,b
 20222  011172  6F68               	movwf	??i2_printf& (0+255),b
 20223  011174  0E00               	movlw	0
 20224  011176  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 20225  011178  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20226  01117A  5168               	movf	??i2_printf& (0+255),w,b
 20227  01117C  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 20228  01117E  A4D8               	btfss	status,2,c
 20229  011180  D01E               	goto	i2l1158
 20230                           
 20231                           ; BSR set to: 0
 20232                           ;doprnt.c: 1253: {
 20233                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 20234  011182  C076  FFD9         	movff	i2printf@ap,fsr2l
 20235  011186  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 20236  01118A  CFDE F083          	movff	postinc2,i2printf@val
 20237  01118E  CFDD F084          	movff	postdec2,i2printf@val+1
 20238  011192  0E00               	movlw	0
 20239  011194  BF84               	btfsc	(i2printf@val+1)& (0+255),7,b
 20240  011196  0EFF               	movlw	-1
 20241  011198  6F85               	movwf	(i2printf@val+2)& (0+255),b
 20242  01119A  6F86               	movwf	(i2printf@val+3)& (0+255),b
 20243                           
 20244                           ; BSR set to: 0
 20245  01119C  0E02               	movlw	2
 20246  01119E  2776               	addwf	i2printf@ap& (0+255),f,b
 20247  0111A0  0E00               	movlw	0
 20248  0111A2  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 20249                           
 20250                           ; BSR set to: 0
 20251                           ;doprnt.c: 1261: if((long)val < 0) {
 20252  0111A4  AF86               	btfss	(i2printf@val+3)& (0+255),7,b
 20253  0111A6  D01D               	goto	i2l1160
 20254                           
 20255                           ; BSR set to: 0
 20256                           ;doprnt.c: 1262: flag |= 0x03;
 20257  0111A8  0E03               	movlw	3
 20258  0111AA  1378               	iorwf	i2printf@flag& (0+255),f,b
 20259                           
 20260                           ; BSR set to: 0
 20261                           ;doprnt.c: 1263: val = -val;
 20262  0111AC  1F86               	comf	(i2printf@val+3)& (0+255),f,b
 20263  0111AE  1F85               	comf	(i2printf@val+2)& (0+255),f,b
 20264  0111B0  1F84               	comf	(i2printf@val+1)& (0+255),f,b
 20265  0111B2  6D83               	negf	i2printf@val& (0+255),b
 20266  0111B4  0E00               	movlw	0
 20267  0111B6  2384               	addwfc	(i2printf@val+1)& (0+255),f,b
 20268  0111B8  2385               	addwfc	(i2printf@val+2)& (0+255),f,b
 20269  0111BA  2386               	addwfc	(i2printf@val+3)& (0+255),f,b
 20270                           
 20271                           ; BSR set to: 0
 20272                           ;doprnt.c: 1264: }
 20273                           ;doprnt.c: 1266: }
 20274  0111BC  D012               	goto	i2l1160
 20275  0111BE                     i2l1158:
 20276                           
 20277                           ; BSR set to: 0
 20278                           ;doprnt.c: 1268: else
 20279                           ;doprnt.c: 1273: {
 20280                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 20281                           
 20282                           ; BSR set to: 0
 20283  0111BE  C076  FFD9         	movff	i2printf@ap,fsr2l
 20284  0111C2  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 20285  0111C6  CFDE F068          	movff	postinc2,??i2_printf
 20286  0111CA  CFDD F069          	movff	postdec2,??i2_printf+1
 20287  0111CE  C068  F083         	movff	??i2_printf,i2printf@val
 20288  0111D2  C069  F084         	movff	??i2_printf+1,i2printf@val+1
 20289  0111D6  6B85               	clrf	(i2printf@val+2)& (0+255),b
 20290  0111D8  6B86               	clrf	(i2printf@val+3)& (0+255),b
 20291                           
 20292                           ; BSR set to: 0
 20293  0111DA  0E02               	movlw	2
 20294  0111DC  2776               	addwf	i2printf@ap& (0+255),f,b
 20295  0111DE  0E00               	movlw	0
 20296  0111E0  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 20297  0111E2                     i2l1160:
 20298                           
 20299                           ; BSR set to: 0
 20300                           ;doprnt.c: 1287: }
 20301                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 20302                           
 20303                           ; BSR set to: 0
 20304  0111E2  5187               	movf	i2printf@prec& (0+255),w,b
 20305  0111E4  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 20306  0111E6  A4D8               	btfss	status,2,c
 20307  0111E8  D04B               	goto	i2l1162
 20308                           
 20309                           ; BSR set to: 0
 20310  0111EA  5183               	movf	i2printf@val& (0+255),w,b
 20311  0111EC  1184               	iorwf	(i2printf@val+1)& (0+255),w,b
 20312  0111EE  1185               	iorwf	(i2printf@val+2)& (0+255),w,b
 20313  0111F0  1186               	iorwf	(i2printf@val+3)& (0+255),w,b
 20314  0111F2  A4D8               	btfss	status,2,c
 20315  0111F4  D045               	goto	i2l1162
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;doprnt.c: 1291: prec++;
 20319  0111F6  4B87               	infsnz	i2printf@prec& (0+255),f,b
 20320  0111F8  2B88               	incf	(i2printf@prec+1)& (0+255),f,b
 20321                           
 20322                           ; BSR set to: 0
 20323                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 20324  0111FA  D042               	goto	i2l1162
 20325  0111FC                     
 20326                           ; BSR set to: 0
 20327                           ;doprnt.c: 1302: case 0xC0:
 20328                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20329                           
 20330                           ; BSR set to: 0
 20331                           
 20332                           ; BSR set to: 0
 20333  0111FC  0E01               	movlw	1
 20334  0111FE  6F89               	movwf	i2printf@c& (0+255),b
 20335  011200                     i2l12605:
 20336                           
 20337                           ; BSR set to: 0
 20338  011200  0E0A               	movlw	10
 20339  011202  1989               	xorwf	i2printf@c& (0+255),w,b
 20340  011204  B4D8               	btfsc	status,2,c
 20341  011206  D047               	goto	i2l1168
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;doprnt.c: 1306: if(val < dpowers[c])
 20345                           
 20346                           ; BSR set to: 0
 20347                           
 20348                           ; BSR set to: 0
 20349  011208  5189               	movf	i2printf@c& (0+255),w,b
 20350  01120A  0D04               	mullw	4
 20351  01120C  0E29               	movlw	low _dpowers
 20352  01120E  24F3               	addwf	prodl,w,c
 20353  011210  6EF6               	movwf	tblptrl,c
 20354  011212  0EF2               	movlw	high _dpowers
 20355  011214  20F4               	addwfc	prodh,w,c
 20356  011216  6EF7               	movwf	tblptrh,c
 20357  011218                     	if	1	;There are 3 active tblptr bytes
 20358  011218  6AF8               	clrf	tblptru,c
 20359  01121A  0E00               	movlw	low (__mediumconst shr (0+16))
 20360  01121C  22F8               	addwfc	tblptru,f,c
 20361  01121E                     	endif
 20362  01121E  0009               	tblrd		*+
 20363  011220  50F5               	movf	tablat,w,c
 20364  011222  5D83               	subwf	i2printf@val& (0+255),w,b
 20365  011224  0009               	tblrd		*+
 20366  011226  50F5               	movf	tablat,w,c
 20367  011228  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 20368  01122A  0009               	tblrd		*+
 20369  01122C  50F5               	movf	tablat,w,c
 20370  01122E  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 20371  011230  0009               	tblrd		*+
 20372  011232  50F5               	movf	tablat,w,c
 20373  011234  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 20374  011236  A0D8               	btfss	status,0,c
 20375  011238  D02E               	goto	i2l1168
 20376                           
 20377                           ; BSR set to: 0
 20378                           
 20379                           ; BSR set to: 0
 20380                           
 20381                           ; BSR set to: 0
 20382                           ;doprnt.c: 1307: break;
 20383  01123A  2B89               	incf	i2printf@c& (0+255),f,b
 20384  01123C  D7E1               	goto	i2l12605
 20385  01123E                     
 20386                           ; BSR set to: 0
 20387                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 20388                           
 20389                           ; BSR set to: 0
 20390  01123E  0E01               	movlw	1
 20391  011240  6F89               	movwf	i2printf@c& (0+255),b
 20392  011242                     i2l12619:
 20393                           
 20394                           ; BSR set to: 0
 20395  011242  0E08               	movlw	8
 20396  011244  1989               	xorwf	i2printf@c& (0+255),w,b
 20397  011246  B4D8               	btfsc	status,2,c
 20398  011248  D026               	goto	i2l1168
 20399                           
 20400                           ; BSR set to: 0
 20401                           ;doprnt.c: 1317: if(val < hexpowers[c])
 20402                           
 20403                           ; BSR set to: 0
 20404                           
 20405                           ; BSR set to: 0
 20406  01124A  5189               	movf	i2printf@c& (0+255),w,b
 20407  01124C  0D04               	mullw	4
 20408  01124E  0E9F               	movlw	low _hexpowers
 20409  011250  24F3               	addwf	prodl,w,c
 20410  011252  6EF6               	movwf	tblptrl,c
 20411  011254  0EF2               	movlw	high _hexpowers
 20412  011256  20F4               	addwfc	prodh,w,c
 20413  011258  6EF7               	movwf	tblptrh,c
 20414  01125A                     	if	1	;There are 3 active tblptr bytes
 20415  01125A  6AF8               	clrf	tblptru,c
 20416  01125C  0E00               	movlw	low (__mediumconst shr (0+16))
 20417  01125E  22F8               	addwfc	tblptru,f,c
 20418  011260                     	endif
 20419  011260  0009               	tblrd		*+
 20420  011262  50F5               	movf	tablat,w,c
 20421  011264  5D83               	subwf	i2printf@val& (0+255),w,b
 20422  011266  0009               	tblrd		*+
 20423  011268  50F5               	movf	tablat,w,c
 20424  01126A  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 20425  01126C  0009               	tblrd		*+
 20426  01126E  50F5               	movf	tablat,w,c
 20427  011270  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 20428  011272  0009               	tblrd		*+
 20429  011274  50F5               	movf	tablat,w,c
 20430  011276  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 20431  011278  A0D8               	btfss	status,0,c
 20432  01127A  D00D               	goto	i2l1168
 20433                           
 20434                           ; BSR set to: 0
 20435                           
 20436                           ; BSR set to: 0
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;doprnt.c: 1318: break;
 20440  01127C  2B89               	incf	i2printf@c& (0+255),f,b
 20441  01127E  D7E1               	goto	i2l12619
 20442  011280                     i2l1162:
 20443                           
 20444                           ; BSR set to: 0
 20445                           
 20446                           ; BSR set to: 0
 20447  011280  5178               	movf	i2printf@flag& (0+255),w,b
 20448  011282  0BC0               	andlw	192
 20449                           
 20450                           ; Switch size 1, requested type "space"
 20451                           ; Number of cases is 3, Range of values is 0 to 192
 20452                           ; switch strategies available:
 20453                           ; Name         Instructions Cycles
 20454                           ; simple_byte           10     6 (average)
 20455                           ;	Chosen strategy is simple_byte
 20456  011284  0A00               	xorlw	0	; case 0
 20457  011286  B4D8               	btfsc	status,2,c
 20458  011288  D7B9               	goto	i2l1163
 20459  01128A  0A80               	xorlw	128	; case 128
 20460  01128C  B4D8               	btfsc	status,2,c
 20461  01128E  D7D7               	goto	i2l1169
 20462  011290  0A40               	xorlw	64	; case 192
 20463  011292  B4D8               	btfsc	status,2,c
 20464  011294  D7B3               	goto	i2l1163
 20465  011296                     i2l1168:
 20466                           
 20467                           ; BSR set to: 0
 20468                           ;doprnt.c: 1339: if(c < prec)
 20469                           
 20470                           ; BSR set to: 0
 20471  011296  0E80               	movlw	128
 20472  011298  BF89               	btfsc	i2printf@c& (0+255),7,b
 20473  01129A  0E7F               	movlw	127
 20474  01129C  6F68               	movwf	??i2_printf& (0+255),b
 20475  01129E  5187               	movf	i2printf@prec& (0+255),w,b
 20476  0112A0  5D89               	subwf	i2printf@c& (0+255),w,b
 20477  0112A2  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 20478  0112A4  0A80               	xorlw	128
 20479  0112A6  5968               	subwfb	??i2_printf& (0+255),w,b
 20480  0112A8  B0D8               	btfsc	status,0,c
 20481  0112AA  D003               	goto	i2l1173
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;doprnt.c: 1340: c = prec;
 20485  0112AC  C087  F089         	movff	i2printf@prec,i2printf@c
 20486  0112B0  D010               	goto	i2l1175
 20487  0112B2                     i2l1173:
 20488                           
 20489                           ; BSR set to: 0
 20490                           ;doprnt.c: 1341: else if(prec < c)
 20491                           
 20492                           ; BSR set to: 0
 20493  0112B2  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 20494  0112B4  0A80               	xorlw	128
 20495  0112B6  6F68               	movwf	??i2_printf& (0+255),b
 20496  0112B8  5189               	movf	i2printf@c& (0+255),w,b
 20497  0112BA  5D87               	subwf	i2printf@prec& (0+255),w,b
 20498  0112BC  0E80               	movlw	128
 20499  0112BE  BF89               	btfsc	i2printf@c& (0+255),7,b
 20500  0112C0  0E7F               	movlw	127
 20501  0112C2  5968               	subwfb	??i2_printf& (0+255),w,b
 20502  0112C4  B0D8               	btfsc	status,0,c
 20503  0112C6  D005               	goto	i2l1175
 20504                           
 20505                           ; BSR set to: 0
 20506                           ;doprnt.c: 1342: prec = c;
 20507  0112C8  5189               	movf	i2printf@c& (0+255),w,b
 20508  0112CA  6F87               	movwf	i2printf@prec& (0+255),b
 20509  0112CC  6B88               	clrf	(i2printf@prec+1)& (0+255),b
 20510  0112CE  BF87               	btfsc	i2printf@prec& (0+255),7,b
 20511  0112D0  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20512  0112D2                     i2l1175:
 20513                           
 20514                           ; BSR set to: 0
 20515                           ;doprnt.c: 1422: {
 20516                           ;doprnt.c: 1438: if(flag & 0x03)
 20517                           
 20518                           ; BSR set to: 0
 20519                           
 20520                           ; BSR set to: 0
 20521  0112D2  0E03               	movlw	3
 20522  0112D4  1578               	andwf	i2printf@flag& (0+255),w,b
 20523  0112D6  6F68               	movwf	??i2_printf& (0+255),b
 20524  0112D8  0E00               	movlw	0
 20525  0112DA  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 20526  0112DC  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20527  0112DE  5168               	movf	??i2_printf& (0+255),w,b
 20528  0112E0  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 20529  0112E2  B4D8               	btfsc	status,2,c
 20530  0112E4  D090               	goto	i2l1177
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;doprnt.c: 1439: (putch('-') );
 20534  0112E6  0E2D               	movlw	45
 20535  0112E8  EC10  F0B2         	call	i2_putch
 20536                           
 20537                           ;doprnt.c: 1469: }
 20538                           ;doprnt.c: 1474: while(prec--) {
 20539  0112EC  D08C               	goto	i2l1177
 20540  0112EE                     
 20541                           ;doprnt.c: 1486: case 0xC0:
 20542                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 20543  0112EE  C087  F068         	movff	i2printf@prec,??i2_printf
 20544  0112F2  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 20545  0112F6  0100               	movlb	0	; () banked
 20546  0112F8  90D8               	bcf	status,0,c
 20547  0112FA  3768               	rlcf	??i2_printf& (0+255),f,b
 20548  0112FC  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20549  0112FE  90D8               	bcf	status,0,c
 20550  011300  3768               	rlcf	??i2_printf& (0+255),f,b
 20551  011302  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20552  011304  0E29               	movlw	low _dpowers
 20553  011306  2568               	addwf	??i2_printf& (0+255),w,b
 20554  011308  6EF6               	movwf	tblptrl,c
 20555  01130A  0EF2               	movlw	high _dpowers
 20556  01130C  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 20557  01130E  6EF7               	movwf	tblptrh,c
 20558  011310                     	if	1	;There are 3 active tblptr bytes
 20559  011310  6AF8               	clrf	tblptru,c
 20560  011312  0E00               	movlw	low (__mediumconst shr (0+16))
 20561  011314  22F8               	addwfc	tblptru,f,c
 20562  011316                     	endif
 20563  011316  0009               	tblrd		*+
 20564  011318  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20565  01131C  0009               	tblrd		*+
 20566  01131E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20567  011322  0009               	tblrd		*+
 20568  011324  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20569  011328  000A               	tblrd		*-
 20570  01132A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20571  01132E  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20572  011332  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20573  011336  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20574  01133A  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20575  01133E  ECE9  F0AA         	call	i2___lldiv	;wreg free
 20576  011342  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 20577  011346  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 20578  01134A  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 20579  01134E  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 20580  011352  0E0A               	movlw	10
 20581  011354  6E12               	movwf	i2___llmod@divisor,c
 20582  011356  0E00               	movlw	0
 20583  011358  6E13               	movwf	i2___llmod@divisor+1,c
 20584  01135A  0E00               	movlw	0
 20585  01135C  6E14               	movwf	i2___llmod@divisor+2,c
 20586  01135E  0E00               	movlw	0
 20587  011360  6E15               	movwf	i2___llmod@divisor+3,c
 20588  011362  ECE9  F0AC         	call	i2___llmod	;wreg free
 20589  011366  500E               	movf	?i2___llmod,w,c
 20590  011368  0F30               	addlw	48
 20591  01136A  0100               	movlb	0	; () banked
 20592  01136C  6F89               	movwf	i2printf@c& (0+255),b
 20593                           
 20594                           ;doprnt.c: 1491: break;
 20595  01136E  D048               	goto	i2l1182
 20596  011370                     
 20597                           ; BSR set to: 0
 20598                           ;doprnt.c: 1499: {
 20599                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 20600                           
 20601                           ; BSR set to: 0
 20602  011370  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20603  011374  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20604  011378  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20605  01137C  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20606  011380  C087  F068         	movff	i2printf@prec,??i2_printf
 20607  011384  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 20608  011388  90D8               	bcf	status,0,c
 20609  01138A  3768               	rlcf	??i2_printf& (0+255),f,b
 20610  01138C  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20611  01138E  90D8               	bcf	status,0,c
 20612  011390  3768               	rlcf	??i2_printf& (0+255),f,b
 20613  011392  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20614  011394  0E9F               	movlw	low _hexpowers
 20615  011396  2568               	addwf	??i2_printf& (0+255),w,b
 20616  011398  6EF6               	movwf	tblptrl,c
 20617  01139A  0EF2               	movlw	high _hexpowers
 20618  01139C  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 20619  01139E  6EF7               	movwf	tblptrh,c
 20620  0113A0                     	if	1	;There are 3 active tblptr bytes
 20621  0113A0  6AF8               	clrf	tblptru,c
 20622  0113A2  0E00               	movlw	low (__mediumconst shr (0+16))
 20623  0113A4  22F8               	addwfc	tblptru,f,c
 20624  0113A6                     	endif
 20625  0113A6  0009               	tblrd		*+
 20626  0113A8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20627  0113AC  0009               	tblrd		*+
 20628  0113AE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20629  0113B2  0009               	tblrd		*+
 20630  0113B4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20631  0113B8  000A               	tblrd		*-
 20632  0113BA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20633  0113BE  ECE9  F0AA         	call	i2___lldiv	;wreg free
 20634  0113C2  5001               	movf	?i2___lldiv,w,c
 20635  0113C4  0B0F               	andlw	15
 20636  0113C6  0100               	movlb	0	; () banked
 20637  0113C8  6F71               	movwf	i2printf@idx& (0+255),b
 20638                           
 20639                           ; BSR set to: 0
 20640                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 20641  0113CA  5171               	movf	i2printf@idx& (0+255),w,b
 20642  0113CC  0D01               	mullw	1
 20643  0113CE  0EE9               	movlw	low STR_93
 20644  0113D0  24F3               	addwf	prodl,w,c
 20645  0113D2  6EF6               	movwf	tblptrl,c
 20646  0113D4  0EFE               	movlw	high STR_93
 20647  0113D6  20F4               	addwfc	prodh,w,c
 20648  0113D8  6EF7               	movwf	tblptrh,c
 20649  0113DA                     	if	1	;There are 3 active tblptr bytes
 20650  0113DA  6AF8               	clrf	tblptru,c
 20651  0113DC  0E00               	movlw	low (__mediumconst shr (0+16))
 20652  0113DE  22F8               	addwfc	tblptru,f,c
 20653  0113E0                     	endif
 20654  0113E0  0008               	tblrd		*
 20655  0113E2  CFF5 F089          	movff	tablat,i2printf@c
 20656                           
 20657                           ; BSR set to: 0
 20658                           ;doprnt.c: 1523: }
 20659                           
 20660                           ;doprnt.c: 1508: }
 20661                           ;doprnt.c: 1510: break;
 20662  0113E6  D00C               	goto	i2l1182
 20663  0113E8                     i2l12655:
 20664  0113E8  0100               	movlb	0	; () banked
 20665  0113EA  5178               	movf	i2printf@flag& (0+255),w,b
 20666  0113EC  0BC0               	andlw	192
 20667                           
 20668                           ; Switch size 1, requested type "space"
 20669                           ; Number of cases is 3, Range of values is 0 to 192
 20670                           ; switch strategies available:
 20671                           ; Name         Instructions Cycles
 20672                           ; simple_byte           10     6 (average)
 20673                           ;	Chosen strategy is simple_byte
 20674  0113EE  0A00               	xorlw	0	; case 0
 20675  0113F0  B4D8               	btfsc	status,2,c
 20676  0113F2  D77D               	goto	i2l1180
 20677  0113F4  0A80               	xorlw	128	; case 128
 20678  0113F6  B4D8               	btfsc	status,2,c
 20679  0113F8  D7BB               	goto	i2l1183
 20680  0113FA  0A40               	xorlw	64	; case 192
 20681  0113FC  B4D8               	btfsc	status,2,c
 20682  0113FE  D777               	goto	i2l1180
 20683  011400                     i2l1182:
 20684                           
 20685                           ; BSR set to: 0
 20686                           ;doprnt.c: 1524: (putch(c) );
 20687                           
 20688                           ; BSR set to: 0
 20689  011400  5189               	movf	i2printf@c& (0+255),w,b
 20690  011402  EC10  F0B2         	call	i2_putch
 20691  011406                     i2l1177:
 20692  011406  0100               	movlb	0	; () banked
 20693  011408  0787               	decf	i2printf@prec& (0+255),f,b
 20694  01140A  A0D8               	btfss	status,0,c
 20695  01140C  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20696  01140E  2987               	incf	i2printf@prec& (0+255),w,b
 20697  011410  E1EB               	bnz	i2l12655
 20698  011412  2988               	incf	(i2printf@prec+1)& (0+255),w,b
 20699  011414  A4D8               	btfss	status,2,c
 20700  011416  D7E8               	goto	i2l1179
 20701  011418                     i2u1603_40:
 20702                           
 20703                           ; BSR set to: 0
 20704                           
 20705                           ; BSR set to: 0
 20706  011418  0100               	movlb	0	; () banked
 20707  01141A  5166               	movf	i2printf@f& (0+255),w,b
 20708  01141C  6F68               	movwf	??i2_printf& (0+255),b
 20709  01141E  5167               	movf	(i2printf@f+1)& (0+255),w,b
 20710  011420  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20711  011422  4B66               	infsnz	i2printf@f& (0+255),f,b
 20712  011424  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 20713  011426  C068  FFF6         	movff	??i2_printf,tblptrl
 20714  01142A  C069  FFF7         	movff	??i2_printf+1,tblptrh
 20715  01142E  0E00               	movlw	low (__mediumconst shr (0+16))
 20716  011430  6EF8               	movwf	tblptru,c
 20717  011432  0E0D               	movlw	(high __ramtop+-1)
 20718  011434  64F7               	cpfsgt	tblptrh,c
 20719  011436  D003               	bra	i2u1604_47
 20720  011438  0008               	tblrd		*
 20721  01143A  50F5               	movf	tablat,w,c
 20722  01143C  D005               	bra	i2u1604_40
 20723  01143E                     i2u1604_47:
 20724  01143E  CFF6 FFE1          	movff	tblptrl,fsr1l
 20725  011442  CFF7 FFE2          	movff	tblptrh,fsr1h
 20726  011446  50E7               	movf	indf1,w,c
 20727  011448                     i2u1604_40:
 20728  011448  0100               	movlb	0	; () banked
 20729  01144A  6F89               	movwf	i2printf@c& (0+255),b
 20730  01144C  5189               	movf	i2printf@c& (0+255),w,b
 20731  01144E  B4D8               	btfsc	status,2,c
 20732  011450  0012               	return	
 20733  011452  EF1E  F085         	goto	i2l1097
 20734  011456                     __end_ofi2_printf:
 20735                           	opt stack 0
 20736                           tosu	equ	0xFFF
 20737                           tosh	equ	0xFFE
 20738                           tosl	equ	0xFFD
 20739                           pclatu	equ	0xFFB
 20740                           pclath	equ	0xFFA
 20741                           tblptru	equ	0xFF8
 20742                           tblptrh	equ	0xFF7
 20743                           tblptrl	equ	0xFF6
 20744                           tablat	equ	0xFF5
 20745                           prodh	equ	0xFF4
 20746                           prodl	equ	0xFF3
 20747                           intcon	equ	0xFF2
 20748                           postinc0	equ	0xFEE
 20749                           fsr0h	equ	0xFEA
 20750                           fsr0l	equ	0xFE9
 20751                           wreg	equ	0xFE8
 20752                           indf1	equ	0xFE7
 20753                           postdec1	equ	0xFE5
 20754                           fsr1h	equ	0xFE2
 20755                           fsr1l	equ	0xFE1
 20756                           bsr	equ	0xFE0
 20757                           indf2	equ	0xFDF
 20758                           postinc2	equ	0xFDE
 20759                           postdec2	equ	0xFDD
 20760                           fsr2h	equ	0xFDA
 20761                           fsr2l	equ	0xFD9
 20762                           status	equ	0xFD8
 20763                           
 20764 ;; *************** function i2_scale *****************
 20765 ;; Defined at:
 20766 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 20767 ;; Parameters:    Size  Location     Type
 20768 ;;  scl             1    wreg     char 
 20769 ;; Auto vars:     Size  Location     Type
 20770 ;;  scl             1   59[COMRAM] char 
 20771 ;; Return value:  Size  Location     Type
 20772 ;;                  3   53[COMRAM] char 
 20773 ;; Registers used:
 20774 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20775 ;; Tracked objects:
 20776 ;;		On entry : 0/0
 20777 ;;		On exit  : 0/0
 20778 ;;		Unchanged: 0/0
 20779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20781 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20783 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20784 ;;Total ram usage:        7 bytes
 20785 ;; Hardware stack levels used:    1
 20786 ;; Hardware stack levels required when called:    2
 20787 ;; This function calls:
 20788 ;;		i2___awdiv
 20789 ;;		i2___awmod
 20790 ;;		i2___ftmul
 20791 ;;		i2___wmul
 20792 ;; This function is called by:
 20793 ;;		i2_printf
 20794 ;; This function uses a non-reentrant model
 20795 ;;
 20796                           
 20797                           	psect	text74
 20798  01268A                     __ptext74:
 20799                           	opt stack 0
 20800  01268A                     i2_scale:
 20801                           	opt stack 13
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;incstack = 0
 20805                           ;i2scale@scl stored from wreg
 20806  01268A  6E3C               	movwf	i2scale@scl,c
 20807                           
 20808                           ;doprnt.c: 428: if(scl < 0) {
 20809  01268C  AE3C               	btfss	i2scale@scl,7,c
 20810  01268E  D113               	goto	i2l1086
 20811                           
 20812                           ;doprnt.c: 429: scl = -scl;
 20813  012690  6C3C               	negf	i2scale@scl,c
 20814                           
 20815                           ;doprnt.c: 430: if(scl>=110)
 20816  012692  503C               	movf	i2scale@scl,w,c
 20817  012694  0A80               	xorlw	128
 20818  012696  0F12               	addlw	-238
 20819  012698  A0D8               	btfss	status,0,c
 20820  01269A  D09A               	goto	i2l1087
 20821                           
 20822                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 20823  01269C  0E00               	movlw	0
 20824  01269E  6E12               	movwf	i2___wmul@multiplicand+1,c
 20825  0126A0  0E03               	movlw	3
 20826  0126A2  6E11               	movwf	i2___wmul@multiplicand,c
 20827  0126A4  0E00               	movlw	0
 20828  0126A6  6E0A               	movwf	i2___awdiv@divisor+1,c
 20829  0126A8  0E0A               	movlw	10
 20830  0126AA  6E09               	movwf	i2___awdiv@divisor,c
 20831  0126AC  0E00               	movlw	0
 20832  0126AE  6E04               	movwf	i2___awmod@divisor+1,c
 20833  0126B0  0E64               	movlw	100
 20834  0126B2  6E03               	movwf	i2___awmod@divisor,c
 20835  0126B4  503C               	movf	i2scale@scl,w,c
 20836  0126B6  6E01               	movwf	i2___awmod@dividend,c
 20837  0126B8  6A02               	clrf	i2___awmod@dividend+1,c
 20838  0126BA  BE01               	btfsc	i2___awmod@dividend,7,c
 20839  0126BC  0602               	decf	i2___awmod@dividend+1,f,c
 20840  0126BE  EC16  F0AC         	call	i2___awmod	;wreg free
 20841  0126C2  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 20842  0126C6  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 20843  0126CA  ECA7  F0AA         	call	i2___awdiv	;wreg free
 20844  0126CE  0E09               	movlw	9
 20845  0126D0  2407               	addwf	?i2___awdiv,w,c
 20846  0126D2  6E0F               	movwf	i2___wmul@multiplier,c
 20847  0126D4  0E00               	movlw	0
 20848  0126D6  2008               	addwfc	?i2___awdiv+1,w,c
 20849  0126D8  6E10               	movwf	i2___wmul@multiplier+1,c
 20850  0126DA  EC1D  F0B1         	call	i2___wmul	;wreg free
 20851  0126DE  0E78               	movlw	low __npowers_
 20852  0126E0  240F               	addwf	?i2___wmul,w,c
 20853  0126E2  6EF6               	movwf	tblptrl,c
 20854  0126E4  0EF2               	movlw	high __npowers_
 20855  0126E6  2010               	addwfc	?i2___wmul+1,w,c
 20856  0126E8  6EF7               	movwf	tblptrh,c
 20857  0126EA                     	if	1	;There are 3 active tblptr bytes
 20858  0126EA  6AF8               	clrf	tblptru,c
 20859  0126EC  0E00               	movlw	low (__mediumconst shr (0+16))
 20860  0126EE  22F8               	addwfc	tblptru,f,c
 20861  0126F0                     	endif
 20862  0126F0  0009               	tblrd		*+
 20863  0126F2  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20864  0126F6  0009               	tblrd		*+
 20865  0126F8  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20866  0126FC  000A               	tblrd		*-
 20867  0126FE  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20868  012702  0E00               	movlw	0
 20869  012704  6E0A               	movwf	i2___awdiv@divisor+1,c
 20870  012706  0E64               	movlw	100
 20871  012708  6E09               	movwf	i2___awdiv@divisor,c
 20872  01270A  503C               	movf	i2scale@scl,w,c
 20873  01270C  6E07               	movwf	i2___awdiv@dividend,c
 20874  01270E  6A08               	clrf	i2___awdiv@dividend+1,c
 20875  012710  BE07               	btfsc	i2___awdiv@dividend,7,c
 20876  012712  0608               	decf	i2___awdiv@dividend+1,f,c
 20877  012714  ECA7  F0AA         	call	i2___awdiv	;wreg free
 20878  012718  0E12               	movlw	18
 20879  01271A  2407               	addwf	?i2___awdiv,w,c
 20880  01271C  6E0F               	movwf	i2___wmul@multiplier,c
 20881  01271E  0E00               	movlw	0
 20882  012720  2008               	addwfc	?i2___awdiv+1,w,c
 20883  012722  6E10               	movwf	i2___wmul@multiplier+1,c
 20884  012724  0E00               	movlw	0
 20885  012726  6E12               	movwf	i2___wmul@multiplicand+1,c
 20886  012728  0E03               	movlw	3
 20887  01272A  6E11               	movwf	i2___wmul@multiplicand,c
 20888  01272C  EC1D  F0B1         	call	i2___wmul	;wreg free
 20889  012730  0E78               	movlw	low __npowers_
 20890  012732  240F               	addwf	?i2___wmul,w,c
 20891  012734  6EF6               	movwf	tblptrl,c
 20892  012736  0EF2               	movlw	high __npowers_
 20893  012738  2010               	addwfc	?i2___wmul+1,w,c
 20894  01273A  6EF7               	movwf	tblptrh,c
 20895  01273C                     	if	1	;There are 3 active tblptr bytes
 20896  01273C  6AF8               	clrf	tblptru,c
 20897  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 20898  012740  22F8               	addwfc	tblptru,f,c
 20899  012742                     	endif
 20900  012742  0009               	tblrd		*+
 20901  012744  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20902  012748  0009               	tblrd		*+
 20903  01274A  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20904  01274E  000A               	tblrd		*-
 20905  012750  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20906  012754  EC9F  F0A4         	call	i2___ftmul	;wreg free
 20907  012758  C027  F039         	movff	?i2___ftmul,i2_scale$3340
 20908  01275C  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3340+1
 20909  012760  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3340+2
 20910                           
 20911                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 20912  012764  C039  F027         	movff	i2_scale$3340,i2___ftmul@f1
 20913  012768  C03A  F028         	movff	i2_scale$3340+1,i2___ftmul@f1+1
 20914  01276C  C03B  F029         	movff	i2_scale$3340+2,i2___ftmul@f1+2
 20915  012770  0E00               	movlw	0
 20916  012772  6E12               	movwf	i2___wmul@multiplicand+1,c
 20917  012774  0E03               	movlw	3
 20918  012776  6E11               	movwf	i2___wmul@multiplicand,c
 20919  012778  0E00               	movlw	0
 20920  01277A  6E04               	movwf	i2___awmod@divisor+1,c
 20921  01277C  0E0A               	movlw	10
 20922  01277E  6E03               	movwf	i2___awmod@divisor,c
 20923  012780  503C               	movf	i2scale@scl,w,c
 20924  012782  6E01               	movwf	i2___awmod@dividend,c
 20925  012784  6A02               	clrf	i2___awmod@dividend+1,c
 20926  012786  BE01               	btfsc	i2___awmod@dividend,7,c
 20927  012788  0602               	decf	i2___awmod@dividend+1,f,c
 20928  01278A  EC16  F0AC         	call	i2___awmod	;wreg free
 20929  01278E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20930  012792  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20931  012796  EC1D  F0B1         	call	i2___wmul	;wreg free
 20932  01279A  0E78               	movlw	low __npowers_
 20933  01279C  240F               	addwf	?i2___wmul,w,c
 20934  01279E  6EF6               	movwf	tblptrl,c
 20935  0127A0  0EF2               	movlw	high __npowers_
 20936  0127A2  2010               	addwfc	?i2___wmul+1,w,c
 20937  0127A4  6EF7               	movwf	tblptrh,c
 20938  0127A6                     	if	1	;There are 3 active tblptr bytes
 20939  0127A6  6AF8               	clrf	tblptru,c
 20940  0127A8  0E00               	movlw	low (__mediumconst shr (0+16))
 20941  0127AA  22F8               	addwfc	tblptru,f,c
 20942  0127AC                     	endif
 20943  0127AC  0009               	tblrd		*+
 20944  0127AE  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20945  0127B2  0009               	tblrd		*+
 20946  0127B4  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20947  0127B8  000A               	tblrd		*-
 20948  0127BA  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20949  0127BE  EC9F  F0A4         	call	i2___ftmul	;wreg free
 20950  0127C2  C027  F036         	movff	?i2___ftmul,?i2_scale
 20951  0127C6  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20952  0127CA  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20953  0127CE  0012               	return	
 20954  0127D0                     i2l1087:
 20955                           
 20956                           ;doprnt.c: 432: else if(scl > 10)
 20957  0127D0  503C               	movf	i2scale@scl,w,c
 20958  0127D2  0A80               	xorlw	128
 20959  0127D4  0F75               	addlw	-139
 20960  0127D6  A0D8               	btfss	status,0,c
 20961  0127D8  D059               	goto	i2l1090
 20962                           
 20963                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 20964  0127DA  0E00               	movlw	0
 20965  0127DC  6E0A               	movwf	i2___awdiv@divisor+1,c
 20966  0127DE  0E0A               	movlw	10
 20967  0127E0  6E09               	movwf	i2___awdiv@divisor,c
 20968  0127E2  503C               	movf	i2scale@scl,w,c
 20969  0127E4  6E07               	movwf	i2___awdiv@dividend,c
 20970  0127E6  6A08               	clrf	i2___awdiv@dividend+1,c
 20971  0127E8  BE07               	btfsc	i2___awdiv@dividend,7,c
 20972  0127EA  0608               	decf	i2___awdiv@dividend+1,f,c
 20973  0127EC  ECA7  F0AA         	call	i2___awdiv	;wreg free
 20974  0127F0  0E09               	movlw	9
 20975  0127F2  2407               	addwf	?i2___awdiv,w,c
 20976  0127F4  6E0F               	movwf	i2___wmul@multiplier,c
 20977  0127F6  0E00               	movlw	0
 20978  0127F8  2008               	addwfc	?i2___awdiv+1,w,c
 20979  0127FA  6E10               	movwf	i2___wmul@multiplier+1,c
 20980  0127FC  0E00               	movlw	0
 20981  0127FE  6E12               	movwf	i2___wmul@multiplicand+1,c
 20982  012800  0E03               	movlw	3
 20983  012802  6E11               	movwf	i2___wmul@multiplicand,c
 20984  012804  EC1D  F0B1         	call	i2___wmul	;wreg free
 20985  012808  0E78               	movlw	low __npowers_
 20986  01280A  240F               	addwf	?i2___wmul,w,c
 20987  01280C  6EF6               	movwf	tblptrl,c
 20988  01280E  0EF2               	movlw	high __npowers_
 20989  012810  2010               	addwfc	?i2___wmul+1,w,c
 20990  012812  6EF7               	movwf	tblptrh,c
 20991  012814                     	if	1	;There are 3 active tblptr bytes
 20992  012814  6AF8               	clrf	tblptru,c
 20993  012816  0E00               	movlw	low (__mediumconst shr (0+16))
 20994  012818  22F8               	addwfc	tblptru,f,c
 20995  01281A                     	endif
 20996  01281A  0009               	tblrd		*+
 20997  01281C  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20998  012820  0009               	tblrd		*+
 20999  012822  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21000  012826  000A               	tblrd		*-
 21001  012828  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21002  01282C  0E00               	movlw	0
 21003  01282E  6E12               	movwf	i2___wmul@multiplicand+1,c
 21004  012830  0E03               	movlw	3
 21005  012832  6E11               	movwf	i2___wmul@multiplicand,c
 21006  012834  0E00               	movlw	0
 21007  012836  6E04               	movwf	i2___awmod@divisor+1,c
 21008  012838  0E0A               	movlw	10
 21009  01283A  6E03               	movwf	i2___awmod@divisor,c
 21010  01283C  503C               	movf	i2scale@scl,w,c
 21011  01283E  6E01               	movwf	i2___awmod@dividend,c
 21012  012840  6A02               	clrf	i2___awmod@dividend+1,c
 21013  012842  BE01               	btfsc	i2___awmod@dividend,7,c
 21014  012844  0602               	decf	i2___awmod@dividend+1,f,c
 21015  012846  EC16  F0AC         	call	i2___awmod	;wreg free
 21016  01284A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21017  01284E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21018  012852  EC1D  F0B1         	call	i2___wmul	;wreg free
 21019  012856  0E78               	movlw	low __npowers_
 21020  012858  240F               	addwf	?i2___wmul,w,c
 21021  01285A  6EF6               	movwf	tblptrl,c
 21022  01285C  0EF2               	movlw	high __npowers_
 21023  01285E  2010               	addwfc	?i2___wmul+1,w,c
 21024  012860  6EF7               	movwf	tblptrh,c
 21025  012862                     	if	1	;There are 3 active tblptr bytes
 21026  012862  6AF8               	clrf	tblptru,c
 21027  012864  0E00               	movlw	low (__mediumconst shr (0+16))
 21028  012866  22F8               	addwfc	tblptru,f,c
 21029  012868                     	endif
 21030  012868  0009               	tblrd		*+
 21031  01286A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21032  01286E  0009               	tblrd		*+
 21033  012870  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21034  012874  000A               	tblrd		*-
 21035  012876  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21036  01287A  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21037  01287E  C027  F036         	movff	?i2___ftmul,?i2_scale
 21038  012882  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 21039  012886  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 21040  01288A  0012               	return	
 21041  01288C                     i2l1090:
 21042                           
 21043                           ;doprnt.c: 434: return _npowers_[scl];
 21044  01288C  503C               	movf	i2scale@scl,w,c
 21045  01288E  0D03               	mullw	3
 21046  012890  0E78               	movlw	low __npowers_
 21047  012892  24F3               	addwf	prodl,w,c
 21048  012894  6EF6               	movwf	tblptrl,c
 21049  012896  0EF2               	movlw	high __npowers_
 21050  012898  20F4               	addwfc	prodh,w,c
 21051  01289A  6EF7               	movwf	tblptrh,c
 21052  01289C                     	if	1	;There are 3 active tblptr bytes
 21053  01289C  6AF8               	clrf	tblptru,c
 21054  01289E  0E00               	movlw	low (__mediumconst shr (0+16))
 21055  0128A0  22F8               	addwfc	tblptru,f,c
 21056  0128A2                     	endif
 21057  0128A2  0009               	tblrd		*+
 21058  0128A4  CFF5 F036          	movff	tablat,?i2_scale
 21059  0128A8  0009               	tblrd		*+
 21060  0128AA  CFF5 F037          	movff	tablat,?i2_scale+1
 21061  0128AE  000A               	tblrd		*-
 21062  0128B0  CFF5 F038          	movff	tablat,?i2_scale+2
 21063  0128B4  0012               	return	
 21064  0128B6                     i2l1086:
 21065                           
 21066                           ;doprnt.c: 435: }
 21067                           ;doprnt.c: 436: if(scl>=110)
 21068  0128B6  503C               	movf	i2scale@scl,w,c
 21069  0128B8  0A80               	xorlw	128
 21070  0128BA  0F12               	addlw	-238
 21071  0128BC  A0D8               	btfss	status,0,c
 21072  0128BE  D09A               	goto	i2l1091
 21073                           
 21074                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 21075  0128C0  0E00               	movlw	0
 21076  0128C2  6E12               	movwf	i2___wmul@multiplicand+1,c
 21077  0128C4  0E03               	movlw	3
 21078  0128C6  6E11               	movwf	i2___wmul@multiplicand,c
 21079  0128C8  0E00               	movlw	0
 21080  0128CA  6E0A               	movwf	i2___awdiv@divisor+1,c
 21081  0128CC  0E0A               	movlw	10
 21082  0128CE  6E09               	movwf	i2___awdiv@divisor,c
 21083  0128D0  0E00               	movlw	0
 21084  0128D2  6E04               	movwf	i2___awmod@divisor+1,c
 21085  0128D4  0E64               	movlw	100
 21086  0128D6  6E03               	movwf	i2___awmod@divisor,c
 21087  0128D8  503C               	movf	i2scale@scl,w,c
 21088  0128DA  6E01               	movwf	i2___awmod@dividend,c
 21089  0128DC  6A02               	clrf	i2___awmod@dividend+1,c
 21090  0128DE  BE01               	btfsc	i2___awmod@dividend,7,c
 21091  0128E0  0602               	decf	i2___awmod@dividend+1,f,c
 21092  0128E2  EC16  F0AC         	call	i2___awmod	;wreg free
 21093  0128E6  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 21094  0128EA  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 21095  0128EE  ECA7  F0AA         	call	i2___awdiv	;wreg free
 21096  0128F2  0E09               	movlw	9
 21097  0128F4  2407               	addwf	?i2___awdiv,w,c
 21098  0128F6  6E0F               	movwf	i2___wmul@multiplier,c
 21099  0128F8  0E00               	movlw	0
 21100  0128FA  2008               	addwfc	?i2___awdiv+1,w,c
 21101  0128FC  6E10               	movwf	i2___wmul@multiplier+1,c
 21102  0128FE  EC1D  F0B1         	call	i2___wmul	;wreg free
 21103  012902  0E51               	movlw	low __powers_
 21104  012904  240F               	addwf	?i2___wmul,w,c
 21105  012906  6EF6               	movwf	tblptrl,c
 21106  012908  0EF2               	movlw	high __powers_
 21107  01290A  2010               	addwfc	?i2___wmul+1,w,c
 21108  01290C  6EF7               	movwf	tblptrh,c
 21109  01290E                     	if	1	;There are 3 active tblptr bytes
 21110  01290E  6AF8               	clrf	tblptru,c
 21111  012910  0E00               	movlw	low (__mediumconst shr (0+16))
 21112  012912  22F8               	addwfc	tblptru,f,c
 21113  012914                     	endif
 21114  012914  0009               	tblrd		*+
 21115  012916  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21116  01291A  0009               	tblrd		*+
 21117  01291C  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21118  012920  000A               	tblrd		*-
 21119  012922  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21120  012926  0E00               	movlw	0
 21121  012928  6E0A               	movwf	i2___awdiv@divisor+1,c
 21122  01292A  0E64               	movlw	100
 21123  01292C  6E09               	movwf	i2___awdiv@divisor,c
 21124  01292E  503C               	movf	i2scale@scl,w,c
 21125  012930  6E07               	movwf	i2___awdiv@dividend,c
 21126  012932  6A08               	clrf	i2___awdiv@dividend+1,c
 21127  012934  BE07               	btfsc	i2___awdiv@dividend,7,c
 21128  012936  0608               	decf	i2___awdiv@dividend+1,f,c
 21129  012938  ECA7  F0AA         	call	i2___awdiv	;wreg free
 21130  01293C  0E12               	movlw	18
 21131  01293E  2407               	addwf	?i2___awdiv,w,c
 21132  012940  6E0F               	movwf	i2___wmul@multiplier,c
 21133  012942  0E00               	movlw	0
 21134  012944  2008               	addwfc	?i2___awdiv+1,w,c
 21135  012946  6E10               	movwf	i2___wmul@multiplier+1,c
 21136  012948  0E00               	movlw	0
 21137  01294A  6E12               	movwf	i2___wmul@multiplicand+1,c
 21138  01294C  0E03               	movlw	3
 21139  01294E  6E11               	movwf	i2___wmul@multiplicand,c
 21140  012950  EC1D  F0B1         	call	i2___wmul	;wreg free
 21141  012954  0E51               	movlw	low __powers_
 21142  012956  240F               	addwf	?i2___wmul,w,c
 21143  012958  6EF6               	movwf	tblptrl,c
 21144  01295A  0EF2               	movlw	high __powers_
 21145  01295C  2010               	addwfc	?i2___wmul+1,w,c
 21146  01295E  6EF7               	movwf	tblptrh,c
 21147  012960                     	if	1	;There are 3 active tblptr bytes
 21148  012960  6AF8               	clrf	tblptru,c
 21149  012962  0E00               	movlw	low (__mediumconst shr (0+16))
 21150  012964  22F8               	addwfc	tblptru,f,c
 21151  012966                     	endif
 21152  012966  0009               	tblrd		*+
 21153  012968  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21154  01296C  0009               	tblrd		*+
 21155  01296E  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21156  012972  000A               	tblrd		*-
 21157  012974  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21158  012978  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21159  01297C  C027  F039         	movff	?i2___ftmul,i2_scale$3340
 21160  012980  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3340+1
 21161  012984  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3340+2
 21162                           
 21163                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 21164  012988  C039  F027         	movff	i2_scale$3340,i2___ftmul@f1
 21165  01298C  C03A  F028         	movff	i2_scale$3340+1,i2___ftmul@f1+1
 21166  012990  C03B  F029         	movff	i2_scale$3340+2,i2___ftmul@f1+2
 21167  012994  0E00               	movlw	0
 21168  012996  6E12               	movwf	i2___wmul@multiplicand+1,c
 21169  012998  0E03               	movlw	3
 21170  01299A  6E11               	movwf	i2___wmul@multiplicand,c
 21171  01299C  0E00               	movlw	0
 21172  01299E  6E04               	movwf	i2___awmod@divisor+1,c
 21173  0129A0  0E0A               	movlw	10
 21174  0129A2  6E03               	movwf	i2___awmod@divisor,c
 21175  0129A4  503C               	movf	i2scale@scl,w,c
 21176  0129A6  6E01               	movwf	i2___awmod@dividend,c
 21177  0129A8  6A02               	clrf	i2___awmod@dividend+1,c
 21178  0129AA  BE01               	btfsc	i2___awmod@dividend,7,c
 21179  0129AC  0602               	decf	i2___awmod@dividend+1,f,c
 21180  0129AE  EC16  F0AC         	call	i2___awmod	;wreg free
 21181  0129B2  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21182  0129B6  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21183  0129BA  EC1D  F0B1         	call	i2___wmul	;wreg free
 21184  0129BE  0E51               	movlw	low __powers_
 21185  0129C0  240F               	addwf	?i2___wmul,w,c
 21186  0129C2  6EF6               	movwf	tblptrl,c
 21187  0129C4  0EF2               	movlw	high __powers_
 21188  0129C6  2010               	addwfc	?i2___wmul+1,w,c
 21189  0129C8  6EF7               	movwf	tblptrh,c
 21190  0129CA                     	if	1	;There are 3 active tblptr bytes
 21191  0129CA  6AF8               	clrf	tblptru,c
 21192  0129CC  0E00               	movlw	low (__mediumconst shr (0+16))
 21193  0129CE  22F8               	addwfc	tblptru,f,c
 21194  0129D0                     	endif
 21195  0129D0  0009               	tblrd		*+
 21196  0129D2  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21197  0129D6  0009               	tblrd		*+
 21198  0129D8  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21199  0129DC  000A               	tblrd		*-
 21200  0129DE  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21201  0129E2  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21202  0129E6  C027  F036         	movff	?i2___ftmul,?i2_scale
 21203  0129EA  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 21204  0129EE  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 21205  0129F2  0012               	return	
 21206  0129F4                     i2l1091:
 21207                           
 21208                           ;doprnt.c: 438: else if(scl > 10)
 21209  0129F4  503C               	movf	i2scale@scl,w,c
 21210  0129F6  0A80               	xorlw	128
 21211  0129F8  0F75               	addlw	-139
 21212  0129FA  A0D8               	btfss	status,0,c
 21213  0129FC  D059               	goto	i2l1093
 21214                           
 21215                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 21216  0129FE  0E00               	movlw	0
 21217  012A00  6E0A               	movwf	i2___awdiv@divisor+1,c
 21218  012A02  0E0A               	movlw	10
 21219  012A04  6E09               	movwf	i2___awdiv@divisor,c
 21220  012A06  503C               	movf	i2scale@scl,w,c
 21221  012A08  6E07               	movwf	i2___awdiv@dividend,c
 21222  012A0A  6A08               	clrf	i2___awdiv@dividend+1,c
 21223  012A0C  BE07               	btfsc	i2___awdiv@dividend,7,c
 21224  012A0E  0608               	decf	i2___awdiv@dividend+1,f,c
 21225  012A10  ECA7  F0AA         	call	i2___awdiv	;wreg free
 21226  012A14  0E09               	movlw	9
 21227  012A16  2407               	addwf	?i2___awdiv,w,c
 21228  012A18  6E0F               	movwf	i2___wmul@multiplier,c
 21229  012A1A  0E00               	movlw	0
 21230  012A1C  2008               	addwfc	?i2___awdiv+1,w,c
 21231  012A1E  6E10               	movwf	i2___wmul@multiplier+1,c
 21232  012A20  0E00               	movlw	0
 21233  012A22  6E12               	movwf	i2___wmul@multiplicand+1,c
 21234  012A24  0E03               	movlw	3
 21235  012A26  6E11               	movwf	i2___wmul@multiplicand,c
 21236  012A28  EC1D  F0B1         	call	i2___wmul	;wreg free
 21237  012A2C  0E51               	movlw	low __powers_
 21238  012A2E  240F               	addwf	?i2___wmul,w,c
 21239  012A30  6EF6               	movwf	tblptrl,c
 21240  012A32  0EF2               	movlw	high __powers_
 21241  012A34  2010               	addwfc	?i2___wmul+1,w,c
 21242  012A36  6EF7               	movwf	tblptrh,c
 21243  012A38                     	if	1	;There are 3 active tblptr bytes
 21244  012A38  6AF8               	clrf	tblptru,c
 21245  012A3A  0E00               	movlw	low (__mediumconst shr (0+16))
 21246  012A3C  22F8               	addwfc	tblptru,f,c
 21247  012A3E                     	endif
 21248  012A3E  0009               	tblrd		*+
 21249  012A40  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21250  012A44  0009               	tblrd		*+
 21251  012A46  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21252  012A4A  000A               	tblrd		*-
 21253  012A4C  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21254  012A50  0E00               	movlw	0
 21255  012A52  6E12               	movwf	i2___wmul@multiplicand+1,c
 21256  012A54  0E03               	movlw	3
 21257  012A56  6E11               	movwf	i2___wmul@multiplicand,c
 21258  012A58  0E00               	movlw	0
 21259  012A5A  6E04               	movwf	i2___awmod@divisor+1,c
 21260  012A5C  0E0A               	movlw	10
 21261  012A5E  6E03               	movwf	i2___awmod@divisor,c
 21262  012A60  503C               	movf	i2scale@scl,w,c
 21263  012A62  6E01               	movwf	i2___awmod@dividend,c
 21264  012A64  6A02               	clrf	i2___awmod@dividend+1,c
 21265  012A66  BE01               	btfsc	i2___awmod@dividend,7,c
 21266  012A68  0602               	decf	i2___awmod@dividend+1,f,c
 21267  012A6A  EC16  F0AC         	call	i2___awmod	;wreg free
 21268  012A6E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21269  012A72  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21270  012A76  EC1D  F0B1         	call	i2___wmul	;wreg free
 21271  012A7A  0E51               	movlw	low __powers_
 21272  012A7C  240F               	addwf	?i2___wmul,w,c
 21273  012A7E  6EF6               	movwf	tblptrl,c
 21274  012A80  0EF2               	movlw	high __powers_
 21275  012A82  2010               	addwfc	?i2___wmul+1,w,c
 21276  012A84  6EF7               	movwf	tblptrh,c
 21277  012A86                     	if	1	;There are 3 active tblptr bytes
 21278  012A86  6AF8               	clrf	tblptru,c
 21279  012A88  0E00               	movlw	low (__mediumconst shr (0+16))
 21280  012A8A  22F8               	addwfc	tblptru,f,c
 21281  012A8C                     	endif
 21282  012A8C  0009               	tblrd		*+
 21283  012A8E  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21284  012A92  0009               	tblrd		*+
 21285  012A94  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21286  012A98  000A               	tblrd		*-
 21287  012A9A  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21288  012A9E  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21289  012AA2  C027  F036         	movff	?i2___ftmul,?i2_scale
 21290  012AA6  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 21291  012AAA  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 21292  012AAE  0012               	return	
 21293  012AB0                     i2l1093:
 21294                           
 21295                           ;doprnt.c: 440: return _powers_[scl];
 21296  012AB0  503C               	movf	i2scale@scl,w,c
 21297  012AB2  0D03               	mullw	3
 21298  012AB4  0E51               	movlw	low __powers_
 21299  012AB6  24F3               	addwf	prodl,w,c
 21300  012AB8  6EF6               	movwf	tblptrl,c
 21301  012ABA  0EF2               	movlw	high __powers_
 21302  012ABC  20F4               	addwfc	prodh,w,c
 21303  012ABE  6EF7               	movwf	tblptrh,c
 21304  012AC0                     	if	1	;There are 3 active tblptr bytes
 21305  012AC0  6AF8               	clrf	tblptru,c
 21306  012AC2  0E00               	movlw	low (__mediumconst shr (0+16))
 21307  012AC4  22F8               	addwfc	tblptru,f,c
 21308  012AC6                     	endif
 21309  012AC6  0009               	tblrd		*+
 21310  012AC8  CFF5 F036          	movff	tablat,?i2_scale
 21311  012ACC  0009               	tblrd		*+
 21312  012ACE  CFF5 F037          	movff	tablat,?i2_scale+1
 21313  012AD2  000A               	tblrd		*-
 21314  012AD4  CFF5 F038          	movff	tablat,?i2_scale+2
 21315  012AD8  0012               	return	
 21316  012ADA                     __end_ofi2_scale:
 21317                           	opt stack 0
 21318                           tosu	equ	0xFFF
 21319                           tosh	equ	0xFFE
 21320                           tosl	equ	0xFFD
 21321                           pclatu	equ	0xFFB
 21322                           pclath	equ	0xFFA
 21323                           tblptru	equ	0xFF8
 21324                           tblptrh	equ	0xFF7
 21325                           tblptrl	equ	0xFF6
 21326                           tablat	equ	0xFF5
 21327                           prodh	equ	0xFF4
 21328                           prodl	equ	0xFF3
 21329                           intcon	equ	0xFF2
 21330                           postinc0	equ	0xFEE
 21331                           fsr0h	equ	0xFEA
 21332                           fsr0l	equ	0xFE9
 21333                           wreg	equ	0xFE8
 21334                           indf1	equ	0xFE7
 21335                           postdec1	equ	0xFE5
 21336                           fsr1h	equ	0xFE2
 21337                           fsr1l	equ	0xFE1
 21338                           bsr	equ	0xFE0
 21339                           indf2	equ	0xFDF
 21340                           postinc2	equ	0xFDE
 21341                           postdec2	equ	0xFDD
 21342                           fsr2h	equ	0xFDA
 21343                           fsr2l	equ	0xFD9
 21344                           status	equ	0xFD8
 21345                           
 21346 ;; *************** function i2_putch *****************
 21347 ;; Defined at:
 21348 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 21349 ;; Parameters:    Size  Location     Type
 21350 ;;  txData          1    wreg     unsigned char 
 21351 ;; Auto vars:     Size  Location     Type
 21352 ;;  txData          1    1[COMRAM] unsigned char 
 21353 ;; Return value:  Size  Location     Type
 21354 ;;                  1    wreg      void 
 21355 ;; Registers used:
 21356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21357 ;; Tracked objects:
 21358 ;;		On entry : 0/0
 21359 ;;		On exit  : 0/0
 21360 ;;		Unchanged: 0/0
 21361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21366 ;;Total ram usage:        1 bytes
 21367 ;; Hardware stack levels used:    1
 21368 ;; Hardware stack levels required when called:    1
 21369 ;; This function calls:
 21370 ;;		i2_EUSART2_Write
 21371 ;; This function is called by:
 21372 ;;		i2_printf
 21373 ;; This function uses a non-reentrant model
 21374 ;;
 21375                           
 21376                           	psect	text75
 21377  016420                     __ptext75:
 21378                           	opt stack 0
 21379  016420                     i2_putch:
 21380                           	opt stack 14
 21381                           
 21382                           ;incstack = 0
 21383                           ;i2putch@txData stored from wreg
 21384  016420  6E02               	movwf	i2putch@txData,c
 21385                           
 21386                           ;eusart2.c: 182: EUSART2_Write(txData);
 21387  016422  5002               	movf	i2putch@txData,w,c
 21388  016424  EC4F  F0AF         	call	i2_EUSART2_Write
 21389  016428  0012               	return		;funcret
 21390  01642A                     __end_ofi2_putch:
 21391                           	opt stack 0
 21392                           tosu	equ	0xFFF
 21393                           tosh	equ	0xFFE
 21394                           tosl	equ	0xFFD
 21395                           pclatu	equ	0xFFB
 21396                           pclath	equ	0xFFA
 21397                           tblptru	equ	0xFF8
 21398                           tblptrh	equ	0xFF7
 21399                           tblptrl	equ	0xFF6
 21400                           tablat	equ	0xFF5
 21401                           prodh	equ	0xFF4
 21402                           prodl	equ	0xFF3
 21403                           intcon	equ	0xFF2
 21404                           postinc0	equ	0xFEE
 21405                           fsr0h	equ	0xFEA
 21406                           fsr0l	equ	0xFE9
 21407                           wreg	equ	0xFE8
 21408                           indf1	equ	0xFE7
 21409                           postdec1	equ	0xFE5
 21410                           fsr1h	equ	0xFE2
 21411                           fsr1l	equ	0xFE1
 21412                           bsr	equ	0xFE0
 21413                           indf2	equ	0xFDF
 21414                           postinc2	equ	0xFDE
 21415                           postdec2	equ	0xFDD
 21416                           fsr2h	equ	0xFDA
 21417                           fsr2l	equ	0xFD9
 21418                           status	equ	0xFD8
 21419                           
 21420 ;; *************** function i2_EUSART2_Write *****************
 21421 ;; Defined at:
 21422 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 21423 ;; Parameters:    Size  Location     Type
 21424 ;;  txData          1    wreg     unsigned char 
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;  txData          1    0[COMRAM] unsigned char 
 21427 ;; Return value:  Size  Location     Type
 21428 ;;                  1    wreg      void 
 21429 ;; Registers used:
 21430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21431 ;; Tracked objects:
 21432 ;;		On entry : 0/0
 21433 ;;		On exit  : 0/0
 21434 ;;		Unchanged: 0/0
 21435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21440 ;;Total ram usage:        1 bytes
 21441 ;; Hardware stack levels used:    1
 21442 ;; This function calls:
 21443 ;;		Nothing
 21444 ;; This function is called by:
 21445 ;;		i2_putch
 21446 ;; This function uses a non-reentrant model
 21447 ;;
 21448                           
 21449                           	psect	text76
 21450  015E9E                     __ptext76:
 21451                           	opt stack 0
 21452  015E9E                     i2_EUSART2_Write:
 21453                           	opt stack 14
 21454                           
 21455                           ;incstack = 0
 21456                           ;i2EUSART2_Write@txData stored from wreg
 21457  015E9E  6E01               	movwf	i2EUSART2_Write@txData,c
 21458                           
 21459                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 21460  015EA0  D001               	goto	i2l374
 21461  015EA2                     i2l375:
 21462                           
 21463                           ; BSR set to: 1
 21464  015EA2  0004               	clrwdt		;# 
 21465  015EA4                     i2l374:
 21466  015EA4  0101               	movlb	1	; () banked
 21467  015EA6  51D8               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 21468  015EA8  B4D8               	btfsc	status,2,c
 21469  015EAA  D7FB               	goto	i2l375
 21470                           
 21471                           ; BSR set to: 1
 21472                           ;eusart2.c: 156: }
 21473                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 21474  015EAC  010E               	movlb	14	; () banked
 21475  015EAE  BD2C               	btfsc	44,6,b	;volatile
 21476  015EB0  D003               	goto	i2l377
 21477                           
 21478                           ; BSR set to: 14
 21479                           ;eusart2.c: 159: {
 21480                           ;eusart2.c: 160: TX2REG = txData;
 21481  015EB2  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 21482                           
 21483                           ;eusart2.c: 161: }
 21484  015EB6  D013               	goto	i2l378
 21485  015EB8                     i2l377:
 21486                           
 21487                           ; BSR set to: 14
 21488                           ;eusart2.c: 162: else
 21489                           ;eusart2.c: 163: {
 21490                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 21491  015EB8  9D2C               	bcf	44,6,b	;volatile
 21492                           
 21493                           ; BSR set to: 14
 21494                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 21495  015EBA  0101               	movlb	1	; () banked
 21496  015EBC  51DA               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 21497  015EBE  0D01               	mullw	1
 21498  015EC0  0E00               	movlw	low _eusart2TxBuffer
 21499  015EC2  24F3               	addwf	prodl,w,c
 21500  015EC4  6ED9               	movwf	fsr2l,c
 21501  015EC6  0E02               	movlw	high _eusart2TxBuffer
 21502  015EC8  20F4               	addwfc	prodh,w,c
 21503  015ECA  6EDA               	movwf	fsr2h,c
 21504  015ECC  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 21505                           
 21506                           ; BSR set to: 1
 21507  015ED0  2BDA               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 21508                           
 21509                           ; BSR set to: 1
 21510                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 21511  015ED2  0E7F               	movlw	127
 21512  015ED4  65DA               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 21513  015ED6  D002               	goto	i2l379
 21514                           
 21515                           ; BSR set to: 1
 21516                           ;eusart2.c: 167: {
 21517                           ;eusart2.c: 168: eusart2TxHead = 0;
 21518  015ED8  0E00               	movlw	0
 21519  015EDA  6FDA               	movwf	_eusart2TxHead& (0+255),b	;volatile
 21520  015EDC                     i2l379:
 21521                           
 21522                           ; BSR set to: 1
 21523                           ;eusart2.c: 169: }
 21524                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 21525                           
 21526                           ; BSR set to: 1
 21527  015EDC  07D8               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 21528  015EDE                     i2l378:
 21529                           
 21530                           ;eusart2.c: 171: }
 21531                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 21532                           
 21533                           ; BSR set to: 1
 21534  015EDE  010E               	movlb	14	; () banked
 21535  015EE0  8D2C               	bsf	44,6,b	;volatile
 21536                           
 21537                           ; BSR set to: 14
 21538  015EE2  0012               	return		;funcret
 21539  015EE4                     __end_ofi2_EUSART2_Write:
 21540                           	opt stack 0
 21541                           tosu	equ	0xFFF
 21542                           tosh	equ	0xFFE
 21543                           tosl	equ	0xFFD
 21544                           pclatu	equ	0xFFB
 21545                           pclath	equ	0xFFA
 21546                           tblptru	equ	0xFF8
 21547                           tblptrh	equ	0xFF7
 21548                           tblptrl	equ	0xFF6
 21549                           tablat	equ	0xFF5
 21550                           prodh	equ	0xFF4
 21551                           prodl	equ	0xFF3
 21552                           intcon	equ	0xFF2
 21553                           postinc0	equ	0xFEE
 21554                           fsr0h	equ	0xFEA
 21555                           fsr0l	equ	0xFE9
 21556                           wreg	equ	0xFE8
 21557                           indf1	equ	0xFE7
 21558                           postdec1	equ	0xFE5
 21559                           fsr1h	equ	0xFE2
 21560                           fsr1l	equ	0xFE1
 21561                           bsr	equ	0xFE0
 21562                           indf2	equ	0xFDF
 21563                           postinc2	equ	0xFDE
 21564                           postdec2	equ	0xFDD
 21565                           fsr2h	equ	0xFDA
 21566                           fsr2l	equ	0xFD9
 21567                           status	equ	0xFD8
 21568                           
 21569 ;; *************** function i2_isdigit *****************
 21570 ;; Defined at:
 21571 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 21572 ;; Parameters:    Size  Location     Type
 21573 ;;  c               1    wreg     unsigned char 
 21574 ;; Auto vars:     Size  Location     Type
 21575 ;;  c               1    2[COMRAM] unsigned char 
 21576 ;; Return value:  Size  Location     Type
 21577 ;;		None               void
 21578 ;; Registers used:
 21579 ;;		wreg, status,2, status,0
 21580 ;; Tracked objects:
 21581 ;;		On entry : 0/0
 21582 ;;		On exit  : 0/0
 21583 ;;		Unchanged: 0/0
 21584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21588 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21589 ;;Total ram usage:        3 bytes
 21590 ;; Hardware stack levels used:    1
 21591 ;; This function calls:
 21592 ;;		Nothing
 21593 ;; This function is called by:
 21594 ;;		i2_printf
 21595 ;; This function uses a non-reentrant model
 21596 ;;
 21597                           
 21598                           	psect	text77
 21599  0162CA                     __ptext77:
 21600                           	opt stack 0
 21601  0162CA                     i2_isdigit:
 21602                           	opt stack 15
 21603                           
 21604                           ; BSR set to: 14
 21605                           ;incstack = 0
 21606                           ;i2isdigit@c stored from wreg
 21607  0162CA  6E03               	movwf	i2isdigit@c,c
 21608  0162CC  0E00               	movlw	0
 21609  0162CE  6E02               	movwf	i2_isdigit$2501,c
 21610  0162D0  0E3A               	movlw	58
 21611  0162D2  6003               	cpfslt	i2isdigit@c,c
 21612  0162D4  D005               	goto	i2l1614
 21613  0162D6  0E2F               	movlw	47
 21614  0162D8  6403               	cpfsgt	i2isdigit@c,c
 21615  0162DA  D002               	goto	i2l1614
 21616  0162DC  0E01               	movlw	1
 21617  0162DE  6E02               	movwf	i2_isdigit$2501,c
 21618  0162E0                     i2l1614:
 21619  0162E0  C002  F001         	movff	i2_isdigit$2501,??i2_isdigit
 21620  0162E4  3001               	rrcf	??i2_isdigit,w,c
 21621  0162E6  0012               	return	
 21622  0162E8                     __end_ofi2_isdigit:
 21623                           	opt stack 0
 21624                           tosu	equ	0xFFF
 21625                           tosh	equ	0xFFE
 21626                           tosl	equ	0xFFD
 21627                           pclatu	equ	0xFFB
 21628                           pclath	equ	0xFFA
 21629                           tblptru	equ	0xFF8
 21630                           tblptrh	equ	0xFF7
 21631                           tblptrl	equ	0xFF6
 21632                           tablat	equ	0xFF5
 21633                           prodh	equ	0xFF4
 21634                           prodl	equ	0xFF3
 21635                           intcon	equ	0xFF2
 21636                           postinc0	equ	0xFEE
 21637                           fsr0h	equ	0xFEA
 21638                           fsr0l	equ	0xFE9
 21639                           wreg	equ	0xFE8
 21640                           indf1	equ	0xFE7
 21641                           postdec1	equ	0xFE5
 21642                           fsr1h	equ	0xFE2
 21643                           fsr1l	equ	0xFE1
 21644                           bsr	equ	0xFE0
 21645                           indf2	equ	0xFDF
 21646                           postinc2	equ	0xFDE
 21647                           postdec2	equ	0xFDD
 21648                           fsr2h	equ	0xFDA
 21649                           fsr2l	equ	0xFD9
 21650                           status	equ	0xFD8
 21651                           
 21652 ;; *************** function i2_fround *****************
 21653 ;; Defined at:
 21654 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 21655 ;; Parameters:    Size  Location     Type
 21656 ;;  prec            1    wreg     unsigned char 
 21657 ;; Auto vars:     Size  Location     Type
 21658 ;;  prec            1   62[COMRAM] unsigned char 
 21659 ;; Return value:  Size  Location     Type
 21660 ;;                  3   53[COMRAM] unsigned char 
 21661 ;; Registers used:
 21662 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21663 ;; Tracked objects:
 21664 ;;		On entry : 0/0
 21665 ;;		On exit  : 0/0
 21666 ;;		Unchanged: 0/0
 21667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21668 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21669 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21671 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21672 ;;Total ram usage:       10 bytes
 21673 ;; Hardware stack levels used:    1
 21674 ;; Hardware stack levels required when called:    2
 21675 ;; This function calls:
 21676 ;;		i2___awdiv
 21677 ;;		i2___awmod
 21678 ;;		i2___ftmul
 21679 ;;		i2___wmul
 21680 ;; This function is called by:
 21681 ;;		i2_printf
 21682 ;; This function uses a non-reentrant model
 21683 ;;
 21684                           
 21685                           	psect	text78
 21686  0130D6                     __ptext78:
 21687                           	opt stack 0
 21688  0130D6                     i2_fround:
 21689                           	opt stack 13
 21690                           
 21691                           ;incstack = 0
 21692                           ;i2fround@prec stored from wreg
 21693  0130D6  6E3F               	movwf	i2fround@prec,c
 21694                           
 21695                           ;doprnt.c: 413: if(prec>=110)
 21696  0130D8  0E6D               	movlw	109
 21697  0130DA  643F               	cpfsgt	i2fround@prec,c
 21698  0130DC  D0A8               	goto	i2l1080
 21699                           
 21700                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21701  0130DE  0E00               	movlw	0
 21702  0130E0  6E12               	movwf	i2___wmul@multiplicand+1,c
 21703  0130E2  0E03               	movlw	3
 21704  0130E4  6E11               	movwf	i2___wmul@multiplicand,c
 21705  0130E6  0E00               	movlw	0
 21706  0130E8  6E0A               	movwf	i2___awdiv@divisor+1,c
 21707  0130EA  0E0A               	movlw	10
 21708  0130EC  6E09               	movwf	i2___awdiv@divisor,c
 21709  0130EE  0E00               	movlw	0
 21710  0130F0  6E04               	movwf	i2___awmod@divisor+1,c
 21711  0130F2  0E64               	movlw	100
 21712  0130F4  6E03               	movwf	i2___awmod@divisor,c
 21713  0130F6  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21714  0130FA  6A02               	clrf	i2___awmod@dividend+1,c
 21715  0130FC  EC16  F0AC         	call	i2___awmod	;wreg free
 21716  013100  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 21717  013104  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 21718  013108  ECA7  F0AA         	call	i2___awdiv	;wreg free
 21719  01310C  0E09               	movlw	9
 21720  01310E  2407               	addwf	?i2___awdiv,w,c
 21721  013110  6E0F               	movwf	i2___wmul@multiplier,c
 21722  013112  0E00               	movlw	0
 21723  013114  2008               	addwfc	?i2___awdiv+1,w,c
 21724  013116  6E10               	movwf	i2___wmul@multiplier+1,c
 21725  013118  EC1D  F0B1         	call	i2___wmul	;wreg free
 21726  01311C  0E78               	movlw	low __npowers_
 21727  01311E  240F               	addwf	?i2___wmul,w,c
 21728  013120  6EF6               	movwf	tblptrl,c
 21729  013122  0EF2               	movlw	high __npowers_
 21730  013124  2010               	addwfc	?i2___wmul+1,w,c
 21731  013126  6EF7               	movwf	tblptrh,c
 21732  013128                     	if	1	;There are 3 active tblptr bytes
 21733  013128  6AF8               	clrf	tblptru,c
 21734  01312A  0E00               	movlw	low (__mediumconst shr (0+16))
 21735  01312C  22F8               	addwfc	tblptru,f,c
 21736  01312E                     	endif
 21737  01312E  0009               	tblrd		*+
 21738  013130  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21739  013134  0009               	tblrd		*+
 21740  013136  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21741  01313A  000A               	tblrd		*-
 21742  01313C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21743  013140  0E00               	movlw	0
 21744  013142  6E0A               	movwf	i2___awdiv@divisor+1,c
 21745  013144  0E64               	movlw	100
 21746  013146  6E09               	movwf	i2___awdiv@divisor,c
 21747  013148  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 21748  01314C  6A08               	clrf	i2___awdiv@dividend+1,c
 21749  01314E  ECA7  F0AA         	call	i2___awdiv	;wreg free
 21750  013152  0E12               	movlw	18
 21751  013154  2407               	addwf	?i2___awdiv,w,c
 21752  013156  6E0F               	movwf	i2___wmul@multiplier,c
 21753  013158  0E00               	movlw	0
 21754  01315A  2008               	addwfc	?i2___awdiv+1,w,c
 21755  01315C  6E10               	movwf	i2___wmul@multiplier+1,c
 21756  01315E  0E00               	movlw	0
 21757  013160  6E12               	movwf	i2___wmul@multiplicand+1,c
 21758  013162  0E03               	movlw	3
 21759  013164  6E11               	movwf	i2___wmul@multiplicand,c
 21760  013166  EC1D  F0B1         	call	i2___wmul	;wreg free
 21761  01316A  0E78               	movlw	low __npowers_
 21762  01316C  240F               	addwf	?i2___wmul,w,c
 21763  01316E  6EF6               	movwf	tblptrl,c
 21764  013170  0EF2               	movlw	high __npowers_
 21765  013172  2010               	addwfc	?i2___wmul+1,w,c
 21766  013174  6EF7               	movwf	tblptrh,c
 21767  013176                     	if	1	;There are 3 active tblptr bytes
 21768  013176  6AF8               	clrf	tblptru,c
 21769  013178  0E00               	movlw	low (__mediumconst shr (0+16))
 21770  01317A  22F8               	addwfc	tblptru,f,c
 21771  01317C                     	endif
 21772  01317C  0009               	tblrd		*+
 21773  01317E  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21774  013182  0009               	tblrd		*+
 21775  013184  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21776  013188  000A               	tblrd		*-
 21777  01318A  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21778  01318E  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21779  013192  C027  F03C         	movff	?i2___ftmul,i2_fround$3338
 21780  013196  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3338+1
 21781  01319A  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3338+2
 21782                           
 21783                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21784  01319E  0E00               	movlw	0
 21785  0131A0  6E12               	movwf	i2___wmul@multiplicand+1,c
 21786  0131A2  0E03               	movlw	3
 21787  0131A4  6E11               	movwf	i2___wmul@multiplicand,c
 21788  0131A6  0E00               	movlw	0
 21789  0131A8  6E04               	movwf	i2___awmod@divisor+1,c
 21790  0131AA  0E0A               	movlw	10
 21791  0131AC  6E03               	movwf	i2___awmod@divisor,c
 21792  0131AE  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21793  0131B2  6A02               	clrf	i2___awmod@dividend+1,c
 21794  0131B4  EC16  F0AC         	call	i2___awmod	;wreg free
 21795  0131B8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21796  0131BC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21797  0131C0  EC1D  F0B1         	call	i2___wmul	;wreg free
 21798  0131C4  0E78               	movlw	low __npowers_
 21799  0131C6  240F               	addwf	?i2___wmul,w,c
 21800  0131C8  6EF6               	movwf	tblptrl,c
 21801  0131CA  0EF2               	movlw	high __npowers_
 21802  0131CC  2010               	addwfc	?i2___wmul+1,w,c
 21803  0131CE  6EF7               	movwf	tblptrh,c
 21804  0131D0                     	if	1	;There are 3 active tblptr bytes
 21805  0131D0  6AF8               	clrf	tblptru,c
 21806  0131D2  0E00               	movlw	low (__mediumconst shr (0+16))
 21807  0131D4  22F8               	addwfc	tblptru,f,c
 21808  0131D6                     	endif
 21809  0131D6  0009               	tblrd		*+
 21810  0131D8  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21811  0131DC  0009               	tblrd		*+
 21812  0131DE  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21813  0131E2  000A               	tblrd		*-
 21814  0131E4  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21815  0131E8  C03C  F027         	movff	i2_fround$3338,i2___ftmul@f1
 21816  0131EC  C03D  F028         	movff	i2_fround$3338+1,i2___ftmul@f1+1
 21817  0131F0  C03E  F029         	movff	i2_fround$3338+2,i2___ftmul@f1+2
 21818  0131F4  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21819  0131F8  C027  F039         	movff	?i2___ftmul,i2_fround$3339
 21820  0131FC  C028  F03A         	movff	?i2___ftmul+1,i2_fround$3339+1
 21821  013200  C029  F03B         	movff	?i2___ftmul+2,i2_fround$3339+2
 21822                           
 21823                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21824  013204  C039  F027         	movff	i2_fround$3339,i2___ftmul@f1
 21825  013208  C03A  F028         	movff	i2_fround$3339+1,i2___ftmul@f1+1
 21826  01320C  C03B  F029         	movff	i2_fround$3339+2,i2___ftmul@f1+2
 21827  013210  0E00               	movlw	0
 21828  013212  6E2A               	movwf	i2___ftmul@f2,c
 21829  013214  0E00               	movlw	0
 21830  013216  6E2B               	movwf	i2___ftmul@f2+1,c
 21831  013218  0E3F               	movlw	63
 21832  01321A  6E2C               	movwf	i2___ftmul@f2+2,c
 21833  01321C  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21834  013220  C027  F036         	movff	?i2___ftmul,?i2_fround
 21835  013224  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21836  013228  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21837  01322C  0012               	return	
 21838  01322E                     i2l1080:
 21839                           
 21840                           ;doprnt.c: 415: else if(prec > 10)
 21841  01322E  0E0A               	movlw	10
 21842  013230  643F               	cpfsgt	i2fround@prec,c
 21843  013232  D069               	goto	i2l1083
 21844                           
 21845                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 21846  013234  0E00               	movlw	0
 21847  013236  6E12               	movwf	i2___wmul@multiplicand+1,c
 21848  013238  0E03               	movlw	3
 21849  01323A  6E11               	movwf	i2___wmul@multiplicand,c
 21850  01323C  0E00               	movlw	0
 21851  01323E  6E04               	movwf	i2___awmod@divisor+1,c
 21852  013240  0E0A               	movlw	10
 21853  013242  6E03               	movwf	i2___awmod@divisor,c
 21854  013244  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21855  013248  6A02               	clrf	i2___awmod@dividend+1,c
 21856  01324A  EC16  F0AC         	call	i2___awmod	;wreg free
 21857  01324E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21858  013252  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21859  013256  EC1D  F0B1         	call	i2___wmul	;wreg free
 21860  01325A  0E78               	movlw	low __npowers_
 21861  01325C  240F               	addwf	?i2___wmul,w,c
 21862  01325E  6EF6               	movwf	tblptrl,c
 21863  013260  0EF2               	movlw	high __npowers_
 21864  013262  2010               	addwfc	?i2___wmul+1,w,c
 21865  013264  6EF7               	movwf	tblptrh,c
 21866  013266                     	if	1	;There are 3 active tblptr bytes
 21867  013266  6AF8               	clrf	tblptru,c
 21868  013268  0E00               	movlw	low (__mediumconst shr (0+16))
 21869  01326A  22F8               	addwfc	tblptru,f,c
 21870  01326C                     	endif
 21871  01326C  0009               	tblrd		*+
 21872  01326E  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21873  013272  0009               	tblrd		*+
 21874  013274  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21875  013278  000A               	tblrd		*-
 21876  01327A  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21877  01327E  0E00               	movlw	0
 21878  013280  6E0A               	movwf	i2___awdiv@divisor+1,c
 21879  013282  0E0A               	movlw	10
 21880  013284  6E09               	movwf	i2___awdiv@divisor,c
 21881  013286  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 21882  01328A  6A08               	clrf	i2___awdiv@dividend+1,c
 21883  01328C  ECA7  F0AA         	call	i2___awdiv	;wreg free
 21884  013290  0E09               	movlw	9
 21885  013292  2407               	addwf	?i2___awdiv,w,c
 21886  013294  6E0F               	movwf	i2___wmul@multiplier,c
 21887  013296  0E00               	movlw	0
 21888  013298  2008               	addwfc	?i2___awdiv+1,w,c
 21889  01329A  6E10               	movwf	i2___wmul@multiplier+1,c
 21890  01329C  0E00               	movlw	0
 21891  01329E  6E12               	movwf	i2___wmul@multiplicand+1,c
 21892  0132A0  0E03               	movlw	3
 21893  0132A2  6E11               	movwf	i2___wmul@multiplicand,c
 21894  0132A4  EC1D  F0B1         	call	i2___wmul	;wreg free
 21895  0132A8  0E78               	movlw	low __npowers_
 21896  0132AA  240F               	addwf	?i2___wmul,w,c
 21897  0132AC  6EF6               	movwf	tblptrl,c
 21898  0132AE  0EF2               	movlw	high __npowers_
 21899  0132B0  2010               	addwfc	?i2___wmul+1,w,c
 21900  0132B2  6EF7               	movwf	tblptrh,c
 21901  0132B4                     	if	1	;There are 3 active tblptr bytes
 21902  0132B4  6AF8               	clrf	tblptru,c
 21903  0132B6  0E00               	movlw	low (__mediumconst shr (0+16))
 21904  0132B8  22F8               	addwfc	tblptru,f,c
 21905  0132BA                     	endif
 21906  0132BA  0009               	tblrd		*+
 21907  0132BC  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21908  0132C0  0009               	tblrd		*+
 21909  0132C2  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21910  0132C6  000A               	tblrd		*-
 21911  0132C8  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21912  0132CC  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21913  0132D0  C027  F03C         	movff	?i2___ftmul,i2_fround$3338
 21914  0132D4  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3338+1
 21915  0132D8  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3338+2
 21916                           
 21917                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 21918  0132DC  C03C  F027         	movff	i2_fround$3338,i2___ftmul@f1
 21919  0132E0  C03D  F028         	movff	i2_fround$3338+1,i2___ftmul@f1+1
 21920  0132E4  C03E  F029         	movff	i2_fround$3338+2,i2___ftmul@f1+2
 21921  0132E8  0E00               	movlw	0
 21922  0132EA  6E2A               	movwf	i2___ftmul@f2,c
 21923  0132EC  0E00               	movlw	0
 21924  0132EE  6E2B               	movwf	i2___ftmul@f2+1,c
 21925  0132F0  0E3F               	movlw	63
 21926  0132F2  6E2C               	movwf	i2___ftmul@f2+2,c
 21927  0132F4  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21928  0132F8  C027  F036         	movff	?i2___ftmul,?i2_fround
 21929  0132FC  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21930  013300  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21931  013304  0012               	return	
 21932  013306                     i2l1083:
 21933                           
 21934                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 21935  013306  503F               	movf	i2fround@prec,w,c
 21936  013308  0D03               	mullw	3
 21937  01330A  0E78               	movlw	low __npowers_
 21938  01330C  24F3               	addwf	prodl,w,c
 21939  01330E  6EF6               	movwf	tblptrl,c
 21940  013310  0EF2               	movlw	high __npowers_
 21941  013312  20F4               	addwfc	prodh,w,c
 21942  013314  6EF7               	movwf	tblptrh,c
 21943  013316                     	if	1	;There are 3 active tblptr bytes
 21944  013316  6AF8               	clrf	tblptru,c
 21945  013318  0E00               	movlw	low (__mediumconst shr (0+16))
 21946  01331A  22F8               	addwfc	tblptru,f,c
 21947  01331C                     	endif
 21948  01331C  0009               	tblrd		*+
 21949  01331E  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21950  013322  0009               	tblrd		*+
 21951  013324  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21952  013328  000A               	tblrd		*-
 21953  01332A  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21954  01332E  0E00               	movlw	0
 21955  013330  6E2A               	movwf	i2___ftmul@f2,c
 21956  013332  0E00               	movlw	0
 21957  013334  6E2B               	movwf	i2___ftmul@f2+1,c
 21958  013336  0E3F               	movlw	63
 21959  013338  6E2C               	movwf	i2___ftmul@f2+2,c
 21960  01333A  EC9F  F0A4         	call	i2___ftmul	;wreg free
 21961  01333E  C027  F036         	movff	?i2___ftmul,?i2_fround
 21962  013342  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21963  013346  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21964  01334A  0012               	return	
 21965  01334C                     __end_ofi2_fround:
 21966                           	opt stack 0
 21967                           tosu	equ	0xFFF
 21968                           tosh	equ	0xFFE
 21969                           tosl	equ	0xFFD
 21970                           pclatu	equ	0xFFB
 21971                           pclath	equ	0xFFA
 21972                           tblptru	equ	0xFF8
 21973                           tblptrh	equ	0xFF7
 21974                           tblptrl	equ	0xFF6
 21975                           tablat	equ	0xFF5
 21976                           prodh	equ	0xFF4
 21977                           prodl	equ	0xFF3
 21978                           intcon	equ	0xFF2
 21979                           postinc0	equ	0xFEE
 21980                           fsr0h	equ	0xFEA
 21981                           fsr0l	equ	0xFE9
 21982                           wreg	equ	0xFE8
 21983                           indf1	equ	0xFE7
 21984                           postdec1	equ	0xFE5
 21985                           fsr1h	equ	0xFE2
 21986                           fsr1l	equ	0xFE1
 21987                           bsr	equ	0xFE0
 21988                           indf2	equ	0xFDF
 21989                           postinc2	equ	0xFDE
 21990                           postdec2	equ	0xFDD
 21991                           fsr2h	equ	0xFDA
 21992                           fsr2l	equ	0xFD9
 21993                           status	equ	0xFD8
 21994                           
 21995 ;; *************** function i2___awmod *****************
 21996 ;; Defined at:
 21997 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 21998 ;; Parameters:    Size  Location     Type
 21999 ;;  dividend        2    0[COMRAM] int 
 22000 ;;  divisor         2    2[COMRAM] int 
 22001 ;; Auto vars:     Size  Location     Type
 22002 ;;  __awmod         1    5[COMRAM] unsigned char 
 22003 ;;  __awmod         1    4[COMRAM] unsigned char 
 22004 ;; Return value:  Size  Location     Type
 22005 ;;                  2    0[COMRAM] int 
 22006 ;; Registers used:
 22007 ;;		wreg, status,2, status,0
 22008 ;; Tracked objects:
 22009 ;;		On entry : 0/0
 22010 ;;		On exit  : 0/0
 22011 ;;		Unchanged: 0/0
 22012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22017 ;;Total ram usage:        6 bytes
 22018 ;; Hardware stack levels used:    1
 22019 ;; This function calls:
 22020 ;;		Nothing
 22021 ;; This function is called by:
 22022 ;;		i2_fround
 22023 ;;		i2_scale
 22024 ;; This function uses a non-reentrant model
 22025 ;;
 22026                           
 22027                           	psect	text79
 22028  01582C                     __ptext79:
 22029                           	opt stack 0
 22030  01582C                     i2___awmod:
 22031                           	opt stack 14
 22032                           
 22033                           ;incstack = 0
 22034  01582C  0E00               	movlw	0
 22035  01582E  6E06               	movwf	i2___awmod@sign,c
 22036  015830  AE02               	btfss	i2___awmod@dividend+1,7,c
 22037  015832  D006               	goto	i2l1419
 22038  015834  6C01               	negf	i2___awmod@dividend,c
 22039  015836  1E02               	comf	i2___awmod@dividend+1,f,c
 22040  015838  B0D8               	btfsc	status,0,c
 22041  01583A  2A02               	incf	i2___awmod@dividend+1,f,c
 22042  01583C  0E01               	movlw	1
 22043  01583E  6E06               	movwf	i2___awmod@sign,c
 22044  015840                     i2l1419:
 22045  015840  AE04               	btfss	i2___awmod@divisor+1,7,c
 22046  015842  D004               	goto	i2l1420
 22047  015844  6C03               	negf	i2___awmod@divisor,c
 22048  015846  1E04               	comf	i2___awmod@divisor+1,f,c
 22049  015848  B0D8               	btfsc	status,0,c
 22050  01584A  2A04               	incf	i2___awmod@divisor+1,f,c
 22051  01584C                     i2l1420:
 22052  01584C  5003               	movf	i2___awmod@divisor,w,c
 22053  01584E  1004               	iorwf	i2___awmod@divisor+1,w,c
 22054  015850  B4D8               	btfsc	status,2,c
 22055  015852  D018               	goto	i2l1427
 22056  015854  0E01               	movlw	1
 22057  015856  6E05               	movwf	i2___awmod@counter,c
 22058  015858  D004               	goto	i2l1422
 22059  01585A  90D8               	bcf	status,0,c
 22060  01585C  3603               	rlcf	i2___awmod@divisor,f,c
 22061  01585E  3604               	rlcf	i2___awmod@divisor+1,f,c
 22062  015860  2A05               	incf	i2___awmod@counter,f,c
 22063  015862                     i2l1422:
 22064  015862  AE04               	btfss	i2___awmod@divisor+1,7,c
 22065  015864  D7FA               	goto	i2l1423
 22066  015866                     i2u1107_40:
 22067  015866  5003               	movf	i2___awmod@divisor,w,c
 22068  015868  5C01               	subwf	i2___awmod@dividend,w,c
 22069  01586A  5004               	movf	i2___awmod@divisor+1,w,c
 22070  01586C  5802               	subwfb	i2___awmod@dividend+1,w,c
 22071  01586E  A0D8               	btfss	status,0,c
 22072  015870  D004               	goto	i2l1426
 22073  015872  5003               	movf	i2___awmod@divisor,w,c
 22074  015874  5E01               	subwf	i2___awmod@dividend,f,c
 22075  015876  5004               	movf	i2___awmod@divisor+1,w,c
 22076  015878  5A02               	subwfb	i2___awmod@dividend+1,f,c
 22077  01587A                     i2l1426:
 22078  01587A  90D8               	bcf	status,0,c
 22079  01587C  3204               	rrcf	i2___awmod@divisor+1,f,c
 22080  01587E  3203               	rrcf	i2___awmod@divisor,f,c
 22081  015880  2E05               	decfsz	i2___awmod@counter,f,c
 22082  015882  D7F1               	goto	i2u1107_40
 22083  015884                     i2l1427:
 22084  015884  5006               	movf	i2___awmod@sign,w,c
 22085  015886  B4D8               	btfsc	status,2,c
 22086  015888  D004               	goto	i2l1428
 22087  01588A  6C01               	negf	i2___awmod@dividend,c
 22088  01588C  1E02               	comf	i2___awmod@dividend+1,f,c
 22089  01588E  B0D8               	btfsc	status,0,c
 22090  015890  2A02               	incf	i2___awmod@dividend+1,f,c
 22091  015892                     i2l1428:
 22092  015892  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 22093  015896  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 22094  01589A  0012               	return	
 22095  01589C                     __end_ofi2___awmod:
 22096                           	opt stack 0
 22097                           tosu	equ	0xFFF
 22098                           tosh	equ	0xFFE
 22099                           tosl	equ	0xFFD
 22100                           pclatu	equ	0xFFB
 22101                           pclath	equ	0xFFA
 22102                           tblptru	equ	0xFF8
 22103                           tblptrh	equ	0xFF7
 22104                           tblptrl	equ	0xFF6
 22105                           tablat	equ	0xFF5
 22106                           prodh	equ	0xFF4
 22107                           prodl	equ	0xFF3
 22108                           intcon	equ	0xFF2
 22109                           postinc0	equ	0xFEE
 22110                           fsr0h	equ	0xFEA
 22111                           fsr0l	equ	0xFE9
 22112                           wreg	equ	0xFE8
 22113                           indf1	equ	0xFE7
 22114                           postdec1	equ	0xFE5
 22115                           fsr1h	equ	0xFE2
 22116                           fsr1l	equ	0xFE1
 22117                           bsr	equ	0xFE0
 22118                           indf2	equ	0xFDF
 22119                           postinc2	equ	0xFDE
 22120                           postdec2	equ	0xFDD
 22121                           fsr2h	equ	0xFDA
 22122                           fsr2l	equ	0xFD9
 22123                           status	equ	0xFD8
 22124                           
 22125 ;; *************** function i2___awdiv *****************
 22126 ;; Defined at:
 22127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 22128 ;; Parameters:    Size  Location     Type
 22129 ;;  dividend        2    6[COMRAM] int 
 22130 ;;  divisor         2    8[COMRAM] int 
 22131 ;; Auto vars:     Size  Location     Type
 22132 ;;  __awdiv         2   12[COMRAM] int 
 22133 ;;  __awdiv         1   11[COMRAM] unsigned char 
 22134 ;;  __awdiv         1   10[COMRAM] unsigned char 
 22135 ;; Return value:  Size  Location     Type
 22136 ;;                  2    6[COMRAM] int 
 22137 ;; Registers used:
 22138 ;;		wreg, status,2, status,0
 22139 ;; Tracked objects:
 22140 ;;		On entry : 0/0
 22141 ;;		On exit  : 0/0
 22142 ;;		Unchanged: 0/0
 22143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22145 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22147 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22148 ;;Total ram usage:        8 bytes
 22149 ;; Hardware stack levels used:    1
 22150 ;; This function calls:
 22151 ;;		Nothing
 22152 ;; This function is called by:
 22153 ;;		i2_fround
 22154 ;;		i2_scale
 22155 ;;		i2_printf
 22156 ;; This function uses a non-reentrant model
 22157 ;;
 22158                           
 22159                           	psect	text80
 22160  01554E                     __ptext80:
 22161                           	opt stack 0
 22162  01554E                     i2___awdiv:
 22163                           	opt stack 14
 22164                           
 22165                           ;incstack = 0
 22166  01554E  0E00               	movlw	0
 22167  015550  6E0C               	movwf	i2___awdiv@sign,c
 22168  015552  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 22169  015554  D006               	goto	i2l1406
 22170  015556  6C09               	negf	i2___awdiv@divisor,c
 22171  015558  1E0A               	comf	i2___awdiv@divisor+1,f,c
 22172  01555A  B0D8               	btfsc	status,0,c
 22173  01555C  2A0A               	incf	i2___awdiv@divisor+1,f,c
 22174  01555E  0E01               	movlw	1
 22175  015560  6E0C               	movwf	i2___awdiv@sign,c
 22176  015562                     i2l1406:
 22177  015562  AE08               	btfss	i2___awdiv@dividend+1,7,c
 22178  015564  D006               	goto	i2l1407
 22179  015566  6C07               	negf	i2___awdiv@dividend,c
 22180  015568  1E08               	comf	i2___awdiv@dividend+1,f,c
 22181  01556A  B0D8               	btfsc	status,0,c
 22182  01556C  2A08               	incf	i2___awdiv@dividend+1,f,c
 22183  01556E  0E01               	movlw	1
 22184  015570  1A0C               	xorwf	i2___awdiv@sign,f,c
 22185  015572                     i2l1407:
 22186  015572  0E00               	movlw	0
 22187  015574  6E0E               	movwf	i2___awdiv@quotient+1,c
 22188  015576  0E00               	movlw	0
 22189  015578  6E0D               	movwf	i2___awdiv@quotient,c
 22190  01557A  5009               	movf	i2___awdiv@divisor,w,c
 22191  01557C  100A               	iorwf	i2___awdiv@divisor+1,w,c
 22192  01557E  B4D8               	btfsc	status,2,c
 22193  015580  D01C               	goto	i2l1414
 22194  015582  0E01               	movlw	1
 22195  015584  6E0B               	movwf	i2___awdiv@counter,c
 22196  015586  D004               	goto	i2l1409
 22197  015588  90D8               	bcf	status,0,c
 22198  01558A  3609               	rlcf	i2___awdiv@divisor,f,c
 22199  01558C  360A               	rlcf	i2___awdiv@divisor+1,f,c
 22200  01558E  2A0B               	incf	i2___awdiv@counter,f,c
 22201  015590                     i2l1409:
 22202  015590  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 22203  015592  D7FA               	goto	i2l1410
 22204  015594                     i2u1101_40:
 22205  015594  90D8               	bcf	status,0,c
 22206  015596  360D               	rlcf	i2___awdiv@quotient,f,c
 22207  015598  360E               	rlcf	i2___awdiv@quotient+1,f,c
 22208  01559A  5009               	movf	i2___awdiv@divisor,w,c
 22209  01559C  5C07               	subwf	i2___awdiv@dividend,w,c
 22210  01559E  500A               	movf	i2___awdiv@divisor+1,w,c
 22211  0155A0  5808               	subwfb	i2___awdiv@dividend+1,w,c
 22212  0155A2  A0D8               	btfss	status,0,c
 22213  0155A4  D005               	goto	i2l1413
 22214  0155A6  5009               	movf	i2___awdiv@divisor,w,c
 22215  0155A8  5E07               	subwf	i2___awdiv@dividend,f,c
 22216  0155AA  500A               	movf	i2___awdiv@divisor+1,w,c
 22217  0155AC  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 22218  0155AE  800D               	bsf	i2___awdiv@quotient,0,c
 22219  0155B0                     i2l1413:
 22220  0155B0  90D8               	bcf	status,0,c
 22221  0155B2  320A               	rrcf	i2___awdiv@divisor+1,f,c
 22222  0155B4  3209               	rrcf	i2___awdiv@divisor,f,c
 22223  0155B6  2E0B               	decfsz	i2___awdiv@counter,f,c
 22224  0155B8  D7ED               	goto	i2u1101_40
 22225  0155BA                     i2l1414:
 22226  0155BA  500C               	movf	i2___awdiv@sign,w,c
 22227  0155BC  B4D8               	btfsc	status,2,c
 22228  0155BE  D004               	goto	i2l1415
 22229  0155C0  6C0D               	negf	i2___awdiv@quotient,c
 22230  0155C2  1E0E               	comf	i2___awdiv@quotient+1,f,c
 22231  0155C4  B0D8               	btfsc	status,0,c
 22232  0155C6  2A0E               	incf	i2___awdiv@quotient+1,f,c
 22233  0155C8                     i2l1415:
 22234  0155C8  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 22235  0155CC  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 22236  0155D0  0012               	return	
 22237  0155D2                     __end_ofi2___awdiv:
 22238                           	opt stack 0
 22239                           tosu	equ	0xFFF
 22240                           tosh	equ	0xFFE
 22241                           tosl	equ	0xFFD
 22242                           pclatu	equ	0xFFB
 22243                           pclath	equ	0xFFA
 22244                           tblptru	equ	0xFF8
 22245                           tblptrh	equ	0xFF7
 22246                           tblptrl	equ	0xFF6
 22247                           tablat	equ	0xFF5
 22248                           prodh	equ	0xFF4
 22249                           prodl	equ	0xFF3
 22250                           intcon	equ	0xFF2
 22251                           postinc0	equ	0xFEE
 22252                           fsr0h	equ	0xFEA
 22253                           fsr0l	equ	0xFE9
 22254                           wreg	equ	0xFE8
 22255                           indf1	equ	0xFE7
 22256                           postdec1	equ	0xFE5
 22257                           fsr1h	equ	0xFE2
 22258                           fsr1l	equ	0xFE1
 22259                           bsr	equ	0xFE0
 22260                           indf2	equ	0xFDF
 22261                           postinc2	equ	0xFDE
 22262                           postdec2	equ	0xFDD
 22263                           fsr2h	equ	0xFDA
 22264                           fsr2l	equ	0xFD9
 22265                           status	equ	0xFD8
 22266                           
 22267 ;; *************** function i2__tdiv_to_l_ *****************
 22268 ;; Defined at:
 22269 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 22270 ;; Parameters:    Size  Location     Type
 22271 ;;  f1              3    0[COMRAM] float 
 22272 ;;  f2              3    3[COMRAM] float 
 22273 ;; Auto vars:     Size  Location     Type
 22274 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 22275 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 22276 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 22277 ;; Return value:  Size  Location     Type
 22278 ;;                  4    0[COMRAM] unsigned long 
 22279 ;; Registers used:
 22280 ;;		wreg, status,2, status,0
 22281 ;; Tracked objects:
 22282 ;;		On entry : 0/0
 22283 ;;		On exit  : 0/0
 22284 ;;		Unchanged: 0/0
 22285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22286 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22287 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22289 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22290 ;;Total ram usage:       15 bytes
 22291 ;; Hardware stack levels used:    1
 22292 ;; This function calls:
 22293 ;;		Nothing
 22294 ;; This function is called by:
 22295 ;;		i2_printf
 22296 ;; This function uses a non-reentrant model
 22297 ;;
 22298                           
 22299                           	psect	text81
 22300  0141BC                     __ptext81:
 22301                           	opt stack 0
 22302  0141BC                     i2__tdiv_to_l_:
 22303                           	opt stack 15
 22304                           
 22305                           ;incstack = 0
 22306  0141BC  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 22307  0141C0  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 22308  0141C2  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 22309  0141C4  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 22310  0141C6  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 22311  0141C8  E301               	bnc	u1141_41
 22312  0141CA  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 22313  0141CC                     u1141_41:
 22314  0141CC  5007               	movf	??i2__tdiv_to_l_,w,c
 22315  0141CE  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 22316  0141D0  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22317  0141D2  A4D8               	btfss	status,2,c
 22318  0141D4  D009               	goto	i2l1554
 22319  0141D6  0E00               	movlw	0
 22320  0141D8  6E01               	movwf	?i2__tdiv_to_l_,c
 22321  0141DA  0E00               	movlw	0
 22322  0141DC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22323  0141DE  0E00               	movlw	0
 22324  0141E0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22325  0141E2  0E00               	movlw	0
 22326  0141E4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22327  0141E6  0012               	return	
 22328  0141E8                     i2l1554:
 22329  0141E8  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 22330  0141EC  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 22331  0141EE  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 22332  0141F0  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 22333  0141F2  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 22334  0141F4  E301               	bnc	u1143_41
 22335  0141F6  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 22336  0141F8                     u1143_41:
 22337  0141F8  5007               	movf	??i2__tdiv_to_l_,w,c
 22338  0141FA  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 22339  0141FC  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 22340  0141FE  A4D8               	btfss	status,2,c
 22341  014200  D009               	goto	i2l1556
 22342  014202  0E00               	movlw	0
 22343  014204  6E01               	movwf	?i2__tdiv_to_l_,c
 22344  014206  0E00               	movlw	0
 22345  014208  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22346  01420A  0E00               	movlw	0
 22347  01420C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22348  01420E  0E00               	movlw	0
 22349  014210  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22350  014212  0012               	return	
 22351  014214                     i2l1556:
 22352  014214  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 22353  014216  0EFF               	movlw	255
 22354  014218  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 22355  01421A  0EFF               	movlw	255
 22356  01421C  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 22357  01421E  0E00               	movlw	0
 22358  014220  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 22359  014222  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 22360  014224  0EFF               	movlw	255
 22361  014226  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 22362  014228  0EFF               	movlw	255
 22363  01422A  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 22364  01422C  0E00               	movlw	0
 22365  01422E  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 22366  014230  0E00               	movlw	0
 22367  014232  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 22368  014234  0E00               	movlw	0
 22369  014236  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 22370  014238  0E00               	movlw	0
 22371  01423A  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 22372  01423C  0E00               	movlw	0
 22373  01423E  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 22374  014240  0E7F               	movlw	127
 22375  014242  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 22376  014244  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 22377  014246  0F98               	addlw	152
 22378  014248  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 22379  01424A  0E18               	movlw	24
 22380  01424C  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 22381  01424E                     i2l1557:
 22382  01424E  90D8               	bcf	status,0,c
 22383  014250  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 22384  014252  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 22385  014254  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 22386  014256  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 22387  014258  5004               	movf	i2__tdiv_to_l_@f2,w,c
 22388  01425A  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 22389  01425C  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 22390  01425E  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 22391  014260  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 22392  014262  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 22393  014264  A0D8               	btfss	status,0,c
 22394  014266  D007               	goto	i2l1558
 22395  014268  5004               	movf	i2__tdiv_to_l_@f2,w,c
 22396  01426A  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 22397  01426C  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 22398  01426E  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 22399  014270  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 22400  014272  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 22401  014274  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 22402  014276                     i2l1558:
 22403  014276  90D8               	bcf	status,0,c
 22404  014278  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 22405  01427A  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 22406  01427C  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 22407  01427E  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 22408  014280  D7E6               	goto	i2l1557
 22409  014282  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 22410  014284  D016               	goto	i2l1560
 22411  014286  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22412  014288  0A80               	xorlw	128
 22413  01428A  0F97               	addlw	151
 22414  01428C  B0D8               	btfsc	status,0,c
 22415  01428E  D009               	goto	i2l1561
 22416  014290  0E00               	movlw	0
 22417  014292  6E01               	movwf	?i2__tdiv_to_l_,c
 22418  014294  0E00               	movlw	0
 22419  014296  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22420  014298  0E00               	movlw	0
 22421  01429A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22422  01429C  0E00               	movlw	0
 22423  01429E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22424  0142A0  0012               	return	
 22425  0142A2                     i2l1561:
 22426  0142A2  90D8               	bcf	status,0,c
 22427  0142A4  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 22428  0142A6  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 22429  0142A8  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 22430  0142AA  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 22431  0142AC  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 22432  0142AE  D7F9               	goto	i2l1561
 22433  0142B0  D015               	goto	i2u1149_40
 22434  0142B2                     i2l1560:
 22435  0142B2  0E17               	movlw	23
 22436  0142B4  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 22437  0142B6  D00F               	goto	i2l1566
 22438  0142B8  0E00               	movlw	0
 22439  0142BA  6E01               	movwf	?i2__tdiv_to_l_,c
 22440  0142BC  0E00               	movlw	0
 22441  0142BE  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22442  0142C0  0E00               	movlw	0
 22443  0142C2  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22444  0142C4  0E00               	movlw	0
 22445  0142C6  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22446  0142C8  0012               	return	
 22447  0142CA  90D8               	bcf	status,0,c
 22448  0142CC  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 22449  0142CE  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 22450  0142D0  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 22451  0142D2  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 22452  0142D4  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 22453  0142D6                     i2l1566:
 22454  0142D6  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22455  0142D8  A4D8               	btfss	status,2,c
 22456  0142DA  D7F7               	goto	i2l1567
 22457  0142DC                     i2u1149_40:
 22458  0142DC  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 22459  0142E0  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 22460  0142E4  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 22461  0142E8  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 22462  0142EC  0012               	return		;funcret
 22463  0142EE                     __end_ofi2__tdiv_to_l_:
 22464                           	opt stack 0
 22465                           tosu	equ	0xFFF
 22466                           tosh	equ	0xFFE
 22467                           tosl	equ	0xFFD
 22468                           pclatu	equ	0xFFB
 22469                           pclath	equ	0xFFA
 22470                           tblptru	equ	0xFF8
 22471                           tblptrh	equ	0xFF7
 22472                           tblptrl	equ	0xFF6
 22473                           tablat	equ	0xFF5
 22474                           prodh	equ	0xFF4
 22475                           prodl	equ	0xFF3
 22476                           intcon	equ	0xFF2
 22477                           postinc0	equ	0xFEE
 22478                           fsr0h	equ	0xFEA
 22479                           fsr0l	equ	0xFE9
 22480                           wreg	equ	0xFE8
 22481                           indf1	equ	0xFE7
 22482                           postdec1	equ	0xFE5
 22483                           fsr1h	equ	0xFE2
 22484                           fsr1l	equ	0xFE1
 22485                           bsr	equ	0xFE0
 22486                           indf2	equ	0xFDF
 22487                           postinc2	equ	0xFDE
 22488                           postdec2	equ	0xFDD
 22489                           fsr2h	equ	0xFDA
 22490                           fsr2l	equ	0xFD9
 22491                           status	equ	0xFD8
 22492                           
 22493 ;; *************** function i2__div_to_l_ *****************
 22494 ;; Defined at:
 22495 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 22496 ;; Parameters:    Size  Location     Type
 22497 ;;  f1              3    0[COMRAM] unsigned long 
 22498 ;;  f2              3    3[COMRAM] unsigned long 
 22499 ;; Auto vars:     Size  Location     Type
 22500 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 22501 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 22502 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 22503 ;; Return value:  Size  Location     Type
 22504 ;;                  4    0[COMRAM] unsigned long 
 22505 ;; Registers used:
 22506 ;;		wreg, status,2, status,0
 22507 ;; Tracked objects:
 22508 ;;		On entry : 0/0
 22509 ;;		On exit  : 0/0
 22510 ;;		Unchanged: 0/0
 22511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22512 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22513 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22515 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22516 ;;Total ram usage:       12 bytes
 22517 ;; Hardware stack levels used:    1
 22518 ;; This function calls:
 22519 ;;		Nothing
 22520 ;; This function is called by:
 22521 ;;		i2_printf
 22522 ;; This function uses a non-reentrant model
 22523 ;;
 22524                           
 22525                           	psect	text82
 22526  014418                     __ptext82:
 22527                           	opt stack 0
 22528  014418                     i2__div_to_l_:
 22529                           	opt stack 15
 22530                           
 22531                           ;incstack = 0
 22532  014418  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 22533  01441A  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 22534  01441C  6E0C               	movwf	i2__div_to_l_@exp1,c
 22535  01441E  500C               	movf	i2__div_to_l_@exp1,w,c
 22536  014420  A4D8               	btfss	status,2,c
 22537  014422  D009               	goto	i2l1450
 22538  014424  0E00               	movlw	0
 22539  014426  6E01               	movwf	?i2__div_to_l_,c
 22540  014428  0E00               	movlw	0
 22541  01442A  6E02               	movwf	?i2__div_to_l_+1,c
 22542  01442C  0E00               	movlw	0
 22543  01442E  6E03               	movwf	?i2__div_to_l_+2,c
 22544  014430  0E00               	movlw	0
 22545  014432  6E04               	movwf	?i2__div_to_l_+3,c
 22546  014434  0012               	return	
 22547  014436                     i2l1450:
 22548  014436  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 22549  014438  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 22550  01443A  6E0B               	movwf	i2__div_to_l_@cntr,c
 22551  01443C  500B               	movf	i2__div_to_l_@cntr,w,c
 22552  01443E  A4D8               	btfss	status,2,c
 22553  014440  D009               	goto	i2l1452
 22554  014442  0E00               	movlw	0
 22555  014444  6E01               	movwf	?i2__div_to_l_,c
 22556  014446  0E00               	movlw	0
 22557  014448  6E02               	movwf	?i2__div_to_l_+1,c
 22558  01444A  0E00               	movlw	0
 22559  01444C  6E03               	movwf	?i2__div_to_l_+2,c
 22560  01444E  0E00               	movlw	0
 22561  014450  6E04               	movwf	?i2__div_to_l_+3,c
 22562  014452  0012               	return	
 22563  014454                     i2l1452:
 22564  014454  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 22565  014456  0EFF               	movlw	255
 22566  014458  1601               	andwf	i2__div_to_l_@f1,f,c
 22567  01445A  0EFF               	movlw	255
 22568  01445C  1602               	andwf	i2__div_to_l_@f1+1,f,c
 22569  01445E  0EFF               	movlw	255
 22570  014460  1603               	andwf	i2__div_to_l_@f1+2,f,c
 22571  014462  0E00               	movlw	0
 22572  014464  1604               	andwf	i2__div_to_l_@f1+3,f,c
 22573  014466  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 22574  014468  0EFF               	movlw	255
 22575  01446A  1604               	andwf	i2__div_to_l_@f2,f,c
 22576  01446C  0EFF               	movlw	255
 22577  01446E  1605               	andwf	i2__div_to_l_@f2+1,f,c
 22578  014470  0EFF               	movlw	255
 22579  014472  1606               	andwf	i2__div_to_l_@f2+2,f,c
 22580  014474  0E00               	movlw	0
 22581  014476  1607               	andwf	i2__div_to_l_@f2+3,f,c
 22582  014478  0E00               	movlw	0
 22583  01447A  6E07               	movwf	i2__div_to_l_@quot,c
 22584  01447C  0E00               	movlw	0
 22585  01447E  6E08               	movwf	i2__div_to_l_@quot+1,c
 22586  014480  0E00               	movlw	0
 22587  014482  6E09               	movwf	i2__div_to_l_@quot+2,c
 22588  014484  0E00               	movlw	0
 22589  014486  6E0A               	movwf	i2__div_to_l_@quot+3,c
 22590  014488  0E7F               	movlw	127
 22591  01448A  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 22592  01448C  500B               	movf	i2__div_to_l_@cntr,w,c
 22593  01448E  0FA0               	addlw	160
 22594  014490  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 22595  014492  0E20               	movlw	32
 22596  014494  6E0B               	movwf	i2__div_to_l_@cntr,c
 22597  014496  90D8               	bcf	status,0,c
 22598  014498  3607               	rlcf	i2__div_to_l_@quot,f,c
 22599  01449A  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 22600  01449C  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 22601  01449E  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 22602  0144A0  5004               	movf	i2__div_to_l_@f2,w,c
 22603  0144A2  5C01               	subwf	i2__div_to_l_@f1,w,c
 22604  0144A4  5005               	movf	i2__div_to_l_@f2+1,w,c
 22605  0144A6  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 22606  0144A8  5006               	movf	i2__div_to_l_@f2+2,w,c
 22607  0144AA  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 22608  0144AC  5007               	movf	i2__div_to_l_@f2+3,w,c
 22609  0144AE  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 22610  0144B0  A0D8               	btfss	status,0,c
 22611  0144B2  D009               	goto	i2l1454
 22612  0144B4  5004               	movf	i2__div_to_l_@f2,w,c
 22613  0144B6  5E01               	subwf	i2__div_to_l_@f1,f,c
 22614  0144B8  5005               	movf	i2__div_to_l_@f2+1,w,c
 22615  0144BA  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 22616  0144BC  5006               	movf	i2__div_to_l_@f2+2,w,c
 22617  0144BE  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 22618  0144C0  5007               	movf	i2__div_to_l_@f2+3,w,c
 22619  0144C2  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 22620  0144C4  8007               	bsf	i2__div_to_l_@quot,0,c
 22621  0144C6                     i2l1454:
 22622  0144C6  90D8               	bcf	status,0,c
 22623  0144C8  3601               	rlcf	i2__div_to_l_@f1,f,c
 22624  0144CA  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 22625  0144CC  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 22626  0144CE  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 22627  0144D0  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 22628  0144D2  D7E1               	goto	i2l1453
 22629  0144D4  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 22630  0144D6  D016               	goto	i2l1456
 22631  0144D8  500C               	movf	i2__div_to_l_@exp1,w,c
 22632  0144DA  0A80               	xorlw	128
 22633  0144DC  0F9F               	addlw	159
 22634  0144DE  B0D8               	btfsc	status,0,c
 22635  0144E0  D009               	goto	i2l1457
 22636  0144E2  0E00               	movlw	0
 22637  0144E4  6E01               	movwf	?i2__div_to_l_,c
 22638  0144E6  0E00               	movlw	0
 22639  0144E8  6E02               	movwf	?i2__div_to_l_+1,c
 22640  0144EA  0E00               	movlw	0
 22641  0144EC  6E03               	movwf	?i2__div_to_l_+2,c
 22642  0144EE  0E00               	movlw	0
 22643  0144F0  6E04               	movwf	?i2__div_to_l_+3,c
 22644  0144F2  0012               	return	
 22645  0144F4                     i2l1457:
 22646  0144F4  90D8               	bcf	status,0,c
 22647  0144F6  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 22648  0144F8  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 22649  0144FA  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 22650  0144FC  3207               	rrcf	i2__div_to_l_@quot,f,c
 22651  0144FE  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 22652  014500  D7F9               	goto	i2l1457
 22653  014502  D015               	goto	i2u1140_40
 22654  014504                     i2l1456:
 22655  014504  0E1F               	movlw	31
 22656  014506  640C               	cpfsgt	i2__div_to_l_@exp1,c
 22657  014508  D00F               	goto	i2l1462
 22658  01450A  0E00               	movlw	0
 22659  01450C  6E01               	movwf	?i2__div_to_l_,c
 22660  01450E  0E00               	movlw	0
 22661  014510  6E02               	movwf	?i2__div_to_l_+1,c
 22662  014512  0E00               	movlw	0
 22663  014514  6E03               	movwf	?i2__div_to_l_+2,c
 22664  014516  0E00               	movlw	0
 22665  014518  6E04               	movwf	?i2__div_to_l_+3,c
 22666  01451A  0012               	return	
 22667  01451C  90D8               	bcf	status,0,c
 22668  01451E  3607               	rlcf	i2__div_to_l_@quot,f,c
 22669  014520  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 22670  014522  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 22671  014524  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 22672  014526  060C               	decf	i2__div_to_l_@exp1,f,c
 22673  014528                     i2l1462:
 22674  014528  500C               	movf	i2__div_to_l_@exp1,w,c
 22675  01452A  A4D8               	btfss	status,2,c
 22676  01452C  D7F7               	goto	i2l1463
 22677  01452E                     i2u1140_40:
 22678  01452E  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 22679  014532  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 22680  014536  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 22681  01453A  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 22682  01453E  0012               	return		;funcret
 22683  014540                     __end_ofi2__div_to_l_:
 22684                           	opt stack 0
 22685                           tosu	equ	0xFFF
 22686                           tosh	equ	0xFFE
 22687                           tosl	equ	0xFFD
 22688                           pclatu	equ	0xFFB
 22689                           pclath	equ	0xFFA
 22690                           tblptru	equ	0xFF8
 22691                           tblptrh	equ	0xFF7
 22692                           tblptrl	equ	0xFF6
 22693                           tablat	equ	0xFF5
 22694                           prodh	equ	0xFF4
 22695                           prodl	equ	0xFF3
 22696                           intcon	equ	0xFF2
 22697                           postinc0	equ	0xFEE
 22698                           fsr0h	equ	0xFEA
 22699                           fsr0l	equ	0xFE9
 22700                           wreg	equ	0xFE8
 22701                           indf1	equ	0xFE7
 22702                           postdec1	equ	0xFE5
 22703                           fsr1h	equ	0xFE2
 22704                           fsr1l	equ	0xFE1
 22705                           bsr	equ	0xFE0
 22706                           indf2	equ	0xFDF
 22707                           postinc2	equ	0xFDE
 22708                           postdec2	equ	0xFDD
 22709                           fsr2h	equ	0xFDA
 22710                           fsr2l	equ	0xFD9
 22711                           status	equ	0xFD8
 22712                           
 22713 ;; *************** function i2___lltoft *****************
 22714 ;; Defined at:
 22715 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 22716 ;; Parameters:    Size  Location     Type
 22717 ;;  c               4    8[COMRAM] unsigned long 
 22718 ;; Auto vars:     Size  Location     Type
 22719 ;;  __lltoft        1   16[COMRAM] unsigned char 
 22720 ;; Return value:  Size  Location     Type
 22721 ;;                  3    8[COMRAM] float 
 22722 ;; Registers used:
 22723 ;;		wreg, status,2, status,0, cstack
 22724 ;; Tracked objects:
 22725 ;;		On entry : 0/0
 22726 ;;		On exit  : 0/0
 22727 ;;		Unchanged: 0/0
 22728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22731 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22732 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22733 ;;Total ram usage:        9 bytes
 22734 ;; Hardware stack levels used:    1
 22735 ;; Hardware stack levels required when called:    1
 22736 ;; This function calls:
 22737 ;;		i2___ftpack
 22738 ;; This function is called by:
 22739 ;;		i2_printf
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text83
 22744  015C18                     __ptext83:
 22745                           	opt stack 0
 22746  015C18                     i2___lltoft:
 22747                           	opt stack 14
 22748                           
 22749                           ;incstack = 0
 22750  015C18  0E8E               	movlw	142
 22751  015C1A  6E11               	movwf	i2___lltoft@exp,c
 22752  015C1C  D006               	goto	i2l1661
 22753  015C1E  90D8               	bcf	status,0,c
 22754  015C20  320C               	rrcf	i2___lltoft@c+3,f,c
 22755  015C22  320B               	rrcf	i2___lltoft@c+2,f,c
 22756  015C24  320A               	rrcf	i2___lltoft@c+1,f,c
 22757  015C26  3209               	rrcf	i2___lltoft@c,f,c
 22758  015C28  2A11               	incf	i2___lltoft@exp,f,c
 22759  015C2A                     i2l1661:
 22760  015C2A  0E00               	movlw	0
 22761  015C2C  1409               	andwf	i2___lltoft@c,w,c
 22762  015C2E  6E0D               	movwf	??i2___lltoft& (0+255),c
 22763  015C30  0E00               	movlw	0
 22764  015C32  140A               	andwf	i2___lltoft@c+1,w,c
 22765  015C34  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 22766  015C36  0E00               	movlw	0
 22767  015C38  140B               	andwf	i2___lltoft@c+2,w,c
 22768  015C3A  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 22769  015C3C  0EFF               	movlw	255
 22770  015C3E  140C               	andwf	i2___lltoft@c+3,w,c
 22771  015C40  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 22772  015C42  500D               	movf	??i2___lltoft,w,c
 22773  015C44  100E               	iorwf	??i2___lltoft+1,w,c
 22774  015C46  100F               	iorwf	??i2___lltoft+2,w,c
 22775  015C48  1010               	iorwf	??i2___lltoft+3,w,c
 22776  015C4A  A4D8               	btfss	status,2,c
 22777  015C4C  D7E8               	goto	i2l1662
 22778  015C4E  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 22779  015C52  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 22780  015C56  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 22781  015C5A  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 22782  015C5E  0E00               	movlw	0
 22783  015C60  6E05               	movwf	i2___ftpack@sign,c
 22784  015C62  EC06  F0A8         	call	i2___ftpack	;wreg free
 22785  015C66  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 22786  015C6A  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 22787  015C6E  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 22788  015C72  0012               	return	
 22789  015C74                     __end_ofi2___lltoft:
 22790                           	opt stack 0
 22791                           tosu	equ	0xFFF
 22792                           tosh	equ	0xFFE
 22793                           tosl	equ	0xFFD
 22794                           pclatu	equ	0xFFB
 22795                           pclath	equ	0xFFA
 22796                           tblptru	equ	0xFF8
 22797                           tblptrh	equ	0xFF7
 22798                           tblptrl	equ	0xFF6
 22799                           tablat	equ	0xFF5
 22800                           prodh	equ	0xFF4
 22801                           prodl	equ	0xFF3
 22802                           intcon	equ	0xFF2
 22803                           postinc0	equ	0xFEE
 22804                           fsr0h	equ	0xFEA
 22805                           fsr0l	equ	0xFE9
 22806                           wreg	equ	0xFE8
 22807                           indf1	equ	0xFE7
 22808                           postdec1	equ	0xFE5
 22809                           fsr1h	equ	0xFE2
 22810                           fsr1l	equ	0xFE1
 22811                           bsr	equ	0xFE0
 22812                           indf2	equ	0xFDF
 22813                           postinc2	equ	0xFDE
 22814                           postdec2	equ	0xFDD
 22815                           fsr2h	equ	0xFDA
 22816                           fsr2l	equ	0xFD9
 22817                           status	equ	0xFD8
 22818                           
 22819 ;; *************** function i2___llmod *****************
 22820 ;; Defined at:
 22821 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 22822 ;; Parameters:    Size  Location     Type
 22823 ;;  dividend        4   13[COMRAM] unsigned long 
 22824 ;;  divisor         4   17[COMRAM] unsigned long 
 22825 ;; Auto vars:     Size  Location     Type
 22826 ;;  __llmod         1   21[COMRAM] unsigned char 
 22827 ;; Return value:  Size  Location     Type
 22828 ;;                  4   13[COMRAM] unsigned long 
 22829 ;; Registers used:
 22830 ;;		wreg, status,2, status,0
 22831 ;; Tracked objects:
 22832 ;;		On entry : 0/0
 22833 ;;		On exit  : 0/0
 22834 ;;		Unchanged: 0/0
 22835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22836 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22839 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22840 ;;Total ram usage:        9 bytes
 22841 ;; Hardware stack levels used:    1
 22842 ;; This function calls:
 22843 ;;		Nothing
 22844 ;; This function is called by:
 22845 ;;		i2_printf
 22846 ;; This function uses a non-reentrant model
 22847 ;;
 22848                           
 22849                           	psect	text84
 22850  0159D2                     __ptext84:
 22851                           	opt stack 0
 22852  0159D2                     i2___llmod:
 22853                           	opt stack 15
 22854                           
 22855                           ;incstack = 0
 22856  0159D2  5012               	movf	i2___llmod@divisor,w,c
 22857  0159D4  1013               	iorwf	i2___llmod@divisor+1,w,c
 22858  0159D6  1014               	iorwf	i2___llmod@divisor+2,w,c
 22859  0159D8  1015               	iorwf	i2___llmod@divisor+3,w,c
 22860  0159DA  B4D8               	btfsc	status,2,c
 22861  0159DC  D024               	goto	i2l1655
 22862  0159DE  0E01               	movlw	1
 22863  0159E0  6E16               	movwf	i2___llmod@counter,c
 22864  0159E2  D006               	goto	i2l1650
 22865  0159E4  90D8               	bcf	status,0,c
 22866  0159E6  3612               	rlcf	i2___llmod@divisor,f,c
 22867  0159E8  3613               	rlcf	i2___llmod@divisor+1,f,c
 22868  0159EA  3614               	rlcf	i2___llmod@divisor+2,f,c
 22869  0159EC  3615               	rlcf	i2___llmod@divisor+3,f,c
 22870  0159EE  2A16               	incf	i2___llmod@counter,f,c
 22871  0159F0                     i2l1650:
 22872  0159F0  AE15               	btfss	i2___llmod@divisor+3,7,c
 22873  0159F2  D7F8               	goto	i2l1651
 22874  0159F4                     i2u1156_40:
 22875  0159F4  5012               	movf	i2___llmod@divisor,w,c
 22876  0159F6  5C0E               	subwf	i2___llmod@dividend,w,c
 22877  0159F8  5013               	movf	i2___llmod@divisor+1,w,c
 22878  0159FA  580F               	subwfb	i2___llmod@dividend+1,w,c
 22879  0159FC  5014               	movf	i2___llmod@divisor+2,w,c
 22880  0159FE  5810               	subwfb	i2___llmod@dividend+2,w,c
 22881  015A00  5015               	movf	i2___llmod@divisor+3,w,c
 22882  015A02  5811               	subwfb	i2___llmod@dividend+3,w,c
 22883  015A04  A0D8               	btfss	status,0,c
 22884  015A06  D008               	goto	i2l1654
 22885  015A08  5012               	movf	i2___llmod@divisor,w,c
 22886  015A0A  5E0E               	subwf	i2___llmod@dividend,f,c
 22887  015A0C  5013               	movf	i2___llmod@divisor+1,w,c
 22888  015A0E  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 22889  015A10  5014               	movf	i2___llmod@divisor+2,w,c
 22890  015A12  5A10               	subwfb	i2___llmod@dividend+2,f,c
 22891  015A14  5015               	movf	i2___llmod@divisor+3,w,c
 22892  015A16  5A11               	subwfb	i2___llmod@dividend+3,f,c
 22893  015A18                     i2l1654:
 22894  015A18  90D8               	bcf	status,0,c
 22895  015A1A  3215               	rrcf	i2___llmod@divisor+3,f,c
 22896  015A1C  3214               	rrcf	i2___llmod@divisor+2,f,c
 22897  015A1E  3213               	rrcf	i2___llmod@divisor+1,f,c
 22898  015A20  3212               	rrcf	i2___llmod@divisor,f,c
 22899  015A22  2E16               	decfsz	i2___llmod@counter,f,c
 22900  015A24  D7E7               	goto	i2u1156_40
 22901  015A26                     i2l1655:
 22902  015A26  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 22903  015A2A  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 22904  015A2E  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 22905  015A32  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 22906  015A36  0012               	return		;funcret
 22907  015A38                     __end_ofi2___llmod:
 22908                           	opt stack 0
 22909                           tosu	equ	0xFFF
 22910                           tosh	equ	0xFFE
 22911                           tosl	equ	0xFFD
 22912                           pclatu	equ	0xFFB
 22913                           pclath	equ	0xFFA
 22914                           tblptru	equ	0xFF8
 22915                           tblptrh	equ	0xFF7
 22916                           tblptrl	equ	0xFF6
 22917                           tablat	equ	0xFF5
 22918                           prodh	equ	0xFF4
 22919                           prodl	equ	0xFF3
 22920                           intcon	equ	0xFF2
 22921                           postinc0	equ	0xFEE
 22922                           fsr0h	equ	0xFEA
 22923                           fsr0l	equ	0xFE9
 22924                           wreg	equ	0xFE8
 22925                           indf1	equ	0xFE7
 22926                           postdec1	equ	0xFE5
 22927                           fsr1h	equ	0xFE2
 22928                           fsr1l	equ	0xFE1
 22929                           bsr	equ	0xFE0
 22930                           indf2	equ	0xFDF
 22931                           postinc2	equ	0xFDE
 22932                           postdec2	equ	0xFDD
 22933                           fsr2h	equ	0xFDA
 22934                           fsr2l	equ	0xFD9
 22935                           status	equ	0xFD8
 22936                           
 22937 ;; *************** function i2___lldiv *****************
 22938 ;; Defined at:
 22939 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 22940 ;; Parameters:    Size  Location     Type
 22941 ;;  dividend        4    0[COMRAM] unsigned long 
 22942 ;;  divisor         4    4[COMRAM] unsigned long 
 22943 ;; Auto vars:     Size  Location     Type
 22944 ;;  __lldiv         4    8[COMRAM] unsigned long 
 22945 ;;  __lldiv         1   12[COMRAM] unsigned char 
 22946 ;; Return value:  Size  Location     Type
 22947 ;;                  4    0[COMRAM] unsigned long 
 22948 ;; Registers used:
 22949 ;;		wreg, status,2, status,0
 22950 ;; Tracked objects:
 22951 ;;		On entry : 0/0
 22952 ;;		On exit  : 0/0
 22953 ;;		Unchanged: 0/0
 22954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22955 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22956 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22958 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22959 ;;Total ram usage:       13 bytes
 22960 ;; Hardware stack levels used:    1
 22961 ;; This function calls:
 22962 ;;		Nothing
 22963 ;; This function is called by:
 22964 ;;		i2_printf
 22965 ;; This function uses a non-reentrant model
 22966 ;;
 22967                           
 22968                           	psect	text85
 22969  0155D2                     __ptext85:
 22970                           	opt stack 0
 22971  0155D2                     i2___lldiv:
 22972                           	opt stack 15
 22973                           
 22974                           ;incstack = 0
 22975  0155D2  0E00               	movlw	0
 22976  0155D4  6E09               	movwf	i2___lldiv@quotient,c
 22977  0155D6  0E00               	movlw	0
 22978  0155D8  6E0A               	movwf	i2___lldiv@quotient+1,c
 22979  0155DA  0E00               	movlw	0
 22980  0155DC  6E0B               	movwf	i2___lldiv@quotient+2,c
 22981  0155DE  0E00               	movlw	0
 22982  0155E0  6E0C               	movwf	i2___lldiv@quotient+3,c
 22983  0155E2  5005               	movf	i2___lldiv@divisor,w,c
 22984  0155E4  1006               	iorwf	i2___lldiv@divisor+1,w,c
 22985  0155E6  1007               	iorwf	i2___lldiv@divisor+2,w,c
 22986  0155E8  1008               	iorwf	i2___lldiv@divisor+3,w,c
 22987  0155EA  B4D8               	btfsc	status,2,c
 22988  0155EC  D02A               	goto	i2l1645
 22989  0155EE  0E01               	movlw	1
 22990  0155F0  6E0D               	movwf	i2___lldiv@counter,c
 22991  0155F2  D006               	goto	i2l1640
 22992  0155F4  90D8               	bcf	status,0,c
 22993  0155F6  3605               	rlcf	i2___lldiv@divisor,f,c
 22994  0155F8  3606               	rlcf	i2___lldiv@divisor+1,f,c
 22995  0155FA  3607               	rlcf	i2___lldiv@divisor+2,f,c
 22996  0155FC  3608               	rlcf	i2___lldiv@divisor+3,f,c
 22997  0155FE  2A0D               	incf	i2___lldiv@counter,f,c
 22998  015600                     i2l1640:
 22999  015600  AE08               	btfss	i2___lldiv@divisor+3,7,c
 23000  015602  D7F8               	goto	i2l1641
 23001  015604                     i2u1153_40:
 23002  015604  90D8               	bcf	status,0,c
 23003  015606  3609               	rlcf	i2___lldiv@quotient,f,c
 23004  015608  360A               	rlcf	i2___lldiv@quotient+1,f,c
 23005  01560A  360B               	rlcf	i2___lldiv@quotient+2,f,c
 23006  01560C  360C               	rlcf	i2___lldiv@quotient+3,f,c
 23007  01560E  5005               	movf	i2___lldiv@divisor,w,c
 23008  015610  5C01               	subwf	i2___lldiv@dividend,w,c
 23009  015612  5006               	movf	i2___lldiv@divisor+1,w,c
 23010  015614  5802               	subwfb	i2___lldiv@dividend+1,w,c
 23011  015616  5007               	movf	i2___lldiv@divisor+2,w,c
 23012  015618  5803               	subwfb	i2___lldiv@dividend+2,w,c
 23013  01561A  5008               	movf	i2___lldiv@divisor+3,w,c
 23014  01561C  5804               	subwfb	i2___lldiv@dividend+3,w,c
 23015  01561E  A0D8               	btfss	status,0,c
 23016  015620  D009               	goto	i2l1644
 23017  015622  5005               	movf	i2___lldiv@divisor,w,c
 23018  015624  5E01               	subwf	i2___lldiv@dividend,f,c
 23019  015626  5006               	movf	i2___lldiv@divisor+1,w,c
 23020  015628  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 23021  01562A  5007               	movf	i2___lldiv@divisor+2,w,c
 23022  01562C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 23023  01562E  5008               	movf	i2___lldiv@divisor+3,w,c
 23024  015630  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 23025  015632  8009               	bsf	i2___lldiv@quotient,0,c
 23026  015634                     i2l1644:
 23027  015634  90D8               	bcf	status,0,c
 23028  015636  3208               	rrcf	i2___lldiv@divisor+3,f,c
 23029  015638  3207               	rrcf	i2___lldiv@divisor+2,f,c
 23030  01563A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 23031  01563C  3205               	rrcf	i2___lldiv@divisor,f,c
 23032  01563E  2E0D               	decfsz	i2___lldiv@counter,f,c
 23033  015640  D7E1               	goto	i2u1153_40
 23034  015642                     i2l1645:
 23035  015642  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 23036  015646  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 23037  01564A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 23038  01564E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 23039  015652  0012               	return		;funcret
 23040  015654                     __end_ofi2___lldiv:
 23041                           	opt stack 0
 23042                           tosu	equ	0xFFF
 23043                           tosh	equ	0xFFE
 23044                           tosl	equ	0xFFD
 23045                           pclatu	equ	0xFFB
 23046                           pclath	equ	0xFFA
 23047                           tblptru	equ	0xFF8
 23048                           tblptrh	equ	0xFF7
 23049                           tblptrl	equ	0xFF6
 23050                           tablat	equ	0xFF5
 23051                           prodh	equ	0xFF4
 23052                           prodl	equ	0xFF3
 23053                           intcon	equ	0xFF2
 23054                           postinc0	equ	0xFEE
 23055                           fsr0h	equ	0xFEA
 23056                           fsr0l	equ	0xFE9
 23057                           wreg	equ	0xFE8
 23058                           indf1	equ	0xFE7
 23059                           postdec1	equ	0xFE5
 23060                           fsr1h	equ	0xFE2
 23061                           fsr1l	equ	0xFE1
 23062                           bsr	equ	0xFE0
 23063                           indf2	equ	0xFDF
 23064                           postinc2	equ	0xFDE
 23065                           postdec2	equ	0xFDD
 23066                           fsr2h	equ	0xFDA
 23067                           fsr2l	equ	0xFD9
 23068                           status	equ	0xFD8
 23069                           
 23070 ;; *************** function _ADCC_ISR *****************
 23071 ;; Defined at:
 23072 ;;		line 297 in file "mcc_generated_files/adcc.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;		None
 23075 ;; Auto vars:     Size  Location     Type
 23076 ;;		None
 23077 ;; Return value:  Size  Location     Type
 23078 ;;                  1    wreg      void 
 23079 ;; Registers used:
 23080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23081 ;; Tracked objects:
 23082 ;;		On entry : 0/0
 23083 ;;		On exit  : 0/0
 23084 ;;		Unchanged: 0/0
 23085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23090 ;;Total ram usage:        0 bytes
 23091 ;; Hardware stack levels used:    1
 23092 ;; Hardware stack levels required when called:    8
 23093 ;; This function calls:
 23094 ;;		Absolute function
 23095 ;;		_ADCC_DefaultInterruptHandler
 23096 ;;		_ADC_postProcessingCallback
 23097 ;; This function is called by:
 23098 ;;		_INTERRUPT_InterruptManagerHigh
 23099 ;; This function uses a non-reentrant model
 23100 ;;
 23101                           
 23102                           	psect	text86
 23103  0161C6                     __ptext86:
 23104                           	opt stack 0
 23105  0161C6                     _ADCC_ISR:
 23106                           	opt stack 9
 23107                           
 23108                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 23109                           
 23110                           ;incstack = 0
 23111  0161C6  010E               	movlb	14	; () banked
 23112  0161C8  9134               	bcf	52,0,b	;volatile
 23113                           
 23114                           ; BSR set to: 14
 23115                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 23116  0161CA  0100               	movlb	0	; () banked
 23117  0161CC  51DD               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 23118  0161CE  11DE               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 23119  0161D0  11DF               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 23120  0161D2  B4D8               	btfsc	status,2,c
 23121  0161D4  0012               	return	
 23122                           
 23123                           ; BSR set to: 0
 23124                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 23125  0161D6  D801               	call	i2u1609_48
 23126  0161D8  0012               	return	
 23127  0161DA                     i2u1609_48:
 23128  0161DA  0005               	push	
 23129  0161DC  6EFA               	movwf	pclath,c
 23130  0161DE  51DD               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 23131  0161E0  6EFD               	movwf	tosl,c
 23132  0161E2  51DE               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 23133  0161E4  6EFE               	movwf	tosh,c
 23134  0161E6  51DF               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 23135  0161E8  6EFF               	movwf	tosu,c
 23136  0161EA  50FA               	movf	pclath,w,c
 23137  0161EC  0012               	return		;indir
 23138  0161EE                     __end_of_ADCC_ISR:
 23139                           	opt stack 0
 23140                           tosu	equ	0xFFF
 23141                           tosh	equ	0xFFE
 23142                           tosl	equ	0xFFD
 23143                           pclatu	equ	0xFFB
 23144                           pclath	equ	0xFFA
 23145                           tblptru	equ	0xFF8
 23146                           tblptrh	equ	0xFF7
 23147                           tblptrl	equ	0xFF6
 23148                           tablat	equ	0xFF5
 23149                           prodh	equ	0xFF4
 23150                           prodl	equ	0xFF3
 23151                           intcon	equ	0xFF2
 23152                           postinc0	equ	0xFEE
 23153                           fsr0h	equ	0xFEA
 23154                           fsr0l	equ	0xFE9
 23155                           wreg	equ	0xFE8
 23156                           indf1	equ	0xFE7
 23157                           postdec1	equ	0xFE5
 23158                           fsr1h	equ	0xFE2
 23159                           fsr1l	equ	0xFE1
 23160                           bsr	equ	0xFE0
 23161                           indf2	equ	0xFDF
 23162                           postinc2	equ	0xFDE
 23163                           postdec2	equ	0xFDD
 23164                           fsr2h	equ	0xFDA
 23165                           fsr2l	equ	0xFD9
 23166                           status	equ	0xFD8
 23167                           
 23168 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 23169 ;; Defined at:
 23170 ;;		line 310 in file "mcc_generated_files/adcc.c"
 23171 ;; Parameters:    Size  Location     Type
 23172 ;;		None
 23173 ;; Auto vars:     Size  Location     Type
 23174 ;;		None
 23175 ;; Return value:  Size  Location     Type
 23176 ;;                  1    wreg      void 
 23177 ;; Registers used:
 23178 ;;		None
 23179 ;; Tracked objects:
 23180 ;;		On entry : 0/0
 23181 ;;		On exit  : 0/0
 23182 ;;		Unchanged: 0/0
 23183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23188 ;;Total ram usage:        0 bytes
 23189 ;; Hardware stack levels used:    1
 23190 ;; This function calls:
 23191 ;;		Nothing
 23192 ;; This function is called by:
 23193 ;;		_ADCC_Initialize
 23194 ;;		_ADCC_ISR
 23195 ;; This function uses a non-reentrant model
 23196 ;;
 23197                           
 23198                           	psect	text87
 23199  01643E                     __ptext87:
 23200                           	opt stack 0
 23201  01643E                     _ADCC_DefaultInterruptHandler:
 23202                           	opt stack 16
 23203                           
 23204                           ;incstack = 0
 23205  01643E  0012               	return		;funcret
 23206  016440                     __end_of_ADCC_DefaultInterruptHandler:
 23207                           	opt stack 0
 23208                           tosu	equ	0xFFF
 23209                           tosh	equ	0xFFE
 23210                           tosl	equ	0xFFD
 23211                           pclatu	equ	0xFFB
 23212                           pclath	equ	0xFFA
 23213                           tblptru	equ	0xFF8
 23214                           tblptrh	equ	0xFF7
 23215                           tblptrl	equ	0xFF6
 23216                           tablat	equ	0xFF5
 23217                           prodh	equ	0xFF4
 23218                           prodl	equ	0xFF3
 23219                           intcon	equ	0xFF2
 23220                           postinc0	equ	0xFEE
 23221                           fsr0h	equ	0xFEA
 23222                           fsr0l	equ	0xFE9
 23223                           wreg	equ	0xFE8
 23224                           indf1	equ	0xFE7
 23225                           postdec1	equ	0xFE5
 23226                           fsr1h	equ	0xFE2
 23227                           fsr1l	equ	0xFE1
 23228                           bsr	equ	0xFE0
 23229                           indf2	equ	0xFDF
 23230                           postinc2	equ	0xFDE
 23231                           postdec2	equ	0xFDD
 23232                           fsr2h	equ	0xFDA
 23233                           fsr2l	equ	0xFD9
 23234                           status	equ	0xFD8
 23235                           
 23236 ;; *************** function _ADC_postProcessingCallback *****************
 23237 ;; Defined at:
 23238 ;;		line 140 in file "main.c"
 23239 ;; Parameters:    Size  Location     Type
 23240 ;;		None
 23241 ;; Auto vars:     Size  Location     Type
 23242 ;;  currentADCCh    1   79[BANK0 ] enum E17343
 23243 ;; Return value:  Size  Location     Type
 23244 ;;                  1    wreg      void 
 23245 ;; Registers used:
 23246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23247 ;; Tracked objects:
 23248 ;;		On entry : 0/0
 23249 ;;		On exit  : 0/0
 23250 ;;		Unchanged: 0/0
 23251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23253 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23255 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23256 ;;Total ram usage:       13 bytes
 23257 ;; Hardware stack levels used:    1
 23258 ;; Hardware stack levels required when called:    7
 23259 ;; This function calls:
 23260 ;;		_ADCC_GetConversionResult
 23261 ;;		___lwtoft
 23262 ;;		_currentMeasuredToPeak
 23263 ;;		_peakToRMS
 23264 ;;		i2___ftadd
 23265 ;;		i2___ftdiv
 23266 ;;		i2___ftmul
 23267 ;;		i2___ftneg
 23268 ;; This function is called by:
 23269 ;;		_main
 23270 ;;		_ADCC_ISR
 23271 ;; This function uses a non-reentrant model
 23272 ;;
 23273                           
 23274                           	psect	text88
 23275  011D08                     __ptext88:
 23276                           	opt stack 0
 23277  011D08                     _ADC_postProcessingCallback:
 23278                           	opt stack 9
 23279                           
 23280                           ;main.c: 142: adcc_channel_t currentADCChannel = ADPCH;
 23281                           
 23282                           ;incstack = 0
 23283  011D08  CF5F F0AF          	movff	3935,ADC_postProcessingCallback@currentADCChannel	;volatile
 23284                           
 23285                           ;main.c: 144: switch (currentADCChannel) {
 23286  011D0C  D269               	goto	i2l815
 23287  011D0E                     
 23288                           ;main.c: 147: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 23289  011D0E  EC9E  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23290  011D12  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23291  011D16  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23292  011D1A  EC42  F0B1         	call	___lwtoft	;wreg free
 23293  011D1E  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23294  011D22  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23295  011D26  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23296  011D2A  0E68               	movlw	104
 23297  011D2C  6E2A               	movwf	i2___ftmul@f2,c
 23298  011D2E  0E53               	movlw	83
 23299  011D30  6E2B               	movwf	i2___ftmul@f2+1,c
 23300  011D32  0E3B               	movlw	59
 23301  011D34  6E2C               	movwf	i2___ftmul@f2+2,c
 23302  011D36  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23303  011D3A  C027  F0DA         	movff	?i2___ftmul,_AVSS_ADC_Result	;volatile
 23304  011D3E  C028  F0DB         	movff	?i2___ftmul+1,_AVSS_ADC_Result+1	;volatile
 23305  011D42  C029  F0DC         	movff	?i2___ftmul+2,_AVSS_ADC_Result+2	;volatile
 23306                           
 23307                           ;main.c: 148: break;
 23308  011D46  0012               	return	
 23309  011D48                     
 23310                           ;main.c: 152: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 23311  011D48  0E68               	movlw	104
 23312  011D4A  6E2A               	movwf	i2___ftmul@f2,c
 23313  011D4C  0E53               	movlw	83
 23314  011D4E  6E2B               	movwf	i2___ftmul@f2+1,c
 23315  011D50  0E3B               	movlw	59
 23316  011D52  6E2C               	movwf	i2___ftmul@f2+2,c
 23317  011D54  EC9E  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23318  011D58  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23319  011D5C  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23320  011D60  EC42  F0B1         	call	___lwtoft	;wreg free
 23321  011D64  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23322  011D68  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23323  011D6C  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23324  011D70  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23325  011D74  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 23326  011D78  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 23327  011D7C  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 23328  011D80  C0DA  F043         	movff	_AVSS_ADC_Result,i2___ftadd@f2	;volatile
 23329  011D84  C0DB  F044         	movff	_AVSS_ADC_Result+1,i2___ftadd@f2+1	;volatile
 23330  011D88  C0DC  F045         	movff	_AVSS_ADC_Result+2,i2___ftadd@f2+2	;volatile
 23331  011D8C  ECA5  F09E         	call	i2___ftadd	;wreg free
 23332  011D90  C040  F0EE         	movff	?i2___ftadd,_FVR_ADC_Result	;volatile
 23333  011D94  C041  F0EF         	movff	?i2___ftadd+1,_FVR_ADC_Result+1	;volatile
 23334  011D98  C042  F0F0         	movff	?i2___ftadd+2,_FVR_ADC_Result+2	;volatile
 23335                           
 23336                           ;main.c: 153: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 23337  011D9C  0E12               	movlw	18
 23338  011D9E  6E15               	movwf	i2___ftdiv@f1,c
 23339  011DA0  0E03               	movlw	3
 23340  011DA2  6E16               	movwf	i2___ftdiv@f1+1,c
 23341  011DA4  0E40               	movlw	64
 23342  011DA6  6E17               	movwf	i2___ftdiv@f1+2,c
 23343  011DA8  C0EE  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2	;volatile
 23344  011DAC  C0EF  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1	;volatile
 23345  011DB0  C0F0  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2	;volatile
 23346  011DB4  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 23347  011DB8  C015  F0D7         	movff	?i2___ftdiv,_ADC_Result_Scaling	;volatile
 23348  011DBC  C016  F0D8         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1	;volatile
 23349  011DC0  C017  F0D9         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2	;volatile
 23350                           
 23351                           ;main.c: 154: break;
 23352  011DC4  0012               	return	
 23353  011DC6                     
 23354                           ;main.c: 158: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 23355  011DC6  C0D7  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2	;volatile
 23356  011DCA  C0D8  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1	;volatile
 23357  011DCE  C0D9  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2	;volatile
 23358  011DD2  EC9E  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23359  011DD6  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23360  011DDA  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23361  011DDE  EC42  F0B1         	call	___lwtoft	;wreg free
 23362  011DE2  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23363  011DE6  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23364  011DEA  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23365  011DEE  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23366  011DF2  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3328
 23367  011DF6  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3328+1
 23368  011DFA  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3328+2
 23369                           
 23370                           ;main.c: 158: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 23371  011DFE  C0B0  F027         	movff	_ADC_postProcessingCallback$3328,i2___ftmul@f1
 23372  011E02  C0B1  F028         	movff	_ADC_postProcessingCallback$3328+1,i2___ftmul@f1+1
 23373  011E06  C0B2  F029         	movff	_ADC_postProcessingCallback$3328+2,i2___ftmul@f1+2
 23374  011E0A  0E68               	movlw	104
 23375  011E0C  6E2A               	movwf	i2___ftmul@f2,c
 23376  011E0E  0ED3               	movlw	211
 23377  011E10  6E2B               	movwf	i2___ftmul@f2+1,c
 23378  011E12  0E3B               	movlw	59
 23379  011E14  6E2C               	movwf	i2___ftmul@f2+2,c
 23380  011E16  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23381  011E1A  C027  F0D4         	movff	?i2___ftmul,_POS3P3_ADC_Result	;volatile
 23382  011E1E  C028  F0D5         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1	;volatile
 23383  011E22  C029  F0D6         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2	;volatile
 23384                           
 23385                           ;main.c: 159: break;
 23386  011E26  0012               	return	
 23387  011E28                     
 23388                           ;main.c: 162: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 23389  011E28  0EC0               	movlw	192
 23390  011E2A  6E18               	movwf	i2___ftdiv@f2,c
 23391  011E2C  0E7F               	movlw	127
 23392  011E2E  6E19               	movwf	i2___ftdiv@f2+1,c
 23393  011E30  0E44               	movlw	68
 23394  011E32  6E1A               	movwf	i2___ftdiv@f2+2,c
 23395  011E34  C0D4  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23396  011E38  C0D5  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23397  011E3C  C0D6  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23398  011E40  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 23399  011E44  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23400  011E48  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23401  011E4C  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23402  011E50  EC9E  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23403  011E54  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23404  011E58  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23405  011E5C  EC42  F0B1         	call	___lwtoft	;wreg free
 23406  011E60  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23407  011E64  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23408  011E68  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23409  011E6C  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23410  011E70  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3328
 23411  011E74  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3328+1
 23412  011E78  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3328+2
 23413                           
 23414                           ;main.c: 162: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 23415  011E7C  C0B0  F027         	movff	_ADC_postProcessingCallback$3328,i2___ftmul@f1
 23416  011E80  C0B1  F028         	movff	_ADC_postProcessingCallback$3328+1,i2___ftmul@f1+1
 23417  011E84  C0B2  F029         	movff	_ADC_postProcessingCallback$3328+2,i2___ftmul@f1+2
 23418  011E88  0E5E               	movlw	94
 23419  011E8A  6E2A               	movwf	i2___ftmul@f2,c
 23420  011E8C  0EF2               	movlw	242
 23421  011E8E  6E2B               	movwf	i2___ftmul@f2+1,c
 23422  011E90  0E3F               	movlw	63
 23423  011E92  6E2C               	movwf	i2___ftmul@f2+2,c
 23424  011E94  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23425  011E98  C027  F0CB         	movff	?i2___ftmul,_Imeas	;volatile
 23426  011E9C  C028  F0CC         	movff	?i2___ftmul+1,_Imeas+1	;volatile
 23427  011EA0  C029  F0CD         	movff	?i2___ftmul+2,_Imeas+2	;volatile
 23428                           
 23429                           ;main.c: 166: if (LATGbits.LATG0 != 1) {
 23430  011EA4  B07F               	btfsc	3967,0,c	;volatile
 23431  011EA6  D075               	goto	i2l821
 23432                           
 23433                           ;main.c: 171: if (load_enable) {
 23434  011EA8  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 23435  011EAA  D029               	goto	i2l822
 23436                           
 23437                           ;main.c: 174: if (dimming_period < 0x7FEE) {
 23438  011EAC  0EEE               	movlw	238
 23439  011EAE  0100               	movlb	0	; () banked
 23440  011EB0  5DE5               	subwf	_dimming_period& (0+255),w,b	;volatile
 23441  011EB2  0E7F               	movlw	127
 23442  011EB4  59E6               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 23443  011EB6  B0D8               	btfsc	status,0,c
 23444  011EB8  D007               	goto	i2l823
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;main.c: 176: Ipk = Imeas;
 23448  011EBA  C0CB  F0CE         	movff	_Imeas,_Ipk	;volatile
 23449  011EBE  C0CC  F0CF         	movff	_Imeas+1,_Ipk+1	;volatile
 23450  011EC2  C0CD  F0D0         	movff	_Imeas+2,_Ipk+2	;volatile
 23451                           
 23452                           ;main.c: 178: }
 23453  011EC6  D014               	goto	i2l824
 23454  011EC8                     i2l823:
 23455                           
 23456                           ; BSR set to: 0
 23457                           ;main.c: 181: else {
 23458                           ;main.c: 183: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 23459                           
 23460                           ; BSR set to: 0
 23461  011EC8  C0CB  F073         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 23462  011ECC  C0CC  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 23463  011ED0  C0CD  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 23464  011ED4  C0EB  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 23465  011ED8  C0EC  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 23466  011EDC  C0ED  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 23467  011EE0  EC7F  F0AD         	call	_currentMeasuredToPeak	;wreg free
 23468  011EE4  C073  F0CE         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 23469  011EE8  C074  F0CF         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 23470  011EEC  C075  F0D0         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 23471  011EF0                     i2l824:
 23472                           
 23473                           ;main.c: 185: }
 23474                           ;main.c: 187: Vpk = Vpk_const;
 23475  011EF0  C0F1  F0D1         	movff	_Vpk_const,_Vpk	;volatile
 23476  011EF4  C0F2  F0D2         	movff	_Vpk_const+1,_Vpk+1	;volatile
 23477  011EF8  C0F3  F0D3         	movff	_Vpk_const+2,_Vpk+2	;volatile
 23478                           
 23479                           ;main.c: 189: }
 23480  011EFC  D00D               	goto	i2l825
 23481  011EFE                     i2l822:
 23482                           
 23483                           ;main.c: 191: else {
 23484                           ;main.c: 193: Ipk = 0.0;
 23485  011EFE  0E00               	movlw	0
 23486  011F00  0100               	movlb	0	; () banked
 23487  011F02  6FCE               	movwf	_Ipk& (0+255),b	;volatile
 23488  011F04  0E00               	movlw	0
 23489  011F06  6FCF               	movwf	(_Ipk+1)& (0+255),b	;volatile
 23490  011F08  0E00               	movlw	0
 23491  011F0A  6FD0               	movwf	(_Ipk+2)& (0+255),b	;volatile
 23492                           
 23493                           ;main.c: 194: Vpk = 0.0;
 23494  011F0C  0E00               	movlw	0
 23495  011F0E  6FD1               	movwf	_Vpk& (0+255),b	;volatile
 23496  011F10  0E00               	movlw	0
 23497  011F12  6FD2               	movwf	(_Vpk+1)& (0+255),b	;volatile
 23498  011F14  0E00               	movlw	0
 23499  011F16  6FD3               	movwf	(_Vpk+2)& (0+255),b	;volatile
 23500  011F18                     i2l825:
 23501                           
 23502                           ;main.c: 196: }
 23503                           ;main.c: 198: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 23504                           
 23505                           ; BSR set to: 0
 23506  011F18  C0CE  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 23507  011F1C  C0CF  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 23508  011F20  C0D0  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 23509  011F24  C0EB  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 23510  011F28  C0EC  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 23511  011F2C  C0ED  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 23512  011F30  EC0A  F09C         	call	_peakToRMS	;wreg free
 23513  011F34  C094  F0C8         	movff	?_peakToRMS,_Irms	;volatile
 23514  011F38  C095  F0C9         	movff	?_peakToRMS+1,_Irms+1	;volatile
 23515  011F3C  C096  F0CA         	movff	?_peakToRMS+2,_Irms+2	;volatile
 23516                           
 23517                           ;main.c: 199: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 23518  011F40  C0D1  F094         	movff	_Vpk,peakToRMS@Peak	;volatile
 23519  011F44  C0D2  F095         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 23520  011F48  C0D3  F096         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 23521  011F4C  C0EB  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 23522  011F50  C0EC  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 23523  011F54  C0ED  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 23524  011F58  EC0A  F09C         	call	_peakToRMS	;wreg free
 23525  011F5C  C094  F0C5         	movff	?_peakToRMS,_Vrms	;volatile
 23526  011F60  C095  F0C6         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 23527  011F64  C096  F0C7         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 23528                           
 23529                           ;main.c: 200: Avg_Power = Vrms * Irms;
 23530  011F68  C0C5  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 23531  011F6C  C0C6  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 23532  011F70  C0C7  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 23533  011F74  C0C8  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 23534  011F78  C0C9  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 23535  011F7C  C0CA  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 23536  011F80  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23537  011F84  C027  F1BD         	movff	?i2___ftmul,_Avg_Power	;volatile
 23538  011F88  C028  F1BE         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 23539  011F8C  C029  F1BF         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 23540                           
 23541                           ;main.c: 202: }
 23542  011F90  0012               	return	
 23543  011F92                     i2l821:
 23544                           
 23545                           ;main.c: 205: else {
 23546                           ;main.c: 207: Ipk = Imeas;
 23547  011F92  C0CB  F0CE         	movff	_Imeas,_Ipk	;volatile
 23548  011F96  C0CC  F0CF         	movff	_Imeas+1,_Ipk+1	;volatile
 23549  011F9A  C0CD  F0D0         	movff	_Imeas+2,_Ipk+2	;volatile
 23550                           
 23551                           ;main.c: 208: Irms = peakToRMS(Ipk, 0.0);
 23552  011F9E  C0CE  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 23553  011FA2  C0CF  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 23554  011FA6  C0D0  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 23555  011FAA  0E00               	movlw	0
 23556  011FAC  0100               	movlb	0	; () banked
 23557  011FAE  6F97               	movwf	peakToRMS@Angle& (0+255),b
 23558  011FB0  0E00               	movlw	0
 23559  011FB2  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 23560  011FB4  0E00               	movlw	0
 23561  011FB6  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 23562  011FB8  EC0A  F09C         	call	_peakToRMS	;wreg free
 23563  011FBC  C094  F0C8         	movff	?_peakToRMS,_Irms	;volatile
 23564  011FC0  C095  F0C9         	movff	?_peakToRMS+1,_Irms+1	;volatile
 23565  011FC4  C096  F0CA         	movff	?_peakToRMS+2,_Irms+2	;volatile
 23566                           
 23567                           ;main.c: 209: Vrms = peakToRMS(Vpk_const, 0.0);
 23568  011FC8  C0F1  F094         	movff	_Vpk_const,peakToRMS@Peak
 23569  011FCC  C0F2  F095         	movff	_Vpk_const+1,peakToRMS@Peak+1
 23570  011FD0  C0F3  F096         	movff	_Vpk_const+2,peakToRMS@Peak+2
 23571  011FD4  0E00               	movlw	0
 23572  011FD6  0100               	movlb	0	; () banked
 23573  011FD8  6F97               	movwf	peakToRMS@Angle& (0+255),b
 23574  011FDA  0E00               	movlw	0
 23575  011FDC  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 23576  011FDE  0E00               	movlw	0
 23577  011FE0  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 23578  011FE2  EC0A  F09C         	call	_peakToRMS	;wreg free
 23579  011FE6  C094  F0C5         	movff	?_peakToRMS,_Vrms	;volatile
 23580  011FEA  C095  F0C6         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 23581  011FEE  C096  F0C7         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 23582                           
 23583                           ;main.c: 210: Avg_Power = Vrms * Irms;
 23584  011FF2  C0C5  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 23585  011FF6  C0C6  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 23586  011FFA  C0C7  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 23587  011FFE  C0C8  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 23588  012002  C0C9  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 23589  012006  C0CA  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 23590  01200A  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23591  01200E  C027  F1BD         	movff	?i2___ftmul,_Avg_Power	;volatile
 23592  012012  C028  F1BE         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 23593  012016  C029  F1BF         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 23594                           
 23595                           ;main.c: 212: }
 23596                           ;main.c: 213: break;
 23597  01201A  0012               	return	
 23598  01201C                     
 23599                           ;main.c: 217: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 23600  01201C  0EC0               	movlw	192
 23601  01201E  6E18               	movwf	i2___ftdiv@f2,c
 23602  012020  0E7F               	movlw	127
 23603  012022  6E19               	movwf	i2___ftdiv@f2+1,c
 23604  012024  0E44               	movlw	68
 23605  012026  6E1A               	movwf	i2___ftdiv@f2+2,c
 23606  012028  C0D4  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23607  01202C  C0D5  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23608  012030  C0D6  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23609  012034  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 23610  012038  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23611  01203C  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23612  012040  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23613  012044  EC9E  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23614  012048  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23615  01204C  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23616  012050  EC42  F0B1         	call	___lwtoft	;wreg free
 23617  012054  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23618  012058  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23619  01205C  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23620  012060  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23621  012064  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3328
 23622  012068  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3328+1
 23623  01206C  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3328+2
 23624                           
 23625                           ;main.c: 217: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 23626  012070  C0B0  F027         	movff	_ADC_postProcessingCallback$3328,i2___ftmul@f1
 23627  012074  C0B1  F028         	movff	_ADC_postProcessingCallback$3328+1,i2___ftmul@f1+1
 23628  012078  C0B2  F029         	movff	_ADC_postProcessingCallback$3328+2,i2___ftmul@f1+2
 23629  01207C  0EF8               	movlw	248
 23630  01207E  6E2A               	movwf	i2___ftmul@f2,c
 23631  012080  0E80               	movlw	128
 23632  012082  6E2B               	movwf	i2___ftmul@f2+1,c
 23633  012084  0E40               	movlw	64
 23634  012086  6E2C               	movwf	i2___ftmul@f2+2,c
 23635  012088  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23636  01208C  C027  F1C3         	movff	?i2___ftmul,_POS12_ADC_Result	;volatile
 23637  012090  C028  F1C4         	movff	?i2___ftmul+1,_POS12_ADC_Result+1	;volatile
 23638  012094  C029  F1C5         	movff	?i2___ftmul+2,_POS12_ADC_Result+2	;volatile
 23639                           
 23640                           ;main.c: 218: break;
 23641  012098  0012               	return	
 23642  01209A                     
 23643                           ;main.c: 222: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23644  01209A  0E00               	movlw	0
 23645  01209C  6E18               	movwf	i2___ftdiv@f2,c
 23646  01209E  0E00               	movlw	0
 23647  0120A0  6E19               	movwf	i2___ftdiv@f2+1,c
 23648  0120A2  0E40               	movlw	64
 23649  0120A4  6E1A               	movwf	i2___ftdiv@f2+2,c
 23650  0120A6  C0D4  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23651  0120AA  C0D5  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23652  0120AE  C0D6  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23653  0120B2  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 23654  0120B6  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23655  0120BA  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23656  0120BE  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23657  0120C2  0E00               	movlw	0
 23658  0120C4  6E43               	movwf	i2___ftadd@f2,c
 23659  0120C6  0E80               	movlw	128
 23660  0120C8  6E44               	movwf	i2___ftadd@f2+1,c
 23661  0120CA  0E3F               	movlw	63
 23662  0120CC  6E45               	movwf	i2___ftadd@f2+2,c
 23663  0120CE  0EC0               	movlw	192
 23664  0120D0  6E18               	movwf	i2___ftdiv@f2,c
 23665  0120D2  0E7F               	movlw	127
 23666  0120D4  6E19               	movwf	i2___ftdiv@f2+1,c
 23667  0120D6  0E44               	movlw	68
 23668  0120D8  6E1A               	movwf	i2___ftdiv@f2+2,c
 23669  0120DA  EC9E  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23670  0120DE  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23671  0120E2  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23672  0120E6  EC42  F0B1         	call	___lwtoft	;wreg free
 23673  0120EA  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 23674  0120EE  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 23675  0120F2  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 23676  0120F6  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 23677  0120FA  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 23678  0120FE  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 23679  012102  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 23680  012106  EC30  F0B1         	call	i2___ftneg	;wreg free
 23681  01210A  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23682  01210E  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23683  012112  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23684  012116  ECA5  F09E         	call	i2___ftadd	;wreg free
 23685  01211A  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 23686  01211E  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 23687  012122  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 23688  012126  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23689  01212A  C027  F0A6         	movff	?i2___ftmul,_ADC_postProcessingCallback$3329
 23690  01212E  C028  F0A7         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3329+1
 23691  012132  C029  F0A8         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3329+2
 23692                           
 23693                           ;main.c: 222: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23694  012136  0E04               	movlw	4
 23695  012138  6E18               	movwf	i2___ftdiv@f2,c
 23696  01213A  0EAD               	movlw	173
 23697  01213C  6E19               	movwf	i2___ftdiv@f2+1,c
 23698  01213E  0E3A               	movlw	58
 23699  012140  6E1A               	movwf	i2___ftdiv@f2+2,c
 23700  012142  0EB4               	movlw	180
 23701  012144  6E43               	movwf	i2___ftadd@f2,c
 23702  012146  0E28               	movlw	40
 23703  012148  6E44               	movwf	i2___ftadd@f2+1,c
 23704  01214A  0E3F               	movlw	63
 23705  01214C  6E45               	movwf	i2___ftadd@f2+2,c
 23706  01214E  C0A6  F024         	movff	_ADC_postProcessingCallback$3329,i2___ftneg@f1
 23707  012152  C0A7  F025         	movff	_ADC_postProcessingCallback$3329+1,i2___ftneg@f1+1
 23708  012156  C0A8  F026         	movff	_ADC_postProcessingCallback$3329+2,i2___ftneg@f1+2
 23709  01215A  EC30  F0B1         	call	i2___ftneg	;wreg free
 23710  01215E  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23711  012162  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23712  012166  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23713  01216A  ECA5  F09E         	call	i2___ftadd	;wreg free
 23714  01216E  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 23715  012172  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 23716  012176  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 23717  01217A  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 23718  01217E  C015  F0A9         	movff	?i2___ftdiv,_ADC_postProcessingCallback$3330
 23719  012182  C016  F0AA         	movff	?i2___ftdiv+1,_ADC_postProcessingCallback$3330+1
 23720  012186  C017  F0AB         	movff	?i2___ftdiv+2,_ADC_postProcessingCallback$3330+2
 23721                           
 23722                           ;main.c: 222: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23723  01218A  C0F4  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2	;volatile
 23724  01218E  C0F5  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1	;volatile
 23725  012192  C0F6  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2	;volatile
 23726  012196  C0A9  F040         	movff	_ADC_postProcessingCallback$3330,i2___ftadd@f1
 23727  01219A  C0AA  F041         	movff	_ADC_postProcessingCallback$3330+1,i2___ftadd@f1+1
 23728  01219E  C0AB  F042         	movff	_ADC_postProcessingCallback$3330+2,i2___ftadd@f1+2
 23729  0121A2  ECA5  F09E         	call	i2___ftadd	;wreg free
 23730  0121A6  C040  F0AC         	movff	?i2___ftadd,_ADC_postProcessingCallback$3331
 23731  0121AA  C041  F0AD         	movff	?i2___ftadd+1,_ADC_postProcessingCallback$3331+1
 23732  0121AE  C042  F0AE         	movff	?i2___ftadd+2,_ADC_postProcessingCallback$3331+2
 23733                           
 23734                           ;main.c: 222: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23735  0121B2  C0AC  F040         	movff	_ADC_postProcessingCallback$3331,i2___ftadd@f1
 23736  0121B6  C0AD  F041         	movff	_ADC_postProcessingCallback$3331+1,i2___ftadd@f1+1
 23737  0121BA  C0AE  F042         	movff	_ADC_postProcessingCallback$3331+2,i2___ftadd@f1+2
 23738  0121BE  0E00               	movlw	0
 23739  0121C0  6E43               	movwf	i2___ftadd@f2,c
 23740  0121C2  0E20               	movlw	32
 23741  0121C4  6E44               	movwf	i2___ftadd@f2+1,c
 23742  0121C6  0EC2               	movlw	194
 23743  0121C8  6E45               	movwf	i2___ftadd@f2+2,c
 23744  0121CA  ECA5  F09E         	call	i2___ftadd	;wreg free
 23745  0121CE  C040  F1C0         	movff	?i2___ftadd,_Temp_ADC_Result	;volatile
 23746  0121D2  C041  F1C1         	movff	?i2___ftadd+1,_Temp_ADC_Result+1	;volatile
 23747  0121D6  C042  F1C2         	movff	?i2___ftadd+2,_Temp_ADC_Result+2	;volatile
 23748                           
 23749                           ;main.c: 223: break;
 23750  0121DA  0012               	return	
 23751  0121DC                     i2l829:
 23752                           
 23753                           ; BSR set to: 0
 23754                           ;main.c: 227: LATFbits.LATF3 = 1;
 23755  0121DC  867E               	bsf	3966,3,c	;volatile
 23756                           
 23757                           ; BSR set to: 0
 23758                           ;main.c: 230: }
 23759                           
 23760                           ;main.c: 228: break;
 23761  0121DE  0012               	return	
 23762  0121E0                     i2l815:
 23763                           
 23764                           ; BSR set to: 0
 23765  0121E0  0100               	movlb	0	; () banked
 23766  0121E2  51AF               	movf	ADC_postProcessingCallback@currentADCChannel& (0+255),w,b
 23767                           
 23768                           ; Switch size 1, requested type "space"
 23769                           ; Number of cases is 6, Range of values is 0 to 63
 23770                           ; switch strategies available:
 23771                           ; Name         Instructions Cycles
 23772                           ; simple_byte           19    10 (average)
 23773                           ;	Chosen strategy is simple_byte
 23774  0121E4  0A00               	xorlw	0	; case 0
 23775  0121E6  B4D8               	btfsc	status,2,c
 23776  0121E8  D61F               	goto	i2l820
 23777  0121EA  0A04               	xorlw	4	; case 4
 23778  0121EC  B4D8               	btfsc	status,2,c
 23779  0121EE  D716               	goto	i2l827
 23780  0121F0  0A26               	xorlw	38	; case 34
 23781  0121F2  B4D8               	btfsc	status,2,c
 23782  0121F4  D5E8               	goto	i2l819
 23783  0121F6  0A1E               	xorlw	30	; case 60
 23784  0121F8  B4D8               	btfsc	status,2,c
 23785  0121FA  D589               	goto	i2l816
 23786  0121FC  0A01               	xorlw	1	; case 61
 23787  0121FE  B4D8               	btfsc	status,2,c
 23788  012200  D74C               	goto	i2l828
 23789  012202  0A02               	xorlw	2	; case 63
 23790  012204  B4D8               	btfsc	status,2,c
 23791  012206  D5A0               	goto	i2l818
 23792  012208  D7E9               	goto	i2l829
 23793  01220A                     __end_of_ADC_postProcessingCallback:
 23794                           	opt stack 0
 23795                           tosu	equ	0xFFF
 23796                           tosh	equ	0xFFE
 23797                           tosl	equ	0xFFD
 23798                           pclatu	equ	0xFFB
 23799                           pclath	equ	0xFFA
 23800                           tblptru	equ	0xFF8
 23801                           tblptrh	equ	0xFF7
 23802                           tblptrl	equ	0xFF6
 23803                           tablat	equ	0xFF5
 23804                           prodh	equ	0xFF4
 23805                           prodl	equ	0xFF3
 23806                           intcon	equ	0xFF2
 23807                           postinc0	equ	0xFEE
 23808                           fsr0h	equ	0xFEA
 23809                           fsr0l	equ	0xFE9
 23810                           wreg	equ	0xFE8
 23811                           indf1	equ	0xFE7
 23812                           postdec1	equ	0xFE5
 23813                           fsr1h	equ	0xFE2
 23814                           fsr1l	equ	0xFE1
 23815                           bsr	equ	0xFE0
 23816                           indf2	equ	0xFDF
 23817                           postinc2	equ	0xFDE
 23818                           postdec2	equ	0xFDD
 23819                           fsr2h	equ	0xFDA
 23820                           fsr2l	equ	0xFD9
 23821                           status	equ	0xFD8
 23822                           
 23823 ;; *************** function _peakToRMS *****************
 23824 ;; Defined at:
 23825 ;;		line 90 in file "main.c"
 23826 ;; Parameters:    Size  Location     Type
 23827 ;;  Peak            3   52[BANK0 ] void 
 23828 ;;  Angle           3   55[BANK0 ] void 
 23829 ;; Auto vars:     Size  Location     Type
 23830 ;;  RMS             3   67[BANK0 ] void 
 23831 ;; Return value:  Size  Location     Type
 23832 ;;                  3   52[BANK0 ] void 
 23833 ;; Registers used:
 23834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23835 ;; Tracked objects:
 23836 ;;		On entry : 0/0
 23837 ;;		On exit  : 0/0
 23838 ;;		Unchanged: 0/0
 23839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23840 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23841 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23843 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23844 ;;Total ram usage:       18 bytes
 23845 ;; Hardware stack levels used:    1
 23846 ;; Hardware stack levels required when called:    6
 23847 ;; This function calls:
 23848 ;;		_acos
 23849 ;;		_sin
 23850 ;;		_sqrt
 23851 ;;		i2___ftadd
 23852 ;;		i2___ftdiv
 23853 ;;		i2___ftmul
 23854 ;;		i2___ftneg
 23855 ;; This function is called by:
 23856 ;;		_ADC_postProcessingCallback
 23857 ;; This function uses a non-reentrant model
 23858 ;;
 23859                           
 23860                           	psect	text89
 23861  013814                     __ptext89:
 23862                           	opt stack 0
 23863  013814                     _peakToRMS:
 23864                           	opt stack 9
 23865                           
 23866                           ;main.c: 93: double RMS = 0.0;
 23867                           
 23868                           ;incstack = 0
 23869  013814  0E00               	movlw	0
 23870  013816  0100               	movlb	0	; () banked
 23871  013818  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 23872  01381A  0E00               	movlw	0
 23873  01381C  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 23874  01381E  0E00               	movlw	0
 23875  013820  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 23876                           
 23877                           ; BSR set to: 0
 23878                           ;main.c: 96: RMS = 2.0 * acos(-1.0);
 23879  013822  0E00               	movlw	0
 23880  013824  6F8E               	movwf	acos@x& (0+255),b
 23881  013826  0E80               	movlw	128
 23882  013828  6F8F               	movwf	(acos@x+1)& (0+255),b
 23883  01382A  0EBF               	movlw	191
 23884  01382C  6F90               	movwf	(acos@x+2)& (0+255),b
 23885  01382E  EC66  F0AE         	call	_acos	;wreg free
 23886  013832  C08E  F0A0         	movff	?_acos,_peakToRMS$3325
 23887  013836  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3325+1
 23888  01383A  C090  F0A2         	movff	?_acos+2,_peakToRMS$3325+2
 23889                           
 23890                           ;main.c: 96: RMS = 2.0 * acos(-1.0);
 23891  01383E  C0A0  F027         	movff	_peakToRMS$3325,i2___ftmul@f1
 23892  013842  C0A1  F028         	movff	_peakToRMS$3325+1,i2___ftmul@f1+1
 23893  013846  C0A2  F029         	movff	_peakToRMS$3325+2,i2___ftmul@f1+2
 23894  01384A  0E00               	movlw	0
 23895  01384C  6E2A               	movwf	i2___ftmul@f2,c
 23896  01384E  0E00               	movlw	0
 23897  013850  6E2B               	movwf	i2___ftmul@f2+1,c
 23898  013852  0E40               	movlw	64
 23899  013854  6E2C               	movwf	i2___ftmul@f2+2,c
 23900  013856  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23901  01385A  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 23902  01385E  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 23903  013862  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 23904                           
 23905                           ;main.c: 97: RMS = RMS - (2.0 * Angle);
 23906  013866  0E00               	movlw	0
 23907  013868  6E2A               	movwf	i2___ftmul@f2,c
 23908  01386A  0E00               	movlw	0
 23909  01386C  6E2B               	movwf	i2___ftmul@f2+1,c
 23910  01386E  0E40               	movlw	64
 23911  013870  6E2C               	movwf	i2___ftmul@f2+2,c
 23912  013872  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 23913  013876  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 23914  01387A  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 23915  01387E  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23916  013882  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 23917  013886  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 23918  01388A  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 23919  01388E  EC30  F0B1         	call	i2___ftneg	;wreg free
 23920  013892  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23921  013896  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23922  01389A  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23923  01389E  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 23924  0138A2  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 23925  0138A6  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 23926  0138AA  ECA5  F09E         	call	i2___ftadd	;wreg free
 23927  0138AE  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 23928  0138B2  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 23929  0138B6  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 23930                           
 23931                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 23932  0138BA  0E00               	movlw	0
 23933  0138BC  6E2A               	movwf	i2___ftmul@f2,c
 23934  0138BE  0E00               	movlw	0
 23935  0138C0  6E2B               	movwf	i2___ftmul@f2+1,c
 23936  0138C2  0E40               	movlw	64
 23937  0138C4  6E2C               	movwf	i2___ftmul@f2+2,c
 23938  0138C6  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 23939  0138CA  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 23940  0138CE  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 23941  0138D2  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23942  0138D6  C027  F09A         	movff	?i2___ftmul,_peakToRMS$3326
 23943  0138DA  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$3326+1
 23944  0138DE  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$3326+2
 23945                           
 23946                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 23947  0138E2  C09A  F066         	movff	_peakToRMS$3326,sin@f
 23948  0138E6  C09B  F067         	movff	_peakToRMS$3326+1,sin@f+1
 23949  0138EA  C09C  F068         	movff	_peakToRMS$3326+2,sin@f+2
 23950  0138EE  ECDB  F09A         	call	_sin	;wreg free
 23951  0138F2  C066  F09D         	movff	?_sin,_peakToRMS$3327
 23952  0138F6  C067  F09E         	movff	?_sin+1,_peakToRMS$3327+1
 23953  0138FA  C068  F09F         	movff	?_sin+2,_peakToRMS$3327+2
 23954                           
 23955                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 23956  0138FE  C09D  F040         	movff	_peakToRMS$3327,i2___ftadd@f1
 23957  013902  C09E  F041         	movff	_peakToRMS$3327+1,i2___ftadd@f1+1
 23958  013906  C09F  F042         	movff	_peakToRMS$3327+2,i2___ftadd@f1+2
 23959  01390A  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 23960  01390E  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 23961  013912  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 23962  013916  ECA5  F09E         	call	i2___ftadd	;wreg free
 23963  01391A  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 23964  01391E  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 23965  013922  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 23966                           
 23967                           ;main.c: 99: RMS = RMS / (4.0 * acos(-1.0));
 23968  013926  0E00               	movlw	0
 23969  013928  0100               	movlb	0	; () banked
 23970  01392A  6F8E               	movwf	acos@x& (0+255),b
 23971  01392C  0E80               	movlw	128
 23972  01392E  6F8F               	movwf	(acos@x+1)& (0+255),b
 23973  013930  0EBF               	movlw	191
 23974  013932  6F90               	movwf	(acos@x+2)& (0+255),b
 23975  013934  EC66  F0AE         	call	_acos	;wreg free
 23976  013938  C08E  F0A0         	movff	?_acos,_peakToRMS$3325
 23977  01393C  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3325+1
 23978  013940  C090  F0A2         	movff	?_acos+2,_peakToRMS$3325+2
 23979                           
 23980                           ;main.c: 99: RMS = RMS / (4.0 * acos(-1.0));
 23981  013944  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 23982  013948  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 23983  01394C  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 23984  013950  0E00               	movlw	0
 23985  013952  6E2A               	movwf	i2___ftmul@f2,c
 23986  013954  0E80               	movlw	128
 23987  013956  6E2B               	movwf	i2___ftmul@f2+1,c
 23988  013958  0E40               	movlw	64
 23989  01395A  6E2C               	movwf	i2___ftmul@f2+2,c
 23990  01395C  C0A0  F027         	movff	_peakToRMS$3325,i2___ftmul@f1
 23991  013960  C0A1  F028         	movff	_peakToRMS$3325+1,i2___ftmul@f1+1
 23992  013964  C0A2  F029         	movff	_peakToRMS$3325+2,i2___ftmul@f1+2
 23993  013968  EC9F  F0A4         	call	i2___ftmul	;wreg free
 23994  01396C  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 23995  013970  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 23996  013974  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 23997  013978  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 23998  01397C  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 23999  013980  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 24000  013984  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 24001                           
 24002                           ;main.c: 100: RMS = sqrt(RMS);
 24003  013988  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 24004  01398C  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 24005  013990  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 24006  013994  EC7B  F09F         	call	_sqrt	;wreg free
 24007  013998  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 24008  01399C  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 24009  0139A0  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 24010                           
 24011                           ;main.c: 101: RMS = Peak * RMS;
 24012  0139A4  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 24013  0139A8  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 24014  0139AC  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 24015  0139B0  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 24016  0139B4  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 24017  0139B8  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 24018  0139BC  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24019  0139C0  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 24020  0139C4  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 24021  0139C8  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 24022                           
 24023                           ;main.c: 102: return RMS;
 24024  0139CC  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 24025  0139D0  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 24026  0139D4  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 24027  0139D8  0012               	return	
 24028  0139DA                     __end_of_peakToRMS:
 24029                           	opt stack 0
 24030                           tosu	equ	0xFFF
 24031                           tosh	equ	0xFFE
 24032                           tosl	equ	0xFFD
 24033                           pclatu	equ	0xFFB
 24034                           pclath	equ	0xFFA
 24035                           tblptru	equ	0xFF8
 24036                           tblptrh	equ	0xFF7
 24037                           tblptrl	equ	0xFF6
 24038                           tablat	equ	0xFF5
 24039                           prodh	equ	0xFF4
 24040                           prodl	equ	0xFF3
 24041                           intcon	equ	0xFF2
 24042                           postinc0	equ	0xFEE
 24043                           fsr0h	equ	0xFEA
 24044                           fsr0l	equ	0xFE9
 24045                           wreg	equ	0xFE8
 24046                           indf1	equ	0xFE7
 24047                           postdec1	equ	0xFE5
 24048                           fsr1h	equ	0xFE2
 24049                           fsr1l	equ	0xFE1
 24050                           bsr	equ	0xFE0
 24051                           indf2	equ	0xFDF
 24052                           postinc2	equ	0xFDE
 24053                           postdec2	equ	0xFDD
 24054                           fsr2h	equ	0xFDA
 24055                           fsr2l	equ	0xFD9
 24056                           status	equ	0xFD8
 24057                           
 24058 ;; *************** function _acos *****************
 24059 ;; Defined at:
 24060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 24061 ;; Parameters:    Size  Location     Type
 24062 ;;  x               3   46[BANK0 ] void 
 24063 ;; Auto vars:     Size  Location     Type
 24064 ;;		None
 24065 ;; Return value:  Size  Location     Type
 24066 ;;                  3   46[BANK0 ] void 
 24067 ;; Registers used:
 24068 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24069 ;; Tracked objects:
 24070 ;;		On entry : 0/0
 24071 ;;		On exit  : 0/0
 24072 ;;		Unchanged: 0/0
 24073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24074 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24075 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24077 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24078 ;;Total ram usage:        6 bytes
 24079 ;; Hardware stack levels used:    1
 24080 ;; Hardware stack levels required when called:    5
 24081 ;; This function calls:
 24082 ;;		_asin
 24083 ;;		i2___ftadd
 24084 ;;		i2___ftneg
 24085 ;; This function is called by:
 24086 ;;		_peakToRMS
 24087 ;; This function uses a non-reentrant model
 24088 ;;
 24089                           
 24090                           	psect	text90
 24091  015CCC                     __ptext90:
 24092                           	opt stack 0
 24093  015CCC                     _acos:
 24094                           	opt stack 9
 24095                           
 24096                           ;incstack = 0
 24097  015CCC  C08E  F079         	movff	acos@x,asin@x
 24098  015CD0  C08F  F07A         	movff	acos@x+1,asin@x+1
 24099  015CD4  C090  F07B         	movff	acos@x+2,asin@x+2
 24100  015CD8  ECA6  F099         	call	_asin	;wreg free
 24101  015CDC  C079  F091         	movff	?_asin,_acos$3332
 24102  015CE0  C07A  F092         	movff	?_asin+1,_acos$3332+1
 24103  015CE4  C07B  F093         	movff	?_asin+2,_acos$3332+2
 24104  015CE8  C091  F024         	movff	_acos$3332,i2___ftneg@f1
 24105  015CEC  C092  F025         	movff	_acos$3332+1,i2___ftneg@f1+1
 24106  015CF0  C093  F026         	movff	_acos$3332+2,i2___ftneg@f1+2
 24107  015CF4  EC30  F0B1         	call	i2___ftneg	;wreg free
 24108  015CF8  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24109  015CFC  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24110  015D00  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24111  015D04  0E10               	movlw	16
 24112  015D06  6E43               	movwf	i2___ftadd@f2,c
 24113  015D08  0EC9               	movlw	201
 24114  015D0A  6E44               	movwf	i2___ftadd@f2+1,c
 24115  015D0C  0E3F               	movlw	63
 24116  015D0E  6E45               	movwf	i2___ftadd@f2+2,c
 24117  015D10  ECA5  F09E         	call	i2___ftadd	;wreg free
 24118  015D14  C040  F08E         	movff	?i2___ftadd,?_acos
 24119  015D18  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 24120  015D1C  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 24121  015D20  0012               	return	
 24122  015D22                     __end_of_acos:
 24123                           	opt stack 0
 24124                           tosu	equ	0xFFF
 24125                           tosh	equ	0xFFE
 24126                           tosl	equ	0xFFD
 24127                           pclatu	equ	0xFFB
 24128                           pclath	equ	0xFFA
 24129                           tblptru	equ	0xFF8
 24130                           tblptrh	equ	0xFF7
 24131                           tblptrl	equ	0xFF6
 24132                           tablat	equ	0xFF5
 24133                           prodh	equ	0xFF4
 24134                           prodl	equ	0xFF3
 24135                           intcon	equ	0xFF2
 24136                           postinc0	equ	0xFEE
 24137                           fsr0h	equ	0xFEA
 24138                           fsr0l	equ	0xFE9
 24139                           wreg	equ	0xFE8
 24140                           indf1	equ	0xFE7
 24141                           postdec1	equ	0xFE5
 24142                           fsr1h	equ	0xFE2
 24143                           fsr1l	equ	0xFE1
 24144                           bsr	equ	0xFE0
 24145                           indf2	equ	0xFDF
 24146                           postinc2	equ	0xFDE
 24147                           postdec2	equ	0xFDD
 24148                           fsr2h	equ	0xFDA
 24149                           fsr2l	equ	0xFD9
 24150                           status	equ	0xFD8
 24151                           
 24152 ;; *************** function _asin *****************
 24153 ;; Defined at:
 24154 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;  x               3   25[BANK0 ] void 
 24157 ;; Auto vars:     Size  Location     Type
 24158 ;;  y               3   40[BANK0 ] void 
 24159 ;;  sgn             3   28[BANK0 ] void 
 24160 ;; Return value:  Size  Location     Type
 24161 ;;                  3   25[BANK0 ] void 
 24162 ;; Registers used:
 24163 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24164 ;; Tracked objects:
 24165 ;;		On entry : 0/0
 24166 ;;		On exit  : 0/0
 24167 ;;		Unchanged: 0/0
 24168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24169 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24170 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24172 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24173 ;;Total ram usage:       21 bytes
 24174 ;; Hardware stack levels used:    1
 24175 ;; Hardware stack levels required when called:    4
 24176 ;; This function calls:
 24177 ;;		_atan
 24178 ;;		_fabs
 24179 ;;		_sqrt
 24180 ;;		i2___ftadd
 24181 ;;		i2___ftdiv
 24182 ;;		i2___ftge
 24183 ;;		i2___ftmul
 24184 ;;		i2___ftneg
 24185 ;; This function is called by:
 24186 ;;		_acos
 24187 ;; This function uses a non-reentrant model
 24188 ;;
 24189                           
 24190                           	psect	text91
 24191  01334C                     __ptext91:
 24192                           	opt stack 0
 24193  01334C                     _asin:
 24194                           	opt stack 9
 24195                           
 24196                           ;incstack = 0
 24197  01334C  0E00               	movlw	0
 24198  01334E  6E2A               	movwf	i2___ftge@ff1,c
 24199  013350  0E80               	movlw	128
 24200  013352  6E2B               	movwf	i2___ftge@ff1+1,c
 24201  013354  0E3F               	movlw	63
 24202  013356  6E2C               	movwf	i2___ftge@ff1+2,c
 24203  013358  C079  F027         	movff	asin@x,fabs@d
 24204  01335C  C07A  F028         	movff	asin@x+1,fabs@d+1
 24205  013360  C07B  F029         	movff	asin@x+2,fabs@d+2
 24206  013364  EC77  F0B0         	call	_fabs	;wreg free
 24207  013368  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 24208  01336C  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 24209  013370  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 24210  013374  EC94  F0A9         	call	i2___ftge	;wreg free
 24211  013378  B0D8               	btfsc	status,0,c
 24212  01337A  D00C               	goto	i2l1330
 24213  01337C  0E00               	movlw	0
 24214  01337E  0100               	movlb	0	; () banked
 24215  013380  6FE4               	movwf	(_errno+1)& (0+255),b
 24216  013382  0E21               	movlw	33
 24217  013384  6FE3               	movwf	_errno& (0+255),b
 24218  013386  0E00               	movlw	0
 24219  013388  6F79               	movwf	?_asin& (0+255),b
 24220  01338A  0E00               	movlw	0
 24221  01338C  6F7A               	movwf	(?_asin+1)& (0+255),b
 24222  01338E  0E00               	movlw	0
 24223  013390  6F7B               	movwf	(?_asin+2)& (0+255),b
 24224                           
 24225                           ; BSR set to: 0
 24226  013392  0012               	return	
 24227  013394                     i2l1330:
 24228                           
 24229                           ; BSR set to: 0
 24230  013394  0E00               	movlw	0
 24231  013396  0100               	movlb	0	; () banked
 24232  013398  6F7C               	movwf	asin@sgn& (0+255),b
 24233  01339A  0E80               	movlw	128
 24234  01339C  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 24235  01339E  0E3F               	movlw	63
 24236  0133A0  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 24237                           
 24238                           ; BSR set to: 0
 24239  0133A2  C079  F02A         	movff	asin@x,i2___ftmul@f2
 24240  0133A6  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 24241  0133AA  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 24242  0133AE  C079  F027         	movff	asin@x,i2___ftmul@f1
 24243  0133B2  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 24244  0133B6  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 24245  0133BA  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24246  0133BE  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 24247  0133C2  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 24248  0133C6  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 24249  0133CA  EC30  F0B1         	call	i2___ftneg	;wreg free
 24250  0133CE  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24251  0133D2  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24252  0133D6  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24253  0133DA  0E00               	movlw	0
 24254  0133DC  6E43               	movwf	i2___ftadd@f2,c
 24255  0133DE  0E80               	movlw	128
 24256  0133E0  6E44               	movwf	i2___ftadd@f2+1,c
 24257  0133E2  0E3F               	movlw	63
 24258  0133E4  6E45               	movwf	i2___ftadd@f2+2,c
 24259  0133E6  ECA5  F09E         	call	i2___ftadd	;wreg free
 24260  0133EA  C040  F07F         	movff	?i2___ftadd,_asin$3333
 24261  0133EE  C041  F080         	movff	?i2___ftadd+1,_asin$3333+1
 24262  0133F2  C042  F081         	movff	?i2___ftadd+2,_asin$3333+2
 24263  0133F6  C07F  F066         	movff	_asin$3333,sqrt@a
 24264  0133FA  C080  F067         	movff	_asin$3333+1,sqrt@a+1
 24265  0133FE  C081  F068         	movff	_asin$3333+2,sqrt@a+2
 24266  013402  EC7B  F09F         	call	_sqrt	;wreg free
 24267  013406  C066  F088         	movff	?_sqrt,asin@y
 24268  01340A  C067  F089         	movff	?_sqrt+1,asin@y+1
 24269  01340E  C068  F08A         	movff	?_sqrt+2,asin@y+2
 24270  013412  C079  F027         	movff	asin@x,fabs@d
 24271  013416  C07A  F028         	movff	asin@x+1,fabs@d+1
 24272  01341A  C07B  F029         	movff	asin@x+2,fabs@d+2
 24273  01341E  EC77  F0B0         	call	_fabs	;wreg free
 24274  013422  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 24275  013426  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 24276  01342A  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 24277  01342E  0EC3               	movlw	195
 24278  013430  6E2D               	movwf	i2___ftge@ff2,c
 24279  013432  0E35               	movlw	53
 24280  013434  6E2E               	movwf	i2___ftge@ff2+1,c
 24281  013436  0E3F               	movlw	63
 24282  013438  6E2F               	movwf	i2___ftge@ff2+2,c
 24283  01343A  EC94  F0A9         	call	i2___ftge	;wreg free
 24284  01343E  B0D8               	btfsc	status,0,c
 24285  013440  D023               	goto	i2l1332
 24286  013442  C079  F015         	movff	asin@x,i2___ftdiv@f1
 24287  013446  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 24288  01344A  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 24289  01344E  C088  F018         	movff	asin@y,i2___ftdiv@f2
 24290  013452  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 24291  013456  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 24292  01345A  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 24293  01345E  C015  F08B         	movff	?i2___ftdiv,_asin$3334
 24294  013462  C016  F08C         	movff	?i2___ftdiv+1,_asin$3334+1
 24295  013466  C017  F08D         	movff	?i2___ftdiv+2,_asin$3334+2
 24296  01346A  C08B  F058         	movff	_asin$3334,atan@f
 24297  01346E  C08C  F059         	movff	_asin$3334+1,atan@f+1
 24298  013472  C08D  F05A         	movff	_asin$3334+2,atan@f+2
 24299  013476  ECED  F09C         	call	_atan	;wreg free
 24300  01347A  C058  F079         	movff	?_atan,?_asin
 24301  01347E  C059  F07A         	movff	?_atan+1,?_asin+1
 24302  013482  C05A  F07B         	movff	?_atan+2,?_asin+2
 24303  013486  0012               	return	
 24304  013488                     i2l1332:
 24305  013488  0100               	movlb	0	; () banked
 24306  01348A  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 24307  01348C  D055               	goto	i2l1333
 24308                           
 24309                           ; BSR set to: 0
 24310  01348E  C079  F018         	movff	asin@x,i2___ftdiv@f2
 24311  013492  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 24312  013496  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 24313  01349A  C088  F024         	movff	asin@y,i2___ftneg@f1
 24314  01349E  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 24315  0134A2  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 24316  0134A6  EC30  F0B1         	call	i2___ftneg	;wreg free
 24317  0134AA  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 24318  0134AE  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 24319  0134B2  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 24320  0134B6  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 24321  0134BA  C015  F08B         	movff	?i2___ftdiv,_asin$3334
 24322  0134BE  C016  F08C         	movff	?i2___ftdiv+1,_asin$3334+1
 24323  0134C2  C017  F08D         	movff	?i2___ftdiv+2,_asin$3334+2
 24324  0134C6  C08B  F058         	movff	_asin$3334,atan@f
 24325  0134CA  C08C  F059         	movff	_asin$3334+1,atan@f+1
 24326  0134CE  C08D  F05A         	movff	_asin$3334+2,atan@f+2
 24327  0134D2  ECED  F09C         	call	_atan	;wreg free
 24328  0134D6  C058  F085         	movff	?_atan,_asin$3335
 24329  0134DA  C059  F086         	movff	?_atan+1,_asin$3335+1
 24330  0134DE  C05A  F087         	movff	?_atan+2,_asin$3335+2
 24331  0134E2  0E10               	movlw	16
 24332  0134E4  6E43               	movwf	i2___ftadd@f2,c
 24333  0134E6  0EC9               	movlw	201
 24334  0134E8  6E44               	movwf	i2___ftadd@f2+1,c
 24335  0134EA  0E3F               	movlw	63
 24336  0134EC  6E45               	movwf	i2___ftadd@f2+2,c
 24337  0134EE  C085  F024         	movff	_asin$3335,i2___ftneg@f1
 24338  0134F2  C086  F025         	movff	_asin$3335+1,i2___ftneg@f1+1
 24339  0134F6  C087  F026         	movff	_asin$3335+2,i2___ftneg@f1+2
 24340  0134FA  EC30  F0B1         	call	i2___ftneg	;wreg free
 24341  0134FE  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24342  013502  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24343  013506  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24344  01350A  ECA5  F09E         	call	i2___ftadd	;wreg free
 24345  01350E  C040  F082         	movff	?i2___ftadd,_asin$3336
 24346  013512  C041  F083         	movff	?i2___ftadd+1,_asin$3336+1
 24347  013516  C042  F084         	movff	?i2___ftadd+2,_asin$3336+2
 24348  01351A  C082  F024         	movff	_asin$3336,i2___ftneg@f1
 24349  01351E  C083  F025         	movff	_asin$3336+1,i2___ftneg@f1+1
 24350  013522  C084  F026         	movff	_asin$3336+2,i2___ftneg@f1+2
 24351  013526  EC30  F0B1         	call	i2___ftneg	;wreg free
 24352  01352A  C024  F079         	movff	?i2___ftneg,?_asin
 24353  01352E  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 24354  013532  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 24355  013536  0012               	return	
 24356  013538                     i2l1333:
 24357  013538  C079  F018         	movff	asin@x,i2___ftdiv@f2
 24358  01353C  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 24359  013540  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 24360  013544  C088  F015         	movff	asin@y,i2___ftdiv@f1
 24361  013548  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 24362  01354C  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 24363  013550  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 24364  013554  C015  F08B         	movff	?i2___ftdiv,_asin$3334
 24365  013558  C016  F08C         	movff	?i2___ftdiv+1,_asin$3334+1
 24366  01355C  C017  F08D         	movff	?i2___ftdiv+2,_asin$3334+2
 24367  013560  C08B  F058         	movff	_asin$3334,atan@f
 24368  013564  C08C  F059         	movff	_asin$3334+1,atan@f+1
 24369  013568  C08D  F05A         	movff	_asin$3334+2,atan@f+2
 24370  01356C  ECED  F09C         	call	_atan	;wreg free
 24371  013570  C058  F085         	movff	?_atan,_asin$3335
 24372  013574  C059  F086         	movff	?_atan+1,_asin$3335+1
 24373  013578  C05A  F087         	movff	?_atan+2,_asin$3335+2
 24374  01357C  C085  F024         	movff	_asin$3335,i2___ftneg@f1
 24375  013580  C086  F025         	movff	_asin$3335+1,i2___ftneg@f1+1
 24376  013584  C087  F026         	movff	_asin$3335+2,i2___ftneg@f1+2
 24377  013588  EC30  F0B1         	call	i2___ftneg	;wreg free
 24378  01358C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24379  013590  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24380  013594  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24381  013598  0E10               	movlw	16
 24382  01359A  6E43               	movwf	i2___ftadd@f2,c
 24383  01359C  0EC9               	movlw	201
 24384  01359E  6E44               	movwf	i2___ftadd@f2+1,c
 24385  0135A0  0E3F               	movlw	63
 24386  0135A2  6E45               	movwf	i2___ftadd@f2+2,c
 24387  0135A4  ECA5  F09E         	call	i2___ftadd	;wreg free
 24388  0135A8  C040  F079         	movff	?i2___ftadd,?_asin
 24389  0135AC  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 24390  0135B0  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 24391  0135B4  0012               	return	
 24392  0135B6                     __end_of_asin:
 24393                           	opt stack 0
 24394                           tosu	equ	0xFFF
 24395                           tosh	equ	0xFFE
 24396                           tosl	equ	0xFFD
 24397                           pclatu	equ	0xFFB
 24398                           pclath	equ	0xFFA
 24399                           tblptru	equ	0xFF8
 24400                           tblptrh	equ	0xFF7
 24401                           tblptrl	equ	0xFF6
 24402                           tablat	equ	0xFF5
 24403                           prodh	equ	0xFF4
 24404                           prodl	equ	0xFF3
 24405                           intcon	equ	0xFF2
 24406                           postinc0	equ	0xFEE
 24407                           fsr0h	equ	0xFEA
 24408                           fsr0l	equ	0xFE9
 24409                           wreg	equ	0xFE8
 24410                           indf1	equ	0xFE7
 24411                           postdec1	equ	0xFE5
 24412                           fsr1h	equ	0xFE2
 24413                           fsr1l	equ	0xFE1
 24414                           bsr	equ	0xFE0
 24415                           indf2	equ	0xFDF
 24416                           postinc2	equ	0xFDE
 24417                           postdec2	equ	0xFDD
 24418                           fsr2h	equ	0xFDA
 24419                           fsr2l	equ	0xFD9
 24420                           status	equ	0xFD8
 24421                           
 24422 ;; *************** function _sqrt *****************
 24423 ;; Defined at:
 24424 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 24425 ;; Parameters:    Size  Location     Type
 24426 ;;  a               3    6[BANK0 ] void 
 24427 ;; Auto vars:     Size  Location     Type
 24428 ;;  x               3   22[BANK0 ] void 
 24429 ;;  q               3   19[BANK0 ] void 
 24430 ;;  z               3   16[BANK0 ] void 
 24431 ;;  og              3   12[BANK0 ] void 
 24432 ;;  i               1   15[BANK0 ] unsigned char 
 24433 ;; Return value:  Size  Location     Type
 24434 ;;                  3    6[BANK0 ] unsigned char 
 24435 ;; Registers used:
 24436 ;;		wreg, status,2, status,0, cstack
 24437 ;; Tracked objects:
 24438 ;;		On entry : 0/0
 24439 ;;		On exit  : 0/0
 24440 ;;		Unchanged: 0/0
 24441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24442 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24443 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24444 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24445 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24446 ;;Total ram usage:       19 bytes
 24447 ;; Hardware stack levels used:    1
 24448 ;; Hardware stack levels required when called:    3
 24449 ;; This function calls:
 24450 ;;		i2___ftge
 24451 ;;		i2___ftmul
 24452 ;;		i2___ftsub
 24453 ;; This function is called by:
 24454 ;;		_peakToRMS
 24455 ;;		_asin
 24456 ;; This function uses a non-reentrant model
 24457 ;;
 24458                           
 24459                           	psect	text92
 24460  013EF6                     __ptext92:
 24461                           	opt stack 0
 24462  013EF6                     _sqrt:
 24463                           	opt stack 11
 24464                           
 24465                           ;incstack = 0
 24466  013EF6  0E00               	movlw	0
 24467  013EF8  6E2A               	movwf	i2___ftge@ff1,c
 24468  013EFA  0E00               	movlw	0
 24469  013EFC  6E2B               	movwf	i2___ftge@ff1+1,c
 24470  013EFE  0E00               	movlw	0
 24471  013F00  6E2C               	movwf	i2___ftge@ff1+2,c
 24472  013F02  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 24473  013F06  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 24474  013F0A  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 24475  013F0E  EC94  F0A9         	call	i2___ftge	;wreg free
 24476  013F12  A0D8               	btfss	status,0,c
 24477  013F14  D00E               	goto	i2l1858
 24478  013F16  0100               	movlb	0	; () banked
 24479  013F18  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 24480  013F1A  D004               	goto	i2l1859
 24481                           
 24482                           ; BSR set to: 0
 24483  013F1C  0E00               	movlw	0
 24484  013F1E  6FE4               	movwf	(_errno+1)& (0+255),b
 24485  013F20  0E21               	movlw	33
 24486  013F22  6FE3               	movwf	_errno& (0+255),b
 24487  013F24                     i2l1859:
 24488                           
 24489                           ; BSR set to: 0
 24490  013F24  0E00               	movlw	0
 24491  013F26  6F66               	movwf	?_sqrt& (0+255),b
 24492  013F28  0E00               	movlw	0
 24493  013F2A  6F67               	movwf	(?_sqrt+1)& (0+255),b
 24494  013F2C  0E00               	movlw	0
 24495  013F2E  6F68               	movwf	(?_sqrt+2)& (0+255),b
 24496                           
 24497                           ; BSR set to: 0
 24498  013F30  0012               	return	
 24499  013F32                     i2l1858:
 24500  013F32  C066  F070         	movff	sqrt@a,sqrt@z
 24501  013F36  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 24502  013F3A  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 24503  013F3E  C066  F069         	movff	sqrt@a,??_sqrt
 24504  013F42  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 24505  013F46  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 24506  013F4A  0100               	movlb	0	; () banked
 24507  013F4C  1F69               	comf	??_sqrt& (0+255),f,b
 24508  013F4E  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 24509  013F50  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 24510  013F52  2B69               	incf	??_sqrt& (0+255),f,b
 24511  013F54  0E00               	movlw	0
 24512  013F56  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 24513  013F58  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 24514  013F5A  0EC8               	movlw	200
 24515  013F5C  2569               	addwf	??_sqrt& (0+255),w,b
 24516  013F5E  6F76               	movwf	sqrt@x& (0+255),b
 24517  013F60  0E6E               	movlw	110
 24518  013F62  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 24519  013F64  6F77               	movwf	(sqrt@x+1)& (0+255),b
 24520  013F66  0EBE               	movlw	190
 24521  013F68  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 24522  013F6A  6F78               	movwf	(sqrt@x+2)& (0+255),b
 24523                           
 24524                           ; BSR set to: 0
 24525  013F6C  90D8               	bcf	status,0,c
 24526  013F6E  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 24527  013F70  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 24528  013F72  3376               	rrcf	sqrt@x& (0+255),f,b
 24529                           
 24530                           ; BSR set to: 0
 24531  013F74  0E00               	movlw	0
 24532  013F76  5F70               	subwf	sqrt@z& (0+255),f,b
 24533  013F78  0E80               	movlw	128
 24534  013F7A  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 24535  013F7C  0E00               	movlw	0
 24536  013F7E  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 24537                           
 24538                           ; BSR set to: 0
 24539  013F80  0E04               	movlw	4
 24540  013F82  6F6F               	movwf	sqrt@i& (0+255),b
 24541  013F84                     
 24542                           ; BSR set to: 0
 24543                           
 24544                           ; BSR set to: 0
 24545  013F84  C076  F06C         	movff	sqrt@x,sqrt@og
 24546  013F88  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 24547  013F8C  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 24548                           
 24549                           ; BSR set to: 0
 24550  013F90  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24551  013F94  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24552  013F98  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24553  013F9C  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 24554  013FA0  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 24555  013FA4  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 24556  013FA8  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24557  013FAC  C027  F073         	movff	?i2___ftmul,sqrt@q
 24558  013FB0  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24559  013FB4  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24560  013FB8  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 24561  013FBC  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 24562  013FC0  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 24563  013FC4  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 24564  013FC8  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 24565  013FCC  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 24566  013FD0  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24567  013FD4  C027  F073         	movff	?i2___ftmul,sqrt@q
 24568  013FD8  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24569  013FDC  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24570  013FE0  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 24571  013FE4  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 24572  013FE8  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 24573  013FEC  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 24574  013FF0  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 24575  013FF4  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 24576  013FF8  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24577  013FFC  C027  F073         	movff	?i2___ftmul,sqrt@q
 24578  014000  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24579  014004  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24580  014008  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24581  01400C  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24582  014010  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24583  014014  0E00               	movlw	0
 24584  014016  6E2A               	movwf	i2___ftmul@f2,c
 24585  014018  0EC0               	movlw	192
 24586  01401A  6E2B               	movwf	i2___ftmul@f2+1,c
 24587  01401C  0E3F               	movlw	63
 24588  01401E  6E2C               	movwf	i2___ftmul@f2+2,c
 24589  014020  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24590  014024  C027  F076         	movff	?i2___ftmul,sqrt@x
 24591  014028  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 24592  01402C  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 24593  014030  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 24594  014034  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 24595  014038  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 24596  01403C  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 24597  014040  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 24598  014044  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 24599  014048  ECB5  F0AF         	call	i2___ftsub	;wreg free
 24600  01404C  C060  F076         	movff	?i2___ftsub,sqrt@x
 24601  014050  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 24602  014054  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 24603  014058  0100               	movlb	0	; () banked
 24604  01405A  2F6F               	decfsz	sqrt@i& (0+255),f,b
 24605  01405C  D793               	goto	i2l1861
 24606                           
 24607                           ; BSR set to: 0
 24608                           
 24609                           ; BSR set to: 0
 24610  01405E  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24611  014062  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24612  014066  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24613  01406A  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 24614  01406E  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 24615  014072  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 24616  014076  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24617  01407A  C027  F066         	movff	?i2___ftmul,?_sqrt
 24618  01407E  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 24619  014082  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 24620  014086  0012               	return	
 24621  014088                     __end_of_sqrt:
 24622                           	opt stack 0
 24623                           tosu	equ	0xFFF
 24624                           tosh	equ	0xFFE
 24625                           tosl	equ	0xFFD
 24626                           pclatu	equ	0xFFB
 24627                           pclath	equ	0xFFA
 24628                           tblptru	equ	0xFF8
 24629                           tblptrh	equ	0xFF7
 24630                           tblptrl	equ	0xFF6
 24631                           tablat	equ	0xFF5
 24632                           prodh	equ	0xFF4
 24633                           prodl	equ	0xFF3
 24634                           intcon	equ	0xFF2
 24635                           postinc0	equ	0xFEE
 24636                           fsr0h	equ	0xFEA
 24637                           fsr0l	equ	0xFE9
 24638                           wreg	equ	0xFE8
 24639                           indf1	equ	0xFE7
 24640                           postdec1	equ	0xFE5
 24641                           fsr1h	equ	0xFE2
 24642                           fsr1l	equ	0xFE1
 24643                           bsr	equ	0xFE0
 24644                           indf2	equ	0xFDF
 24645                           postinc2	equ	0xFDE
 24646                           postdec2	equ	0xFDD
 24647                           fsr2h	equ	0xFDA
 24648                           fsr2l	equ	0xFD9
 24649                           status	equ	0xFD8
 24650                           
 24651 ;; *************** function _atan *****************
 24652 ;; Defined at:
 24653 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 24654 ;; Parameters:    Size  Location     Type
 24655 ;;  f               3   87[COMRAM] unsigned char 
 24656 ;; Auto vars:     Size  Location     Type
 24657 ;;  val             3   10[BANK0 ] unsigned char 
 24658 ;;  val_squared     3    7[BANK0 ] unsigned char 
 24659 ;;  x               3    3[BANK0 ] unsigned char 
 24660 ;;  y               3    0[BANK0 ] unsigned char 
 24661 ;;  recip           1    6[BANK0 ] unsigned char 
 24662 ;; Return value:  Size  Location     Type
 24663 ;;                  3   87[COMRAM] unsigned char 
 24664 ;; Registers used:
 24665 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24666 ;; Tracked objects:
 24667 ;;		On entry : 0/0
 24668 ;;		On exit  : 0/0
 24669 ;;		Unchanged: 0/0
 24670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24671 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24672 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24674 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24675 ;;Total ram usage:       16 bytes
 24676 ;; Hardware stack levels used:    1
 24677 ;; Hardware stack levels required when called:    3
 24678 ;; This function calls:
 24679 ;;		_eval_poly
 24680 ;;		_fabs
 24681 ;;		i2___ftadd
 24682 ;;		i2___ftdiv
 24683 ;;		i2___ftge
 24684 ;;		i2___ftmul
 24685 ;;		i2___ftneg
 24686 ;; This function is called by:
 24687 ;;		_asin
 24688 ;; This function uses a non-reentrant model
 24689 ;;
 24690                           
 24691                           	psect	text93
 24692  0139DA                     __ptext93:
 24693                           	opt stack 0
 24694  0139DA                     _atan:
 24695                           	opt stack 9
 24696                           
 24697                           ;incstack = 0
 24698  0139DA  C058  F027         	movff	atan@f,fabs@d
 24699  0139DE  C059  F028         	movff	atan@f+1,fabs@d+1
 24700  0139E2  C05A  F029         	movff	atan@f+2,fabs@d+2
 24701  0139E6  EC77  F0B0         	call	_fabs	;wreg free
 24702  0139EA  C027  F06A         	movff	?_fabs,atan@val
 24703  0139EE  C028  F06B         	movff	?_fabs+1,atan@val+1
 24704  0139F2  C029  F06C         	movff	?_fabs+2,atan@val+2
 24705  0139F6  0100               	movlb	0	; () banked
 24706  0139F8  516A               	movf	atan@val& (0+255),w,b
 24707  0139FA  116B               	iorwf	(atan@val+1)& (0+255),w,b
 24708  0139FC  116C               	iorwf	(atan@val+2)& (0+255),w,b
 24709  0139FE  A4D8               	btfss	status,2,c
 24710  013A00  D007               	goto	i2l1349
 24711                           
 24712                           ; BSR set to: 0
 24713  013A02  0E00               	movlw	0
 24714  013A04  6E58               	movwf	?_atan,c
 24715  013A06  0E00               	movlw	0
 24716  013A08  6E59               	movwf	?_atan+1,c
 24717  013A0A  0E00               	movlw	0
 24718  013A0C  6E5A               	movwf	?_atan+2,c
 24719                           
 24720                           ; BSR set to: 0
 24721  013A0E  0012               	return	
 24722  013A10                     i2l1349:
 24723                           
 24724                           ; BSR set to: 0
 24725                           
 24726                           ; BSR set to: 0
 24727  013A10  0E00               	movlw	0
 24728  013A12  6E2A               	movwf	i2___ftge@ff1,c
 24729  013A14  0E80               	movlw	128
 24730  013A16  6E2B               	movwf	i2___ftge@ff1+1,c
 24731  013A18  0E3F               	movlw	63
 24732  013A1A  6E2C               	movwf	i2___ftge@ff1+2,c
 24733  013A1C  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 24734  013A20  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 24735  013A24  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 24736  013A28  EC94  F0A9         	call	i2___ftge	;wreg free
 24737  013A2C  B0D8               	btfsc	status,0,c
 24738  013A2E  D002               	goto	i2u1517_40
 24739  013A30  0E01               	movlw	1
 24740  013A32  D001               	goto	i2u1518_40
 24741  013A34                     i2u1517_40:
 24742  013A34  0E00               	movlw	0
 24743  013A36                     i2u1518_40:
 24744  013A36  0100               	movlb	0	; () banked
 24745  013A38  6F66               	movwf	atan@recip& (0+255),b
 24746  013A3A  5166               	movf	atan@recip& (0+255),w,b
 24747  013A3C  B4D8               	btfsc	status,2,c
 24748  013A3E  D014               	goto	i2l1351
 24749                           
 24750                           ; BSR set to: 0
 24751  013A40  0E00               	movlw	0
 24752  013A42  6E15               	movwf	i2___ftdiv@f1,c
 24753  013A44  0E80               	movlw	128
 24754  013A46  6E16               	movwf	i2___ftdiv@f1+1,c
 24755  013A48  0E3F               	movlw	63
 24756  013A4A  6E17               	movwf	i2___ftdiv@f1+2,c
 24757  013A4C  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 24758  013A50  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 24759  013A54  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 24760  013A58  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 24761  013A5C  C015  F06A         	movff	?i2___ftdiv,atan@val
 24762  013A60  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 24763  013A64  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 24764  013A68                     i2l1351:
 24765  013A68  C06A  F027         	movff	atan@val,i2___ftmul@f1
 24766  013A6C  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 24767  013A70  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 24768  013A74  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 24769  013A78  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 24770  013A7C  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 24771  013A80  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24772  013A84  C027  F067         	movff	?i2___ftmul,atan@val_squared
 24773  013A88  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 24774  013A8C  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 24775  013A90  C067  F04C         	movff	atan@val_squared,eval_poly@x
 24776  013A94  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 24777  013A98  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 24778  013A9C  0EE0               	movlw	low atan@coeff_b
 24779  013A9E  6E4F               	movwf	eval_poly@d,c
 24780  013AA0  0EF2               	movlw	high atan@coeff_b
 24781  013AA2  6E50               	movwf	eval_poly@d+1,c
 24782  013AA4  0E00               	movlw	0
 24783  013AA6  6E52               	movwf	eval_poly@n+1,c
 24784  013AA8  0E04               	movlw	4
 24785  013AAA  6E51               	movwf	eval_poly@n,c
 24786  013AAC  EC6F  F0A6         	call	_eval_poly	;wreg free
 24787  013AB0  C04C  F060         	movff	?_eval_poly,atan@y
 24788  013AB4  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 24789  013AB8  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 24790  013ABC  C067  F04C         	movff	atan@val_squared,eval_poly@x
 24791  013AC0  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 24792  013AC4  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 24793  013AC8  0EBF               	movlw	low atan@coeff_a
 24794  013ACA  6E4F               	movwf	eval_poly@d,c
 24795  013ACC  0EF2               	movlw	high atan@coeff_a
 24796  013ACE  6E50               	movwf	eval_poly@d+1,c
 24797  013AD0  0E00               	movlw	0
 24798  013AD2  6E52               	movwf	eval_poly@n+1,c
 24799  013AD4  0E05               	movlw	5
 24800  013AD6  6E51               	movwf	eval_poly@n,c
 24801  013AD8  EC6F  F0A6         	call	_eval_poly	;wreg free
 24802  013ADC  C04C  F063         	movff	?_eval_poly,atan@x
 24803  013AE0  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 24804  013AE4  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 24805  013AE8  C06A  F027         	movff	atan@val,i2___ftmul@f1
 24806  013AEC  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 24807  013AF0  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 24808  013AF4  C060  F018         	movff	atan@y,i2___ftdiv@f2
 24809  013AF8  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 24810  013AFC  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 24811  013B00  C063  F015         	movff	atan@x,i2___ftdiv@f1
 24812  013B04  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 24813  013B08  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 24814  013B0C  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 24815  013B10  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 24816  013B14  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 24817  013B18  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 24818  013B1C  EC9F  F0A4         	call	i2___ftmul	;wreg free
 24819  013B20  C027  F06A         	movff	?i2___ftmul,atan@val
 24820  013B24  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 24821  013B28  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 24822  013B2C  0100               	movlb	0	; () banked
 24823  013B2E  5166               	movf	atan@recip& (0+255),w,b
 24824  013B30  B4D8               	btfsc	status,2,c
 24825  013B32  D01C               	goto	i2l1352
 24826                           
 24827                           ; BSR set to: 0
 24828  013B34  C06A  F024         	movff	atan@val,i2___ftneg@f1
 24829  013B38  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 24830  013B3C  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 24831  013B40  EC30  F0B1         	call	i2___ftneg	;wreg free
 24832  013B44  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24833  013B48  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24834  013B4C  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24835  013B50  0E10               	movlw	16
 24836  013B52  6E43               	movwf	i2___ftadd@f2,c
 24837  013B54  0EC9               	movlw	201
 24838  013B56  6E44               	movwf	i2___ftadd@f2+1,c
 24839  013B58  0E3F               	movlw	63
 24840  013B5A  6E45               	movwf	i2___ftadd@f2+2,c
 24841  013B5C  ECA5  F09E         	call	i2___ftadd	;wreg free
 24842  013B60  C040  F06A         	movff	?i2___ftadd,atan@val
 24843  013B64  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 24844  013B68  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 24845  013B6C                     i2l1352:
 24846  013B6C  BE5A               	btfsc	atan@f+2,7,c
 24847  013B6E  D007               	goto	i2l1354
 24848  013B70  C06A  F058         	movff	atan@val,?_atan
 24849  013B74  C06B  F059         	movff	atan@val+1,?_atan+1
 24850  013B78  C06C  F05A         	movff	atan@val+2,?_atan+2
 24851  013B7C  0012               	return	
 24852  013B7E                     i2l1354:
 24853  013B7E  C06A  F024         	movff	atan@val,i2___ftneg@f1
 24854  013B82  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 24855  013B86  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 24856  013B8A  EC30  F0B1         	call	i2___ftneg	;wreg free
 24857  013B8E  C024  F058         	movff	?i2___ftneg,?_atan
 24858  013B92  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 24859  013B96  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 24860  013B9A  0012               	return	
 24861  013B9C                     __end_of_atan:
 24862                           	opt stack 0
 24863                           tosu	equ	0xFFF
 24864                           tosh	equ	0xFFE
 24865                           tosl	equ	0xFFD
 24866                           pclatu	equ	0xFFB
 24867                           pclath	equ	0xFFA
 24868                           tblptru	equ	0xFF8
 24869                           tblptrh	equ	0xFF7
 24870                           tblptrl	equ	0xFF6
 24871                           tablat	equ	0xFF5
 24872                           prodh	equ	0xFF4
 24873                           prodl	equ	0xFF3
 24874                           intcon	equ	0xFF2
 24875                           postinc0	equ	0xFEE
 24876                           fsr0h	equ	0xFEA
 24877                           fsr0l	equ	0xFE9
 24878                           wreg	equ	0xFE8
 24879                           indf1	equ	0xFE7
 24880                           postdec1	equ	0xFE5
 24881                           fsr1h	equ	0xFE2
 24882                           fsr1l	equ	0xFE1
 24883                           bsr	equ	0xFE0
 24884                           indf2	equ	0xFDF
 24885                           postinc2	equ	0xFDE
 24886                           postdec2	equ	0xFDD
 24887                           fsr2h	equ	0xFDA
 24888                           fsr2l	equ	0xFD9
 24889                           status	equ	0xFD8
 24890                           
 24891 ;; *************** function _fabs *****************
 24892 ;; Defined at:
 24893 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 24894 ;; Parameters:    Size  Location     Type
 24895 ;;  d               3   38[COMRAM] unsigned char 
 24896 ;; Auto vars:     Size  Location     Type
 24897 ;;		None
 24898 ;; Return value:  Size  Location     Type
 24899 ;;                  3   38[COMRAM] unsigned char 
 24900 ;; Registers used:
 24901 ;;		wreg, status,2, status,0, cstack
 24902 ;; Tracked objects:
 24903 ;;		On entry : 0/0
 24904 ;;		On exit  : 0/0
 24905 ;;		Unchanged: 0/0
 24906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24907 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24910 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24911 ;;Total ram usage:        3 bytes
 24912 ;; Hardware stack levels used:    1
 24913 ;; Hardware stack levels required when called:    1
 24914 ;; This function calls:
 24915 ;;		i2___ftneg
 24916 ;; This function is called by:
 24917 ;;		_asin
 24918 ;;		_atan
 24919 ;; This function uses a non-reentrant model
 24920 ;;
 24921                           
 24922                           	psect	text94
 24923  0160EE                     __ptext94:
 24924                           	opt stack 0
 24925  0160EE                     _fabs:
 24926                           	opt stack 11
 24927                           
 24928                           ;incstack = 0
 24929  0160EE  AE29               	btfss	fabs@d+2,7,c
 24930  0160F0  D00F               	goto	i2l1446
 24931  0160F2  C027  F024         	movff	fabs@d,i2___ftneg@f1
 24932  0160F6  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 24933  0160FA  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 24934  0160FE  EC30  F0B1         	call	i2___ftneg	;wreg free
 24935  016102  C024  F027         	movff	?i2___ftneg,?_fabs
 24936  016106  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 24937  01610A  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 24938  01610E  0012               	return	
 24939  016110                     i2l1446:
 24940  016110  C027  F027         	movff	fabs@d,?_fabs
 24941  016114  C028  F028         	movff	fabs@d+1,?_fabs+1
 24942  016118  C029  F029         	movff	fabs@d+2,?_fabs+2
 24943  01611C  0012               	return		;funcret
 24944  01611E                     __end_of_fabs:
 24945                           	opt stack 0
 24946                           tosu	equ	0xFFF
 24947                           tosh	equ	0xFFE
 24948                           tosl	equ	0xFFD
 24949                           pclatu	equ	0xFFB
 24950                           pclath	equ	0xFFA
 24951                           tblptru	equ	0xFF8
 24952                           tblptrh	equ	0xFF7
 24953                           tblptrl	equ	0xFF6
 24954                           tablat	equ	0xFF5
 24955                           prodh	equ	0xFF4
 24956                           prodl	equ	0xFF3
 24957                           intcon	equ	0xFF2
 24958                           postinc0	equ	0xFEE
 24959                           fsr0h	equ	0xFEA
 24960                           fsr0l	equ	0xFE9
 24961                           wreg	equ	0xFE8
 24962                           indf1	equ	0xFE7
 24963                           postdec1	equ	0xFE5
 24964                           fsr1h	equ	0xFE2
 24965                           fsr1l	equ	0xFE1
 24966                           bsr	equ	0xFE0
 24967                           indf2	equ	0xFDF
 24968                           postinc2	equ	0xFDE
 24969                           postdec2	equ	0xFDD
 24970                           fsr2h	equ	0xFDA
 24971                           fsr2l	equ	0xFD9
 24972                           status	equ	0xFD8
 24973                           
 24974 ;; *************** function _currentMeasuredToPeak *****************
 24975 ;; Defined at:
 24976 ;;		line 107 in file "main.c"
 24977 ;; Parameters:    Size  Location     Type
 24978 ;;  Measured        3   19[BANK0 ] unsigned char 
 24979 ;;  Angle           3   22[BANK0 ] unsigned char 
 24980 ;; Auto vars:     Size  Location     Type
 24981 ;;  Peak            3   25[BANK0 ] unsigned char 
 24982 ;; Return value:  Size  Location     Type
 24983 ;;                  3   19[BANK0 ] unsigned char 
 24984 ;; Registers used:
 24985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24986 ;; Tracked objects:
 24987 ;;		On entry : 0/0
 24988 ;;		On exit  : 0/0
 24989 ;;		Unchanged: 0/0
 24990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24991 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24992 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24994 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24995 ;;Total ram usage:        9 bytes
 24996 ;; Hardware stack levels used:    1
 24997 ;; Hardware stack levels required when called:    4
 24998 ;; This function calls:
 24999 ;;		_sin
 25000 ;;		i2___ftdiv
 25001 ;; This function is called by:
 25002 ;;		_ADC_postProcessingCallback
 25003 ;; This function uses a non-reentrant model
 25004 ;;
 25005                           
 25006                           	psect	text95
 25007  015AFE                     __ptext95:
 25008                           	opt stack 0
 25009  015AFE                     _currentMeasuredToPeak:
 25010                           	opt stack 11
 25011                           
 25012                           ;main.c: 110: double Peak = 0.0;
 25013                           
 25014                           ;incstack = 0
 25015  015AFE  0E00               	movlw	0
 25016  015B00  0100               	movlb	0	; () banked
 25017  015B02  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 25018  015B04  0E00               	movlw	0
 25019  015B06  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 25020  015B08  0E00               	movlw	0
 25021  015B0A  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 25022                           
 25023                           ; BSR set to: 0
 25024                           ;main.c: 113: Peak = sin(Angle);
 25025  015B0C  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 25026  015B10  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 25027  015B14  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 25028  015B18  ECDB  F09A         	call	_sin	;wreg free
 25029  015B1C  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 25030  015B20  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 25031  015B24  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 25032                           
 25033                           ;main.c: 114: Peak = Measured / Peak;
 25034  015B28  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 25035  015B2C  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 25036  015B30  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 25037  015B34  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 25038  015B38  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 25039  015B3C  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 25040  015B40  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 25041  015B44  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 25042  015B48  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 25043  015B4C  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 25044                           
 25045                           ;main.c: 115: return Peak;
 25046  015B50  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 25047  015B54  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 25048  015B58  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 25049  015B5C  0012               	return	
 25050  015B5E                     __end_of_currentMeasuredToPeak:
 25051                           	opt stack 0
 25052                           tosu	equ	0xFFF
 25053                           tosh	equ	0xFFE
 25054                           tosl	equ	0xFFD
 25055                           pclatu	equ	0xFFB
 25056                           pclath	equ	0xFFA
 25057                           tblptru	equ	0xFF8
 25058                           tblptrh	equ	0xFF7
 25059                           tblptrl	equ	0xFF6
 25060                           tablat	equ	0xFF5
 25061                           prodh	equ	0xFF4
 25062                           prodl	equ	0xFF3
 25063                           intcon	equ	0xFF2
 25064                           postinc0	equ	0xFEE
 25065                           fsr0h	equ	0xFEA
 25066                           fsr0l	equ	0xFE9
 25067                           wreg	equ	0xFE8
 25068                           indf1	equ	0xFE7
 25069                           postdec1	equ	0xFE5
 25070                           fsr1h	equ	0xFE2
 25071                           fsr1l	equ	0xFE1
 25072                           bsr	equ	0xFE0
 25073                           indf2	equ	0xFDF
 25074                           postinc2	equ	0xFDE
 25075                           postdec2	equ	0xFDD
 25076                           fsr2h	equ	0xFDA
 25077                           fsr2l	equ	0xFD9
 25078                           status	equ	0xFD8
 25079                           
 25080 ;; *************** function _sin *****************
 25081 ;; Defined at:
 25082 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 25083 ;; Parameters:    Size  Location     Type
 25084 ;;  f               3    6[BANK0 ] unsigned char 
 25085 ;; Auto vars:     Size  Location     Type
 25086 ;;  x2              3   15[BANK0 ] unsigned char 
 25087 ;;  y               3    9[BANK0 ] unsigned char 
 25088 ;;  sgn             1   18[BANK0 ] unsigned char 
 25089 ;; Return value:  Size  Location     Type
 25090 ;;                  3    6[BANK0 ] unsigned char 
 25091 ;; Registers used:
 25092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25093 ;; Tracked objects:
 25094 ;;		On entry : 0/0
 25095 ;;		On exit  : 0/0
 25096 ;;		Unchanged: 0/0
 25097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25098 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25099 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25101 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25102 ;;Total ram usage:       13 bytes
 25103 ;; Hardware stack levels used:    1
 25104 ;; Hardware stack levels required when called:    3
 25105 ;; This function calls:
 25106 ;;		_eval_poly
 25107 ;;		_floor
 25108 ;;		i2___ftadd
 25109 ;;		i2___ftdiv
 25110 ;;		i2___ftge
 25111 ;;		i2___ftmul
 25112 ;;		i2___ftneg
 25113 ;;		i2___ftsub
 25114 ;; This function is called by:
 25115 ;;		_peakToRMS
 25116 ;;		_currentMeasuredToPeak
 25117 ;; This function uses a non-reentrant model
 25118 ;;
 25119                           
 25120                           	psect	text96
 25121  0135B6                     __ptext96:
 25122                           	opt stack 0
 25123  0135B6                     _sin:
 25124                           	opt stack 11
 25125                           
 25126                           ;incstack = 0
 25127  0135B6  0E00               	movlw	0
 25128  0135B8  0100               	movlb	0	; () banked
 25129  0135BA  6F72               	movwf	sin@sgn& (0+255),b
 25130                           
 25131                           ; BSR set to: 0
 25132  0135BC  AF68               	btfss	(sin@f+2)& (0+255),7,b
 25133  0135BE  D011               	goto	i2l1729
 25134                           
 25135                           ; BSR set to: 0
 25136  0135C0  C066  F024         	movff	sin@f,i2___ftneg@f1
 25137  0135C4  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 25138  0135C8  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 25139  0135CC  EC30  F0B1         	call	i2___ftneg	;wreg free
 25140  0135D0  C024  F066         	movff	?i2___ftneg,sin@f
 25141  0135D4  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 25142  0135D8  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 25143  0135DC  0E01               	movlw	1
 25144  0135DE  0100               	movlb	0	; () banked
 25145  0135E0  6F72               	movwf	sin@sgn& (0+255),b
 25146  0135E2                     i2l1729:
 25147                           
 25148                           ; BSR set to: 0
 25149                           
 25150                           ; BSR set to: 0
 25151  0135E2  C066  F027         	movff	sin@f,i2___ftmul@f1
 25152  0135E6  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 25153  0135EA  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 25154  0135EE  0EFA               	movlw	250
 25155  0135F0  6E2A               	movwf	i2___ftmul@f2,c
 25156  0135F2  0E22               	movlw	34
 25157  0135F4  6E2B               	movwf	i2___ftmul@f2+1,c
 25158  0135F6  0E3E               	movlw	62
 25159  0135F8  6E2C               	movwf	i2___ftmul@f2+2,c
 25160  0135FA  EC9F  F0A4         	call	i2___ftmul	;wreg free
 25161  0135FE  C027  F066         	movff	?i2___ftmul,sin@f
 25162  013602  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 25163  013606  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 25164  01360A  C066  F060         	movff	sin@f,i2___ftsub@f1
 25165  01360E  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 25166  013612  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 25167  013616  C066  F056         	movff	sin@f,floor@x
 25168  01361A  C067  F057         	movff	sin@f+1,floor@x+1
 25169  01361E  C068  F058         	movff	sin@f+2,floor@x+2
 25170  013622  EC00  F0A6         	call	_floor	;wreg free
 25171  013626  C056  F063         	movff	?_floor,i2___ftsub@f2
 25172  01362A  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 25173  01362E  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 25174  013632  ECB5  F0AF         	call	i2___ftsub	;wreg free
 25175  013636  C060  F066         	movff	?i2___ftsub,sin@f
 25176  01363A  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 25177  01363E  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 25178  013642  C066  F027         	movff	sin@f,i2___ftmul@f1
 25179  013646  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 25180  01364A  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 25181  01364E  0E00               	movlw	0
 25182  013650  6E2A               	movwf	i2___ftmul@f2,c
 25183  013652  0E80               	movlw	128
 25184  013654  6E2B               	movwf	i2___ftmul@f2+1,c
 25185  013656  0E40               	movlw	64
 25186  013658  6E2C               	movwf	i2___ftmul@f2+2,c
 25187  01365A  EC9F  F0A4         	call	i2___ftmul	;wreg free
 25188  01365E  C027  F066         	movff	?i2___ftmul,sin@f
 25189  013662  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 25190  013666  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 25191  01366A  0E00               	movlw	0
 25192  01366C  6E2A               	movwf	i2___ftge@ff1,c
 25193  01366E  0E00               	movlw	0
 25194  013670  6E2B               	movwf	i2___ftge@ff1+1,c
 25195  013672  0E40               	movlw	64
 25196  013674  6E2C               	movwf	i2___ftge@ff1+2,c
 25197  013676  C066  F02D         	movff	sin@f,i2___ftge@ff2
 25198  01367A  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 25199  01367E  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 25200  013682  EC94  F0A9         	call	i2___ftge	;wreg free
 25201  013686  B0D8               	btfsc	status,0,c
 25202  013688  D01D               	goto	i2l1730
 25203  01368A  C066  F060         	movff	sin@f,i2___ftsub@f1
 25204  01368E  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 25205  013692  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 25206  013696  0E00               	movlw	0
 25207  013698  0100               	movlb	0	; () banked
 25208  01369A  6F63               	movwf	i2___ftsub@f2& (0+255),b
 25209  01369C  0E00               	movlw	0
 25210  01369E  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 25211  0136A0  0E40               	movlw	64
 25212  0136A2  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 25213  0136A4  ECB5  F0AF         	call	i2___ftsub	;wreg free
 25214  0136A8  C060  F066         	movff	?i2___ftsub,sin@f
 25215  0136AC  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 25216  0136B0  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 25217  0136B4  0100               	movlb	0	; () banked
 25218  0136B6  5172               	movf	sin@sgn& (0+255),w,b
 25219  0136B8  A4D8               	btfss	status,2,c
 25220  0136BA  D002               	goto	i2u1541_40
 25221  0136BC  0E01               	movlw	1
 25222  0136BE  D001               	goto	i2u1542_40
 25223  0136C0                     i2u1541_40:
 25224  0136C0  0E00               	movlw	0
 25225  0136C2                     i2u1542_40:
 25226  0136C2  6F72               	movwf	sin@sgn& (0+255),b
 25227  0136C4                     i2l1730:
 25228                           
 25229                           ; BSR set to: 0
 25230  0136C4  0E00               	movlw	0
 25231  0136C6  6E2A               	movwf	i2___ftge@ff1,c
 25232  0136C8  0E80               	movlw	128
 25233  0136CA  6E2B               	movwf	i2___ftge@ff1+1,c
 25234  0136CC  0E3F               	movlw	63
 25235  0136CE  6E2C               	movwf	i2___ftge@ff1+2,c
 25236  0136D0  C066  F02D         	movff	sin@f,i2___ftge@ff2
 25237  0136D4  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 25238  0136D8  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 25239  0136DC  EC94  F0A9         	call	i2___ftge	;wreg free
 25240  0136E0  B0D8               	btfsc	status,0,c
 25241  0136E2  D01C               	goto	i2l1731
 25242  0136E4  C066  F024         	movff	sin@f,i2___ftneg@f1
 25243  0136E8  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 25244  0136EC  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 25245  0136F0  EC30  F0B1         	call	i2___ftneg	;wreg free
 25246  0136F4  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25247  0136F8  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25248  0136FC  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25249  013700  0E00               	movlw	0
 25250  013702  6E43               	movwf	i2___ftadd@f2,c
 25251  013704  0E00               	movlw	0
 25252  013706  6E44               	movwf	i2___ftadd@f2+1,c
 25253  013708  0E40               	movlw	64
 25254  01370A  6E45               	movwf	i2___ftadd@f2+2,c
 25255  01370C  ECA5  F09E         	call	i2___ftadd	;wreg free
 25256  013710  C040  F066         	movff	?i2___ftadd,sin@f
 25257  013714  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 25258  013718  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 25259  01371C                     i2l1731:
 25260  01371C  C066  F027         	movff	sin@f,i2___ftmul@f1
 25261  013720  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 25262  013724  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 25263  013728  C066  F02A         	movff	sin@f,i2___ftmul@f2
 25264  01372C  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 25265  013730  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 25266  013734  EC9F  F0A4         	call	i2___ftmul	;wreg free
 25267  013738  C027  F06F         	movff	?i2___ftmul,sin@x2
 25268  01373C  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 25269  013740  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 25270  013744  C06F  F04C         	movff	sin@x2,eval_poly@x
 25271  013748  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 25272  01374C  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 25273  013750  0EEF               	movlw	low sin@coeff_b
 25274  013752  6E4F               	movwf	eval_poly@d,c
 25275  013754  0EF2               	movlw	high sin@coeff_b
 25276  013756  6E50               	movwf	eval_poly@d+1,c
 25277  013758  0E00               	movlw	0
 25278  01375A  6E52               	movwf	eval_poly@n+1,c
 25279  01375C  0E03               	movlw	3
 25280  01375E  6E51               	movwf	eval_poly@n,c
 25281  013760  EC6F  F0A6         	call	_eval_poly	;wreg free
 25282  013764  C04C  F069         	movff	?_eval_poly,sin@y
 25283  013768  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 25284  01376C  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 25285  013770  C069  F018         	movff	sin@y,i2___ftdiv@f2
 25286  013774  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 25287  013778  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 25288  01377C  0E00               	movlw	0
 25289  01377E  6E52               	movwf	eval_poly@n+1,c
 25290  013780  0E04               	movlw	4
 25291  013782  6E51               	movwf	eval_poly@n,c
 25292  013784  0ED1               	movlw	low sin@coeff_a
 25293  013786  6E4F               	movwf	eval_poly@d,c
 25294  013788  0EF2               	movlw	high sin@coeff_a
 25295  01378A  6E50               	movwf	eval_poly@d+1,c
 25296  01378C  C06F  F04C         	movff	sin@x2,eval_poly@x
 25297  013790  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 25298  013794  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 25299  013798  EC6F  F0A6         	call	_eval_poly	;wreg free
 25300  01379C  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 25301  0137A0  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 25302  0137A4  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 25303  0137A8  EC8D  F0A5         	call	i2___ftdiv	;wreg free
 25304  0137AC  C015  F06C         	movff	?i2___ftdiv,_sin$3337
 25305  0137B0  C016  F06D         	movff	?i2___ftdiv+1,_sin$3337+1
 25306  0137B4  C017  F06E         	movff	?i2___ftdiv+2,_sin$3337+2
 25307  0137B8  C066  F027         	movff	sin@f,i2___ftmul@f1
 25308  0137BC  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 25309  0137C0  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 25310  0137C4  C06C  F02A         	movff	_sin$3337,i2___ftmul@f2
 25311  0137C8  C06D  F02B         	movff	_sin$3337+1,i2___ftmul@f2+1
 25312  0137CC  C06E  F02C         	movff	_sin$3337+2,i2___ftmul@f2+2
 25313  0137D0  EC9F  F0A4         	call	i2___ftmul	;wreg free
 25314  0137D4  C027  F066         	movff	?i2___ftmul,sin@f
 25315  0137D8  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 25316  0137DC  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 25317  0137E0  0100               	movlb	0	; () banked
 25318  0137E2  5172               	movf	sin@sgn& (0+255),w,b
 25319  0137E4  B4D8               	btfsc	status,2,c
 25320  0137E6  D00F               	goto	i2l1732
 25321                           
 25322                           ; BSR set to: 0
 25323  0137E8  C066  F024         	movff	sin@f,i2___ftneg@f1
 25324  0137EC  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 25325  0137F0  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 25326  0137F4  EC30  F0B1         	call	i2___ftneg	;wreg free
 25327  0137F8  C024  F066         	movff	?i2___ftneg,?_sin
 25328  0137FC  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 25329  013800  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 25330  013804  0012               	return	
 25331  013806                     i2l1732:
 25332                           
 25333                           ; BSR set to: 0
 25334  013806  C066  F066         	movff	sin@f,?_sin
 25335  01380A  C067  F067         	movff	sin@f+1,?_sin+1
 25336  01380E  C068  F068         	movff	sin@f+2,?_sin+2
 25337  013812  0012               	return		;funcret
 25338  013814                     __end_of_sin:
 25339                           	opt stack 0
 25340                           tosu	equ	0xFFF
 25341                           tosh	equ	0xFFE
 25342                           tosl	equ	0xFFD
 25343                           pclatu	equ	0xFFB
 25344                           pclath	equ	0xFFA
 25345                           tblptru	equ	0xFF8
 25346                           tblptrh	equ	0xFF7
 25347                           tblptrl	equ	0xFF6
 25348                           tablat	equ	0xFF5
 25349                           prodh	equ	0xFF4
 25350                           prodl	equ	0xFF3
 25351                           intcon	equ	0xFF2
 25352                           postinc0	equ	0xFEE
 25353                           fsr0h	equ	0xFEA
 25354                           fsr0l	equ	0xFE9
 25355                           wreg	equ	0xFE8
 25356                           indf1	equ	0xFE7
 25357                           postdec1	equ	0xFE5
 25358                           fsr1h	equ	0xFE2
 25359                           fsr1l	equ	0xFE1
 25360                           bsr	equ	0xFE0
 25361                           indf2	equ	0xFDF
 25362                           postinc2	equ	0xFDE
 25363                           postdec2	equ	0xFDD
 25364                           fsr2h	equ	0xFDA
 25365                           fsr2l	equ	0xFD9
 25366                           status	equ	0xFD8
 25367                           
 25368 ;; *************** function i2___ftsub *****************
 25369 ;; Defined at:
 25370 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 25371 ;; Parameters:    Size  Location     Type
 25372 ;;  f1              3    0[BANK0 ] float 
 25373 ;;  f2              3    3[BANK0 ] float 
 25374 ;; Auto vars:     Size  Location     Type
 25375 ;;		None
 25376 ;; Return value:  Size  Location     Type
 25377 ;;                  3    0[BANK0 ] float 
 25378 ;; Registers used:
 25379 ;;		wreg, status,2, status,0, cstack
 25380 ;; Tracked objects:
 25381 ;;		On entry : 0/0
 25382 ;;		On exit  : 0/0
 25383 ;;		Unchanged: 0/0
 25384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25385 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25388 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25389 ;;Total ram usage:        6 bytes
 25390 ;; Hardware stack levels used:    1
 25391 ;; Hardware stack levels required when called:    2
 25392 ;; This function calls:
 25393 ;;		i2___ftadd
 25394 ;; This function is called by:
 25395 ;;		_sin
 25396 ;;		_sqrt
 25397 ;;		i2_printf
 25398 ;; This function uses a non-reentrant model
 25399 ;;
 25400                           
 25401                           	psect	text97
 25402  015F6A                     __ptext97:
 25403                           	opt stack 0
 25404  015F6A                     i2___ftsub:
 25405                           	opt stack 13
 25406                           
 25407                           ;incstack = 0
 25408  015F6A  0100               	movlb	0	; () banked
 25409  015F6C  5163               	movf	i2___ftsub@f2& (0+255),w,b
 25410  015F6E  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 25411  015F70  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 25412  015F72  B4D8               	btfsc	status,2,c
 25413  015F74  D006               	goto	i2l1595
 25414                           
 25415                           ; BSR set to: 0
 25416  015F76  0E00               	movlw	0
 25417  015F78  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 25418  015F7A  0E00               	movlw	0
 25419  015F7C  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 25420  015F7E  0E80               	movlw	128
 25421  015F80  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 25422  015F82                     i2l1595:
 25423                           
 25424                           ; BSR set to: 0
 25425                           
 25426                           ; BSR set to: 0
 25427  015F82  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 25428  015F86  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 25429  015F8A  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 25430  015F8E  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 25431  015F92  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 25432  015F96  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 25433  015F9A  ECA5  F09E         	call	i2___ftadd	;wreg free
 25434  015F9E  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 25435  015FA2  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 25436  015FA6  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 25437  015FAA  0012               	return	
 25438  015FAC                     __end_ofi2___ftsub:
 25439                           	opt stack 0
 25440                           tosu	equ	0xFFF
 25441                           tosh	equ	0xFFE
 25442                           tosl	equ	0xFFD
 25443                           pclatu	equ	0xFFB
 25444                           pclath	equ	0xFFA
 25445                           tblptru	equ	0xFF8
 25446                           tblptrh	equ	0xFF7
 25447                           tblptrl	equ	0xFF6
 25448                           tablat	equ	0xFF5
 25449                           prodh	equ	0xFF4
 25450                           prodl	equ	0xFF3
 25451                           intcon	equ	0xFF2
 25452                           postinc0	equ	0xFEE
 25453                           fsr0h	equ	0xFEA
 25454                           fsr0l	equ	0xFE9
 25455                           wreg	equ	0xFE8
 25456                           indf1	equ	0xFE7
 25457                           postdec1	equ	0xFE5
 25458                           fsr1h	equ	0xFE2
 25459                           fsr1l	equ	0xFE1
 25460                           bsr	equ	0xFE0
 25461                           indf2	equ	0xFDF
 25462                           postinc2	equ	0xFDE
 25463                           postdec2	equ	0xFDD
 25464                           fsr2h	equ	0xFDA
 25465                           fsr2l	equ	0xFD9
 25466                           status	equ	0xFD8
 25467                           
 25468 ;; *************** function i2___ftneg *****************
 25469 ;; Defined at:
 25470 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 25471 ;; Parameters:    Size  Location     Type
 25472 ;;  f1              3   35[COMRAM] float 
 25473 ;; Auto vars:     Size  Location     Type
 25474 ;;		None
 25475 ;; Return value:  Size  Location     Type
 25476 ;;                  3   35[COMRAM] float 
 25477 ;; Registers used:
 25478 ;;		wreg, status,2, status,0
 25479 ;; Tracked objects:
 25480 ;;		On entry : 0/0
 25481 ;;		On exit  : 0/0
 25482 ;;		Unchanged: 0/0
 25483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25484 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25488 ;;Total ram usage:        3 bytes
 25489 ;; Hardware stack levels used:    1
 25490 ;; This function calls:
 25491 ;;		Nothing
 25492 ;; This function is called by:
 25493 ;;		_peakToRMS
 25494 ;;		_ADC_postProcessingCallback
 25495 ;;		_acos
 25496 ;;		_asin
 25497 ;;		_atan
 25498 ;;		_fabs
 25499 ;;		_sin
 25500 ;;		i2_printf
 25501 ;; This function uses a non-reentrant model
 25502 ;;
 25503                           
 25504                           	psect	text98
 25505  016260                     __ptext98:
 25506                           	opt stack 0
 25507  016260                     i2___ftneg:
 25508                           	opt stack 15
 25509                           
 25510                           ;incstack = 0
 25511  016260  5024               	movf	i2___ftneg@f1,w,c
 25512  016262  1025               	iorwf	i2___ftneg@f1+1,w,c
 25513  016264  1026               	iorwf	i2___ftneg@f1+2,w,c
 25514  016266  B4D8               	btfsc	status,2,c
 25515  016268  D006               	goto	i2l1589
 25516  01626A  0E00               	movlw	0
 25517  01626C  1A24               	xorwf	i2___ftneg@f1,f,c
 25518  01626E  0E00               	movlw	0
 25519  016270  1A25               	xorwf	i2___ftneg@f1+1,f,c
 25520  016272  0E80               	movlw	128
 25521  016274  1A26               	xorwf	i2___ftneg@f1+2,f,c
 25522  016276                     i2l1589:
 25523  016276  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 25524  01627A  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 25525  01627E  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 25526  016282  0012               	return		;funcret
 25527  016284                     __end_ofi2___ftneg:
 25528                           	opt stack 0
 25529                           tosu	equ	0xFFF
 25530                           tosh	equ	0xFFE
 25531                           tosl	equ	0xFFD
 25532                           pclatu	equ	0xFFB
 25533                           pclath	equ	0xFFA
 25534                           tblptru	equ	0xFF8
 25535                           tblptrh	equ	0xFF7
 25536                           tblptrl	equ	0xFF6
 25537                           tablat	equ	0xFF5
 25538                           prodh	equ	0xFF4
 25539                           prodl	equ	0xFF3
 25540                           intcon	equ	0xFF2
 25541                           postinc0	equ	0xFEE
 25542                           fsr0h	equ	0xFEA
 25543                           fsr0l	equ	0xFE9
 25544                           wreg	equ	0xFE8
 25545                           indf1	equ	0xFE7
 25546                           postdec1	equ	0xFE5
 25547                           fsr1h	equ	0xFE2
 25548                           fsr1l	equ	0xFE1
 25549                           bsr	equ	0xFE0
 25550                           indf2	equ	0xFDF
 25551                           postinc2	equ	0xFDE
 25552                           postdec2	equ	0xFDD
 25553                           fsr2h	equ	0xFDA
 25554                           fsr2l	equ	0xFD9
 25555                           status	equ	0xFD8
 25556                           
 25557 ;; *************** function i2___ftdiv *****************
 25558 ;; Defined at:
 25559 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 25560 ;; Parameters:    Size  Location     Type
 25561 ;;  f1              3   20[COMRAM] float 
 25562 ;;  f2              3   23[COMRAM] float 
 25563 ;; Auto vars:     Size  Location     Type
 25564 ;;  __ftdiv         3   31[COMRAM] float 
 25565 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 25566 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 25567 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 25568 ;; Return value:  Size  Location     Type
 25569 ;;                  3   20[COMRAM] float 
 25570 ;; Registers used:
 25571 ;;		wreg, status,2, status,0, cstack
 25572 ;; Tracked objects:
 25573 ;;		On entry : 0/0
 25574 ;;		On exit  : 0/0
 25575 ;;		Unchanged: 0/0
 25576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25577 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25578 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25579 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25580 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25581 ;;Total ram usage:       15 bytes
 25582 ;; Hardware stack levels used:    1
 25583 ;; Hardware stack levels required when called:    1
 25584 ;; This function calls:
 25585 ;;		i2___ftpack
 25586 ;; This function is called by:
 25587 ;;		_peakToRMS
 25588 ;;		_currentMeasuredToPeak
 25589 ;;		_ADC_postProcessingCallback
 25590 ;;		_asin
 25591 ;;		_atan
 25592 ;;		_sin
 25593 ;; This function uses a non-reentrant model
 25594 ;;
 25595                           
 25596                           	psect	text99
 25597  014B1A                     __ptext99:
 25598                           	opt stack 0
 25599  014B1A                     i2___ftdiv:
 25600                           	opt stack 14
 25601                           
 25602                           ;incstack = 0
 25603  014B1A  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 25604  014B1E  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 25605  014B20  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 25606  014B22  3416               	rlcf	i2___ftdiv@f1+1,w,c
 25607  014B24  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 25608  014B26  E301               	bnc	u1503_41
 25609  014B28  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 25610  014B2A                     u1503_41:
 25611  014B2A  501B               	movf	??i2___ftdiv,w,c
 25612  014B2C  6E1F               	movwf	i2___ftdiv@exp,c
 25613  014B2E  501F               	movf	i2___ftdiv@exp,w,c
 25614  014B30  A4D8               	btfss	status,2,c
 25615  014B32  D007               	goto	i2l1546
 25616  014B34  0E00               	movlw	0
 25617  014B36  6E15               	movwf	?i2___ftdiv,c
 25618  014B38  0E00               	movlw	0
 25619  014B3A  6E16               	movwf	?i2___ftdiv+1,c
 25620  014B3C  0E00               	movlw	0
 25621  014B3E  6E17               	movwf	?i2___ftdiv+2,c
 25622  014B40  0012               	return	
 25623  014B42                     i2l1546:
 25624  014B42  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 25625  014B46  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 25626  014B48  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 25627  014B4A  3419               	rlcf	i2___ftdiv@f2+1,w,c
 25628  014B4C  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 25629  014B4E  E301               	bnc	u1505_41
 25630  014B50  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 25631  014B52                     u1505_41:
 25632  014B52  501B               	movf	??i2___ftdiv,w,c
 25633  014B54  6E23               	movwf	i2___ftdiv@sign,c
 25634  014B56  5023               	movf	i2___ftdiv@sign,w,c
 25635  014B58  A4D8               	btfss	status,2,c
 25636  014B5A  D007               	goto	i2l1548
 25637  014B5C  0E00               	movlw	0
 25638  014B5E  6E15               	movwf	?i2___ftdiv,c
 25639  014B60  0E00               	movlw	0
 25640  014B62  6E16               	movwf	?i2___ftdiv+1,c
 25641  014B64  0E00               	movlw	0
 25642  014B66  6E17               	movwf	?i2___ftdiv+2,c
 25643  014B68  0012               	return	
 25644  014B6A                     i2l1548:
 25645  014B6A  0E00               	movlw	0
 25646  014B6C  6E20               	movwf	i2___ftdiv@f3,c
 25647  014B6E  0E00               	movlw	0
 25648  014B70  6E21               	movwf	i2___ftdiv@f3+1,c
 25649  014B72  0E00               	movlw	0
 25650  014B74  6E22               	movwf	i2___ftdiv@f3+2,c
 25651  014B76  5023               	movf	i2___ftdiv@sign,w,c
 25652  014B78  0F89               	addlw	137
 25653  014B7A  5E1F               	subwf	i2___ftdiv@exp,f,c
 25654  014B7C  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 25655  014B80  501A               	movf	i2___ftdiv@f2+2,w,c
 25656  014B82  1A23               	xorwf	i2___ftdiv@sign,f,c
 25657  014B84  0E80               	movlw	128
 25658  014B86  1623               	andwf	i2___ftdiv@sign,f,c
 25659  014B88  8E16               	bsf	i2___ftdiv@f1+1,7,c
 25660  014B8A  0EFF               	movlw	255
 25661  014B8C  1615               	andwf	i2___ftdiv@f1,f,c
 25662  014B8E  0EFF               	movlw	255
 25663  014B90  1616               	andwf	i2___ftdiv@f1+1,f,c
 25664  014B92  0E00               	movlw	0
 25665  014B94  1617               	andwf	i2___ftdiv@f1+2,f,c
 25666  014B96  8E19               	bsf	i2___ftdiv@f2+1,7,c
 25667  014B98  0EFF               	movlw	255
 25668  014B9A  1618               	andwf	i2___ftdiv@f2,f,c
 25669  014B9C  0EFF               	movlw	255
 25670  014B9E  1619               	andwf	i2___ftdiv@f2+1,f,c
 25671  014BA0  0E00               	movlw	0
 25672  014BA2  161A               	andwf	i2___ftdiv@f2+2,f,c
 25673  014BA4  0E18               	movlw	24
 25674  014BA6  6E1E               	movwf	i2___ftdiv@cntr,c
 25675  014BA8  90D8               	bcf	status,0,c
 25676  014BAA  3620               	rlcf	i2___ftdiv@f3,f,c
 25677  014BAC  3621               	rlcf	i2___ftdiv@f3+1,f,c
 25678  014BAE  3622               	rlcf	i2___ftdiv@f3+2,f,c
 25679  014BB0  5018               	movf	i2___ftdiv@f2,w,c
 25680  014BB2  5C15               	subwf	i2___ftdiv@f1,w,c
 25681  014BB4  5019               	movf	i2___ftdiv@f2+1,w,c
 25682  014BB6  5816               	subwfb	i2___ftdiv@f1+1,w,c
 25683  014BB8  501A               	movf	i2___ftdiv@f2+2,w,c
 25684  014BBA  5817               	subwfb	i2___ftdiv@f1+2,w,c
 25685  014BBC  A0D8               	btfss	status,0,c
 25686  014BBE  D007               	goto	i2l1550
 25687  014BC0  5018               	movf	i2___ftdiv@f2,w,c
 25688  014BC2  5E15               	subwf	i2___ftdiv@f1,f,c
 25689  014BC4  5019               	movf	i2___ftdiv@f2+1,w,c
 25690  014BC6  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 25691  014BC8  501A               	movf	i2___ftdiv@f2+2,w,c
 25692  014BCA  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 25693  014BCC  8020               	bsf	i2___ftdiv@f3,0,c
 25694  014BCE                     i2l1550:
 25695  014BCE  90D8               	bcf	status,0,c
 25696  014BD0  3615               	rlcf	i2___ftdiv@f1,f,c
 25697  014BD2  3616               	rlcf	i2___ftdiv@f1+1,f,c
 25698  014BD4  3617               	rlcf	i2___ftdiv@f1+2,f,c
 25699  014BD6  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 25700  014BD8  D7E7               	goto	i2l1549
 25701  014BDA  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 25702  014BDE  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 25703  014BE2  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 25704  014BE6  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 25705  014BEA  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 25706  014BEE  EC06  F0A8         	call	i2___ftpack	;wreg free
 25707  014BF2  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 25708  014BF6  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 25709  014BFA  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 25710  014BFE  0012               	return	
 25711  014C00                     __end_ofi2___ftdiv:
 25712                           	opt stack 0
 25713                           tosu	equ	0xFFF
 25714                           tosh	equ	0xFFE
 25715                           tosl	equ	0xFFD
 25716                           pclatu	equ	0xFFB
 25717                           pclath	equ	0xFFA
 25718                           tblptru	equ	0xFF8
 25719                           tblptrh	equ	0xFF7
 25720                           tblptrl	equ	0xFF6
 25721                           tablat	equ	0xFF5
 25722                           prodh	equ	0xFF4
 25723                           prodl	equ	0xFF3
 25724                           intcon	equ	0xFF2
 25725                           postinc0	equ	0xFEE
 25726                           fsr0h	equ	0xFEA
 25727                           fsr0l	equ	0xFE9
 25728                           wreg	equ	0xFE8
 25729                           indf1	equ	0xFE7
 25730                           postdec1	equ	0xFE5
 25731                           fsr1h	equ	0xFE2
 25732                           fsr1l	equ	0xFE1
 25733                           bsr	equ	0xFE0
 25734                           indf2	equ	0xFDF
 25735                           postinc2	equ	0xFDE
 25736                           postdec2	equ	0xFDD
 25737                           fsr2h	equ	0xFDA
 25738                           fsr2l	equ	0xFD9
 25739                           status	equ	0xFD8
 25740                           
 25741 ;; *************** function _floor *****************
 25742 ;; Defined at:
 25743 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 25744 ;; Parameters:    Size  Location     Type
 25745 ;;  x               3   85[COMRAM] float 
 25746 ;; Auto vars:     Size  Location     Type
 25747 ;;  i               3   88[COMRAM] float 
 25748 ;;  expon           2   91[COMRAM] int 
 25749 ;; Return value:  Size  Location     Type
 25750 ;;                  3   85[COMRAM] int 
 25751 ;; Registers used:
 25752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25753 ;; Tracked objects:
 25754 ;;		On entry : 0/0
 25755 ;;		On exit  : 0/0
 25756 ;;		Unchanged: 0/0
 25757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25759 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25761 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25762 ;;Total ram usage:        8 bytes
 25763 ;; Hardware stack levels used:    1
 25764 ;; Hardware stack levels required when called:    2
 25765 ;; This function calls:
 25766 ;;		___altoft
 25767 ;;		_frexp
 25768 ;;		i2___ftadd
 25769 ;;		i2___ftge
 25770 ;;		i2___fttol
 25771 ;; This function is called by:
 25772 ;;		_sin
 25773 ;; This function uses a non-reentrant model
 25774 ;;
 25775                           
 25776                           	psect	text100
 25777  014C00                     __ptext100:
 25778                           	opt stack 0
 25779  014C00                     _floor:
 25780                           	opt stack 11
 25781                           
 25782                           ;incstack = 0
 25783  014C00  C056  F001         	movff	floor@x,frexp@value
 25784  014C04  C057  F002         	movff	floor@x+1,frexp@value+1
 25785  014C08  C058  F003         	movff	floor@x+2,frexp@value+2
 25786  014C0C  0E5C               	movlw	low floor@expon
 25787  014C0E  6E04               	movwf	frexp@eptr,c
 25788  014C10  0E00               	movlw	high floor@expon
 25789  014C12  6E05               	movwf	frexp@eptr+1,c
 25790  014C14  EC2A  F0AB         	call	_frexp	;wreg free
 25791  014C18  AE5D               	btfss	floor@expon+1,7,c
 25792  014C1A  D010               	goto	i2l1934
 25793  014C1C  AE58               	btfss	floor@x+2,7,c
 25794  014C1E  D007               	goto	i2l1935
 25795  014C20  0E00               	movlw	0
 25796  014C22  6E56               	movwf	?_floor,c
 25797  014C24  0E80               	movlw	128
 25798  014C26  6E57               	movwf	?_floor+1,c
 25799  014C28  0EBF               	movlw	191
 25800  014C2A  6E58               	movwf	?_floor+2,c
 25801  014C2C  0012               	return	
 25802  014C2E                     i2l1935:
 25803  014C2E  0E00               	movlw	0
 25804  014C30  6E56               	movwf	?_floor,c
 25805  014C32  0E00               	movlw	0
 25806  014C34  6E57               	movwf	?_floor+1,c
 25807  014C36  0E00               	movlw	0
 25808  014C38  6E58               	movwf	?_floor+2,c
 25809  014C3A  0012               	return	
 25810  014C3C                     i2l1934:
 25811  014C3C  505D               	movf	floor@expon+1,w,c
 25812  014C3E  E104               	bnz	i2u1537_40
 25813  014C40  0E15               	movlw	21
 25814  014C42  5C5C               	subwf	floor@expon,w,c
 25815  014C44  A0D8               	btfss	status,0,c
 25816  014C46  D007               	goto	i2l1937
 25817  014C48                     i2u1537_40:
 25818  014C48  C056  F056         	movff	floor@x,?_floor
 25819  014C4C  C057  F057         	movff	floor@x+1,?_floor+1
 25820  014C50  C058  F058         	movff	floor@x+2,?_floor+2
 25821  014C54  0012               	return	
 25822  014C56                     i2l1937:
 25823  014C56  C056  F03D         	movff	floor@x,i2___fttol@f1
 25824  014C5A  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 25825  014C5E  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 25826  014C62  EC25  F0A4         	call	i2___fttol	;wreg free
 25827  014C66  C03D  F04C         	movff	?i2___fttol,___altoft@c
 25828  014C6A  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 25829  014C6E  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 25830  014C72  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 25831  014C76  EC66  F0AB         	call	___altoft	;wreg free
 25832  014C7A  C04C  F059         	movff	?___altoft,floor@i
 25833  014C7E  C04D  F05A         	movff	?___altoft+1,floor@i+1
 25834  014C82  C04E  F05B         	movff	?___altoft+2,floor@i+2
 25835  014C86  C056  F02A         	movff	floor@x,i2___ftge@ff1
 25836  014C8A  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 25837  014C8E  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 25838  014C92  C059  F02D         	movff	floor@i,i2___ftge@ff2
 25839  014C96  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 25840  014C9A  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 25841  014C9E  EC94  F0A9         	call	i2___ftge	;wreg free
 25842  014CA2  B0D8               	btfsc	status,0,c
 25843  014CA4  D015               	goto	i2l1938
 25844  014CA6  C059  F040         	movff	floor@i,i2___ftadd@f1
 25845  014CAA  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 25846  014CAE  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 25847  014CB2  0E00               	movlw	0
 25848  014CB4  6E43               	movwf	i2___ftadd@f2,c
 25849  014CB6  0E80               	movlw	128
 25850  014CB8  6E44               	movwf	i2___ftadd@f2+1,c
 25851  014CBA  0EBF               	movlw	191
 25852  014CBC  6E45               	movwf	i2___ftadd@f2+2,c
 25853  014CBE  ECA5  F09E         	call	i2___ftadd	;wreg free
 25854  014CC2  C040  F056         	movff	?i2___ftadd,?_floor
 25855  014CC6  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 25856  014CCA  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 25857  014CCE  0012               	return	
 25858  014CD0                     i2l1938:
 25859  014CD0  C059  F056         	movff	floor@i,?_floor
 25860  014CD4  C05A  F057         	movff	floor@i+1,?_floor+1
 25861  014CD8  C05B  F058         	movff	floor@i+2,?_floor+2
 25862  014CDC  0012               	return		;funcret
 25863  014CDE                     __end_of_floor:
 25864                           	opt stack 0
 25865                           tosu	equ	0xFFF
 25866                           tosh	equ	0xFFE
 25867                           tosl	equ	0xFFD
 25868                           pclatu	equ	0xFFB
 25869                           pclath	equ	0xFFA
 25870                           tblptru	equ	0xFF8
 25871                           tblptrh	equ	0xFF7
 25872                           tblptrl	equ	0xFF6
 25873                           tablat	equ	0xFF5
 25874                           prodh	equ	0xFF4
 25875                           prodl	equ	0xFF3
 25876                           intcon	equ	0xFF2
 25877                           postinc0	equ	0xFEE
 25878                           fsr0h	equ	0xFEA
 25879                           fsr0l	equ	0xFE9
 25880                           wreg	equ	0xFE8
 25881                           indf1	equ	0xFE7
 25882                           postdec1	equ	0xFE5
 25883                           fsr1h	equ	0xFE2
 25884                           fsr1l	equ	0xFE1
 25885                           bsr	equ	0xFE0
 25886                           indf2	equ	0xFDF
 25887                           postinc2	equ	0xFDE
 25888                           postdec2	equ	0xFDD
 25889                           fsr2h	equ	0xFDA
 25890                           fsr2l	equ	0xFD9
 25891                           status	equ	0xFD8
 25892                           
 25893 ;; *************** function i2___fttol *****************
 25894 ;; Defined at:
 25895 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 25896 ;; Parameters:    Size  Location     Type
 25897 ;;  f1              3   60[COMRAM] float 
 25898 ;; Auto vars:     Size  Location     Type
 25899 ;;  __fttol         4   70[COMRAM] unsigned long 
 25900 ;;  __fttol         1   74[COMRAM] unsigned char 
 25901 ;;  __fttol         1   69[COMRAM] unsigned char 
 25902 ;; Return value:  Size  Location     Type
 25903 ;;                  4   60[COMRAM] long 
 25904 ;; Registers used:
 25905 ;;		wreg, status,2, status,0
 25906 ;; Tracked objects:
 25907 ;;		On entry : 0/0
 25908 ;;		On exit  : 0/0
 25909 ;;		Unchanged: 0/0
 25910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25912 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25913 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25914 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25915 ;;Total ram usage:       15 bytes
 25916 ;; Hardware stack levels used:    1
 25917 ;; This function calls:
 25918 ;;		Nothing
 25919 ;; This function is called by:
 25920 ;;		_floor
 25921 ;;		i2_printf
 25922 ;; This function uses a non-reentrant model
 25923 ;;
 25924                           
 25925                           	psect	text101
 25926  01484A                     __ptext101:
 25927                           	opt stack 0
 25928  01484A                     i2___fttol:
 25929                           	opt stack 15
 25930                           
 25931                           ;incstack = 0
 25932  01484A  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 25933  01484E  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 25934  014850  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 25935  014852  343E               	rlcf	i2___fttol@f1+1,w,c
 25936  014854  3641               	rlcf	??i2___fttol& (0+255),f,c
 25937  014856  E301               	bnc	u1524_41
 25938  014858  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 25939  01485A                     u1524_41:
 25940  01485A  5041               	movf	??i2___fttol,w,c
 25941  01485C  6E4B               	movwf	i2___fttol@exp1,c
 25942  01485E  504B               	movf	i2___fttol@exp1,w,c
 25943  014860  A4D8               	btfss	status,2,c
 25944  014862  D009               	goto	i2l1599
 25945  014864  0E00               	movlw	0
 25946  014866  6E3D               	movwf	?i2___fttol,c
 25947  014868  0E00               	movlw	0
 25948  01486A  6E3E               	movwf	?i2___fttol+1,c
 25949  01486C  0E00               	movlw	0
 25950  01486E  6E3F               	movwf	?i2___fttol+2,c
 25951  014870  0E00               	movlw	0
 25952  014872  6E40               	movwf	?i2___fttol+3,c
 25953  014874  0012               	return	
 25954  014876                     i2l1599:
 25955  014876  0E17               	movlw	23
 25956  014878  6E41               	movwf	??i2___fttol& (0+255),c
 25957  01487A  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 25958  01487E  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 25959  014882  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 25960  014886  2841               	incf	??i2___fttol,w,c
 25961  014888  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 25962  01488A  D004               	goto	i2u1526_40
 25963  01488C                     i2u1526_45:
 25964  01488C  90D8               	bcf	status,0,c
 25965  01488E  3244               	rrcf	??i2___fttol+3,f,c
 25966  014890  3243               	rrcf	??i2___fttol+2,f,c
 25967  014892  3242               	rrcf	??i2___fttol+1,f,c
 25968  014894                     i2u1526_40:
 25969  014894  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 25970  014896  D7FA               	goto	i2u1526_45
 25971  014898  5042               	movf	??i2___fttol+1,w,c
 25972  01489A  6E46               	movwf	i2___fttol@sign1,c
 25973  01489C  8E3E               	bsf	i2___fttol@f1+1,7,c
 25974  01489E  0EFF               	movlw	255
 25975  0148A0  163D               	andwf	i2___fttol@f1,f,c
 25976  0148A2  0EFF               	movlw	255
 25977  0148A4  163E               	andwf	i2___fttol@f1+1,f,c
 25978  0148A6  0E00               	movlw	0
 25979  0148A8  163F               	andwf	i2___fttol@f1+2,f,c
 25980  0148AA  503D               	movf	i2___fttol@f1,w,c
 25981  0148AC  6E47               	movwf	i2___fttol@lval,c
 25982  0148AE  503E               	movf	i2___fttol@f1+1,w,c
 25983  0148B0  6E48               	movwf	i2___fttol@lval+1,c
 25984  0148B2  503F               	movf	i2___fttol@f1+2,w,c
 25985  0148B4  6E49               	movwf	i2___fttol@lval+2,c
 25986  0148B6  6A4A               	clrf	i2___fttol@lval+3,c
 25987  0148B8  0E8E               	movlw	142
 25988  0148BA  5E4B               	subwf	i2___fttol@exp1,f,c
 25989  0148BC  AE4B               	btfss	i2___fttol@exp1,7,c
 25990  0148BE  D016               	goto	i2l1601
 25991  0148C0  504B               	movf	i2___fttol@exp1,w,c
 25992  0148C2  0A80               	xorlw	128
 25993  0148C4  0F8F               	addlw	143
 25994  0148C6  B0D8               	btfsc	status,0,c
 25995  0148C8  D009               	goto	i2l1602
 25996  0148CA  0E00               	movlw	0
 25997  0148CC  6E3D               	movwf	?i2___fttol,c
 25998  0148CE  0E00               	movlw	0
 25999  0148D0  6E3E               	movwf	?i2___fttol+1,c
 26000  0148D2  0E00               	movlw	0
 26001  0148D4  6E3F               	movwf	?i2___fttol+2,c
 26002  0148D6  0E00               	movlw	0
 26003  0148D8  6E40               	movwf	?i2___fttol+3,c
 26004  0148DA  0012               	return	
 26005  0148DC                     i2l1602:
 26006  0148DC  90D8               	bcf	status,0,c
 26007  0148DE  324A               	rrcf	i2___fttol@lval+3,f,c
 26008  0148E0  3249               	rrcf	i2___fttol@lval+2,f,c
 26009  0148E2  3248               	rrcf	i2___fttol@lval+1,f,c
 26010  0148E4  3247               	rrcf	i2___fttol@lval,f,c
 26011  0148E6  3E4B               	incfsz	i2___fttol@exp1,f,c
 26012  0148E8  D7F9               	goto	i2l1602
 26013  0148EA  D015               	goto	i2u1530_40
 26014  0148EC                     i2l1601:
 26015  0148EC  0E17               	movlw	23
 26016  0148EE  644B               	cpfsgt	i2___fttol@exp1,c
 26017  0148F0  D00F               	goto	i2l1607
 26018  0148F2  0E00               	movlw	0
 26019  0148F4  6E3D               	movwf	?i2___fttol,c
 26020  0148F6  0E00               	movlw	0
 26021  0148F8  6E3E               	movwf	?i2___fttol+1,c
 26022  0148FA  0E00               	movlw	0
 26023  0148FC  6E3F               	movwf	?i2___fttol+2,c
 26024  0148FE  0E00               	movlw	0
 26025  014900  6E40               	movwf	?i2___fttol+3,c
 26026  014902  0012               	return	
 26027  014904  90D8               	bcf	status,0,c
 26028  014906  3647               	rlcf	i2___fttol@lval,f,c
 26029  014908  3648               	rlcf	i2___fttol@lval+1,f,c
 26030  01490A  3649               	rlcf	i2___fttol@lval+2,f,c
 26031  01490C  364A               	rlcf	i2___fttol@lval+3,f,c
 26032  01490E  064B               	decf	i2___fttol@exp1,f,c
 26033  014910                     i2l1607:
 26034  014910  504B               	movf	i2___fttol@exp1,w,c
 26035  014912  A4D8               	btfss	status,2,c
 26036  014914  D7F7               	goto	i2l1608
 26037  014916                     i2u1530_40:
 26038  014916  5046               	movf	i2___fttol@sign1,w,c
 26039  014918  B4D8               	btfsc	status,2,c
 26040  01491A  D008               	goto	i2l1610
 26041  01491C  1E4A               	comf	i2___fttol@lval+3,f,c
 26042  01491E  1E49               	comf	i2___fttol@lval+2,f,c
 26043  014920  1E48               	comf	i2___fttol@lval+1,f,c
 26044  014922  6C47               	negf	i2___fttol@lval,c
 26045  014924  0E00               	movlw	0
 26046  014926  2248               	addwfc	i2___fttol@lval+1,f,c
 26047  014928  2249               	addwfc	i2___fttol@lval+2,f,c
 26048  01492A  224A               	addwfc	i2___fttol@lval+3,f,c
 26049  01492C                     i2l1610:
 26050  01492C  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 26051  014930  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 26052  014934  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 26053  014938  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 26054  01493C  0012               	return	
 26055  01493E                     __end_ofi2___fttol:
 26056                           	opt stack 0
 26057                           tosu	equ	0xFFF
 26058                           tosh	equ	0xFFE
 26059                           tosl	equ	0xFFD
 26060                           pclatu	equ	0xFFB
 26061                           pclath	equ	0xFFA
 26062                           tblptru	equ	0xFF8
 26063                           tblptrh	equ	0xFF7
 26064                           tblptrl	equ	0xFF6
 26065                           tablat	equ	0xFF5
 26066                           prodh	equ	0xFF4
 26067                           prodl	equ	0xFF3
 26068                           intcon	equ	0xFF2
 26069                           postinc0	equ	0xFEE
 26070                           fsr0h	equ	0xFEA
 26071                           fsr0l	equ	0xFE9
 26072                           wreg	equ	0xFE8
 26073                           indf1	equ	0xFE7
 26074                           postdec1	equ	0xFE5
 26075                           fsr1h	equ	0xFE2
 26076                           fsr1l	equ	0xFE1
 26077                           bsr	equ	0xFE0
 26078                           indf2	equ	0xFDF
 26079                           postinc2	equ	0xFDE
 26080                           postdec2	equ	0xFDD
 26081                           fsr2h	equ	0xFDA
 26082                           fsr2l	equ	0xFD9
 26083                           status	equ	0xFD8
 26084                           
 26085 ;; *************** function i2___ftge *****************
 26086 ;; Defined at:
 26087 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 26088 ;; Parameters:    Size  Location     Type
 26089 ;;  ff1             3   41[COMRAM] float 
 26090 ;;  ff2             3   44[COMRAM] float 
 26091 ;; Auto vars:     Size  Location     Type
 26092 ;;		None
 26093 ;; Return value:  Size  Location     Type
 26094 ;;		None               void
 26095 ;; Registers used:
 26096 ;;		wreg, status,2, status,0
 26097 ;; Tracked objects:
 26098 ;;		On entry : 0/0
 26099 ;;		On exit  : 0/0
 26100 ;;		Unchanged: 0/0
 26101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26102 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26104 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26105 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26106 ;;Total ram usage:        9 bytes
 26107 ;; Hardware stack levels used:    1
 26108 ;; This function calls:
 26109 ;;		Nothing
 26110 ;; This function is called by:
 26111 ;;		_asin
 26112 ;;		_atan
 26113 ;;		_sin
 26114 ;;		_sqrt
 26115 ;;		_floor
 26116 ;;		i2_printf
 26117 ;; This function uses a non-reentrant model
 26118 ;;
 26119                           
 26120                           	psect	text102
 26121  015328                     __ptext102:
 26122                           	opt stack 0
 26123  015328                     i2___ftge:
 26124                           	opt stack 15
 26125                           
 26126                           ;incstack = 0
 26127  015328  AE2C               	btfss	i2___ftge@ff1+2,7,c
 26128  01532A  D016               	goto	i2l1571
 26129  01532C  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 26130  015330  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 26131  015334  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 26132  015338  1E30               	comf	??i2___ftge,f,c
 26133  01533A  1E31               	comf	??i2___ftge+1,f,c
 26134  01533C  1E32               	comf	??i2___ftge+2,f,c
 26135  01533E  2A30               	incf	??i2___ftge,f,c
 26136  015340  0E00               	movlw	0
 26137  015342  2231               	addwfc	??i2___ftge+1,f,c
 26138  015344  2232               	addwfc	??i2___ftge+2,f,c
 26139  015346  0E00               	movlw	0
 26140  015348  2430               	addwf	??i2___ftge,w,c
 26141  01534A  6E2A               	movwf	i2___ftge@ff1,c
 26142  01534C  0E00               	movlw	0
 26143  01534E  2031               	addwfc	??i2___ftge+1,w,c
 26144  015350  6E2B               	movwf	i2___ftge@ff1+1,c
 26145  015352  0E80               	movlw	128
 26146  015354  2032               	addwfc	??i2___ftge+2,w,c
 26147  015356  6E2C               	movwf	i2___ftge@ff1+2,c
 26148  015358                     i2l1571:
 26149  015358  AE2F               	btfss	i2___ftge@ff2+2,7,c
 26150  01535A  D016               	goto	i2l1572
 26151  01535C  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 26152  015360  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 26153  015364  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 26154  015368  1E30               	comf	??i2___ftge,f,c
 26155  01536A  1E31               	comf	??i2___ftge+1,f,c
 26156  01536C  1E32               	comf	??i2___ftge+2,f,c
 26157  01536E  2A30               	incf	??i2___ftge,f,c
 26158  015370  0E00               	movlw	0
 26159  015372  2231               	addwfc	??i2___ftge+1,f,c
 26160  015374  2232               	addwfc	??i2___ftge+2,f,c
 26161  015376  0E00               	movlw	0
 26162  015378  2430               	addwf	??i2___ftge,w,c
 26163  01537A  6E2D               	movwf	i2___ftge@ff2,c
 26164  01537C  0E00               	movlw	0
 26165  01537E  2031               	addwfc	??i2___ftge+1,w,c
 26166  015380  6E2E               	movwf	i2___ftge@ff2+1,c
 26167  015382  0E80               	movlw	128
 26168  015384  2032               	addwfc	??i2___ftge+2,w,c
 26169  015386  6E2F               	movwf	i2___ftge@ff2+2,c
 26170  015388                     i2l1572:
 26171  015388  0E00               	movlw	0
 26172  01538A  1A2A               	xorwf	i2___ftge@ff1,f,c
 26173  01538C  0E00               	movlw	0
 26174  01538E  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 26175  015390  0E80               	movlw	128
 26176  015392  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 26177  015394  0E00               	movlw	0
 26178  015396  1A2D               	xorwf	i2___ftge@ff2,f,c
 26179  015398  0E00               	movlw	0
 26180  01539A  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 26181  01539C  0E80               	movlw	128
 26182  01539E  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 26183  0153A0  502D               	movf	i2___ftge@ff2,w,c
 26184  0153A2  5C2A               	subwf	i2___ftge@ff1,w,c
 26185  0153A4  502E               	movf	i2___ftge@ff2+1,w,c
 26186  0153A6  582B               	subwfb	i2___ftge@ff1+1,w,c
 26187  0153A8  502F               	movf	i2___ftge@ff2+2,w,c
 26188  0153AA  582C               	subwfb	i2___ftge@ff1+2,w,c
 26189  0153AC  B0D8               	btfsc	status,0,c
 26190  0153AE  D002               	goto	i2l11719
 26191  0153B0  90D8               	bcf	status,0,c
 26192  0153B2  0012               	return	
 26193  0153B4                     i2l11719:
 26194  0153B4  80D8               	bsf	status,0,c
 26195  0153B6  0012               	return	
 26196  0153B8                     __end_ofi2___ftge:
 26197                           	opt stack 0
 26198                           tosu	equ	0xFFF
 26199                           tosh	equ	0xFFE
 26200                           tosl	equ	0xFFD
 26201                           pclatu	equ	0xFFB
 26202                           pclath	equ	0xFFA
 26203                           tblptru	equ	0xFF8
 26204                           tblptrh	equ	0xFF7
 26205                           tblptrl	equ	0xFF6
 26206                           tablat	equ	0xFF5
 26207                           prodh	equ	0xFF4
 26208                           prodl	equ	0xFF3
 26209                           intcon	equ	0xFF2
 26210                           postinc0	equ	0xFEE
 26211                           fsr0h	equ	0xFEA
 26212                           fsr0l	equ	0xFE9
 26213                           wreg	equ	0xFE8
 26214                           indf1	equ	0xFE7
 26215                           postdec1	equ	0xFE5
 26216                           fsr1h	equ	0xFE2
 26217                           fsr1l	equ	0xFE1
 26218                           bsr	equ	0xFE0
 26219                           indf2	equ	0xFDF
 26220                           postinc2	equ	0xFDE
 26221                           postdec2	equ	0xFDD
 26222                           fsr2h	equ	0xFDA
 26223                           fsr2l	equ	0xFD9
 26224                           status	equ	0xFD8
 26225                           
 26226 ;; *************** function _frexp *****************
 26227 ;; Defined at:
 26228 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 26229 ;; Parameters:    Size  Location     Type
 26230 ;;  value           3    0[COMRAM] float 
 26231 ;;  eptr            2    3[COMRAM] PTR int 
 26232 ;;		 -> floor@expon(2), 
 26233 ;; Auto vars:     Size  Location     Type
 26234 ;;		None
 26235 ;; Return value:  Size  Location     Type
 26236 ;;                  3    0[COMRAM] PTR int 
 26237 ;; Registers used:
 26238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26239 ;; Tracked objects:
 26240 ;;		On entry : 0/0
 26241 ;;		On exit  : 0/0
 26242 ;;		Unchanged: 0/0
 26243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26244 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26247 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26248 ;;Total ram usage:        7 bytes
 26249 ;; Hardware stack levels used:    1
 26250 ;; This function calls:
 26251 ;;		Nothing
 26252 ;; This function is called by:
 26253 ;;		_floor
 26254 ;; This function uses a non-reentrant model
 26255 ;;
 26256                           
 26257                           	psect	text103
 26258  015654                     __ptext103:
 26259                           	opt stack 0
 26260  015654                     _frexp:
 26261                           	opt stack 12
 26262                           
 26263                           ;incstack = 0
 26264  015654  5001               	movf	frexp@value,w,c
 26265  015656  1002               	iorwf	frexp@value+1,w,c
 26266  015658  1003               	iorwf	frexp@value+2,w,c
 26267  01565A  A4D8               	btfss	status,2,c
 26268  01565C  D009               	goto	i2l1943
 26269  01565E  C004  FFD9         	movff	frexp@eptr,fsr2l
 26270  015662  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 26271  015666  0E00               	movlw	0
 26272  015668  6EDE               	movwf	postinc2,c
 26273  01566A  0E00               	movlw	0
 26274  01566C  6EDD               	movwf	postdec2,c
 26275                           
 26276                           ;	Return value of _frexp is never used
 26277  01566E  0012               	return	
 26278  015670                     i2l1943:
 26279  015670  5003               	movf	frexp@value+2,w,c
 26280  015672  0B7F               	andlw	127
 26281  015674  6E06               	movwf	??_frexp& (0+255),c
 26282  015676  6A07               	clrf	(??_frexp+1)& (0+255),c
 26283  015678  90D8               	bcf	status,0,c
 26284  01567A  3606               	rlcf	??_frexp,f,c
 26285  01567C  3607               	rlcf	??_frexp+1,f,c
 26286  01567E  C004  FFD9         	movff	frexp@eptr,fsr2l
 26287  015682  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 26288  015686  C006  FFDE         	movff	??_frexp,postinc2
 26289  01568A  C007  FFDD         	movff	??_frexp+1,postdec2
 26290  01568E  AE02               	btfss	frexp@value+1,7,c
 26291  015690  D003               	goto	i2u1523_40
 26292  015692  6A06               	clrf	??_frexp& (0+255),c
 26293  015694  2A06               	incf	??_frexp& (0+255),f,c
 26294  015696  D001               	goto	i2u1523_48
 26295  015698                     i2u1523_40:
 26296  015698  6A06               	clrf	??_frexp& (0+255),c
 26297  01569A                     i2u1523_48:
 26298  01569A  5006               	movf	??_frexp,w,c
 26299  01569C  C004  FFD9         	movff	frexp@eptr,fsr2l
 26300  0156A0  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 26301  0156A4  12DE               	iorwf	postinc2,f,c
 26302  0156A6  0E00               	movlw	0
 26303  0156A8  12DD               	iorwf	postdec2,f,c
 26304  0156AA  C004  FFD9         	movff	frexp@eptr,fsr2l
 26305  0156AE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 26306  0156B2  0E82               	movlw	130
 26307  0156B4  26DE               	addwf	postinc2,f,c
 26308  0156B6  0EFF               	movlw	255
 26309  0156B8  22DD               	addwfc	postdec2,f,c
 26310  0156BA  8003               	bsf	frexp@value+2,0,c
 26311  0156BC  8203               	bsf	frexp@value+2,1,c
 26312  0156BE  8403               	bsf	frexp@value+2,2,c
 26313  0156C0  8603               	bsf	frexp@value+2,3,c
 26314  0156C2  8803               	bsf	frexp@value+2,4,c
 26315  0156C4  8A03               	bsf	frexp@value+2,5,c
 26316  0156C6  9C03               	bcf	frexp@value+2,6,c
 26317  0156C8  9E02               	bcf	frexp@value+1,7,c
 26318  0156CA  0012               	return	
 26319  0156CC                     __end_of_frexp:
 26320                           	opt stack 0
 26321                           tosu	equ	0xFFF
 26322                           tosh	equ	0xFFE
 26323                           tosl	equ	0xFFD
 26324                           pclatu	equ	0xFFB
 26325                           pclath	equ	0xFFA
 26326                           tblptru	equ	0xFF8
 26327                           tblptrh	equ	0xFF7
 26328                           tblptrl	equ	0xFF6
 26329                           tablat	equ	0xFF5
 26330                           prodh	equ	0xFF4
 26331                           prodl	equ	0xFF3
 26332                           intcon	equ	0xFF2
 26333                           postinc0	equ	0xFEE
 26334                           fsr0h	equ	0xFEA
 26335                           fsr0l	equ	0xFE9
 26336                           wreg	equ	0xFE8
 26337                           indf1	equ	0xFE7
 26338                           postdec1	equ	0xFE5
 26339                           fsr1h	equ	0xFE2
 26340                           fsr1l	equ	0xFE1
 26341                           bsr	equ	0xFE0
 26342                           indf2	equ	0xFDF
 26343                           postinc2	equ	0xFDE
 26344                           postdec2	equ	0xFDD
 26345                           fsr2h	equ	0xFDA
 26346                           fsr2l	equ	0xFD9
 26347                           status	equ	0xFD8
 26348                           
 26349 ;; *************** function ___altoft *****************
 26350 ;; Defined at:
 26351 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 26352 ;; Parameters:    Size  Location     Type
 26353 ;;  c               4   75[COMRAM] long 
 26354 ;; Auto vars:     Size  Location     Type
 26355 ;;  sign            1   84[COMRAM] unsigned char 
 26356 ;;  exp             1   83[COMRAM] unsigned char 
 26357 ;; Return value:  Size  Location     Type
 26358 ;;                  3   75[COMRAM] float 
 26359 ;; Registers used:
 26360 ;;		wreg, status,2, status,0, cstack
 26361 ;; Tracked objects:
 26362 ;;		On entry : 0/0
 26363 ;;		On exit  : 0/0
 26364 ;;		Unchanged: 0/0
 26365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26369 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26370 ;;Total ram usage:       10 bytes
 26371 ;; Hardware stack levels used:    1
 26372 ;; Hardware stack levels required when called:    1
 26373 ;; This function calls:
 26374 ;;		i2___ftpack
 26375 ;; This function is called by:
 26376 ;;		_floor
 26377 ;; This function uses a non-reentrant model
 26378 ;;
 26379                           
 26380                           	psect	text104
 26381  0156CC                     __ptext104:
 26382                           	opt stack 0
 26383  0156CC                     ___altoft:
 26384                           	opt stack 11
 26385                           
 26386                           ;incstack = 0
 26387  0156CC  0E00               	movlw	0
 26388  0156CE  6E55               	movwf	___altoft@sign,c
 26389  0156D0  0E8E               	movlw	142
 26390  0156D2  6E54               	movwf	___altoft@exp,c
 26391  0156D4  AE4F               	btfss	___altoft@c+3,7,c
 26392  0156D6  D011               	goto	i2l1276
 26393  0156D8  1E4F               	comf	___altoft@c+3,f,c
 26394  0156DA  1E4E               	comf	___altoft@c+2,f,c
 26395  0156DC  1E4D               	comf	___altoft@c+1,f,c
 26396  0156DE  6C4C               	negf	___altoft@c,c
 26397  0156E0  0E00               	movlw	0
 26398  0156E2  224D               	addwfc	___altoft@c+1,f,c
 26399  0156E4  224E               	addwfc	___altoft@c+2,f,c
 26400  0156E6  224F               	addwfc	___altoft@c+3,f,c
 26401  0156E8  0E01               	movlw	1
 26402  0156EA  6E55               	movwf	___altoft@sign,c
 26403  0156EC  D006               	goto	i2l1276
 26404  0156EE  90D8               	bcf	status,0,c
 26405  0156F0  324F               	rrcf	___altoft@c+3,f,c
 26406  0156F2  324E               	rrcf	___altoft@c+2,f,c
 26407  0156F4  324D               	rrcf	___altoft@c+1,f,c
 26408  0156F6  324C               	rrcf	___altoft@c,f,c
 26409  0156F8  2A54               	incf	___altoft@exp,f,c
 26410  0156FA                     i2l1276:
 26411  0156FA  0E00               	movlw	0
 26412  0156FC  144C               	andwf	___altoft@c,w,c
 26413  0156FE  6E50               	movwf	??___altoft& (0+255),c
 26414  015700  0E00               	movlw	0
 26415  015702  144D               	andwf	___altoft@c+1,w,c
 26416  015704  6E51               	movwf	(??___altoft+1)& (0+255),c
 26417  015706  0E00               	movlw	0
 26418  015708  144E               	andwf	___altoft@c+2,w,c
 26419  01570A  6E52               	movwf	(??___altoft+2)& (0+255),c
 26420  01570C  0EFF               	movlw	255
 26421  01570E  144F               	andwf	___altoft@c+3,w,c
 26422  015710  6E53               	movwf	(??___altoft+3)& (0+255),c
 26423  015712  5050               	movf	??___altoft,w,c
 26424  015714  1051               	iorwf	??___altoft+1,w,c
 26425  015716  1052               	iorwf	??___altoft+2,w,c
 26426  015718  1053               	iorwf	??___altoft+3,w,c
 26427  01571A  A4D8               	btfss	status,2,c
 26428  01571C  D7E8               	goto	i2l1277
 26429  01571E  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 26430  015722  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 26431  015726  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 26432  01572A  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 26433  01572E  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 26434  015732  EC06  F0A8         	call	i2___ftpack	;wreg free
 26435  015736  C001  F04C         	movff	?i2___ftpack,?___altoft
 26436  01573A  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 26437  01573E  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 26438  015742  0012               	return	
 26439  015744                     __end_of___altoft:
 26440                           	opt stack 0
 26441                           tosu	equ	0xFFF
 26442                           tosh	equ	0xFFE
 26443                           tosl	equ	0xFFD
 26444                           pclatu	equ	0xFFB
 26445                           pclath	equ	0xFFA
 26446                           tblptru	equ	0xFF8
 26447                           tblptrh	equ	0xFF7
 26448                           tblptrl	equ	0xFF6
 26449                           tablat	equ	0xFF5
 26450                           prodh	equ	0xFF4
 26451                           prodl	equ	0xFF3
 26452                           intcon	equ	0xFF2
 26453                           postinc0	equ	0xFEE
 26454                           fsr0h	equ	0xFEA
 26455                           fsr0l	equ	0xFE9
 26456                           wreg	equ	0xFE8
 26457                           indf1	equ	0xFE7
 26458                           postdec1	equ	0xFE5
 26459                           fsr1h	equ	0xFE2
 26460                           fsr1l	equ	0xFE1
 26461                           bsr	equ	0xFE0
 26462                           indf2	equ	0xFDF
 26463                           postinc2	equ	0xFDE
 26464                           postdec2	equ	0xFDD
 26465                           fsr2h	equ	0xFDA
 26466                           fsr2l	equ	0xFD9
 26467                           status	equ	0xFD8
 26468                           
 26469 ;; *************** function _eval_poly *****************
 26470 ;; Defined at:
 26471 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 26472 ;; Parameters:    Size  Location     Type
 26473 ;;  x               3   75[COMRAM] float 
 26474 ;;  d               2   78[COMRAM] PTR const 
 26475 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 26476 ;;  n               2   80[COMRAM] int 
 26477 ;; Auto vars:     Size  Location     Type
 26478 ;;  res             3   84[COMRAM] int 
 26479 ;; Return value:  Size  Location     Type
 26480 ;;                  3   75[COMRAM] int 
 26481 ;; Registers used:
 26482 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26483 ;; Tracked objects:
 26484 ;;		On entry : 0/0
 26485 ;;		On exit  : 0/0
 26486 ;;		Unchanged: 0/0
 26487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26488 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26489 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26491 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26492 ;;Total ram usage:       12 bytes
 26493 ;; Hardware stack levels used:    1
 26494 ;; Hardware stack levels required when called:    2
 26495 ;; This function calls:
 26496 ;;		i2___ftadd
 26497 ;;		i2___ftmul
 26498 ;;		i2___wmul
 26499 ;; This function is called by:
 26500 ;;		_atan
 26501 ;;		_sin
 26502 ;; This function uses a non-reentrant model
 26503 ;;
 26504                           
 26505                           	psect	text105
 26506  014CDE                     __ptext105:
 26507                           	opt stack 0
 26508  014CDE                     _eval_poly:
 26509                           	opt stack 11
 26510                           
 26511                           ;incstack = 0
 26512  014CDE  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 26513  014CE2  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 26514  014CE6  0E00               	movlw	0
 26515  014CE8  6E12               	movwf	i2___wmul@multiplicand+1,c
 26516  014CEA  0E03               	movlw	3
 26517  014CEC  6E11               	movwf	i2___wmul@multiplicand,c
 26518  014CEE  EC1D  F0B1         	call	i2___wmul	;wreg free
 26519  014CF2  C04F  F053         	movff	eval_poly@d,??_eval_poly
 26520  014CF6  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 26521  014CFA  500F               	movf	?i2___wmul,w,c
 26522  014CFC  2653               	addwf	??_eval_poly,f,c
 26523  014CFE  5010               	movf	?i2___wmul+1,w,c
 26524  014D00  2254               	addwfc	??_eval_poly+1,f,c
 26525  014D02  C053  FFF6         	movff	??_eval_poly,tblptrl
 26526  014D06  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 26527  014D0A                     	if	0	;tblptru may be non-zero
 26528  014D0A                     	endif
 26529  014D0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26530  014D0A  0E00               	movlw	low (__mediumconst shr (0+16))
 26531  014D0C  6EF8               	movwf	tblptru,c
 26532  014D0E                     	endif
 26533  014D0E  0009               	tblrd		*+
 26534  014D10  CFF5 F055          	movff	tablat,eval_poly@res
 26535  014D14  0009               	tblrd		*+
 26536  014D16  CFF5 F056          	movff	tablat,eval_poly@res+1
 26537  014D1A  000A               	tblrd		*-
 26538  014D1C  CFF5 F057          	movff	tablat,eval_poly@res+2
 26539  014D20  D040               	goto	i2l1440
 26540  014D22  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 26541  014D26  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 26542  014D2A  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 26543  014D2E  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 26544  014D32  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 26545  014D36  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 26546  014D3A  EC9F  F0A4         	call	i2___ftmul	;wreg free
 26547  014D3E  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 26548  014D42  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 26549  014D46  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 26550  014D4A  0E00               	movlw	0
 26551  014D4C  6E12               	movwf	i2___wmul@multiplicand+1,c
 26552  014D4E  0E03               	movlw	3
 26553  014D50  6E11               	movwf	i2___wmul@multiplicand,c
 26554  014D52  0651               	decf	eval_poly@n,f,c
 26555  014D54  A0D8               	btfss	status,0,c
 26556  014D56  0652               	decf	eval_poly@n+1,f,c
 26557  014D58  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 26558  014D5C  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 26559  014D60  EC1D  F0B1         	call	i2___wmul	;wreg free
 26560  014D64  C04F  F053         	movff	eval_poly@d,??_eval_poly
 26561  014D68  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 26562  014D6C  500F               	movf	?i2___wmul,w,c
 26563  014D6E  2653               	addwf	??_eval_poly,f,c
 26564  014D70  5010               	movf	?i2___wmul+1,w,c
 26565  014D72  2254               	addwfc	??_eval_poly+1,f,c
 26566  014D74  C053  FFF6         	movff	??_eval_poly,tblptrl
 26567  014D78  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 26568  014D7C                     	if	0	;tblptru may be non-zero
 26569  014D7C                     	endif
 26570  014D7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26571  014D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 26572  014D7E  6EF8               	movwf	tblptru,c
 26573  014D80                     	endif
 26574  014D80  0009               	tblrd		*+
 26575  014D82  CFF5 F043          	movff	tablat,i2___ftadd@f2
 26576  014D86  0009               	tblrd		*+
 26577  014D88  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 26578  014D8C  000A               	tblrd		*-
 26579  014D8E  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 26580  014D92  ECA5  F09E         	call	i2___ftadd	;wreg free
 26581  014D96  C040  F055         	movff	?i2___ftadd,eval_poly@res
 26582  014D9A  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 26583  014D9E  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 26584  014DA2                     i2l1440:
 26585  014DA2  5051               	movf	eval_poly@n,w,c
 26586  014DA4  1052               	iorwf	eval_poly@n+1,w,c
 26587  014DA6  A4D8               	btfss	status,2,c
 26588  014DA8  D7BC               	goto	i2l1441
 26589  014DAA  C055  F04C         	movff	eval_poly@res,?_eval_poly
 26590  014DAE  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 26591  014DB2  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 26592  014DB6  0012               	return		;funcret
 26593  014DB8                     __end_of_eval_poly:
 26594                           	opt stack 0
 26595                           tosu	equ	0xFFF
 26596                           tosh	equ	0xFFE
 26597                           tosl	equ	0xFFD
 26598                           pclatu	equ	0xFFB
 26599                           pclath	equ	0xFFA
 26600                           tblptru	equ	0xFF8
 26601                           tblptrh	equ	0xFF7
 26602                           tblptrl	equ	0xFF6
 26603                           tablat	equ	0xFF5
 26604                           prodh	equ	0xFF4
 26605                           prodl	equ	0xFF3
 26606                           intcon	equ	0xFF2
 26607                           postinc0	equ	0xFEE
 26608                           fsr0h	equ	0xFEA
 26609                           fsr0l	equ	0xFE9
 26610                           wreg	equ	0xFE8
 26611                           indf1	equ	0xFE7
 26612                           postdec1	equ	0xFE5
 26613                           fsr1h	equ	0xFE2
 26614                           fsr1l	equ	0xFE1
 26615                           bsr	equ	0xFE0
 26616                           indf2	equ	0xFDF
 26617                           postinc2	equ	0xFDE
 26618                           postdec2	equ	0xFDD
 26619                           fsr2h	equ	0xFDA
 26620                           fsr2l	equ	0xFD9
 26621                           status	equ	0xFD8
 26622                           
 26623 ;; *************** function i2___wmul *****************
 26624 ;; Defined at:
 26625 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 26626 ;; Parameters:    Size  Location     Type
 26627 ;;  multiplier      2   14[COMRAM] unsigned int 
 26628 ;;  multiplicand    2   16[COMRAM] unsigned int 
 26629 ;; Auto vars:     Size  Location     Type
 26630 ;;  __wmul          2   18[COMRAM] unsigned int 
 26631 ;; Return value:  Size  Location     Type
 26632 ;;                  2   14[COMRAM] unsigned int 
 26633 ;; Registers used:
 26634 ;;		wreg, status,2, status,0, prodl, prodh
 26635 ;; Tracked objects:
 26636 ;;		On entry : 0/0
 26637 ;;		On exit  : 0/0
 26638 ;;		Unchanged: 0/0
 26639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26643 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26644 ;;Total ram usage:        6 bytes
 26645 ;; Hardware stack levels used:    1
 26646 ;; This function calls:
 26647 ;;		Nothing
 26648 ;; This function is called by:
 26649 ;;		_eval_poly
 26650 ;;		i2_fround
 26651 ;;		i2_scale
 26652 ;;		i2_printf
 26653 ;; This function uses a non-reentrant model
 26654 ;;
 26655                           
 26656                           	psect	text106
 26657  01623A                     __ptext106:
 26658                           	opt stack 0
 26659  01623A                     i2___wmul:
 26660                           	opt stack 14
 26661                           
 26662                           ;incstack = 0
 26663  01623A  500F               	movf	i2___wmul@multiplier,w,c
 26664  01623C  0211               	mulwf	i2___wmul@multiplicand,c
 26665  01623E  CFF3 F013          	movff	prodl,i2___wmul@product
 26666  016242  CFF4 F014          	movff	prodh,i2___wmul@product+1
 26667  016246  500F               	movf	i2___wmul@multiplier,w,c
 26668  016248  0212               	mulwf	i2___wmul@multiplicand+1,c
 26669  01624A  50F3               	movf	prodl,w,c
 26670  01624C  2614               	addwf	i2___wmul@product+1,f,c
 26671  01624E  5010               	movf	i2___wmul@multiplier+1,w,c
 26672  016250  0211               	mulwf	i2___wmul@multiplicand,c
 26673  016252  50F3               	movf	prodl,w,c
 26674  016254  2614               	addwf	i2___wmul@product+1,f,c
 26675  016256  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 26676  01625A  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 26677  01625E  0012               	return	
 26678  016260                     __end_ofi2___wmul:
 26679                           	opt stack 0
 26680                           tosu	equ	0xFFF
 26681                           tosh	equ	0xFFE
 26682                           tosl	equ	0xFFD
 26683                           pclatu	equ	0xFFB
 26684                           pclath	equ	0xFFA
 26685                           tblptru	equ	0xFF8
 26686                           tblptrh	equ	0xFF7
 26687                           tblptrl	equ	0xFF6
 26688                           tablat	equ	0xFF5
 26689                           prodh	equ	0xFF4
 26690                           prodl	equ	0xFF3
 26691                           intcon	equ	0xFF2
 26692                           postinc0	equ	0xFEE
 26693                           fsr0h	equ	0xFEA
 26694                           fsr0l	equ	0xFE9
 26695                           wreg	equ	0xFE8
 26696                           indf1	equ	0xFE7
 26697                           postdec1	equ	0xFE5
 26698                           fsr1h	equ	0xFE2
 26699                           fsr1l	equ	0xFE1
 26700                           bsr	equ	0xFE0
 26701                           indf2	equ	0xFDF
 26702                           postinc2	equ	0xFDE
 26703                           postdec2	equ	0xFDD
 26704                           fsr2h	equ	0xFDA
 26705                           fsr2l	equ	0xFD9
 26706                           status	equ	0xFD8
 26707                           
 26708 ;; *************** function i2___ftmul *****************
 26709 ;; Defined at:
 26710 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 26711 ;; Parameters:    Size  Location     Type
 26712 ;;  f1              3   38[COMRAM] float 
 26713 ;;  f2              3   41[COMRAM] float 
 26714 ;; Auto vars:     Size  Location     Type
 26715 ;;  __ftmul         3   48[COMRAM] unsigned um
 26716 ;;  __ftmul         1   52[COMRAM] unsigned char 
 26717 ;;  __ftmul         1   51[COMRAM] unsigned char 
 26718 ;;  __ftmul         1   47[COMRAM] unsigned char 
 26719 ;; Return value:  Size  Location     Type
 26720 ;;                  3   38[COMRAM] float 
 26721 ;; Registers used:
 26722 ;;		wreg, status,2, status,0, cstack
 26723 ;; Tracked objects:
 26724 ;;		On entry : 0/0
 26725 ;;		On exit  : 0/0
 26726 ;;		Unchanged: 0/0
 26727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26728 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26729 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26730 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26731 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26732 ;;Total ram usage:       15 bytes
 26733 ;; Hardware stack levels used:    1
 26734 ;; Hardware stack levels required when called:    1
 26735 ;; This function calls:
 26736 ;;		i2___ftpack
 26737 ;; This function is called by:
 26738 ;;		_peakToRMS
 26739 ;;		_ADC_postProcessingCallback
 26740 ;;		_asin
 26741 ;;		_atan
 26742 ;;		_eval_poly
 26743 ;;		_sin
 26744 ;;		_sqrt
 26745 ;;		i2_fround
 26746 ;;		i2_scale
 26747 ;;		i2_printf
 26748 ;; This function uses a non-reentrant model
 26749 ;;
 26750                           
 26751                           	psect	text107
 26752  01493E                     __ptext107:
 26753                           	opt stack 0
 26754  01493E                     i2___ftmul:
 26755                           	opt stack 13
 26756                           
 26757                           ;incstack = 0
 26758  01493E  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 26759  014942  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 26760  014944  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 26761  014946  3428               	rlcf	i2___ftmul@f1+1,w,c
 26762  014948  362D               	rlcf	??i2___ftmul& (0+255),f,c
 26763  01494A  E301               	bnc	u1494_41
 26764  01494C  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 26765  01494E                     u1494_41:
 26766  01494E  502D               	movf	??i2___ftmul,w,c
 26767  014950  6E30               	movwf	i2___ftmul@exp,c
 26768  014952  5030               	movf	i2___ftmul@exp,w,c
 26769  014954  A4D8               	btfss	status,2,c
 26770  014956  D007               	goto	i2l1578
 26771  014958  0E00               	movlw	0
 26772  01495A  6E27               	movwf	?i2___ftmul,c
 26773  01495C  0E00               	movlw	0
 26774  01495E  6E28               	movwf	?i2___ftmul+1,c
 26775  014960  0E00               	movlw	0
 26776  014962  6E29               	movwf	?i2___ftmul+2,c
 26777  014964  0012               	return	
 26778  014966                     i2l1578:
 26779  014966  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 26780  01496A  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 26781  01496C  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 26782  01496E  342B               	rlcf	i2___ftmul@f2+1,w,c
 26783  014970  362D               	rlcf	??i2___ftmul& (0+255),f,c
 26784  014972  E301               	bnc	u1496_41
 26785  014974  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 26786  014976                     u1496_41:
 26787  014976  502D               	movf	??i2___ftmul,w,c
 26788  014978  6E35               	movwf	i2___ftmul@sign,c
 26789  01497A  5035               	movf	i2___ftmul@sign,w,c
 26790  01497C  A4D8               	btfss	status,2,c
 26791  01497E  D007               	goto	i2l1580
 26792  014980  0E00               	movlw	0
 26793  014982  6E27               	movwf	?i2___ftmul,c
 26794  014984  0E00               	movlw	0
 26795  014986  6E28               	movwf	?i2___ftmul+1,c
 26796  014988  0E00               	movlw	0
 26797  01498A  6E29               	movwf	?i2___ftmul+2,c
 26798  01498C  0012               	return	
 26799  01498E                     i2l1580:
 26800  01498E  5035               	movf	i2___ftmul@sign,w,c
 26801  014990  0F7B               	addlw	123
 26802  014992  2630               	addwf	i2___ftmul@exp,f,c
 26803  014994  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 26804  014998  502C               	movf	i2___ftmul@f2+2,w,c
 26805  01499A  1A35               	xorwf	i2___ftmul@sign,f,c
 26806  01499C  0E80               	movlw	128
 26807  01499E  1635               	andwf	i2___ftmul@sign,f,c
 26808  0149A0  8E28               	bsf	i2___ftmul@f1+1,7,c
 26809  0149A2  8E2B               	bsf	i2___ftmul@f2+1,7,c
 26810  0149A4  0EFF               	movlw	255
 26811  0149A6  162A               	andwf	i2___ftmul@f2,f,c
 26812  0149A8  0EFF               	movlw	255
 26813  0149AA  162B               	andwf	i2___ftmul@f2+1,f,c
 26814  0149AC  0E00               	movlw	0
 26815  0149AE  162C               	andwf	i2___ftmul@f2+2,f,c
 26816  0149B0  0E00               	movlw	0
 26817  0149B2  6E31               	movwf	i2___ftmul@f3_as_product,c
 26818  0149B4  0E00               	movlw	0
 26819  0149B6  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 26820  0149B8  0E00               	movlw	0
 26821  0149BA  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 26822  0149BC  0E07               	movlw	7
 26823  0149BE  6E34               	movwf	i2___ftmul@cntr,c
 26824  0149C0  A027               	btfss	i2___ftmul@f1,0,c
 26825  0149C2  D006               	goto	i2l1582
 26826  0149C4  502A               	movf	i2___ftmul@f2,w,c
 26827  0149C6  2631               	addwf	i2___ftmul@f3_as_product,f,c
 26828  0149C8  502B               	movf	i2___ftmul@f2+1,w,c
 26829  0149CA  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 26830  0149CC  502C               	movf	i2___ftmul@f2+2,w,c
 26831  0149CE  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 26832  0149D0                     i2l1582:
 26833  0149D0  90D8               	bcf	status,0,c
 26834  0149D2  3229               	rrcf	i2___ftmul@f1+2,f,c
 26835  0149D4  3228               	rrcf	i2___ftmul@f1+1,f,c
 26836  0149D6  3227               	rrcf	i2___ftmul@f1,f,c
 26837  0149D8  90D8               	bcf	status,0,c
 26838  0149DA  362A               	rlcf	i2___ftmul@f2,f,c
 26839  0149DC  362B               	rlcf	i2___ftmul@f2+1,f,c
 26840  0149DE  362C               	rlcf	i2___ftmul@f2+2,f,c
 26841  0149E0  2E34               	decfsz	i2___ftmul@cntr,f,c
 26842  0149E2  D7EE               	goto	i2l1581
 26843  0149E4  0E09               	movlw	9
 26844  0149E6  6E34               	movwf	i2___ftmul@cntr,c
 26845  0149E8  A027               	btfss	i2___ftmul@f1,0,c
 26846  0149EA  D006               	goto	i2l1585
 26847  0149EC  502A               	movf	i2___ftmul@f2,w,c
 26848  0149EE  2631               	addwf	i2___ftmul@f3_as_product,f,c
 26849  0149F0  502B               	movf	i2___ftmul@f2+1,w,c
 26850  0149F2  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 26851  0149F4  502C               	movf	i2___ftmul@f2+2,w,c
 26852  0149F6  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 26853  0149F8                     i2l1585:
 26854  0149F8  90D8               	bcf	status,0,c
 26855  0149FA  3229               	rrcf	i2___ftmul@f1+2,f,c
 26856  0149FC  3228               	rrcf	i2___ftmul@f1+1,f,c
 26857  0149FE  3227               	rrcf	i2___ftmul@f1,f,c
 26858  014A00  90D8               	bcf	status,0,c
 26859  014A02  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 26860  014A04  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 26861  014A06  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 26862  014A08  2E34               	decfsz	i2___ftmul@cntr,f,c
 26863  014A0A  D7EE               	goto	i2l1584
 26864  014A0C  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 26865  014A10  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 26866  014A14  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 26867  014A18  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 26868  014A1C  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 26869  014A20  EC06  F0A8         	call	i2___ftpack	;wreg free
 26870  014A24  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 26871  014A28  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 26872  014A2C  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 26873  014A30  0012               	return	
 26874  014A32                     __end_ofi2___ftmul:
 26875                           	opt stack 0
 26876                           tosu	equ	0xFFF
 26877                           tosh	equ	0xFFE
 26878                           tosl	equ	0xFFD
 26879                           pclatu	equ	0xFFB
 26880                           pclath	equ	0xFFA
 26881                           tblptru	equ	0xFF8
 26882                           tblptrh	equ	0xFF7
 26883                           tblptrl	equ	0xFF6
 26884                           tablat	equ	0xFF5
 26885                           prodh	equ	0xFF4
 26886                           prodl	equ	0xFF3
 26887                           intcon	equ	0xFF2
 26888                           postinc0	equ	0xFEE
 26889                           fsr0h	equ	0xFEA
 26890                           fsr0l	equ	0xFE9
 26891                           wreg	equ	0xFE8
 26892                           indf1	equ	0xFE7
 26893                           postdec1	equ	0xFE5
 26894                           fsr1h	equ	0xFE2
 26895                           fsr1l	equ	0xFE1
 26896                           bsr	equ	0xFE0
 26897                           indf2	equ	0xFDF
 26898                           postinc2	equ	0xFDE
 26899                           postdec2	equ	0xFDD
 26900                           fsr2h	equ	0xFDA
 26901                           fsr2l	equ	0xFD9
 26902                           status	equ	0xFD8
 26903                           
 26904 ;; *************** function i2___ftadd *****************
 26905 ;; Defined at:
 26906 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 26907 ;; Parameters:    Size  Location     Type
 26908 ;;  f1              3   63[COMRAM] float 
 26909 ;;  f2              3   66[COMRAM] float 
 26910 ;; Auto vars:     Size  Location     Type
 26911 ;;  __ftadd         1   74[COMRAM] unsigned char 
 26912 ;;  __ftadd         1   73[COMRAM] unsigned char 
 26913 ;;  __ftadd         1   72[COMRAM] unsigned char 
 26914 ;; Return value:  Size  Location     Type
 26915 ;;                  3   63[COMRAM] float 
 26916 ;; Registers used:
 26917 ;;		wreg, status,2, status,0, cstack
 26918 ;; Tracked objects:
 26919 ;;		On entry : 0/0
 26920 ;;		On exit  : 0/0
 26921 ;;		Unchanged: 0/0
 26922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26923 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26924 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26925 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26926 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26927 ;;Total ram usage:       12 bytes
 26928 ;; Hardware stack levels used:    1
 26929 ;; Hardware stack levels required when called:    1
 26930 ;; This function calls:
 26931 ;;		i2___ftpack
 26932 ;; This function is called by:
 26933 ;;		_peakToRMS
 26934 ;;		_ADC_postProcessingCallback
 26935 ;;		_acos
 26936 ;;		_asin
 26937 ;;		_atan
 26938 ;;		_eval_poly
 26939 ;;		_sin
 26940 ;;		_floor
 26941 ;;		i2_printf
 26942 ;;		i2___ftsub
 26943 ;; This function uses a non-reentrant model
 26944 ;;
 26945                           
 26946                           	psect	text108
 26947  013D4A                     __ptext108:
 26948                           	opt stack 0
 26949  013D4A                     i2___ftadd:
 26950                           	opt stack 13
 26951                           
 26952                           ;incstack = 0
 26953  013D4A  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 26954  013D4E  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 26955  013D50  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 26956  013D52  3441               	rlcf	i2___ftadd@f1+1,w,c
 26957  013D54  3646               	rlcf	??i2___ftadd& (0+255),f,c
 26958  013D56  E301               	bnc	u1473_41
 26959  013D58  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 26960  013D5A                     u1473_41:
 26961  013D5A  5046               	movf	??i2___ftadd,w,c
 26962  013D5C  6E4B               	movwf	i2___ftadd@exp1,c
 26963  013D5E  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 26964  013D62  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 26965  013D64  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 26966  013D66  3444               	rlcf	i2___ftadd@f2+1,w,c
 26967  013D68  3646               	rlcf	??i2___ftadd& (0+255),f,c
 26968  013D6A  E301               	bnc	u1474_41
 26969  013D6C  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 26970  013D6E                     u1474_41:
 26971  013D6E  5046               	movf	??i2___ftadd,w,c
 26972  013D70  6E4A               	movwf	i2___ftadd@exp2,c
 26973  013D72  504B               	movf	i2___ftadd@exp1,w,c
 26974  013D74  B4D8               	btfsc	status,2,c
 26975  013D76  D00B               	goto	i2u1477_40
 26976  013D78  504A               	movf	i2___ftadd@exp2,w,c
 26977  013D7A  5C4B               	subwf	i2___ftadd@exp1,w,c
 26978  013D7C  B0D8               	btfsc	status,0,c
 26979  013D7E  D00E               	goto	i2l1513
 26980  013D80  504B               	movf	i2___ftadd@exp1,w,c
 26981  013D82  0800               	sublw	0
 26982  013D84  244A               	addwf	i2___ftadd@exp2,w,c
 26983  013D86  6E46               	movwf	??i2___ftadd& (0+255),c
 26984  013D88  0E18               	movlw	24
 26985  013D8A  6446               	cpfsgt	??i2___ftadd,c
 26986  013D8C  D007               	goto	i2l1513
 26987  013D8E                     i2u1477_40:
 26988  013D8E  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 26989  013D92  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 26990  013D96  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 26991  013D9A  0012               	return	
 26992  013D9C                     i2l1513:
 26993  013D9C  504A               	movf	i2___ftadd@exp2,w,c
 26994  013D9E  B4D8               	btfsc	status,2,c
 26995  013DA0  D00B               	goto	i2u1480_40
 26996  013DA2  504B               	movf	i2___ftadd@exp1,w,c
 26997  013DA4  5C4A               	subwf	i2___ftadd@exp2,w,c
 26998  013DA6  B0D8               	btfsc	status,0,c
 26999  013DA8  D00E               	goto	i2l1517
 27000  013DAA  504A               	movf	i2___ftadd@exp2,w,c
 27001  013DAC  0800               	sublw	0
 27002  013DAE  244B               	addwf	i2___ftadd@exp1,w,c
 27003  013DB0  6E46               	movwf	??i2___ftadd& (0+255),c
 27004  013DB2  0E18               	movlw	24
 27005  013DB4  6446               	cpfsgt	??i2___ftadd,c
 27006  013DB6  D007               	goto	i2l1517
 27007  013DB8                     i2u1480_40:
 27008  013DB8  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 27009  013DBC  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 27010  013DC0  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 27011  013DC4  0012               	return	
 27012  013DC6                     i2l1517:
 27013  013DC6  0E06               	movlw	6
 27014  013DC8  6E49               	movwf	i2___ftadd@sign,c
 27015  013DCA  BE42               	btfsc	i2___ftadd@f1+2,7,c
 27016  013DCC  8E49               	bsf	i2___ftadd@sign,7,c
 27017  013DCE  BE45               	btfsc	i2___ftadd@f2+2,7,c
 27018  013DD0  8C49               	bsf	i2___ftadd@sign,6,c
 27019  013DD2  8E41               	bsf	i2___ftadd@f1+1,7,c
 27020  013DD4  0EFF               	movlw	255
 27021  013DD6  1640               	andwf	i2___ftadd@f1,f,c
 27022  013DD8  0EFF               	movlw	255
 27023  013DDA  1641               	andwf	i2___ftadd@f1+1,f,c
 27024  013DDC  0E00               	movlw	0
 27025  013DDE  1642               	andwf	i2___ftadd@f1+2,f,c
 27026  013DE0  8E44               	bsf	i2___ftadd@f2+1,7,c
 27027  013DE2  0EFF               	movlw	255
 27028  013DE4  1643               	andwf	i2___ftadd@f2,f,c
 27029  013DE6  0EFF               	movlw	255
 27030  013DE8  1644               	andwf	i2___ftadd@f2+1,f,c
 27031  013DEA  0E00               	movlw	0
 27032  013DEC  1645               	andwf	i2___ftadd@f2+2,f,c
 27033  013DEE  504A               	movf	i2___ftadd@exp2,w,c
 27034  013DF0  5C4B               	subwf	i2___ftadd@exp1,w,c
 27035  013DF2  B0D8               	btfsc	status,0,c
 27036  013DF4  D01B               	goto	i2l1522
 27037  013DF6                     i2u1483_40:
 27038  013DF6  90D8               	bcf	status,0,c
 27039  013DF8  3643               	rlcf	i2___ftadd@f2,f,c
 27040  013DFA  3644               	rlcf	i2___ftadd@f2+1,f,c
 27041  013DFC  3645               	rlcf	i2___ftadd@f2+2,f,c
 27042  013DFE  064A               	decf	i2___ftadd@exp2,f,c
 27043  013E00  504B               	movf	i2___ftadd@exp1,w,c
 27044  013E02  184A               	xorwf	i2___ftadd@exp2,w,c
 27045  013E04  B4D8               	btfsc	status,2,c
 27046  013E06  D00D               	goto	i2l1527
 27047  013E08  0649               	decf	i2___ftadd@sign,f,c
 27048  013E0A  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 27049  013E0E  0E07               	movlw	7
 27050  013E10  1646               	andwf	??i2___ftadd,f,c
 27051  013E12  B4D8               	btfsc	status,2,c
 27052  013E14  D006               	goto	i2l1527
 27053  013E16  D7EF               	goto	i2u1483_40
 27054  013E18  90D8               	bcf	status,0,c
 27055  013E1A  3242               	rrcf	i2___ftadd@f1+2,f,c
 27056  013E1C  3241               	rrcf	i2___ftadd@f1+1,f,c
 27057  013E1E  3240               	rrcf	i2___ftadd@f1,f,c
 27058  013E20  2A4B               	incf	i2___ftadd@exp1,f,c
 27059  013E22                     i2l1527:
 27060  013E22  504A               	movf	i2___ftadd@exp2,w,c
 27061  013E24  184B               	xorwf	i2___ftadd@exp1,w,c
 27062  013E26  B4D8               	btfsc	status,2,c
 27063  013E28  D01F               	goto	i2u1490_40
 27064  013E2A  D7F6               	goto	i2l1528
 27065  013E2C                     i2l1522:
 27066  013E2C  504B               	movf	i2___ftadd@exp1,w,c
 27067  013E2E  5C4A               	subwf	i2___ftadd@exp2,w,c
 27068  013E30  B0D8               	btfsc	status,0,c
 27069  013E32  D01A               	goto	i2u1490_40
 27070  013E34                     i2u1487_40:
 27071  013E34  90D8               	bcf	status,0,c
 27072  013E36  3640               	rlcf	i2___ftadd@f1,f,c
 27073  013E38  3641               	rlcf	i2___ftadd@f1+1,f,c
 27074  013E3A  3642               	rlcf	i2___ftadd@f1+2,f,c
 27075  013E3C  064B               	decf	i2___ftadd@exp1,f,c
 27076  013E3E  504B               	movf	i2___ftadd@exp1,w,c
 27077  013E40  184A               	xorwf	i2___ftadd@exp2,w,c
 27078  013E42  B4D8               	btfsc	status,2,c
 27079  013E44  D00D               	goto	i2l1536
 27080  013E46  0649               	decf	i2___ftadd@sign,f,c
 27081  013E48  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 27082  013E4C  0E07               	movlw	7
 27083  013E4E  1646               	andwf	??i2___ftadd,f,c
 27084  013E50  B4D8               	btfsc	status,2,c
 27085  013E52  D006               	goto	i2l1536
 27086  013E54  D7EF               	goto	i2u1487_40
 27087  013E56  90D8               	bcf	status,0,c
 27088  013E58  3245               	rrcf	i2___ftadd@f2+2,f,c
 27089  013E5A  3244               	rrcf	i2___ftadd@f2+1,f,c
 27090  013E5C  3243               	rrcf	i2___ftadd@f2,f,c
 27091  013E5E  2A4A               	incf	i2___ftadd@exp2,f,c
 27092  013E60                     i2l1536:
 27093  013E60  504A               	movf	i2___ftadd@exp2,w,c
 27094  013E62  184B               	xorwf	i2___ftadd@exp1,w,c
 27095  013E64  A4D8               	btfss	status,2,c
 27096  013E66  D7F7               	goto	i2l1537
 27097  013E68                     i2u1490_40:
 27098  013E68  AE49               	btfss	i2___ftadd@sign,7,c
 27099  013E6A  D00C               	goto	i2l1539
 27100  013E6C  0EFF               	movlw	255
 27101  013E6E  1A40               	xorwf	i2___ftadd@f1,f,c
 27102  013E70  0EFF               	movlw	255
 27103  013E72  1A41               	xorwf	i2___ftadd@f1+1,f,c
 27104  013E74  0EFF               	movlw	255
 27105  013E76  1A42               	xorwf	i2___ftadd@f1+2,f,c
 27106  013E78  0E01               	movlw	1
 27107  013E7A  2640               	addwf	i2___ftadd@f1,f,c
 27108  013E7C  0E00               	movlw	0
 27109  013E7E  2241               	addwfc	i2___ftadd@f1+1,f,c
 27110  013E80  0E00               	movlw	0
 27111  013E82  2242               	addwfc	i2___ftadd@f1+2,f,c
 27112  013E84                     i2l1539:
 27113  013E84  AC49               	btfss	i2___ftadd@sign,6,c
 27114  013E86  D00C               	goto	i2l1540
 27115  013E88  0EFF               	movlw	255
 27116  013E8A  1A43               	xorwf	i2___ftadd@f2,f,c
 27117  013E8C  0EFF               	movlw	255
 27118  013E8E  1A44               	xorwf	i2___ftadd@f2+1,f,c
 27119  013E90  0EFF               	movlw	255
 27120  013E92  1A45               	xorwf	i2___ftadd@f2+2,f,c
 27121  013E94  0E01               	movlw	1
 27122  013E96  2643               	addwf	i2___ftadd@f2,f,c
 27123  013E98  0E00               	movlw	0
 27124  013E9A  2244               	addwfc	i2___ftadd@f2+1,f,c
 27125  013E9C  0E00               	movlw	0
 27126  013E9E  2245               	addwfc	i2___ftadd@f2+2,f,c
 27127  013EA0                     i2l1540:
 27128  013EA0  0E00               	movlw	0
 27129  013EA2  6E49               	movwf	i2___ftadd@sign,c
 27130  013EA4  5040               	movf	i2___ftadd@f1,w,c
 27131  013EA6  2643               	addwf	i2___ftadd@f2,f,c
 27132  013EA8  5041               	movf	i2___ftadd@f1+1,w,c
 27133  013EAA  2244               	addwfc	i2___ftadd@f2+1,f,c
 27134  013EAC  5042               	movf	i2___ftadd@f1+2,w,c
 27135  013EAE  2245               	addwfc	i2___ftadd@f2+2,f,c
 27136  013EB0  AE45               	btfss	i2___ftadd@f2+2,7,c
 27137  013EB2  D00E               	goto	i2l1541
 27138  013EB4  0EFF               	movlw	255
 27139  013EB6  1A43               	xorwf	i2___ftadd@f2,f,c
 27140  013EB8  0EFF               	movlw	255
 27141  013EBA  1A44               	xorwf	i2___ftadd@f2+1,f,c
 27142  013EBC  0EFF               	movlw	255
 27143  013EBE  1A45               	xorwf	i2___ftadd@f2+2,f,c
 27144  013EC0  0E01               	movlw	1
 27145  013EC2  2643               	addwf	i2___ftadd@f2,f,c
 27146  013EC4  0E00               	movlw	0
 27147  013EC6  2244               	addwfc	i2___ftadd@f2+1,f,c
 27148  013EC8  0E00               	movlw	0
 27149  013ECA  2245               	addwfc	i2___ftadd@f2+2,f,c
 27150  013ECC  0E01               	movlw	1
 27151  013ECE  6E49               	movwf	i2___ftadd@sign,c
 27152  013ED0                     i2l1541:
 27153  013ED0  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 27154  013ED4  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 27155  013ED8  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 27156  013EDC  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 27157  013EE0  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 27158  013EE4  EC06  F0A8         	call	i2___ftpack	;wreg free
 27159  013EE8  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 27160  013EEC  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 27161  013EF0  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 27162  013EF4  0012               	return	
 27163  013EF6                     __end_ofi2___ftadd:
 27164                           	opt stack 0
 27165                           tosu	equ	0xFFF
 27166                           tosh	equ	0xFFE
 27167                           tosl	equ	0xFFD
 27168                           pclatu	equ	0xFFB
 27169                           pclath	equ	0xFFA
 27170                           tblptru	equ	0xFF8
 27171                           tblptrh	equ	0xFF7
 27172                           tblptrl	equ	0xFF6
 27173                           tablat	equ	0xFF5
 27174                           prodh	equ	0xFF4
 27175                           prodl	equ	0xFF3
 27176                           intcon	equ	0xFF2
 27177                           postinc0	equ	0xFEE
 27178                           fsr0h	equ	0xFEA
 27179                           fsr0l	equ	0xFE9
 27180                           wreg	equ	0xFE8
 27181                           indf1	equ	0xFE7
 27182                           postdec1	equ	0xFE5
 27183                           fsr1h	equ	0xFE2
 27184                           fsr1l	equ	0xFE1
 27185                           bsr	equ	0xFE0
 27186                           indf2	equ	0xFDF
 27187                           postinc2	equ	0xFDE
 27188                           postdec2	equ	0xFDD
 27189                           fsr2h	equ	0xFDA
 27190                           fsr2l	equ	0xFD9
 27191                           status	equ	0xFD8
 27192                           
 27193 ;; *************** function ___lwtoft *****************
 27194 ;; Defined at:
 27195 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 27196 ;; Parameters:    Size  Location     Type
 27197 ;;  c               2    8[COMRAM] unsigned int 
 27198 ;; Auto vars:     Size  Location     Type
 27199 ;;		None
 27200 ;; Return value:  Size  Location     Type
 27201 ;;                  3    8[COMRAM] float 
 27202 ;; Registers used:
 27203 ;;		wreg, status,2, status,0, cstack
 27204 ;; Tracked objects:
 27205 ;;		On entry : 0/0
 27206 ;;		On exit  : 0/0
 27207 ;;		Unchanged: 0/0
 27208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27212 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27213 ;;Total ram usage:        3 bytes
 27214 ;; Hardware stack levels used:    1
 27215 ;; Hardware stack levels required when called:    1
 27216 ;; This function calls:
 27217 ;;		i2___ftpack
 27218 ;; This function is called by:
 27219 ;;		_ADC_postProcessingCallback
 27220 ;; This function uses a non-reentrant model
 27221 ;;
 27222                           
 27223                           	psect	text109
 27224  016284                     __ptext109:
 27225                           	opt stack 0
 27226  016284                     ___lwtoft:
 27227                           	opt stack 14
 27228                           
 27229                           ;incstack = 0
 27230  016284  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 27231  016288  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 27232  01628C  6A03               	clrf	i2___ftpack@arg+2,c
 27233  01628E  0E8E               	movlw	142
 27234  016290  6E04               	movwf	i2___ftpack@exp,c
 27235  016292  0E00               	movlw	0
 27236  016294  6E05               	movwf	i2___ftpack@sign,c
 27237  016296  EC06  F0A8         	call	i2___ftpack	;wreg free
 27238  01629A  C001  F009         	movff	?i2___ftpack,?___lwtoft
 27239  01629E  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 27240  0162A2  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 27241  0162A6  0012               	return	
 27242  0162A8                     __end_of___lwtoft:
 27243                           	opt stack 0
 27244                           tosu	equ	0xFFF
 27245                           tosh	equ	0xFFE
 27246                           tosl	equ	0xFFD
 27247                           pclatu	equ	0xFFB
 27248                           pclath	equ	0xFFA
 27249                           tblptru	equ	0xFF8
 27250                           tblptrh	equ	0xFF7
 27251                           tblptrl	equ	0xFF6
 27252                           tablat	equ	0xFF5
 27253                           prodh	equ	0xFF4
 27254                           prodl	equ	0xFF3
 27255                           intcon	equ	0xFF2
 27256                           postinc0	equ	0xFEE
 27257                           fsr0h	equ	0xFEA
 27258                           fsr0l	equ	0xFE9
 27259                           wreg	equ	0xFE8
 27260                           indf1	equ	0xFE7
 27261                           postdec1	equ	0xFE5
 27262                           fsr1h	equ	0xFE2
 27263                           fsr1l	equ	0xFE1
 27264                           bsr	equ	0xFE0
 27265                           indf2	equ	0xFDF
 27266                           postinc2	equ	0xFDE
 27267                           postdec2	equ	0xFDD
 27268                           fsr2h	equ	0xFDA
 27269                           fsr2l	equ	0xFD9
 27270                           status	equ	0xFD8
 27271                           
 27272 ;; *************** function i2___ftpack *****************
 27273 ;; Defined at:
 27274 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 27275 ;; Parameters:    Size  Location     Type
 27276 ;;  arg             3    0[COMRAM] unsigned um
 27277 ;;  exp             1    3[COMRAM] unsigned char 
 27278 ;;  sign            1    4[COMRAM] unsigned char 
 27279 ;; Auto vars:     Size  Location     Type
 27280 ;;		None
 27281 ;; Return value:  Size  Location     Type
 27282 ;;                  3    0[COMRAM] float 
 27283 ;; Registers used:
 27284 ;;		wreg, status,2, status,0
 27285 ;; Tracked objects:
 27286 ;;		On entry : 0/0
 27287 ;;		On exit  : 0/0
 27288 ;;		Unchanged: 0/0
 27289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27290 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27292 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27293 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27294 ;;Total ram usage:        8 bytes
 27295 ;; Hardware stack levels used:    1
 27296 ;; This function calls:
 27297 ;;		Nothing
 27298 ;; This function is called by:
 27299 ;;		___altoft
 27300 ;;		___lwtoft
 27301 ;;		i2___ftadd
 27302 ;;		i2___ftdiv
 27303 ;;		i2___ftmul
 27304 ;;		i2___lltoft
 27305 ;; This function uses a non-reentrant model
 27306 ;;
 27307                           
 27308                           	psect	text110
 27309  01500C                     __ptext110:
 27310                           	opt stack 0
 27311  01500C                     i2___ftpack:
 27312                           	opt stack 13
 27313                           
 27314                           ;incstack = 0
 27315  01500C  5004               	movf	i2___ftpack@exp,w,c
 27316  01500E  B4D8               	btfsc	status,2,c
 27317  015010  D005               	goto	i2u1466_40
 27318  015012  5001               	movf	i2___ftpack@arg,w,c
 27319  015014  1002               	iorwf	i2___ftpack@arg+1,w,c
 27320  015016  1003               	iorwf	i2___ftpack@arg+2,w,c
 27321  015018  A4D8               	btfss	status,2,c
 27322  01501A  D00C               	goto	i2l1482
 27323  01501C                     i2u1466_40:
 27324  01501C  0E00               	movlw	0
 27325  01501E  6E01               	movwf	?i2___ftpack,c
 27326  015020  0E00               	movlw	0
 27327  015022  6E02               	movwf	?i2___ftpack+1,c
 27328  015024  0E00               	movlw	0
 27329  015026  6E03               	movwf	?i2___ftpack+2,c
 27330  015028  0012               	return	
 27331  01502A  2A04               	incf	i2___ftpack@exp,f,c
 27332  01502C  90D8               	bcf	status,0,c
 27333  01502E  3203               	rrcf	i2___ftpack@arg+2,f,c
 27334  015030  3202               	rrcf	i2___ftpack@arg+1,f,c
 27335  015032  3201               	rrcf	i2___ftpack@arg,f,c
 27336  015034                     i2l1482:
 27337  015034  0E00               	movlw	0
 27338  015036  1401               	andwf	i2___ftpack@arg,w,c
 27339  015038  6E06               	movwf	??i2___ftpack& (0+255),c
 27340  01503A  0E00               	movlw	0
 27341  01503C  1402               	andwf	i2___ftpack@arg+1,w,c
 27342  01503E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 27343  015040  0EFE               	movlw	254
 27344  015042  1403               	andwf	i2___ftpack@arg+2,w,c
 27345  015044  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 27346  015046  5006               	movf	??i2___ftpack,w,c
 27347  015048  1007               	iorwf	??i2___ftpack+1,w,c
 27348  01504A  1008               	iorwf	??i2___ftpack+2,w,c
 27349  01504C  B4D8               	btfsc	status,2,c
 27350  01504E  D00C               	goto	i2l1485
 27351  015050  D7EC               	goto	i2l1483
 27352  015052  2A04               	incf	i2___ftpack@exp,f,c
 27353  015054  0E01               	movlw	1
 27354  015056  2601               	addwf	i2___ftpack@arg,f,c
 27355  015058  0E00               	movlw	0
 27356  01505A  2202               	addwfc	i2___ftpack@arg+1,f,c
 27357  01505C  0E00               	movlw	0
 27358  01505E  2203               	addwfc	i2___ftpack@arg+2,f,c
 27359  015060  90D8               	bcf	status,0,c
 27360  015062  3203               	rrcf	i2___ftpack@arg+2,f,c
 27361  015064  3202               	rrcf	i2___ftpack@arg+1,f,c
 27362  015066  3201               	rrcf	i2___ftpack@arg,f,c
 27363  015068                     i2l1485:
 27364  015068  0E00               	movlw	0
 27365  01506A  1401               	andwf	i2___ftpack@arg,w,c
 27366  01506C  6E06               	movwf	??i2___ftpack& (0+255),c
 27367  01506E  0E00               	movlw	0
 27368  015070  1402               	andwf	i2___ftpack@arg+1,w,c
 27369  015072  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 27370  015074  0EFF               	movlw	255
 27371  015076  1403               	andwf	i2___ftpack@arg+2,w,c
 27372  015078  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 27373  01507A  5006               	movf	??i2___ftpack,w,c
 27374  01507C  1007               	iorwf	??i2___ftpack+1,w,c
 27375  01507E  1008               	iorwf	??i2___ftpack+2,w,c
 27376  015080  B4D8               	btfsc	status,2,c
 27377  015082  D006               	goto	i2l1488
 27378  015084  D7E6               	goto	i2l1486
 27379  015086  0604               	decf	i2___ftpack@exp,f,c
 27380  015088  90D8               	bcf	status,0,c
 27381  01508A  3601               	rlcf	i2___ftpack@arg,f,c
 27382  01508C  3602               	rlcf	i2___ftpack@arg+1,f,c
 27383  01508E  3603               	rlcf	i2___ftpack@arg+2,f,c
 27384  015090                     i2l1488:
 27385  015090  BE02               	btfsc	i2___ftpack@arg+1,7,c
 27386  015092  D003               	goto	i2u1470_40
 27387  015094  0E02               	movlw	2
 27388  015096  6004               	cpfslt	i2___ftpack@exp,c
 27389  015098  D7F6               	goto	i2l1489
 27390  01509A                     i2u1470_40:
 27391  01509A  A004               	btfss	i2___ftpack@exp,0,c
 27392  01509C  9E02               	bcf	i2___ftpack@arg+1,7,c
 27393  01509E  90D8               	bcf	status,0,c
 27394  0150A0  3204               	rrcf	i2___ftpack@exp,f,c
 27395  0150A2  5004               	movf	i2___ftpack@exp,w,c
 27396  0150A4  1203               	iorwf	i2___ftpack@arg+2,f,c
 27397  0150A6  5005               	movf	i2___ftpack@sign,w,c
 27398  0150A8  A4D8               	btfss	status,2,c
 27399  0150AA  8E03               	bsf	i2___ftpack@arg+2,7,c
 27400  0150AC  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 27401  0150B0  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 27402  0150B4  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 27403  0150B8  0012               	return	
 27404  0150BA                     __end_ofi2___ftpack:
 27405                           	opt stack 0
 27406                           tosu	equ	0xFFF
 27407                           tosh	equ	0xFFE
 27408                           tosl	equ	0xFFD
 27409                           pclatu	equ	0xFFB
 27410                           pclath	equ	0xFFA
 27411                           tblptru	equ	0xFF8
 27412                           tblptrh	equ	0xFF7
 27413                           tblptrl	equ	0xFF6
 27414                           tablat	equ	0xFF5
 27415                           prodh	equ	0xFF4
 27416                           prodl	equ	0xFF3
 27417                           intcon	equ	0xFF2
 27418                           postinc0	equ	0xFEE
 27419                           fsr0h	equ	0xFEA
 27420                           fsr0l	equ	0xFE9
 27421                           wreg	equ	0xFE8
 27422                           indf1	equ	0xFE7
 27423                           postdec1	equ	0xFE5
 27424                           fsr1h	equ	0xFE2
 27425                           fsr1l	equ	0xFE1
 27426                           bsr	equ	0xFE0
 27427                           indf2	equ	0xFDF
 27428                           postinc2	equ	0xFDE
 27429                           postdec2	equ	0xFDD
 27430                           fsr2h	equ	0xFDA
 27431                           fsr2l	equ	0xFD9
 27432                           status	equ	0xFD8
 27433                           
 27434 ;; *************** function _ADCC_GetConversionResult *****************
 27435 ;; Defined at:
 27436 ;;		line 130 in file "mcc_generated_files/adcc.c"
 27437 ;; Parameters:    Size  Location     Type
 27438 ;;		None
 27439 ;; Auto vars:     Size  Location     Type
 27440 ;;		None
 27441 ;; Return value:  Size  Location     Type
 27442 ;;                  2    0[COMRAM] unsigned int 
 27443 ;; Registers used:
 27444 ;;		wreg, status,2, status,0
 27445 ;; Tracked objects:
 27446 ;;		On entry : 0/0
 27447 ;;		On exit  : 0/0
 27448 ;;		Unchanged: 0/0
 27449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27454 ;;Total ram usage:        4 bytes
 27455 ;; Hardware stack levels used:    1
 27456 ;; This function calls:
 27457 ;;		Nothing
 27458 ;; This function is called by:
 27459 ;;		_ADC_postProcessingCallback
 27460 ;; This function uses a non-reentrant model
 27461 ;;
 27462                           
 27463                           	psect	text111
 27464  01633C                     __ptext111:
 27465                           	opt stack 0
 27466  01633C                     _ADCC_GetConversionResult:
 27467                           	opt stack 15
 27468                           
 27469                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 27470                           
 27471                           ;incstack = 0
 27472  01633C  5064               	movf	3940,w,c	;volatile
 27473  01633E  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 27474  016340  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 27475  016342  5063               	movf	3939,w,c	;volatile
 27476  016344  2403               	addwf	??_ADCC_GetConversionResult,w,c
 27477  016346  6E01               	movwf	?_ADCC_GetConversionResult,c
 27478  016348  0E00               	movlw	0
 27479  01634A  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 27480  01634C  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 27481  01634E  0012               	return	
 27482  016350                     __end_of_ADCC_GetConversionResult:
 27483                           	opt stack 0
 27484                           tosu	equ	0xFFF
 27485                           tosh	equ	0xFFE
 27486                           tosl	equ	0xFFD
 27487                           pclatu	equ	0xFFB
 27488                           pclath	equ	0xFFA
 27489                           tblptru	equ	0xFF8
 27490                           tblptrh	equ	0xFF7
 27491                           tblptrl	equ	0xFF6
 27492                           tablat	equ	0xFF5
 27493                           prodh	equ	0xFF4
 27494                           prodl	equ	0xFF3
 27495                           intcon	equ	0xFF2
 27496                           postinc0	equ	0xFEE
 27497                           fsr0h	equ	0xFEA
 27498                           fsr0l	equ	0xFE9
 27499                           wreg	equ	0xFE8
 27500                           indf1	equ	0xFE7
 27501                           postdec1	equ	0xFE5
 27502                           fsr1h	equ	0xFE2
 27503                           fsr1l	equ	0xFE1
 27504                           bsr	equ	0xFE0
 27505                           indf2	equ	0xFDF
 27506                           postinc2	equ	0xFDE
 27507                           postdec2	equ	0xFDD
 27508                           fsr2h	equ	0xFDA
 27509                           fsr2l	equ	0xFD9
 27510                           status	equ	0xFD8
 27511                           tosu	equ	0xFFF
 27512                           tosh	equ	0xFFE
 27513                           tosl	equ	0xFFD
 27514                           pclatu	equ	0xFFB
 27515                           pclath	equ	0xFFA
 27516                           tblptru	equ	0xFF8
 27517                           tblptrh	equ	0xFF7
 27518                           tblptrl	equ	0xFF6
 27519                           tablat	equ	0xFF5
 27520                           prodh	equ	0xFF4
 27521                           prodl	equ	0xFF3
 27522                           intcon	equ	0xFF2
 27523                           postinc0	equ	0xFEE
 27524                           fsr0h	equ	0xFEA
 27525                           fsr0l	equ	0xFE9
 27526                           wreg	equ	0xFE8
 27527                           indf1	equ	0xFE7
 27528                           postdec1	equ	0xFE5
 27529                           fsr1h	equ	0xFE2
 27530                           fsr1l	equ	0xFE1
 27531                           bsr	equ	0xFE0
 27532                           indf2	equ	0xFDF
 27533                           postinc2	equ	0xFDE
 27534                           postdec2	equ	0xFDD
 27535                           fsr2h	equ	0xFDA
 27536                           fsr2l	equ	0xFD9
 27537                           status	equ	0xFD8
 27538                           
 27539                           	psect	text112
 27540  000000                     __ptext112:
 27541                           	opt stack 0
 27542                           tosu	equ	0xFFF
 27543                           tosh	equ	0xFFE
 27544                           tosl	equ	0xFFD
 27545                           pclatu	equ	0xFFB
 27546                           pclath	equ	0xFFA
 27547                           tblptru	equ	0xFF8
 27548                           tblptrh	equ	0xFF7
 27549                           tblptrl	equ	0xFF6
 27550                           tablat	equ	0xFF5
 27551                           prodh	equ	0xFF4
 27552                           prodl	equ	0xFF3
 27553                           intcon	equ	0xFF2
 27554                           postinc0	equ	0xFEE
 27555                           fsr0h	equ	0xFEA
 27556                           fsr0l	equ	0xFE9
 27557                           wreg	equ	0xFE8
 27558                           indf1	equ	0xFE7
 27559                           postdec1	equ	0xFE5
 27560                           fsr1h	equ	0xFE2
 27561                           fsr1l	equ	0xFE1
 27562                           bsr	equ	0xFE0
 27563                           indf2	equ	0xFDF
 27564                           postinc2	equ	0xFDE
 27565                           postdec2	equ	0xFDD
 27566                           fsr2h	equ	0xFDA
 27567                           fsr2l	equ	0xFD9
 27568                           status	equ	0xFD8
 27569                           
 27570                           	psect	rparam
 27571  0000                     tosu	equ	0xFFF
 27572                           tosh	equ	0xFFE
 27573                           tosl	equ	0xFFD
 27574                           pclatu	equ	0xFFB
 27575                           pclath	equ	0xFFA
 27576                           tblptru	equ	0xFF8
 27577                           tblptrh	equ	0xFF7
 27578                           tblptrl	equ	0xFF6
 27579                           tablat	equ	0xFF5
 27580                           prodh	equ	0xFF4
 27581                           prodl	equ	0xFF3
 27582                           intcon	equ	0xFF2
 27583                           postinc0	equ	0xFEE
 27584                           fsr0h	equ	0xFEA
 27585                           fsr0l	equ	0xFE9
 27586                           wreg	equ	0xFE8
 27587                           indf1	equ	0xFE7
 27588                           postdec1	equ	0xFE5
 27589                           fsr1h	equ	0xFE2
 27590                           fsr1l	equ	0xFE1
 27591                           bsr	equ	0xFE0
 27592                           indf2	equ	0xFDF
 27593                           postinc2	equ	0xFDE
 27594                           postdec2	equ	0xFDD
 27595                           fsr2h	equ	0xFDA
 27596                           fsr2l	equ	0xFD9
 27597                           status	equ	0xFD8
 27598                           
 27599                           	psect	temp
 27600  00005F                     btemp:
 27601                           	opt stack 0
 27602  00005F                     	ds	1
 27603  0000                     int$flags	set	btemp
 27604  0000                     wtemp6	set	btemp+1
 27605                           tosu	equ	0xFFF
 27606                           tosh	equ	0xFFE
 27607                           tosl	equ	0xFFD
 27608                           pclatu	equ	0xFFB
 27609                           pclath	equ	0xFFA
 27610                           tblptru	equ	0xFF8
 27611                           tblptrh	equ	0xFF7
 27612                           tblptrl	equ	0xFF6
 27613                           tablat	equ	0xFF5
 27614                           prodh	equ	0xFF4
 27615                           prodl	equ	0xFF3
 27616                           intcon	equ	0xFF2
 27617                           postinc0	equ	0xFEE
 27618                           fsr0h	equ	0xFEA
 27619                           fsr0l	equ	0xFE9
 27620                           wreg	equ	0xFE8
 27621                           indf1	equ	0xFE7
 27622                           postdec1	equ	0xFE5
 27623                           fsr1h	equ	0xFE2
 27624                           fsr1l	equ	0xFE1
 27625                           bsr	equ	0xFE0
 27626                           indf2	equ	0xFDF
 27627                           postinc2	equ	0xFDE
 27628                           postdec2	equ	0xFDD
 27629                           fsr2h	equ	0xFDA
 27630                           fsr2l	equ	0xFD9
 27631                           status	equ	0xFD8


Data Sizes:
    Strings     3331
    Constant    210
    Data        6
    BSS         334
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    101     152
    BANK1           256    185     219
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_77(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_77(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_77(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_77(CODE[25]), line(BANK2[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_86(CODE[5]), STR_84(CODE[9]), STR_75(CODE[13]), STR_73(CODE[12]), 
		 -> STR_71(CODE[16]), STR_69(CODE[15]), STR_67(CODE[15]), STR_65(CODE[21]), 
		 -> STR_63(CODE[21]), STR_61(CODE[26]), STR_59(CODE[14]), STR_57(CODE[13]), 
		 -> STR_55(CODE[18]), STR_53(CODE[15]), STR_51(CODE[16]), STR_48(CODE[4]), 
		 -> STR_47(CODE[6]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK1[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 1405
		 -> STR_92(CODE[30]), STR_91(CODE[23]), STR_90(CODE[40]), STR_89(CODE[30]), 
		 -> STR_88(CODE[33]), STR_87(CODE[1405]), STR_85(CODE[58]), STR_83(CODE[71]), 
		 -> STR_82(CODE[63]), STR_81(CODE[37]), STR_80(CODE[46]), STR_79(CODE[102]), 
		 -> STR_78(CODE[86]), STR_76(CODE[25]), STR_74(CODE[42]), STR_72(CODE[41]), 
		 -> STR_70(CODE[40]), STR_68(CODE[56]), STR_66(CODE[34]), STR_64(CODE[34]), 
		 -> STR_62(CODE[32]), STR_60(CODE[37]), STR_58(CODE[56]), STR_56(CODE[34]), 
		 -> STR_54(CODE[34]), STR_52(CODE[35]), STR_50(CODE[47]), STR_49(CODE[17]), 
		 -> STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), 
		 -> STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADC_postProcessingCallback
    _ADC_postProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  656190
                                            183 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   83040
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  394572
                                            174 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       14    12      2  393844
                                            160 BANK1     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
                             _printf
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   93909
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   93909
                                            142 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   83040
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    3553
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4401
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   83040
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              45    37      8   83040
                                            100 BANK1     42    34      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18366
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   18087
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3878
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9561
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7164
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6418
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1508
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  339291
                                             83 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   65654
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   65654
                                              6 BANK0     36    34      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13741
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   13246
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  273397
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_postProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADC_postProcessingCallback                         13    13      0  273397
                                             70 BANK0     13    13      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  187365
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   89925
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   82470
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   17259
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   41829
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   64029
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   59337
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6670
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   12183
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    1550
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   18374
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7746
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    6023
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2521
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit
             _putch
               _EUSART2_Write
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_postProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B9      DB       7       85.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     65      98       5       95.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2D1       8        0.0%
DATA                 0      0     2D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 01 21:45:51 2018

                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 63DC  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l55 631A                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 6432                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                                     i2___ftpack 500C  
               __end_of_heartbeatTimerCallback 614C                                   ___ftadd@exp1 0136  
                                 ___ftadd@exp2 0135                                     i2___lltoft 5C18  
                                 ___ftadd@sign 0134                                            l370 5F16  
                                          l374 5E5E                                            l375 5E5C  
                                          l367 5EEE                                            l368 5EEC  
                                          l377 5E72                                            l378 5E98  
                                          l379 5E96                                            l900 45E4  
                                          l901 45B6                                            l930 2B5E  
                                          l931 2B76                                            l940 2C60  
                                          l924 2BA6                                            l932 2B8E  
                                          l933 2CC0                                            l941 2C78  
                                          l925 2AFE                                            l950 2D6E  
                                          l942 2C90                                            l934 2BE8  
                                          l926 2BD0                                            l951 2D86  
                                          l935 2CF6                                            l943 2CA8  
                                          l927 2B16                                            l944 2DE6  
                                          l952 2D9E                                            l936 2C00  
                                          l928 2B2E                                            l856 57AE  
                                          l953 2DB6                                            l945 2D0E  
                                          l937 2C18                                            l929 2B46  
                                          l946 2E1C                                            l954 2DCE  
                                          l938 2C30                                            l947 2D26  
                                          l939 2C48                                            l948 2D3E  
                                          l949 2D56                                            l895 4560  
                                          l897 459C                                            l898 4580  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                          _Ipk 00CE                                            _Vpk 00D1  
                                          _sin 35B6                     currentMeasuredToPeak@Angle 0076  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000            __size_of_ADC_postProcessingCallback 0502  
                                 __CFG_ZCD$OFF 000000                                   ___ftdiv@cntr 0140  
                                 ___ftdiv@sign 0145                                           l1100 00B8  
                                         l1020 15A0                                           l1012 1494  
                                         l1101 0064                                           l1030 1758  
                                         l1022 15F8                                           l1014 14D0  
                                         l1111 00F6                                           l1120 0744  
                                         l1104 0158                                           l1040 18FC  
                                         l1032 17B0                                           l1024 1650  
                                         l1016 1548                                           l1121 01CE  
                                         l1113 00FA                                           l1122 0210  
                                         l1042 194E                                           l1034 1808  
                                         l1026 16A8                                           l1115 012C  
                                         l1107 00F2                                           l1132 03DE  
                                         l1124 02A4                                           l1108 01BA  
                                         l1116 0118                                           l1044 19A0  
                                         l1036 1860                                           l1028 1700  
                                         l1125 030C                                           l1150 05CE  
                                         l1118 0140                                           l1054 1C42  
                                         l1046 1BE6                                           l1038 18AE  
                                         l1151 05E6                                           l1143 058C  
                                         l1127 0332                                           l1119 0152  
                                         l1047 19D8                                           l1080 2FAC  
                                         l1160 07B8                                           l1152 0720  
                                         l1144 04F8                                           l1128 0370  
                                         l1153 0638                                           l1129 0434  
                                         l1049 1A92                                           l1410 5480  
                                         l1090 2424                                           l1162 0856  
                                         l1146 05A6                                           l1138 049A  
                                         l1083 308E                                           l1091 259A  
                                         l1163 07D2                                           l1155 073A  
                                         l1147 0598                                           l1420 57DC  
                                         l1180 08C4                                           l1156 072C  
                                         l1413 54A8                                           l1093 265E  
                                         l1173 0888                                           l1149 05CA  
                                         l1414 54B2                                           l1406 545A  
                                         l1422 57F2                                           l1086 2450  
                                         l1182 09D8                                           l1158 0794  
                                         l1415 54C0                                           l1407 546A  
                                         l1423 57EA                                           l1087 2360  
                                         l1183 0948                                           l1175 08A8  
                                         l1168 086C                                           l1513 3BF0  
                                         l1601 4702                                           l1409 5488  
                                         l1177 09DE                                           l1169 0814  
                                         l1097 000E                                           l1522 3C80  
                                         l1610 4742                                           l1602 46F2  
                                         l1450 430E                                           l1426 580A  
                                         l1098 0020                                           l1434 5FC2  
                                         l1427 5814                                           l1419 57D0  
                                         l1179 09C0                                           l1099 00E4  
                                         l1540 3CF4                                           l1452 432C  
                                         l1428 5822                                           l1541 3D24  
                                         l1517 3C1A                                           l1453 436E  
                                         l1462 4400                                           l1454 439E  
                                         l1614 62C2                                           l1550 4AE8  
                                         l1390 4E02                                           l1527 3C76  
                                         l1607 4726                                           l1463 43F4  
                                         l1536 3CB4                                           l1528 3C6C  
                                         l1608 471A                                           l1640 54FA  
                                         l1456 43DC                                           l1560 4180  
                                         l1537 3CAA                                           l1641 54EE  
                                         l1457 43CC                                           l1561 4170  
                                         l1393 4E52                                           l1482 4F86  
                                         l1650 5924                                           l1554 40B6  
                                         l1546 4A5C                                           l1394 4E14  
                                         l1571 5238                                           l1483 4F7C  
                                         l1539 3CD8                                           l1651 5918  
                                         l1387 4DC0                                           l1572 5268  
                                         l1644 552E                                           l1556 40E2  
                                         l1580 47A6                                           l1548 4A84  
                                         l1396 4E86                                           l1388 4DBA  
                                         l1485 4FBA                                           l1645 553C  
                                         l1661 5B72                                           l1557 411C  
                                         l1581 47D8                                           l1549 4AC2  
                                         l1486 4FA4                                           l1654 594C  
                                         l1662 5B66                                           l1566 41A4  
                                         l1558 4144                                           l1582 47E8  
                                         l1655 595A                                           l1567 4198  
                                         l1488 4FE2                                           l1584 4800  
                                         l1904 5422                                           l1489 4FD8  
                                         l1585 4810                                           l1905 53BA  
                                         l1578 477E                                           l1906 53F6  
                                         l1595 5F40                                           l1589 6206  
                         _ADCC_StartConversion 6406                                           l1599 468A  
                                         l1865 5DD0                                           l1874 5D2E  
                                         l1882 5C84                                           l1866 5DCA  
                                         l1890 58D6                                           l1875 5D24  
                                         l1883 5C7E                                           l1963 530C  
                                         l1964 529A                                           l1868 5DEA  
                                         l1892 58F2                                           l1965 5304  
                                         l1869 5DE0                                           l1893 58E2  
                                         l1958 6002                                           l1889 58A6  
                                         l9013 07D6                                           l9027 0818  
                                         l9063 09C0                                           l9081 58E2  
                                         l9513 4E4E                                           ?_sin 0066  
                                         l7853 5294                                           l8901 0370  
                                         l9285 529A                                           l8909 03B8  
                                         l8837 0118                                           l8953 0598  
                                         l8929 049E                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC1                                           STR_2 FFAC  
                                         STR_3 FFB5                                           STR_4 F878  
                                         STR_6 FFAC                                           STR_7 FFB5  
                                         STR_9 FFB9                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 0180  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           u9110 3BE2  
                                         u9210 3C88                                           u9140 3C0C  
                                         u9301 478E                                           u9071 3BAE  
                                         u9240 3CBC                                           u9081 3BC2  
                                         u9170 3C4A                                           u9281 4766  
                                         u8730 4FEC                                           u9450 57F6  
                                         u9701 40C6                                           u9390 548C  
                                         u8690 4F6E                                           _PLLR 007230  
                                         u9830 4406                                           u9760 41AA  
                                         u9681 409A                                           u9971 466E  
                                         u9990 46A8                                           _TMR6 000FAF  
                                         u9995 46A0                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                             __end_of_ADCC_ISR 61EE                                           _Irms 00C8  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 5E56  
                                         _Vrms 00C5                                           _acos 5CCC  
                                         _fabs 60EE                                           _atan 39DA  
                                         _asin 334C                                           _atoi 4DB8  
                                         _main 5744                                           _line 02C0  
                                 ___ftpack@arg 0117                                   ___ftpack@exp 011A  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
                                         _sqrt 3EF6                                   i2___ftadd@f1 0040  
                                 i2___ftadd@f2 0043                                           sin@f 0066  
                                 i2___ftge@ff1 002A                                           sin@y 0069  
                                 i2___ftge@ff2 002D                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00FE  
                              _timer5ReloadVal 01D2                                   i2___ftdiv@f1 0015  
                                 i2___ftdiv@f2 0018                                   i2___ftdiv@f3 0020  
                              __end_ofi2_scale 2ADA                   __end_of_EUSART2_Transmit_ISR 6054  
                                 i2___ftneg@f1 0024                                __end_ofi2_putch 642A  
                                __CFG_CSWEN$ON 000000                                   ___ftmul@cntr 0153  
                                 i2___ftmul@f1 0027                                   i2___ftmul@f2 002A  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
                                 ___ftmul@sign 0154                                   i2___ftsub@f1 0060  
                                 i2___ftsub@f2 0063                                   i2___fttol@f1 003D  
                     __size_ofi2_EUSART2_Write 0046                                   ___fttol@exp1 0163  
                              _timer7ReloadVal 01D4                                   i2___lltoft@c 0009  
                                 ___fttol@lval 015F                                          ??_sin 005E  
                              ?_FVR_Initialize 0001                 __size_of_OSCILLATOR_Initialize 001C  
                __end_of_OSCILLATOR_Initialize 6320                       ?_terminal_textAttributes 018E  
                            ??_TMR7_WriteTimer 0102                                          l10095 1A3A  
                                        l10079 19C8                                          l10097 1A92  
                                        l10089 1A06                                          l10483 4550  
                                        l10493 4576                                          ?_acos 008E  
                                        ?_fabs 0027                                          ?_atan 0058  
                                        ?_asin 0079                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 012B                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                          _ADREF 000F58  
                              __end_of___awdiv 54CA                                          _ADPRE 000F5E  
                              __end_of___ftadd 3D4A                                          STR_10 FFBD  
                                        STR_11 FFF5                                          STR_12 FFC6  
                                        STR_20 FFC5                                          STR_13 FFCC  
                                        STR_21 FFCB                                          STR_14 FFDE  
                                        STR_22 FFD1                                          STR_30 FFC8  
                                        STR_15 FFE4                                          STR_23 FFD7  
                                        STR_31 FFCE                                          STR_40 FAEC  
                                        STR_16 FFF0                                          STR_24 FFDD  
                                        STR_32 FFD4                                          STR_17 FFF8  
                                        STR_25 FFE3                                          STR_33 FFDA  
                                        STR_41 FFA1                                          STR_18 FFC6  
                                        STR_42 FFAC                                          STR_26 FFE9  
                                        STR_34 FFE0                                          STR_50 FBD8  
                                        STR_43 FFB5                                          STR_19 FFFA  
                                        STR_27 FFEF                                          STR_35 FFE6  
                                        STR_51 FF0B                                          STR_28 FFEF  
                                        STR_36 FFEC                                          STR_44 FF9B  
                                        STR_52 FD22                                          STR_60 FCD8  
                              __end_of___awmod 582C                                          STR_29 FFFA  
                                        STR_45 FFAC                                          STR_37 FFF2  
                                        STR_53 FF2B                                          STR_61 FE4A  
                                        STR_38 FFF2                                          STR_46 FFB5  
                                        STR_62 FDEE                                          STR_54 FDAB  
                                        STR_70 FC88                                          STR_39 FFFC  
                                        STR_47 FF95                                          STR_71 FF1B  
                                        STR_55 FED7                                          STR_63 FEC2  
                                        STR_48 FFB1                                          STR_64 FD67  
                                        STR_56 FD45                                          STR_72 FC5F  
                                        STR_80 FC07                                          _ADRPT 000F66  
                                        STR_73 FF80                                          STR_57 FF66  
                                        STR_49 FEFA                                          STR_65 FEAD  
                                        STR_81 FCFD                                          STR_66 FD89  
                                        STR_90 FCB0                                          STR_74 FC35  
                                        STR_58 FBA0                                          STR_82 FAEF  
                                        STR_75 FF73                                          STR_59 FF58  
                                        STR_67 FF3A                                          STR_91 FE96  
                                        STR_83 FAA8                                          STR_84 FF8C  
                                        STR_76 FE64                                          STR_92 FE0E  
                                        STR_68 FB68                                          STR_69 FF49  
                                        STR_93 FEE9                                          STR_77 FE7D  
                                        STR_85 FB2E                                          STR_86 FFA7  
                                        STR_78 FA52                                          STR_79 F9EC  
                                        STR_87 F2FB                                          STR_88 FDCD  
                                        STR_89 FE2C                                __end_of___ftdiv 4B1A  
                              __end_of___ftneg 6214                                __end_of___lldiv 554E  
                                        ?_sqrt 0066                                          u10030 472C  
                                        u10210 004C                                          u10060 54FE  
                                        u10230 009C                                          u11110 5D66  
                                        u10240 00DA                                          u10217 0042  
                                        u10090 5928                                          u11211 4A44  
                                        u10500 05C4                                          u10420 03B8  
                                        u10340 0248                                          u11140 543A  
                              __end_of___ftmul 484A                                          u10237 0092  
                                        u10247 00D0                                          u11231 4A6C  
                                        u10345 023E                                          u10290 0188  
                                        u10460 04DC                                          u10380 0342  
                              ___awdiv@divisor 011F                                          u10390 0382  
                              __end_of___llmod 596C                                          u10297 017E  
                                        u10490 05B4                                __end_of___ftsub 5F6A  
                              __end_of___fttol 4754                                          u10670 09F0  
                                        u10910 52CC                                          u10680 0A20  
                                        u12540 4576                                          u10687 0A16  
                                        u10880 5CA6                                          u11840 1A06  
                                        u11680 150E                                          u11850 1A2C  
                                        u11860 1A3A                                          u10887 5C9C  
                                        _T5CLK 000FC6                                          _T5CON 000FC3  
                                        _T7CLK 000F33                                          _T6CON 000FB1  
                                        u16357 5750                                 __CFG_DEBUG$OFF 000000  
                                        _T7CON 000F30                                          _T6HLT 000FB2  
                                        i1l213 007C                                          i1l215 009C  
                                        i1l217 00A6                                          i2l202 4EFA  
                                        i2l204 4F06                                          i2l206 4F10  
                                        i1l390 604A                                          i2l400 510C  
                                        i2l402 515C                                          i1l626 622C  
                                        i1l389 604E                                          i1l840 5AC2  
                                        i1l834 5AA2                                          i1l843 5AD2  
                                        i2l700 6332                                          _T6TMR 000FAF  
                                        i1l837 5AB2                                          i2l374 5EA4  
                                        i1l846 5AE2                                          i2l375 5EA2  
                                        i2l377 5EB8                                          i1l849 5AF2  
                                        i2l378 5EDE                                          _T6RST 000FB4  
                                        i2l379 5EDC                                          i2l395 50C4  
                                        i2l820 1E28                                          i2l396 50E6  
                                        i2l821 1F92                                          i2l397 5108  
                                        i2l822 1EFE                                          i2l815 21E0  
                                        i2l823 1EC8                                          i2l824 1EF0  
                                        i2l816 1D0E                                          i2l825 1F18  
                                        i2l818 1D48                                          i2l827 201C  
                                        i2l819 1DC6                                          i2l828 209A  
                                        i2l829 21DC                                ___awdiv@counter 0121  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 4418  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a F2E0                             __end_ofsin@coeff_b F2FB  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 00CB  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                 ___lltoft@exp 0127                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0100                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 60BC  
                             __end_of_TMR6_ISR 61C6                               __end_of_TMR7_ISR 6088  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                                ___awtoft@sign 0122                      ??_terminal_ringBufferPull 01AE  
                              __end_of_dpowers F251                                          acos@x 008E  
                                        fabs@d 0027                                     i2scale@scl 003C  
                                        _floor 4C00                                          _frexp 5654  
                                        _errno 00E3                          ?_ADCC_StartConversion 0001  
                                        _scale 220A                                __end_of_isdigit 62CA  
                                        atan@f 0058                                          atan@x 0063  
                                        atan@y 0060                             __CFG_MCLRE$EXTMCLR 000000  
                                ___ftpack@sign 011B                                          asin@x 0079  
                                        asin@y 0088                                          atoi@a 0130  
                                        atoi@s 012B                                          _putch 63A4  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                                          sin@x2 006F  
                                        tablat 000FF5                               __end_ofi2___ftge 53B8  
                             __end_ofi2___wmul 6260                                 ??_EUSART2_Read 0117  
                                        sqrt@a 0066                                          sqrt@i 006F  
                                        sqrt@q 0073                                          sqrt@x 0076  
                                        sqrt@z 0070                                          status 000FD8  
                                        wtemp6 0060                                __end_of_strncmp 5328  
                              __end_of_strncpy 5904                               __end_ofi2_fround 334C  
               ?_INTERRUPT_InterruptManagerLow 0001                                  i2___ftdiv@exp 001F  
                           __size_ofi2___awdiv 0084                             __size_ofi2___ftadd 01AC  
                           __size_ofi2___awmod 0070                             __size_ofi2___ftdiv 00E6  
                           __size_ofi2___ftneg 0024                             __size_ofi2___lldiv 0082  
                           __size_ofi2___ftmul 00F4                             __size_ofi2___llmod 0066  
                           __size_ofi2___ftsub 0042                             __size_ofi2___fttol 00F4  
                             __end_ofi2_printf 1456                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 63EA         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 63DC                                _TMR5_Initialize 5E0C  
                              __initialization 5BBC                              i2___lldiv@divisor 0005  
                                 __end_of_acos 5D22                                   __end_of_fabs 611E  
                                 __end_of_atan 3B9C                                   __end_of_asin 35B6  
                                 __end_of_atoi 4E90                                   __end_of_main 57BA  
                            i2___lldiv@counter 000D                                  i2___ftmul@exp 0030  
                                 __end_of_sqrt 4088                                     i2printf@ap 0076  
                                   i2printf@cp 0072                          __end_of_ringBufferLUT 1D08  
                               __CFG_SCANE$OFF 000000                             __size_ofi2_isdigit 001E  
                                  ?i2___ftpack 0001                                         ??_acos 005E  
                                       ??_fabs 002A                                         ??_atan 005B  
                                  ?i2___lltoft 0009                                         ??_asin 005E  
                                       ??_atoi 012D                                         ??_main 01B7  
                                ___fttol@sign1 015E                       _TMR5_SetInterruptHandler 63CE  
                                       ??_sqrt 0069                                  __activetblptr 000003  
                         __size_of__tdiv_to_l_ 0134                                _TMR6_Initialize 60BC  
                           _TRIAC_Firing_Angle 00EB                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 59D2  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01D8                                         ?_floor 0056  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               __end_of___altoft 5744  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 0155                                         _ADLTHL 000F6A  
                                       _ADRESH 000F64                                         _ADRESL 000F63  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                             __end_of___awtoft 5FE6                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                               __end_of___ftpack 500C  
                                       _ANSELG 000EBC                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                             __end_of___lltoft 5BBC                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1100 0AE4                                         i2l1101 0A92  
                                       i2l1111 0B22                                         i2l1120 116E  
                                       i2l1104 0B84                                         i2l1121 0BFA  
                                       i2l1113 0B26                                         i2l1122 0C3C  
                                       i2l1115 0B58                                         i2l1107 0B1E  
                                       i2l1132 0E0A                                         i2l1124 0CCE  
                                       i2l1108 0BE6                                         i2l1116 0B44  
                                       i2l1125 0D34                                         i2l1150 0FFA  
                                       i2l1118 0B6C                                         i2l1151 1012  
                                       i2l1143 0FB8                                         i2l1127 0D5A  
                                       i2l1119 0B7E                                         i2l1080 322E  
                                       i2l1160 11E2                                         i2l1152 114A  
                                       i2l1144 0F26                                         i2l1128 0D9A  
                                       i2l1153 1064                                         i2l1129 0E62  
                                       i2l1330 3394                                         i2l1410 5588  
                                       i2l1090 288C                                         i2l1162 1280  
                                       i2l1146 0FD2                                         i2l1138 0EC8  
                                       i2l1083 3306                                         i2l1091 29F4  
                                       i2l1163 11FC                                         i2l1155 1164  
                                       i2l1147 0FC4                                         i2l1332 3488  
                                       i2l1420 584C                                         i2l1180 12EE  
                                       i2l1156 1156                                         i2l1333 3538  
                                       i2l1413 55B0                                         i2l1093 2AB0  
                                       i2l1173 12B2                                         i2l1149 0FF6  
                                       i2l1414 55BA                                         i2l1406 5562  
                                       i2l1422 5862                                         i2l1086 28B6  
                                       i2l1182 1400                                         i2l1158 11BE  
                                       i2l1351 3A68                                         i2l1415 55C8  
                                       i2l1407 5572                                         i2l1423 585A  
                                       i2l1087 27D0                                         i2l1183 1370  
                                       i2l1175 12D2                                         i2l1440 4DA2  
                                       i2l1352 3B6C                                         i2l1168 1296  
                                       i2l1513 3D9C                                         i2l1441 4D22  
                                       i2l1601 48EC                                         i2l1409 5590  
                                       i2l1177 1406                                         i2l1169 123E  
                                       i2l1097 0A3C                                         i2l1522 3E2C  
                                       i2l1610 492C                                         i2l1602 48DC  
                                       i2l1354 3B7E                                         i2l1450 4436  
                                       i2l1426 587A                                         i2l1098 0A4E  
                                       i2l1427 5884                                         i2l1419 5840  
                                       i2l1179 13E8                                         i2l1099 0B10  
                                       i2l1540 3EA0                                         i2l1276 56FA  
                                       i2l1452 4454                                         i2l1428 5892  
                                       i2l1541 3ED0                                         i2l1517 3DC6  
                                       i2l1277 56EE                                         i2l1349 3A10  
                                       i2l1453 4496                                         i2l1550 4BCE  
                                       i2l1446 6110                                         i2l1462 4528  
                                       i2l1454 44C6                                         i2l1614 62E0  
                                       i2l1527 3E22                                         i2l1607 4910  
                                       i2l1463 451C                                         i2l1536 3E60  
                                       i2l1528 3E18                                         i2l1608 4904  
                                       i2l1640 5600                                         i2l1456 4504  
                                       i2l1560 42B2                                         i2l1537 3E56  
                                       i2l1641 55F4                                         i2l1457 44F4  
                                       i2l1561 42A2                                         i2l1482 5034  
                                       i2l1546 4B42                                         i2l1730 36C4  
                                       i2l1650 59F0                                         i2l1554 41E8  
                                       i2l1483 502A                                         i2l1539 3E84  
                                       i2l1571 5358                                         i2l1731 371C  
                                       i2l1651 59E4                                         i2l1580 498E  
                                       i2l1572 5388                                         i2l1548 4B6A  
                                       i2l1732 3806                                         i2l1644 5634  
                                       i2l1556 4214                                         i2l1485 5068  
                                       i2l1581 49C0                                         i2l1549 4BA8  
                                       i2l1645 5642                                         i2l1661 5C2A  
                                       i2l1557 424E                                         i2l1486 5052  
                                       i2l1582 49D0                                         i2l1654 5A18  
                                       i2l1662 5C1E                                         i2l1566 42D6  
                                       i2l1558 4276                                         i2l1655 5A26  
                                       i2l1567 42CA                                         i2l1488 5090  
                                       i2l1584 49E8                                         i2l1489 5086  
                                       i2l1585 49F8                                         i2l1729 35E2  
                                       i2l1578 4966                                         i2l1595 5F82  
                                       i2l1589 6276                                         i2l1861 3F84  
                                       i2l1934 4C3C                                         i2l1943 5670  
                                       i2l1599 4876                                         i2l1935 4C2E  
                                       i2l1937 4C56                                         i2l1938 4CD0  
                                       i2l1858 3F32                                         i2l1859 3F24  
                                       _RG7PPS 000E89                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 0039  
                             __end_of___lwtoft 62A8                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6             __end_of_ADC_postProcessingCallback 220A  
                   _ADC_postProcessingCallback 1D08                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 5D72                                   i2_scale$3340 0039  
                             __end_of__powers_ F278           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 465C                                         ___ftge 5206  
                                       ___wmul 6176                                      ??___awdiv 0121  
                                    ??___ftadd 0131                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___ftdiv 013D  
                                    ??___ftneg 0126                                      ??___lldiv 011F  
                                    ??___ftmul 014C                                      ??___llmod 012C  
                                    ??___ftsub 013D                                      ??___fttol 0159  
                     ??_terminal_setCursorHome 018E                                         _fround 2E42  
                                       clear_0 5BE4                                         clear_1 5BF6  
                                       clear_2 5C06                           _eusart2RxStringReady 07B8  
                             ___awdiv@quotient 0123                                ___awmod@divisor 0119  
                              ___awmod@counter 011B                                         _printf 0000  
                                       _strcat 5DC0                                         _strchr 5FE6  
                                       _strcmp 5D22                                      ?_ADCC_ISR 0001  
                                       _strlen 5C74                                 i2___awdiv@sign 000C  
                                       _strstr 53B8                                         floor@i 0059  
                                       floor@x 0056                          ___ftmul@f3_as_product 0150  
                             _background_color 00E7                                _ADCC_Initialize 5A38  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize 62E8  
                                    ??_isdigit 0117                              __end_ofi2___awdiv 55D2  
                            __end_ofi2___ftadd 3EF6                              __end_ofi2___awmod 589C  
                            __end_ofi2___ftdiv 4C00                                 i2___ftadd@exp1 004B  
                               i2___ftadd@exp2 004A                              __end_ofi2___ftneg 6284  
                            __end_ofi2___lldiv 5654                                         sin@sgn 0072  
                            __end_ofi2___ftmul 4A32                              __end_ofi2___llmod 5A38  
                            __end_ofi2___ftsub 5FAC                              __end_ofi2___fttol 493E  
                               i2___ftadd@sign 0049                                   __mediumconst F228  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 601E  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                                       sqrt@og 006C                                ??_EUSART2_Write 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
  ADCC_SetADIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 0097                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 018E  
                __size_of_INTERRUPT_Initialize 0012                                _eusart2RxBuffer 0280  
                      __end_of_TMR5_Initialize 5E56                              __end_ofi2_isdigit 62E8  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00B3  
                            _SYSTEM_Initialize 614C           __end_of_TMR7_DefaultInterruptHandler 643A  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 6438  
                               i2___ftdiv@cntr 001E                                _eusart2TxBuffer 0200  
                                   __accesstop 0060                        __end_of__initialization 5C0E  
                                   ___altoft@c 004C                                 i2___ftdiv@sign 0023  
                                   ___ftadd@f1 012B                                     ___ftadd@f2 012E  
                          __size_ofi2___ftpack 00AE                                 i2printf@tmpval 007C  
                                   ___ftge@ff1 0117                                     ___ftge@ff2 011A  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                 eval_poly@res 0055                                  ___rparam_used 000001  
                                   ___ftdiv@f1 0137                                     ___ftdiv@f2 013A  
                                   ___ftdiv@f3 0141                                _TMR5_WriteTimer 6320  
                                   ___ftneg@f1 0123                                     ___awtoft@c 011F  
                               i2___ftpack@arg 0001                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                                 i2___ftpack@exp 0004  
                           i2__tdiv_to_l_@cntr 000E                              i2___llmod@counter 0016  
                           i2__tdiv_to_l_@quot 000A                                     ___ftmul@f1 0146  
                                   ___ftmul@f2 0149              terminal_ringBufferPull@charNumber 01B1  
                                   ___ftsub@f1 0137                                     ___ftsub@f2 013A  
                                   ___fttol@f1 0155                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 018E  
                                 __pidataBANK0 6432                            ??_SYSTEM_Initialize 011C  
                                   ___lltoft@c 011F                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 4CDE                                  __end_of_frexp 56CC  
                               i2___ftmul@cntr 0034                                  __end_of_scale 268A  
                               i2___ftmul@sign 0035                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 63B2                                    i2printf@idx 0071  
                     ??_terminal_clearTerminal 018E                                    i2printf@len 0074  
                                  i2printf@exp 007A                                    i2printf@val 0083  
                      __end_of_TMR6_Initialize 60EE                         __end_of_PMD_Initialize 6304  
                               i2___fttol@exp1 004B                                     ___lwtoft@c 0009  
                               i2___fttol@lval 0047                                      ?i2___ftge 002A  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 5F28  
                                    ?i2___wmul 000F                                  i2__tdiv_to_l_ 41BC  
                                   __div_to_l_ 42EE                                      ?i2_fround 0036  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0066  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0122  
                                      ??_floor 0059                                __div_to_l_@cntr 0121  
                                      ??_frexp 0006                                        ??_scale 0158  
                    __end_of_SYSTEM_Initialize 6176                                 i2___lltoft@exp 0011  
                              __div_to_l_@quot 011D                                        ??_putch 0118  
                                 peakToRMS@RMS 00A3                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00EA                                  _eusart2TxHead 01DA  
                                   __pbssBANK0 00C5                                     __pbssBANK1 01B9  
                                   __pbssBANK2 0200                                  _eusart2RxTail 01D7  
                                _eusart2TxTail 01D9                             __size_of_eval_poly 00DA  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 5DC0                             __size_of_peakToRMS 01C6  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011A                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 6214                               ??_FVR_Initialize 0117  
                               _peakToRMS$3325 00A0                                 _peakToRMS$3326 009A  
                               _peakToRMS$3327 009D                          ringBufferLUT@arg_buff 01A7  
                                      ?___ftge 0117              terminal_ringBufferPull@index_1976 01B3  
                                      ?___wmul 0125                          _currentMeasuredToPeak 5AFE  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 63CE  
                      __end_of_ADCC_Initialize 5A9C                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                    ?___altoft 004C                                        ?_fround 0155  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                    ?___awtoft 011F                                      ?___ftpack 0117  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 0164  
                              ?_PMD_Initialize 0001                                      ?___lltoft 011F  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___ftge 0030  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strlen 0117  
                                    ?___lwtoft 0009                                        ?_strstr 0126  
                                   ??i2___wmul 0013                                        u1141_41 41CC  
                                      u1143_41 41F8                                        u1503_41 4B2A  
                                      u1505_41 4B52                                        u1524_41 485A  
                                      u1473_41 3D5A                                        u1474_41 3D6E  
                                      u1494_41 494E                                        i2l12501 0DE4  
                                      i2l12521 0ECC                                        i2l12605 1200  
                                      i2l12429 0B44                                        i2l11719 53B4  
                                      i2l12545 0FC4                                        i2l12619 1242  
                                      u1496_41 4976                                        i2l12493 0D9A  
                                      i2l12655 13E8                                        _SP2BRGH 000EF4  
                                   ??i2_fround 0039                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 5164                                     ??i2_printf 0068  
                                      _OSCTUNE 000E48                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                 __size_of_ADCC_IsConversionDone 000C  
                __end_of_ADCC_IsConversionDone 6420                       _acquisitionTimerCallback 5A9C  
                      __end_of_TMR5_WriteTimer 633C               __size_of_terminal_textAttributes 0368  
                                      i2_scale 268A                               ?_TMR5_Initialize 0001  
                                      i2_putch 6420           __end_of_terminal_textAttributesReset 6362  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 6350  
                            __end_of__npowers_ F29F                                        __Hparam 0000  
                                   _scale$3145 0158                                        __Lparam 0000  
                   ??_TMR5_SetInterruptHandler 011A                                __size_of___ftge 0092  
                                      ___awdiv 5444                                        ___ftadd 3B9C  
                                      ___awmod 57BA                                        ___ftdiv 4A32  
                                      ___ftneg 61EE                                        ___lldiv 54CA  
                              __size_of___wmul 0028                                        ___ftmul 4754  
                                      ___llmod 5904                                        ___ftsub 5F28  
                                      ___fttol 465C                                     ??___altoft 0050  
                                      __pcinit 5BBC                                   ??i2___ftpack 0006  
                                   ??___awtoft 0122                                     ??___ftpack 011C  
                            __end_of_eval_poly 4DB8                                __size_of_fround 0294  
                             ?_TMR6_Initialize 0001                        i2___ftmul@f3_as_product 0031  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                 ??i2___lltoft 000D                                     ??___lltoft 0123  
                                      __ptext0 5744                                        __ptext1 6374  
                                      __ptext2 4540                                        __ptext3 1456  
                                      __ptext4 6350                                        __ptext5 2ADA  
                                      __ptext6 589C                                        __ptext7 5DC0  
                                      __ptext8 6384                                        __ptext9 53B8  
                            __end_of_peakToRMS 39DA                                __size_of_printf 0A2E  
                currentMeasuredToPeak@Measured 0073                                     ??___lwtoft 000C  
                   ringBufferLUT@angle_degrees 01A4                                __size_of_strcat 004C  
                                i2_fround$3338 003C                                  i2_fround$3339 0039  
                              __size_of_strchr 0038                                __size_of_strcmp 0050  
                              __size_of_strlen 0058                              __end_of_hexpowers F2BF  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers F229                          _OSCILLATOR_Initialize 6304  
                       ??_EUSART2_Transmit_ISR 0100                                   i2fround@prec 003F  
                                      _isdigit 62A8                                atan@val_squared 0067  
                                 __size_of_sin 025E                               ___awmod@dividend 0117  
  ADC_postProcessingCallback@currentADCChannel 00AF                                        _on_time 01B9  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 006A  
                                    _T5CONbits 000FC3              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 007C                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 01AC                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002A                          i2EUSART2_Write@txData 0001  
                                      _strncmp 5298                                 __pintcode_body 4E90  
                                      _strncpy 589C                           end_of_initialization 5C0E  
                      __end_of_TMR7_WriteTimer 623A                         _terminal_setCursorHome 6374  
                             ?_TMR7_Initialize 0001                                        int_func 4E90  
                          i2___wmul@multiplier 000F                                      _T6RSTbits 000FB4  
                                    i1u1611_28 61B2                                      i1u1613_28 6074  
                                    i1u1631_28 0086                    ?_ADC_postProcessingCallback 0001  
                                    i2u1101_40 5594                                      i2u1107_40 5866  
                                    i2u1140_40 452E                                      i2u1153_40 5604  
                                    i2u1156_40 59F4                                      i2u1149_40 42DC  
                           __end_ofi2___ftpack 50BA                                      i2u1530_40 4916  
                                    i2u1523_40 5698                                      i2u1603_40 1418  
                                    i2u1523_48 569A                                      i2u1604_40 1448  
                                    i2u1604_47 143E                                      i2u1541_40 36C0  
                                    i2u1517_40 3A34                                      i2u1470_40 509A  
                                    i2u1526_40 4894                                      i2u1542_40 36C2  
                                    i2u1518_40 3A36                                      i2u1526_45 488C  
                                    i2u1622_48 4EE4                                      i2u1480_40 3DB8  
                                    i2u1560_40 0B06                                      i2u1607_48 60A8  
                                    i2u1560_47 0AFC                                      i2u1537_40 4C48  
                                    i2u1617_40 50FC                                      i2u1466_40 501C  
                                    i2u1490_40 3E68                                      i2u1609_48 61DA  
                                    i2u1570_40 0C74                                      i2u1570_45 0C6A  
                                    i2u1483_40 3DF6                                      i2u1477_40 3D8E  
                                    i2u1565_40 0BB4                                      i2u1557_40 0A7A  
                                    i2u1565_47 0BAA                                      i2u1557_47 0A70  
                                    i2u1582_40 0F0A                                      i2u1574_40 0D6C  
                                    i2u1487_40 3E34                                      i2u1575_40 0DAC  
                                    i2u1559_40 0AC8                                      i2u1559_47 0ABE  
                                    i2u1585_40 0FE0                                      i2u1586_40 0FF0  
                                    i2u1578_40 0DE4                             __end_ofi2___lltoft 5C74  
                              ___lldiv@divisor 011B                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 596C                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0073                                i2_EUSART2_Write 5E9E  
                                      printf@c 018D                                        printf@f 0164  
                     ??_heartbeatTimerCallback 0100                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0044                               ?_ADCC_Initialize 0001  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01B5  
                                ??__tdiv_to_l_ 011D                       _TMR6_SetInterruptHandler 63C0  
                        _TMR5_InterruptHandler 01C6                       ?_terminal_ringBufferPull 0001  
                         __CFG_WDTCCS$LFINTOSC 000000                              __size_of_ADCC_ISR 0028  
          __end_of_ADCC_SetADIInterruptHandler 6406                    _ADCC_SetADIInterruptHandler 63F8  
                                    i2___awdiv 554E                                      i2___ftadd 3D4A  
                                    i2___awmod 582C                               __CFG_FEXTOSC$ECH 000000  
                                    i2___ftdiv 4B1A                                      i2___ftneg 6260  
                                    i2___lldiv 55D2                                      i2___ftmul 493E  
                                    i2___llmod 59D2                                      i2___ftsub 5F6A  
                                    i2___fttol 484A                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 6394  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 08B2  
                ??_ADCC_SetADIInterruptHandler 011A                                    ___ftdiv@exp 0144  
                                 _EUSART2_Read 5EE4                             i2___llmod@dividend 000E  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                                    i2_isdigit 62CA                            __size_of__div_to_l_ 012A  
                                  ___ftmul@exp 014F                                      _Avg_Power 01BD  
                 __end_of_INTERRUPT_Initialize 6374                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___ftge 5298  
                __end_of_terminal_printNewline 6394                                 __end_of___wmul 619E  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07B8                                 __end_of_fround 30D6  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 005C                               i2___wmul@product 0013  
                               __end_of_printf 0A2E                                  i2_printf$3341 006E  
                               __end_of_strcat 5E0C                                 __end_of_strchr 601E  
                               __end_of_strcmp 5D72                                   i2printf@flag 0078  
                               __end_of_strlen 5CCC                                   i2printf@fval 0080  
                               __end_of_strstr 5444                                   i2printf@prec 0087  
                          start_initialization 5BBC                              __size_ofi2___ftge 0090  
                                   eval_poly@d 004F                                     eval_poly@n 0051  
                                   eval_poly@x 004C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 643E  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 643C  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 41BC  
                                  __end_of_sin 3814                                      i2printf@c 0089  
                                    i2printf@f 0066                _ADC_postProcessingCallback$3330 00A9  
              _ADC_postProcessingCallback$3331 00AC                _ADC_postProcessingCallback$3328 00B0  
              _ADC_postProcessingCallback$3329 00A6                                i2___fttol@sign1 0046  
                      _terminal_textAttributes 2ADA  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                              __size_ofi2_fround 0276  
                                   ?i2___awdiv 0007                                     ?i2___ftadd 0040  
                                   ?i2___awmod 0001                                     ?i2___ftdiv 0015  
                                   ?i2___ftneg 0024                                     ?i2___lldiv 0001  
                                   ?i2___ftmul 0027                                     ?i2___llmod 000E  
                                   ?i2___ftsub 0060                                     ?i2___fttol 003D  
                __size_of_ADCC_StartConversion 000E                                    putch@txData 0118  
                            __size_ofi2_printf 0A28                          __end_of_EUSART2_Write 5E9E  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0191                        __end_ofi2_EUSART2_Write 5EE4  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 00EE  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 0117  
                                     ??___ftge 011D                                       ??___wmul 0129  
              __size_of_heartbeatTimerCallback 002E                                    __pdataBANK0 00F1  
                                     ??_fround 0158                                  _ringBufferLUT 1456  
               ??_terminal_textAttributesReset 01A0                                       ??_printf 016C  
                            _POS3P3_ADC_Result 00D4                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 0094                                       ??_strstr 012A  
                            __size_of___altoft 0078                                      _Vpk_const 00F1  
                                   fround@prec 015E                                 _eusart2RxCount 01D6  
                                ?i2__div_to_l_ 0001                              __size_of___awtoft 003A  
                            __size_of___ftpack 00B0                                      _acos$3332 0091  
                            __size_of___lltoft 005E                              __size_of___lwtoft 0024  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                 _isdigit$2501 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                          EUSART2_Write@txData 0117                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$3333 007F  
                                    _asin$3334 008B                                      _asin$3335 0085  
                                    _asin$3336 0082                                       ?i2_putch 0001  
                                   sin@coeff_a F2D1                                     sin@coeff_b F2EF  
                        _TMR6_InterruptHandler 01CC                         _PIN_MANAGER_Initialize 5164  
                                    __pintcode 0008                                  __pmediumconst F228  
                                     ?___awdiv 011D                                      __ptext100 4C00  
                                    __ptext101 484A                                      __ptext110 500C  
                                    __ptext102 5328                                      __ptext111 633C  
                                    __ptext103 5654                                      __ptext112 0000  
                                    __ptext104 56CC                                      __ptext105 4CDE  
                                    __ptext106 623A                                      __ptext107 493E  
                                    __ptext108 3D4A                                      __ptext109 6284  
                                     ?___ftadd 012B                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 63C0  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ F278  
                                     ?___fttol 0155                                 ?_ringBufferLUT 01A0  
            _EUSART2_TxDefaultInterruptHandler 01CF                                    __pintcodelo 0018  
                                  __tdiv_to_l_ 4088                                       _ADCC_ISR 61C6  
                               ??i2__div_to_l_ 0007                                   ??__div_to_l_ 011D  
                             _POS12_ADC_Result 01C3                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                      _eval_poly 4CDE  
                    ??_terminal_textAttributes 0190                                      _attribute 00E9  
                                    _peakToRMS 3814                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers F29F  
                       _heartbeatTimerCallback 611E                                 _dimming_period 00E5  
                                  ??i2___awdiv 000B                                    ??i2___ftadd 0046  
                                  ??i2___awmod 0005                                 __size_of_floor 00DE  
                                  ??i2___ftdiv 001B                                 __size_of_frexp 0078  
                                  ??i2___ftneg 0027                                    ??i2___lldiv 0009  
                                  ??i2___ftmul 002D                                 __size_of_scale 0480  
                                  ??i2___llmod 0016                                    ??i2___ftsub 005E  
                                  ??i2___fttol 0041                                       ?_strncmp 011D  
                                     ?_strncpy 0117                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 6362                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 6414         terminal_textAttributes@input_attribute 018F  
                 __size_of_EUSART2_Receive_ISR 00AA                                 ___wmul@product 0129  
                    currentMeasuredToPeak@Peak 0079                               ?i2_EUSART2_Write 0001  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0066                                       _IPR1bits 000E20  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       i1u740_28 612E  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 4418  
                                     i1u739_20 612A                                       i1u683_20 641C  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 004A  
                                     _TMR5_ISR 6088                                       _TMR6_ISR 619E  
                                     _TMR7_ISR 6054                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0004                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0125  
                                     i2___ftge 5328                                       i2___wmul 623A  
                      __size_of_FVR_Initialize 0008                                     printf@flag 017C  
                                   printf@fval 0188                                     printf@prec 018B  
                                   ?_eval_poly 004C                 __end_of_terminal_setCursorHome 6384  
                            i2___awdiv@divisor 0009                                       i2_fround 30D6  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 0094  
                            i2___awdiv@counter 000B                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                                       i2_printf 0A2E  
                          __end_ofatan@coeff_a F2D1                            __end_ofatan@coeff_b F2EF  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                                    copy_data0 5BD0                          ?_INTERRUPT_Initialize 0001  
                           i2___awmod@dividend 0001               __size_of_terminal_ringBufferPull 011C  
                             __size_ofi2_scale 0450                 ??_TMR5_DefaultInterruptHandler 0001  
                             __size_ofi2_putch 000A                                      frexp@eptr 0004  
              __end_of_terminal_textAttributes 2E42                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 6350  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 63F8  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 63EA  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01A2                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 00E8                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___awdiv 0086                               __size_of___ftadd 01AE  
                             __size_of___awmod 0072                               __size_of___ftdiv 00E8  
                             __size_of___ftneg 0026                          i2___wmul@multiplicand 0011  
                             __size_of___lldiv 0084                                       ___altoft 56CC  
                             __size_of___ftmul 00F6                               __size_of___llmod 0068  
                             __size_of___ftsub 0042                               __size_of___fttol 00F8  
                                  _load_enable 02F0                                       ___awtoft 5FAC  
                                     ___ftpack 4F5C               __end_of_acquisitionTimerCallback 5AFE  
                                  _fround$3143 015B                                    _fround$3144 0158  
                                     ___lltoft 5B5E                          __end_ofi2__tdiv_to_l_ 42EE  
                                     ___lwtoft 6284                       _TMR7_SetInterruptHandler 63B2  
                        _TMR7_InterruptHandler 01C9                             _ADC_Result_Scaling 00D7  
      terminal_textAttributes@foreground_color 0190                       __size_of_ADCC_Initialize 0064  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 63A4                               __size_of_isdigit 0022  
                                     __ptext10 5298                                       __ptext11 5C74  
                                     __ptext20 220A                                       __ptext12 5FE6  
                                     __ptext21 63A4                                       __ptext13 5D22  
                                     __ptext30 42EE                                       __ptext22 5E56  
                                     __ptext14 4DB8                                       __ptext31 5B5E  
                                     __ptext23 62A8                                       __ptext15 4A32  
                                     __ptext40 614C                                       __ptext32 5904  
                                     __ptext24 2E42                                       __ptext16 5FAC  
                                     __ptext41 5D72                                       __ptext33 54CA  
                                     __ptext25 6176                                       __ptext17 5EE4  
                                     __ptext50 6362                                       __ptext42 63B2  
                                     __ptext34 465C                                       __ptext26 4754  
                                     __ptext18 6394                                       __ptext51 642A  
                                     __ptext43 60BC                                       __ptext35 5F28  
                                     __ptext27 57BA                                       __ptext19 0000  
                                     __ptext60 5A9C                                       __ptext52 596C  
                                     __ptext44 63C0                                       __ptext36 3B9C  
                                     __ptext28 5444                                       __ptext61 6406  
                                     __ptext53 63DC                                       __ptext45 5E0C  
                                     __ptext37 4F5C                                       __ptext29 4088  
                                     __ptext70 6320                                       __ptext62 6414  
                                     __ptext54 63EA                                       __ptext46 63CE  
                                     __ptext38 61EE                                       __ptext71 643C  
                                     __ptext63 6214                                       __ptext55 5A38  
                                     __ptext47 62E8                                       __ptext39 5206  
                                     __ptext80 554E                                       __ptext72 50BA  
                                     __ptext64 619E                                       __ptext56 63F8  
                                     __ptext48 5164                                       __ptext81 41BC  
                                     __ptext73 0A2E                                       __ptext65 643A  
                                     __ptext49 6304                                       __ptext90 5CCC  
                                     __ptext82 4418                                       __ptext74 268A  
                                     __ptext66 611E                                       __ptext58 6054  
                                     __ptext91 334C                                       __ptext83 5C18  
                                     __ptext75 6420                                       __ptext67 601E  
                                     __ptext59 6438                                       __ptext92 3EF6  
                                     __ptext84 59D2                                       __ptext76 5E9E  
                                     __ptext93 39DA                                       __ptext85 55D2  
                                     __ptext77 62CA                                       __ptext69 6088  
                                     __ptext94 60EE                                       __ptext86 61C6  
                                     __ptext78 30D6                                       __ptext95 5AFE  
                                     __ptext87 643E                                       __ptext79 582C  
                                     __ptext96 35B6                                       __ptext88 1D08  
                                     __ptext97 5F6A                                       __ptext89 3814  
                                     __ptext98 6260                                       __ptext99 4B1A  
                                     _sin$3337 006C                                       __powers_ F251  
                       ?_ADCC_IsConversionDone 0001                                _Temp_ADC_Offset 00F4  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 0066                                 i2_isdigit$2501 0002  
                              _Temp_ADC_Result 01C0                                  __size_of_acos 0056  
                                __size_of_fabs 0030                                  __size_of_atan 01C2  
                                __size_of_asin 026A                                  __size_of_atoi 00D8  
                                __size_of_main 0076                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 0192                           __end_ofi2__div_to_l_ 4540  
                                   strncmp@len 0121                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      _ADCC_ADI_InterruptHandler 00DD  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 6414  
                                     int$flags 005F                                       atoi@sign 012F  
                                    printf@idx 0175                                      printf@len 0178  
                                    printf@exp 017E                                      printf@val 0184  
                                  atan@coeff_a F2BF                                    atan@coeff_b F2E0  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline 6384  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0053  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                                     scale@scl 015B           __end_of_TMR6_DefaultInterruptHandler 643C  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 643A  
         __end_of_ADCC_DefaultInterruptHandler 6440          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler 643E                                       intlevel1 0000  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                               __tdiv_to_l_@quot 0120  
                                    strchr@chr 0119                                      strchr@ptr 0117  
                           ringBufferLUT@index 01AA                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                            __CFG_CLKOUTEN$OFF 000000                                      strncmp@s1 011D  
                                    strncmp@s2 011F                                _AVSS_ADC_Result 00DA  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                       printf@ap 017A  
                                     printf@cp 0176                       _ADCC_GetConversionResult 633C  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 0048                            _EUSART2_Receive_ISR 50BA  
       __end_of_INTERRUPT_InterruptManagerHigh 4F5C        __size_of_INTERRUPT_InterruptManagerHigh 4F54  
               _INTERRUPT_InterruptManagerHigh 0008                              ??_TMR7_Initialize 011A  
                                  _printf$3146 0172                                 _FVR_Initialize 642A  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01A0  
                             ___lldiv@quotient 011F                                       strlen@cp 011B  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6          __end_of_INTERRUPT_InterruptManagerLow 00FE  
       __size_of_INTERRUPT_InterruptManagerLow 00E6                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 5206                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000C                              i2__div_to_l_@cntr 000B  
                      _terminal_ringBufferPull 4540                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0007  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0062  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                 ??_ADC_postProcessingCallback 005E              _EUSART2_RxDefaultInterruptHandler 00E0  
               __size_of_currentMeasuredToPeak 0060                  __end_of_currentMeasuredToPeak 5B5E  
