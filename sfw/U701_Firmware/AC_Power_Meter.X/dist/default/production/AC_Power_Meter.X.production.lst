

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Oct 27 14:31:46 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 1.45 (B)
    49                           ; Generated 30/01/2018 GMT
    50                           ; 
    51                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18LF67K40 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     _RC2REG	set	3825
    83  0000                     _RC2STAbits	set	3829
    84  0000                     _TX2REG	set	3826
    85  0000                     _TX2STAbits	set	3830
    86  0000                     _SP2BRGH	set	3828
    87  0000                     _SP2BRGL	set	3827
    88  0000                     _TX2STA	set	3830
    89  0000                     _RC2STA	set	3829
    90  0000                     _BAUD2CON	set	3831
    91  0000                     _PIR5bits	set	3640
    92  0000                     _PIE5bits	set	3630
    93  0000                     _PIR3bits	set	3638
    94  0000                     _PIE3bits	set	3628
    95  0000                     _IPR5bits	set	3620
    96  0000                     _IPR3bits	set	3618
    97  0000                     _RX2PPS	set	3601
    98  0000                     _RG7PPS	set	3721
    99  0000                     _SLRCONH	set	3774
   100  0000                     _SLRCONG	set	3769
   101  0000                     _SLRCONF	set	3761
   102  0000                     _SLRCONE	set	3756
   103  0000                     _SLRCOND	set	3748
   104  0000                     _SLRCONC	set	3743
   105  0000                     _SLRCONB	set	3735
   106  0000                     _SLRCONA	set	3727
   107  0000                     _ODCOND	set	3749
   108  0000                     _ODCONC	set	3744
   109  0000                     _ODCONH	set	3775
   110  0000                     _ODCONB	set	3736
   111  0000                     _ODCONG	set	3770
   112  0000                     _ODCONA	set	3728
   113  0000                     _ODCONF	set	3762
   114  0000                     _ODCONE	set	3757
   115  0000                     _WPUH	set	3776
   116  0000                     _WPUC	set	3745
   117  0000                     _WPUA	set	3729
   118  0000                     _WPUG	set	3771
   119  0000                     _WPUB	set	3737
   120  0000                     _WPUE	set	3758
   121  0000                     _WPUF	set	3763
   122  0000                     _WPUD	set	3750
   123  0000                     _ANSELA	set	3730
   124  0000                     _ANSELF	set	3764
   125  0000                     _ANSELG	set	3772
   126  0000                     _ANSELE	set	3759
   127  0000                     _ANSELB	set	3738
   128  0000                     _ANSELD	set	3751
   129  0000                     _PMD5	set	3665
   130  0000                     _PMD4	set	3664
   131  0000                     _PMD3	set	3663
   132  0000                     _PMD2	set	3662
   133  0000                     _PMD1	set	3661
   134  0000                     _PMD0	set	3660
   135  0000                     _OSCTUNE	set	3656
   136  0000                     _OSCFRQ	set	3657
   137  0000                     _OSCEN	set	3655
   138  0000                     _OSCCON3	set	3653
   139  0000                     _OSCCON1	set	3651
   140  0000                     _PLLR	set	29232
   141  0000                     _PR6	set	4016
   142  0000                     _TMR6	set	4015
   143  0000                     _T6CONbits	set	4017
   144  0000                     _T6RSTbits	set	4020
   145  0000                     _T6HLTbits	set	4018
   146  0000                     _T6CON	set	4017
   147  0000                     _T6TMR	set	4015
   148  0000                     _T6PR	set	4016
   149  0000                     _T6RST	set	4020
   150  0000                     _T6HLT	set	4018
   151  0000                     _T6CLKCON	set	4019
   152  0000                     _TRISD	set	3972
   153  0000                     _TRISC	set	3971
   154  0000                     _TRISH	set	3976
   155  0000                     _TRISB	set	3970
   156  0000                     _TRISG	set	3975
   157  0000                     _TRISA	set	3969
   158  0000                     _TRISF	set	3974
   159  0000                     _TRISE	set	3973
   160  0000                     _LATH	set	3968
   161  0000                     _LATC	set	3963
   162  0000                     _LATG	set	3967
   163  0000                     _LATB	set	3962
   164  0000                     _LATF	set	3966
   165  0000                     _LATA	set	3961
   166  0000                     _LATD	set	3964
   167  0000                     _LATE	set	3965
   168  0000                     _INTCONbits	set	4082
   169  0000                     _LATFbits	set	3966
   170                           
   171                           	psect	mediumconst
   172  00FD76                     __pmediumconst:
   173                           	opt stack 0
   174  00FD76  00                 	db	0
   175  00FD77                     STR_4:
   176                           
   177                           ; BSR set to: 14
   178  00FD77  20                 	db	32
   179  00FD78  20                 	db	32
   180  00FD79  20                 	db	32
   181  00FD7A  20                 	db	32
   182  00FD7B  42                 	db	66	;'B'
   183  00FD7C  6F                 	db	111	;'o'
   184  00FD7D  6F                 	db	111	;'o'
   185  00FD7E  74                 	db	116	;'t'
   186  00FD7F  20                 	db	32
   187  00FD80  63                 	db	99	;'c'
   188  00FD81  6F                 	db	111	;'o'
   189  00FD82  6D                 	db	109	;'m'
   190  00FD83  70                 	db	112	;'p'
   191  00FD84  6C                 	db	108	;'l'
   192  00FD85  65                 	db	101	;'e'
   193  00FD86  74                 	db	116	;'t'
   194  00FD87  65                 	db	101	;'e'
   195  00FD88  0A                 	db	10
   196  00FD89  0D                 	db	13
   197  00FD8A  20                 	db	32
   198  00FD8B  20                 	db	32
   199  00FD8C  20                 	db	32
   200  00FD8D  20                 	db	32
   201  00FD8E  50                 	db	80	;'P'
   202  00FD8F  49                 	db	73	;'I'
   203  00FD90  43                 	db	67	;'C'
   204  00FD91  31                 	db	49	;'1'
   205  00FD92  38                 	db	56	;'8'
   206  00FD93  46                 	db	70	;'F'
   207  00FD94  36                 	db	54	;'6'
   208  00FD95  37                 	db	55	;'7'
   209  00FD96  4B                 	db	75	;'K'
   210  00FD97  34                 	db	52	;'4'
   211  00FD98  30                 	db	48	;'0'
   212  00FD99  20                 	db	32
   213  00FD9A  6D                 	db	109	;'m'
   214  00FD9B  54                 	db	84	;'T'
   215  00FD9C  6F                 	db	111	;'o'
   216  00FD9D  75                 	db	117	;'u'
   217  00FD9E  63                 	db	99	;'c'
   218  00FD9F  68                 	db	104	;'h'
   219  00FDA0  20                 	db	32
   220  00FDA1  54                 	db	84	;'T'
   221  00FDA2  65                 	db	101	;'e'
   222  00FDA3  73                 	db	115	;'s'
   223  00FDA4  74                 	db	116	;'t'
   224  00FDA5  20                 	db	32
   225  00FDA6  42                 	db	66	;'B'
   226  00FDA7  6F                 	db	111	;'o'
   227  00FDA8  61                 	db	97	;'a'
   228  00FDA9  72                 	db	114	;'r'
   229  00FDAA  64                 	db	100	;'d'
   230  00FDAB  0A                 	db	10
   231  00FDAC  0D                 	db	13
   232  00FDAD  20                 	db	32
   233  00FDAE  20                 	db	32
   234  00FDAF  20                 	db	32
   235  00FDB0  20                 	db	32
   236  00FDB1  45                 	db	69	;'E'
   237  00FDB2  76                 	db	118	;'v'
   238  00FDB3  61                 	db	97	;'a'
   239  00FDB4  6C                 	db	108	;'l'
   240  00FDB5  75                 	db	117	;'u'
   241  00FDB6  61                 	db	97	;'a'
   242  00FDB7  74                 	db	116	;'t'
   243  00FDB8  65                 	db	101	;'e'
   244  00FDB9  73                 	db	115	;'s'
   245  00FDBA  20                 	db	32
   246  00FDBB  74                 	db	116	;'t'
   247  00FDBC  68                 	db	104	;'h'
   248  00FDBD  65                 	db	101	;'e'
   249  00FDBE  20                 	db	32
   250  00FDBF  6D                 	db	109	;'m'
   251  00FDC0  54                 	db	84	;'T'
   252  00FDC1  6F                 	db	111	;'o'
   253  00FDC2  75                 	db	117	;'u'
   254  00FDC3  63                 	db	99	;'c'
   255  00FDC4  68                 	db	104	;'h'
   256  00FDC5  20                 	db	32
   257  00FDC6  63                 	db	99	;'c'
   258  00FDC7  61                 	db	97	;'a'
   259  00FDC8  70                 	db	112	;'p'
   260  00FDC9  61                 	db	97	;'a'
   261  00FDCA  63                 	db	99	;'c'
   262  00FDCB  69                 	db	105	;'i'
   263  00FDCC  74                 	db	116	;'t'
   264  00FDCD  69                 	db	105	;'i'
   265  00FDCE  76                 	db	118	;'v'
   266  00FDCF  65                 	db	101	;'e'
   267  00FDD0  20                 	db	32
   268  00FDD1  74                 	db	116	;'t'
   269  00FDD2  6F                 	db	111	;'o'
   270  00FDD3  75                 	db	117	;'u'
   271  00FDD4  63                 	db	99	;'c'
   272  00FDD5  68                 	db	104	;'h'
   273  00FDD6  20                 	db	32
   274  00FDD7  6C                 	db	108	;'l'
   275  00FDD8  69                 	db	105	;'i'
   276  00FDD9  62                 	db	98	;'b'
   277  00FDDA  72                 	db	114	;'r'
   278  00FDDB  61                 	db	97	;'a'
   279  00FDDC  72                 	db	114	;'r'
   280  00FDDD  79                 	db	121	;'y'
   281  00FDDE  20                 	db	32
   282  00FDDF  64                 	db	100	;'d'
   283  00FDE0  69                 	db	105	;'i'
   284  00FDE1  73                 	db	115	;'s'
   285  00FDE2  74                 	db	116	;'t'
   286  00FDE3  72                 	db	114	;'r'
   287  00FDE4  69                 	db	105	;'i'
   288  00FDE5  62                 	db	98	;'b'
   289  00FDE6  75                 	db	117	;'u'
   290  00FDE7  74                 	db	116	;'t'
   291  00FDE8  65                 	db	101	;'e'
   292  00FDE9  64                 	db	100	;'d'
   293  00FDEA  20                 	db	32
   294  00FDEB  62                 	db	98	;'b'
   295  00FDEC  79                 	db	121	;'y'
   296  00FDED  20                 	db	32
   297  00FDEE  4D                 	db	77	;'M'
   298  00FDEF  69                 	db	105	;'i'
   299  00FDF0  63                 	db	99	;'c'
   300  00FDF1  72                 	db	114	;'r'
   301  00FDF2  6F                 	db	111	;'o'
   302  00FDF3  63                 	db	99	;'c'
   303  00FDF4  68                 	db	104	;'h'
   304  00FDF5  69                 	db	105	;'i'
   305  00FDF6  70                 	db	112	;'p'
   306  00FDF7  0A                 	db	10
   307  00FDF8  0D                 	db	13
   308  00FDF9  20                 	db	32
   309  00FDFA  20                 	db	32
   310  00FDFB  20                 	db	32
   311  00FDFC  20                 	db	32
   312  00FDFD  53                 	db	83	;'S'
   313  00FDFE  65                 	db	101	;'e'
   314  00FDFF  74                 	db	116	;'t'
   315  00FE00  73                 	db	115	;'s'
   316  00FE01  20                 	db	32
   317  00FE02  74                 	db	116	;'t'
   318  00FE03  68                 	db	104	;'h'
   319  00FE04  65                 	db	101	;'e'
   320  00FE05  20                 	db	32
   321  00FE06  73                 	db	115	;'s'
   322  00FE07  74                 	db	116	;'t'
   323  00FE08  61                 	db	97	;'a'
   324  00FE09  74                 	db	116	;'t'
   325  00FE0A  65                 	db	101	;'e'
   326  00FE0B  20                 	db	32
   327  00FE0C  6F                 	db	111	;'o'
   328  00FE0D  66                 	db	102	;'f'
   329  00FE0E  20                 	db	32
   330  00FE0F  66                 	db	102	;'f'
   331  00FE10  69                 	db	105	;'i'
   332  00FE11  76                 	db	118	;'v'
   333  00FE12  65                 	db	101	;'e'
   334  00FE13  20                 	db	32
   335  00FE14  4C                 	db	76	;'L'
   336  00FE15  45                 	db	69	;'E'
   337  00FE16  44                 	db	68	;'D'
   338  00FE17  73                 	db	115	;'s'
   339  00FE18  20                 	db	32
   340  00FE19  62                 	db	98	;'b'
   341  00FE1A  61                 	db	97	;'a'
   342  00FE1B  73                 	db	115	;'s'
   343  00FE1C  65                 	db	101	;'e'
   344  00FE1D  64                 	db	100	;'d'
   345  00FE1E  20                 	db	32
   346  00FE1F  6F                 	db	111	;'o'
   347  00FE20  6E                 	db	110	;'n'
   348  00FE21  20                 	db	32
   349  00FE22  6D                 	db	109	;'m'
   350  00FE23  54                 	db	84	;'T'
   351  00FE24  6F                 	db	111	;'o'
   352  00FE25  75                 	db	117	;'u'
   353  00FE26  63                 	db	99	;'c'
   354  00FE27  68                 	db	104	;'h'
   355  00FE28  20                 	db	32
   356  00FE29  63                 	db	99	;'c'
   357  00FE2A  61                 	db	97	;'a'
   358  00FE2B  70                 	db	112	;'p'
   359  00FE2C  61                 	db	97	;'a'
   360  00FE2D  63                 	db	99	;'c'
   361  00FE2E  69                 	db	105	;'i'
   362  00FE2F  74                 	db	116	;'t'
   363  00FE30  69                 	db	105	;'i'
   364  00FE31  76                 	db	118	;'v'
   365  00FE32  65                 	db	101	;'e'
   366  00FE33  20                 	db	32
   367  00FE34  70                 	db	112	;'p'
   368  00FE35  75                 	db	117	;'u'
   369  00FE36  73                 	db	115	;'s'
   370  00FE37  68                 	db	104	;'h'
   371  00FE38  62                 	db	98	;'b'
   372  00FE39  75                 	db	117	;'u'
   373  00FE3A  74                 	db	116	;'t'
   374  00FE3B  74                 	db	116	;'t'
   375  00FE3C  6F                 	db	111	;'o'
   376  00FE3D  6E                 	db	110	;'n'
   377  00FE3E  73                 	db	115	;'s'
   378  00FE3F  0A                 	db	10
   379  00FE40  0D                 	db	13
   380  00FE41  20                 	db	32
   381  00FE42  20                 	db	32
   382  00FE43  20                 	db	32
   383  00FE44  20                 	db	32
   384  00FE45  42                 	db	66	;'B'
   385  00FE46  61                 	db	97	;'a'
   386  00FE47  75                 	db	117	;'u'
   387  00FE48  64                 	db	100	;'d'
   388  00FE49  20                 	db	32
   389  00FE4A  72                 	db	114	;'r'
   390  00FE4B  61                 	db	97	;'a'
   391  00FE4C  74                 	db	116	;'t'
   392  00FE4D  65                 	db	101	;'e'
   393  00FE4E  3A                 	db	58	;':'
   394  00FE4F  20                 	db	32
   395  00FE50  31                 	db	49	;'1'
   396  00FE51  31                 	db	49	;'1'
   397  00FE52  35                 	db	53	;'5'
   398  00FE53  32                 	db	50	;'2'
   399  00FE54  30                 	db	48	;'0'
   400  00FE55  30                 	db	48	;'0'
   401  00FE56  20                 	db	32
   402  00FE57  62                 	db	98	;'b'
   403  00FE58  70                 	db	112	;'p'
   404  00FE59  73                 	db	115	;'s'
   405  00FE5A  0A                 	db	10
   406  00FE5B  0D                 	db	13
   407  00FE5C  20                 	db	32
   408  00FE5D  20                 	db	32
   409  00FE5E  20                 	db	32
   410  00FE5F  20                 	db	32
   411  00FE60  4E                 	db	78	;'N'
   412  00FE61  6F                 	db	111	;'o'
   413  00FE62  20                 	db	32
   414  00FE63  70                 	db	112	;'p'
   415  00FE64  61                 	db	97	;'a'
   416  00FE65  72                 	db	114	;'r'
   417  00FE66  69                 	db	105	;'i'
   418  00FE67  74                 	db	116	;'t'
   419  00FE68  79                 	db	121	;'y'
   420  00FE69  2C                 	db	44
   421  00FE6A  20                 	db	32
   422  00FE6B  38                 	db	56	;'8'
   423  00FE6C  20                 	db	32
   424  00FE6D  62                 	db	98	;'b'
   425  00FE6E  69                 	db	105	;'i'
   426  00FE6F  74                 	db	116	;'t'
   427  00FE70  73                 	db	115	;'s'
   428  00FE71  2C                 	db	44
   429  00FE72  20                 	db	32
   430  00FE73  6E                 	db	110	;'n'
   431  00FE74  6F                 	db	111	;'o'
   432  00FE75  20                 	db	32
   433  00FE76  66                 	db	102	;'f'
   434  00FE77  6C                 	db	108	;'l'
   435  00FE78  6F                 	db	111	;'o'
   436  00FE79  77                 	db	119	;'w'
   437  00FE7A  20                 	db	32
   438  00FE7B  63                 	db	99	;'c'
   439  00FE7C  6F                 	db	111	;'o'
   440  00FE7D  6E                 	db	110	;'n'
   441  00FE7E  74                 	db	116	;'t'
   442  00FE7F  72                 	db	114	;'r'
   443  00FE80  6F                 	db	111	;'o'
   444  00FE81  6C                 	db	108	;'l'
   445  00FE82  2C                 	db	44
   446  00FE83  20                 	db	32
   447  00FE84  31                 	db	49	;'1'
   448  00FE85  20                 	db	32
   449  00FE86  73                 	db	115	;'s'
   450  00FE87  74                 	db	116	;'t'
   451  00FE88  6F                 	db	111	;'o'
   452  00FE89  70                 	db	112	;'p'
   453  00FE8A  20                 	db	32
   454  00FE8B  62                 	db	98	;'b'
   455  00FE8C  69                 	db	105	;'i'
   456  00FE8D  74                 	db	116	;'t'
   457  00FE8E  0A                 	db	10
   458  00FE8F  0D                 	db	13
   459  00FE90  20                 	db	32
   460  00FE91  20                 	db	32
   461  00FE92  20                 	db	32
   462  00FE93  20                 	db	32
   463  00FE94  43                 	db	67	;'C'
   464  00FE95  6F                 	db	111	;'o'
   465  00FE96  6D                 	db	109	;'m'
   466  00FE97  6D                 	db	109	;'m'
   467  00FE98  61                 	db	97	;'a'
   468  00FE99  6E                 	db	110	;'n'
   469  00FE9A  64                 	db	100	;'d'
   470  00FE9B  73                 	db	115	;'s'
   471  00FE9C  20                 	db	32
   472  00FE9D  61                 	db	97	;'a'
   473  00FE9E  72                 	db	114	;'r'
   474  00FE9F  65                 	db	101	;'e'
   475  00FEA0  20                 	db	32
   476  00FEA1  63                 	db	99	;'c'
   477  00FEA2  61                 	db	97	;'a'
   478  00FEA3  73                 	db	115	;'s'
   479  00FEA4  65                 	db	101	;'e'
   480  00FEA5  20                 	db	32
   481  00FEA6  73                 	db	115	;'s'
   482  00FEA7  65                 	db	101	;'e'
   483  00FEA8  6E                 	db	110	;'n'
   484  00FEA9  73                 	db	115	;'s'
   485  00FEAA  69                 	db	105	;'i'
   486  00FEAB  74                 	db	116	;'t'
   487  00FEAC  69                 	db	105	;'i'
   488  00FEAD  76                 	db	118	;'v'
   489  00FEAE  65                 	db	101	;'e'
   490  00FEAF  0A                 	db	10
   491  00FEB0  0D                 	db	13
   492  00FEB1  20                 	db	32
   493  00FEB2  20                 	db	32
   494  00FEB3  20                 	db	32
   495  00FEB4  20                 	db	32
   496  00FEB5  45                 	db	69	;'E'
   497  00FEB6  6E                 	db	110	;'n'
   498  00FEB7  74                 	db	116	;'t'
   499  00FEB8  65                 	db	101	;'e'
   500  00FEB9  72                 	db	114	;'r'
   501  00FEBA  20                 	db	32
   502  00FEBB  61                 	db	97	;'a'
   503  00FEBC  20                 	db	32
   504  00FEBD  63                 	db	99	;'c'
   505  00FEBE  6F                 	db	111	;'o'
   506  00FEBF  6D                 	db	109	;'m'
   507  00FEC0  6D                 	db	109	;'m'
   508  00FEC1  61                 	db	97	;'a'
   509  00FEC2  6E                 	db	110	;'n'
   510  00FEC3  64                 	db	100	;'d'
   511  00FEC4  2C                 	db	44
   512  00FEC5  20                 	db	32
   513  00FEC6  6F                 	db	111	;'o'
   514  00FEC7  72                 	db	114	;'r'
   515  00FEC8  20                 	db	32
   516  00FEC9  65                 	db	101	;'e'
   517  00FECA  6E                 	db	110	;'n'
   518  00FECB  74                 	db	116	;'t'
   519  00FECC  65                 	db	101	;'e'
   520  00FECD  72                 	db	114	;'r'
   521  00FECE  20                 	db	32
   522  00FECF  48                 	db	72	;'H'
   523  00FED0  65                 	db	101	;'e'
   524  00FED1  6C                 	db	108	;'l'
   525  00FED2  70                 	db	112	;'p'
   526  00FED3  20                 	db	32
   527  00FED4  66                 	db	102	;'f'
   528  00FED5  6F                 	db	111	;'o'
   529  00FED6  72                 	db	114	;'r'
   530  00FED7  20                 	db	32
   531  00FED8  6C                 	db	108	;'l'
   532  00FED9  69                 	db	105	;'i'
   533  00FEDA  73                 	db	115	;'s'
   534  00FEDB  74                 	db	116	;'t'
   535  00FEDC  20                 	db	32
   536  00FEDD  6F                 	db	111	;'o'
   537  00FEDE  66                 	db	102	;'f'
   538  00FEDF  20                 	db	32
   539  00FEE0  63                 	db	99	;'c'
   540  00FEE1  6F                 	db	111	;'o'
   541  00FEE2  6D                 	db	109	;'m'
   542  00FEE3  6D                 	db	109	;'m'
   543  00FEE4  61                 	db	97	;'a'
   544  00FEE5  6E                 	db	110	;'n'
   545  00FEE6  64                 	db	100	;'d'
   546  00FEE7  73                 	db	115	;'s'
   547  00FEE8  0A                 	db	10
   548  00FEE9  0D                 	db	13
   549  00FEEA  00                 	db	0
   550  00FEEB                     STR_19:
   551                           
   552                           ; BSR set to: 14
   553  00FEEB  4C                 	db	76	;'L'
   554  00FEEC  69                 	db	105	;'i'
   555  00FEED  73                 	db	115	;'s'
   556  00FEEE  74                 	db	116	;'t'
   557  00FEEF  20                 	db	32
   558  00FEF0  6F                 	db	111	;'o'
   559  00FEF1  66                 	db	102	;'f'
   560  00FEF2  20                 	db	32
   561  00FEF3  73                 	db	115	;'s'
   562  00FEF4  75                 	db	117	;'u'
   563  00FEF5  70                 	db	112	;'p'
   564  00FEF6  70                 	db	112	;'p'
   565  00FEF7  6F                 	db	111	;'o'
   566  00FEF8  72                 	db	114	;'r'
   567  00FEF9  74                 	db	116	;'t'
   568  00FEFA  65                 	db	101	;'e'
   569  00FEFB  64                 	db	100	;'d'
   570  00FEFC  20                 	db	32
   571  00FEFD  63                 	db	99	;'c'
   572  00FEFE  6F                 	db	111	;'o'
   573  00FEFF  6D                 	db	109	;'m'
   574  00FF00  6D                 	db	109	;'m'
   575  00FF01  61                 	db	97	;'a'
   576  00FF02  6E                 	db	110	;'n'
   577  00FF03  64                 	db	100	;'d'
   578  00FF04  73                 	db	115	;'s'
   579  00FF05  3A                 	db	58	;':'
   580  00FF06  0A                 	db	10
   581  00FF07  0D                 	db	13
   582  00FF08  20                 	db	32
   583  00FF09  20                 	db	32
   584  00FF0A  20                 	db	32
   585  00FF0B  52                 	db	82	;'R'
   586  00FF0C  65                 	db	101	;'e'
   587  00FF0D  73                 	db	115	;'s'
   588  00FF0E  65                 	db	101	;'e'
   589  00FF0F  74                 	db	116	;'t'
   590  00FF10  3A                 	db	58	;':'
   591  00FF11  20                 	db	32
   592  00FF12  43                 	db	67	;'C'
   593  00FF13  6C                 	db	108	;'l'
   594  00FF14  65                 	db	101	;'e'
   595  00FF15  61                 	db	97	;'a'
   596  00FF16  72                 	db	114	;'r'
   597  00FF17  73                 	db	115	;'s'
   598  00FF18  20                 	db	32
   599  00FF19  74                 	db	116	;'t'
   600  00FF1A  68                 	db	104	;'h'
   601  00FF1B  65                 	db	101	;'e'
   602  00FF1C  20                 	db	32
   603  00FF1D  74                 	db	116	;'t'
   604  00FF1E  65                 	db	101	;'e'
   605  00FF1F  72                 	db	114	;'r'
   606  00FF20  6D                 	db	109	;'m'
   607  00FF21  69                 	db	105	;'i'
   608  00FF22  6E                 	db	110	;'n'
   609  00FF23  61                 	db	97	;'a'
   610  00FF24  6C                 	db	108	;'l'
   611  00FF25  20                 	db	32
   612  00FF26  61                 	db	97	;'a'
   613  00FF27  6E                 	db	110	;'n'
   614  00FF28  64                 	db	100	;'d'
   615  00FF29  20                 	db	32
   616  00FF2A  72                 	db	114	;'r'
   617  00FF2B  65                 	db	101	;'e'
   618  00FF2C  73                 	db	115	;'s'
   619  00FF2D  65                 	db	101	;'e'
   620  00FF2E  74                 	db	116	;'t'
   621  00FF2F  73                 	db	115	;'s'
   622  00FF30  20                 	db	32
   623  00FF31  74                 	db	116	;'t'
   624  00FF32  68                 	db	104	;'h'
   625  00FF33  65                 	db	101	;'e'
   626  00FF34  20                 	db	32
   627  00FF35  6D                 	db	109	;'m'
   628  00FF36  69                 	db	105	;'i'
   629  00FF37  63                 	db	99	;'c'
   630  00FF38  72                 	db	114	;'r'
   631  00FF39  6F                 	db	111	;'o'
   632  00FF3A  0A                 	db	10
   633  00FF3B  0D                 	db	13
   634  00FF3C  20                 	db	32
   635  00FF3D  20                 	db	32
   636  00FF3E  20                 	db	32
   637  00FF3F  43                 	db	67	;'C'
   638  00FF40  6C                 	db	108	;'l'
   639  00FF41  65                 	db	101	;'e'
   640  00FF42  61                 	db	97	;'a'
   641  00FF43  72                 	db	114	;'r'
   642  00FF44  3A                 	db	58	;':'
   643  00FF45  20                 	db	32
   644  00FF46  43                 	db	67	;'C'
   645  00FF47  6C                 	db	108	;'l'
   646  00FF48  65                 	db	101	;'e'
   647  00FF49  61                 	db	97	;'a'
   648  00FF4A  72                 	db	114	;'r'
   649  00FF4B  73                 	db	115	;'s'
   650  00FF4C  20                 	db	32
   651  00FF4D  74                 	db	116	;'t'
   652  00FF4E  68                 	db	104	;'h'
   653  00FF4F  65                 	db	101	;'e'
   654  00FF50  20                 	db	32
   655  00FF51  74                 	db	116	;'t'
   656  00FF52  65                 	db	101	;'e'
   657  00FF53  72                 	db	114	;'r'
   658  00FF54  6D                 	db	109	;'m'
   659  00FF55  69                 	db	105	;'i'
   660  00FF56  6E                 	db	110	;'n'
   661  00FF57  61                 	db	97	;'a'
   662  00FF58  6C                 	db	108	;'l'
   663  00FF59  20                 	db	32
   664  00FF5A  62                 	db	98	;'b'
   665  00FF5B  75                 	db	117	;'u'
   666  00FF5C  74                 	db	116	;'t'
   667  00FF5D  20                 	db	32
   668  00FF5E  64                 	db	100	;'d'
   669  00FF5F  6F                 	db	111	;'o'
   670  00FF60  65                 	db	101	;'e'
   671  00FF61  73                 	db	115	;'s'
   672  00FF62  6E                 	db	110	;'n'
   673  00FF63  27                 	db	39
   674  00FF64  74                 	db	116	;'t'
   675  00FF65  20                 	db	32
   676  00FF66  72                 	db	114	;'r'
   677  00FF67  65                 	db	101	;'e'
   678  00FF68  73                 	db	115	;'s'
   679  00FF69  65                 	db	101	;'e'
   680  00FF6A  74                 	db	116	;'t'
   681  00FF6B  20                 	db	32
   682  00FF6C  74                 	db	116	;'t'
   683  00FF6D  68                 	db	104	;'h'
   684  00FF6E  65                 	db	101	;'e'
   685  00FF6F  20                 	db	32
   686  00FF70  6D                 	db	109	;'m'
   687  00FF71  69                 	db	105	;'i'
   688  00FF72  63                 	db	99	;'c'
   689  00FF73  72                 	db	114	;'r'
   690  00FF74  6F                 	db	111	;'o'
   691  00FF75  0A                 	db	10
   692  00FF76  0D                 	db	13
   693  00FF77  20                 	db	32
   694  00FF78  20                 	db	32
   695  00FF79  20                 	db	32
   696  00FF7A  2A                 	db	42
   697  00FF7B  49                 	db	73	;'I'
   698  00FF7C  44                 	db	68	;'D'
   699  00FF7D  4E                 	db	78	;'N'
   700  00FF7E  3F                 	db	63	;'?'
   701  00FF7F  3A                 	db	58	;':'
   702  00FF80  20                 	db	32
   703  00FF81  52                 	db	82	;'R'
   704  00FF82  65                 	db	101	;'e'
   705  00FF83  74                 	db	116	;'t'
   706  00FF84  75                 	db	117	;'u'
   707  00FF85  72                 	db	114	;'r'
   708  00FF86  6E                 	db	110	;'n'
   709  00FF87  73                 	db	115	;'s'
   710  00FF88  20                 	db	32
   711  00FF89  64                 	db	100	;'d'
   712  00FF8A  65                 	db	101	;'e'
   713  00FF8B  76                 	db	118	;'v'
   714  00FF8C  69                 	db	105	;'i'
   715  00FF8D  63                 	db	99	;'c'
   716  00FF8E  65                 	db	101	;'e'
   717  00FF8F  20                 	db	32
   718  00FF90  69                 	db	105	;'i'
   719  00FF91  64                 	db	100	;'d'
   720  00FF92  65                 	db	101	;'e'
   721  00FF93  6E                 	db	110	;'n'
   722  00FF94  74                 	db	116	;'t'
   723  00FF95  69                 	db	105	;'i'
   724  00FF96  66                 	db	102	;'f'
   725  00FF97  69                 	db	105	;'i'
   726  00FF98  63                 	db	99	;'c'
   727  00FF99  61                 	db	97	;'a'
   728  00FF9A  74                 	db	116	;'t'
   729  00FF9B  69                 	db	105	;'i'
   730  00FF9C  6F                 	db	111	;'o'
   731  00FF9D  6E                 	db	110	;'n'
   732  00FF9E  0A                 	db	10
   733  00FF9F  0D                 	db	13
   734  00FFA0  20                 	db	32
   735  00FFA1  20                 	db	32
   736  00FFA2  20                 	db	32
   737  00FFA3  48                 	db	72	;'H'
   738  00FFA4  65                 	db	101	;'e'
   739  00FFA5  6C                 	db	108	;'l'
   740  00FFA6  70                 	db	112	;'p'
   741  00FFA7  3A                 	db	58	;':'
   742  00FFA8  20                 	db	32
   743  00FFA9  54                 	db	84	;'T'
   744  00FFAA  68                 	db	104	;'h'
   745  00FFAB  69                 	db	105	;'i'
   746  00FFAC  73                 	db	115	;'s'
   747  00FFAD  20                 	db	32
   748  00FFAE  6D                 	db	109	;'m'
   749  00FFAF  65                 	db	101	;'e'
   750  00FFB0  73                 	db	115	;'s'
   751  00FFB1  73                 	db	115	;'s'
   752  00FFB2  61                 	db	97	;'a'
   753  00FFB3  67                 	db	103	;'g'
   754  00FFB4  65                 	db	101	;'e'
   755  00FFB5  2C                 	db	44
   756  00FFB6  20                 	db	32
   757  00FFB7  6C                 	db	108	;'l'
   758  00FFB8  69                 	db	105	;'i'
   759  00FFB9  73                 	db	115	;'s'
   760  00FFBA  74                 	db	116	;'t'
   761  00FFBB  73                 	db	115	;'s'
   762  00FFBC  20                 	db	32
   763  00FFBD  63                 	db	99	;'c'
   764  00FFBE  6F                 	db	111	;'o'
   765  00FFBF  6D                 	db	109	;'m'
   766  00FFC0  6D                 	db	109	;'m'
   767  00FFC1  61                 	db	97	;'a'
   768  00FFC2  6E                 	db	110	;'n'
   769  00FFC3  64                 	db	100	;'d'
   770  00FFC4  73                 	db	115	;'s'
   771  00FFC5  0A                 	db	10
   772  00FFC6  0D                 	db	13
   773  00FFC7  00                 	db	0
   774  00FFC8                     STR_15:
   775                           
   776                           ; BSR set to: 14
   777  00FFC8  41                 	db	65	;'A'
   778  00FFC9  43                 	db	67	;'C'
   779  00FFCA  20                 	db	32
   780  00FFCB  50                 	db	80	;'P'
   781  00FFCC  6F                 	db	111	;'o'
   782  00FFCD  77                 	db	119	;'w'
   783  00FFCE  65                 	db	101	;'e'
   784  00FFCF  72                 	db	114	;'r'
   785  00FFD0  20                 	db	32
   786  00FFD1  4D                 	db	77	;'M'
   787  00FFD2  65                 	db	101	;'e'
   788  00FFD3  74                 	db	116	;'t'
   789  00FFD4  65                 	db	101	;'e'
   790  00FFD5  72                 	db	114	;'r'
   791  00FFD6  00                 	db	0
   792  00FFD7                     STR_12:
   793                           
   794                           ; BSR set to: 14
   795  00FFD7  2A                 	db	42
   796  00FFD8  49                 	db	73	;'I'
   797  00FFD9  44                 	db	68	;'D'
   798  00FFDA  4E                 	db	78	;'N'
   799  00FFDB  3F                 	db	63	;'?'
   800  00FFDC  00                 	db	0
   801  00FFDD                     STR_9:
   802                           
   803                           ; BSR set to: 14
   804  00FFDD  43                 	db	67	;'C'
   805  00FFDE  6C                 	db	108	;'l'
   806  00FFDF  65                 	db	101	;'e'
   807  00FFE0  61                 	db	97	;'a'
   808  00FFE1  72                 	db	114	;'r'
   809  00FFE2  00                 	db	0
   810  00FFE3                     STR_6:
   811                           
   812                           ; BSR set to: 14
   813  00FFE3  52                 	db	82	;'R'
   814  00FFE4  65                 	db	101	;'e'
   815  00FFE5  73                 	db	115	;'s'
   816  00FFE6  65                 	db	101	;'e'
   817  00FFE7  74                 	db	116	;'t'
   818  00FFE8  00                 	db	0
   819  00FFE9                     STR_17:
   820                           
   821                           ; BSR set to: 14
   822  00FFE9  48                 	db	72	;'H'
   823  00FFEA  65                 	db	101	;'e'
   824  00FFEB  6C                 	db	108	;'l'
   825  00FFEC  70                 	db	112	;'p'
   826  00FFED  00                 	db	0
   827  00FFEE                     STR_2:
   828                           
   829                           ; BSR set to: 14
   830  00FFEE  1B                 	db	27
   831  00FFEF  5B                 	db	91	;'['
   832  00FFF0  32                 	db	50	;'2'
   833  00FFF1  4A                 	db	74	;'J'
   834  00FFF2  00                 	db	0
   835  00FFF3                     STR_13:
   836                           
   837                           ; BSR set to: 14
   838  00FFF3  49                 	db	73	;'I'
   839  00FFF4  44                 	db	68	;'D'
   840  00FFF5  4E                 	db	78	;'N'
   841  00FFF6  00                 	db	0
   842  00FFF7                     STR_3:
   843                           
   844                           ; BSR set to: 14
   845  00FFF7  1B                 	db	27
   846  00FFF8  5B                 	db	91	;'['
   847  00FFF9  48                 	db	72	;'H'
   848  00FFFA  00                 	db	0
   849  00FFFB                     STR_1:
   850                           
   851                           ; BSR set to: 14
   852  00FFFB  1B                 	db	27
   853  00FFFC  5B                 	db	91	;'['
   854  00FFFD  4B                 	db	75	;'K'
   855  00FFFE  00                 	db	0
   856  0000                     
   857                           ; #config settings
   858  00FFFF  00                 	db	0	; dummy byte at the end
   859  0000                     
   860                           	psect	cinit
   861  0106C0                     __pcinit:
   862                           	opt stack 0
   863  0106C0                     start_initialization:
   864                           	opt stack 0
   865  0106C0                     __initialization:
   866                           	opt stack 0
   867                           
   868                           ; Clear objects allocated to BANK1 (64 bytes)
   869  0106C0  EE01  F000         	lfsr	0,__pbssBANK1
   870  0106C4  0E40               	movlw	64
   871  0106C6                     clear_0:
   872  0106C6  6AEE               	clrf	postinc0,c
   873  0106C8  06E8               	decf	wreg,f,c
   874  0106CA  E1FD               	bnz	clear_0
   875                           
   876                           ; Clear objects allocated to BANK0 (139 bytes)
   877  0106CC  EE00  F060         	lfsr	0,__pbssBANK0
   878  0106D0  0E8B               	movlw	139
   879  0106D2                     clear_1:
   880  0106D2  6AEE               	clrf	postinc0,c
   881  0106D4  06E8               	decf	wreg,f,c
   882  0106D6  E1FD               	bnz	clear_1
   883                           
   884                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   885  0106D8  6A34               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   886                           
   887                           ; Clear objects allocated to COMRAM (4 bytes)
   888  0106DA  6A33               	clrf	(__pbssCOMRAM+3)& (0+255),c
   889  0106DC  6A32               	clrf	(__pbssCOMRAM+2)& (0+255),c
   890  0106DE  6A31               	clrf	(__pbssCOMRAM+1)& (0+255),c
   891  0106E0  6A30               	clrf	__pbssCOMRAM& (0+255),c
   892  0106E2                     end_of_initialization:
   893                           	opt stack 0
   894  0106E2                     __end_of__initialization:
   895                           	opt stack 0
   896  0106E2  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   897  0106E4  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   898  0106E6  0100               	movlb	0
   899  0106E8  EF8A  F083         	goto	_main	;jump to C main() function
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           
   903                           	psect	bitbssCOMRAM
   904  0001A0                     __pbitbssCOMRAM:
   905                           	opt stack 0
   906  0001A0                     _eusart2RxStringReady:
   907                           	opt stack 0
   908  0001A0                     	ds	1
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           
   912                           	psect	bssCOMRAM
   913  000030                     __pbssCOMRAM:
   914                           	opt stack 0
   915  000030                     _EUSART2_RxDefaultInterruptHandler:
   916                           	opt stack 0
   917  000030                     	ds	3
   918  000033                     _eusart2RxHead:
   919                           	opt stack 0
   920  000033                     	ds	1
   921                           postinc0	equ	0xFEE
   922                           wreg	equ	0xFE8
   923                           
   924                           	psect	bssBANK0
   925  000060                     __pbssBANK0:
   926                           	opt stack 0
   927  000060                     _eusart2RxBuffer:
   928                           	opt stack 0
   929  000060                     	ds	64
   930  0000A0                     _TMR6_InterruptHandler:
   931                           	opt stack 0
   932  0000A0                     	ds	3
   933  0000A3                     _EUSART2_TxDefaultInterruptHandler:
   934                           	opt stack 0
   935  0000A3                     	ds	3
   936  0000A6                     _eusart2RxCount:
   937                           	opt stack 0
   938  0000A6                     	ds	1
   939  0000A7                     _eusart2RxTail:
   940                           	opt stack 0
   941  0000A7                     	ds	1
   942  0000A8                     _eusart2TxBufferRemaining:
   943                           	opt stack 0
   944  0000A8                     	ds	1
   945  0000A9                     _eusart2TxTail:
   946                           	opt stack 0
   947  0000A9                     	ds	1
   948  0000AA                     _eusart2TxHead:
   949                           	opt stack 0
   950  0000AA                     	ds	1
   951  0000AB                     _line:
   952                           	opt stack 0
   953  0000AB                     	ds	64
   954                           postinc0	equ	0xFEE
   955                           wreg	equ	0xFE8
   956                           
   957                           	psect	bssBANK1
   958  000100                     __pbssBANK1:
   959                           	opt stack 0
   960  000100                     _eusart2TxBuffer:
   961                           	opt stack 0
   962  000100                     	ds	64
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           
   966                           	psect	cstackBANK0
   967  0000EB                     __pcstackBANK0:
   968                           	opt stack 0
   969  0000EB                     ?_strlen:
   970                           	opt stack 0
   971  0000EB                     ?_strcmp:
   972                           	opt stack 0
   973  0000EB                     EUSART2_Read@readValue:
   974                           	opt stack 0
   975  0000EB                     EUSART2_Write@txData:
   976                           	opt stack 0
   977  0000EB                     strcmp@s1:
   978                           	opt stack 0
   979  0000EB                     strlen@s:
   980                           	opt stack 0
   981  0000EB                     TMR6_SetInterruptHandler@InterruptHandler:
   982                           	opt stack 0
   983  0000EB                     EUSART2_SetTxInterruptHandler@interruptHandler:
   984                           	opt stack 0
   985  0000EB                     EUSART2_SetRxInterruptHandler@interruptHandler:
   986                           	opt stack 0
   987                           
   988                           ; 3 bytes @ 0x0
   989  0000EB                     	ds	1
   990  0000EC                     putch@txData:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x1
   994  0000EC                     	ds	1
   995  0000ED                     ??_strlen:
   996  0000ED                     ?_printf:
   997                           	opt stack 0
   998  0000ED                     printf@f:
   999                           	opt stack 0
  1000  0000ED                     strcmp@s2:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0x2
  1004  0000ED                     	ds	1
  1005  0000EE                     
  1006                           ; 1 bytes @ 0x3
  1007  0000EE                     	ds	1
  1008  0000EF                     ??_strcmp:
  1009  0000EF                     printf@ap:
  1010                           	opt stack 0
  1011  0000EF                     strlen@cp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x4
  1015  0000EF                     	ds	1
  1016  0000F0                     strcmp@r:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x5
  1020  0000F0                     	ds	1
  1021  0000F1                     printf@c:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x6
  1025  0000F1                     	ds	1
  1026  0000F2                     ringBufferLUT@line:
  1027                           	opt stack 0
  1028                           
  1029                           ; 2 bytes @ 0x7
  1030  0000F2                     	ds	2
  1031  0000F4                     ??_ringBufferPull:
  1032  0000F4                     
  1033                           ; 1 bytes @ 0x9
  1034  0000F4                     	ds	3
  1035  0000F7                     ringBufferPull@charNumber:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0xC
  1039  0000F7                     	ds	2
  1040  0000F9                     ringBufferPull@index_984:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0xE
  1044  0000F9                     	ds	2
  1045  0000FB                     ringBufferPull@index:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x10
  1049  0000FB                     	ds	2
  1050  0000FD                     postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           
  1053                           ; 1 bytes @ 0x12
  1054                           
  1055                           	psect	cstackCOMRAM
  1056  000001                     __pcstackCOMRAM:
  1057                           	opt stack 0
  1058  000001                     i2EUSART2_Write@txData:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x0
  1062  000001                     	ds	1
  1063  000002                     i2putch@txData:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x1
  1067  000002                     	ds	1
  1068  000003                     ?i2_printf:
  1069                           	opt stack 0
  1070  000003                     i2printf@f:
  1071                           	opt stack 0
  1072                           
  1073                           ; 2 bytes @ 0x2
  1074  000003                     	ds	2
  1075  000005                     i2printf@ap:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x4
  1079  000005                     	ds	2
  1080  000007                     i2printf@c:
  1081                           	opt stack 0
  1082                           
  1083                           ; 1 bytes @ 0x6
  1084  000007                     	ds	1
  1085  000008                     ??_INTERRUPT_InterruptManagerHigh:
  1086                           
  1087                           ; 1 bytes @ 0x7
  1088  000008                     	ds	18
  1089  00001A                     ??_heartbeatTimerCallback:
  1090                           
  1091                           ; 1 bytes @ 0x19
  1092  00001A                     	ds	1
  1093  00001B                     ??_INTERRUPT_InterruptManagerLow:
  1094                           
  1095                           ; 1 bytes @ 0x1A
  1096  00001B                     	ds	21
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           
  1100 ;;
  1101 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1102 ;;
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 72 in file "main.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels required when called:   13
  1125 ;; This function calls:
  1126 ;;		_SYSTEM_Initialize
  1127 ;;		_TMR6_SetInterruptHandler
  1128 ;;		_ringBufferPull
  1129 ;; This function is called by:
  1130 ;;		Startup code after reset
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text0
  1135  010714                     __ptext0:
  1136                           	opt stack 0
  1137  010714                     _main:
  1138                           	opt stack 18
  1139                           
  1140                           ;main.c: 75: SYSTEM_Initialize();
  1141                           
  1142                           ;incstack = 0
  1143  010714  ECC7  F083         	call	_SYSTEM_Initialize	;wreg free
  1144                           
  1145                           ;main.c: 78: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  1146  010718  0E38               	movlw	low _heartbeatTimerCallback
  1147  01071A  0100               	movlb	0	; () banked
  1148  01071C  6FEB               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  1149  01071E  0E07               	movlw	high _heartbeatTimerCallback
  1150  010720  6FEC               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1151  010722  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  1152  010724  6FED               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  1153  010726  ECDB  F083         	call	_TMR6_SetInterruptHandler	;wreg free
  1154                           
  1155                           ;main.c: 81: (INTCONbits.GIEH = 1);
  1156  01072A  8EF2               	bsf	intcon,7,c	;volatile
  1157                           
  1158                           ;main.c: 84: (INTCONbits.GIEL = 1);
  1159  01072C  8CF2               	bsf	intcon,6,c	;volatile
  1160  01072E                     
  1161                           ;main.c: 88: {
  1162                           ;main.c: 92: if (eusart2RxStringReady) {
  1163  01072E  A034               	btfss	_eusart2RxStringReady/(0+8),_eusart2RxStringReady& (0+7),c	;volatile
  1164  010730  D7FE               	goto	l78
  1165                           
  1166                           ;main.c: 94: ringBufferPull();
  1167  010732  EC96  F080         	call	_ringBufferPull	;wreg free
  1168  010736  D7FB               	goto	l78
  1169  010738                     __end_of_main:
  1170                           	opt stack 0
  1171                           intcon	equ	0xFF2
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           
  1175 ;; *************** function _ringBufferPull *****************
  1176 ;; Defined at:
  1177 ;;		line 8 in file "ring_buffer_interface.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  index           2   14[BANK0 ] int 
  1182 ;;  index           2   16[BANK0 ] int 
  1183 ;;  charNumber      2   12[BANK0 ] int 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1196 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1197 ;;Total ram usage:        9 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:   12
  1200 ;; This function calls:
  1201 ;;		_EUSART2_Read
  1202 ;;		_ringBufferLUT
  1203 ;;		_strlen
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text1
  1210  01012C                     __ptext1:
  1211                           	opt stack 0
  1212  01012C                     _ringBufferPull:
  1213                           	opt stack 18
  1214                           
  1215                           ;ring_buffer_interface.c: 10: int charNumber = eusart2RxCount;
  1216                           
  1217                           ;incstack = 0
  1218  01012C  C0A6  F0F7         	movff	_eusart2RxCount,ringBufferPull@charNumber	;volatile
  1219  010130  0100               	movlb	0	; () banked
  1220  010132  6BF8               	clrf	(ringBufferPull@charNumber+1)& (0+255),b
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;ring_buffer_interface.c: 13: for (int index = 0; index < 64; index++) {
  1224  010134  0E00               	movlw	0
  1225  010136  6FFC               	movwf	(ringBufferPull@index+1)& (0+255),b
  1226  010138  0E00               	movlw	0
  1227  01013A  6FFB               	movwf	ringBufferPull@index& (0+255),b
  1228  01013C                     l1941:
  1229                           
  1230                           ; BSR set to: 0
  1231  01013C  BFFC               	btfsc	(ringBufferPull@index+1)& (0+255),7,b
  1232  01013E  D006               	goto	l438
  1233  010140  51FC               	movf	(ringBufferPull@index+1)& (0+255),w,b
  1234  010142  E10F               	bnz	l1951
  1235  010144  0E40               	movlw	64
  1236  010146  5DFB               	subwf	ringBufferPull@index& (0+255),w,b
  1237  010148  B0D8               	btfsc	status,0,c
  1238  01014A  D00B               	goto	u1030
  1239  01014C                     l438:
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;ring_buffer_interface.c: 15: line[index] = '\0';
  1243                           
  1244                           ; BSR set to: 0
  1245  01014C  0EAB               	movlw	low _line
  1246  01014E  25FB               	addwf	ringBufferPull@index& (0+255),w,b
  1247  010150  6ED9               	movwf	fsr2l,c
  1248  010152  0E00               	movlw	high _line
  1249  010154  21FC               	addwfc	(ringBufferPull@index+1)& (0+255),w,b
  1250  010156  6EDA               	movwf	fsr2h,c
  1251  010158  0E00               	movlw	0
  1252  01015A  6EDF               	movwf	indf2,c
  1253                           
  1254                           ; BSR set to: 0
  1255  01015C  4BFB               	infsnz	ringBufferPull@index& (0+255),f,b
  1256  01015E  2BFC               	incf	(ringBufferPull@index+1)& (0+255),f,b
  1257  010160  D7ED               	goto	l1941
  1258  010162                     u1030:
  1259  010162                     l1951:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;ring_buffer_interface.c: 17: }
  1263                           ;ring_buffer_interface.c: 20: for(int index = 0; index < charNumber; index++){
  1264  010162  0E00               	movlw	0
  1265  010164  6FFA               	movwf	(ringBufferPull@index_984+1)& (0+255),b
  1266  010166  0E00               	movlw	0
  1267  010168  6FF9               	movwf	ringBufferPull@index_984& (0+255),b
  1268  01016A  D00E               	goto	l440
  1269  01016C                     
  1270                           ; BSR set to: 0
  1271                           ;ring_buffer_interface.c: 22: line[index] = EUSART2_Read();
  1272                           
  1273                           ; BSR set to: 0
  1274  01016C  ECBB  F082         	call	_EUSART2_Read	;wreg free
  1275  010170  0100               	movlb	0	; () banked
  1276  010172  6FF4               	movwf	??_ringBufferPull& (0+255),b
  1277  010174  0EAB               	movlw	low _line
  1278  010176  25F9               	addwf	ringBufferPull@index_984& (0+255),w,b
  1279  010178  6ED9               	movwf	fsr2l,c
  1280  01017A  0E00               	movlw	high _line
  1281  01017C  21FA               	addwfc	(ringBufferPull@index_984+1)& (0+255),w,b
  1282  01017E  6EDA               	movwf	fsr2h,c
  1283  010180  C0F4  FFDF         	movff	??_ringBufferPull,indf2
  1284                           
  1285                           ; BSR set to: 0
  1286  010184  4BF9               	infsnz	ringBufferPull@index_984& (0+255),f,b
  1287  010186  2BFA               	incf	(ringBufferPull@index_984+1)& (0+255),f,b
  1288  010188                     l440:
  1289                           
  1290                           ; BSR set to: 0
  1291                           
  1292                           ; BSR set to: 0
  1293  010188  51F7               	movf	ringBufferPull@charNumber& (0+255),w,b
  1294  01018A  5DF9               	subwf	ringBufferPull@index_984& (0+255),w,b
  1295  01018C  51FA               	movf	(ringBufferPull@index_984+1)& (0+255),w,b
  1296  01018E  0A80               	xorlw	128
  1297  010190  6FF4               	movwf	??_ringBufferPull& (0+255),b
  1298  010192  51F8               	movf	(ringBufferPull@charNumber+1)& (0+255),w,b
  1299  010194  0A80               	xorlw	128
  1300  010196  59F4               	subwfb	??_ringBufferPull& (0+255),w,b
  1301  010198  A0D8               	btfss	status,0,c
  1302  01019A  D7E8               	goto	l441
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;ring_buffer_interface.c: 24: }
  1306                           ;ring_buffer_interface.c: 27: eusart2RxTail = eusart2RxHead;
  1307  01019C  C033  F0A7         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  1308                           
  1309                           ;ring_buffer_interface.c: 30: while((line[strlen(line) - 1] == (int) '\n') ||
  1310                           ;ring_buffer_interface.c: 31: (line[strlen(line) - 1] == (int) '\r')) {
  1311  0101A0  D017               	goto	l443
  1312  0101A2                     
  1313                           ; BSR set to: 0
  1314                           ;ring_buffer_interface.c: 34: line[strlen(line) - 1] = '\0';
  1315                           
  1316                           ; BSR set to: 0
  1317  0101A2  0EFF               	movlw	255
  1318  0101A4  6FF4               	movwf	??_ringBufferPull& (0+255),b
  1319  0101A6  0EFF               	movlw	255
  1320  0101A8  6FF5               	movwf	(??_ringBufferPull+1)& (0+255),b
  1321  0101AA  0EAB               	movlw	low _line
  1322  0101AC  6FEB               	movwf	strlen@s& (0+255),b
  1323  0101AE  0E00               	movlw	high _line
  1324  0101B0  6FEC               	movwf	(strlen@s+1)& (0+255),b
  1325  0101B2  ECDD  F082         	call	_strlen	;wreg free
  1326  0101B6  0100               	movlb	0	; () banked
  1327  0101B8  51F4               	movf	??_ringBufferPull& (0+255),w,b
  1328  0101BA  27EB               	addwf	?_strlen& (0+255),f,b
  1329  0101BC  51F5               	movf	(??_ringBufferPull+1)& (0+255),w,b
  1330  0101BE  23EC               	addwfc	(?_strlen+1)& (0+255),f,b
  1331  0101C0  0EAB               	movlw	low _line
  1332  0101C2  25EB               	addwf	?_strlen& (0+255),w,b
  1333  0101C4  6ED9               	movwf	fsr2l,c
  1334  0101C6  0E00               	movlw	high _line
  1335  0101C8  21EC               	addwfc	(?_strlen+1)& (0+255),w,b
  1336  0101CA  6EDA               	movwf	fsr2h,c
  1337  0101CC  0E00               	movlw	0
  1338  0101CE  6EDF               	movwf	indf2,c
  1339  0101D0                     l443:
  1340                           
  1341                           ; BSR set to: 0
  1342  0101D0  0EFF               	movlw	255
  1343  0101D2  6FF4               	movwf	??_ringBufferPull& (0+255),b
  1344  0101D4  0EFF               	movlw	255
  1345  0101D6  6FF5               	movwf	(??_ringBufferPull+1)& (0+255),b
  1346  0101D8  0EAB               	movlw	low _line
  1347  0101DA  6FEB               	movwf	strlen@s& (0+255),b
  1348  0101DC  0E00               	movlw	high _line
  1349  0101DE  6FEC               	movwf	(strlen@s+1)& (0+255),b
  1350  0101E0  ECDD  F082         	call	_strlen	;wreg free
  1351  0101E4  0100               	movlb	0	; () banked
  1352  0101E6  51F4               	movf	??_ringBufferPull& (0+255),w,b
  1353  0101E8  27EB               	addwf	?_strlen& (0+255),f,b
  1354  0101EA  51F5               	movf	(??_ringBufferPull+1)& (0+255),w,b
  1355  0101EC  23EC               	addwfc	(?_strlen+1)& (0+255),f,b
  1356  0101EE  0EAB               	movlw	low _line
  1357  0101F0  25EB               	addwf	?_strlen& (0+255),w,b
  1358  0101F2  6ED9               	movwf	fsr2l,c
  1359  0101F4  0E00               	movlw	high _line
  1360  0101F6  21EC               	addwfc	(?_strlen+1)& (0+255),w,b
  1361  0101F8  6EDA               	movwf	fsr2h,c
  1362  0101FA  0E0A               	movlw	10
  1363  0101FC  18DE               	xorwf	postinc2,w,c
  1364  0101FE  B4D8               	btfsc	status,2,c
  1365  010200  D7D0               	goto	l444
  1366                           
  1367                           ; BSR set to: 0
  1368  010202  0EFF               	movlw	255
  1369  010204  6FF4               	movwf	??_ringBufferPull& (0+255),b
  1370  010206  0EFF               	movlw	255
  1371  010208  6FF5               	movwf	(??_ringBufferPull+1)& (0+255),b
  1372  01020A  0EAB               	movlw	low _line
  1373  01020C  6FEB               	movwf	strlen@s& (0+255),b
  1374  01020E  0E00               	movlw	high _line
  1375  010210  6FEC               	movwf	(strlen@s+1)& (0+255),b
  1376  010212  ECDD  F082         	call	_strlen	;wreg free
  1377  010216  0100               	movlb	0	; () banked
  1378  010218  51F4               	movf	??_ringBufferPull& (0+255),w,b
  1379  01021A  27EB               	addwf	?_strlen& (0+255),f,b
  1380  01021C  51F5               	movf	(??_ringBufferPull+1)& (0+255),w,b
  1381  01021E  23EC               	addwfc	(?_strlen+1)& (0+255),f,b
  1382  010220  0EAB               	movlw	low _line
  1383  010222  25EB               	addwf	?_strlen& (0+255),w,b
  1384  010224  6ED9               	movwf	fsr2l,c
  1385  010226  0E00               	movlw	high _line
  1386  010228  21EC               	addwfc	(?_strlen+1)& (0+255),w,b
  1387  01022A  6EDA               	movwf	fsr2h,c
  1388  01022C  0E0D               	movlw	13
  1389  01022E  18DE               	xorwf	postinc2,w,c
  1390  010230  B4D8               	btfsc	status,2,c
  1391  010232  D7B7               	goto	l444
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;ring_buffer_interface.c: 36: }
  1395                           ;ring_buffer_interface.c: 40: eusart2RxStringReady = 0;
  1396  010234  9034               	bcf	_eusart2RxStringReady/(0+8),_eusart2RxStringReady& (0+7),c	;volatile
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;ring_buffer_interface.c: 43: ringBufferLUT(line);
  1400  010236  0EAB               	movlw	low _line
  1401  010238  6FF2               	movwf	ringBufferLUT@line& (0+255),b
  1402  01023A  0E00               	movlw	high _line
  1403  01023C  6FF3               	movwf	(ringBufferLUT@line+1)& (0+255),b
  1404  01023E  EC00  F080         	call	_ringBufferLUT	;wreg free
  1405  010242  0012               	return		;funcret
  1406  010244                     __end_of_ringBufferPull:
  1407                           	opt stack 0
  1408                           intcon	equ	0xFF2
  1409                           postinc0	equ	0xFEE
  1410                           wreg	equ	0xFE8
  1411                           indf2	equ	0xFDF
  1412                           postinc2	equ	0xFDE
  1413                           fsr2h	equ	0xFDA
  1414                           fsr2l	equ	0xFD9
  1415                           status	equ	0xFD8
  1416                           
  1417 ;; *************** function _strlen *****************
  1418 ;; Defined at:
  1419 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  1422 ;;		 -> line(64), 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  1425 ;;		 -> line(64), 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  2    0[BANK0 ] unsigned int 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1436 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;Total ram usage:        6 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    8
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_ringBufferPull
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text2
  1450  0105BA                     __ptext2:
  1451                           	opt stack 0
  1452  0105BA                     _strlen:
  1453                           	opt stack 21
  1454                           
  1455                           ;incstack = 0
  1456  0105BA  C0EB  F0EF         	movff	strlen@s,strlen@cp
  1457  0105BE  C0EC  F0F0         	movff	strlen@s+1,strlen@cp+1
  1458  0105C2  D003               	goto	l1035
  1459  0105C4  0100               	movlb	0	; () banked
  1460  0105C6  4BEF               	infsnz	strlen@cp& (0+255),f,b
  1461  0105C8  2BF0               	incf	(strlen@cp+1)& (0+255),f,b
  1462  0105CA                     l1035:
  1463                           
  1464                           ; BSR set to: 0
  1465  0105CA  C0EF  FFD9         	movff	strlen@cp,fsr2l
  1466  0105CE  C0F0  FFDA         	movff	strlen@cp+1,fsr2h
  1467  0105D2  50DF               	movf	indf2,w,c
  1468  0105D4  A4D8               	btfss	status,2,c
  1469  0105D6  D7F6               	goto	l1036
  1470  0105D8  C0EB  F0ED         	movff	strlen@s,??_strlen
  1471  0105DC  C0EC  F0EE         	movff	strlen@s+1,??_strlen+1
  1472  0105E0  0100               	movlb	0	; () banked
  1473  0105E2  1FED               	comf	??_strlen& (0+255),f,b
  1474  0105E4  1FEE               	comf	(??_strlen+1)& (0+255),f,b
  1475  0105E6  4BED               	infsnz	??_strlen& (0+255),f,b
  1476  0105E8  2BEE               	incf	(??_strlen+1)& (0+255),f,b
  1477  0105EA  51EF               	movf	strlen@cp& (0+255),w,b
  1478  0105EC  25ED               	addwf	??_strlen& (0+255),w,b
  1479  0105EE  6FEB               	movwf	?_strlen& (0+255),b
  1480  0105F0  51F0               	movf	(strlen@cp+1)& (0+255),w,b
  1481  0105F2  21EE               	addwfc	(??_strlen+1)& (0+255),w,b
  1482  0105F4  6FEC               	movwf	(?_strlen+1)& (0+255),b
  1483  0105F6  0012               	return	
  1484  0105F8                     __end_of_strlen:
  1485                           	opt stack 0
  1486                           intcon	equ	0xFF2
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           indf2	equ	0xFDF
  1490                           postinc2	equ	0xFDE
  1491                           fsr2h	equ	0xFDA
  1492                           fsr2l	equ	0xFD9
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _ringBufferLUT *****************
  1496 ;; Defined at:
  1497 ;;		line 8 in file "ring_buffer_LUT.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  line            2    7[BANK0 ] PTR unsigned char 
  1500 ;;		 -> line(64), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1512 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;Total ram usage:        2 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:   11
  1519 ;; This function calls:
  1520 ;;		_printf
  1521 ;;		_strcmp
  1522 ;; This function is called by:
  1523 ;;		_ringBufferPull
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text3
  1528  010000                     __ptext3:
  1529                           	opt stack 0
  1530  010000                     _ringBufferLUT:
  1531                           	opt stack 18
  1532                           
  1533                           ;ring_buffer_LUT.c: 14: if((0 == strcmp(line, "Reset"))) {
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;incstack = 0
  1537  010000  C0F2  F0EB         	movff	ringBufferLUT@line,strcmp@s1
  1538  010004  C0F3  F0EC         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1539  010008  0EE3               	movlw	low STR_6
  1540  01000A  0100               	movlb	0	; () banked
  1541  01000C  6FED               	movwf	strcmp@s2& (0+255),b
  1542  01000E  0EFF               	movlw	high STR_6
  1543  010010  6FEE               	movwf	(strcmp@s2+1)& (0+255),b
  1544  010012  EC4C  F082         	call	_strcmp	;wreg free
  1545  010016  0100               	movlb	0	; () banked
  1546  010018  51EB               	movf	?_strcmp& (0+255),w,b
  1547  01001A  11EC               	iorwf	(?_strcmp+1)& (0+255),w,b
  1548  01001C  A4D8               	btfss	status,2,c
  1549  01001E  D00F               	goto	l460
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;ring_buffer_LUT.c: 17: printf("\033[2J");
  1553  010020  0EEE               	movlw	low STR_2
  1554  010022  6FED               	movwf	printf@f& (0+255),b
  1555  010024  0EFF               	movlw	high STR_2
  1556  010026  6FEE               	movwf	(printf@f+1)& (0+255),b
  1557  010028  EC17  F083         	call	_printf	;wreg free
  1558                           
  1559                           ;ring_buffer_LUT.c: 20: printf("\033[H");
  1560  01002C  0EF7               	movlw	low STR_3
  1561  01002E  0100               	movlb	0	; () banked
  1562  010030  6FED               	movwf	printf@f& (0+255),b
  1563  010032  0EFF               	movlw	high STR_3
  1564  010034  6FEE               	movwf	(printf@f+1)& (0+255),b
  1565  010036  EC17  F083         	call	_printf	;wreg free
  1566  01003A  00FF               	reset		;# 
  1567                           
  1568                           ;ring_buffer_LUT.c: 25: }
  1569  01003C  0012               	return	
  1570  01003E                     l460:
  1571                           
  1572                           ;ring_buffer_LUT.c: 28: else if((0 == strcmp(line, "Clear"))) {
  1573  01003E  C0F2  F0EB         	movff	ringBufferLUT@line,strcmp@s1
  1574  010042  C0F3  F0EC         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1575  010046  0EDD               	movlw	low STR_9
  1576  010048  0100               	movlb	0	; () banked
  1577  01004A  6FED               	movwf	strcmp@s2& (0+255),b
  1578  01004C  0EFF               	movlw	high STR_9
  1579  01004E  6FEE               	movwf	(strcmp@s2+1)& (0+255),b
  1580  010050  EC4C  F082         	call	_strcmp	;wreg free
  1581  010054  0100               	movlb	0	; () banked
  1582  010056  51EB               	movf	?_strcmp& (0+255),w,b
  1583  010058  11EC               	iorwf	(?_strcmp+1)& (0+255),w,b
  1584  01005A  A4D8               	btfss	status,2,c
  1585  01005C  D00E               	goto	l462
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;ring_buffer_LUT.c: 31: printf("\033[2J");
  1589  01005E  0EEE               	movlw	low STR_2
  1590  010060  6FED               	movwf	printf@f& (0+255),b
  1591  010062  0EFF               	movlw	high STR_2
  1592  010064  6FEE               	movwf	(printf@f+1)& (0+255),b
  1593  010066  EC17  F083         	call	_printf	;wreg free
  1594                           
  1595                           ;ring_buffer_LUT.c: 34: printf("\033[H");
  1596  01006A  0EF7               	movlw	low STR_3
  1597  01006C  0100               	movlb	0	; () banked
  1598  01006E  6FED               	movwf	printf@f& (0+255),b
  1599  010070  0EFF               	movlw	high STR_3
  1600  010072  6FEE               	movwf	(printf@f+1)& (0+255),b
  1601  010074  EC17  F083         	call	_printf	;wreg free
  1602                           
  1603                           ;ring_buffer_LUT.c: 36: }
  1604  010078  0012               	return	
  1605  01007A                     l462:
  1606                           
  1607                           ;ring_buffer_LUT.c: 39: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  1608  01007A  C0F2  F0EB         	movff	ringBufferLUT@line,strcmp@s1
  1609  01007E  C0F3  F0EC         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1610  010082  0ED7               	movlw	low STR_12
  1611  010084  0100               	movlb	0	; () banked
  1612  010086  6FED               	movwf	strcmp@s2& (0+255),b
  1613  010088  0EFF               	movlw	high STR_12
  1614  01008A  6FEE               	movwf	(strcmp@s2+1)& (0+255),b
  1615  01008C  EC4C  F082         	call	_strcmp	;wreg free
  1616  010090  0100               	movlb	0	; () banked
  1617  010092  51EB               	movf	?_strcmp& (0+255),w,b
  1618  010094  11EC               	iorwf	(?_strcmp+1)& (0+255),w,b
  1619  010096  B4D8               	btfsc	status,2,c
  1620  010098  D00F               	goto	u1000
  1621                           
  1622                           ; BSR set to: 0
  1623  01009A  C0F2  F0EB         	movff	ringBufferLUT@line,strcmp@s1
  1624  01009E  C0F3  F0EC         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1625  0100A2  0EF3               	movlw	low STR_13
  1626  0100A4  6FED               	movwf	strcmp@s2& (0+255),b
  1627  0100A6  0EFF               	movlw	high STR_13
  1628  0100A8  6FEE               	movwf	(strcmp@s2+1)& (0+255),b
  1629  0100AA  EC4C  F082         	call	_strcmp	;wreg free
  1630  0100AE  0100               	movlb	0	; () banked
  1631  0100B0  51EB               	movf	?_strcmp& (0+255),w,b
  1632  0100B2  11EC               	iorwf	(?_strcmp+1)& (0+255),w,b
  1633  0100B4  A4D8               	btfss	status,2,c
  1634  0100B6  D015               	goto	l464
  1635  0100B8                     u1000:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;ring_buffer_LUT.c: 42: printf("\n\r");
  1639                           
  1640                           ; BSR set to: 0
  1641  0100B8  0EE8               	movlw	low (STR_4+369)
  1642  0100BA  6FED               	movwf	printf@f& (0+255),b
  1643  0100BC  0EFE               	movlw	high (STR_4+369)
  1644  0100BE  6FEE               	movwf	(printf@f+1)& (0+255),b
  1645  0100C0  EC17  F083         	call	_printf	;wreg free
  1646                           
  1647                           ;ring_buffer_LUT.c: 45: printf("AC Power Meter");
  1648  0100C4  0EC8               	movlw	low STR_15
  1649  0100C6  0100               	movlb	0	; () banked
  1650  0100C8  6FED               	movwf	printf@f& (0+255),b
  1651  0100CA  0EFF               	movlw	high STR_15
  1652  0100CC  6FEE               	movwf	(printf@f+1)& (0+255),b
  1653  0100CE  EC17  F083         	call	_printf	;wreg free
  1654                           
  1655                           ;ring_buffer_LUT.c: 48: printf("\n\r");
  1656  0100D2  0EE8               	movlw	low (STR_4+369)
  1657  0100D4  0100               	movlb	0	; () banked
  1658  0100D6  6FED               	movwf	printf@f& (0+255),b
  1659  0100D8  0EFE               	movlw	high (STR_4+369)
  1660  0100DA  6FEE               	movwf	(printf@f+1)& (0+255),b
  1661  0100DC  EC17  F083         	call	_printf	;wreg free
  1662                           
  1663                           ;ring_buffer_LUT.c: 50: }
  1664  0100E0  0012               	return	
  1665  0100E2                     l464:
  1666                           
  1667                           ;ring_buffer_LUT.c: 53: else if((0 == strcmp(line, "Help"))) {
  1668  0100E2  C0F2  F0EB         	movff	ringBufferLUT@line,strcmp@s1
  1669  0100E6  C0F3  F0EC         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1670  0100EA  0EE9               	movlw	low STR_17
  1671  0100EC  0100               	movlb	0	; () banked
  1672  0100EE  6FED               	movwf	strcmp@s2& (0+255),b
  1673  0100F0  0EFF               	movlw	high STR_17
  1674  0100F2  6FEE               	movwf	(strcmp@s2+1)& (0+255),b
  1675  0100F4  EC4C  F082         	call	_strcmp	;wreg free
  1676  0100F8  0100               	movlb	0	; () banked
  1677  0100FA  51EB               	movf	?_strcmp& (0+255),w,b
  1678  0100FC  11EC               	iorwf	(?_strcmp+1)& (0+255),w,b
  1679  0100FE  A4D8               	btfss	status,2,c
  1680  010100  0012               	return	
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;ring_buffer_LUT.c: 56: printf("\n\r");
  1684  010102  0EE8               	movlw	low (STR_4+369)
  1685  010104  6FED               	movwf	printf@f& (0+255),b
  1686  010106  0EFE               	movlw	high (STR_4+369)
  1687  010108  6FEE               	movwf	(printf@f+1)& (0+255),b
  1688  01010A  EC17  F083         	call	_printf	;wreg free
  1689                           
  1690                           ;ring_buffer_LUT.c: 58: printf("List of supported commands:\n\r"
  1691                           ;ring_buffer_LUT.c: 59: "   Reset: Clears the terminal and resets the micro\n\r"
  1692                           ;ring_buffer_LUT.c: 60: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  1693                           ;ring_buffer_LUT.c: 61: "   *IDN?: Returns device identification\n\r"
  1694                           ;ring_buffer_LUT.c: 62: "   Help: This message, lists commands\n\r");
  1695  01010E  0EEB               	movlw	low STR_19
  1696  010110  0100               	movlb	0	; () banked
  1697  010112  6FED               	movwf	printf@f& (0+255),b
  1698  010114  0EFE               	movlw	high STR_19
  1699  010116  6FEE               	movwf	(printf@f+1)& (0+255),b
  1700  010118  EC17  F083         	call	_printf	;wreg free
  1701                           
  1702                           ;ring_buffer_LUT.c: 65: printf("\n\r");
  1703  01011C  0EE8               	movlw	low (STR_4+369)
  1704  01011E  0100               	movlb	0	; () banked
  1705  010120  6FED               	movwf	printf@f& (0+255),b
  1706  010122  0EFE               	movlw	high (STR_4+369)
  1707  010124  6FEE               	movwf	(printf@f+1)& (0+255),b
  1708  010126  EC17  F083         	call	_printf	;wreg free
  1709  01012A  0012               	return	
  1710  01012C                     __end_of_ringBufferLUT:
  1711                           	opt stack 0
  1712                           intcon	equ	0xFF2
  1713                           postinc0	equ	0xFEE
  1714                           wreg	equ	0xFE8
  1715                           indf2	equ	0xFDF
  1716                           postinc2	equ	0xFDE
  1717                           fsr2h	equ	0xFDA
  1718                           fsr2l	equ	0xFD9
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function _strcmp *****************
  1722 ;; Defined at:
  1723 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  1726 ;;		 -> line(64), 
  1727 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  1728 ;;		 -> STR_17(5), STR_13(4), STR_12(6), STR_9(6), 
  1729 ;;		 -> STR_6(6), 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  r               1    5[BANK0 ] char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2    0[BANK0 ] int 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1741 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1745 ;;Total ram usage:        6 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    8
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_ringBufferLUT
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text4
  1756  010498                     __ptext4:
  1757                           	opt stack 0
  1758  010498                     _strcmp:
  1759                           	opt stack 20
  1760                           
  1761                           ;incstack = 0
  1762  010498  D005               	goto	l1027
  1763  01049A  0100               	movlb	0	; () banked
  1764  01049C  4BEB               	infsnz	strcmp@s1& (0+255),f,b
  1765  01049E  2BEC               	incf	(strcmp@s1+1)& (0+255),f,b
  1766  0104A0  4BED               	infsnz	strcmp@s2& (0+255),f,b
  1767  0104A2  2BEE               	incf	(strcmp@s2+1)& (0+255),f,b
  1768  0104A4                     l1027:
  1769                           
  1770                           ; BSR set to: 0
  1771  0104A4  C0EB  FFD9         	movff	strcmp@s1,fsr2l
  1772  0104A8  C0EC  FFDA         	movff	strcmp@s1+1,fsr2h
  1773  0104AC  50DF               	movf	indf2,w,c
  1774  0104AE  0100               	movlb	0	; () banked
  1775  0104B0  6FEF               	movwf	??_strcmp& (0+255),b
  1776  0104B2  C0ED  FFF6         	movff	strcmp@s2,tblptrl
  1777  0104B6  C0EE  FFF7         	movff	strcmp@s2+1,tblptrh
  1778  0104BA                     	if	0	;tblptru may be non-zero
  1779  0104BA                     	endif
  1780  0104BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1781  0104BA  0E00               	movlw	low (__mediumconst shr (0+16))
  1782  0104BC  6EF8               	movwf	tblptru,c
  1783  0104BE                     	endif
  1784  0104BE  0008               	tblrd		*
  1785  0104C0  50F5               	movf	tablat,w,c
  1786  0104C2  0800               	sublw	0
  1787  0104C4  25EF               	addwf	??_strcmp& (0+255),w,b
  1788  0104C6  6FF0               	movwf	strcmp@r& (0+255),b
  1789  0104C8  51F0               	movf	strcmp@r& (0+255),w,b
  1790  0104CA  A4D8               	btfss	status,2,c
  1791  0104CC  D007               	goto	u540
  1792                           
  1793                           ; BSR set to: 0
  1794  0104CE  C0EB  FFD9         	movff	strcmp@s1,fsr2l
  1795  0104D2  C0EC  FFDA         	movff	strcmp@s1+1,fsr2h
  1796  0104D6  50DF               	movf	indf2,w,c
  1797  0104D8  A4D8               	btfss	status,2,c
  1798  0104DA  D7DF               	goto	l1028
  1799  0104DC                     u540:
  1800                           
  1801                           ; BSR set to: 0
  1802                           
  1803                           ; BSR set to: 0
  1804                           
  1805                           ; BSR set to: 0
  1806  0104DC  51F0               	movf	strcmp@r& (0+255),w,b
  1807  0104DE  6FEB               	movwf	?_strcmp& (0+255),b
  1808  0104E0  6BEC               	clrf	(?_strcmp+1)& (0+255),b
  1809  0104E2  BFEB               	btfsc	?_strcmp& (0+255),7,b
  1810  0104E4  07EC               	decf	(?_strcmp+1)& (0+255),f,b
  1811  0104E6  0012               	return	
  1812  0104E8                     __end_of_strcmp:
  1813                           	opt stack 0
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           intcon	equ	0xFF2
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           indf2	equ	0xFDF
  1822                           postinc2	equ	0xFDE
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _printf *****************
  1828 ;; Defined at:
  1829 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  1832 ;;		 -> STR_20(3), STR_19(221), STR_18(3), STR_16(3), 
  1833 ;;		 -> STR_15(15), STR_14(3), STR_11(4), STR_10(5), 
  1834 ;;		 -> STR_8(4), STR_7(5), STR_5(3), STR_4(372), 
  1835 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  tmpval          4    0        struct .
  1838 ;;  cp              3    0        PTR const unsigned char 
  1839 ;;  ap              2    4[BANK0 ] PTR void [1]
  1840 ;;		 -> ?i2_printf(2), ?_printf(2), 
  1841 ;;  len             2    0        unsigned int 
  1842 ;;  val             2    0        unsigned int 
  1843 ;;  c               1    6[BANK0 ] char 
  1844 ;;  flag            1    0        unsigned char 
  1845 ;;  prec            1    0        char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2    2[BANK0 ] int 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;Total ram usage:        5 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:   10
  1862 ;; This function calls:
  1863 ;;		_putch
  1864 ;; This function is called by:
  1865 ;;		_ringBufferLUT
  1866 ;;		_printResetMessage
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text5
  1871  01062E                     __ptext5:
  1872                           	opt stack 0
  1873  01062E                     _printf:
  1874                           	opt stack 18
  1875                           
  1876                           ;doprnt.c: 466: va_list ap;
  1877                           ;doprnt.c: 499: signed char c;
  1878                           ;doprnt.c: 506: signed char prec;
  1879                           ;doprnt.c: 508: unsigned char flag;
  1880                           ;doprnt.c: 523: union {
  1881                           ;doprnt.c: 524: unsigned long vd;
  1882                           ;doprnt.c: 525: double integ;
  1883                           ;doprnt.c: 526: } tmpval;
  1884                           ;doprnt.c: 528: unsigned int val;
  1885                           ;doprnt.c: 529: unsigned len;
  1886                           ;doprnt.c: 530: const char * cp;
  1887                           ;doprnt.c: 533: *ap = __va_start();
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;incstack = 0
  1891  01062E  0EEF               	movlw	low (?_printf+2)
  1892  010630  0100               	movlb	0	; () banked
  1893  010632  6FEF               	movwf	printf@ap& (0+255),b
  1894  010634  0E00               	movlw	high (?_printf+2)
  1895  010636  6FF0               	movwf	(printf@ap+1)& (0+255),b
  1896                           
  1897                           ;doprnt.c: 536: while(c = *f++) {
  1898  010638  D003               	goto	l476
  1899  01063A                     
  1900                           ; BSR set to: 0
  1901                           ;doprnt.c: 540: {
  1902                           ;doprnt.c: 541: (putch(c) );
  1903                           
  1904                           ; BSR set to: 0
  1905  01063A  51F1               	movf	printf@c& (0+255),w,b
  1906  01063C  ECD4  F083         	call	_putch
  1907  010640                     l476:
  1908  010640  C0ED  FFF6         	movff	printf@f,tblptrl
  1909  010644  C0EE  FFF7         	movff	printf@f+1,tblptrh
  1910  010648  0100               	movlb	0	; () banked
  1911  01064A  4BED               	infsnz	printf@f& (0+255),f,b
  1912  01064C  2BEE               	incf	(printf@f+1)& (0+255),f,b
  1913  01064E                     	if	0	;tblptru may be non-zero
  1914  01064E                     	endif
  1915  01064E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1916  01064E  0E00               	movlw	low (__mediumconst shr (0+16))
  1917  010650  6EF8               	movwf	tblptru,c
  1918  010652                     	endif
  1919  010652  0008               	tblrd		*
  1920  010654  CFF5 F0F1          	movff	tablat,printf@c
  1921  010658  51F1               	movf	printf@c& (0+255),w,b
  1922  01065A  B4D8               	btfsc	status,2,c
  1923  01065C  0012               	return	
  1924  01065E  D7ED               	goto	l477
  1925  010660                     __end_of_printf:
  1926                           	opt stack 0
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           intcon	equ	0xFF2
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           indf2	equ	0xFDF
  1935                           postinc2	equ	0xFDE
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           
  1940 ;; *************** function _putch *****************
  1941 ;; Defined at:
  1942 ;;		line 180 in file "mcc_generated_files/eusart2.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  txData          1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  txData          1    1[BANK0 ] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;Total ram usage:        1 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    9
  1963 ;; This function calls:
  1964 ;;		_EUSART2_Write
  1965 ;; This function is called by:
  1966 ;;		_printf
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text6
  1971  0107A8                     __ptext6:
  1972                           	opt stack 0
  1973  0107A8                     _putch:
  1974                           	opt stack 18
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;incstack = 0
  1978                           ;putch@txData stored from wreg
  1979  0107A8  0100               	movlb	0	; () banked
  1980  0107AA  6FEC               	movwf	putch@txData& (0+255),b
  1981                           
  1982                           ;eusart2.c: 182: EUSART2_Write(txData);
  1983  0107AC  0100               	movlb	0	; () banked
  1984  0107AE  51EC               	movf	putch@txData& (0+255),w,b
  1985  0107B0  EC74  F082         	call	_EUSART2_Write
  1986  0107B4  0012               	return		;funcret
  1987  0107B6                     __end_of_putch:
  1988                           	opt stack 0
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           intcon	equ	0xFF2
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           indf2	equ	0xFDF
  1997                           postinc2	equ	0xFDE
  1998                           fsr2h	equ	0xFDA
  1999                           fsr2l	equ	0xFD9
  2000                           status	equ	0xFD8
  2001                           
  2002 ;; *************** function _EUSART2_Write *****************
  2003 ;; Defined at:
  2004 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  txData          1    wreg     unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  txData          1    0[BANK0 ] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    8
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_putch
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text7
  2033  0104E8                     __ptext7:
  2034                           	opt stack 0
  2035  0104E8                     _EUSART2_Write:
  2036                           	opt stack 18
  2037                           
  2038                           ;incstack = 0
  2039                           ;EUSART2_Write@txData stored from wreg
  2040  0104E8  0100               	movlb	0	; () banked
  2041  0104EA  6FEB               	movwf	EUSART2_Write@txData& (0+255),b
  2042                           
  2043                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
  2044  0104EC  D001               	goto	l378
  2045  0104EE                     l379:
  2046                           
  2047                           ; BSR set to: 0
  2048  0104EE  0004               	clrwdt		;# 
  2049  0104F0                     l378:
  2050  0104F0  0100               	movlb	0	; () banked
  2051  0104F2  51A8               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  2052  0104F4  B4D8               	btfsc	status,2,c
  2053  0104F6  D7FB               	goto	l379
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;eusart2.c: 156: }
  2057                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
  2058  0104F8  010E               	movlb	14	; () banked
  2059  0104FA  BD2C               	btfsc	44,6,b	;volatile
  2060  0104FC  D003               	goto	l381
  2061                           
  2062                           ; BSR set to: 14
  2063                           ;eusart2.c: 159: {
  2064                           ;eusart2.c: 160: TX2REG = txData;
  2065  0104FE  C0EB  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
  2066                           
  2067                           ;eusart2.c: 161: }
  2068  010502  D013               	goto	l382
  2069  010504                     l381:
  2070                           
  2071                           ; BSR set to: 14
  2072                           ;eusart2.c: 162: else
  2073                           ;eusart2.c: 163: {
  2074                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
  2075  010504  9D2C               	bcf	44,6,b	;volatile
  2076                           
  2077                           ; BSR set to: 14
  2078                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
  2079  010506  0100               	movlb	0	; () banked
  2080  010508  51AA               	movf	_eusart2TxHead& (0+255),w,b	;volatile
  2081  01050A  0D01               	mullw	1
  2082  01050C  0E00               	movlw	low _eusart2TxBuffer
  2083  01050E  24F3               	addwf	prodl,w,c
  2084  010510  6ED9               	movwf	fsr2l,c
  2085  010512  0E01               	movlw	high _eusart2TxBuffer
  2086  010514  20F4               	addwfc	prodh,w,c
  2087  010516  6EDA               	movwf	fsr2h,c
  2088  010518  C0EB  FFDF         	movff	EUSART2_Write@txData,indf2
  2089                           
  2090                           ; BSR set to: 0
  2091  01051C  2BAA               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  2095  01051E  0E3F               	movlw	63
  2096  010520  65AA               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  2097  010522  D002               	goto	l383
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;eusart2.c: 167: {
  2101                           ;eusart2.c: 168: eusart2TxHead = 0;
  2102  010524  0E00               	movlw	0
  2103  010526  6FAA               	movwf	_eusart2TxHead& (0+255),b	;volatile
  2104  010528                     l383:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;eusart2.c: 169: }
  2108                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
  2109                           
  2110                           ; BSR set to: 0
  2111  010528  07A8               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  2112  01052A                     l382:
  2113                           
  2114                           ;eusart2.c: 171: }
  2115                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
  2116                           
  2117                           ; BSR set to: 0
  2118  01052A  010E               	movlb	14	; () banked
  2119  01052C  8D2C               	bsf	44,6,b	;volatile
  2120                           
  2121                           ; BSR set to: 14
  2122  01052E  0012               	return		;funcret
  2123  010530                     __end_of_EUSART2_Write:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           prodh	equ	0xFF4
  2130                           prodl	equ	0xFF3
  2131                           intcon	equ	0xFF2
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           indf2	equ	0xFDF
  2135                           postinc2	equ	0xFDE
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140 ;; *************** function _EUSART2_Read *****************
  2141 ;; Defined at:
  2142 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  readValue       1    0[BANK0 ] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      unsigned char 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2159 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2160 ;;Total ram usage:        1 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    8
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_ringBufferPull
  2167 ;;		_getch
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text8
  2172  010576                     __ptext8:
  2173                           	opt stack 0
  2174  010576                     _EUSART2_Read:
  2175                           	opt stack 21
  2176                           
  2177                           ;eusart2.c: 132: uint8_t readValue = 0;
  2178                           
  2179                           ; BSR set to: 14
  2180                           ;incstack = 0
  2181  010576  0E00               	movlw	0
  2182  010578  0100               	movlb	0	; () banked
  2183  01057A  6FEB               	movwf	EUSART2_Read@readValue& (0+255),b
  2184                           
  2185                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  2186  01057C  D001               	goto	l371
  2187  01057E                     l372:
  2188                           
  2189                           ; BSR set to: 0
  2190  01057E  0004               	clrwdt		;# 
  2191  010580                     l371:
  2192  010580  0100               	movlb	0	; () banked
  2193  010582  51A6               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  2194  010584  B4D8               	btfsc	status,2,c
  2195  010586  D7FB               	goto	l372
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;eusart2.c: 137: }
  2199                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  2200                           
  2201                           ; BSR set to: 0
  2202  010588  51A7               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  2203  01058A  0D01               	mullw	1
  2204  01058C  0E60               	movlw	low _eusart2RxBuffer
  2205  01058E  24F3               	addwf	prodl,w,c
  2206  010590  6ED9               	movwf	fsr2l,c
  2207  010592  0E00               	movlw	high _eusart2RxBuffer
  2208  010594  20F4               	addwfc	prodh,w,c
  2209  010596  6EDA               	movwf	fsr2h,c
  2210  010598  50DF               	movf	indf2,w,c
  2211  01059A  6FEB               	movwf	EUSART2_Read@readValue& (0+255),b
  2212                           
  2213                           ; BSR set to: 0
  2214  01059C  2BA7               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  2218  01059E  0E3F               	movlw	63
  2219  0105A0  65A7               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  2220  0105A2  D002               	goto	l374
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;eusart2.c: 141: {
  2224                           ;eusart2.c: 142: eusart2RxTail = 0;
  2225  0105A4  0E00               	movlw	0
  2226  0105A6  6FA7               	movwf	_eusart2RxTail& (0+255),b	;volatile
  2227  0105A8                     l374:
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;eusart2.c: 143: }
  2231                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  2232                           
  2233                           ; BSR set to: 0
  2234  0105A8  010E               	movlb	14	; () banked
  2235  0105AA  9F2C               	bcf	44,7,b	;volatile
  2236                           
  2237                           ; BSR set to: 14
  2238                           ;eusart2.c: 145: eusart2RxCount--;
  2239  0105AC  0100               	movlb	0	; () banked
  2240  0105AE  07A6               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  2244  0105B0  010E               	movlb	14	; () banked
  2245  0105B2  8F2C               	bsf	44,7,b	;volatile
  2246                           
  2247                           ; BSR set to: 14
  2248                           ;eusart2.c: 148: return readValue;
  2249  0105B4  0100               	movlb	0	; () banked
  2250  0105B6  51EB               	movf	EUSART2_Read@readValue& (0+255),w,b
  2251  0105B8  0012               	return	
  2252  0105BA                     __end_of_EUSART2_Read:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           intcon	equ	0xFF2
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           indf2	equ	0xFDF
  2264                           postinc2	equ	0xFDE
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function _SYSTEM_Initialize *****************
  2270 ;; Defined at:
  2271 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;Total ram usage:        0 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:   10
  2292 ;; This function calls:
  2293 ;;		_EUSART2_Initialize
  2294 ;;		_INTERRUPT_Initialize
  2295 ;;		_OSCILLATOR_Initialize
  2296 ;;		_PIN_MANAGER_Initialize
  2297 ;;		_PMD_Initialize
  2298 ;;		_TMR6_Initialize
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text9
  2305  01078E                     __ptext9:
  2306                           	opt stack 0
  2307  01078E                     _SYSTEM_Initialize:
  2308                           	opt stack 20
  2309                           
  2310                           ;mcc.c: 52: INTERRUPT_Initialize();
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;incstack = 0
  2314  01078E  ECF0  F083         	call	_INTERRUPT_Initialize	;wreg free
  2315                           
  2316                           ;mcc.c: 53: PMD_Initialize();
  2317  010792  ECAB  F083         	call	_PMD_Initialize	;wreg free
  2318                           
  2319                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2320  010796  EC7C  F081         	call	_PIN_MANAGER_Initialize	;wreg free
  2321                           
  2322                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2323  01079A  ECB9  F083         	call	_OSCILLATOR_Initialize	;wreg free
  2324                           
  2325                           ;mcc.c: 56: TMR6_Initialize();
  2326  01079E  EC30  F083         	call	_TMR6_Initialize	;wreg free
  2327                           
  2328                           ;mcc.c: 57: EUSART2_Initialize();
  2329  0107A2  EC1B  F082         	call	_EUSART2_Initialize	;wreg free
  2330  0107A6  0012               	return		;funcret
  2331  0107A8                     __end_of_SYSTEM_Initialize:
  2332                           	opt stack 0
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           indf2	equ	0xFDF
  2343                           postinc2	equ	0xFDE
  2344                           fsr2h	equ	0xFDA
  2345                           fsr2l	equ	0xFD9
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _TMR6_Initialize *****************
  2349 ;; Defined at:
  2350 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    9
  2371 ;; This function calls:
  2372 ;;		_TMR6_SetInterruptHandler
  2373 ;; This function is called by:
  2374 ;;		_SYSTEM_Initialize
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text10
  2379  010660                     __ptext10:
  2380                           	opt stack 0
  2381  010660                     _TMR6_Initialize:
  2382                           	opt stack 20
  2383                           
  2384                           ;tmr6.c: 69: T6CLKCON = 0x04;
  2385                           
  2386                           ;incstack = 0
  2387  010660  0E04               	movlw	4
  2388  010662  6EB3               	movwf	4019,c	;volatile
  2389                           
  2390                           ;tmr6.c: 72: T6HLT = 0x20;
  2391  010664  0E20               	movlw	32
  2392  010666  6EB2               	movwf	4018,c	;volatile
  2393                           
  2394                           ;tmr6.c: 75: T6RST = 0x00;
  2395  010668  0E00               	movlw	0
  2396  01066A  6EB4               	movwf	4020,c	;volatile
  2397                           
  2398                           ;tmr6.c: 78: T6PR = 0xF1;
  2399  01066C  0EF1               	movlw	241
  2400  01066E  6EB0               	movwf	4016,c	;volatile
  2401                           
  2402                           ;tmr6.c: 81: T6TMR = 0x00;
  2403  010670  0E00               	movlw	0
  2404  010672  6EAF               	movwf	4015,c	;volatile
  2405                           
  2406                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
  2407  010674  010E               	movlb	14	; () banked
  2408  010676  9B38               	bcf	56,5,b	;volatile
  2409                           
  2410                           ; BSR set to: 14
  2411                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
  2412  010678  8B2E               	bsf	46,5,b	;volatile
  2413                           
  2414                           ; BSR set to: 14
  2415                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  2416  01067A  0EF6               	movlw	low _TMR6_DefaultInterruptHandler
  2417  01067C  0100               	movlb	0	; () banked
  2418  01067E  6FEB               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  2419  010680  0E07               	movlw	high _TMR6_DefaultInterruptHandler
  2420  010682  6FEC               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2421  010684  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  2422  010686  6FED               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  2423  010688  ECDB  F083         	call	_TMR6_SetInterruptHandler	;wreg free
  2424                           
  2425                           ;tmr6.c: 93: T6CON = 0xBF;
  2426  01068C  0EBF               	movlw	191
  2427  01068E  6EB1               	movwf	4017,c	;volatile
  2428  010690  0012               	return		;funcret
  2429  010692                     __end_of_TMR6_Initialize:
  2430                           	opt stack 0
  2431                           tblptru	equ	0xFF8
  2432                           tblptrh	equ	0xFF7
  2433                           tblptrl	equ	0xFF6
  2434                           tablat	equ	0xFF5
  2435                           prodh	equ	0xFF4
  2436                           prodl	equ	0xFF3
  2437                           intcon	equ	0xFF2
  2438                           postinc0	equ	0xFEE
  2439                           wreg	equ	0xFE8
  2440                           indf2	equ	0xFDF
  2441                           postinc2	equ	0xFDE
  2442                           fsr2h	equ	0xFDA
  2443                           fsr2l	equ	0xFD9
  2444                           status	equ	0xFD8
  2445                           
  2446 ;; *************** function _TMR6_SetInterruptHandler *****************
  2447 ;; Defined at:
  2448 ;;		line 178 in file "mcc_generated_files/tmr6.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
  2451 ;;		 -> TMR6_DefaultInterruptHandler(1), heartbeatTimerCallback(1), 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2463 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;Total ram usage:        3 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    8
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;;		_TMR6_Initialize
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text11
  2479  0107B6                     __ptext11:
  2480                           	opt stack 0
  2481  0107B6                     _TMR6_SetInterruptHandler:
  2482                           	opt stack 22
  2483                           
  2484                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
  2485                           
  2486                           ;incstack = 0
  2487  0107B6  C0EB  F0A0         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  2488  0107BA  C0EC  F0A1         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  2489  0107BE  C0ED  F0A2         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  2490  0107C2  0012               	return		;funcret
  2491  0107C4                     __end_of_TMR6_SetInterruptHandler:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           indf2	equ	0xFDF
  2503                           postinc2	equ	0xFDE
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8
  2507                           
  2508 ;; *************** function _PMD_Initialize *****************
  2509 ;; Defined at:
  2510 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    8
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_SYSTEM_Initialize
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text12
  2539  010756                     __ptext12:
  2540                           	opt stack 0
  2541  010756                     _PMD_Initialize:
  2542                           	opt stack 21
  2543                           
  2544                           ;mcc.c: 81: PMD0 = 0x00;
  2545                           
  2546                           ;incstack = 0
  2547  010756  0E00               	movlw	0
  2548  010758  010E               	movlb	14	; () banked
  2549  01075A  6F4C               	movwf	76,b	;volatile
  2550                           
  2551                           ;mcc.c: 83: PMD1 = 0x00;
  2552  01075C  0E00               	movlw	0
  2553  01075E  6F4D               	movwf	77,b	;volatile
  2554                           
  2555                           ;mcc.c: 85: PMD2 = 0x00;
  2556  010760  0E00               	movlw	0
  2557  010762  6F4E               	movwf	78,b	;volatile
  2558                           
  2559                           ;mcc.c: 87: PMD3 = 0x00;
  2560  010764  0E00               	movlw	0
  2561  010766  6F4F               	movwf	79,b	;volatile
  2562                           
  2563                           ;mcc.c: 89: PMD4 = 0x00;
  2564  010768  0E00               	movlw	0
  2565  01076A  6F50               	movwf	80,b	;volatile
  2566                           
  2567                           ;mcc.c: 91: PMD5 = 0x00;
  2568  01076C  0E00               	movlw	0
  2569  01076E  6F51               	movwf	81,b	;volatile
  2570                           
  2571                           ; BSR set to: 14
  2572  010770  0012               	return		;funcret
  2573  010772                     __end_of_PMD_Initialize:
  2574                           	opt stack 0
  2575                           tblptru	equ	0xFF8
  2576                           tblptrh	equ	0xFF7
  2577                           tblptrl	equ	0xFF6
  2578                           tablat	equ	0xFF5
  2579                           prodh	equ	0xFF4
  2580                           prodl	equ	0xFF3
  2581                           intcon	equ	0xFF2
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           indf2	equ	0xFDF
  2585                           postinc2	equ	0xFDE
  2586                           fsr2h	equ	0xFDA
  2587                           fsr2l	equ	0xFD9
  2588                           status	equ	0xFD8
  2589                           
  2590 ;; *************** function _PIN_MANAGER_Initialize *****************
  2591 ;; Defined at:
  2592 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    8
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_SYSTEM_Initialize
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text13
  2621  0102F8                     __ptext13:
  2622                           	opt stack 0
  2623  0102F8                     _PIN_MANAGER_Initialize:
  2624                           	opt stack 21
  2625                           
  2626                           ;pin_manager.c: 62: LATE = 0x00;
  2627                           
  2628                           ; BSR set to: 14
  2629                           ;incstack = 0
  2630  0102F8  0E00               	movlw	0
  2631  0102FA  6E7D               	movwf	3965,c	;volatile
  2632                           
  2633                           ;pin_manager.c: 63: LATD = 0x00;
  2634  0102FC  0E00               	movlw	0
  2635  0102FE  6E7C               	movwf	3964,c	;volatile
  2636                           
  2637                           ;pin_manager.c: 64: LATA = 0x00;
  2638  010300  0E00               	movlw	0
  2639  010302  6E79               	movwf	3961,c	;volatile
  2640                           
  2641                           ;pin_manager.c: 65: LATF = 0x00;
  2642  010304  0E00               	movlw	0
  2643  010306  6E7E               	movwf	3966,c	;volatile
  2644                           
  2645                           ;pin_manager.c: 66: LATB = 0x00;
  2646  010308  0E00               	movlw	0
  2647  01030A  6E7A               	movwf	3962,c	;volatile
  2648                           
  2649                           ;pin_manager.c: 67: LATG = 0x00;
  2650  01030C  0E00               	movlw	0
  2651  01030E  6E7F               	movwf	3967,c	;volatile
  2652                           
  2653                           ;pin_manager.c: 68: LATC = 0x00;
  2654  010310  0E00               	movlw	0
  2655  010312  6E7B               	movwf	3963,c	;volatile
  2656                           
  2657                           ;pin_manager.c: 69: LATH = 0x00;
  2658  010314  0E00               	movlw	0
  2659  010316  6E80               	movwf	3968,c	;volatile
  2660                           
  2661                           ;pin_manager.c: 74: TRISE = 0xFF;
  2662  010318  6885               	setf	3973,c	;volatile
  2663                           
  2664                           ;pin_manager.c: 75: TRISF = 0xF0;
  2665  01031A  0EF0               	movlw	240
  2666  01031C  6E86               	movwf	3974,c	;volatile
  2667                           
  2668                           ;pin_manager.c: 76: TRISA = 0xFF;
  2669  01031E  6881               	setf	3969,c	;volatile
  2670                           
  2671                           ;pin_manager.c: 77: TRISG = 0x5C;
  2672  010320  0E5C               	movlw	92
  2673  010322  6E87               	movwf	3975,c	;volatile
  2674                           
  2675                           ;pin_manager.c: 78: TRISB = 0xFF;
  2676  010324  6882               	setf	3970,c	;volatile
  2677                           
  2678                           ;pin_manager.c: 79: TRISH = 0x0F;
  2679  010326  0E0F               	movlw	15
  2680  010328  6E88               	movwf	3976,c	;volatile
  2681                           
  2682                           ;pin_manager.c: 80: TRISC = 0xFF;
  2683  01032A  6883               	setf	3971,c	;volatile
  2684                           
  2685                           ;pin_manager.c: 81: TRISD = 0xFF;
  2686  01032C  6884               	setf	3972,c	;volatile
  2687                           
  2688                           ;pin_manager.c: 86: ANSELD = 0xFF;
  2689  01032E  010E               	movlb	14	; () banked
  2690  010330  69A7               	setf	167,b	;volatile
  2691                           
  2692                           ; BSR set to: 14
  2693                           ;pin_manager.c: 87: ANSELB = 0xFF;
  2694  010332  699A               	setf	154,b	;volatile
  2695                           
  2696                           ; BSR set to: 14
  2697                           ;pin_manager.c: 88: ANSELE = 0xFF;
  2698  010334  69AF               	setf	175,b	;volatile
  2699                           
  2700                           ;pin_manager.c: 89: ANSELG = 0x3C;
  2701  010336  0E3C               	movlw	60
  2702  010338  6FBC               	movwf	188,b	;volatile
  2703                           
  2704                           ;pin_manager.c: 90: ANSELF = 0xF0;
  2705  01033A  0EF0               	movlw	240
  2706  01033C  6FB4               	movwf	180,b	;volatile
  2707                           
  2708                           ; BSR set to: 14
  2709                           ;pin_manager.c: 91: ANSELA = 0xFF;
  2710  01033E  6992               	setf	146,b	;volatile
  2711                           
  2712                           ;pin_manager.c: 96: WPUD = 0x00;
  2713  010340  0E00               	movlw	0
  2714  010342  6FA6               	movwf	166,b	;volatile
  2715                           
  2716                           ;pin_manager.c: 97: WPUF = 0x00;
  2717  010344  0E00               	movlw	0
  2718  010346  6FB3               	movwf	179,b	;volatile
  2719                           
  2720                           ;pin_manager.c: 98: WPUE = 0x00;
  2721  010348  0E00               	movlw	0
  2722  01034A  6FAE               	movwf	174,b	;volatile
  2723                           
  2724                           ;pin_manager.c: 99: WPUB = 0x00;
  2725  01034C  0E00               	movlw	0
  2726  01034E  6F99               	movwf	153,b	;volatile
  2727                           
  2728                           ;pin_manager.c: 100: WPUG = 0x00;
  2729  010350  0E00               	movlw	0
  2730  010352  6FBB               	movwf	187,b	;volatile
  2731                           
  2732                           ;pin_manager.c: 101: WPUA = 0x00;
  2733  010354  0E00               	movlw	0
  2734  010356  6F91               	movwf	145,b	;volatile
  2735                           
  2736                           ;pin_manager.c: 102: WPUC = 0x00;
  2737  010358  0E00               	movlw	0
  2738  01035A  6FA1               	movwf	161,b	;volatile
  2739                           
  2740                           ;pin_manager.c: 103: WPUH = 0x00;
  2741  01035C  0E00               	movlw	0
  2742  01035E  6FC0               	movwf	192,b	;volatile
  2743                           
  2744                           ;pin_manager.c: 108: ODCONE = 0x00;
  2745  010360  0E00               	movlw	0
  2746  010362  6FAD               	movwf	173,b	;volatile
  2747                           
  2748                           ;pin_manager.c: 109: ODCONF = 0x01;
  2749  010364  0E01               	movlw	1
  2750  010366  6FB2               	movwf	178,b	;volatile
  2751                           
  2752                           ;pin_manager.c: 110: ODCONA = 0x00;
  2753  010368  0E00               	movlw	0
  2754  01036A  6F90               	movwf	144,b	;volatile
  2755                           
  2756                           ;pin_manager.c: 111: ODCONG = 0x00;
  2757  01036C  0E00               	movlw	0
  2758  01036E  6FBA               	movwf	186,b	;volatile
  2759                           
  2760                           ;pin_manager.c: 112: ODCONB = 0x00;
  2761  010370  0E00               	movlw	0
  2762  010372  6F98               	movwf	152,b	;volatile
  2763                           
  2764                           ;pin_manager.c: 113: ODCONH = 0x00;
  2765  010374  0E00               	movlw	0
  2766  010376  6FBF               	movwf	191,b	;volatile
  2767                           
  2768                           ;pin_manager.c: 114: ODCONC = 0x00;
  2769  010378  0E00               	movlw	0
  2770  01037A  6FA0               	movwf	160,b	;volatile
  2771                           
  2772                           ;pin_manager.c: 115: ODCOND = 0x00;
  2773  01037C  0E00               	movlw	0
  2774  01037E  6FA5               	movwf	165,b	;volatile
  2775                           
  2776                           ; BSR set to: 14
  2777                           ;pin_manager.c: 120: SLRCONA = 0xFF;
  2778  010380  698F               	setf	143,b	;volatile
  2779                           
  2780                           ; BSR set to: 14
  2781                           ;pin_manager.c: 121: SLRCONB = 0xFF;
  2782  010382  6997               	setf	151,b	;volatile
  2783                           
  2784                           ; BSR set to: 14
  2785                           ;pin_manager.c: 122: SLRCONC = 0xFF;
  2786  010384  699F               	setf	159,b	;volatile
  2787                           
  2788                           ; BSR set to: 14
  2789                           ;pin_manager.c: 123: SLRCOND = 0xFF;
  2790  010386  69A4               	setf	164,b	;volatile
  2791                           
  2792                           ; BSR set to: 14
  2793                           ;pin_manager.c: 124: SLRCONE = 0xFF;
  2794  010388  69AC               	setf	172,b	;volatile
  2795                           
  2796                           ; BSR set to: 14
  2797                           ;pin_manager.c: 125: SLRCONF = 0xFF;
  2798  01038A  69B1               	setf	177,b	;volatile
  2799                           
  2800                           ; BSR set to: 14
  2801                           ;pin_manager.c: 126: SLRCONG = 0xFF;
  2802  01038C  69B9               	setf	185,b	;volatile
  2803                           
  2804                           ; BSR set to: 14
  2805                           ;pin_manager.c: 127: SLRCONH = 0xFF;
  2806  01038E  69BE               	setf	190,b	;volatile
  2807                           
  2808                           ;pin_manager.c: 136: RG7PPS = 0x0E;
  2809  010390  0E0E               	movlw	14
  2810  010392  6F89               	movwf	137,b	;volatile
  2811                           
  2812                           ;pin_manager.c: 137: RX2PPS = 0x36;
  2813  010394  0E36               	movlw	54
  2814  010396  6F11               	movwf	17,b	;volatile
  2815                           
  2816                           ; BSR set to: 14
  2817  010398  0012               	return		;funcret
  2818  01039A                     __end_of_PIN_MANAGER_Initialize:
  2819                           	opt stack 0
  2820                           tblptru	equ	0xFF8
  2821                           tblptrh	equ	0xFF7
  2822                           tblptrl	equ	0xFF6
  2823                           tablat	equ	0xFF5
  2824                           prodh	equ	0xFF4
  2825                           prodl	equ	0xFF3
  2826                           intcon	equ	0xFF2
  2827                           postinc0	equ	0xFEE
  2828                           wreg	equ	0xFE8
  2829                           indf2	equ	0xFDF
  2830                           postinc2	equ	0xFDE
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _OSCILLATOR_Initialize *****************
  2836 ;; Defined at:
  2837 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    8
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_SYSTEM_Initialize
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text14
  2866  010772                     __ptext14:
  2867                           	opt stack 0
  2868  010772                     _OSCILLATOR_Initialize:
  2869                           	opt stack 21
  2870                           
  2871                           ;mcc.c: 63: OSCCON1 = 0x20;
  2872                           
  2873                           ; BSR set to: 14
  2874                           ;incstack = 0
  2875  010772  0E20               	movlw	32
  2876  010774  010E               	movlb	14	; () banked
  2877  010776  6F43               	movwf	67,b	;volatile
  2878                           
  2879                           ;mcc.c: 65: OSCCON3 = 0x00;
  2880  010778  0E00               	movlw	0
  2881  01077A  6F45               	movwf	69,b	;volatile
  2882                           
  2883                           ;mcc.c: 67: OSCEN = 0x00;
  2884  01077C  0E00               	movlw	0
  2885  01077E  6F47               	movwf	71,b	;volatile
  2886                           
  2887                           ;mcc.c: 69: OSCFRQ = 0x02;
  2888  010780  0E02               	movlw	2
  2889  010782  6F49               	movwf	73,b	;volatile
  2890                           
  2891                           ;mcc.c: 71: OSCTUNE = 0x00;
  2892  010784  0E00               	movlw	0
  2893  010786  6F48               	movwf	72,b	;volatile
  2894  010788                     
  2895                           ; BSR set to: 14
  2896                           
  2897                           ; BSR set to: 14
  2898                           ;mcc.c: 74: {
  2899  010788  B146               	btfsc	70,0,b	;volatile
  2900  01078A  0012               	return	
  2901  01078C  D7FD               	goto	l47
  2902  01078E                     __end_of_OSCILLATOR_Initialize:
  2903                           	opt stack 0
  2904                           tblptru	equ	0xFF8
  2905                           tblptrh	equ	0xFF7
  2906                           tblptrl	equ	0xFF6
  2907                           tablat	equ	0xFF5
  2908                           prodh	equ	0xFF4
  2909                           prodl	equ	0xFF3
  2910                           intcon	equ	0xFF2
  2911                           postinc0	equ	0xFEE
  2912                           wreg	equ	0xFE8
  2913                           indf2	equ	0xFDF
  2914                           postinc2	equ	0xFDE
  2915                           fsr2h	equ	0xFDA
  2916                           fsr2l	equ	0xFD9
  2917                           status	equ	0xFD8
  2918                           
  2919 ;; *************** function _INTERRUPT_Initialize *****************
  2920 ;; Defined at:
  2921 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		None
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    8
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_SYSTEM_Initialize
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text15
  2950  0107E0                     __ptext15:
  2951                           	opt stack 0
  2952  0107E0                     _INTERRUPT_Initialize:
  2953                           	opt stack 21
  2954                           
  2955                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
  2956                           
  2957                           ; BSR set to: 14
  2958                           ;incstack = 0
  2959  0107E0  8AF2               	bsf	intcon,5,c	;volatile
  2960                           
  2961                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
  2962  0107E2  010E               	movlb	14	; () banked
  2963  0107E4  8F22               	bsf	34,7,b	;volatile
  2964                           
  2965                           ;interrupt_manager.c: 64: IPR5bits.TMR6IP = 0;
  2966  0107E6  9B24               	bcf	36,5,b	;volatile
  2967                           
  2968                           ;interrupt_manager.c: 67: IPR3bits.TX2IP = 0;
  2969  0107E8  9D22               	bcf	34,6,b	;volatile
  2970                           
  2971                           ; BSR set to: 14
  2972  0107EA  0012               	return		;funcret
  2973  0107EC                     __end_of_INTERRUPT_Initialize:
  2974                           	opt stack 0
  2975                           tblptru	equ	0xFF8
  2976                           tblptrh	equ	0xFF7
  2977                           tblptrl	equ	0xFF6
  2978                           tablat	equ	0xFF5
  2979                           prodh	equ	0xFF4
  2980                           prodl	equ	0xFF3
  2981                           intcon	equ	0xFF2
  2982                           postinc0	equ	0xFEE
  2983                           wreg	equ	0xFE8
  2984                           indf2	equ	0xFDF
  2985                           postinc2	equ	0xFDE
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990 ;; *************** function _EUSART2_Initialize *****************
  2991 ;; Defined at:
  2992 ;;		line 77 in file "mcc_generated_files/eusart2.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    9
  3013 ;; This function calls:
  3014 ;;		_EUSART2_SetRxInterruptHandler
  3015 ;;		_EUSART2_SetTxInterruptHandler
  3016 ;; This function is called by:
  3017 ;;		_SYSTEM_Initialize
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text16
  3022  010436                     __ptext16:
  3023                           	opt stack 0
  3024  010436                     _EUSART2_Initialize:
  3025                           	opt stack 20
  3026                           
  3027                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
  3028                           
  3029                           ; BSR set to: 14
  3030                           ;incstack = 0
  3031  010436  010E               	movlb	14	; () banked
  3032  010438  9F2C               	bcf	44,7,b	;volatile
  3033                           
  3034                           ; BSR set to: 14
  3035                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
  3036  01043A  0E9A               	movlw	low _EUSART2_Receive_ISR
  3037  01043C  0100               	movlb	0	; () banked
  3038  01043E  6FEB               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
  3039  010440  0E03               	movlw	high _EUSART2_Receive_ISR
  3040  010442  6FEC               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  3041  010444  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
  3042  010446  6FED               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
  3043  010448  ECE9  F083         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  3044                           
  3045                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
  3046  01044C  010E               	movlb	14	; () banked
  3047  01044E  9D2C               	bcf	44,6,b	;volatile
  3048                           
  3049                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
  3050  010450  0EF8               	movlw	low _EUSART2_Transmit_ISR
  3051  010452  0100               	movlb	0	; () banked
  3052  010454  6FEB               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
  3053  010456  0E05               	movlw	high _EUSART2_Transmit_ISR
  3054  010458  6FEC               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  3055  01045A  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
  3056  01045C  6FED               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
  3057  01045E  ECE2  F083         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  3058                           
  3059                           ;eusart2.c: 87: BAUD2CON = 0x08;
  3060  010462  0E08               	movlw	8
  3061  010464  010E               	movlb	14	; () banked
  3062  010466  6FF7               	movwf	247,b	;volatile
  3063                           
  3064                           ; BSR set to: 14
  3065                           ;eusart2.c: 90: RC2STA = 0x90;
  3066  010468  0E90               	movlw	144
  3067  01046A  6FF5               	movwf	245,b	;volatile
  3068                           
  3069                           ; BSR set to: 14
  3070                           ;eusart2.c: 93: TX2STA = 0x24;
  3071  01046C  0E24               	movlw	36
  3072  01046E  6FF6               	movwf	246,b	;volatile
  3073                           
  3074                           ; BSR set to: 14
  3075                           ;eusart2.c: 96: SP2BRGL = 0x8A;
  3076  010470  0E8A               	movlw	138
  3077  010472  6FF3               	movwf	243,b	;volatile
  3078                           
  3079                           ; BSR set to: 14
  3080                           ;eusart2.c: 99: SP2BRGH = 0x00;
  3081  010474  0E00               	movlw	0
  3082  010476  6FF4               	movwf	244,b	;volatile
  3083                           
  3084                           ; BSR set to: 14
  3085                           ;eusart2.c: 103: eusart2TxHead = 0;
  3086  010478  0E00               	movlw	0
  3087  01047A  0100               	movlb	0	; () banked
  3088  01047C  6FAA               	movwf	_eusart2TxHead& (0+255),b	;volatile
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;eusart2.c: 104: eusart2TxTail = 0;
  3092  01047E  0E00               	movlw	0
  3093  010480  6FA9               	movwf	_eusart2TxTail& (0+255),b	;volatile
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
  3097  010482  0E40               	movlw	64
  3098  010484  6FA8               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;eusart2.c: 107: eusart2RxHead = 0;
  3102  010486  0E00               	movlw	0
  3103  010488  6E33               	movwf	_eusart2RxHead,c	;volatile
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;eusart2.c: 108: eusart2RxTail = 0;
  3107  01048A  0E00               	movlw	0
  3108  01048C  6FA7               	movwf	_eusart2RxTail& (0+255),b	;volatile
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;eusart2.c: 109: eusart2RxCount = 0;
  3112  01048E  0E00               	movlw	0
  3113  010490  6FA6               	movwf	_eusart2RxCount& (0+255),b	;volatile
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
  3117  010492  010E               	movlb	14	; () banked
  3118  010494  8F2C               	bsf	44,7,b	;volatile
  3119                           
  3120                           ; BSR set to: 14
  3121  010496  0012               	return		;funcret
  3122  010498                     __end_of_EUSART2_Initialize:
  3123                           	opt stack 0
  3124                           tblptru	equ	0xFF8
  3125                           tblptrh	equ	0xFF7
  3126                           tblptrl	equ	0xFF6
  3127                           tablat	equ	0xFF5
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           postinc0	equ	0xFEE
  3132                           wreg	equ	0xFE8
  3133                           indf2	equ	0xFDF
  3134                           postinc2	equ	0xFDE
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8
  3138                           
  3139 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  3140 ;; Defined at:
  3141 ;;		line 264 in file "mcc_generated_files/eusart2.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  3144 ;;		 -> EUSART2_Transmit_ISR(1), 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3156 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;Total ram usage:        3 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    8
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_EUSART2_Initialize
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text17
  3171  0107C4                     __ptext17:
  3172                           	opt stack 0
  3173  0107C4                     _EUSART2_SetTxInterruptHandler:
  3174                           	opt stack 20
  3175                           
  3176                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
  3177                           
  3178                           ; BSR set to: 14
  3179                           ;incstack = 0
  3180  0107C4  C0EB  F0A3         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  3181  0107C8  C0EC  F0A4         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  3182  0107CC  C0ED  F0A5         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
  3183  0107D0  0012               	return		;funcret
  3184  0107D2                     __end_of_EUSART2_SetTxInterruptHandler:
  3185                           	opt stack 0
  3186                           tblptru	equ	0xFF8
  3187                           tblptrh	equ	0xFF7
  3188                           tblptrl	equ	0xFF6
  3189                           tablat	equ	0xFF5
  3190                           prodh	equ	0xFF4
  3191                           prodl	equ	0xFF3
  3192                           intcon	equ	0xFF2
  3193                           postinc0	equ	0xFEE
  3194                           wreg	equ	0xFE8
  3195                           indf2	equ	0xFDF
  3196                           postinc2	equ	0xFDE
  3197                           fsr2h	equ	0xFDA
  3198                           fsr2l	equ	0xFD9
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  3202 ;; Defined at:
  3203 ;;		line 268 in file "mcc_generated_files/eusart2.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  3206 ;;		 -> EUSART2_Receive_ISR(1), 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3218 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;Total ram usage:        3 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    8
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_EUSART2_Initialize
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text18
  3233  0107D2                     __ptext18:
  3234                           	opt stack 0
  3235  0107D2                     _EUSART2_SetRxInterruptHandler:
  3236                           	opt stack 20
  3237                           
  3238                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
  3239                           
  3240                           ;incstack = 0
  3241  0107D2  C0EB  F030         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  3242  0107D6  C0EC  F031         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  3243  0107DA  C0ED  F032         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
  3244  0107DE  0012               	return		;funcret
  3245  0107E0                     __end_of_EUSART2_SetRxInterruptHandler:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           indf2	equ	0xFDF
  3257                           postinc2	equ	0xFDE
  3258                           fsr2h	equ	0xFDA
  3259                           fsr2l	equ	0xFD9
  3260                           status	equ	0xFD8
  3261                           
  3262 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  3263 ;; Defined at:
  3264 ;;		line 84 in file "mcc_generated_files/interrupt_manager.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;Total ram usage:       21 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    7
  3285 ;; This function calls:
  3286 ;;		Absolute function
  3287 ;;		_EUSART2_Transmit_ISR
  3288 ;;		_TMR6_ISR
  3289 ;; This function is called by:
  3290 ;;		Interrupt level 1
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	intcodelo
  3295  000018                     __pintcodelo:
  3296                           	opt stack 0
  3297  000018                     _INTERRUPT_InterruptManagerLow:
  3298                           	opt stack 18
  3299                           
  3300                           ;incstack = 0
  3301  000018  8035               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3302  00001A  CFD8 F01B          	movff	status,??_INTERRUPT_InterruptManagerLow
  3303  00001E  CFE8 F01C          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  3304  000022  CFE0 F01D          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  3305  000026  CFFA F01E          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  3306  00002A  CFFB F01F          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  3307  00002E  CFE9 F020          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
  3308  000032  CFEA F021          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
  3309  000036  CFE1 F022          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
  3310  00003A  CFE2 F023          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
  3311  00003E  CFD9 F024          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
  3312  000042  CFDA F025          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
  3313  000046  CFF3 F026          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
  3314  00004A  CFF4 F027          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
  3315  00004E  CFF6 F028          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
  3316  000052  CFF7 F029          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
  3317  000056  CFF8 F02A          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
  3318  00005A  CFF5 F02B          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
  3319  00005E  C035  F02C         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
  3320  000062  C036  F02D         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
  3321  000066  C037  F02E         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
  3322  00006A  C038  F02F         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
  3323                           
  3324                           ;interrupt_manager.c: 87: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
  3325  00006E  010E               	movlb	14	; () banked
  3326  000070  BB2E               	btfsc	46,5,b	;volatile
  3327                           
  3328                           ; BSR set to: 14
  3329  000072  AB38               	btfss	56,5,b	;volatile
  3330  000074  D003               	goto	i1l219
  3331                           
  3332                           ; BSR set to: 14
  3333                           ;interrupt_manager.c: 88: {
  3334                           ;interrupt_manager.c: 89: TMR6_ISR();
  3335  000076  EC76  F083         	call	_TMR6_ISR	;wreg free
  3336                           
  3337                           ;interrupt_manager.c: 90: }
  3338  00007A  D010               	goto	i1u89_29
  3339  00007C                     i1l219:
  3340                           
  3341                           ; BSR set to: 14
  3342                           ;interrupt_manager.c: 91: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  3343  00007C  BD2C               	btfsc	44,6,b	;volatile
  3344                           
  3345                           ; BSR set to: 14
  3346  00007E  AD36               	btfss	54,6,b	;volatile
  3347  000080  D00D               	goto	i1u89_29
  3348                           
  3349                           ; BSR set to: 14
  3350                           ;interrupt_manager.c: 92: {
  3351                           ;interrupt_manager.c: 93: EUSART2_TxDefaultInterruptHandler();
  3352  000082  D801               	call	i1u89_28
  3353  000084  D00B               	goto	i1u89_29
  3354  000086                     i1u89_28:
  3355  000086  0005               	push	
  3356  000088  6EFA               	movwf	pclath,c
  3357  00008A  0100               	movlb	0	; () banked
  3358  00008C  51A3               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  3359  00008E  6EFD               	movwf	tosl,c
  3360  000090  51A4               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  3361  000092  6EFE               	movwf	tosh,c
  3362  000094  51A5               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
  3363  000096  6EFF               	movwf	tosu,c
  3364  000098  50FA               	movf	pclath,w,c
  3365  00009A  0012               	return		;indir
  3366  00009C                     i1u89_29:
  3367                           
  3368                           ;interrupt_manager.c: 95: else
  3369                           ;interrupt_manager.c: 96: {
  3370                           
  3371                           ;interrupt_manager.c: 94: }
  3372  00009C  C02F  F038         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
  3373  0000A0  C02E  F037         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
  3374  0000A4  C02D  F036         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
  3375  0000A8  C02C  F035         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
  3376  0000AC  C02B  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
  3377  0000B0  C02A  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
  3378  0000B4  C029  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
  3379  0000B8  C028  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
  3380  0000BC  C027  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
  3381  0000C0  C026  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
  3382  0000C4  C025  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
  3383  0000C8  C024  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
  3384  0000CC  C023  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
  3385  0000D0  C022  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
  3386  0000D4  C021  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
  3387  0000D8  C020  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
  3388  0000DC  C01F  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  3389  0000E0  C01E  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  3390  0000E4  C01D  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  3391  0000E8  C01C  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  3392  0000EC  C01B  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  3393  0000F0  9035               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3394  0000F2  0010               	retfie	
  3395  0000F4                     __end_of_INTERRUPT_InterruptManagerLow:
  3396                           	opt stack 0
  3397                           tosu	equ	0xFFF
  3398                           tosh	equ	0xFFE
  3399                           tosl	equ	0xFFD
  3400                           pclatu	equ	0xFFB
  3401                           pclath	equ	0xFFA
  3402                           tblptru	equ	0xFF8
  3403                           tblptrh	equ	0xFF7
  3404                           tblptrl	equ	0xFF6
  3405                           tablat	equ	0xFF5
  3406                           prodh	equ	0xFF4
  3407                           prodl	equ	0xFF3
  3408                           intcon	equ	0xFF2
  3409                           postinc0	equ	0xFEE
  3410                           fsr0h	equ	0xFEA
  3411                           fsr0l	equ	0xFE9
  3412                           wreg	equ	0xFE8
  3413                           fsr1h	equ	0xFE2
  3414                           fsr1l	equ	0xFE1
  3415                           bsr	equ	0xFE0
  3416                           indf2	equ	0xFDF
  3417                           postinc2	equ	0xFDE
  3418                           fsr2h	equ	0xFDA
  3419                           fsr2l	equ	0xFD9
  3420                           status	equ	0xFD8
  3421                           
  3422 ;; *************** function _TMR6_ISR *****************
  3423 ;; Defined at:
  3424 ;;		line 165 in file "mcc_generated_files/tmr6.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    6
  3445 ;; This function calls:
  3446 ;;		Absolute function
  3447 ;;		_TMR6_DefaultInterruptHandler
  3448 ;;		_heartbeatTimerCallback
  3449 ;; This function is called by:
  3450 ;;		_INTERRUPT_InterruptManagerLow
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text20
  3455  0106EC                     __ptext20:
  3456                           	opt stack 0
  3457  0106EC                     _TMR6_ISR:
  3458                           	opt stack 18
  3459                           
  3460                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
  3461                           
  3462                           ;incstack = 0
  3463  0106EC  010E               	movlb	14	; () banked
  3464  0106EE  9B38               	bcf	56,5,b	;volatile
  3465                           
  3466                           ; BSR set to: 14
  3467                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
  3468  0106F0  0100               	movlb	0	; () banked
  3469  0106F2  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
  3470  0106F4  11A1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  3471  0106F6  11A2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  3472  0106F8  B4D8               	btfsc	status,2,c
  3473  0106FA  0012               	return	
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;tmr6.c: 172: {
  3477                           ;tmr6.c: 173: TMR6_InterruptHandler();
  3478  0106FC  D801               	call	i1u72_28
  3479  0106FE  0012               	return	
  3480  010700                     i1u72_28:
  3481  010700  0005               	push	
  3482  010702  6EFA               	movwf	pclath,c
  3483  010704  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
  3484  010706  6EFD               	movwf	tosl,c
  3485  010708  51A1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  3486  01070A  6EFE               	movwf	tosh,c
  3487  01070C  51A2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  3488  01070E  6EFF               	movwf	tosu,c
  3489  010710  50FA               	movf	pclath,w,c
  3490  010712  0012               	return		;indir
  3491  010714                     __end_of_TMR6_ISR:
  3492                           	opt stack 0
  3493                           tosu	equ	0xFFF
  3494                           tosh	equ	0xFFE
  3495                           tosl	equ	0xFFD
  3496                           pclatu	equ	0xFFB
  3497                           pclath	equ	0xFFA
  3498                           tblptru	equ	0xFF8
  3499                           tblptrh	equ	0xFF7
  3500                           tblptrl	equ	0xFF6
  3501                           tablat	equ	0xFF5
  3502                           prodh	equ	0xFF4
  3503                           prodl	equ	0xFF3
  3504                           intcon	equ	0xFF2
  3505                           postinc0	equ	0xFEE
  3506                           fsr0h	equ	0xFEA
  3507                           fsr0l	equ	0xFE9
  3508                           wreg	equ	0xFE8
  3509                           fsr1h	equ	0xFE2
  3510                           fsr1l	equ	0xFE1
  3511                           bsr	equ	0xFE0
  3512                           indf2	equ	0xFDF
  3513                           postinc2	equ	0xFDE
  3514                           fsr2h	equ	0xFDA
  3515                           fsr2l	equ	0xFD9
  3516                           status	equ	0xFD8
  3517                           
  3518 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3519 ;; Defined at:
  3520 ;;		line 182 in file "mcc_generated_files/tmr6.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		None
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    5
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_TMR6_Initialize
  3545 ;;		_TMR6_ISR
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text21
  3550  0107F6                     __ptext21:
  3551                           	opt stack 0
  3552  0107F6                     _TMR6_DefaultInterruptHandler:
  3553                           	opt stack 18
  3554                           
  3555                           ;incstack = 0
  3556  0107F6  0012               	return		;funcret
  3557  0107F8                     __end_of_TMR6_DefaultInterruptHandler:
  3558                           	opt stack 0
  3559                           tosu	equ	0xFFF
  3560                           tosh	equ	0xFFE
  3561                           tosl	equ	0xFFD
  3562                           pclatu	equ	0xFFB
  3563                           pclath	equ	0xFFA
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           prodh	equ	0xFF4
  3569                           prodl	equ	0xFF3
  3570                           intcon	equ	0xFF2
  3571                           postinc0	equ	0xFEE
  3572                           fsr0h	equ	0xFEA
  3573                           fsr0l	equ	0xFE9
  3574                           wreg	equ	0xFE8
  3575                           fsr1h	equ	0xFE2
  3576                           fsr1l	equ	0xFE1
  3577                           bsr	equ	0xFE0
  3578                           indf2	equ	0xFDF
  3579                           postinc2	equ	0xFDE
  3580                           fsr2h	equ	0xFDA
  3581                           fsr2l	equ	0xFD9
  3582                           status	equ	0xFD8
  3583                           
  3584 ;; *************** function _heartbeatTimerCallback *****************
  3585 ;; Defined at:
  3586 ;;		line 55 in file "main.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;Total ram usage:        1 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    5
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;;		_TMR6_ISR
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text22
  3616  010738                     __ptext22:
  3617                           	opt stack 0
  3618  010738                     _heartbeatTimerCallback:
  3619                           	opt stack 18
  3620                           
  3621                           ;main.c: 58: LATFbits.LATF2 = !LATFbits.LATF2;
  3622                           
  3623                           ;incstack = 0
  3624  010738  B47E               	btfsc	3966,2,c	;volatile
  3625  01073A  D003               	goto	i1u55_20
  3626  01073C  6A1A               	clrf	??_heartbeatTimerCallback& (0+255),c
  3627  01073E  2A1A               	incf	??_heartbeatTimerCallback& (0+255),f,c
  3628  010740  D001               	goto	i1u56_28
  3629  010742                     i1u55_20:
  3630  010742  6A1A               	clrf	??_heartbeatTimerCallback& (0+255),c
  3631  010744                     i1u56_28:
  3632  010744  461A               	rlncf	??_heartbeatTimerCallback,f,c
  3633  010746  461A               	rlncf	??_heartbeatTimerCallback,f,c
  3634  010748  507E               	movf	3966,w,c	;volatile
  3635  01074A  181A               	xorwf	??_heartbeatTimerCallback,w,c
  3636  01074C  0BFB               	andlw	-5
  3637  01074E  181A               	xorwf	??_heartbeatTimerCallback,w,c
  3638  010750  6E7E               	movwf	3966,c	;volatile
  3639  010752  0004               	clrwdt		;# 
  3640  010754  0012               	return		;funcret
  3641  010756                     __end_of_heartbeatTimerCallback:
  3642                           	opt stack 0
  3643                           tosu	equ	0xFFF
  3644                           tosh	equ	0xFFE
  3645                           tosl	equ	0xFFD
  3646                           pclatu	equ	0xFFB
  3647                           pclath	equ	0xFFA
  3648                           tblptru	equ	0xFF8
  3649                           tblptrh	equ	0xFF7
  3650                           tblptrl	equ	0xFF6
  3651                           tablat	equ	0xFF5
  3652                           prodh	equ	0xFF4
  3653                           prodl	equ	0xFF3
  3654                           intcon	equ	0xFF2
  3655                           postinc0	equ	0xFEE
  3656                           fsr0h	equ	0xFEA
  3657                           fsr0l	equ	0xFE9
  3658                           wreg	equ	0xFE8
  3659                           fsr1h	equ	0xFE2
  3660                           fsr1l	equ	0xFE1
  3661                           bsr	equ	0xFE0
  3662                           indf2	equ	0xFDF
  3663                           postinc2	equ	0xFDE
  3664                           fsr2h	equ	0xFDA
  3665                           fsr2l	equ	0xFD9
  3666                           status	equ	0xFD8
  3667                           
  3668 ;; *************** function _EUSART2_Transmit_ISR *****************
  3669 ;; Defined at:
  3670 ;;		line 185 in file "mcc_generated_files/eusart2.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    5
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_EUSART2_Initialize
  3695 ;;		_INTERRUPT_InterruptManagerLow
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text23
  3700  0105F8                     __ptext23:
  3701                           	opt stack 0
  3702  0105F8                     _EUSART2_Transmit_ISR:
  3703                           	opt stack 19
  3704                           
  3705                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
  3706                           
  3707                           ;incstack = 0
  3708  0105F8  0E40               	movlw	64
  3709  0105FA  0100               	movlb	0	; () banked
  3710  0105FC  61A8               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  3711  0105FE  D014               	goto	i1l393
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;eusart2.c: 190: {
  3715                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  3716  010600  51A9               	movf	_eusart2TxTail& (0+255),w,b	;volatile
  3717  010602  0D01               	mullw	1
  3718  010604  0E00               	movlw	low _eusart2TxBuffer
  3719  010606  24F3               	addwf	prodl,w,c
  3720  010608  6ED9               	movwf	fsr2l,c
  3721  01060A  0E01               	movlw	high _eusart2TxBuffer
  3722  01060C  20F4               	addwfc	prodh,w,c
  3723  01060E  6EDA               	movwf	fsr2h,c
  3724  010610  50DF               	movf	indf2,w,c
  3725  010612  010E               	movlb	14	; () banked
  3726  010614  6FF2               	movwf	242,b	;volatile
  3727                           
  3728                           ; BSR set to: 14
  3729  010616  0100               	movlb	0	; () banked
  3730  010618  2BA9               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
  3734  01061A  0E3F               	movlw	63
  3735  01061C  65A9               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  3736  01061E  D002               	goto	i1l394
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;eusart2.c: 193: {
  3740                           ;eusart2.c: 194: eusart2TxTail = 0;
  3741  010620  0E00               	movlw	0
  3742  010622  6FA9               	movwf	_eusart2TxTail& (0+255),b	;volatile
  3743  010624                     i1l394:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;eusart2.c: 195: }
  3747                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
  3748                           
  3749                           ; BSR set to: 0
  3750  010624  2BA8               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  3751                           
  3752                           ;eusart2.c: 197: }
  3753  010626  0012               	return	
  3754  010628                     i1l393:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;eusart2.c: 198: else
  3758                           ;eusart2.c: 199: {
  3759                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
  3760  010628  010E               	movlb	14	; () banked
  3761  01062A  9D2C               	bcf	44,6,b	;volatile
  3762  01062C  0012               	return	
  3763  01062E                     __end_of_EUSART2_Transmit_ISR:
  3764                           	opt stack 0
  3765                           tosu	equ	0xFFF
  3766                           tosh	equ	0xFFE
  3767                           tosl	equ	0xFFD
  3768                           pclatu	equ	0xFFB
  3769                           pclath	equ	0xFFA
  3770                           tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           prodh	equ	0xFF4
  3775                           prodl	equ	0xFF3
  3776                           intcon	equ	0xFF2
  3777                           postinc0	equ	0xFEE
  3778                           fsr0h	equ	0xFEA
  3779                           fsr0l	equ	0xFE9
  3780                           wreg	equ	0xFE8
  3781                           fsr1h	equ	0xFE2
  3782                           fsr1l	equ	0xFE1
  3783                           bsr	equ	0xFE0
  3784                           indf2	equ	0xFDF
  3785                           postinc2	equ	0xFDE
  3786                           fsr2h	equ	0xFDA
  3787                           fsr2l	equ	0xFD9
  3788                           status	equ	0xFD8
  3789                           
  3790 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  3791 ;; Defined at:
  3792 ;;		line 71 in file "mcc_generated_files/interrupt_manager.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3810 ;;Total ram usage:       18 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    4
  3813 ;; This function calls:
  3814 ;;		Absolute function
  3815 ;;		_EUSART2_Receive_ISR
  3816 ;; This function is called by:
  3817 ;;		Interrupt level 2
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	intcode
  3822  000008                     __pintcode:
  3823                           	opt stack 0
  3824  000008                     _INTERRUPT_InterruptManagerHigh:
  3825                           	opt stack 18
  3826                           
  3827                           ;incstack = 0
  3828  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3829  00000A  EF22  F081         	goto	int_func
  3830                           tosu	equ	0xFFF
  3831                           tosh	equ	0xFFE
  3832                           tosl	equ	0xFFD
  3833                           pclatu	equ	0xFFB
  3834                           pclath	equ	0xFFA
  3835                           tblptru	equ	0xFF8
  3836                           tblptrh	equ	0xFF7
  3837                           tblptrl	equ	0xFF6
  3838                           tablat	equ	0xFF5
  3839                           prodh	equ	0xFF4
  3840                           prodl	equ	0xFF3
  3841                           intcon	equ	0xFF2
  3842                           postinc0	equ	0xFEE
  3843                           fsr0h	equ	0xFEA
  3844                           fsr0l	equ	0xFE9
  3845                           wreg	equ	0xFE8
  3846                           fsr1h	equ	0xFE2
  3847                           fsr1l	equ	0xFE1
  3848                           bsr	equ	0xFE0
  3849                           indf2	equ	0xFDF
  3850                           postinc2	equ	0xFDE
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855                           	psect	intcode_body
  3856  010244                     __pintcode_body:
  3857                           	opt stack 18
  3858  010244                     int_func:
  3859                           	opt stack 18
  3860  010244  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  3861  010248  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  3862  01024C  CFE9 F00A          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  3863  010250  CFEA F00B          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  3864  010254  CFE1 F00C          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  3865  010258  CFE2 F00D          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  3866  01025C  CFD9 F00E          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  3867  010260  CFDA F00F          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  3868  010264  CFF3 F010          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  3869  010268  CFF4 F011          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  3870  01026C  CFF6 F012          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  3871  010270  CFF7 F013          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  3872  010274  CFF8 F014          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  3873  010278  CFF5 F015          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  3874  01027C  C035  F016         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  3875  010280  C036  F017         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  3876  010284  C037  F018         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  3877  010288  C038  F019         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  3878                           
  3879                           ;interrupt_manager.c: 74: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
  3880  01028C  010E               	movlb	14	; () banked
  3881  01028E  BF2C               	btfsc	44,7,b	;volatile
  3882                           
  3883                           ; BSR set to: 14
  3884  010290  AF36               	btfss	54,7,b	;volatile
  3885  010292  D00C               	goto	i2u84_49
  3886                           
  3887                           ; BSR set to: 14
  3888                           ;interrupt_manager.c: 75: {
  3889                           ;interrupt_manager.c: 76: EUSART2_RxDefaultInterruptHandler();
  3890  010294  D801               	call	i2u84_48
  3891  010296  D00A               	goto	i2u84_49
  3892  010298                     i2u84_48:
  3893  010298  0005               	push	
  3894  01029A  6EFA               	movwf	pclath,c
  3895  01029C  5030               	movf	_EUSART2_RxDefaultInterruptHandler,w,c
  3896  01029E  6EFD               	movwf	tosl,c
  3897  0102A0  5031               	movf	_EUSART2_RxDefaultInterruptHandler+1,w,c
  3898  0102A2  6EFE               	movwf	tosh,c
  3899  0102A4  5032               	movf	_EUSART2_RxDefaultInterruptHandler+2,w,c
  3900  0102A6  6EFF               	movwf	tosu,c
  3901  0102A8  50FA               	movf	pclath,w,c
  3902  0102AA  0012               	return		;indir
  3903  0102AC                     i2u84_49:
  3904                           
  3905                           ;interrupt_manager.c: 78: else
  3906                           ;interrupt_manager.c: 79: {
  3907                           
  3908                           ;interrupt_manager.c: 77: }
  3909  0102AC  C019  F038         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  3910  0102B0  C018  F037         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  3911  0102B4  C017  F036         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  3912  0102B8  C016  F035         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  3913  0102BC  C015  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  3914  0102C0  C014  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  3915  0102C4  C013  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  3916  0102C8  C012  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  3917  0102CC  C011  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  3918  0102D0  C010  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  3919  0102D4  C00F  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  3920  0102D8  C00E  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  3921  0102DC  C00D  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  3922  0102E0  C00C  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  3923  0102E4  C00B  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  3924  0102E8  C00A  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  3925  0102EC  C009  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  3926  0102F0  C008  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  3927  0102F4  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3928  0102F6  0011               	retfie		f
  3929  0102F8                     __end_of_INTERRUPT_InterruptManagerHigh:
  3930                           	opt stack 0
  3931                           tosu	equ	0xFFF
  3932                           tosh	equ	0xFFE
  3933                           tosl	equ	0xFFD
  3934                           pclatu	equ	0xFFB
  3935                           pclath	equ	0xFFA
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           prodh	equ	0xFF4
  3941                           prodl	equ	0xFF3
  3942                           intcon	equ	0xFF2
  3943                           postinc0	equ	0xFEE
  3944                           fsr0h	equ	0xFEA
  3945                           fsr0l	equ	0xFE9
  3946                           wreg	equ	0xFE8
  3947                           fsr1h	equ	0xFE2
  3948                           fsr1l	equ	0xFE1
  3949                           bsr	equ	0xFE0
  3950                           indf2	equ	0xFDF
  3951                           postinc2	equ	0xFDE
  3952                           fsr2h	equ	0xFDA
  3953                           fsr2l	equ	0xFD9
  3954                           status	equ	0xFD8
  3955                           
  3956 ;; *************** function _EUSART2_Receive_ISR *****************
  3957 ;; Defined at:
  3958 ;;		line 204 in file "mcc_generated_files/eusart2.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    3
  3979 ;; This function calls:
  3980 ;;		i2_printf
  3981 ;; This function is called by:
  3982 ;;		_EUSART2_Initialize
  3983 ;;		_INTERRUPT_InterruptManagerHigh
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text25
  3988  01039A                     __ptext25:
  3989                           	opt stack 0
  3990  01039A                     _EUSART2_Receive_ISR:
  3991                           	opt stack 18
  3992                           
  3993                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
  3994                           
  3995                           ;incstack = 0
  3996  01039A  010E               	movlb	14	; () banked
  3997  01039C  A3F5               	btfss	245,1,b	;volatile
  3998  01039E  D002               	goto	i2l399
  3999                           
  4000                           ; BSR set to: 14
  4001                           ;eusart2.c: 208: {
  4002                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
  4003  0103A0  99F5               	bcf	245,4,b	;volatile
  4004                           
  4005                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
  4006  0103A2  89F5               	bsf	245,4,b	;volatile
  4007  0103A4                     i2l399:
  4008                           
  4009                           ; BSR set to: 14
  4010                           ;eusart2.c: 213: }
  4011                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  4012                           
  4013                           ; BSR set to: 14
  4014  0103A4  5033               	movf	_eusart2RxHead,w,c	;volatile
  4015  0103A6  0D01               	mullw	1
  4016  0103A8  0E60               	movlw	low _eusart2RxBuffer
  4017  0103AA  24F3               	addwf	prodl,w,c
  4018  0103AC  6ED9               	movwf	fsr2l,c
  4019  0103AE  0E00               	movlw	high _eusart2RxBuffer
  4020  0103B0  20F4               	addwfc	prodh,w,c
  4021  0103B2  6EDA               	movwf	fsr2h,c
  4022  0103B4  CEF1 FFDF          	movff	3825,indf2	;volatile
  4023                           
  4024                           ; BSR set to: 14
  4025  0103B8  2A33               	incf	_eusart2RxHead,f,c	;volatile
  4026                           
  4027                           ; BSR set to: 14
  4028                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  4029  0103BA  0E3F               	movlw	63
  4030  0103BC  6433               	cpfsgt	_eusart2RxHead,c	;volatile
  4031  0103BE  D002               	goto	i2l400
  4032                           
  4033                           ; BSR set to: 14
  4034                           ;eusart2.c: 218: {
  4035                           ;eusart2.c: 219: eusart2RxHead = 0;
  4036  0103C0  0E00               	movlw	0
  4037  0103C2  6E33               	movwf	_eusart2RxHead,c	;volatile
  4038  0103C4                     i2l400:
  4039                           
  4040                           ; BSR set to: 14
  4041                           ;eusart2.c: 220: }
  4042                           ;eusart2.c: 221: eusart2RxCount++;
  4043                           
  4044                           ; BSR set to: 14
  4045  0103C4  0100               	movlb	0	; () banked
  4046  0103C6  2BA6               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
  4050  0103C8  0E0A               	movlw	10
  4051  0103CA  010E               	movlb	14	; () banked
  4052  0103CC  19F1               	xorwf	241,w,b	;volatile
  4053  0103CE  B4D8               	btfsc	status,2,c
  4054  0103D0  D004               	goto	i2u78_40
  4055                           
  4056                           ; BSR set to: 14
  4057  0103D2  0E0D               	movlw	13
  4058  0103D4  19F1               	xorwf	241,w,b	;volatile
  4059  0103D6  A4D8               	btfss	status,2,c
  4060  0103D8  D004               	goto	i2l401
  4061  0103DA                     i2u78_40:
  4062                           
  4063                           ; BSR set to: 14
  4064                           ;eusart2.c: 229: eusart2RxStringReady = 1;
  4065  0103DA  8034               	bsf	_eusart2RxStringReady/(0+8),_eusart2RxStringReady& (0+7),c	;volatile
  4066                           
  4067                           ; BSR set to: 14
  4068                           ;eusart2.c: 232: RC2REG = 0;
  4069  0103DC  0E00               	movlw	0
  4070  0103DE  6FF1               	movwf	241,b	;volatile
  4071                           
  4072                           ;eusart2.c: 234: }
  4073  0103E0  D001               	goto	i2l404
  4074  0103E2                     i2l401:
  4075                           
  4076                           ; BSR set to: 14
  4077                           ;eusart2.c: 236: else {
  4078                           ;eusart2.c: 238: eusart2RxStringReady = 0;
  4079  0103E2  9034               	bcf	_eusart2RxStringReady/(0+8),_eusart2RxStringReady& (0+7),c	;volatile
  4080  0103E4                     i2l404:
  4081                           
  4082                           ; BSR set to: 14
  4083                           ;eusart2.c: 240: }
  4084                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
  4085                           
  4086                           ; BSR set to: 14
  4087  0103E4  0E08               	movlw	8
  4088  0103E6  19F1               	xorwf	241,w,b	;volatile
  4089  0103E8  A4D8               	btfss	status,2,c
  4090  0103EA  0012               	return	
  4091                           
  4092                           ; BSR set to: 14
  4093                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
  4094  0103EC  5033               	movf	_eusart2RxHead,w,c	;volatile
  4095  0103EE  0D01               	mullw	1
  4096  0103F0  0E60               	movlw	low _eusart2RxBuffer
  4097  0103F2  24F3               	addwf	prodl,w,c
  4098  0103F4  6ED9               	movwf	fsr2l,c
  4099  0103F6  0E00               	movlw	high _eusart2RxBuffer
  4100  0103F8  20F4               	addwfc	prodh,w,c
  4101  0103FA  6EDA               	movwf	fsr2h,c
  4102  0103FC  0E00               	movlw	0
  4103  0103FE  6EDF               	movwf	indf2,c
  4104                           
  4105                           ; BSR set to: 14
  4106                           ;eusart2.c: 246: eusart2RxHead--;
  4107  010400  0633               	decf	_eusart2RxHead,f,c	;volatile
  4108                           
  4109                           ; BSR set to: 14
  4110                           ;eusart2.c: 249: printf("\033[K");
  4111  010402  0EFB               	movlw	low STR_1
  4112  010404  6E03               	movwf	i2printf@f,c
  4113  010406  0EFF               	movlw	high STR_1
  4114  010408  6E04               	movwf	i2printf@f+1,c
  4115  01040A  EC49  F083         	call	i2_printf	;wreg free
  4116                           
  4117                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
  4118  01040E  0100               	movlb	0	; () banked
  4119  010410  51A7               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  4120  010412  1833               	xorwf	_eusart2RxHead,w,c	;volatile
  4121  010414  B4D8               	btfsc	status,2,c
  4122  010416  D00B               	goto	i2l406
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
  4126  010418  5033               	movf	_eusart2RxHead,w,c	;volatile
  4127  01041A  0D01               	mullw	1
  4128  01041C  0E60               	movlw	low _eusart2RxBuffer
  4129  01041E  24F3               	addwf	prodl,w,c
  4130  010420  6ED9               	movwf	fsr2l,c
  4131  010422  0E00               	movlw	high _eusart2RxBuffer
  4132  010424  20F4               	addwfc	prodh,w,c
  4133  010426  6EDA               	movwf	fsr2h,c
  4134  010428  0E00               	movlw	0
  4135  01042A  6EDF               	movwf	indf2,c
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;eusart2.c: 254: eusart2RxHead--;
  4139  01042C  0633               	decf	_eusart2RxHead,f,c	;volatile
  4140  01042E                     i2l406:
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;eusart2.c: 256: }
  4144                           ;eusart2.c: 258: RC2REG = 0;
  4145                           
  4146                           ; BSR set to: 0
  4147  01042E  0E00               	movlw	0
  4148  010430  010E               	movlb	14	; () banked
  4149  010432  6FF1               	movwf	241,b	;volatile
  4150  010434  0012               	return	
  4151  010436                     __end_of_EUSART2_Receive_ISR:
  4152                           	opt stack 0
  4153                           tosu	equ	0xFFF
  4154                           tosh	equ	0xFFE
  4155                           tosl	equ	0xFFD
  4156                           pclatu	equ	0xFFB
  4157                           pclath	equ	0xFFA
  4158                           tblptru	equ	0xFF8
  4159                           tblptrh	equ	0xFF7
  4160                           tblptrl	equ	0xFF6
  4161                           tablat	equ	0xFF5
  4162                           prodh	equ	0xFF4
  4163                           prodl	equ	0xFF3
  4164                           intcon	equ	0xFF2
  4165                           postinc0	equ	0xFEE
  4166                           fsr0h	equ	0xFEA
  4167                           fsr0l	equ	0xFE9
  4168                           wreg	equ	0xFE8
  4169                           fsr1h	equ	0xFE2
  4170                           fsr1l	equ	0xFE1
  4171                           bsr	equ	0xFE0
  4172                           indf2	equ	0xFDF
  4173                           postinc2	equ	0xFDE
  4174                           fsr2h	equ	0xFDA
  4175                           fsr2l	equ	0xFD9
  4176                           status	equ	0xFD8
  4177                           
  4178 ;; *************** function i2_printf *****************
  4179 ;; Defined at:
  4180 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  f               2    2[COMRAM] PTR const unsigned char 
  4183 ;;		 -> STR_20(3), STR_19(221), STR_18(3), STR_16(3), 
  4184 ;;		 -> STR_15(15), STR_14(3), STR_11(4), STR_10(5), 
  4185 ;;		 -> STR_8(4), STR_7(5), STR_5(3), STR_4(372), 
  4186 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  printf          4    0        struct .
  4189 ;;  printf          3    0        PTR const unsigned char 
  4190 ;;  printf          2    4[COMRAM] PTR void [1]
  4191 ;;		 -> ?i2_printf(2), ?_printf(2), 
  4192 ;;  printf          2    0        unsigned int 
  4193 ;;  printf          2    0        unsigned int 
  4194 ;;  printf          1    6[COMRAM] char 
  4195 ;;  printf          1    0        unsigned char 
  4196 ;;  printf          1    0        char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  2    2[COMRAM] int 
  4199 ;; Registers used:
  4200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;Total ram usage:        5 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    2
  4213 ;; This function calls:
  4214 ;;		i2_putch
  4215 ;; This function is called by:
  4216 ;;		_EUSART2_Receive_ISR
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text26
  4221  010692                     __ptext26:
  4222                           	opt stack 0
  4223  010692                     i2_printf:
  4224                           	opt stack 18
  4225                           
  4226                           ;doprnt.c: 466: va_list ap;
  4227                           ;doprnt.c: 499: signed char c;
  4228                           ;doprnt.c: 506: signed char prec;
  4229                           ;doprnt.c: 508: unsigned char flag;
  4230                           ;doprnt.c: 523: union {
  4231                           ;doprnt.c: 524: unsigned long vd;
  4232                           ;doprnt.c: 525: double integ;
  4233                           ;doprnt.c: 526: } tmpval;
  4234                           ;doprnt.c: 528: unsigned int val;
  4235                           ;doprnt.c: 529: unsigned len;
  4236                           ;doprnt.c: 530: const char * cp;
  4237                           ;doprnt.c: 533: *ap = __va_start();
  4238                           
  4239                           ; BSR set to: 14
  4240                           ;incstack = 0
  4241  010692  0E05               	movlw	low (?i2_printf+2)
  4242  010694  6E05               	movwf	i2printf@ap,c
  4243  010696  0E00               	movlw	high (?i2_printf+2)
  4244  010698  6E06               	movwf	i2printf@ap+1,c
  4245                           
  4246                           ;doprnt.c: 536: while(c = *f++) {
  4247  01069A  D003               	goto	i2l476
  4248  01069C                     
  4249                           ;doprnt.c: 540: {
  4250                           ;doprnt.c: 541: (putch(c) );
  4251  01069C  5007               	movf	i2printf@c,w,c
  4252  01069E  ECF6  F083         	call	i2_putch
  4253  0106A2                     i2l476:
  4254  0106A2  C003  FFF6         	movff	i2printf@f,tblptrl
  4255  0106A6  C004  FFF7         	movff	i2printf@f+1,tblptrh
  4256  0106AA  4A03               	infsnz	i2printf@f,f,c
  4257  0106AC  2A04               	incf	i2printf@f+1,f,c
  4258  0106AE                     	if	0	;tblptru may be non-zero
  4259  0106AE                     	endif
  4260  0106AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4261  0106AE  0E00               	movlw	low (__mediumconst shr (0+16))
  4262  0106B0  6EF8               	movwf	tblptru,c
  4263  0106B2                     	endif
  4264  0106B2  0008               	tblrd		*
  4265  0106B4  CFF5 F007          	movff	tablat,i2printf@c
  4266  0106B8  5007               	movf	i2printf@c,w,c
  4267  0106BA  B4D8               	btfsc	status,2,c
  4268  0106BC  0012               	return	
  4269  0106BE  D7EE               	goto	i2l477
  4270  0106C0                     __end_ofi2_printf:
  4271                           	opt stack 0
  4272                           tosu	equ	0xFFF
  4273                           tosh	equ	0xFFE
  4274                           tosl	equ	0xFFD
  4275                           pclatu	equ	0xFFB
  4276                           pclath	equ	0xFFA
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           prodh	equ	0xFF4
  4282                           prodl	equ	0xFF3
  4283                           intcon	equ	0xFF2
  4284                           postinc0	equ	0xFEE
  4285                           fsr0h	equ	0xFEA
  4286                           fsr0l	equ	0xFE9
  4287                           wreg	equ	0xFE8
  4288                           fsr1h	equ	0xFE2
  4289                           fsr1l	equ	0xFE1
  4290                           bsr	equ	0xFE0
  4291                           indf2	equ	0xFDF
  4292                           postinc2	equ	0xFDE
  4293                           fsr2h	equ	0xFDA
  4294                           fsr2l	equ	0xFD9
  4295                           status	equ	0xFD8
  4296                           
  4297 ;; *************** function i2_putch *****************
  4298 ;; Defined at:
  4299 ;;		line 180 in file "mcc_generated_files/eusart2.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  txData          1    wreg     unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  txData          1    1[COMRAM] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;Total ram usage:        1 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    1
  4320 ;; This function calls:
  4321 ;;		i2_EUSART2_Write
  4322 ;; This function is called by:
  4323 ;;		i2_printf
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text27
  4328  0107EC                     __ptext27:
  4329                           	opt stack 0
  4330  0107EC                     i2_putch:
  4331                           	opt stack 18
  4332                           
  4333                           ;incstack = 0
  4334                           ;i2putch@txData stored from wreg
  4335  0107EC  6E02               	movwf	i2putch@txData,c
  4336                           
  4337                           ;eusart2.c: 182: EUSART2_Write(txData);
  4338  0107EE  5002               	movf	i2putch@txData,w,c
  4339  0107F0  EC98  F082         	call	i2_EUSART2_Write
  4340  0107F4  0012               	return		;funcret
  4341  0107F6                     __end_ofi2_putch:
  4342                           	opt stack 0
  4343                           tosu	equ	0xFFF
  4344                           tosh	equ	0xFFE
  4345                           tosl	equ	0xFFD
  4346                           pclatu	equ	0xFFB
  4347                           pclath	equ	0xFFA
  4348                           tblptru	equ	0xFF8
  4349                           tblptrh	equ	0xFF7
  4350                           tblptrl	equ	0xFF6
  4351                           tablat	equ	0xFF5
  4352                           prodh	equ	0xFF4
  4353                           prodl	equ	0xFF3
  4354                           intcon	equ	0xFF2
  4355                           postinc0	equ	0xFEE
  4356                           fsr0h	equ	0xFEA
  4357                           fsr0l	equ	0xFE9
  4358                           wreg	equ	0xFE8
  4359                           fsr1h	equ	0xFE2
  4360                           fsr1l	equ	0xFE1
  4361                           bsr	equ	0xFE0
  4362                           indf2	equ	0xFDF
  4363                           postinc2	equ	0xFDE
  4364                           fsr2h	equ	0xFDA
  4365                           fsr2l	equ	0xFD9
  4366                           status	equ	0xFD8
  4367                           
  4368 ;; *************** function i2_EUSART2_Write *****************
  4369 ;; Defined at:
  4370 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  txData          1    wreg     unsigned char 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  txData          1    0[COMRAM] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;Total ram usage:        1 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		i2_putch
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text28
  4398  010530                     __ptext28:
  4399                           	opt stack 0
  4400  010530                     i2_EUSART2_Write:
  4401                           	opt stack 18
  4402                           
  4403                           ;incstack = 0
  4404                           ;i2EUSART2_Write@txData stored from wreg
  4405  010530  6E01               	movwf	i2EUSART2_Write@txData,c
  4406                           
  4407                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
  4408  010532  D001               	goto	i2l378
  4409  010534                     i2l379:
  4410                           
  4411                           ; BSR set to: 0
  4412  010534  0004               	clrwdt		;# 
  4413  010536                     i2l378:
  4414  010536  0100               	movlb	0	; () banked
  4415  010538  51A8               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  4416  01053A  B4D8               	btfsc	status,2,c
  4417  01053C  D7FB               	goto	i2l379
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;eusart2.c: 156: }
  4421                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
  4422  01053E  010E               	movlb	14	; () banked
  4423  010540  BD2C               	btfsc	44,6,b	;volatile
  4424  010542  D003               	goto	i2l381
  4425                           
  4426                           ; BSR set to: 14
  4427                           ;eusart2.c: 159: {
  4428                           ;eusart2.c: 160: TX2REG = txData;
  4429  010544  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
  4430                           
  4431                           ;eusart2.c: 161: }
  4432  010548  D013               	goto	i2l382
  4433  01054A                     i2l381:
  4434                           
  4435                           ; BSR set to: 14
  4436                           ;eusart2.c: 162: else
  4437                           ;eusart2.c: 163: {
  4438                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
  4439  01054A  9D2C               	bcf	44,6,b	;volatile
  4440                           
  4441                           ; BSR set to: 14
  4442                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
  4443  01054C  0100               	movlb	0	; () banked
  4444  01054E  51AA               	movf	_eusart2TxHead& (0+255),w,b	;volatile
  4445  010550  0D01               	mullw	1
  4446  010552  0E00               	movlw	low _eusart2TxBuffer
  4447  010554  24F3               	addwf	prodl,w,c
  4448  010556  6ED9               	movwf	fsr2l,c
  4449  010558  0E01               	movlw	high _eusart2TxBuffer
  4450  01055A  20F4               	addwfc	prodh,w,c
  4451  01055C  6EDA               	movwf	fsr2h,c
  4452  01055E  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
  4453                           
  4454                           ; BSR set to: 0
  4455  010562  2BAA               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  4459  010564  0E3F               	movlw	63
  4460  010566  65AA               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  4461  010568  D002               	goto	i2l383
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;eusart2.c: 167: {
  4465                           ;eusart2.c: 168: eusart2TxHead = 0;
  4466  01056A  0E00               	movlw	0
  4467  01056C  6FAA               	movwf	_eusart2TxHead& (0+255),b	;volatile
  4468  01056E                     i2l383:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;eusart2.c: 169: }
  4472                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
  4473                           
  4474                           ; BSR set to: 0
  4475  01056E  07A8               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  4476  010570                     i2l382:
  4477                           
  4478                           ;eusart2.c: 171: }
  4479                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
  4480                           
  4481                           ; BSR set to: 0
  4482  010570  010E               	movlb	14	; () banked
  4483  010572  8D2C               	bsf	44,6,b	;volatile
  4484                           
  4485                           ; BSR set to: 14
  4486  010574  0012               	return		;funcret
  4487  010576                     __end_ofi2_EUSART2_Write:
  4488                           	opt stack 0
  4489                           tosu	equ	0xFFF
  4490                           tosh	equ	0xFFE
  4491                           tosl	equ	0xFFD
  4492                           pclatu	equ	0xFFB
  4493                           pclath	equ	0xFFA
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           prodh	equ	0xFF4
  4499                           prodl	equ	0xFF3
  4500                           intcon	equ	0xFF2
  4501                           postinc0	equ	0xFEE
  4502                           fsr0h	equ	0xFEA
  4503                           fsr0l	equ	0xFE9
  4504                           wreg	equ	0xFE8
  4505                           fsr1h	equ	0xFE2
  4506                           fsr1l	equ	0xFE1
  4507                           bsr	equ	0xFE0
  4508                           indf2	equ	0xFDF
  4509                           postinc2	equ	0xFDE
  4510                           fsr2h	equ	0xFDA
  4511                           fsr2l	equ	0xFD9
  4512                           status	equ	0xFD8
  4513                           tosu	equ	0xFFF
  4514                           tosh	equ	0xFFE
  4515                           tosl	equ	0xFFD
  4516                           pclatu	equ	0xFFB
  4517                           pclath	equ	0xFFA
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           intcon	equ	0xFF2
  4525                           postinc0	equ	0xFEE
  4526                           fsr0h	equ	0xFEA
  4527                           fsr0l	equ	0xFE9
  4528                           wreg	equ	0xFE8
  4529                           fsr1h	equ	0xFE2
  4530                           fsr1l	equ	0xFE1
  4531                           bsr	equ	0xFE0
  4532                           indf2	equ	0xFDF
  4533                           postinc2	equ	0xFDE
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           status	equ	0xFD8
  4537                           
  4538                           	psect	text29
  4539  000000                     __ptext29:
  4540                           	opt stack 0
  4541                           tosu	equ	0xFFF
  4542                           tosh	equ	0xFFE
  4543                           tosl	equ	0xFFD
  4544                           pclatu	equ	0xFFB
  4545                           pclath	equ	0xFFA
  4546                           tblptru	equ	0xFF8
  4547                           tblptrh	equ	0xFF7
  4548                           tblptrl	equ	0xFF6
  4549                           tablat	equ	0xFF5
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           intcon	equ	0xFF2
  4553                           postinc0	equ	0xFEE
  4554                           fsr0h	equ	0xFEA
  4555                           fsr0l	equ	0xFE9
  4556                           wreg	equ	0xFE8
  4557                           fsr1h	equ	0xFE2
  4558                           fsr1l	equ	0xFE1
  4559                           bsr	equ	0xFE0
  4560                           indf2	equ	0xFDF
  4561                           postinc2	equ	0xFDE
  4562                           fsr2h	equ	0xFDA
  4563                           fsr2l	equ	0xFD9
  4564                           status	equ	0xFD8
  4565                           
  4566                           	psect	rparam
  4567  0000                     tosu	equ	0xFFF
  4568                           tosh	equ	0xFFE
  4569                           tosl	equ	0xFFD
  4570                           pclatu	equ	0xFFB
  4571                           pclath	equ	0xFFA
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           postinc0	equ	0xFEE
  4580                           fsr0h	equ	0xFEA
  4581                           fsr0l	equ	0xFE9
  4582                           wreg	equ	0xFE8
  4583                           fsr1h	equ	0xFE2
  4584                           fsr1l	equ	0xFE1
  4585                           bsr	equ	0xFE0
  4586                           indf2	equ	0xFDF
  4587                           postinc2	equ	0xFDE
  4588                           fsr2h	equ	0xFDA
  4589                           fsr2l	equ	0xFD9
  4590                           status	equ	0xFD8
  4591                           
  4592                           	psect	temp
  4593  000035                     btemp:
  4594                           	opt stack 0
  4595  000035                     	ds	1
  4596  0000                     int$flags	set	btemp
  4597  0000                     wtemp6	set	btemp+1
  4598                           tosu	equ	0xFFF
  4599                           tosh	equ	0xFFE
  4600                           tosl	equ	0xFFD
  4601                           pclatu	equ	0xFFB
  4602                           pclath	equ	0xFFA
  4603                           tblptru	equ	0xFF8
  4604                           tblptrh	equ	0xFF7
  4605                           tblptrl	equ	0xFF6
  4606                           tablat	equ	0xFF5
  4607                           prodh	equ	0xFF4
  4608                           prodl	equ	0xFF3
  4609                           intcon	equ	0xFF2
  4610                           postinc0	equ	0xFEE
  4611                           fsr0h	equ	0xFEA
  4612                           fsr0l	equ	0xFE9
  4613                           wreg	equ	0xFE8
  4614                           fsr1h	equ	0xFE2
  4615                           fsr1l	equ	0xFE1
  4616                           bsr	equ	0xFE0
  4617                           indf2	equ	0xFDF
  4618                           postinc2	equ	0xFDE
  4619                           fsr2h	equ	0xFDA
  4620                           fsr2l	equ	0xFD9
  4621                           status	equ	0xFD8


Data Sizes:
    Strings     648
    Constant    0
    Data        0
    BSS         207
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      52
    BANK0           160     18     157
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_13(CODE[4]), STR_12(CODE[6]), STR_9(CODE[6]), 
		 -> STR_6(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 372
		 -> STR_20(CODE[3]), STR_19(CODE[221]), STR_18(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[15]), STR_14(CODE[3]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_8(CODE[4]), STR_7(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), heartbeatTimerCallback(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), heartbeatTimerCallback(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2_putch
    i2_putch->i2_EUSART2_Write

Critical Paths under _main in BANK0

    _main->_ringBufferPull
    _ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_printf
    _printf->_putch
    _putch->_EUSART2_Write
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3792
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
                     _ringBufferPull
 ---------------------------------------------------------------------------------
 (1) _ringBufferPull                                       9     9      0    3128
                                              9 BANK0      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     318
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        2     0      2    2572
                                              7 BANK0      2     0      2
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4     851
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _printf                                              18    16      2    1476
                                              2 BANK0      5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                              1 BANK0      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     453
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerLow                       21    21      0       0
                                             26 COMRAM    21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (8) _heartbeatTimerCallback                               1     1      0       0
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerHigh                      18    18      0     138
                                              7 COMRAM    18    18      0
                   Absolute function *
                _EUSART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Receive_ISR                                 0     0      0     138
                           i2_printf
 ---------------------------------------------------------------------------------
 (11) i2_printf                                           18    16      2     138
                                              2 COMRAM     5     3      2
                            i2_putch
 ---------------------------------------------------------------------------------
 (12) i2_putch                                             1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (13) i2_EUSART2_Write                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _printf
         _putch
           _EUSART2_Write
       _strcmp
     _strlen

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
     i2_printf
       i2_putch
         i2_EUSART2_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      9D       5       98.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2F      34       1       55.3%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     111       8        0.0%
DATA                 0      0     111       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Oct 27 14:31:46 2018

                                  __CFG_CP$OFF 000000                                             l47 0788  
                                           l78 072E                                             bsr 000FE0  
               __end_of_heartbeatTimerCallback 0756                                            l440 0188  
                                          l441 016C                                            l371 0580  
                                          l443 01D0                                            l372 057E  
                                          l460 003E                                            l444 01A2  
                                          l381 0504                                            l374 05A8  
                                          l382 052A                                            l462 007A  
                                          l438 014C                                            l383 0528  
                                          l464 00E2                                            l378 04F0  
                                          l379 04EE                                            l476 0640  
                                          l477 063A                                   __CFG_CPD$OFF 000000  
                                          _PR6 000FB0                                            u540 04DC  
                      __size_of_PMD_Initialize 001C                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                      __size_of_ringBufferPull 0118                                   __CFG_LVP$OFF 000000  
                                 __CFG_ZCD$OFF 000000                                           l1027 04A4  
                                         l1035 05CA                                           l1028 049A  
                                         l1036 05C4                                           l1941 013C  
                                         l1951 0162                                           STR_1 FFFB  
                                         STR_2 FFEE                                           STR_3 FFF7  
                                         STR_4 FD77                                           STR_6 FFE3  
                                         STR_7 FFEE                                           STR_8 FFF7  
                                         STR_9 FFDD                                           u1000 00B8  
                                         u1030 0162                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 0008                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 04E8                                           _main 0714  
                                         _line 00AB                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 0035  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00F4                   __end_of_EUSART2_Transmit_ISR 062E  
                              __end_ofi2_putch 07F6                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                                  __CFG_SCANE$ON 000000  
                     __size_ofi2_EUSART2_Write 0046                 __size_of_OSCILLATOR_Initialize 001C  
                          ringBufferPull@index 00FB                  __end_of_OSCILLATOR_Initialize 078E  
                                        ?_main 0001                                          STR_10 FFEE  
                                        STR_11 FFF7                                          STR_20 FEE8  
                                        STR_12 FFD7                                          STR_13 FFF3  
                                        STR_14 FEE8                                          STR_15 FFC8  
                                        STR_16 FEE8                                          STR_17 FFE9  
                                        STR_18 FEE8                                          STR_19 FEEB  
                                        _T6CON 000FB1                                 __CFG_DEBUG$OFF 000000  
                                        _T6HLT 000FB2                                          i1l219 007C  
                                        i2l400 03C4                                          i2l401 03E2  
                                        i1l393 0628                                          i1l394 0624  
                                        i2l404 03E4                                          i2l406 042E  
                                        _T6TMR 000FAF                                          i2l381 054A  
                                        i2l382 0570                                          i2l383 056E  
                                        i2l378 0536                                          _T6RST 000FB4  
                                        i2l379 0534                                          i2l476 06A2  
                                        i2l477 069C                                          i2l399 03A4  
                                        _OSCEN 000E47                                          _TRISA 000F81  
                                        _TRISB 000F82                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                                  __CFG_WRT4$OFF 000000  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 00EB                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR6_ISR 0714                                 __CFG_EBTRB$OFF 000000  
                           __CFG_MCLRE$EXTMCLR 000000                                          _putch 07A8  
                               __pbitbssCOMRAM 01A0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                                          tablat 000FF5  
                               ??_EUSART2_Read 00EB                                          status 000FD8  
                                        wtemp6 0036                 ?_INTERRUPT_InterruptManagerLow 0001  
                             __end_ofi2_printf 06C0                 ??_TMR6_DefaultInterruptHandler 001A  
        __end_of_EUSART2_SetTxInterruptHandler 07D2         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 07C4                                __initialization 06C0  
                                 __end_of_main 0738                                     i2printf@ap 0005  
                        __end_of_ringBufferLUT 012C                                         ??_main 00FD  
                                __activetblptr 000003                                _TMR6_Initialize 0660  
                   __end_of_EUSART2_Initialize 0498                       _eusart2TxBufferRemaining 00A8  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                                         _RC2REG 000EF1  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         _RG7PPS 000E89  
                                i2putch@txData 0002                                         _OSCFRQ 000E49  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                               __CFG_PWRTE$OFF 000000                                 __CFG_XINST$OFF 000000  
                               __CFG_STVREN$ON 000000                                         clear_0 06C6  
                                       clear_1 06D2                           _eusart2RxStringReady 01A0  
                                       _printf 062E                                         _strcmp 0498  
                                       _strlen 05BA                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize 0756                                   __mediumconst FD76  
                               _ringBufferPull 012C                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 05F8                                ??_EUSART2_Write 00EB  
     TMR6_SetInterruptHandler@InterruptHandler 00EB                  __size_of_INTERRUPT_Initialize 000C  
                              _eusart2RxBuffer 0060               ??_INTERRUPT_InterruptManagerHigh 0008  
              ?_INTERRUPT_InterruptManagerHigh 0001                              _SYSTEM_Initialize 078E  
                              _eusart2TxBuffer 0100                                     __accesstop 0060  
                      __end_of__initialization 06E2                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                                 __pcstackCOMRAM 0001  
                          ??_SYSTEM_Initialize 00EE                                      ?_TMR6_ISR 0001  
               ?_EUSART2_SetTxInterruptHandler 00EB                                  __end_of_putch 07B6  
                      __end_of_TMR6_Initialize 0692                         __end_of_PMD_Initialize 0772  
                         __end_of_EUSART2_Read 05BA                         __end_of_ringBufferPull 0244  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0003  
                      ringBufferPull@index_984 00F9                      __end_of_SYSTEM_Initialize 07A8  
                                      ??_putch 00EC                                  _eusart2RxHead 0033  
                                _eusart2TxHead 00AA                                     __pbssBANK0 0060  
                                   __pbssBANK1 0100                                  _eusart2RxTail 00A7  
                                _eusart2TxTail 00A9                          EUSART2_Read@readValue 00EB  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 07C4  
                                   ??_TMR6_ISR 001B                                        ?_printf 00ED  
                              ?_PMD_Initialize 0001                                        ?_strcmp 00EB  
                                      ?_strlen 00EB                                ?_ringBufferPull 0001  
                                      _SP2BRGH 000EF4                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 0436                                        i1u55_20 0742  
                                      i1u56_28 0744                                        i1u72_28 0700  
                                   ??i2_printf 0005                                        _OSCTUNE 000E48  
                                      i1u89_28 0086                                        i1u89_29 009C  
                                      i2u84_48 0298                                        i2u84_49 02AC  
                                      i2u78_40 03DA                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                                        i2_putch 07EC  
                                      __Hparam 0000                                        __Lparam 0000  
                                      __pcinit 06C0                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                                        __ptext0 0714  
                                      __ptext1 012C                                        __ptext2 05BA  
                                      __ptext3 0000                                        __ptext4 0498  
                                      __ptext5 062E                                        __ptext6 07A8  
                                      __ptext7 04E8                                        __ptext8 0576  
                                      __ptext9 078E                                __size_of_printf 0032  
                              __size_of_strcmp 0050                                __size_of_strlen 003E  
                        _OSCILLATOR_Initialize 0772                         ??_EUSART2_Transmit_ISR 001A  
                     ??_PIN_MANAGER_Initialize 00EB                                      _T6CONbits 000FB1  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 001A  
                        i2EUSART2_Write@txData 0001                                 __pintcode_body 0244  
                         end_of_initialization 06E2                                        int_func 0244  
                                    _T6RSTbits 000FB4                             _EUSART2_Initialize 0436  
                              i2_EUSART2_Write 0530                                        printf@c 00F1  
                                      printf@f 00ED                       ??_heartbeatTimerCallback 001A  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0044                                        strcmp@r 00F0  
                        __CFG_WDTCPS$WDTCPS_11 000000                            ?_EUSART2_Initialize 0001  
                                      strlen@s 00EB                       _TMR6_SetInterruptHandler 07B6  
                         __CFG_WDTCCS$LFINTOSC 000000                               __CFG_FEXTOSC$ECH 000000  
                         ??_EUSART2_Initialize 00EE                         __size_of_ringBufferLUT 012C  
                                 _EUSART2_Read 0576                       ringBufferPull@charNumber 00F7  
                 __end_of_INTERRUPT_Initialize 07EC                              __size_of_TMR6_ISR 0028  
                       ?_OSCILLATOR_Initialize 0001                                 __end_of_printf 0660  
                               __end_of_strcmp 04E8                                 __end_of_strlen 05F8  
                          start_initialization 06C0                __size_of_PIN_MANAGER_Initialize 00A2  
                                    i2printf@c 0007                                      i2printf@f 0003  
EUSART2_SetRxInterruptHandler@interruptHandler 00EB  EUSART2_SetTxInterruptHandler@interruptHandler 00EB  
                                  putch@txData 00EC                              __size_ofi2_printf 002E  
                        __end_of_EUSART2_Write 0530                        __end_ofi2_EUSART2_Write 0576  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 00EB  
              __size_of_heartbeatTimerCallback 001E                               ??_ringBufferPull 00F4  
                                _ringBufferLUT 0000                                       ??_printf 00EF  
                                     ??_strcmp 00EF                                       ??_strlen 00ED  
                               _eusart2RxCount 00A6                                    __pbssCOMRAM 0030  
                                __pcstackBANK0 00EB                            EUSART2_Write@txData 00EB  
              ??_EUSART2_SetRxInterruptHandler 00EE                                       ?i2_putch 0001  
                        _TMR6_InterruptHandler 00A0                         _PIN_MANAGER_Initialize 02F8  
                                    __pintcode 0008                                  __pmediumconst FD76  
                               ?_ringBufferLUT 00F2              _EUSART2_TxDefaultInterruptHandler 00A3  
                                  __pintcodelo 0018                                       _BAUD2CON 000EF7  
                             __CFG_WDTE$NSLEEP 000000                         _heartbeatTimerCallback 0738  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 07E0  
                                     _T6CLKCON 000FB3                   __size_of_EUSART2_Receive_ISR 009C  
                             ?i2_EUSART2_Write 0001                                       _LATFbits 000F7E  
                                     _IPR3bits 000E22                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                   ??_TMR6_SetInterruptHandler 00EE                                       _TMR6_ISR 06EC  
                __size_of_EUSART2_Transmit_ISR 0036                                       i2_printf 0692  
                     __size_of_TMR6_Initialize 0032                          ?_INTERRUPT_Initialize 0001  
                             __size_ofi2_putch 000A                                       __Hrparam 0000  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 07E0  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 07D2  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 00F4                        ??_OSCILLATOR_Initialize 00EB  
              ??_INTERRUPT_InterruptManagerLow 001B                                       __ptext10 0660  
                                     __ptext11 07B6                                       __ptext20 06EC  
                                     __ptext12 0756                                       __ptext21 07F6  
                                     __ptext13 02F8                                       __ptext22 0738  
                                     __ptext14 0772                                       __ptext23 05F8  
                                     __ptext15 07E0                                       __ptext16 0436  
                                     __ptext25 039A                                       __ptext17 07C4  
                                     __ptext26 0692                                       __ptext18 07D2  
                                     __ptext27 07EC                                       __ptext28 0530  
                                     __ptext29 0000                    __size_of_EUSART2_Initialize 0062  
                                __size_of_main 0024                           __CFG_WDTCWS$WDTCWS_7 000000  
                           __CFG_BORV$VBOR_190 000000                                     _RC2STAbits 000EF5  
                                     int$flags 0035                                     _INTCONbits 000FF2  
                       ??_INTERRUPT_Initialize 00EB           __end_of_TMR6_DefaultInterruptHandler 07F8  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 07F6  
                                     intlevel1 0000                                       intlevel2 0000  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 00EE  
                            __CFG_CLKOUTEN$OFF 000000                                       printf@ap 00EF  
               ?_EUSART2_SetRxInterruptHandler 00EB                         __size_of_EUSART2_Write 0048  
                          _EUSART2_Receive_ISR 039A         __end_of_INTERRUPT_InterruptManagerHigh 02F8  
      __size_of_INTERRUPT_InterruptManagerHigh 02F0                 _INTERRUPT_InterruptManagerHigh 0008  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 00EB  
                                     strcmp@s2 00ED                              ringBufferLUT@line 00F2  
                                     strlen@cp 00EF                                     _TX2STAbits 000EF6  
        __end_of_INTERRUPT_InterruptManagerLow 00F4         __size_of_INTERRUPT_InterruptManagerLow 00DC  
                _INTERRUPT_InterruptManagerLow 0018                 __end_of_PIN_MANAGER_Initialize 039A  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 00EE  
                         ?_EUSART2_Receive_ISR 0001              _EUSART2_RxDefaultInterruptHandler 0030  
